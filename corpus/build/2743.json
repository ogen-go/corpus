{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/disit/snap4city"
		},
		"file": {
			"name": "wallet-openapiv3.yaml",
			"path": "swagger/internal/wallet-openapiv3.yaml",
			"content": "openapi: 3.0.1\ninfo: \n  title: Wallet API\n  version: '1.0'\nservers:\n  - url: http://wallet.km4city.org\npaths:\n  /wallet/api/v1/registration:\n    post:\n      tags: [User Management]\n      summary: Registration\n      description: \"Register a new user in the system, and assign her a given _username_ (a valid email) and _password_. An optional _lang_ can be specified (default is _en_). If the registration is successfull, the API returns HTTP 200 and _result_ set to _true_. If the registration fails (username is null, not available, too short, not a valid e-mail, or password is empty or non-matching), the API again returns HTTP 200 but _result_ is set to _false_, and the field _message_ contains the error message, written in English or in the requested language.\"\n      requestBody:\n        $ref: '#/components/requestBodies/walletRegistration'\n      responses:\n        200:\n          $ref: '#/components/responses/walletRegistration'\n        500: \n          description: \"Internal Server Error (unexpected error).\"\n        501:\n          description: \"Not Implemented (client update required).\"\n  /wallet/api/v1/signin:\n    post:\n      tags: [User Management]\n      summary: Sign in\n      description: \"Log in with the given _username_ and _password_. An optional _remember-me_ parameter can be submitted (default is _off_). If the sign in is successfull, the API returns HTTP 200, and a session cookie _JSESSIONID_. If _remember-me_ was set to _on_, a persistent cookie is also provided back. If the sign in fails (invalid username/password), the API returns HTTP 401.\"\n      requestBody:\n        $ref: '#/components/requestBodies/walletSignin'\n      responses:\n        200:\n          description: \"Sign in successfull. Cookies are sent.\"\n        401:\n          description: \"Sign in failed (invalid username/password).\"\n        500: \n          description: \"Internal Server Error (unexpected error).\"\n        501:\n          description: \"Not Implemented (client update required).\"\n  /wallet/api/v1/signinsocial:\n    post:\n      tags: [User Management]\n      summary: Social sign in\n      description: Log in with an access token. An optional _remember-me_ parameter can be submitted (default is _off_). An optional _lang_ parameter can be submitted (default is _en_). The API checks with social oauth2 if the access token is valid. If it is, it returns HTTP 200, a session-cookie _JSESSIONID_ and a persistent-cookie if it is the case (_remember-me_ set to _on_). If the sign in fails (invalid _accesstoken_, unrecognized _social_name_) it returns HTTP 401, _result_ set to _false_, and _message_ set to the error message. The expected format for the access token is \"social_name:accesstoken\". Allowed values for _social_name_ are \"google\", \"facebook\".\n      requestBody:\n        $ref: '#/components/requestBodies/walletSocialSignin'\n      responses:\n        200:\n          description: \"Sign in successfull. Cookies are set.\"\n        401:\n          $ref: '#/components/responses/walletSocialSigninFailed'\n        500: \n          description: \"Internal Server Error (unexpected error).\"\n        501:\n          description: \"Not Implemented (client update required).\"  \n  /wallet/api/v1/logout:\n    post:\n      tags: [User Management]\n      summary: Logout\n      description: The API removes the session cookie for the user specified in the _JSESSIONID_ cookie. Persistent cookies are also removed if any.\n      responses:\n        200:\n          description: \"User is logged out.\"\n        500: \n          description: \"Internal Server Error (unexpected error).\"\n        501:\n          description: \"Not Implemented (client update required).\"    \n  /wallet/api/v1/delete:\n    post:\n      tags: [User Management]\n      summary: Delete\n      description: The API deletes the user specified in the _JSESSIONID_ cookie, and all data about her.\n      responses:\n        200:\n          $ref: '#/components/responses/walletDelete'\n        500: \n          description: \"Internal Server Error (unexpected error).\"\n        501:\n          description: \"Not Implemented (client update required).\"                 \n  /wallet/api/v1/deviceid:\n    post:\n      tags: [Device Management]\n      summary: Add device\n      description: The API adds the given _device_id_ to the user specified by the _JSESSIONID_ cookie. An optional _lang_ can be specified (default is _en_). If the adding is successfull, the API returns HTTP 200 and _result_ set to _true_. If cookies are not embedded in the request, the API returns HTTP 302. If cookies do not allow a successful login, the API returns HTTP 401.\n      requestBody:\n        $ref: '#/components/requestBodies/walletDeviceID'\n      responses:\n        200:\n          $ref: '#/components/responses/walletDeviceID'\n        302:\n          description: \"Cookies cannot be found in user request.\"\n        401:\n          description: \"Cookies do not allow a successful authentication.\"\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"  \n  /api/v1/lastlogin:\n    get:\n      tags: [Device Management]\n      summary: Get last login\n      description: Get the date of the last login of the user specified in the _JSESSIONID_ cookie. An optional _lang_ parameter can be submitted (default is _en_). In case of success, the API returns HTTP 200 and the timestamp in milliseconds. If cookies are not embedded in the request, the API returns HTTP 302. If cookies do not allow a successful login, the API returns HTTP 401.\n      parameters:\n        - $ref: '#/components/parameters/lang'\n      responses:\n        200:\n          $ref: '#/components/responses/walletLastLogin'\n        302:\n          description: \"Cookies cannot be found in user request.\"\n        401:\n          description: \"Cookies do not allow a successful authentication.\"\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"  \n  /api/v1/welcomemsg:\n    get:\n      tags: [Device Management]\n      summary: Get welcome message\n      description: Get the welcome message for the user specified in the _JSESSIONID_ cookie. An optional _lang_ parameter can be submitted (default is _en_). In case of success, the API returns HTTP 200 and a positional list of text strings. If cookies are not embedded in the request, the API returns HTTP 302. If cookies do not allow a successful login, the API returns HTTP 401.\n      parameters:\n        - $ref: '#/components/parameters/lang'\n      responses:\n        200:\n          $ref: '#/components/responses/walletWelcomemsg'\n        302:\n          description: \"Cookies cannot be found in user request.\"\n        401:\n          description: \"Cookies do not allow a successful authentication.\"\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"   \n  /api/v1/forgotpwd:\n    post:\n      tags: [Password Management]\n      summary: Forgot password\n      description: |\n        Send an e-mail to the specified _user_email_ to change password. An optional _lang_ parameter can be submitted (default is _en_). The _appid_ allows to customize the message.\n\n        If the operation completes successfully, the API returns HTTP 200, _result_ set to _true_, and a confirmation message in the _message_ field. Otherwise (e-mail not found, e-mail not reachable), the API returns HTTP 200 again, but _result_ is set to _false_, and an error message can be found in the _message_ field, written in English or in the required language if any.\n\n        The e-mail includes a link where the following can be found: (i) a unique _token_ available for 24 hours; (ii) an _id_ to enforce security; (iii) a _from_ parameter set to _changepwd_. The user is required to follow the link and fill in her new password.\n      requestBody:\n        $ref: '#/components/requestBodies/walletForgotPwd'\n      responses:\n        200:\n          $ref: '#/components/responses/walletForgotPwd'\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"        \n  /api/v1/savepwd:\n    post:\n      tags: [Password Management]\n      summary: Save new password\n      description: |\n        Store a new _password_ for the user specified in the parameter _id_. An optional _lang_ parameter can be submitted (default is _en_). An optional _remember-me_ parameter can be submitted (default is _off_). The API checks if the specified _token_ is valid for the specified user. If it is, the API returns HTTP 200, _result_ set to _true_, a confirmation message in the _message_ field, a session cookie _JSESSIONID_. If _remember-me_ was set to _on_, a persistent cookie is also delivered. If the operation fails instead (expired or invalid token, empty password), the API returns a HTTP 200, _result_ set to _false_, and an error message in the _message_ field, written in English or in the requested language if any.\n      requestBody:\n        $ref: '#/components/requestBodies/walletSavePwd'\n      responses:\n        200:\n          $ref: '#/components/responses/walletSavePwd'\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"    \n  /api/v1/feedback:\n    post:\n      tags: [Feedback Management]\n      summary: Feedback a received token\n      description: Tag a _token_ as _CONFIRMED_. An optional _lang_ parameter can be submitted (default is _en_). The API checks if the specified _token_ is valid. If it is, the API returns HTTP 200, and _result_ set to _true_. Otherwise, the API returns a HTTP 200 again, but _result_ is set to _false_, and an error message can be found in the _message_ field, written in English or in the required language if any. If cookies are not embedded in the request, the API returns HTTP 302. If cookies do not allow a successful login, the API returns HTTP 401.\n      requestBody:\n        $ref: '#/components/requestBodies/walletFeedback'\n      responses:\n        200:\n          $ref: '#/components/responses/walletFeedback'\n        302:\n          description: \"Cookies cannot be found in user request.\"\n        401:\n          description: \"Cookies do not allow a successful authentication.\"\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"           \n  /api/v1/useractivites:\n    get:\n      tags: [User Profile]\n      summary: Get user activities\n      description: \"Get the activities of the user specified by the _JSESSIONID_ cookie. An optional _lang_ parameter can be submitted (default is _en_). An optional _refresh_ parameter can be submitted (default is _false_). If _refresh_ is set to _true_, a newly-generated response is provided back, otherwise the cached response is provided if any. If the operation is successful, the API returns HTTP 200 and a JSON representing the user activities. If cookies are not embedded in the request, the API returns HTTP 302. If cookies do not allow a successful login, the API returns HTTP 401.\"\n      parameters:\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/refresh'\n      responses:\n        200:\n          $ref: '#/components/responses/walletUserActivities'\n        302:\n          description: \"Cookies cannot be found in user request.\"\n        401:\n          description: \"Cookies do not allow a successful authentication.\"\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"    \n  /api/v1/useractivites/{activity}:\n    get:\n      tags: [User Profile]\n      summary: Get detailed user activities\n      description: |\n        Get a detailed list of _activity_ of the user specified in the _JSESSIONID_ cookie. An optional _lang_ parameter can be submitted (default is _en_). An optional _terminalID_ parameter can be submitted (default is _null_, and it means _any terminal_). Optional _from_ and _howmany_ parameters can be submitted to enable paging. If the operation is successful, the API returns HTTP 200 and a JSON representing the user activities. If cookies are not embedded in the request, the API returns HTTP 302. If cookies do not allow a successful login, the API returns HTTP 401.\n      \n        Allowed values for _activity_ are SUBMITTED_STARS (submittedstarsdetailed), SUBMITTED_COMMENTS (submittedcommentsdetailed), SUBMITTED_PHOTOS (submittedphotosdetailed), EXECUTED_ENGAGEMENTS (executedengagementsdetailed). For \"SUBMITTED_*\", the field _value_ in the response can indicate the number of the stars, the text of comments, or the photo’s URI. For \"EXECUTED ENGAGEMENTS\", the field _rule_name_label_ can be null, replaced by _rule_name_. _Points_ also can be null if the rule does not have any information.\n      parameters:\n        - $ref: '#/components/parameters/activity'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/terminalID'\n        - $ref: '#/components/parameters/from'\n        - $ref: '#/components/parameters/howmany'\n      responses:\n        200:\n          description: User Activities\n          content:\n            application/json:\n              schema:\n                type: object\n                oneOf:\n                  - $ref: '#/components/responses/executedEngagements'\n                  - $ref: '#/components/responses/submittedSomething'\n        302:\n          description: \"Cookies cannot be found in user request.\"\n        401:\n          description: \"Cookies do not allow a successful authentication.\"\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"    \n  /api/v1/usermobility:\n    get:\n      tags: [User Profile]\n      summary: Get User Mobilities\n      description: Get the mobility activity of the user specified by the _JSESSIONID_ from an optional _from_ date to an optional _to_ date (default is from the beginning to _now_). An optional _lang_ parameter can be submitted (default is _en_). An optional _status_ string can be specified (default is all status). If the operation is successful, the API returns HTTP 200 and a JSON representing the user mobility activities. If cookies are not embedded in the request, the API returns HTTP 302. If cookies do not allow a successful login, the API returns HTTP 401.\n      parameters:\n        - $ref: '#/components/parameters/fromTimestamp'\n        - $ref: '#/components/parameters/toTimestamp'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/status'\n      responses:\n        200:\n          $ref: '#/components/responses/walletUserMobilities'\n        302:\n          description: \"Cookies cannot be found in user request.\"\n        401:\n          description: \"Cookies do not allow a successful authentication.\"\n        500: \n          description: \"Internal Server Error (unexpected error)\"\n        501:\n          description: \"Not Implemented (client update required)\"       \ncomponents:\n  parameters:\n    lang:\n      name: lang\n      in: query\n      description: Optional language\n      required: false\n      schema:\n        type: string\n        default: \"en\"\n      example: \"en\"  \n    refresh:\n      name: refresh\n      in: query\n      description: If set to _true_, a newly-generated response is provided back to the user. Otherwise, the cached version is provided if any.\n      required: false\n      schema:\n        type: boolean\n        default: false\n      example: false\n    activity:\n      name: activity\n      in: path\n      required: true\n      schema:\n        type: string\n        enum: [\"submittedstarsdetailed\", \"submittedcommentsdetailed\", \"submittedphotosdetailed\", \"executedengagementsdetailed\"]\n      example: \"submittedcommentsdetailed\"      \n    terminalID:\n      name: terminalID\n      in: query\n      required: false\n      schema:\n        type: string\n      example: \"af97e11488be5af2408ab27ddd90d52ad763b5d4ff1e5f89e6fc378fdf785f75\"    \n    from:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: int32\n      example: 1\n    howmany:\n      name: howmany\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: int32\n      example: 3\n    fromTimestamp:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: int64\n      example: 1479123742000\n    toTimestamp:\n      name: to\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: int64\n      example: 1479123742000      \n    status:\n      name: status\n      in: query\n      required: false\n      schema:\n        type: string\n      \n  responses:\n    walletRegistration:\n      description: \"Returned both for OK (_result_ = _true_) and KO (_result_ = _false_) responses. In case of failure, the _message_ field describes the error.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n              - message\n            properties:\n              result:\n                type: boolean\n                example: true\n              message:\n                type: string\n                example: \"true\"          \n    walletSocialSigninFailed:\n      description: \"Sign in failed (invalid access token, or unrecognized _social_name_)\"\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n              - message\n            properties:\n              result:\n                type: boolean\n                enum: [false]\n              message:\n                type: string\n    walletDelete:\n      description: \"Deleted\"\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n              - message\n            properties:\n              result:\n                type: boolean\n                enum: [true]\n                example: true\n              message:\n                type: string\n                example: \"true\"          \n    walletDeviceID:\n      description: \"Returned both for OK (_result_ = _true_) and KO (_result_ = _false_) responses. In case of failure, the _message_ field describes the error.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n              - message\n            properties:\n              result:\n                type: boolean\n                example: true\n              message:\n                type: string\n                example: \"true\"               \n    walletLastLogin:\n      description: \"Timestamp of last login\"\n      content:\n        text/plain:\n          schema:\n            type: integer\n            format: int64\n    walletWelcomemsg:\n      description: \"Welcome message and points\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items: \n              type: string\n              example: \n                - \"Welcome \\\"angelo.difino@gmail.com\\\"\"\n                - \"You got a total of \\\"20\\\" points\"\n    walletForgotPwd:\n      description: \"Returned both for OK (_result_ = _true_) and KO (_result_ = _false_) responses. In case of failure, the _message_ field describes the error.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n              - message\n            properties:\n              result:\n                type: boolean\n                example: true\n              message:\n                type: string\n                example: \"true\"      \n    walletSavePwd:\n      description: \"Returned both for OK (_result_ = _true_) and KO (_result_ = _false_) responses. In case of failure, the _message_ field describes the error.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n              - message\n            properties:\n              result:\n                type: boolean\n                example: true\n              message:\n                type: string\n                example: \"true\"     \n    walletFeedback:\n      description: \"Returned both for OK (_result_ = _true_) and KO (_result_ = _false_) responses. In case of failure, the _message_ field describes the error.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n              - message\n            properties:\n              result:\n                type: boolean\n                example: true\n              message:\n                type: string\n                example: \"true\"           \n    walletUserActivities:\n      description: \"User activities\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items: \n              type: object\n              required: \n                - label\n                - value\n              properties:\n                label:\n                  type: string\n                  example: \"SUBMITTED_PHOTOS\"\n                value:\n                  type: integer\n                  format: int32\n                  example: 1\n    executedEngagements:\n      description: \"Response provided when _activity_ is EXECUTED_ENGAGEMENT.\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items: \n              type: object\n              required: \n                - time\n                - ruleName\n              properties:\n                time:\n                  type: integer\n                  format: int64\n                  example: 1479123742000\n                ruleName:\n                  type: string\n                  example: prova\n                rule_name_label:\n                  type: string\n                  example: prova label\n                points:\n                  type: integer\n                  format: int32\n                  example: 10\n    submittedSomething:\n      description: \"Response provided when _activity_ is \\\"SUBMITTED_*\\\"\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items: \n              type: object\n              required: \n                - time\n                - serviceUri\n                - text\n              properties:\n                time:\n                  type: integer\n                  format: int64\n                  example: 1479123742000\n                serviceUri:\n                  type: string\n                  format: uri\n                  example: http://www.disit.org/km4city/resource/6ceacbc32f1e6824ecb71017a668c2a3\n                text:\n                  type: string\n                  example: \"Biblioteca fornitissima e personale efficiente\"\n    walletUserMobilities:\n      description: User Mobilities\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: object\n              properties:\n                status:\n                  type: string\n                  example: \"stay\"\n                seconds:\n                  type: integer\n                  format: int32\n                  example: 1278815\n                meters:\n                  type: integer\n                  format: int32\n                  nullable: true\n                  example: 500\n  requestBodies:\n    walletRegistration:\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            required:\n              - username\n              - password\n            properties:\n              username:\n                type: string\n                format: email\n                example: test@test.com\n              password:\n                type: string\n                example: test\n              lang:\n                type: string\n                default: \"en\"\n                example: \"en\"\n    walletSignin:\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            required:\n              - username\n              - password\n            properties:\n              username:\n                type: string\n                format: email\n                example: test@test.com\n              password:\n                type: string\n                example: test\n              remember-me:\n                type: string\n                enum: [\"on\", \"off\"]\n                example: \"off\"\n                default: \"off\"\n    walletSocialSignin:\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            required:\n              - accesstoken\n            properties:\n              accesstoken:\n                type: string\n                example: \"facebook:EAADZCeLIXHw0BABgKRHQrKHDm04c2TQvZAlNPXcBJFQoE6Xi8nQs14X4nSSzJL7ZAdZByZCYr9HlfTi7o9iqbtBP5gZABzas4TlGMCqlgXw6FmHxhi9N9Ve3tl3NEaAsqiZB4IaZCx4pZCzIZAB7ngG3Jx4ZBOXTPRvdhaGkT2zdUGaeAZDZD\"\n              remember-me:\n                type: string\n                enum: [\"on\", \"off\"]\n                example: \"off\"\n                default: \"off\"\n              lang:\n                type: string\n                default: \"en\"\n                example: \"en\"   \n    walletDeviceID:\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            required:\n              - device_id\n            properties:\n              device_id:\n                type: string\n                example: \"7846b4cf63d22afef4a3acf33d9ca0cde38d49e4e59bb6b34a163c847079ff20\"\n              lang:\n                type: string\n                default: \"en\"\n                example: \"en\"         \n    walletForgotPwd:\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            required:\n              - username\n              - appid\n            properties:\n              username:\n                type: string\n                format: email\n                example: test@test.com\n              appid:\n                type: string\n                example: tdck-a\n              lang:\n                type: string\n                default: \"en\"\n                example: \"en\" \n    walletSavePwd:\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            required:\n              - id\n              - token\n              - password\n            properties:\n              id:\n                type: integer\n                format: int32\n                example: 19\n              token:\n                type: string\n                example: \"bc9db89a-aad6-49a3-ac39-752680b18770\"\n              password:\n                type: string\n                example: test\n              lang:\n                type: string\n                default: \"en\"\n                example: \"en\"     \n    walletFeedback:\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            required:\n              - token\n            properties:\n              token:\n                type: string\n                example: \"bc9db89a-aad6-49a3-ac39-752680b18770\"\n              lang:\n                type: string\n                default: \"en\"\n                example: \"en\"             \n\n      \n      \n      "
		}
	},
	"Error": "parse: paths: /api/v1/useractivites/{activity}: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: oneOf: [0]: parse schema: reference \"#/components/responses/executedEngagements\": resolve reference \"#/components/responses/executedEngagements\": invalid schema reference \"#/components/responses/executedEngagements\""
}