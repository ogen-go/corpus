{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gematik/api-kim"
		},
		"file": {
			"name": "AccountManager.yaml",
			"path": "src/openapi/AccountManager.yaml",
			"content": "openapi: 3.0.3\ninfo:\n  title: I_AccountManager_Service\n  description:  Über diese Schnittstelle wird der KIM Account verwaltet.\n  #  Für alle Operationen muss der Zeichensatz \"utf-8” unterstützt werden.\n  version: 2.2.0\n  ### 2.2.0 \n  # - updated url to https://account-manager.hrst1.kim.telematik/AccountMgmt/v2.2\n  # - changed /components/schemas/Account:\n  #   added parameter dataTimeToLive \u0026 maxMailSize\n  #   specified kimVersion with enum\n  # - changed operation createCert:\n  #   added error codes 400 \u0026 404\n  ### 2.0.0 \n  # - included new operations for outOfOffice\n  # - included new operations for porting an e-mail address to new telematikID\n  # - removed operations: register_State, cm_version and pw_change\n  # - added new operations setAccount and getAccount\n  # - renamed and updated operations for user account (e.g. registerAccount and   \n  #   deregisterAccount)\n  # - added operation createCert to generate PKCS#12 files\n  # - added HTTP error code 500\n  # - changed authentication to JWT\n  ### 1.2.0 \n  # - added parameter \"cert\" to all operations. It includes the auth certificate to sign the operation. This is necessary to check the sign from the Server.  \n  # - adjusted some tags\n  # - more specified parameter \"username\" (email \u0026 maxlength)\n  # - changed response code of the operation \"register\" from 200 - OK to 201 - created\n  # - changed http method in operation \"deregister\" from PUT to DELETE\n  # - changed http method in operation \"cm_version\" from GET to PUT\n  # - changed response in operation \"register_state\" to JSON format\n  ### 1.1.2 \n  # - added parameter \"referenceID\" in operation \"register\"\n  ### 1.1.1 \n  # - extended URI to interface releases\n  ### 1.1.0 \n  # - added authentication with HBA/SMC-B\n  ### 1.0.0\n  # - initial Version of I_AccountManager_Service\n  \nexternalDocs:\n  description: Gitlab Dokumentation\n  url: https://github.com/gematik/api-kim\nservers:\n- url: https://account-manager.hrst1.kim.telematik/AccountMgmt/v2.2/\n  # \u003chrst1\u003e ist der Platzhalter für den Fachdienstbetreiber\ntags:\n- name: Email-Account \n- name: Certificate\n- name: Out of Office Notification\n\nsecurity: \n  - bearerAuth: []\n    # Die Authentisierung erfolgt für alle Operatiponen über ein JWT\n    \npaths:\n##--\n##------\n  /account:  \n    post:\n      tags:\n      - Email-Account\n      summary: Registiriert einen neuen Email Account.\n            #  In allen Fehlerfällen wird der Account nicht erzeugt.\n      operationId: registerAccount\n      parameters:\n        - in: header\n          name: iniPassword\n          description: Initiales Passwort für den Email-Account\n          required: true\n          schema:\n             type: string\n             format: password          \n      requestBody:\n        description: Registriert neuen Account\n        content:\n          application/json:\n              schema:\n                type: object\n                properties:\n                  referenceID: \n                    type: string\n                    maxLength: 256\n                    writeOnly: true\n                    description: Der KIM Anbieter kann den Inhalt dieses Parameters festlegen.\n                             Er kann z.B. eine Vertragsnummer oder einen Registrierungskode enthalten. Der KIM Anbieter muss seine KIM Teilnehmer über die Nutzung dieses Parameters informieren.\n                             Alle Administrationsmodule (bzw. Clientmodule) müssen diesen Parameter - wegen der Interoperabilität mit allen KIM Fachdiensten - unterstützen.\n                             Die referenceID kann nur durch die \"registerAccount\" Operation gesetzt werden. Durch die \"setAccount\" Operation ist dieser Wert nicht änderbar.\n                  username:\n                    type: string\n                    description: Der username kann nur durch die \"registerAccount\" Operation gesetzt werden. Durch die \"setAccount\" Operation ist dieser Wert nicht änderbar.\n                    format: email \n                  password:\n                    type: string\n                    format: password\n                    writeOnly: true\n                  kimVersion:\n                    type: string\n                    maxLength: 4\n                    example: 1.5\n        required: true\n    \n      responses:\n        204:\n          description: Account erfolgreich registriert.\n        400:\n          description: Fehler in den Eingangsdaten, Beschreibung des Fehlers erfolgt in dem Fehlertext\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Authentifizierung fehlgeschlagen\n                    # Die Authentifizierung über referenceID/iniPassword und Signatur des Operation ist fehlgeschlagen.\n                    # Dieser Fehler tritt auch auf, wenn die referenceID nicht zum AUT-Zertifikat (cert) der Signatur passt oder nicht angegeben wurde.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        409:\n          description: Konflikt mit bereits bestehenden Account mit identischer e-mail (e-mail Adresse bereits vergeben).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        420:\n          description: Username oder Passwort entsprechen nicht den Regeln.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        422:\n          description: kimVersion nicht unterstützt bzw. unbekannt.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        502:\n          description: VZD nicht erreichbar bzw. liefert Fehler          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n##--\n##------\n  /account/{username}:\n    put:\n      tags:\n      - Email-Account\n      summary: Account ändern\n             # referenceID \u0026 username (im Body) können über dieser Operation nicht geändert werden\n      operationId: setAccount\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email          \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password          \n      requestBody:\n        content:\n          application/json:\n            schema:\n             $ref: '#/components/schemas/Account'\n             # Bei Passwortwechsel ist das \"alte\" Passwort Im Header dieser Operation enthalten.\n             # Das neue Passwort ist \"password\" Parameter im Body der Operation enthalten.\n      \n      responses:\n        204:\n          description: Änderung des Accounts erfolgreich.\n        400:\n          description: Fehler in den Eingangsdaten, Beschreibung des Fehlers erfolgt in dem Fehlertext\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Authentifizierung fehlgeschlagen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Email Account nicht vorhanden.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        420:\n          description: Neues Passwort entspricht nicht den Regeln.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        422:\n          description: kimVersion nicht unterstützt bzw. unbekannt.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'  \n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        502:\n          description: VZD nicht erreichbar bzw. liefert Feler  \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - Email-Account\n      summary: Deregistriert einen Mailaccount\n      operationId: deregisterAccount\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password  \n      \n      responses:\n        204:\n          description: Account erfolgreich deregistriert\n        400:\n          description: Fehler in den Eingangsdaten, Beschreibung des Fehlers erfolgt in dem Fehlertext\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Authentifizierung fehlgeschlagen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        502:\n          description: VZD nicht erreichbar bzw. liefert Fehler\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    get:\n      tags:\n      - Email-Account\n      summary: Anzeige des Accounts\n      operationId: getAccount\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email           \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password        \n      responses:\n        200:\n          description: Anzeige des Accounts.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                    description: Der username kann nur durch die \"registerAccount\" Operation gesetzt werden. Durch die \"setAccount\" Operation ist dieser Wert nicht änderbar.\n                    format: email \n                  kimVersion:\n                    type: string\n                    maxLength: 4\n                    example: 1.5\n                  regStat:\n                    type: string\n                    description: Der Registrierungsstatus von dem Account. Der KIM Anbieter kann dieses Attribut zur Information des KIM Kunden über den Status des Accounts nutzen.\n                    maxLength: 512\n                    readOnly: true\n                    example: registered\n                  deregDate:\n                    type: integer   \n                    example: 1616588543\n                    readOnly: true\n                    description: Bestätigtes Kündigungsdatum (Unix Timestamp)\n                      # Der KIM Anbieter kann über dieses Attribut angeben, bis wann die Mails noch abrufbar sind \n        401:\n          description: Authentifizierung fehlgeschlagen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Mail Account nicht vorhanden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        502:\n          description: VZD nicht erreichbar bzw. liefert Fehler\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'                \n##--\n##------\n  /account/{username}/OTP:\n    get:\n      tags:\n      - Porting\n      summary: Portierung der e-mail Adresse zu einer neuen telematikID\n      operationId: getOTP\n      description: Diese Operation erzeugt für den KIM Account/e-Mail Adresse ein One Time Passwort (OTP), mit dem die e-Mail Adresse zu einer telematikID (Karte) portiert werden kann. Die Authentisierung erfolgt mit der bisherigen Karte.\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email           \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password        \n      \n      responses:\n        200:\n          description: OTP erfolgreich erzeugt.\n          content:\n           application/json:\n            schema:\n              type: object\n              properties:\n                OTP:\n                  type: string\n                  format: binary\n                  description: One Time Passwort für die Portierung der KIM Mail Adresse zu einer anderen telematikID.\n             \n             \n        401:\n          description: Authentifizierung fehlgeschlagen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n##--\n##------\n  /account/{username}/telematikID:\n    put:\n      tags:\n      - Porting\n      summary: Portierung der e-mail Adresse zu einer neuen telematikID\n      operationId: setTID\n      description: Diese Operation entfernt die e-mail Adresse vom bisherigen VZD Eintrag und trägt die für den aktuellen VZD Eintrag (der den Authentisierungsdaten dieser Operation setTID entspricht) ein. Die Authentisierung erfolgt mit der neuen Karte.\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email           \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password        \n      - in: header\n        name: OTP\n        description: One Time Passwort (OTP) (von getOTP zurückgegeben)\n        required: true\n        schema:\n          type: string\n          format: password        \n\n      responses:\n        204:\n          description: Änderung der TelematikID erfolgreich.\n        401:\n          description: Authentifizierung fehlgeschlagen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Email Account nicht vorhanden.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        408:\n          description: Request Timeout\n          # Gültigkeitsdauer des One Time Passworts ist abgelaufen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        502:\n          description: VZD nicht erreichbar bzw. liefert Fehler          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n                \n##--\n##------\n  /account/{username}/cert:\n    post:\n      tags:\n      - Certificate\n      summary: Create TLS AUT certificate\n      operationId: createCert\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email           \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password        \n      requestBody:\n        content:\n          application/json:\n            schema:\n             $ref: '#/components/schemas/CertificateParameters'\n      \n      responses:\n        200:\n          description: Zertifikat wird zurückgegeben.\n          content:\n           application/json:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                  description: Base64-encoded PKCS#12 Container. Der Container ist mit dem Passwort aus dem Request geschützt.\n        400:\n          description: Fehler in den Eingangsdaten, Beschreibung des Fehlers erfolgt in dem Fehlertext\n                      # z.B. kein CommonName oder kein CertPassword angegeben\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Authentifizierung fehlgeschlagen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Email Account nicht vorhanden.\n                      # z.B. user not registered\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n##--\n##------\n  /account/{username}/outofoffice:\n    get:\n      tags:\n      - Out of Office Notification\n      summary: Read the Out of Office Notification\n      operationId: getOutOfOffice\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email           \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password        \n      \n      responses:\n        200:\n          description: Lesen der Abwesenheitsnotiz erfolgreich.\n          content:\n           application/json:\n            schema:\n             $ref: '#/components/schemas/OutOfOfficeNotification'\n        400:\n          description: Fehler in den Eingangsdaten, Beschreibung des Fehlers erfolgt in dem Fehlertext\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Authentifizierung fehlgeschlagen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Email Account nicht vorhanden.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    put:\n      tags:\n      - Out of Office Notification\n      summary: Update the Out of Office Notification\n      operationId: updateOutOfOffice\n      parameters:\n      - name: username\n        in: path\n        description: Username/E-Mail des Accounts\n        required: true\n        schema:\n          type: string\n          format: email           \n      - in: header\n        name: password\n        description: Passwort für den Email-Account\n        required: true\n        schema:\n          type: string\n          format: password        \n      requestBody:\n        content:\n          application/json:\n            schema:\n             $ref: '#/components/schemas/OutOfOfficeNotification'\n      responses:\n        204:\n          description: Änderung der Abwesenheitsnotiz erfolgreich.\n        400:\n          description: Fehler in den Eingangsdaten, Beschreibung des Fehlers erfolgt in dem Fehlertext\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Authentifizierung fehlgeschlagen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Email Account nicht vorhanden.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal Server Error          \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\ncomponents:\n  schemas:\n\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n\n    Account:\n      type: object\n      properties:\n        referenceID: \n            type: string\n            maxLength: 256\n            writeOnly: true\n            description: Der KIM Anbieter kann den Inhalt dieses Parameters festlegen.\n                     Er kann z.B. eine Vertragsnummer oder einen Registrierungskode enthalten. Der KIM Anbieter muss seine KIM Teilnehmer über die Nutzung dieses Parameters informieren.\n                     Alle Administrationsmodule (bzw. Clientmodule) müssen diesen Parameter - wegen der Interoperabilität mit allen KIM Fachdiensten - unterstützen.\n                     Die referenceID kann nur durch die \"registerAccount\" Operation gesetzt werden. Durch die \"setAccount\" Operation ist dieser Wert nicht änderbar.\n        username:\n          type: string\n          description: Der username kann nur durch die \"registerAccount\" Operation gesetzt werden. Durch die \"setAccount\" Operation ist dieser Wert nicht änderbar.\n          format: email \n        password:\n          type: string\n          format: password\n          writeOnly: true\n        kimVersion:\n          type: string\n          maxLength: 4\n          example: 1.5\n        regStat:\n          type: string\n          description: Der Registrierungsstatus von dem Account. Der KIM Anbieter kann dieses Attribut zur Information des KIM Kunden über den Status des Accounts nutzen.\n          maxLength: 512\n          readOnly: true\n          example: registered\n        deregDate:\n          type: integer   \n          example: 1616588543\n          readOnly: true\n          description: Bestätigtes Kündigungsdatum (Unix Timestamp)\n            # Der KIM Anbieter kann über dieses Attribut angeben, bis wann die Mails noch abrufbar sind \n        dataTimeToLive: \n          type: integer\n          maxLength: 3\n          minimum: 10\n          maximum: 365\n          default: 90\n          example: 90\n          description: Speicherdauer von Mails und Anhängen auf dem KAS Fachdienst/KAS. Angabe in Tagen\n        maxMailSize:\n          type: integer\n          format: int64\n          minimum: 524288000\n          example: 734003200\n          readOnly: true\n          description: Setzt die maximale Größe einer KIM-Mail in Bytes\n\n\n\n    CertificateParameters:\n      type: object\n      properties:\n        commonName:\n          type: string\n          writeOnly: true\n          description: Wird im Zertifikat als commonName aufgenommen\n                        Dieses Zertifikat wird auch als TLS Server Zertifikat für die Verbindung mit dem Client/Primärsystem genutzt. Für eine erfolgreiche Zertifikatsprüfung - durch den Client - muss im commonName der Server Name des Clientmoduls stehen (so wie er konfiguriert ist, z.B. example.com, www.example.com)\n        certPassword:\n          type: string\n          format: binary\n          writeOnly: true\n          description: bas64 kodiertes Passwort für den PKCS#12 Container in dem das Zertifikat transportiert wird\n          \n          \n          \n    OutOfOfficeNotification:\n      type: object\n      properties:\n        startDate:\n          type: string \n          format: date-time\n          example: 2021-07-20T17:32:28Z\n          description: Ab diesem Zeitpunkt wird die Abwesenheitsnotiz versendet\n        endDate:\n          type: string \n          format: date-time  \n          example: 2021-07-28T17:32:28Z\n          description: Nach diesem Zeitpunkt wird die Abwesenheitsnotiz nicht mehr versendet\n        message:\n          type: string \n          description: Inhalt der Abwesenheitsnotiz.\n        active:\n          type: boolean \n          description: Aktiviert bzw. deaktiviert die Abwesenheitsnotiz.\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT   \n       # Das JWT wird in compact serialization (RFC 7515, Section 3.1) kodiert und im HTTP-Header Authorization nach dem Bearer-Schema übertragen.\n"
		}
	},
	"Error": "parse: paths: /account: post: registerAccount: responses: 420: unknown status code: 420"
}