{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/StackVista/stackstate-openapi-docs"
		},
		"file": {
			"name": "old_openapi.yaml",
			"path": ".gitbook/assets/old_openapi.yaml",
			"content": "openapi: 3.0.3\ntags:\n  - name: userProfile\n    description: \"/user/profile\"\ninfo:\n  description: StackState's API specification\n  version: 0.0.1\n  title: StackState API\n  license:\n    name: Proprietary\n    url: \"https://stackstate.com\"\n  contact:\n    name: StackState\n    email: info@stackstate.com\n    url: \"https://stackstate.com\"\nexternalDocs:\n  description: Documentation\n  url: \"https://docs.stackstate.com/\"\npaths:\n  /user/profile:\n    get:\n      tags:\n        - userProfile\n      summary: \"Get current user profile\"\n      description: \"Get current user profile.\"\n      operationId: getCurrentUserProfile\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/userProfile\"\n        \"400\":\n          description: Get User Profile Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserNotFoundError\"\n        \"500\":\n          $ref: \"common.api.yaml#/components/responses/genericServerError\"\n    put:\n      tags:\n        - userProfile\n      summary: \"Save current user profile\"\n      description: \"Save current user profile.\"\n      operationId: saveCurrentUserProfile\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserProfile\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/userProfile\"\n        \"400\":\n          description: Save User Profile Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserProfileSaveError\"\n        \"500\":\n          $ref: \"common.api.yaml#/components/responses/genericServerError\"\ncomponents:\n  responses:\n    userProfile:\n      description: User Profile\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UserProfile\"\n    apiTokens:\n      description: Api Token\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ApiToken\"\n  schemas:\n    UserNameMismatchError:\n      type: object\n      properties:\n        _type:\n          type: string\n          enum:\n            - UserNameMismatchError\n        name:\n          type: string\n      required:\n        - name\n        - _type\n    UserNotLoggedInError:\n      type: object\n      properties:\n        _type:\n          type: string\n          enum:\n            - UserNotLoggedInError\n      required:\n        - _type\n    UserNotFoundError:\n      type: object\n      properties:\n        _type:\n          type: string\n          enum:\n            - UserNotFoundError\n        name:\n          type: string\n      required:\n        - name\n        - _type\n    UserProfileSaveError:\n      discriminator:\n        propertyName: _type\n      oneOf:\n        - $ref: \"#/components/schemas/UserNameMismatchError\"\n        - $ref: \"#/components/schemas/UserNotFoundError\"\n        - $ref: \"#/components/schemas/UserNotLoggedInError\"\n      required:\n        - _type\n    UserProfile:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: true\n        lastUpdateTimestamp:\n          type: integer\n          format: int64\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        identifier:\n          type: string\n        starredViews:\n          type: array\n          items:\n            type: integer\n            format: int64\n        ownedBy:\n          type: string\n      required:\n        - name\n    ApiToken:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: true\n        lastUpdateTimestamp:\n          type: integer\n          format: int64\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        token:\n          type: string\n      required:\n        - name\n        - token\nsecurity:\n  - ApiToken: []"
		}
	},
	"Error": "parse: paths: /user/profile: get: operation \"getCurrentUserProfile\": responses: 500: resolve \"common.api.yaml#/components/responses/genericServerError\" reference: invalid response reference: \"common.api.yaml#/components/responses/genericServerError\""
}