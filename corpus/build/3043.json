{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/postmanlabs/openapi-to-postman"
		},
		"file": {
			"name": "webhook-name-with-path-format.yaml",
			"path": "test/data/valid_openapi31X/webhooks/webhook-name-with-path-format.yaml",
			"content": "openapi: 3.1.0\ninfo:\n  contact:\n    email: developer-experience@adyen.com\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    x-twitter: Adyen\n  description: |-\n    The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.\n\n    For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: \"Webhooks test - A webhook with name as path\"\n  version: \"3\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/mermade/oas-kit\n        version: 7.0.4\n      format: openapi\n      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/MarketPayNotificationService-v3.json\n      version: \"3.1\"\n  x-preferred: false\n  x-providerName: adyen.com\n  x-publicVersion: true\n  x-serviceName: MarketPayNotificationService\ncomponents:\n  examples:\n    WebhookAck:\n      summary: Acknowledge Webhook\n      value:\n        notificationResponse: \"[accepted]\"\n    post-ACCOUNT_CLOSED-accountClosed:\n      summary: ACCOUNT CLOSED example\n      value:\n        content:\n          invalidFields:\n            - errorCode: 1\n              errorDescription: Field is missing\n              fieldType:\n                field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n                fieldName: unknown\n                shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          status: Closed\n        error:\n          errorCode: \"000\"\n          message: test error message\n        eventDate: 2019-01-01T01:00:00+01:00\n        eventType: ACCOUNT_CLOSED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n    Pets:\n      type: array\n      items:\n        $ref: '#/components/schemas/Pet'\n    Error:\n      required:\n        - code\n        - mesage\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    AccountCloseNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CloseAccountResponse\"\n          description: The details of the Account update.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountCreateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CreateAccountResponse\"\n          description: The details of the account creation.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    \n    NotificationResponse:\n      properties:\n        notificationResponse:\n          description: Set this parameter to **[accepted]** to acknowledge that you received a notification from Adyen.\n          type: string\n    CloseAccountResponse:\n      properties:\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The new status of the account.\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n          x-addedInVersion: \"2\"\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - status\n    CreateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the new account.\n          type: string\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        payoutSchedule:\n          $ref: \"#/components/schemas/PayoutScheduleResponse\"\n          description: The payout schedule of the account.\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The status of the account.\n            \u003ePermitted values: `Active`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n          x-addedInVersion: \"2\"\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - accountHolderCode\n        - accountCode\n        - status\n    PayoutScheduleResponse:\n      properties:\n        nextScheduledPayout:\n          description: The date of the next scheduled payout.\n          format: date-time\n          type: string\n        schedule:\n          description: |-\n            The payout schedule of the account.\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.\n          enum:\n            - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n            - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n            - BI_DAILY_AU\n            - BI_DAILY_EU\n            - BI_DAILY_US\n            - DAILY\n            - DAILY_6PM\n            - DAILY_AU\n            - DAILY_EU\n            - DAILY_SG\n            - DAILY_US\n            - DEFAULT\n            - EVERY_6_HOURS_FROM_MIDNIGHT\n            - HOLD\n            - MONTHLY\n            - MONTHLY_ON_15TH_AT_MIDNIGHT\n            - WEEKLY\n            - WEEKLY_MON_TO_FRI_AU\n            - WEEKLY_MON_TO_FRI_EU\n            - WEEKLY_MON_TO_FRI_US\n            - WEEKLY_ON_TUE_FRI_MIDNIGHT\n            - YEARLY\n          type: string\n      required:\n        - schedule\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nwebhooks:\n  /ACCOUNT_CLOSED:{port}/{xid}:\n    post:\n      description: This notification is sent when an account has been closed.\n      operationId: post-ACCOUNT_CLOSED\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountClosed:\n                $ref: \"#/components/examples/post-ACCOUNT_CLOSED-accountClosed\"\n            schema:\n              $ref: \"#/components/schemas/AccountCloseNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                accountClosed:\n                  $ref: \"#/components/examples/WebhookAck\"\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Triggered upon the closure of an account.\n      tags:\n        - Accounts\n      x-groupName: Accounts\n      x-sortIndex: 3\n  /ACCOUNT_CREATED:\n    post:\n      description: This notification is sent when an account has been created.\n      operationId: post-ACCOUNT_CREATED\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountCreateNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Triggered upon the creation of an account.\n      tags:\n        - Accounts\n      x-groupName: Accounts\n      x-sortIndex: 1\nx-groups:\n  - Account holders\n  - Accounts\n  - Fund management\n  - Other\nx-staticResponse: response.json\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      description: ''\n      operationId: listPets\n      tags:\n        - pet\n      parameters:\n        - name: limit\n          in: header\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: variable\n          in: query\n          description: random variable\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: variable2\n          in: query\n          description: another random variable\n          style: spaceDelimited\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pet\n      responses:\n        '201':\n          description: Null response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    parameters:\n      - name: petId\n        in: path\n        description: The id of the pet to retrieve\n        required: true\n        schema:\n          type: string\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pet\n      parameters:\n        - name: petId\n          in: path\n          description: The id of the pet to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pets/{petId}/uploadImage:\n    post:\n      summary: Uploads an image\n      description: ''\n      operationId: uploadFile\n      tags:\n        - pet\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/octet-stream: {}\n      responses:\n        '201':\n          description: Null response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'"
		}
	},
	"Error": "parse: paths: /pets: get: operation \"listPets\": parameters: parse parameter \"variable2\": style: unexpected style: \"spaceDelimited\""
}