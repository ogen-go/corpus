{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/medhomeweb/web"
		},
		"file": {
			"name": "swagger.json",
			"path": ".github/swagger.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Cloudron API\",\n    \"version\": \"1.0.0\",\n    \"x-logo\": {\n      \"url\": \"/img/cloudron-banner.png\"\n    },\n    \"description\": \"Cloudron provides a RESTful API to manage all aspects of the Cloudron like adding users, configuring groups and installing apps. \u003cbr/\u003e \u003cbr/\u003e If you are an app developer, the [Cloudron CLI tool](https://www.npmjs.com/package/cloudron) implements a workflow that allows you to develop apps on your Cloudron. The CLI tool uses the REST API documented here. \u003cbr/\u003e \u003cbr/\u003e The access token can be provided via the request query `?access_token=\u003ctoken\u003e` or the token can be provided via the Authorization header using `Bearer \u003ctoken\u003e`.\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"Cloudron\"\n    },\n    {\n      \"name\": \"Appstore\"\n    },\n    {\n      \"name\": \"App Passwords\"\n    },\n    {\n      \"name\": \"Apps\"\n    },\n    {\n      \"name\": \"Backups\"\n    },\n    {\n      \"name\": \"Branding\"\n    },\n    {\n      \"name\": \"Domains\",\n      \"description\": \"Add and manage domains.\"\n    },\n    {\n      \"name\": \"Groups\"\n    },\n    {\n      \"name\": \"Mail\"\n    },\n    {\n      \"name\": \"Mailserver\"\n    },\n    {\n      \"name\": \"Network\"\n    },\n    {\n      \"name\": \"Notifications\"\n    },\n    {\n      \"name\": \"Profile\"\n    },\n    {\n      \"name\": \"Services\"\n    },\n    {\n      \"name\": \"Settings\"\n    },\n    {\n      \"name\": \"Tasks\"\n    },\n    {\n      \"name\": \"Tokens\"\n    },\n    {\n      \"name\": \"Users\"\n    },\n    {\n      \"name\": \"Volumes\"\n    }\n  ],\n  \"paths\": {\n    \"/cloudron/setup\": {\n      \"post\": {\n        \"summary\": \"Initial DNS Setup\",\n        \"description\": \"Public route and very first call to setup the dashboard domain.\\n\u003cbr/\u003e\u003cbr/\u003e\\n\u003cb\u003eThis call has to be made against the raw IP address (eg. https://1.2.3.4 ) accepting self-signed certificates.\u003c/b\u003e\\n\u003cbr/\u003e\u003cbr/\u003e\\nA curl example could look like:\u003cbr/\u003e\\n```curl -k -X POST -H 'Content-Type: application/json' --data '{...}' http://1.2.3.4/api/v1/cloudron/setup```\\n\u003cbr/\u003e\u003cbr/\u003e\\nOnce called, the process can be tracked through the `setup` object in the `/api/v1/cloudron/status` API reply.\\nAfter the status API returns a success, future API requests must be made to `https://my.domain.com`.\\n\u003cbr/\u003e\u003cbr/\u003e\\nThis routes gets disabled once the Cloudron has been activated.\\n\",\n        \"tags\": [\n          \"Cloudron\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"dnsConfig\"\n                ],\n                \"properties\": {\n                  \"dnsConfig\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"provider\",\n                      \"domain\",\n                      \"config\"\n                    ],\n                    \"properties\": {\n                      \"provider\": {\n                        \"$ref\": \"#/components/schemas/DnsProvider\"\n                      },\n                      \"domain\": {\n                        \"type\": \"string\",\n                        \"example\": \"hello.example.com\"\n                      },\n                      \"zoneName\": {\n                        \"type\": \"string\",\n                        \"example\": \"example.com\"\n                      },\n                      \"config\": {\n                        \"type\": \"object\",\n                        \"description\": \"DNS provider specific configuration, for example API tokens and secrets\",\n                        \"example\": {\n                          \"token\": \"digitalocean_api_token\"\n                        }\n                      },\n                      \"tlsConfig\": {\n                        \"$ref\": \"#/components/schemas/TlsConfig\"\n                      },\n                      \"sysinfoConfig\": {\n                        \"$ref\": \"#/components/schemas/SysConfig\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cloudron/status\": {\n      \"get\": {\n        \"summary\": \"Get status\",\n        \"description\": \"Public route to get status information for this Cloudron.\",\n        \"tags\": [\n          \"Cloudron\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"version\": {\n                      \"type\": \"string\",\n                      \"description\": \"Cloudron version\",\n                      \"example\": \"5.1.0\"\n                    },\n                    \"apiServerOrigin\": {\n                      \"type\": \"string\",\n                      \"description\": \"The API endpoint to make App Store requests\",\n                      \"example\": \"https://api.cloudron.io\"\n                    },\n                    \"webServerOrigin\": {\n                      \"type\": \"string\",\n                      \"description\": \"The Web endpoint for App Store assets (docs, images, etc)\",\n                      \"example\": \"https://cloudron.io\"\n                    },\n                    \"provider\": {\n                      \"$ref\": \"#/components/schemas/Provider\"\n                    },\n                    \"cloudronName\": {\n                      \"type\": \"string\",\n                      \"description\": \"Name of the Cloudron used in the login screen, nav bar\",\n                      \"example\": \"My Space\"\n                    },\n                    \"footer\": {\n                      \"type\": \"string\",\n                      \"description\": \"Markdown formatted footer content\",\n                      \"example\": \"\u0026copy; 2020  \u0026nbsp;  [Cloudron](https://cloudron.io) \u0026nbsp; \u0026nbsp; \u0026nbsp;  [Forum \u003ci class=\\\"fa fa-comments\\\"\u003e\u003c/i\u003e](https://forum.cloudron.io)\"\n                    },\n                    \"adminFqdn\": {\n                      \"type\": \"string\",\n                      \"description\": \"The FQDN of the Cloudron dashboard\",\n                      \"example\": \"my.example.com\"\n                    },\n                    \"activated\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Indicates if this Cloudron was already activated. This is true once the first user was created during setup.\",\n                      \"example\": true\n                    },\n                    \"setup\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"active\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Indicates if a DNS setup is currently in progress. This happens after /api/v1/cloudron/setup was issued.\",\n                          \"example\": false\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"description\": \"Setup process status messages for ongoing progress display\",\n                          \"example\": \"Fetching SSL certificate ...\"\n                        },\n                        \"errorMessage\": {\n                          \"type\": \"string\",\n                          \"example\": null,\n                          \"nullable\": true\n                        }\n                      }\n                    },\n                    \"restore\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"active\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Indicates if a restore is currently in progress.\",\n                          \"example\": false\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"description\": \"Restore process status messages for ongoing progress display\",\n                          \"example\": \"Downloading backups ...\"\n                        },\n                        \"errorMessage\": {\n                          \"type\": \"string\",\n                          \"example\": null,\n                          \"nullable\": true\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cloudron/activate\": {\n      \"post\": {\n        \"summary\": \"Activate\",\n        \"description\": \"Public route to activate the Cloudron. This creates the first user (aka owner) account. \u003cbr/\u003e\u003cbr/\u003e Before installing apps, the Cloudron must be registered with a valid Appstore account as well using the 'Register Cloudron' route.\",\n        \"tags\": [\n          \"Cloudron\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"username\",\n                  \"password\",\n                  \"email\"\n                ],\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"Username. The first user is also called the Owner.\",\n                    \"example\": \"oksana\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"description\": \"Password. Minimum of 8 characters required.\",\n                    \"example\": \"strongPa55word!?\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"description\": \"Primary email of the user.\",\n                    \"example\": \"oksane@example.com\"\n                  },\n                  \"displayName\": {\n                    \"type\": \"string\",\n                    \"description\": \"Full name of the user.\",\n                    \"example\": \"Oksana Muller\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"userId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique ID of the created user\",\n                      \"example\": \"uid-e08ca116-d3e5-43c9-b43f-6eb990be58ea\"\n                    },\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"A token that will authenticate the user for future API requests. Pass this as `?access_token=\u003ctoken\u003e`.\",\n                      \"example\": \"sometoken\"\n                    },\n                    \"expires\": {\n                      \"type\": \"string\",\n                      \"description\": \"Expiry time of token\",\n                      \"format\": \"date-time\",\n                      \"example\": \"ISO-8601 UTC date\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cloudron/restore\": {\n      \"post\": {\n        \"summary\": \"Restore\",\n        \"description\": \"Public route to restore a whole Cloudron from backup. This is only available until the Cloudron is activated.\",\n        \"tags\": [\n          \"Cloudron\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"backupConfig\",\n                  \"backupId\",\n                  \"version\"\n                ],\n                \"properties\": {\n                  \"backupConfig\": {\n                    \"$ref\": \"#/components/schemas/BackupConfig\"\n                  },\n                  \"backupId\": {\n                    \"type\": \"string\",\n                    \"example\": \"2020-04-20-161041-646/box_2020-04-20-161045-600_v5.2.0\"\n                  },\n                  \"version\": {\n                    \"type\": \"string\",\n                    \"example\": \"5.1.0\"\n                  },\n                  \"sysinfoConfig\": {\n                    \"$ref\": \"#/components/schemas/SysinfoConfig\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cloudron/login\": {\n      \"post\": {\n        \"summary\": \"API Login\",\n        \"description\": \"Login to the Cloudron API to obtain an access token\",\n        \"tags\": [\n          \"Cloudron\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"username\",\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"example\": \"julia\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"example\": \"supersecret\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"example\": \"sometoken\"\n                    },\n                    \"expiresAt\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"ISO-8601 UTC date\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cloudron/renew_certs\": {\n      \"post\": {\n        \"summary\": \"Renew SSL certificates\",\n        \"description\": \"Renew SSL certificates of all or optionally provided domains\",\n        \"tags\": [\n          \"Cloudron\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"domain\": {\n                    \"type\": \"string\",\n                    \"example\": \"example.com\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"description\": \"taskId to track restart process via the task API\",\n                      \"example\": \"1234\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/config\": {\n      \"get\": {\n        \"summary\": \"Get Config\",\n        \"description\": \"This config object contains the platform configuration.\",\n        \"tags\": [\n          \"Cloudron\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"apiServerOrigin\": {\n                      \"type\": \"string\",\n                      \"format\": \"url\",\n                      \"example\": \"https://api.cloudron.io\"\n                    },\n                    \"webServerOrigin\": {\n                      \"type\": \"string\",\n                      \"format\": \"url\",\n                      \"example\": \"https://cloudron.io\"\n                    },\n                    \"adminDomain\": {\n                      \"type\": \"string\",\n                      \"description\": \"The main domain for this Cloudron. `adminFqdn` and `mailFqdn` depend on this\",\n                      \"example\": \"example.com\"\n                    },\n                    \"adminFqdn\": {\n                      \"type\": \"string\",\n                      \"description\": \"Subdomain where the dashboard is reachable.\",\n                      \"example\": \"my.example.com\"\n                    },\n                    \"mailFqdn\": {\n                      \"type\": \"string\",\n                      \"description\": \"Subdomain where the mail server is reachable.\",\n                      \"example\": \"my.example.com\"\n                    },\n                    \"version\": {\n                      \"type\": \"string\",\n                      \"description\": \"Cloudron version\",\n                      \"example\": \"4.1.2\"\n                    },\n                    \"isDemo\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"provider\": {\n                      \"$ref\": \"#/components/schemas/Provider\"\n                    },\n                    \"cloudronName\": {\n                      \"type\": \"string\",\n                      \"description\": \"Same as /api/v1/settings/clouron_name\",\n                      \"example\": \"My Cloudron\"\n                    },\n                    \"uiSpec\": {\n                      \"type\": \"object\",\n                      \"description\": \"See https://docs.cloudron.io/hosting-provider/#customization\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/appstore/register_cloudron\": {\n      \"post\": {\n        \"summary\": \"Register Cloudron\",\n        \"description\": \"Register this Cloudron with cloudron.io AppStore and enable access to the app library.\",\n        \"tags\": [\n          \"Appstore\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"signup\",\n                  \"email\",\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"signup\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"If `true` a new cloudron.io account will be created. If an account already exists, this request will return an error. Otherwise, this Cloudron will be assigned to the existing account.\",\n                    \"example\": false\n                  },\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\",\n                    \"example\": \"julia@example.com\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"example\": \"supersecret\"\n                  },\n                  \"totpToken\": {\n                    \"type\": \"string\",\n                    \"description\": \"2FA token. Required when the cloudron.io account already exists and was setup with 2FA.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/appstore/subscription\": {\n      \"get\": {\n        \"summary\": \"Get Subscription\",\n        \"tags\": [\n          \"Appstore\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\",\n                      \"example\": \"julia@example.com\"\n                    },\n                    \"cloudronId\": {\n                      \"type\": \"string\"\n                    },\n                    \"cloudronCreatedAt\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"ISO-8601 UTC date\"\n                    },\n                    \"plan\": {\n                      \"type\": \"string\"\n                    },\n                    \"current_period_end\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"ISO-8601 UTC date\"\n                    },\n                    \"canceled_at\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"ISO-8601 UTC date\"\n                    },\n                    \"cancel_at\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"example\": \"ISO-8601 UTC date\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"features\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/domains\": {\n      \"get\": {\n        \"summary\": \"List Domains\",\n        \"description\": \"Get all domains\",\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"domains\": {\n                      \"type\": \"array\",\n                      \"example\": [],\n                      \"items\": {}\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Add Domain\",\n        \"description\": \"Add a new domain\",\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"domain\"\n                    ],\n                    \"properties\": {\n                      \"domain\": {\n                        \"type\": \"string\",\n                        \"example\": \"example.com\"\n                      }\n                    }\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/DomainConfig\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Invalid fields or provider credentials\"\n          },\n          \"409\": {\n            \"description\": \"Conflict. Domain already exists.\"\n          }\n        }\n      }\n    },\n    \"/domains/{domain}\": {\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"domain\",\n          \"description\": \"Domain\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get Domain\",\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"domain\": {\n                      \"type\": \"string\",\n                      \"example\": \"cloud.example.com\"\n                    },\n                    \"zoneName\": {\n                      \"type\": \"string\",\n                      \"example\": \"example.com\"\n                    },\n                    \"provider\": {\n                      \"type\": \"string\",\n                      \"example\": \"cloudflare\"\n                    },\n                    \"config\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"hyphenatedSubdomains\": {\n                          \"type\": \"boolean\",\n                          \"example\": false\n                        }\n                      }\n                    },\n                    \"tlsConfig\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"provider\": {\n                          \"type\": \"string\",\n                          \"example\": \"letsencrypt-prod\"\n                        },\n                        \"wildcard\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        }\n                      }\n                    },\n                    \"fallbackCertificate\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"cert\": {\n                          \"type\": \"string\",\n                          \"example\": \"\"\n                        },\n                        \"key\": {\n                          \"type\": \"string\",\n                          \"example\": \"\"\n                        }\n                      }\n                    },\n                    \"locked\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update Domain\",\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DomainConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Invalid fields or provider credentials\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Remove Domain\",\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          },\n          \"409\": {\n            \"description\": \"Conflict. The domain is still in use\"\n          }\n        }\n      }\n    },\n    \"/domains/{domain}/dns_check\": {\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"domain\",\n          \"description\": \"Domain\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"in\": \"query\",\n          \"name\": \"subdomain\",\n          \"description\": \"The subdomain to check the DNS record for\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Check DNS Records\",\n        \"tags\": [\n          \"Domains\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"needsOverwrite\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/settings/dynamic_dns\": {\n      \"get\": {\n        \"summary\": \"Get Dynamic DNS State\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"enabled\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Dynamic DNS State\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DynamicDnsConfig\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/apps/install\": {\n      \"post\": {\n        \"summary\": \"Install app\",\n        \"description\": \"This triggers an app installation. Use the `taskId` from the response with the Tasks API to follow the installation progress \u003cbr/\u003e \u003cbr/\u003e **Either `manifest` or `appStoreId` are required!** In most cases the `appStoreId` is the correct property to be used for installing apps from the Cloudron app catalogue.\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"location\",\n                  \"domain\",\n                  \"accessRestriction\"\n                ],\n                \"properties\": {\n                  \"manifest\": {\n                    \"$ref\": \"#/components/schemas/AppManifest\"\n                  },\n                  \"appStoreId\": {\n                    \"type\": \"string\",\n                    \"example\": \"org.wordpress.cloudronapp\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"Subdomain the app is installed at. This may be an empty string if the app is installed directly at `domain`\",\n                    \"example\": \"www\"\n                  },\n                  \"domain\": {\n                    \"type\": \"string\",\n                    \"example\": \"example.com\"\n                  },\n                  \"accessRestriction\": {\n                    \"type\": \"object\",\n                    \"description\": \"By default all users have access\",\n                    \"default\": {},\n                    \"example\": {}\n                  },\n                  \"portBindings\": {\n                    \"type\": \"object\",\n                    \"default\": {}\n                  },\n                  \"icon\": {\n                    \"type\": \"string\"\n                  },\n                  \"label\": {\n                    \"type\": \"string\",\n                    \"default\": \"\",\n                    \"example\": \"MyAwesomeWebsite\"\n                  },\n                  \"memoryLimit\": {\n                    \"type\": \"number\",\n                    \"format\": \"int32\",\n                    \"default\": \"Value from the AppManifest\",\n                    \"description\": \"Memory limit as a number of `MB * 1024 * 1024`. So 600MB memory limit is 629145600\",\n                    \"example\": 629145600\n                  },\n                  \"sso\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"For apps with `optionalSso` set in the manifest.\",\n                    \"default\": true,\n                    \"example\": true\n                  },\n                  \"enableBackup\": {\n                    \"type\": \"boolean\",\n                    \"default\": true,\n                    \"example\": true\n                  },\n                  \"enableAutomaticUpdate\": {\n                    \"type\": \"boolean\",\n                    \"default\": true,\n                    \"example\": true\n                  },\n                  \"alternateDomains\": {\n                    \"type\": \"array\",\n                    \"default\": [],\n                    \"items\": {}\n                  },\n                  \"overwriteDns\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"If set to `true` Cloudron will overwrite any existing DNS records. This should not be required in most cases.\",\n                    \"default\": false,\n                    \"example\": false\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\",\n                      \"example\": \"2b97b864-37b6-4e79-88b0-63712186a326\"\n                    },\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"example\": \"1234\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps\": {\n      \"get\": {\n        \"summary\": \"List installed apps\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"apps\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/App\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}\": {\n      \"get\": {\n        \"summary\": \"Get installed app\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/App\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/restart\": {\n      \"post\": {\n        \"summary\": \"Restart app\",\n        \"description\": \"Restart an installed app\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"description\": \"taskId to track restart process via the task API\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/start\": {\n      \"post\": {\n        \"summary\": \"Start app\",\n        \"description\": \"Start a stopped app\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"description\": \"taskId to track start process via the task API\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/configure/location\": {\n      \"post\": {\n        \"summary\": \"Location settings\",\n        \"description\": \"Configure the domain, subdomain, alias of an app\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"overwriteDns\",\n                  \"location\",\n                  \"domain\"\n                ],\n                \"properties\": {\n                  \"overwriteDns\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"to overwrite the dns\",\n                    \"example\": false\n                  },\n                  \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"the main location/subdomain of the app\",\n                    \"example\": \"stage\"\n                  },\n                  \"domain\": {\n                    \"type\": \"string\",\n                    \"description\": \"the main domain\",\n                    \"example\": \"cloudron.dev\"\n                  },\n                  \"portBindings\": {\n                    \"type\": \"object\",\n                    \"description\": \"array of port bindings\",\n                    \"default\": {},\n                    \"example\": {\n                      \"EXAMPLE_PORT\": 25565\n                    }\n                  },\n                  \"alternateDomains\": {\n                    \"type\": \"array\",\n                    \"description\": \"list of alternate domains redirecting to the main location - uncapitalized chars only\",\n                    \"default\": [],\n                    \"example\": [\n                      {\n                        \"subdomain\": \"example-not-default-only-uncapitalized-chars\",\n                        \"domain\": \"cloudron.dev\"\n                      }\n                    ],\n                    \"items\": {}\n                  },\n                  \"aliasDomains\": {\n                    \"type\": \"array\",\n                    \"description\": \"list of alias domains - uncapitalized chars only\",\n                    \"default\": [],\n                    \"example\": [\n                      {\n                        \"subdomain\": \"example-not-default-only-uncapitalized-chars\",\n                        \"domain\": \"cloudron.dev\"\n                      }\n                    ],\n                    \"items\": {}\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"description\": \"taskId to track stop process via the task API\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/configure/memory_limit\": {\n      \"post\": {\n        \"summary\": \"Set the memory limit\",\n        \"description\": \"Increase or the decrease the allocated memory limit\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"memoryLimit\"\n                ],\n                \"properties\": {\n                  \"memoryLimit\": {\n                    \"type\": \"number\",\n                    \"description\": \"the memory limit in bytes\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"description\": \"taskId to track start process via the task API\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/stop\": {\n      \"post\": {\n        \"summary\": \"Stop app\",\n        \"description\": \"Stop a running app\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"description\": \"taskId to track stop process via the task API\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/clone\": {\n      \"post\": {\n        \"summary\": \"Clone app\",\n        \"description\": \"Clone app identified by appid from a backup to a new instance with the same version and data\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"location\",\n                  \"domain\",\n                  \"backupId\"\n                ],\n                \"properties\": {\n                  \"backupId\": {\n                    \"type\": \"string\",\n                    \"description\": \"BackupID of the backup the clone should be based off\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"subdomain\"\n                  },\n                  \"domain\": {\n                    \"type\": \"string\",\n                    \"description\": \"domain\"\n                  },\n                  \"portBindings\": {\n                    \"description\": \"If an app uses other TCP/UDP ports, new port bindings have to be specified to avoid conflict\",\n                    \"type\": \"object\",\n                    \"default\": {}\n                  },\n                  \"overwriteDns\": {\n                    \"type\": \"boolean\",\n                    \"default\": false\n                  },\n                  \"skipDnsSetup\": {\n                    \"description\": \"skipping DNS setup allows dry-runs for backup/restore testing\",\n                    \"type\": \"boolean\",\n                    \"default\": false\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\",\n                      \"description\": \"appId of the newly created clone instance\"\n                    },\n                    \"taskId\": {\n                      \"type\": \"string\",\n                      \"description\": \"taskId to track clone process via the task API\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/logs\": {\n      \"get\": {\n        \"summary\": \"Get App Logs\",\n        \"description\": \"For format `plain` simple text lines are returned. When format is `json` each log line looks like `{ realtimeTimestamp: timestamp, message: message, source: appId }`\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"lines\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": 10\n            },\n            \"description\": \"Number of log lines to fetch. Starting at latest.\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"plain\",\n                \"json\"\n              ],\n              \"default\": \"json\"\n            },\n            \"description\": \"Log type\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/x-logs\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{appid}/logstream\": {\n      \"get\": {\n        \"summary\": \"Get App Logstream\",\n        \"description\": \"A logstream is of type [EventSource](https://developer.mozilla.org/en-US/docs/Web/API/EventSource). For format `plain` simple text lines are returned. When format is `json` each log line looks like `{ realtimeTimestamp: timestamp, message: message, source: appId }`\",\n        \"tags\": [\n          \"Apps\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"appid\",\n            \"description\": \"Installed App ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"lines\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": 10\n            },\n            \"description\": \"Number of log lines to fetch. Starting at latest.\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"plain\",\n                \"json\"\n              ],\n              \"default\": \"json\"\n            },\n            \"description\": \"Log type\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/event-stream\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/settings/unstable_apps\": {\n      \"get\": {\n        \"summary\": \"Get Unstable Apps State\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"enabled\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Unstable Apps State\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/DynamicDnsConfig\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/settings/backup_config\": {\n      \"get\": {\n        \"summary\": \"Get Backup Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BackupConfig\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Backup Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BackupConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/settings/platform_config\": {\n      \"get\": {\n        \"summary\": \"Get Platform Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PlatformConfig\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Platform Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PlatformConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/settings/external_ldap_config\": {\n      \"get\": {\n        \"summary\": \"Get External LDAP Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExternalLdapConfig\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set External LDAP Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ExternalLdapConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Invalid field\"\n          }\n        }\n      }\n    },\n    \"/settings/registry_config\": {\n      \"get\": {\n        \"summary\": \"Get Registry Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistryConfig\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Registry Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegistryConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Invalid field\"\n          }\n        }\n      }\n    },\n    \"/settings/sysinfo_config\": {\n      \"get\": {\n        \"summary\": \"Get Sysinfo Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SysinfoConfig\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Sysinfo Config\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SysinfoConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Invalid field\"\n          }\n        }\n      }\n    },\n    \"/settings/app_autoupdate_pattern\": {\n      \"get\": {\n        \"summary\": \"Get Apps Autoupdate Pattern\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdatePattern\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Apps Autoupdate Pattern\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UpdatePattern\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/settings/box_autoupdate_pattern\": {\n      \"get\": {\n        \"summary\": \"Get Cloudron Autoupdate Pattern\",\n        \"description\": \"Gets the pattern that the Cloudron uses to automatically update itself and installed apps. Patterns are matched based on the Cloudron's timezone.\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdatePattern\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Cloudron Autoupdate Pattern\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UpdatePattern\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/settings/time_zone\": {\n      \"get\": {\n        \"summary\": \"Get Timezone\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TimezoneConfig\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Timezone\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TimezoneConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/settings/cloudron_name\": {\n      \"get\": {\n        \"summary\": \"Get Cloudron Name\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CloudronNameConfig\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Cloudron Name\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CloudronNameConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/settings/cloudron_avatar\": {\n      \"get\": {\n        \"summary\": \"Get Cloudron Avatar\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"image/png\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Set Cloudron Avatar\",\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"avatar\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                },\n                \"required\": [\n                  \"avatar\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/backups\": {\n      \"get\": {\n        \"summary\": \"List Backups\",\n        \"tags\": [\n          \"Backups\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PaginationPage\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PaginationPerPage\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"backups\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          },\n                          \"creationTime\": {\n                            \"type\": \"number\",\n                            \"format\": \"date-time\"\n                          },\n                          \"version\": {\n                            \"type\": \"string\",\n                            \"description\": \"Cloudron version that backups was made for\",\n                            \"example\": \"4.2.1\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"description\": \"Is always `box` since this API returns the list of platform backups. Individual app backups can be retrieved with the /api/v1/apps/ routes.\"\n                          },\n                          \"dependsOn\": {\n                            \"type\": \"array\",\n                            \"description\": \"Contains a list of backup IDs referencing the app backups\",\n                            \"items\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"state\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"normal\",\n                              \"creating\",\n                              \"error\"\n                            ]\n                          },\n                          \"manifest\": {\n                            \"type\": \"object\",\n                            \"example\": null,\n                            \"description\": \"Is always `null` since this API returns the list of platform backups. Individual app backups can be retrieved with the /api/v1/apps/ routes.\"\n                          },\n                          \"format\": {\n                            \"$ref\": \"#/components/schemas/BackupFormat\"\n                          },\n                          \"preserveSecs\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Time to keep this backup in seconds (1 week is 604800 seconds). This number + `creationTime` determines if a backup is kept or removed\",\n                            \"example\": 604800\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/backups/create\": {\n      \"post\": {\n        \"summary\": \"Trigger new Backup\",\n        \"description\": \"This will trigger a new backup for the whole system, including all apps.\",\n        \"tags\": [\n          \"Backups\"\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"integer\",\n                      \"description\": \"This id can be used with the /api/v1/tasks routes to determine state and get logs\",\n                      \"example\": 123\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/backups/cleanup\": {\n      \"post\": {\n        \"summary\": \"Cleanup old Backups\",\n        \"description\": \"Based on the backup creation and `retentionSecs` specified in the backup config, backups will be purged. This should not need to be called manually as the same logic is called automatically very 6 hours.\",\n        \"tags\": [\n          \"Backups\"\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"taskId\": {\n                      \"type\": \"integer\",\n                      \"description\": \"This id can be used with the /api/v1/tasks routes to determine state and get logs\",\n                      \"example\": 123\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tasks\": {\n      \"get\": {\n        \"summary\": \"List Tasks\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PaginationPage\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PaginationPerPage\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"app\",\n                \"backup\",\n                \"update\",\n                \"renewcerts\",\n                \"prepareDashboardDomain\",\n                \"cleanBackups\",\n                \"syncExternalLdap\"\n              ],\n              \"default\": \"\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"tasks\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Task\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tasks/{taskId}\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/TaskId\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get Task\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Task\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tasks/{taskId}/logs\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/TaskId\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get Task Logs\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/x-logs\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tasks/{taskId}/logstream\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/TaskId\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get Task Logstream\",\n        \"description\": \"The log stream is in [EventSource](https://developer.mozilla.org/en-US/docs/Web/API/EventSource) format\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/tasks/{taskId}/stop\": {\n      \"parameters\": [\n        {\n          \"$ref\": \"#/components/parameters/TaskId\"\n        }\n      ],\n      \"post\": {\n        \"summary\": \"Stop Task\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/services\": {\n      \"get\": {\n        \"summary\": \"Get Services\",\n        \"tags\": [\n          \"Services\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"services\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": \"mysql\",\n                        \"enum\": [\n                          \"mail\",\n                          \"mongodb\",\n                          \"mysql\",\n                          \"postgresql\",\n                          \"docker\",\n                          \"unbound\",\n                          \"sftp\",\n                          \"graphite\",\n                          \"nginx\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/services/{service}\": {\n      \"get\": {\n        \"summary\": \"Get Service\",\n        \"tags\": [\n          \"Services\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ServiceName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Service\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Configure Service\",\n        \"tags\": [\n          \"Services\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ServiceName\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"memory\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\",\n                    \"minimum\": 0\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/services/{service}/logs\": {\n      \"get\": {\n        \"summary\": \"Get Service Logs\",\n        \"tags\": [\n          \"Services\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ServiceName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/x-logs\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/services/{service}/logstream\": {\n      \"get\": {\n        \"summary\": \"Get Service Logstream\",\n        \"description\": \"The log stream is in [EventSource](https://developer.mozilla.org/en-US/docs/Web/API/EventSource) format\",\n        \"tags\": [\n          \"Services\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ServiceName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/services/{service}/restart\": {\n      \"post\": {\n        \"summary\": \"Restart Service\",\n        \"tags\": [\n          \"Services\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ServiceName\"\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"summary\": \"List Users\",\n        \"description\": \"Get all users\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PaginationPage\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PaginationPerPage\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"search\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"users\": {\n                      \"type\": \"array\",\n                      \"example\": [],\n                      \"items\": {}\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Add User\",\n        \"description\": \"Add new User\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"If not specified, the new user will have to set it during onboarding\"\n                  },\n                  \"displayName\": {\n                    \"type\": \"string\",\n                    \"description\": \"If not specified, the new user will have to set it during onboarding\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"description\": \"If not specified, the new user will have to set it during onboarding\"\n                  },\n                  \"admin\": {\n                    \"type\": \"boolean\",\n                    \"default\": false\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{userId}\": {\n      \"get\": {\n        \"summary\": \"Get User\",\n        \"description\": \"Get user\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/UserId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Update User\",\n        \"description\": \"Update user\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/UserId\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"fallbackEmail\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"If not specified, the new user will have to set it during onboarding\"\n                  },\n                  \"displayName\": {\n                    \"type\": \"string\",\n                    \"description\": \"If not specified, the new user will have to set it during onboarding\"\n                  },\n                  \"admin\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"active\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete User\",\n        \"description\": \"Delete user\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/UserId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/users/{userId}/password\": {\n      \"post\": {\n        \"summary\": \"Change Password\",\n        \"description\": \"Change Password\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/UserId\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/users/{userId}/groups\": {\n      \"put\": {\n        \"summary\": \"Set Groups\",\n        \"description\": \"Set groups a user belongs to\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/UserId\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"groupIds\"\n                ],\n                \"properties\": {\n                  \"groupIds\": {\n                    \"type\": \"array\",\n                    \"example\": [],\n                    \"items\": {}\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/users/{userId}/send_invite_email\": {\n      \"post\": {\n        \"summary\": \"Send Invite\",\n        \"description\": \"Send user invite email. This will not reset the invite token. See the create invite route.\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/UserId\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"email\",\n                    \"example\": \"user@example.com\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/users/{userId}/invite_link\": {\n      \"get\": {\n        \"summary\": \"Get Invite Link\",\n        \"description\": \"Get an invite link. This will create a new one, if the previous is expired. This only works for local users, not LDAP/ActiveDirectory users.\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/UserId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"inviteLink\": {\n                      \"type\": \"url\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/groups\": {\n      \"get\": {\n        \"summary\": \"List Groups\",\n        \"description\": \"List groups\",\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"groups\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Group\"\n                      },\n                      \"example\": [\n                        {\n                          \"id\": \"gid-e08ca116-d3e5-43c9-b43f-6eb990be58ea\",\n                          \"name\": \"Manager\"\n                        },\n                        {\n                          \"id\": \"gid-351904ce-6a21-4fbc-806e-4f457b120ef3\",\n                          \"name\": \"Employee\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Add Group\",\n        \"description\": \"Add group\",\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Group\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Group\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/groups/{groupId}\": {\n      \"get\": {\n        \"summary\": \"Get Group\",\n        \"description\": \"Get group\",\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/GroupId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupWithMembers\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Update Group\",\n        \"description\": \"Update group\",\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/GroupId\"\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Group\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete Group\",\n        \"description\": \"Delete group\",\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/GroupId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/groups/{groupId}/members\": {\n      \"put\": {\n        \"summary\": \"Set Group Members\",\n        \"description\": \"Set group members\",\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/GroupId\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"userIds\"\n                ],\n                \"properties\": {\n                  \"userIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/UserId\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}\": {\n      \"get\": {\n        \"summary\": \"Get Mail Domain Info\",\n        \"description\": \"Get Mail Domain Info\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Domain\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/status\": {\n      \"get\": {\n        \"summary\": \"Get Mail Domain Status\",\n        \"description\": \"Get Mail Domain Status\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"dns\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"mx\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"domain\": {\n                              \"type\": \"string\",\n                              \"example\": \"example.com\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"example\": \"@\"\n                            },\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"example\": \"MX\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"example\": \"10 my.example.com.\"\n                            },\n                            \"expected\": {\n                              \"type\": \"string\",\n                              \"example\": \"10 my.example.com.\"\n                            },\n                            \"status\": {\n                              \"type\": \"boolean\",\n                              \"example\": true\n                            }\n                          }\n                        },\n                        \"spf\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"domain\": {\n                              \"type\": \"string\",\n                              \"example\": \"example.com\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"example\": \"@\"\n                            },\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"example\": \"TXT\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"example\": \"v=spf1 a:my.example.com ~all\"\n                            },\n                            \"expected\": {\n                              \"type\": \"string\",\n                              \"example\": \"v=spf1 a:my.example.com ~all\"\n                            },\n                            \"status\": {\n                              \"type\": \"boolean\",\n                              \"example\": true\n                            }\n                          }\n                        },\n                        \"dmarc\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"domain\": {\n                              \"type\": \"string\",\n                              \"example\": \"_dmarc.nebulon.space\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"example\": \"_dmarc\"\n                            },\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"example\": \"TXT\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"example\": \"v=DMARC1; p=reject; pct=100\"\n                            },\n                            \"expected\": {\n                              \"type\": \"string\",\n                              \"example\": \"v=DMARC1; p=reject; pct=100\"\n                            },\n                            \"status\": {\n                              \"type\": \"boolean\",\n                              \"example\": true\n                            }\n                          }\n                        },\n                        \"dkim\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"domain\": {\n                              \"type\": \"string\",\n                              \"example\": \"cloudron._domainkey.example.com\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"example\": \"cloudron._domainkey\"\n                            },\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"example\": \"TXT\"\n                            },\n                            \"expected\": {\n                              \"type\": \"string\",\n                              \"example\": \"v=DKIM1; t=s; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDBooiGgy1csAPyIf2bfpSrhbVu8l086BXynoCPLlznxpa1HzhYJhv/Y72/3ce88WsSUs7NmtfAYSMc59BrC+ad3ibHTFj3Z5I6YwWsKymxQsoD2hd71IMkmHe9I9zV+r2NTiBwTFSfli8+GUUTMSwCl/vb4o53DRVkCxXBlxNGvQIDAQAB\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"example\": \"v=DKIM1; t=s; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDBooiGgy1csAPyIf2bfpSrhbVu8l086BXynoCPLlznxpa1HzhYJhv/Y72/3ce88WsSUs7NmtfAYSMc59BrC+ad3ibHTFj3Z5I6YwWsKymxQsoD2hd71IMkmHe9I9zV+r2NTiBwTFSfli8+GUUTMSwCl/vb4o53DRVkCxXBlxNGvQIDAQAB\"\n                            },\n                            \"status\": {\n                              \"type\": \"boolean\",\n                              \"example\": true\n                            }\n                          }\n                        },\n                        \"ptr\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"domain\": {\n                              \"type\": \"string\",\n                              \"example\": \"59.133.179.95.in-addr.arpa\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"example\": \"95.179.133.59\"\n                            },\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"example\": \"PTR\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"example\": \"my.example.com\"\n                            },\n                            \"expected\": {\n                              \"type\": \"string\",\n                              \"example\": \"my.example.com\"\n                            },\n                            \"status\": {\n                              \"type\": \"boolean\",\n                              \"example\": true\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"rbl\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"status\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        },\n                        \"ip\": {\n                          \"type\": \"string\",\n                          \"example\": \"1.2.3.4\"\n                        },\n                        \"servers\": {\n                          \"type\": \"array\",\n                          \"example\": [],\n                          \"items\": {}\n                        }\n                      }\n                    },\n                    \"relay\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"value\": {\n                          \"type\": \"string\",\n                          \"example\": \"OK\"\n                        },\n                        \"status\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/enable\": {\n      \"post\": {\n        \"summary\": \"Enable Incoming Email\",\n        \"description\": \"Enable incoming email for the domain to receive emails. By default, only email sending is enabled.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/EnableMailboxes\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/mail_from_validation\": {\n      \"post\": {\n        \"summary\": \"Set Mail From Validation\",\n        \"description\": \"Set Mail From Validation\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/EnableMailboxes\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/catch_all\": {\n      \"post\": {\n        \"summary\": \"Set Catchall\",\n        \"description\": \"Set Catchall addresses\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"addresses\"\n                ],\n                \"properties\": {\n                  \"addresses\": {\n                    \"type\": \"array\",\n                    \"example\": [\n                      \"mailbox@example.com\"\n                    ],\n                    \"items\": {}\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/relay\": {\n      \"post\": {\n        \"summary\": \"Set SMTP Relay\",\n        \"description\": \"Configure a SMTP relay for this domain\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"provider\"\n                ],\n                \"properties\": {\n                  \"provider\": {\n                    \"$ref\": \"#/components/schemas/MailRelayProvider\"\n                  },\n                  \"host\": {\n                    \"type\": \"string\"\n                  },\n                  \"port\": {\n                    \"type\": \"number\"\n                  },\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  },\n                  \"acceptSelfSignedCerts\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/banner\": {\n      \"post\": {\n        \"summary\": \"Set Mail Signature\",\n        \"description\": \"Set Mail Signature\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"text\"\n                ],\n                \"properties\": {\n                  \"text\": {\n                    \"type\": \"string\"\n                  },\n                  \"html\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/send_test_mail\": {\n      \"post\": {\n        \"summary\": \"Test Mail\",\n        \"description\": \"Sent a test mail from domain.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"to\"\n                ],\n                \"properties\": {\n                  \"to\": {\n                    \"type\": \"string\",\n                    \"example\": \"hello@example.com\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/mailbox_count\": {\n      \"get\": {\n        \"summary\": \"Get Mailbox Count\",\n        \"description\": \"Get mailbox count.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"count\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/mailboxes\": {\n      \"get\": {\n        \"summary\": \"List Mailboxes\",\n        \"description\": \"List mailboxes for this domain.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PaginationPage\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PaginationPerPage\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"search\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"mailboxes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Mailbox\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Add Mailbox\",\n        \"description\": \"Add mailbox.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"name\",\n                  \"ownerId\",\n                  \"ownerType\"\n                ],\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"webmaster\"\n                  },\n                  \"ownerId\": {\n                    \"type\": \"string\",\n                    \"example\": \"uid-be9dcf57-ad65-40e0-a3f8-d1c75974bf01\"\n                  },\n                  \"ownerType\": {\n                    \"type\": \"string\",\n                    \"example\": \"user\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mail/{domain}/mailboxes/{name}\": {\n      \"get\": {\n        \"summary\": \"Get Mailbox\",\n        \"description\": \"Get mailbox information.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/MailboxName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Mailbox\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Update Mailbox\",\n        \"description\": \"Update mailbox.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/MailboxName\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete Mailbox\",\n        \"description\": \"Delete mailbox.\",\n        \"tags\": [\n          \"Mail\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DomainName\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/MailboxName\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"deleteMails\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Also delete emails in mailbox.\",\n                    \"default\": false\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://my.example.com/api/v1\"\n    }\n  ],\n  \"components\": {\n    \"parameters\": {\n      \"DomainName\": {\n        \"in\": \"path\",\n        \"name\": \"domain\",\n        \"description\": \"Domain\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"MailboxName\": {\n        \"in\": \"path\",\n        \"name\": \"name\",\n        \"description\": \"Mailbox\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"PaginationPage\": {\n        \"in\": \"query\",\n        \"name\": \"page\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"minimum\": 1,\n          \"default\": 1\n        }\n      },\n      \"PaginationPerPage\": {\n        \"in\": \"query\",\n        \"name\": \"per_page\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"minimum\": 1,\n          \"default\": 25\n        }\n      },\n      \"TaskId\": {\n        \"in\": \"path\",\n        \"name\": \"taskId\",\n        \"description\": \"Task ID\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"UserId\": {\n        \"in\": \"path\",\n        \"name\": \"userId\",\n        \"description\": \"User ID\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"GroupId\": {\n        \"in\": \"path\",\n        \"name\": \"groupId\",\n        \"description\": \"Group ID\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ServiceName\": {\n        \"in\": \"path\",\n        \"name\": \"service\",\n        \"description\": \"Service Name\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"mail\",\n            \"mongodb\",\n            \"mysql\",\n            \"postgresql\",\n            \"docker\",\n            \"unbound\",\n            \"sftp\",\n            \"graphite\",\n            \"nginx\"\n          ]\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"UpdatePattern\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UpdatePattern\"\n            }\n          }\n        }\n      },\n      \"DynamicDnsConfig\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"enabled\"\n              ],\n              \"properties\": {\n                \"enabled\": {\n                  \"type\": \"boolean\",\n                  \"example\": false\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Group\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"name\"\n              ],\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"example\": \"Manager\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"EnableMailboxes\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"enabled\"\n              ],\n              \"properties\": {\n                \"enabled\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"Mailbox\": {\n        \"description\": \"Mailbox\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"webmaster\"\n          },\n          \"domain\": {\n            \"type\": \"string\",\n            \"example\": \"example.com\"\n          },\n          \"ownerId\": {\n            \"type\": \"string\",\n            \"example\": \"uid-be9dcf57-ad65-40e0-a3f8-d1c75974bf01\"\n          },\n          \"ownerType\": {\n            \"type\": \"string\",\n            \"example\": \"user\"\n          },\n          \"aliases\": {\n            \"type\": \"array\",\n            \"example\": \"[{ name, domain }]\",\n            \"items\": {}\n          }\n        }\n      },\n      \"Domain\": {\n        \"description\": \"Domain Info\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"domain\": {\n            \"type\": \"string\",\n            \"example\": \"example.com\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"mailFromValidation\": {\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"catchAll\": {\n            \"type\": \"array\",\n            \"example\": [],\n            \"items\": {}\n          },\n          \"relay\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"provider\": {\n                \"$ref\": \"#/components/schemas/MailRelayProvider\"\n              }\n            }\n          },\n          \"banner\": {\n            \"type\": \"object\",\n            \"description\": \"Text and HTML mail signature\",\n            \"properties\": {\n              \"text\": {\n                \"type\": \"string\"\n              },\n              \"html\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"UserId\": {\n        \"description\": \"User ID\",\n        \"type\": \"string\",\n        \"example\": \"uid-5d06e9da-8e4a-4184-b63c-c25487e1c70b\"\n      },\n      \"Group\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"gid-e08ca116-d3e5-43c9-b43f-6eb990be58ea\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Manager\"\n          }\n        }\n      },\n      \"GroupWithMembers\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"gid-e08ca116-d3e5-43c9-b43f-6eb990be58ea\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Manager\"\n          },\n          \"userIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UserId\"\n            },\n            \"example\": [\n              \"uid-e08ca116-d3e5-43c9-b43f-6eb990be58ea\"\n            ]\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"fallbackEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"groupIds\": {\n            \"type\": \"array\",\n            \"example\": [],\n            \"items\": {}\n          },\n          \"admin\": {\n            \"type\": \"boolean\"\n          },\n          \"active\": {\n            \"type\": \"boolean\"\n          },\n          \"source\": {\n            \"type\": \"string\",\n            \"description\": \"A value of `ldap` indicates, this user if from an LDAP/ActiveDirectory user, otherwise a local user\",\n            \"enum\": [\n              \"\",\n              \"ldap\"\n            ]\n          }\n        }\n      },\n      \"RestrictedUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"active\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"Provider\": {\n        \"type\": \"string\",\n        \"description\": \"VPS provider name tag\",\n        \"enum\": [\n          \"ami\",\n          \"azure\",\n          \"cloudscale\",\n          \"contabo\",\n          \"digitalocean\",\n          \"ec2\",\n          \"exoscale\",\n          \"galaxygate\",\n          \"gce\",\n          \"hetzner\",\n          \"interox\",\n          \"lightsail\",\n          \"linode\",\n          \"netcup\",\n          \"ovh\",\n          \"rosehosting\",\n          \"scaleway\",\n          \"skysilk\",\n          \"time4vps\",\n          \"upcloud\",\n          \"vultr\",\n          \"generic\"\n        ],\n        \"example\": \"linode\"\n      },\n      \"MailRelayProvider\": {\n        \"type\": \"string\",\n        \"description\": \"Mail SMTP relay provider\",\n        \"enum\": [\n          \"cloudron-smtp\",\n          \"external-smtp\",\n          \"external-smtp-noauth\",\n          \"ses-smtp\",\n          \"elasticemail-smtp\",\n          \"google-smtp\",\n          \"mailgun-smtp\",\n          \"mailjet-smtp\",\n          \"postmark-smtp\",\n          \"sendgrid-smtp\",\n          \"sparkpost-smtp\",\n          \"noop\"\n        ],\n        \"example\": \"postmark-smtp\"\n      },\n      \"Service\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"mysql\",\n            \"enum\": [\n              \"mail\",\n              \"mongodb\",\n              \"mysql\",\n              \"postgresql\",\n              \"docker\",\n              \"unbound\",\n              \"sftp\",\n              \"graphite\",\n              \"nginx\"\n            ]\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"example\": \"active\",\n            \"enum\": [\n              \"starting\",\n              \"active\",\n              \"stopped\"\n            ]\n          },\n          \"memoryUsed\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"minimum\": 0\n          },\n          \"memoryPercent\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"minimum\": 0\n          },\n          \"error\": {\n            \"type\": \"string\",\n            \"example\": \"\",\n            \"nullable\": true\n          },\n          \"config\": {\n            \"type\": \"object\",\n            \"description\": \"If `memory` and `memorySwap` is not set, then they cannot be configured\",\n            \"properties\": {\n              \"memory\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"minimum\": 0\n              },\n              \"memorySwap\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"minimum\": 0\n              }\n            }\n          }\n        }\n      },\n      \"TaskType\": {\n        \"type\": \"string\",\n        \"example\": \"update\",\n        \"enum\": [\n          \"app\",\n          \"backup\",\n          \"update\",\n          \"renewcerts\",\n          \"prepareDashboardDomain\",\n          \"cleanBackups\",\n          \"syncExternalLdap\"\n        ]\n      },\n      \"Task\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/TaskType\"\n          },\n          \"percent\": {\n            \"type\": \"integer\",\n            \"example\": 33,\n            \"minimum\": 0,\n            \"maximum\": 100\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"For display purpose to show more informed progress\"\n          },\n          \"error\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\"\n              },\n              \"code\": {\n                \"type\": \"string\",\n                \"example\": \"crashed\",\n                \"enum\": [\n                  \"stopped\",\n                  \"crashed\",\n                  \"timeout\"\n                ]\n              }\n            }\n          },\n          \"active\": {\n            \"type\": \"boolean\",\n            \"description\": \"Determines if this task is currently active. Progress can be tracked with `message` and `percent`\",\n            \"example\": true\n          },\n          \"creationTime\": {\n            \"type\": \"integer\",\n            \"description\": \"Creation time UTC timestamp\"\n          },\n          \"result\": {\n            \"type\": \"object\"\n          },\n          \"ts\": {\n            \"type\": \"integer\",\n            \"description\": \"Last modified UTC timestamp\"\n          },\n          \"success\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"Determines if the task was successful. If `false` check `error` or `active` properties.\"\n          }\n        }\n      },\n      \"AddonConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"memory\": {\n            \"type\": \"integer\",\n            \"example\": 268435456,\n            \"description\": \"Memory limit in bytes. Example is 256MB\"\n          },\n          \"memorySwap\": {\n            \"type\": \"integer\",\n            \"example\": 536870912,\n            \"description\": \"Swap memory limit in bytes. Example is 512MB\"\n          }\n        }\n      },\n      \"DnsProvider\": {\n        \"type\": \"string\",\n        \"example\": \"digitalocean\",\n        \"enum\": [\n          \"route53\",\n          \"cloudflare\",\n          \"digitalocean\",\n          \"gandi\",\n          \"godaddy\",\n          \"gcdns\",\n          \"linode\",\n          \"namecom\",\n          \"namecheap\",\n          \"wildcard\",\n          \"manual\",\n          \"noop\"\n        ]\n      },\n      \"TlsConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"provider\": {\n            \"type\": \"string\",\n            \"example\": \"letsencrypt-prod\",\n            \"enum\": [\n              \"letsencrypt-prod\",\n              \"letsencrypt-staging\",\n              \"fallback\"\n            ]\n          },\n          \"wildcard\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          }\n        }\n      },\n      \"SysConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"provider\": {\n            \"type\": \"string\",\n            \"description\": \"Currently the sysinfo provider is only used to determine the public IP of the server. Which in turn is used in the DNS logic to setup records.\",\n            \"enum\": [\n              \"fixed\",\n              \"network-interface\",\n              \"generic\"\n            ],\n            \"example\": \"generic\"\n          }\n        }\n      },\n      \"DomainConfig\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"provider\",\n          \"config\"\n        ],\n        \"properties\": {\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/DnsProvider\"\n          },\n          \"config\": {\n            \"description\": \"Provider specific config. May include username and api tokens\",\n            \"type\": \"object\"\n          },\n          \"hyphenatedSubdomains\": {\n            \"type\": \"boolean\"\n          },\n          \"wildcard\": {\n            \"type\": \"boolean\"\n          },\n          \"zoneName\": {\n            \"type\": \"string\"\n          },\n          \"fallbackCertificate\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\",\n                \"example\": \"\"\n              },\n              \"cert\": {\n                \"type\": \"string\",\n                \"example\": \"\"\n              }\n            }\n          },\n          \"tlsConfig\": {\n            \"$ref\": \"#/components/schemas/TlsConfig\"\n          }\n        }\n      },\n      \"AppManifest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"App\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"2b97b864-37b6-4e79-88b0-63712186a326\"\n          },\n          \"appStoreId\": {\n            \"type\": \"string\",\n            \"example\": \"org.wordpress.cloudronapp\"\n          },\n          \"installationState\": {\n            \"type\": \"string\",\n            \"example\": \"installed\"\n          },\n          \"error\": {\n            \"type\": \"object\",\n            \"example\": null\n          },\n          \"runState\": {\n            \"type\": \"string\",\n            \"example\": \"running\"\n          },\n          \"health\": {\n            \"type\": \"string\",\n            \"example\": \"healthy\"\n          },\n          \"taskId\": {\n            \"type\": \"string\",\n            \"example\": \"1234\",\n            \"nullable\": true\n          },\n          \"location\": {\n            \"type\": \"string\",\n            \"description\": \"This is the subdomain, the app is installed on. May be an empty string if no subdomain is configured\",\n            \"example\": \"www\"\n          },\n          \"domain\": {\n            \"type\": \"string\",\n            \"example\": \"example.com\"\n          },\n          \"fqdn\": {\n            \"type\": \"string\",\n            \"description\": \"FullQualifiedDomainName is essentially `location`.`domain`\",\n            \"example\": \"www.example.com\"\n          },\n          \"manifest\": {\n            \"$ref\": \"#/components/schemas/AppManifest\"\n          },\n          \"portBindings\": {\n            \"type\": \"object\"\n          },\n          \"iconUrl\": {\n            \"type\": \"string\",\n            \"example\": \"/api/v1/apps/2b97b864-37b6-4e79-88b0-63712186a326/icon\"\n          },\n          \"creationTime\": {\n            \"type\": \"string\",\n            \"description\": \"Time the app was installed\",\n            \"format\": \"date-time\",\n            \"example\": \"ISO-8601 UTC date\"\n          },\n          \"ts\": {\n            \"type\": \"string\",\n            \"description\": \"Time the app was last modified\",\n            \"format\": \"date-time\",\n            \"example\": \"ISO-8601 UTC date\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {}\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"example\": \"MyGreatWebsite\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"BackupFormat\": {\n        \"type\": \"string\",\n        \"example\": \"rsync\",\n        \"enum\": [\n          \"rsync\",\n          \"targz\"\n        ]\n      },\n      \"BackupConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"provider\": {\n            \"type\": \"string\",\n            \"example\": \"s3\",\n            \"enum\": [\n              \"s3\",\n              \"gcs\",\n              \"filesystem\",\n              \"minio\",\n              \"s3-v4-compat\",\n              \"digitalocean-spaces\",\n              \"exoscale-sos\",\n              \"wasabi\",\n              \"scaleway-objectstorage\",\n              \"noop\"\n            ]\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/BackupFormat\"\n          },\n          \"retentionSecs\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum time to keep backups in seconds (1 week is 604800 seconds)\",\n            \"example\": 604800\n          },\n          \"intervalSecs\": {\n            \"type\": \"integer\",\n            \"description\": \"Interval for automatic backups in seconds. Must be atleast 6 hours (21600 seconds)\",\n            \"example\": 1,\n            \"minimum\": 21600\n          },\n          \"key\": {\n            \"type\": \"string\",\n            \"description\": \"Encyrption key. May contain a placeholder string to not leak the key\"\n          },\n          \"syncConcurrency\": {\n            \"type\": \"integer\",\n            \"example\": 5,\n            \"minimum\": 1\n          },\n          \"acceptSelfSignedCerts\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          },\n          \"backupFolder\": {\n            \"type\": \"string\",\n            \"description\": \"only for filesystem provider\"\n          },\n          \"noHardlinks\": {\n            \"type\": \"boolean\",\n            \"description\": \"only for filesystem provider\"\n          },\n          \"externalDisk\": {\n            \"type\": \"boolean\",\n            \"description\": \"only for filesystem provider\"\n          },\n          \"accessKeyId\": {\n            \"type\": \"string\",\n            \"description\": \"only for S3 style provider\"\n          },\n          \"secretAccessKey\": {\n            \"type\": \"string\",\n            \"description\": \"only for S3 style provider\"\n          },\n          \"signatureVersion\": {\n            \"type\": \"string\",\n            \"description\": \"only for S3 style provider\"\n          },\n          \"endpoint\": {\n            \"type\": \"string\",\n            \"description\": \"only for S3 style provider\"\n          },\n          \"region\": {\n            \"type\": \"string\",\n            \"description\": \"only for S3 style provider\"\n          },\n          \"bucket\": {\n            \"type\": \"string\",\n            \"description\": \"only for S3 and gcs style provider\"\n          },\n          \"prefix\": {\n            \"type\": \"string\",\n            \"description\": \"only for S3 and gcs style provider\"\n          },\n          \"projectId\": {\n            \"type\": \"string\",\n            \"description\": \"only for gcs provider\"\n          },\n          \"credentials\": {\n            \"type\": \"object\",\n            \"description\": \"only for gcs provider\",\n            \"properties\": {\n              \"client_email\": {\n                \"type\": \"string\"\n              },\n              \"private_key\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"PlatformConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mysql\": {\n            \"$ref\": \"#/components/schemas/AddonConfig\"\n          },\n          \"postgresql\": {\n            \"$ref\": \"#/components/schemas/AddonConfig\"\n          },\n          \"mail\": {\n            \"$ref\": \"#/components/schemas/AddonConfig\"\n          },\n          \"mongodb\": {\n            \"$ref\": \"#/components/schemas/AddonConfig\"\n          }\n        }\n      },\n      \"ExternalLdapConfig\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"provider\",\n          \"url\",\n          \"baseDn\",\n          \"filter\"\n        ],\n        \"properties\": {\n          \"provider\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ad\",\n              \"jumpcloud\",\n              \"okta\",\n              \"other\",\n              \"noop\"\n            ]\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"baseDn\": {\n            \"type\": \"string\"\n          },\n          \"filter\": {\n            \"type\": \"string\"\n          },\n          \"usernameField\": {\n            \"type\": \"string\",\n            \"default\": \"uid\"\n          },\n          \"bindDn\": {\n            \"type\": \"string\"\n          },\n          \"bindPassword\": {\n            \"type\": \"string\"\n          },\n          \"autoCreate\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"RegistryConfig\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"serverAddress\"\n        ],\n        \"properties\": {\n          \"serverAddress\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"SysinfoConfig\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"provider\"\n        ],\n        \"properties\": {\n          \"provider\": {\n            \"type\": \"string\",\n            \"default\": \"generic\",\n            \"enum\": [\n              \"generic\",\n              \"fixed\",\n              \"network-interface\"\n            ]\n          },\n          \"ip\": {\n            \"type\": \"string\",\n            \"description\": \"Only applies to the `fixed` provider\",\n            \"example\": \"123.123.123.123\"\n          },\n          \"ifname\": {\n            \"type\": \"string\",\n            \"description\": \"Only applies to the `network-interface` provider\",\n            \"example\": \"eth0\"\n          }\n        }\n      },\n      \"UpdatePattern\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"pattern\"\n        ],\n        \"properties\": {\n          \"pattern\": {\n            \"type\": \"string\",\n            \"example\": \"0 030 4 1,15 * 5\",\n            \"description\": \"The format listed in the [node-cron](https://github.com/ncb000gt/node-cron#cron-ranges) page. Note that unlike classic crontab format, the pattern contains seconds as the first part. Setting pattern to `never` disables auto update. Some examples of patterns are\\n* `00 00 1,3,5,23 * * *` would run updates at 1am, 3am, 5am, 11pm every night.\\n* `0 030 4 1,15 * 5` would run updates at 4:30 am on the 1st and 15th of each month, plus every Friday.\"\n          }\n        }\n      },\n      \"TimezoneConfig\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"timeZone\"\n        ],\n        \"properties\": {\n          \"timeZone\": {\n            \"type\": \"string\",\n            \"default\": \"America/Los_Angeles\",\n            \"description\": \"Timezone is automatically set based on the IP address from where the Cloudron was activated. This timezone is used with the auto update pattern to trigger updates at the correct time. See the [Tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for a list of valid values.\"\n          }\n        }\n      },\n      \"CloudronNameConfig\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"default\": \"Cloudron\"\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: paths: /apps/{appid}/logstream: get: : parameters: parse parameter \"lines\": schema: parse default: expected type \"string\", got \"number\""
}