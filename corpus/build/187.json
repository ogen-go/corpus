{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PGScatalog/PGS_Catalog"
		},
		"file": {
			"name": "openapi-schema.yml",
			"path": "rest_api/static/rest_api/openapi/openapi-schema.yml",
			"content": "openapi: 3.0.3\nservers:\n  - url: https://www.pgscatalog.org/\ninfo:\n\n  title: PGS Catalog REST API\n  version: '1.8.2'\n  description: |\n    Programmatic access to the PGS Catalog metadata. More information about the metadata and its structure can be found [here](/docs/).\n\n    \u003ci class=\"fas fa-exclamation-circle pgs_color_1\"\u003e\u003c/i\u003e Each PGS is provided as a scoring file (containing the variants, alleles, effect weights) on our \u003ca href=\"http://ftp.ebi.ac.uk/pub/databases/spot/pgs/scores/\" target=\"_blank\"\u003eFTP site\u003c/a\u003e.\n    The variants are not distributed within this API; however, a link to the scoring file is provided in the\u003ccode\u003eftp_scoring_file\u003c/code\u003efield for each result of the\u003ccode\u003e/rest/score/\u003c/code\u003eendpoints for ease of download.\n\n    ---\n\n    ###### REST API settings\n\n    * `pagination`: This REST API is using pagination for the endpoints returning more than 1 results. It is currently set to **50** results per page.\n      \u003ca class=\"toggle_btn\" id=\"pagination\"\u003eMore information \u003ci class=\"fas fa-plus-circle\"\u003e\u003c/i\u003e\u003c/a\u003e\n      \u003cdiv class=\"toggle_content\" id=\"content_pagination\" style=\"display:none\"\u003e\n\n        ###### **Pagination structure**\n\n        Here is an example of the pagination result structure in JSON:\n\n        ```\n          {\n            \"size\": 50,\n            \"count\": 137,\n            \"next\": \"https://www.pgscatalog.org/rest/score/all?limit=50\u0026offset=50\",\n            \"previous\": null,\n            \"results\": [\n              \u003c list the results 1 to 50 \u003e\n            ]\n          }\n        ```\n        * **size**: is the number of results in the current page.\n        * **count**: is the overall number of results.\n        * **next**: is the URL to the following page of results.\n        * **previous**: is the URL to the preceding page of results (only present if you are not on the first page).\n        * **results**: contains the list of results of the current page.\n        \u003cpre\u003e\u003c/pre\u003e\n        ###### **Pagination parameters**\n        * **limit**: The number of results per page can be overwritten using this parameter, e.g:\n          * \u003ccode\u003e.../rest/score/all/?limit=100\u003c/code\u003e: returns the first 100 results.\n          * \u003ccode\u003e.../rest/score/all/?limit=150\u003c/code\u003e: returns all the results (the overall number of results is 137 in our example above).\n\n          The default value is **50**. The maximum value is **250**. Over this maximum value, the REST API returns an error 400.\n\n        * **offset**: This parameter indicates the starting position (0 based) of the query in relation to the complete set of results. It provides access to a desired range of results, e.g.:\n          * \u003ccode\u003e.../rest/score/all/?offset=75\u003c/code\u003e provides results from the number **76** to **125**, as the number of results per page is **50** by default (equivalent to \"limit=50\")\n          * \u003ccode\u003e.../rest/score/all/?offset=75\u0026limit=60\u003c/code\u003e provides results from the number **76** to **135**\n\n      \u003c/div\u003e\n\n\n    * `rate limit`: The limit number of queries is set to **100** queries per minute.\n      \u003ca class=\"toggle_btn\" id=\"rate_limit\"\u003eMore information \u003ci class=\"fas fa-plus-circle\"\u003e\u003c/i\u003e\u003c/a\u003e\n      \u003cdiv class=\"toggle_content\" id=\"content_rate_limit\" style=\"display:none\"\u003e\n        Here is an example of the JSON message returned if the rate limit is reached:\n\n        ```\n          {\n            \"message\": \"request limit exceeded\",\n            \"availableIn\": \"33 seconds\"\n          }\n        ```\n        * **message**: description of the error.\n        * **availableIn**: number of seconds before the rate limit is reset.\n      \u003c/div\u003e\n\n    ---\n\n    \u003ca class=\"toggle_btn\" id=\"changelog\"\u003eREST API version changelog \u003ci class=\"fas fa-plus-circle\"\u003e\u003c/i\u003e\u003c/a\u003e\n    \u003cdiv class=\"toggle_content\" id=\"content_changelog\" style=\"display:none\"\u003e\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.8.2\u003c/span\u003e - October 2021:\n        * New field **weight_type** in the Score schemas (`/rest/score/` endpoints).\n        * New parameters 'pgp_id' and 'pmid' for the endpoints `/rest/performance/search/` and `/rest/sample_set/search/`.\n        * New parameter 'pgp_id' for the endpoint `/rest/score/search/`.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.8.1\u003c/span\u003e - July 2021:\n        * Change the data type of the field **source_PMID** to numeric in the Sample schemas\n        * New field **source_DOI** in the Sample schemas and move the DOI data from **source_PMID** to this new field.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.8\u003c/span\u003e - June 2021:\n        * New endpoint `/rest/api_versions` providing the list of all the REST API versions and their changelogs.\n        * Change the data type of the field **rest_api/version** in `/rest/info` to **string**.\n        * Change the data structure of the `/rest/ancestry_categories` endpoint by adding the new fields **display_category** and **categories**.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.7\u003c/span\u003e - April 2021:\n        * New data **ancestry_distribution** in the `/rest/score` endpoints, providing information about ancestry distribution on each stage of the PGS.\n        * New endpoint `/rest/ancestry_categories` providing the list of ancestry symbols and names.\n        * New data **PMID** (PubMed ID) in the `/rest/info` endpoint, under the **citation** category.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.6\u003c/span\u003e - March 2021:\n        * New endpoint `/rest/info` with data such as the REST API version, latest release date and counts, PGS citation, ...\n        * New endpoint `/rest/cohort/all` returning all the Cohorts and their associated PGS.\n        * New endpoint `/rest/sample_set/all` returning all the Sample Set data.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.5\u003c/span\u003e - February 2021:\n        * Split the array of the field **associated_pgs_ids** (from the `/rest/publication/` endpoint) in 2 arrays **development** and **evaluation**, e.g.:\n          ```\n            \"associated_pgs_ids\": {\n              \"development\": [\n                  \"PGS000011\"\n              ],\n              \"evaluation\": [\n                  \"PGS000010\",\n                  \"PGS000011\"\n              ]\n            }\n          ```\n\n        * New flag parameter **include_parents** for the endpoint `/rest/trait/all` to display the traits in the catalog + their parent traits (default: 0)\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.4\u003c/span\u003e - January 2021:\n        * Setup a maximum value for the `limit` parameter.\n        * Add a new field **size** at the top of the paginated results, to indicate the number of results visible in the page.\n        * Replace the fields **labels** and **value** under performance_metrics**\u0026rarr;**effect_sizes**/**class_acc**/**othermetrics in the `/rest/performance` endpoints by new fields: **name_long**, **name_short**, **estimate**, **ci_lower**, **ci_upper** and **se**.\n\n          Now the content of the **labels** and **value** fields are structured like this, e.g.:\n          ```\n            {\n              \"name_long\": \"Odds Ratio\",\n              \"name_short\": \"OR\",\n              \"estimate\": 1.54,\n              \"ci_lower\": 1.51,\n              \"ci_upper\": 1.57,\n              \"se\": 0.0663\n            }\n          ```\n        * Restructure the **samples**\u0026rarr;**sample_age**/**followup_time** JSON (used in several endpoints):\n          * Merge and replace the fields **mean** and **median** into generic fields **estimate_type** and **estimate**:\n            ```\n              \"estimate_type\": \"mean\",\n              \"estimate\": 53.0\n            ```\n          * Merge and replace the fields **se** and **sd** into generic fields **variability_type** and **variability**:\n            ```\n              \"variability_type\": \"sd\",\n              \"variability\": 16.0,\n            ```\n          * Merge and replace the fields **range** and **iqr** by a new structure **interval**:\n            ```\n              \"interval\": {\n                \"type\": \"range\",\n                \"lower\": 51.0,\n                \"upper\": 77.0\n              }\n            ```\n            Note: The field **type** can take the value 'range', 'iqr' or 'ci'.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.3\u003c/span\u003e - November 2020:\n        * New endpoint `/rest/performance/all`.\n        * New field **license** in the `/rest/score` endpoints.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.2\u003c/span\u003e - July 2020:\n        * Update `/rest/trait/search`:\n          * New parameters '*include_children*' and '*exact*'.\n          * New field **child_associated_pgs_ids**\n        * Update `/rest/trait/{trait_id}`:\n          * New parameter '*include_children*'.\n          * New field **child_associated_pgs_ids**\n          * New field **child_traits** present when the parameter '*include_children*' is set to 1.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.1\u003c/span\u003e - June 2020:\n        * New endpoint `/rest/trait_category/all`.\n        * New field **trait_categories** in the `/rest/trait` endpoints.\n\n      * \u003cspan class=\"badge badge-pill badge-pgs\"\u003e1.0\u003c/span\u003e - May 2020:\n        * First version of the PGS Catalog REST API\n    \u003c/div\u003e\n\n    ---\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    email: pgs-info@ebi.ac.uk\n    name: PGS Catalog\n    url: https://www.pgscatalog.org\n  x-logo:\n    url: https://raw.githubusercontent.com/PGScatalog/PGS_Catalog/master/catalog/static/catalog/imgs/favicons/apple-touch-icon.png\n    altText: PGS Catalog logo\ntags:\n  - name: \"Score endpoints\"\n    description: Polygenic Score metadata with associated traits, publications, samples and cohorts\n  - name: \"Publication endpoints\"\n    description: PGS Publication metadata (PubMed IDs, doi, authors, associated Polygenic Scores, ...)\n  - name: \"Trait endpoints\"\n    description: PGS Trait metadata (ontology data [ID, label, description, URL, ...], associated Polygenic Scores, ...)\n  - name: \"Performance Metric endpoints\"\n    description: PGS Performance metrics metadata (odd ratio, beta coefficient, C-index, ...) with associated scores, publications, samples and cohorts\n  - name: \"Sample endpoints\"\n    description: PGS Sample metadata (number of individuals, ancestry, cohorts)\n  - name: \"Release endpoints\"\n    description: PGS Release information (release date, number of new scores/publication/performance and their IDs)\n  - name: \"Other endpoints\"\n    description: \"PGS extra endpoints: **/rest/info** (REST API version, data counts, PGS citation, ...), **/rest/api_versions** (REST API version changelogs), **/rest/ancestry_categories** (ancestry symbols and names) and specific queries from collaborators\"\n\ncomponents:\n  schemas:\n\n    Cohort:\n      type: object\n      description: \"Structure containing information about a Cohort.\"\n      properties:\n        name_short:\n          type: string\n          description: \"Cohort symbol\"\n          example: \"ABCFS\"\n        name_full:\n          type: string\n          description: \"Cohort full name\"\n          example: \"Australian Breast Cancer Family Study\"\n\n    Cohort_extended:\n      description: \"Based on the **Cohort** schema, with the addition of the '**associated_pgs_ids**'.\"\n      allOf:\n        - $ref: '#/components/schemas/Cohort'\n        - type: object\n          required:\n            - cohort_symbol\n          properties:\n            associated_pgs_ids:\n              type: object\n              description: \"List of associated Polygenic Score IDs at the development and evaluation stages\"\n              properties:\n                development:\n                  type: array\n                  description: \"List of associated Polygenic Score IDs at the PGS development stage\"\n                  example: [\"PGS000001\", \"PGS000002\"]\n                  items:\n                    type: string\n                evaluation:\n                  type: array\n                  description: \"List of associated Polygenic Score IDs at the PGS evaluation stage\"\n                  example: [\"PGS000003\"]\n                  items:\n                    type: string\n\n    Demographic:\n      type: object\n      description: \"Demographic data such as **sample age** or **followup time**\"\n      properties:\n        estimate_type:\n          type: string\n          description: \"Type of value, e.g. mean, median\"\n          example: \"mean\"\n        estimate:\n          type: number\n          example: 53.0\n        interval:\n          type: object\n          description: \"Interval values\"\n          properties:\n            type:\n              type: string\n              description: \"Type of interval: range, iqr (Interquartile), ci (Confidence Interval)\"\n              example: \"range\"\n            lower:\n              type: number\n              description: \"Lower bound of the interval\"\n              example: 51.0\n            upper:\n              type: number\n              description: \"Upper bound of the interval\"\n              example: 57.0\n        variability_type:\n          type: string\n          description: \"Type of variability data, e.g. Standard Error (se), Standard deviation (sd), ...\"\n          example: \"se\"\n        variability:\n          type: number\n          example: 16.0\n        unit:\n          type: string\n          example: \"years\"\n\n    EFOTrait:\n      type: object\n      description: \"Structure containing information about a Trait. Mainly extracted from the Experimental Factor Ontology (EFO).\"\n      required:\n        - trait_id\n      properties:\n        id:\n          type: string\n          description: \"A trait identifier that links to an Ontology (e.g. EFO), and NHGRI-EBI GWAS catalog.\"\n          example: \"'EFO_0001645\"\n        label:\n          type: string\n          description: \"Trait label/name\"\n          example: \"coronary artery disease\"\n        description:\n          type: string\n          description: \"Detailed description of the trait from EFO.\"\n          example: \"Narrowing of the coronary arteries due to fatty deposits inside the arterial walls.\"\n        url:\n          type: string\n          description: \"External link to the EFO entry\"\n          example: \"https://www.ebi.ac.uk/efo/EFO_0001645\"\n\n\n    EFOTrait_extended:\n      description: \"Based on the **EFOTrait** schema, with the addition of the '**trait_synonyms**', the '**trait_mapped_terms**' and the '**associated_pgs_ids**'.\"\n      allOf:\n        - $ref: '#/components/schemas/EFOTrait'\n        - type: object\n          required:\n            - trait_id\n          properties:\n            trait_categories:\n              type: array\n              description: \"List of trait categories associated with the trait\"\n              items:\n                type: string\n                example: \"Cardiovascular disease\"\n            trait_synonyms:\n              type: array\n              description: \"List of associated trait synonyms\"\n              example: [\"Artery Disease, Coronary\",\"CAD\"]\n              items:\n                type: string\n            trait_mapped_terms:\n              type: array\n              description: \"List of associated external references/IDs\"\n              items:\n                type: string\n            associated_pgs_ids:\n              type: array\n              description: \"List of associated Polygenic Score IDs\"\n              items:\n                type: string\n\n    EFOTrait_Ontology:\n      description: \"Structure containing information about a Trait, with extra ontology information (i.e. children traits and their associated Polygenic Scores). Mainly extracted from the Experimental Factor Ontology (EFO).\"\n      type: object\n      required:\n        - trait_id\n      properties:\n        id:\n          type: string\n          description: \"A trait identifier that links to an Ontology (e.g. EFO), and NHGRI-EBI GWAS catalog.\"\n          example: \"EFO_0000305\"\n        label:\n          type: string\n          description: \"Trait label/name\"\n          example: \"breast carcinoma\"\n        description:\n          type: string\n          description: \"Detailed description of the trait from EFO.\"\n          example: \"A carcinoma that arises from epithelial cells of the breast [MONDO: DesignPattern]\"\n        url:\n          type: string\n          description: \"External link to the EFO entry\"\n          example: \"https://www.ebi.ac.uk/efo/EFO_0000305\"\n        trait_categories:\n          type: array\n          description: \"List of trait categories associated with the trait\"\n          example: [\"Cancer\"]\n          items:\n            type: string\n        trait_synonyms:\n          type: array\n          description: \"List of associated trait synonyms\"\n          example: [\"CA - Carcinoma of breast\",\"Mammary carcinoma\"]\n          items:\n            type: string\n        trait_mapped_terms:\n          type: array\n          description: \"List of associated external references/IDs\"\n          example: [\"DOID:3459\",\"MONDO:0004989\"]\n          items:\n            type: string\n        associated_pgs_ids:\n          type: array\n          description: \"List of associated Polygenic Score IDs\"\n          example: [\"PGS000001\",\"PGS000004\"]\n          items:\n            type: string\n        child_associated_pgs_ids:\n          type: array\n          description: \"List of Polygenic Score IDs associated with the children ontology term(s)\"\n          example: [\"PGS000002\",\"PGS000003\"]\n          items:\n            type: string\n\n    EFOTrait_OntologyChild:\n      description: \"Based on the **EFOTrait_Ontology** schema, with the addition of the '**child_traits**' field.\"\n      allOf:\n        - $ref: '#/components/schemas/EFOTrait_Ontology'\n        - type: object\n          required:\n            - trait_id\n          properties:\n            child_traits:\n              type: array\n              description: \"List of child traits with Polygenic Score associations.\"\n              items:\n                $ref: '#/components/schemas/EFOTrait_Ontology'\n                example:\n                  id: \"EFO_1000294\"\n                  label: \"HER2 Positive Breast Carcinoma\"\n                  description: \"A biologic subset of breast carcinoma defined by high expression of HER2, GRB7, and TRAP100, and by lack of expression of estrogen receptor (ER).\"\n                  url: \"https://www.ebi.ac.uk/efo/EFO_1000294\"\n                  trait_categories: [\"Cancer\"]\n                  trait_synonyms: [\"HER2 Positive breast cancer\",\"HER2 positive breast carcinoma\"]\n                  trait_mapped_terms: [\"DOID:0060079\",\"MONDO:0006244\"]\n                  associated_pgs_ids: [\"PGS000215\"]\n                  child_associated_pgs_ids: []\n\n\n    Metric:\n      type: object\n      description: \"Metric data\"\n      properties:\n        name_long:\n          type: string\n          description: \"Long notation of the effect size (e.g. Odds Ratio), classification metric (e.g. Concordance Statistic) or other metric (e.g. Proportion of the variance explained)\"\n          example: \"Odds Ratio\"\n        name_short:\n          type: string\n          description: \"Short notation of the effect size (e.g. OR), classification metric (e.g. C-index) or other metric (R²)\"\n          example: \"OR\"\n        estimate:\n          type: number\n          example: 1.54\n        ci_lower:\n          type: number\n          description: \"95% Confidence Interval in the format - lower bound\"\n          example: 1.51\n        ci_upper:\n          type: number\n          description: \"95% Confidence Interval in the format - upper bound\"\n          example: 1.57\n        se:\n          type: number\n          description: \"Standard Error\"\n          example: 0.0663\n\n\n    PerformanceMetric:\n      type: object\n      required:\n        - ppm_id\n      properties:\n        id:\n          type: string\n          description: \"PGS Performance Metric identifier\"\n          example: \"PPM000001\"\n        associated_pgs_id:\n          type: string\n          description: \"Associated PGS ID\"\n          example: \"PGS000001\"\n        phenotyping_reported:\n          type: string\n          example: \"All breast cancer\"\n        publication:\n          $ref: '#/components/schemas/Publication'\n        sampleset:\n          $ref: '#/components/schemas/SampleSet'\n        performance_metrics:\n          type: object\n          properties:\n            effect_sizes:\n              type: array\n              description: \"List of Effect Size data\"\n              items:\n                $ref: '#/components/schemas/Metric'\n            class_acc:\n              type: array\n              description: \"List of Classification Metric data\"\n              items:\n                $ref: '#/components/schemas/Metric'\n            othermetrics:\n              type: array\n              description: \"Metrics that do not fit into the Effect Size or Classification Metric categories. e.g. R² (proportion of the variance explained), or reclassification metrics.\"\n              items:\n                $ref: '#/components/schemas/Metric'\n        covariates:\n          type: string\n          description: \"Comma-separated list of covariates used in the prediction model to evaluate the PGS.\"\n          example: \"Country, birth year, age, sex, smoking habits, etc.\"\n        performance_comments:\n          type: string\n          description: \"Any other information relevant to the understanding of the performance metrics.\"\n\n    Publication:\n      type: object\n      required:\n        - pgp_id\n      properties:\n        id:\n          type: string\n          description: \"PGS Catalog Publication identifier\"\n          example: \"PGP000001\"\n        title:\n          type: string\n          description: \"Publication title\"\n          example: \"Prediction of breast cancer risk based on profiling with common genetic variants.\"\n        doi:\n          type: string\n          description: \"Digital Object Identifier is also curated to allow unpublished work (e.g. pre-prints) to be added to the catalog\"\n          example: \"10.1093/jnci/djv036\"\n        PMID:\n          type: integer\n          description: \"PubMed idenfier\"\n          example: 25855707\n        journal:\n          type: string\n          description: \"The publication's location\"\n          example: \"J Natl Cancer Inst\"\n        firstauthor:\n          type: string\n          description: \"First author of the publication\"\n          example: \"Mavaddat N\"\n        date_publication:\n          type: string\n          description: \"Date of publication (format YYYY-MM-DD)\"\n          format: date\n          example: \"2015-04-08\"\n\n    Publication_extended:\n      description: \"Based on the **Publication** object, with the addition of the '**authors**' and the '**associated_pgs_ids**'.\"\n      allOf:\n      - $ref: '#/components/schemas/Publication'\n      - type: object\n        required:\n          - pgp_id\n        properties:\n          authors:\n            type: string\n            description: \"Concatenated list of all the publication authors\"\n            example: \"Mavaddat N, ... , Garcia-Closas M.\"\n          associated_pgs_ids:\n            type: object\n            description: \"List of associated Polygenic Score IDs at the development and evaluation stages\"\n            properties:\n              development:\n                type: array\n                description: \"List of associated Polygenic Score IDs at the PGS development stage\"\n                example: [\"PGS000001\", \"PGS000002\"]\n                items:\n                  type: string\n              evaluation:\n                type: array\n                description: \"List of associated Polygenic Score IDs at the PGS evaluation stage\"\n                example: [\"PGS000003\"]\n                items:\n                  type: string\n\n    Release:\n      type: object\n      properties:\n        date:\n          type: string\n          description: \"Date of PGS release (format YYYY-MM-DD)\"\n          format: date\n          example: \"2019-12-18\"\n        score_count:\n          type: integer\n          description: \"Count of new Polygenic Scores\"\n          example: 23\n        performance_count:\n          type: integer\n          description: \"Count of new PGS Performance Metrics\"\n          example: 62\n        publication_count:\n          type: integer\n          description: \"Count of new PGS Publications\"\n          example: 19\n        notes:\n          type: string\n          example: \"This release contains 23 new Score(s), 19 new Publication(s) and 62 new Performance metric(s)\"\n        released_score_ids:\n          type: array\n          description: \"List of new Polygenic Score IDs\"\n          example: [\"PGS000037\",\"...\",\"PGS000059\"]\n          items:\n            type: string\n        released_publication_ids:\n          type: array\n          description: \"List of new PGS Publication IDs\"\n          example: [\"PGP000025\",\"...\",\"PGP000044\"]\n          items:\n            type: string\n        released_performance_ids:\n          type: array\n          description: \"List of new PGS Performance Metric IDs\"\n          example: [\"PPM000082\",\"...\",\"PPM000150\"]\n          items:\n            type: string\n\n    Sample:\n      type: object\n      description: \"\"\n      properties:\n        sample_number:\n          type: integer\n          description: \"Number of individuals included in the sample\"\n          example: 1043\n        sample_cases:\n          type: integer\n          description: \"Number of cases\"\n          example: 294\n        sample_controls:\n          type: integer\n          description: \"Number of controls\"\n          example: 749\n        sample_percent_male:\n          type: number\n          description: \"Percentage of male participants\"\n          example: 67.75\n        sample_age:\n          $ref: '#/components/schemas/Demographic'\n        phenotyping_free:\n          type: string\n          description: \"Detailed phenotype description\"\n          example: \"Primary tumor samples from TCGA\"\n        followup_time:\n          $ref: '#/components/schemas/Demographic'\n        ancestry_broad:\n          type: string\n          description: \"Author reported ancestry is mapped to the best matching ancestry category from the NHGRI-EBI GWAS Catalog framework (Table 1, Morales et al. (2018)).\"\n          example: \"European\"\n        ancestry_free:\n          type: string\n          description: \"A more detailed description of sample ancestry that usually matches the most specific description described by the authors (e.g. French, Chinese).\"\n          example: \"French Canadian\"\n        ancestry_country:\n          type: string\n          description: \"Author reported countries of recruitment (if available).\"\n          example: \"Canada\"\n        ancestry_additional:\n          type: string\n          description: \"Any additional description not captured in the structured data (e.g. founder or genetically isolated populations, or further description of admixed samples).\"\n          example: \"Cohort contains individuals of East Asian, European \u0026 Hispanic ancestries\"\n        source_GWAS_catalog:\n          type: string\n          description: \"Associated NHGRI-EBI GWAS Catalog study identifier\"\n          example: \"GCST001937\"\n        source_PMID:\n          type: integer\n          description: \"Associated PubMed identifier\"\n          example: 26343387\n        source_DOI:\n          type: string\n          description: \"Associated Digital Object Identifier\"\n          example: \"10.1038/s41588-021-00783-5\"\n        cohorts:\n          type: array\n          description: \"List of cohorts that collected the samples\"\n          items:\n            $ref: '#/components/schemas/Cohort'\n        cohorts_additional:\n          type: string\n          description: \"Any additional description about the samples and what they were used for that is not captured by the structured categories (e.g. sub-cohort information).\"\n          example: \"Phase 1\"\n\n    SampleSet:\n      type: object\n      description: Group of samples used in one or several Polygenic Score evaluations\n      required:\n        - pss_id\n      properties:\n        id:\n          type: string\n          description: \"PGS Sample Set identifier\"\n          example: \"PSS000070\"\n        samples:\n          type: array\n          description: \"List of samples grouped in the Sample Set\"\n          items:\n            $ref: '#/components/schemas/Sample'\n\n    Score:\n      type: object\n      description: \"Main structure containing information about Polygenic Score. The **publication** represents the citation for the paper that developed the PGS.\"\n      required:\n        - pgs_id\n      properties:\n        id:\n          type: string\n          description: \"Polygenic Score identifier\"\n          example: \"PGS000001\"\n        name:\n          type: string\n          description: This may be the name that the authors describe the PGS with in the source publication, or a name that a curator has assigned to identify the score during the curation process (before a PGS ID has been given)\n          example: \"PRS77_BC\"\n        ftp_scoring_file:\n          type: string\n          description: \"URL to the scoring file on the PGS FTP\"\n          example: \"http://ftp.ebi.ac.uk/pub/databases/spot/pgs/scores/PGS000001/ScoringFiles/PGS000001.txt.gz\"\n        publication:\n          description: \"Citation for the paper that developed the PGS\"\n          $ref: '#/components/schemas/Publication'\n        matches_publication:\n          type: boolean\n          description: \"Indicate if the PGS data matches the published polygenic score. If not, the authors have provided an alternative polygenic for the Catalog and some other data, such as performance metrics, may differ from the publication.\"\n          example: true\n        samples_variants:\n          type: array\n          description: \"List of samples used to define the variant associations/effect-sizes used in the PGS. These data are extracted from the NHGRI-EBI GWAS Catalog when a study ID (GCST) is available.\"\n          items:\n            $ref: '#/components/schemas/Sample'\n        samples_training:\n          type: array\n          description: \"List of samples used to develop/train the Polygenic Score (e.g. not used for variant discovery, and non-overlapping with the samples used to evaluate the PGS predictive ability).\"\n          items:\n            $ref: '#/components/schemas/Sample'\n        trait_reported:\n          type: string\n          description: \"The author-reported trait that the PGS has been developed to predict.\"\n          example: \"Breast Cancer\"\n        trait_additional:\n          type: string\n          description: \"Any additional description not captured in the structured data\"\n          example: \"PheCode 174.1\"\n        trait_efo:\n          type: array\n          description: \"The Reported Trait is mapped to Experimental Factor Ontology (EFO) terms and their respective identifiers.\"\n          items:\n            $ref: '#/components/schemas/EFOTrait'\n        method_name:\n          type: string\n          description: \"The name or description of the method or computational algorithm used to develop the PGS.\"\n          example: \"SNPs passing genome-wide significance\"\n        method_params:\n          type: string\n          description: \"A description of the relevant inputs and parameters relevant to the PGS development method/process.\"\n          example: \"P\u003c5x10-8\"\n        variants_number:\n          type: integer\n          description: \"Number of variants used to calculate the PGS. In the future this will include a more detailed description of the types of variants present.\"\n          example: 77\n        variants_interactions:\n          type: integer\n          description: \"Number of higher-order variant interactions included in the PGS.\"\n          example: 0\n        variants_genomebuild:\n          type: string\n          description: \"The version of the genome assembly that the variants present in the PGS are associated with. Listed as NR (Not Reported) if unknown.\"\n          example: \"GRCh38\"\n        weight_type:\n          type: string\n          description: \"Variant Weight supplied by the author: beta (effect size), or something like an OR/HR (odds/hazard ratio).\"\n          example: \"beta\"\n        ancestry_distribution:\n          type: object\n          description: \"Ancestry distribution on each PGS stage. For more information about Ancestry, please go to [Ancestry documentation](/docs/ancestry). To get the full name of the Ancestry categories (e.g. 'European' for 'EUR'), please look at the endpoint **/rest/ancestry_categories**\"\n          properties:\n            gwas:\n              type: object\n              description: \"Ancestry(ies) used in the Source of Variant Associations (GWAS) stage. Only available if there is ancestry data at this stage.\"\n              properties:\n                dist:\n                  type: object\n                  description: \"Ancestry distribution. The endpoint **/rest/ancestry_categories** provides the mapping between the 3 letters symbol and the ancestry category name.\"\n                  additionalProperties:\n                    type: integer\n                  example:\n                    EUR: 75\n                    MAE: 25\n                count:\n                  type: integer\n                  description: \"Total number of individuals from this stage.\"\n                  example: 187599\n                multi:\n                  type: array\n                  description: \"Breakdown of the Multi-ancestry (MAO or MAE) distribution. Only available if there is a Multi-ancestry entry in the distribution.\"\n                  items:\n                    type: string\n                    example: [\"MAE_EUR\",\"MAE_EAS\",\"MAE_AFR\"]\n            dev:\n              type: object\n              description: \"Ancestry(ies) used in the Score Development stage. Only available if there is ancestry data at this stage.\"\n              properties:\n                dist:\n                  type: object\n                  description: \"Ancestry distribution. The endpoint **/rest/ancestry_categories** provides the mapping between the 3 letters symbol and the ancestry category name.\"\n                  additionalProperties:\n                    type: integer\n                  example:\n                    MAE: 88.7\n                    AFR: 7.9\n                    AMR: 3.4\n                count:\n                  type: integer\n                  description: \"Total number of individuals from this stage.\"\n                  example: 120280\n                multi:\n                  type: array\n                  description: \"Breakdown of the Multi-ancestry (MAO or MAE) distribution. Only available if there is a Multi-ancestry entry in the distribution.\"\n                  items:\n                    type: string\n                    example: [\"MAE_EUR\",\"MAE_AFR\",\"MAE_GME\"]\n            eval:\n              type: object\n              description: \"Ancestry(ies) used in the PGS Evaluation stage. Only available if there is ancestry data at this stage.\"\n              properties:\n                dist:\n                  type: object\n                  description: \"Ancestry distribution. The endpoint **/rest/ancestry_categories** provides the mapping between the 3 letters symbol and the ancestry category name.\"\n                  additionalProperties:\n                    type: integer\n                  example:\n                    MAE: 60\n                    AFR: 40\n                count:\n                  type: integer\n                  description: \"Number of distinct Sample Sets.\"\n                  example: 40\n                multi:\n                  type: array\n                  description: \"Breakdown of the Multi-ancestry (MAO or MAE) distribution. Only available if there is a Multi-ancestry entry in the distribution.\"\n                  items:\n                    type: string\n                    example: [\"MAE_EUR\",\"MAE_SAS\"]\n        license:\n          type: string\n          description: \"The PGS Catalog distributes its data according to EBI’s standard Terms of Use. Some PGS have specific terms, licenses, or restrictions (e.g. non-commercial use) that we highlight in this field, if known.\"\n          example: \"Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0).\"\n\n    TraitCategory:\n      type: object\n      description: \"Trait category, as defined by the GWAS Catalog, to structure the numerous traits in broad groups\"\n      properties:\n        label:\n          type: string\n          description: \"Trait category name\"\n          example: \"Cancer\"\n        efotraits:\n          $ref: '#/components/schemas/EFOTrait'\n\n\n    Pagination:\n      type: object\n      properties:\n        size:\n          type: integer\n          description: \"Number of results in the current page\"\n          example: 50\n        count:\n          type: integer\n          description: \"Total count of results from the query\"\n          example: 137\n        next:\n          type: string\n          description: \"URL to the next page of results\"\n          example: \"https://www.pgscatalog.org/rest/\u003cendpoint\u003e/\u003cendpoint-subtype\u003e?limit=50\u0026offset=100\"\n        previous:\n          type: string\n          description: \"URL to the previous page of results\"\n          example: \"https://www.pgscatalog.org/rest/\u003cendpoint\u003e/\u003cendpoint-subtype\u003e?limit=50\"\n\n    Error_4XX:\n      type: object\n      properties:\n        error_status:\n          type: number\n          example: 404\n        message:\n          type: string\n          example: \"This REST endpoint does not exist\"\n\n\npaths:\n  # Sample/Cohort endpoints\n  '/rest/cohort/all':\n    get:\n      tags:\n        - \"Sample endpoints\"\n      operationId: getAllCohorts\n      description: |\n        Retrieve all Cohorts, including for each of them:\n          * Cohort full name\n          * Associated Polygenic Scores(s), with the distinction between associations with the Polygenic Score at the development phase or at the evaluation phase\n\n          Example of request:\n          ```\n          https://www.pgscatalog.org/rest/cohort/all\n          ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of PGS Cohorts\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Cohort_extended'\n          description: |\n                  All PGS Cohorts\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/cohort/{cohort_symbol}':\n    get:\n      tags:\n        - \"Sample endpoints\"\n      operationId: getCohorts\n      description: |\n        Retrieve a Cohort, based on its symbol, including:\n          * Cohort full name\n          * Associated Polygenic Scores(s), with the distinction between associations with the Polygenic Score at the development phase or at the evaluation phase\n\n          Example of request:\n          ```\n          https://www.pgscatalog.org/rest/cohort/ABCFS\n          ```\n\n        __Notes__: A cohort symbol is not unique, therefore the API might return more than 1 result.\n      parameters:\n        - name: cohort_symbol\n          in: path\n          required: true\n          description: 'Short name of a cohort'\n          examples:\n            ABCFS:\n              value: \"ABCFS\"\n            ESTHER:\n              value: \"ESTHER\"\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of Cohorts\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Cohort_extended'\n          description: |\n                Cohort names + list of associated Polygenic Scores\n\n                ---\n\n                __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/sample_set/all':\n    get:\n      tags:\n        - \"Sample endpoints\"\n      operationId: getAllSampleSets\n      description: |\n          Retrieve one Sample Set (group of samples used on a Performance Metric), including for each of them:\n            * List of samples\n              * Ancestry data\n              * Corresponding cohort(s)\n\n          Example of request:\n          ```\n          https://www.pgscatalog.org/rest/sample_set/all\n          ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of PGS Cohorts\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/SampleSet'\n          description: |\n                  All PGS Sample Sets\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/sample_set/{pss_id}':\n    get:\n      tags:\n        - \"Sample endpoints\"\n      operationId: getSampleSet\n      description: |\n        Retrieve one Sample Set (group of samples used on a Performance Metric), including:\n          * List of samples\n            * Ancestry data\n            * Corresponding cohort(s)\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/sample_set/PSS000070\n        ```\n      parameters:\n        - name: pss_id\n          in: path\n          required: true\n          description: 'PGS Sample Set ID (PSS)'\n          examples:\n            PSS000070:\n              value: \"PSS000070\"\n            PSS000020:\n              value: \"PSS000020\"\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SampleSet'\n          description: 'List of samples used evaluate a Polygenic Score'\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/sample_set/search':\n    get:\n      tags:\n        - \"Sample endpoints\"\n      operationId: searchSampleSet\n      description: |\n        Search PGS Sample Sets using defined parameters (cf. \"Parameters\" section below).\u003cbr /\u003e\n        The parameters can be used directly in the request URL, e.g.:\n        ```\n        https://www.pgscatalog.org/rest/sample_set/search?pgs_id=PGS000001\n        ```\n        This returns a list of PGS Sample Sets, including for each of them:\n          * List of samples\n            * Ancestry data\n            * Corresponding cohort(s)\n      parameters:\n        - in: query\n          name: pgs_id\n          schema:\n            type: string\n          required: false\n          description: Polygenic Score ID (PGS) - optional\n          examples:\n            pgs_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            PGS000001:\n              value: \"PGS000001\"\n            PGS000018:\n              value: \"PGS000018\"\n        - in: query\n          name: pgp_id\n          schema:\n            type: string\n          required: false\n          description: PGS Catalog Publication ID (PGP) - optional\n          examples:\n            pgp_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            PGP000001:\n              value: \"PGP000001\"\n            PGP000006:\n              value: \"PGP000006\"\n        - in: query\n          name: pmid\n          schema:\n            type: integer\n          required: false\n          description: PubMed ID (without the prefix \"PMID:\") - *optional*\n          examples:\n            pmid_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            pmid_1:\n              summary: 'PMID: 25855707'\n              value: 25855707\n            pmid_2:\n              summary: 'PMID: 30104762'\n              value: 30104762\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of Sample Sets\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/SampleSet'\n          description: |\n              List of sample set(s) used evaluate a Polygenic Score\n\n              ---\n\n              __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n\n  # Performance endpoints\n  '/rest/performance/all':\n    get:\n      tags:\n        - \"Performance Metric endpoints\"\n      operationId: getAllPerformances\n      description: |\n        Retrieve all the PGS Performance Metrics, including for each of them:\n          * Performance metrics metadata (odd ratio, beta coefficient, C-index, ...)\n          * Reported phenotyping\n          * Associated Polygenic Score(s)\n          * Publication information\n          * List of samples used for the evaluation, with their ancestry and corresponding cohorts\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/performance/all\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of PGS Performance Metrics\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PerformanceMetric'\n          description: |\n                  All PGS Performance Metrics\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/performance/{ppm_id}':\n    get:\n      tags:\n        - \"Performance Metric endpoints\"\n      operationId: getPerformanceMetric\n      description: |\n        Retrieve a PGS Performance Metric, including:\n          * Performance metrics metadata (odd ratio, beta coefficient, C-index, ...)\n          * Reported phenotyping\n          * Associated Polygenic Score(s)\n          * Publication information\n          * List of samples used for the evaluation, with their ancestry and corresponding cohorts\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/performance/PPM000001\n        ```\n      parameters:\n        - name: ppm_id\n          in: path\n          required: true\n          description: 'PGS Performance Metric ID (PPM)'\n          examples:\n            PPM000001:\n              value: \"PPM000001\"\n            PPM000002:\n              value: \"PPM000002\"\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PerformanceMetric'\n          description: 'Performance Metric + Polygenic Score + Publication + Sample Set'\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/performance/search':\n    get:\n      tags:\n        - \"Performance Metric endpoints\"\n      operationId: searchPerformanceMetrics\n      description: |\n        Search PGS Performance Metrics using defined parameters (cf. \"Parameters\" section below).\u003cbr /\u003e\n        The parameters can be used directly in the request URL, e.g.:\n        ```\n        https://www.pgscatalog.org/rest/performance/search?pgs_id=PGS000001\n        ```\n        This returns a list of PGS Performance Metrics, including for each of them:\n          * Performance metrics metadata (odd ratio, beta coefficient, C-index, ...)\n          * Reported phenotyping\n          * Associated Polygenic Score(s)\n          * Publication information\n          * List of samples used for the evaluation, with their ancestry and corresponding cohorts\n      parameters:\n        - in: query\n          name: pgs_id\n          schema:\n            type: string\n          required: false\n          description: Polygenic Score ID (PGS) - optional\n          examples:\n            pgs_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            PGS000001:\n              value: \"PGS000001\"\n            PGS000018:\n              value: \"PGS000018\"\n        - in: query\n          name: pgp_id\n          schema:\n            type: string\n          required: false\n          description: PGS Catalog Publication ID (PGP) - optional\n          examples:\n            pgp_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            PGP000001:\n              value: \"PGP000001\"\n            PGP000006:\n              value: \"PGP000006\"\n        - in: query\n          name: pmid\n          schema:\n            type: integer\n          required: false\n          description: PubMed ID (without the prefix \"PMID:\") - *optional*\n          examples:\n            pmid_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            pmid_1:\n              summary: 'PMID: 25855707'\n              value: 25855707\n            pmid_2:\n              summary: 'PMID: 30104762'\n              value: 30104762\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of PGS Performance Metrics\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PerformanceMetric'\n          description: |\n              Performance Metric + Polygenic Score + Publication + Sample Set\n\n              ---\n\n              __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n\n  # Publication endpoints\n  '/rest/publication/all':\n    get:\n      tags:\n        - \"Publication endpoints\"\n      operationId: getAllPublications\n      description: |\n        Retrieve all the PGS Publications, including for each of them:\n          * Pubmed ID and doi\n          * Publication title, journal, date and authors\n          * Associated Polygenic Score(s) with the distinction between associations with the Polygenic Score at the development phase or at the evaluation phase\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/publication/all\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of PGS Publications\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Publication_extended'\n          description: |\n                  All Publication information\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/publication/{pgp_id}':\n    get:\n      tags:\n        - \"Publication endpoints\"\n      operationId: getPublication\n      description: |\n        Retrieve a PGS Publication, including:\n          * Pubmed ID and doi\n          * Publication title, journal, date and authors\n          * Associated Polygenic Score(s) with the distinction between associations with the Polygenic Score at the development phase or at the evaluation phase\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/publication/PGP000001\n        ```\n      parameters:\n        - name: pgp_id\n          in: path\n          required: true\n          description: 'PGS Publication ID (PGP)'\n          examples:\n            PGP000001:\n              value: \"PGP000001\"\n            PGP000006:\n              value: \"PGP000018\"\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Publication_extended'\n          description: 'Publication information'\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/publication/search':\n    get:\n      tags:\n          - \"Publication endpoints\"\n      operationId: searchPublications\n      description: |\n        Search PGS Publications using defined parameters (cf. \"Parameters\" section below).\u003cbr /\u003e\n        The parameters can be used directly in the request URL, e.g.:\n        ```\n        https://www.pgscatalog.org/rest/publication/search?pgs_id=PGS000001\n        ```\n        This returns a list of PGS Publications, including for each of them:\n          * Pubmed ID and doi\n          * Publication title, journal, data and authors\n          * Associated Polygenic Score(s) with the distinction between associations with the Polygenic Score at the development phase or at the evaluation phase\n      parameters:\n        - in: query\n          name: pgs_id\n          schema:\n            type: string\n          required: false\n          description: Polygenic Score ID (PGS) - optional\n          examples:\n            pgs_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            PGS000001:\n              value: \"PGS000001\"\n            PGS000018:\n              value: \"PGS000018\"\n        - in: query\n          name: pmid\n          schema:\n            type: integer\n          required: false\n          description: PubMed ID (without the prefix \"PMID:\") - *optional*\n          examples:\n            pmid_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            pmid_1:\n              summary: 'PMID: 25855707'\n              value: 25855707\n            pmid_2:\n              summary: 'PMID: 30104762'\n              value: 30104762\n        - in: query\n          name: author\n          schema:\n            type: string\n          required: false\n          description: Publication author (any author in the list of authors in a publication) - optional\n          examples:\n            author_sel:\n              summary: Select an example or type a name - click on 'Try it out' first\n            Mavaddat:\n              value: 'Mavaddat'\n            Inouye:\n              value: 'Inouye'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of PGS Publications\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Publication_extended'\n          description: |\n                  All Publication information\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n\n  # Release endpoints\n  '/rest/release/all':\n    get:\n      tags:\n        - \"Release endpoints\"\n      operationId: getAllReleases\n      description: |\n        Retrieve all the PGS Releases (more recent first), including for each of them:\n          * The release date (format YYYY-MM-DD)\n          * The number of new Polygenic Scores, Publications and Performance Metrics\n          * The list of new Polygenic Scores, Publications and Performance Metrics IDs\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/release/all\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of PGS Releases\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Release'\n          description:  |\n                  Releases information\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/release/{release_date}':\n    get:\n      tags:\n        - \"Release endpoints\"\n      operationId: getRelease\n      description: |\n        Retrieve a PGS Release information, including:\n          * The release date (format YYYY-MM-DD)\n          * The number of new Polygenic Scores, Publications and Performance Metrics\n          * The list of new Polygenic Scores, Publications and Performance Metrics IDs\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/release/2020-02-12\n        ```\n      parameters:\n        - name: release_date\n          in: path\n          required: true\n          description: 'PGS Catalog release date (format YYYY-MM-DD)'\n          examples:\n            2019-12-18:\n              value: \"2019-12-18\"\n            2020-02-12:\n              value: \"2020-02-12\"\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Release'\n          description: 'Release information'\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/release/current':\n    get:\n      tags:\n        - \"Release endpoints\"\n      operationId: getCurrentRelease\n      description: |\n        Retrieve the current PGS Release, including:\n          * The release date (format YYYY-MM-DD)\n          * The number of new Polygenic Scores, Publications and Performance Metrics\n          * The list of new Polygenic Scores, Publications and Performance Metrics IDs\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/release/current\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Release'\n          description: 'Release information'\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n\n  # Score endpoints\n  '/rest/score/all':\n    get:\n      tags:\n        - \"Score endpoints\"\n      operationId: getAllScores\n      description: |\n        Retrieve all the Polygenic Scores, including for each of them:\n          * The URL to the scoring file\n          * Publication information\n          * Associated trait(s) (and mapped ontology trait(s))\n          * The different samples used during the PGS, with ancestry information and cohort(s):\n            * **samples_variants**: samples used to define the variant associations/effect-sizes used in the PGS. These data are extracted from the NHGRI-EBI GWAS Catalog when a study ID (GCST) is available.\n            * **samples_training**: samples used to develop or train the score (e.g. not used for variant discovery, and non-overlapping with the samples used to evaluate the PGS predictive ability).\n          * The ancestry distribution\n          * The Terms/Licenses\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/score/all\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of Polygenic Scores\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Score'\n          description: |\n                  All Polygenic Scores\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/score/{pgs_id}':\n    get:\n      tags:\n        - \"Score endpoints\"\n      operationId: getScore\n      description: |\n        Retrieve a Polygenic Score, including:\n          * The URL to the scoring file\n          * Publication information\n          * Associated trait(s) (and mapped ontology trait(s))\n          * The different samples used during the PGS, with ancestry information and cohort(s):\n            * **samples_variants**: samples used to define the variant associations/effect-sizes used in the PGS. These data are extracted from the NHGRI-EBI GWAS Catalog when a study ID (GCST) is available.\n            * **samples_training**: samples used to develop or train the score (e.g. not used for variant discovery, and non-overlapping with the samples used to evaluate the PGS predictive ability).\n          * The ancestry distribution\n          * The Terms/Licenses\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/score/PGS000001\n        ```\n      parameters:\n        - name: pgs_id\n          in: path\n          required: true\n          description: 'Polygenic Score ID'\n          examples:\n            PGS000001:\n              value: \"PGS000001\"\n            PGS000018:\n              value: \"PGS000018\"\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Score'\n          description: 'Polygenic Score'\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/score/search':\n    get:\n      tags:\n        - \"Score endpoints\"\n      operationId: searchScores\n      description: |\n        Search Polygenic Scores using defined parameters (cf. \"Parameters\" section below).\u003cbr /\u003e\n        The parameters can be used directly in the request URL, e.g.:\n        ```\n        https://www.pgscatalog.org/rest/score/search?trait_id=EFO_1000649\n        ```\n        This returns a list of Polygenic Scores, including for each of them:\n          * The URL to the scoring file\n          * Publication information\n          * Associated trait(s) (and mapped ontology trait(s))\n          * The different samples used during the PGS, with ancestry information and cohort(s):\n            * **samples_variants**: samples used to define the variant associations/effect-sizes used in the PGS. These data are extracted from the NHGRI-EBI GWAS Catalog when a study ID (GCST) is available.\n            * **samples_training**: samples used to develop or train the score (e.g. not used for variant discovery, and non-overlapping with the samples used to evaluate the PGS predictive ability).\n          * The ancestry distribution\n          * The Terms/Licenses\n      parameters:\n        - in: query\n          name: pgp_id\n          schema:\n            type: string\n          required: false\n          description: PGS Catalog Publication ID (PGP) - optional\n          examples:\n            pgp_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            PGP000001:\n              value: \"PGP000001\"\n            PGP000006:\n              value: \"PGP000006\"\n        - in: query\n          name: pmid\n          schema:\n            type: integer\n          required: false\n          description: PubMed ID (without the prefix \"PMID:\") - *optional*\n          examples:\n            pmid_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            pmid_1:\n              summary: 'PMID: 25855707'\n              value: 25855707\n            pmid_2:\n              summary: 'PMID: 30104762'\n              value: 30104762\n        - in: query\n          name: trait_id\n          schema:\n            type: string\n          description: Ontology ID (e.g. from EFO, HP or MONDO) with the format \"EFO_XXXX\" - *optional*\n          examples:\n            trait_id_sel:\n              summary: Select an example or type an ID - click on 'Try it out' first\n            EFO_1000649:\n              value: 'EFO_1000649'\n            EFO_0001360:\n              value: 'EFO_0001360'\n        - in: query\n          name: pgs_ids\n          schema:\n            type: string\n          description: Comma-separated list of PGS IDs - *optional*\n          examples:\n            pgs_ids_sel:\n              summary: Select an example or type PGS ID(s) - click on 'Try it out' first\n            pgs_ids_1:\n              summary: 'PGS000001, PGS000002'\n              value: 'PGS000001,PGS000002'\n            pgs_ids_2:\n              summary: 'PGS000014, PGS000020, PGS000031'\n              value: 'PGS000014,PGS000020,PGS000031'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of Polygenic Scores\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Score'\n          description:  |\n                  Search Polygenic Score(s)\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n\n  # Trait endpoints\n  '/rest/trait/all':\n    get:\n      tags:\n        - \"Trait endpoints\"\n      operationId: getAllTraits\n      description: |\n        Retrieve all the Traits, including for each of them:\n          * Ontology ID, trait label, description and URL\n          * Trait categories\n          * Synonyms and external mapped terms\n          * Associated Polygenic Score(s)\n          * Associated Polygenic Score(s) with child trait(s) - **\u003cspan class=\"colour_2\"\u003e[\u003c/span\u003e** only when the parameter **include_parents** is set to **1** **\u003cspan class=\"colour_2\"\u003e]\u003c/span\u003e**\n\n        The default behaviour of this endpoint is to provide a list of traits which have PGS that predict them (matching the traits indexed in the metadata downloads).\n        Higher-level trait groupings imported from the Experimental Factor Ontology can be included in the list by setting the **include_parents** flag to **1** (default is 0).\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/trait/all\n        ```\n      parameters:\n        - in: query\n          name: include_parents\n          schema:\n            type: integer\n          required: false\n          description: 'Flag to include or not the parents of the traits associated with PGS'\n          examples:\n            exclude_parents_sel:\n              summary: Exclude the parents terms\n              value: 0\n            include_parents_sel:\n              summary: Include the parents terms\n              value: 1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of Traits\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/EFOTrait_Ontology'\n          description: |\n                  Traits in PGS Catalog\n\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/trait/{trait_id}':\n    get:\n      tags:\n        - \"Trait endpoints\"\n      operationId: getTrait\n      description: |\n        Retrieve a Trait, including:\n          * Ontology ID, trait label, description and URL\n          * Trait categories\n          * Synonyms and external mapped terms\n          * Associated Polygenic Score(s)\n          * Associated Polygenic Score(s) with child trait(s)\n          * Child traits (when the parameter *include_children* is set to 1)\n\n        This endpoint can be used to retrieve trait-PGS mappings for any trait in the database\n        (including parent terms from the ontology that aren’t included in the `/rest/trait/all` endpoint).\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/trait/EFO_0000305\n        ```\n      parameters:\n        - name: trait_id\n          in: path\n          required: true\n          description: 'Ontology ID (e.g. from EFO, HP or MONDO) with the format \"EFO_XXXX\"'\n          examples:\n            efo_1:\n              summary: EFO_0000305 - breast carcinoma\n              value: \"EFO_0000305\"\n            efo_2:\n              summary: EFO_0001645 - coronary artery disease\n              value: \"EFO_0001645\"\n          schema:\n            type: string\n        - in: query\n          name: include_children\n          schema:\n            type: integer\n          required: false\n          description: 'Flag to include or not the children of the searched trait (defaut: 1)'\n          examples:\n            include_children_sel:\n              summary: Include the child terms\n              value: 1\n            exclude_children_sel:\n              summary: Exclude the child terms\n              value: 0\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EFOTrait_OntologyChild'\n          description: 'Trait information'\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/trait/search':\n    get:\n      tags:\n          - \"Trait endpoints\"\n      operationId: searchTrait\n      description: |\n        Search for Traits based on terms present in the ID, label, description, synonyms, categories, or external mapped terms.\u003cbr /\u003e\n        The search term and filters for exact matching and child-term relationships can be included directly in the request URL, e.g.:\n        ```\n        https://www.pgscatalog.org/rest/trait/search?term=Alzheimer\n        ```\n        This returns a list of Traits matching the search term (and by default their child terms from the ontology), including for each of them:\n          * Ontology ID, trait label, description and URL\n          * Trait categories\n          * Synonyms and external mapped terms\n          * Associated Polygenic Score(s)\n          * Associated Polygenic Score(s) with child trait(s)\n\n        This endpoint searches all traits in the database, including parent terms from the ontology that aren’t included in the `/rest/trait/all` endpoint.\u003cbr /\u003e\n      parameters:\n        - in: query\n          name: term\n          schema:\n            type: string\n          required: true\n          description: 'Trait ID, trait name, trait description, trait category, trait synonym or external mapped terms/IDs'\n          examples:\n            trait_1:\n              summary: Alzheimer - [trait name]\n              value: Alzheimer\n            trait_2:\n              summary: Neurological disorder - [trait category]\n              value: Neurological disorder\n            trait_3:\n              summary: ICD10:I25 - [external mapped terms/IDs]\n              value: ICD10:I25\n            trait_4:\n              summary: OMIM:605526 - [external mapped terms/IDs]\n              value: OMIM:605526\n\n        - in: query\n          name: exact\n          schema:\n            type: integer\n          required: false\n          description: 'Flag to search only the exact term or not (defaut: 0)'\n          examples:\n            all_terms:\n              summary: Query on all matching terms\n              value: 0\n            exact_terms:\n              summary: Limit the query to the exact term\n              value: 1\n        - in: query\n          name: include_children\n          schema:\n            type: integer\n          required: false\n          description: 'Flag to include or not the children of the searched trait (defaut: 1)'\n          examples:\n            include_children_sel:\n              summary: Include the child terms\n              value: 1\n            exclude_children_sel:\n              summary: Exclude the child terms\n              value: 0\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of Traits\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/EFOTrait_Ontology'\n          description: |\n                  Traits in PGS Catalog\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  # TraitCategory endpoint\n  '/rest/trait_category/all':\n    get:\n      tags:\n        - \"Trait endpoints\"\n      operationId: getAllTraitCategories\n      description: |\n        Retrieve all higher-level Trait Categories in the Catalog, including for each of them:\n          * Trait category name\n          * List of all PGS Traits (EFO Ontology Terms) associated with the category\n\n        Trait Category to Trait mappings are retrieved from the \u003ca class=\"link external-link\" href=\"https://www.ebi.ac.uk/gwas/rest/docs/api#custom-parent\" target=\"_blank\"\u003eNHGRI-EBI GWAS Catalog\u003c/a\u003e, structuring the traits (ontology terms) into higher-level groups..\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/trait_category/all\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                properties:\n                  results:\n                    description: \"List of Trait Categories\"\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TraitCategory'\n          description: |\n                  Trait categories in PGS Catalog\n\n                  ---\n\n                  __Notes:__ This endpoint uses pagination.\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n\n  # Other endpoints\n  '/rest/info':\n    get:\n      tags:\n        - \"Other endpoints\"\n      operationId: getInfo\n      description: |\n        Return diverse information related to the REST API and the PGS Catalog:\n        * REST API version and latest changelog\n        * Latest release date and data count\n        * PGS citation\n        * Link to terms of use\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/info/\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                description: \"PGS Catalog information such as citation, REST API version, ...\"\n                type: object\n                properties:\n                  rest_api:\n                    type: object\n                    description: \"Information about the current version of the REST API\"\n                    properties:\n                      version:\n                        type: string\n                        description: \"REST API version\"\n                        example: \"1.7.1\"\n                      changelog:\n                          type: array\n                          description: \"REST API changelog\"\n                          example: [\"New endpoint `/rest/api_versions` providing the list of all the REST API versions and their changelogs.\", \"Change the data type of the field 'rest_api/version' in `/rest/info` to 'string'.\"]\n                          items:\n                            type: string\n                  latest_release:\n                    type: object\n                    description: \"Information about the latest PGS Catalog release\"\n                    properties:\n                      date:\n                        type: string\n                        description: \"Date of the latest PGS release (format YYYY-MM-DD)\"\n                        format: date\n                        example: \"2021-02-23\"\n                      scores:\n                        type: number\n                        description: \"Number of Scores in the Catalog\"\n                        example: 738\n                      traits:\n                        type: number\n                        description: \"Number of Traits in the Catalog\"\n                        example: 202\n                      publications:\n                        type: number\n                        description: \"Number of Publications in the Catalog\"\n                        example: 144\n                  citation:\n                    type: object\n                    description: \"Information about the latest PGS Catalog publication\"\n                    properties:\n                      title:\n                        type: string\n                        description: \"Title of the publication\"\n                        example: 'The Polygenic Score Catalog as an open database for reproducibility and systematic evaluation'\n                      doi:\n                        type: string\n                        description: \"doi of the publication\"\n                        example: '10.1038/s41588-021-00783-5'\n                      PMID:\n                        type: number\n                        description: \"PubMed ID\"\n                        example: 33692568\n                      authors:\n                        type: string\n                        description: \"List of the publication authors\"\n                        example: 'Samuel A. Lambert, ... and Michael Inouye'\n                      journal:\n                        type: string\n                        description: \"Name of the journal\"\n                        example: 'Nature Genetics'\n                      year:\n                        type: number\n                        description: \"Year of publication\"\n                        example: 2021\n                  terms_of_use:\n                    type: string\n                    description: \"URL to the terms of use\"\n                    example: 'https://www.ebi.ac.uk/about/terms-of-use'\n          description: ''\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/api_versions':\n    get:\n      tags:\n        - \"Other endpoints\"\n      operationId: getApiVersions\n      description: |\n        Return information about current and past REST API versions:\n        * Version\n        * Date\n        * Changelog\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/api_versions/\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                description: \"PGS Catalog information such as citation, REST API version, ...\"\n                type: object\n                properties:\n                  current:\n                    type: object\n                    description: \"Information about the current version of the REST API\"\n                    properties:\n                      version:\n                        type: string\n                        description: \"REST API version\"\n                        example: \"1.8\"\n                      date:\n                        type: string\n                        description: \"Release date (month) of the REST API\"\n                        example: \"2021-06\"\n                      changelog:\n                          type: array\n                          description: \"REST API changelog\"\n                          example: [\"New endpoint `/rest/api_versions` providing the list of all the REST API versions and their changelogs.\", \"Change the data type of the field 'rest_api/version' in `/rest/info` to 'string'.\", \"Change the data structure of the `/rest/ancestry_categories` endpoint by adding the new fields 'display_category' and 'categories'.\"]\n                          items:\n                            type: string\n                  previous:\n                    type: array\n                    items:\n                      type: object\n                      description: \"Information about the previous versions of the REST API\"\n                      properties:\n                        version:\n                          type: string\n                          description: \"REST API version\"\n                          example: \"1.7\"\n                        date:\n                          type: string\n                          description: \"Release date (month) of the REST API\"\n                          example: \"2021-04\"\n                        changelog:\n                            type: array\n                            description: \"REST API changelog\"\n                            example: [\"New data 'ancestry_distribution' in the `/rest/score` endpoints, providing information about ancestry distribution on each stage of the PGS\",\"New endpoint `/rest/ancestry_categories` providing the list of ancestry symbols and names.\"]\n                            items:\n                              type: string\n          description: ''\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n  '/rest/ancestry_categories':\n    get:\n      tags:\n        - \"Other endpoints\"\n      operationId: getAncestryCategories\n      description: |\n        Return the list of mappings between the ancestry symbols (e.g. EUR) and their name (e.g. European):\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/ancestry_categories/\n        ```\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                description: \"List of ancestry symbols and categories\"\n                additionalProperties:\n                  type: object\n                  description: \"Categories corresponding to the ancestry symbol\"\n                  properties:\n                    display_category:\n                      type: string\n                      description: 'Category used in the ancestry distribution charts'\n                    categories:\n                      type: array\n                      description: \"List of corresponding categories in the database\"\n                      items:\n                        type: string\n                example:\n                  AFR: { \"display_category\": \"African\", \"categories\": [\"African American or Afro-Caribbean\", \"African unspecified\"] }\n                  EUR: { \"display_category\": \"European\", \"categories\": [\"European\"] }\n          description: ''\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n\n\n  '/rest/gwas/get_score_ids/{gcst_id}':\n    get:\n      tags:\n        - \"Other endpoints\"\n      operationId: getGCST\n      description: |\n        Retrieve all the Polygenic Scores IDs using a given NHGRI-EBI GWAS Catalog study (GCST) as source of variant association\n\n        Example of request:\n        ```\n        https://www.pgscatalog.org/rest/gwas/get_score_ids/GCST001937\n        ```\n      parameters:\n        - name: gcst_id\n          in: path\n          required: true\n          description: 'NHGRI-EBI GWAS Catalog Study ID (GCST)'\n          examples:\n            GCST001937:\n              value: \"GCST001937\"\n            GCST004988:\n              value: \"GCST004988\"\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                description: \"List of Polygenic Score IDs\"\n                type: array\n                example: [\"PGS000001\",\"PGS000002\",\"PGS000003\"]\n                items:\n                  type: string\n          description: ''\n        '4XX':\n          content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error_4XX'\n          description: Client error (e.g. 400 - Bad request, 405 - Method not allowed)\n"
		}
	},
	"Error": "make ir: path \"/rest/publication/{pgp_id}\": get: responses: parse response status code: strconv.Atoi: parsing \"4XX\": invalid syntax"
}