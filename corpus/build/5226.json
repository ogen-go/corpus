{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PagerDuty/api-schema"
		},
		"file": {
			"name": "openapiv3.json",
			"path": "reference/events-v1/openapiv3.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"PagerDuty V1 Events API\",\n    \"version\": \"2010-04-15\",\n    \"contact\": {\n      \"name\": \"PagerDuty Support\",\n      \"url\": \"http://www.pagerduty.com/support\",\n      \"email\": \"support@pagerduty.com\"\n    },\n    \"description\": \"# PagerDuty Events API\\n\\nThe Events API is how you would add PagerDuty's advanced alerting functionality to any system that can make an HTTP API call. You can now add phone, SMS and email alerting to your monitoring tools, ticketing systems and custom software.\\n\\n\\n## Description\\n\\nThe API was designed to allow you to easily integrate a monitoring system with a Service in PagerDuty. Monitoring systems generally send out events when problems are detected and when these problems have been resolved (fixed). Some more advanced systems also understand the concept of acknowledgements: problems can be acknowledged by an engineer to signal he or she is working on fixing the issue.\\n\\nSince monitoring systems emit events, the API is based around accepting events. Incoming events (sent via the API) are routed to a PagerDuty service and processed. They may result in a new incident being created, or an existing incident being acknowledged or resolved.\\n\\nThe same event-based API can also be used to integrate a PagerDuty service with ticketing systems and various other software tools.\\n\\nInterested in becoming a PagerDuty partner? Fill out [this form](https://pdconnect.wufoo.com/forms/become-a-pagerduty-partner/) for more information.\\n\\n\\n## Getting Started\\n\\nThe Events API can be used with any \\\"Generic API\\\" service in PagerDuty. If you don't already have a \\\"Generic API\\\" service, you should create one:\\n\\n1. In your account, under the Services tab, click \\\"Add New Service\\\".\\n2. Enter a name for the service and select an escalation policy. Then, select \\\"Generic API\\\" for the Service Type.\\n3. Click the \\\"Add Service\\\" button.\\n4. Once the service is created, you'll be taken to the service page. On this page, you'll see the \\\"Service key\\\", which is needed to access the API\\n\\n\\n## Making a Request\\n\\nTo make an API request, POST a JSON object of the desired event type to the following URL:\\n\\n* https://events.pagerduty.com/generic/2010-04-15/create_event.json\\n\\n\\n## Event Types\\n\\nThe `event_type` field specifies what action to take on an incident:\\n\\n\\n| Event Type    | Description |\\n| ------------- | ------------|\\n| `trigger`     | Your monitoring tools should send PagerDuty a trigger event to report a new or ongoing problem. When PagerDuty receives a trigger event, it will either open a new incident, or add a new trigger log entry to an existing incident, depending on the provided incident_key. |\\n| `acknowledge` | Acknowledge events cause the referenced incident to enter the acknowledged state. While an incident is acknowledged, it won't generate any additional notifications, even if it receives new trigger events. Your monitoring tools should send PagerDuty an acknowledge event when they know someone is presently working on the problem. |\\n| `resolve`     | Resolve events cause the referenced incident to enter the resolved state. Once an incident is resolved, it won't generate any additional notifications. New trigger events with the same incident_key as a resolved incident won't re-open the incident. Instead, a new incident will be created. Your monitoring tools should send PagerDuty a resolve event when the problem that caused the initial trigger event has been fixed. |\\n\\n\\n## API Response Codes \u0026 Retry Logic\\n\\nIdeally, the API request will succeed and the PagerDuty server will indicate that it successfully received that event. In practice, the request may fail due to various reasons.\\n\\nThe following table shows the possible results of the API request and if you need to retry the API call for that result:\\n\\n\\n| Result  | Description   | Retry? |\\n| ------- | ------------- | ------ |\\n| 200     | OK - The event has been accepted by PagerDuty. See below for details. | No |\\n| 400     | Bad Request - Check that the JSON is valid. See below for details.    | No |\\n| 403     | Forbidden - Too many API calls at a time.                             | Yes - retry after some time. |\\n| 500 or other 5XX  | Internal Server Error - the PagerDuty server experienced an error while processing the event. | Yes - retry after some time. |\\n| Networking Error  | Error while trying to communicate with PagerDuty servers.   | Yes - retry after some time. |\\n\\n\\n## API Limits\\n\\nThere is a limit on the number of events that a service can accept at any given time. Depending on the behavior of the incoming traffic and how many incidents are being created at once, we reduce our throttle dynamically.\\n\\nIf each of the events your monitoring system is sending is important, be sure to retry on a 403 response code, preferably with a back off.\\n\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"Send Event\",\n      \"description\": \"Submit an event to PagerDuty.\"\n    }\n  ],\n  \"paths\": {\n    \"/create_event.json\": {\n      \"post\": {\n        \"parameters\": [],\n        \"tags\": [\n          \"Send Event\"\n        ],\n        \"summary\": \"Send an event to PagerDuty\",\n        \"operationId\": \"createV1Event\",\n        \"description\": \"Your monitoring tools should send PagerDuty a trigger event to report a new problem, or update an ongoing problem, depending on the event type.\\n\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"description\": \"Trigger or update an incident.\",\n                \"properties\": {\n                  \"service_key\": {\n                    \"type\": \"string\",\n                    \"description\": \"The GUID of one of your \\\"Generic API\\\" services. This is the \\\"Integration Key\\\" listed on a Generic API's service detail page.\"\n                  },\n                  \"event_type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of event. Can be `trigger`, `acknowledge` or `resolve`.\",\n                    \"enum\": [\n                      \"trigger\",\n                      \"acknowledge\",\n                      \"resolve\"\n                    ]\n                  },\n                  \"incident_key\": {\n                    \"type\": \"string\",\n                    \"description\": \"Identifies the incident to `trigger`, `acknowledge`, or `resolve`. Required unless the `event_type` is `trigger`.\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"Text that will appear in the incident's log associated with this event. Required for `trigger` events.\"\n                  },\n                  \"details\": {\n                    \"type\": \"object\",\n                    \"description\": \"An arbitrary JSON object containing any data you'd like included in the incident log.\"\n                  },\n                  \"client\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the monitoring client that is triggering this event. (This field is only used for `trigger` events.)\"\n                  },\n                  \"client_url\": {\n                    \"type\": \"string\",\n                    \"format\": \"url\",\n                    \"description\": \"The URL of the monitoring client that is triggering this event. (This field is only used for `trigger` events.)\"\n                  },\n                  \"contexts\": {\n                    \"type\": \"array\",\n                    \"description\": \"Contexts to be included with the incident trigger such as links to graphs or images. (This field is only used for `trigger` events.)\",\n                    \"items\": {\n                      \"description\": \"A single context reference for a new incident.\",\n                      \"discriminator\": {\n                        \"propertyName\": \"type\"\n                      },\n                      \"required\": [\n                        \"type\"\n                      ],\n                      \"oneOf\": [\n                        {\n                          \"$ref\": \"#/components/schemas/LinkContext\"\n                        },\n                        {\n                          \"$ref\": \"#/components/schemas/ImageContext\"\n                        }\n                      ]\n                    }\n                  }\n                },\n                \"required\": [\n                  \"service_key\",\n                  \"event_type\"\n                ]\n              },\n              \"examples\": {\n                \"default\": {\n                  \"summary\": \"Example Request Body\",\n                  \"value\": {\n                    \"service_key\": \"e93facc04764012d7bfb002500d5d1a6\",\n                    \"incident_key\": \"srv01/HTTP\",\n                    \"event_type\": \"trigger\",\n                    \"description\": \"FAILURE for production/HTTP on machine srv01.acme.com\",\n                    \"client\": \"Sample Monitoring Service\",\n                    \"client_url\": \"https://monitoring.service.com\",\n                    \"details\": {\n                      \"ping time\": \"1500ms\",\n                      \"load avg\": 0.75\n                    },\n                    \"contexts\": [\n                      {\n                        \"type\": \"link\",\n                        \"href\": \"http://acme.pagerduty.com\"\n                      },\n                      {\n                        \"type\": \"link\",\n                        \"href\": \"http://acme.pagerduty.com\"\n                      },\n                      {\n                        \"text\": \"View the incident on PagerDuty\",\n                        \"type\": \"image\",\n                        \"src\": \"https://chart.googleapis.com/chart?chs=600x400\u0026chd=t:6,2,9,5,2,5,7,4,8,2,1\u0026cht=lc\u0026chds=a\u0026chxt=y\u0026chm=D,0033FF,0,0,5,1\"\n                      },\n                      {\n                        \"type\": \"image\",\n                        \"src\": \"https://chart.googleapis.com/chart?chs=600x400\u0026chd=t:6,2,9,5,2,5,7,4,8,2,1\u0026cht=lc\u0026chds=a\u0026chxt=y\u0026chm=D,0033FF,0,0,5,1\",\n                        \"href\": \"https://google.com\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Success\"\n          },\n          \"400\": {\n            \"description\": \"Invalid event format (i.e. JSON parse error) or incorrect event structure\"\n          },\n          \"403\": {\n            \"description\": \"Rate limit reached (too many Events API requests)\"\n          },\n          \"5XX\": {\n            \"$ref\": \"#/components/responses/Error\"\n          }\n        }\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://events.pagerduty.com/generic/2010-04-15\"\n    }\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"ImageContext\": {\n        \"type\": \"object\",\n        \"description\": \"Image context\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of context being attached to the incident\",\n            \"enum\": [\n              \"image\"\n            ]\n          },\n          \"src\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"description\": \"The source of the image being attached to the incident. This image must be served via HTTPS.\"\n          },\n          \"href\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"description\": \"Optional link for the image.\"\n          },\n          \"alt\": {\n            \"type\": \"string\",\n            \"description\": \"Optional alternative text for the image.\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"src\"\n        ]\n      },\n      \"LinkContext\": {\n        \"type\": \"object\",\n        \"description\": \"Link context\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of context being attached to the incident\",\n            \"enum\": [\n              \"link\"\n            ]\n          },\n          \"href\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"description\": \"The link being attached to the incident.\"\n          },\n          \"text\": {\n            \"type\": \"string\",\n            \"description\": \"Optional information pertaining to this context link.\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"href\"\n        ]\n      }\n    },\n    \"responses\": {\n      \"Success\": {\n        \"description\": \"The incident has been opened or updated.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"status\"\n              ],\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"string\",\n                  \"description\": \"A short name for the error, or \\\"success\\\" if successful.\"\n                },\n                \"incident_key\": {\n                  \"type\": \"string\",\n                  \"description\": \"The key of the incident that will be affected by the request, if successful.\"\n                },\n                \"message\": {\n                  \"type\": \"string\",\n                  \"description\": \"A description of the problem, or \\\"Event processed\\\" if successful.\"\n                }\n              }\n            },\n            \"examples\": {\n              \"default\": {\n                \"summary\": \"Example Success Response\",\n                \"value\": {\n                  \"status\": \"success\",\n                  \"message\": \"Event processed\",\n                  \"incident_key\": \"srv01/HTTP\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Error\": {\n        \"description\": \"An error occurred on a request.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"string\",\n                  \"description\": \"A short name for the error.\"\n                },\n                \"message\": {\n                  \"type\": \"string\",\n                  \"description\": \"A description of the problem.\"\n                },\n                \"errors\": {\n                  \"type\": \"array\",\n                  \"description\": \"An array of specific error messages.\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"required\": [\n                \"status\",\n                \"message\"\n              ]\n            },\n            \"examples\": {\n              \"default\": {\n                \"summary\": \"Example Error Response\",\n                \"value\": {\n                  \"status\": \"unrecognized object\",\n                  \"message\": \"Event object format is unrecognized\",\n                  \"errors\": [\n                    \"JSON parse error\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "make ir: path \"/create_event.json\": post: responses: parse response status code: strconv.Atoi: parsing \"5XX\": invalid syntax"
}