{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ahx/openapi_first"
		},
		"file": {
			"name": "request-body-validation.yaml",
			"path": "spec/data/request-body-validation.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /pets:\n    post:\n      description: Creates a new pet in the store.  Duplicates are allowed\n      operationId: create_pet\n      requestBody:\n        description: Pet to add to the store\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewPet\"\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /pets/{id}:\n    parameters:\n      - name: id\n        in: path\n        description: ID of pet to fetch\n        required: true\n        schema:\n          type: integer\n          format: int64\n    patch:\n      description: Updates a pet\n      operationId: update_pet\n      requestBody:\n        description: Changes\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewPet\"\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /with-default-body-value:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - has_default\n              properties:\n                has_default:\n                  type: boolean\n                  default: true\n  /without-request-body:\n    post:\n      responses:\n        200:\n          description: Ok\ncomponents:\n  schemas:\n    Pet:\n      allOf:\n        - $ref: \"#/components/schemas/NewPet\"\n        - required:\n            - id\n          properties:\n            id:\n              type: integer\n              format: int64\n\n    NewPet:\n      required:\n        - type\n        - attributes\n      properties:\n        type:\n          type: string\n          enum:\n            - pet\n            - plant\n        attributes:\n          additionalProperties: false\n          type: object\n          required: [name]\n          properties:\n            name:\n              type: string\n\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "parse: paths: /with-default-body-value: post: : responses: no responses"
}