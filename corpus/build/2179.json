{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Lists_GET_POST.yaml",
			"path": "Specification/BrAPI-Core/Lists/Lists_GET_POST.yaml",
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /lists:\n    get:\n      summary: Get filtered set of generic lists\n      description: Get filtered set of generic lists\n      parameters:\n      - description: The type of objects contained by this generic list\n        in: query\n        name: listType\n        required: false\n        schema:\n          $ref: '#/components/schemas/ListTypes'\n      - description: The human readable name of this generic list\n        in: query\n        name: listName\n        required: false\n        schema:\n          type: string\n      - description: The unique ID of this generic list\n        in: query\n        name: listDbId\n        required: false\n        schema:\n          type: string\n      - description: The source tag of this generic list\n        in: query\n        name: listSource\n        required: false\n        schema:\n          type: string\n      - $ref: '#/components/parameters/externalReferenceID'\n      - $ref: '#/components/parameters/externalReferenceSource'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListsListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Lists\n    post:\n      summary: Create New List Objects\n      description: Create new list objects in the database\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ListNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ListsListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Lists\ncomponents:\n  responses:\n    ListsListResponse:\n      content:\n        application/json:\n          schema:\n            title: ListsListResponse\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ListSummary'\n                required:\n                - data\n            required:\n            - metadata\n            - result\n            type: object\n      description: OK\n      headers: {}\n    \n"
		}
	},
	"Error": "parse: paths: /lists: get: : parameters: parse parameter \"listType\": schema: parse schema: reference \"#/components/schemas/ListTypes\": resolve reference \"#/components/schemas/ListTypes\": schema not found"
}