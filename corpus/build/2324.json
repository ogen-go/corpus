{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cam-inc/viron"
		},
		"file": {
			"name": "items.yaml",
			"path": "example/nodejs/src/openapi/items.yaml",
			"content": "openapi: 3.0.2\ninfo:\n  version: 0.0.1\n  title: '@viron/example-nodejs items'\n  description: items api specifications\n  x-pages:\n    - id: item\n      group: 管理画面/マスター\n      title: アイテム\n      description: |\n        # アイテムの管理\n        アイテムの **作成・更新・削除** を行います。\n      contents:\n        - title: アイテム情報\n          type: table\n          operationId: listItems\n          pagination: true\n          resourceId: item\n\ntags:\n  - name: item\n\npaths:\n  /items:\n    get:\n      operationId: listItems\n      tags:\n        - item\n      summary: list items\n      description: アイテム一覧\n      parameters:\n        - $ref: './components.yaml#/components/parameters/PagerSizeQueryParam'\n        - $ref: './components.yaml#/components/parameters/PagerPageQueryParam'\n        - $ref: './components.yaml#/components/parameters/SortQueryParam'\n        - $ref: '#/components/parameters/ItemIdQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ItemListWithPager'\n      security:\n        - jwt: []\n\n    post:\n      operationId: createItem\n      tags:\n        - item\n      summary: create item\n      description: アイテム作成\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ItemCreatePayload'\n      responses:\n        201:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Item'\n      security:\n        - jwt: []\n\n  /items/{itemId}:\n    put:\n      operationId: updateItem\n      tags:\n        - item\n      summary: update item\n      description: アイテム更新\n      parameters:\n        - $ref: '#/components/parameters/ItemIdPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ItemUpdatePayload'\n      responses:\n        204:\n          description: OK\n      security:\n        - jwt: []\n\n    delete:\n      operationId: removeItem\n      tags:\n        - item\n      summary: remove item\n      description: アイテム削除\n      parameters:\n        - $ref: '#/components/parameters/ItemIdPathParam'\n      responses:\n        204:\n          description: OK\n      security:\n        - jwt: []\n\ncomponents:\n  parameters:\n    ItemIdPathParam:\n      name: itemId\n      in: path\n      schema:\n        type: string\n      required: true\n\n    ItemIdQueryParam:\n      name: itemId\n      in: query\n      schema:\n        type: string\n      required: false\n\n  schemas:\n    ItemListWithPager:\n      allOf:\n        - $ref: './components.yaml#/components/schemas/Pager'\n        - type: object\n          properties:\n            list:\n              $ref: '#/components/schemas/ItemList'\n          required:\n            - list\n\n    ItemList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Item'\n\n    Item:\n      type: object\n      properties:\n        id:\n          description: ID\n          type: string\n        name:\n          description: アイテム名\n          type: string\n        description:\n          description: アイテム説明\n          type: string\n        sellingPrice:\n          description: 販売価格\n          type: integer\n        imageUrl:\n          description: 画像URL\n          type: string\n          format: uri\n        detail:\n          $ref: '#/components/schemas/ItemDetail'\n      required:\n        - id\n        - name\n        - description\n        - sellingPrice\n        - imageUrl\n        - detail\n\n    ItemDetail:\n      oneOf:\n        - $ref: '#/components/schemas/RealGoods'\n        - $ref: '#/components/schemas/DigitalContents'\n\n    RealGoods:\n      title: グッズ\n      type: object\n      properties:\n        type:\n          description: アイテム種別\n          type: string\n          enum:\n            - realGoods\n        productCode:\n          description: 製品コード\n          type: string\n        manufacturer:\n          description: 製造元\n          type: string\n        manufacturingCost:\n          description: 製造原価\n          type: integer\n      required:\n        - type\n        - productCode\n        - manufacturer\n        - manufacturingCost\n\n    DigitalContents:\n      title: デジコン\n      type: object\n      properties:\n        type:\n          description: アイテム種別\n          type: string\n          enum:\n            - digitalContents\n        downloadUrl:\n          description: ダウンロードURL\n          type: string\n          format: uri\n      required:\n        - type\n        - downloadUrl\n\n    ItemCreatePayload:\n      type: object\n      properties:\n        name:\n          description: アイテム名\n          type: string\n        description:\n          description: アイテム説明\n          type: string\n        sellingPrice:\n          description: 販売価格\n          type: integer\n        imageUrl:\n          description: 画像URL\n          type: string\n          format: uri\n        detail:\n          $ref: '#/components/schemas/ItemDetail'\n      required:\n        - name\n        - description\n        - sellingPrice\n        - imageUrl\n        - detail\n\n    ItemUpdatePayload:\n      type: object\n      properties:\n        name:\n          description: アイテム名\n          type: string\n        description:\n          description: アイテム説明\n          type: string\n        sellingPrice:\n          description: 販売価格\n          type: integer\n        imageUrl:\n          description: 画像URL\n          type: string\n          format: uri\n        detail:\n          $ref: '#/components/schemas/ItemDetail'\n      required:\n        - name\n        - description\n        - sellingPrice\n        - imageUrl\n        - detail\n"
		}
	},
	"Error": "parse: paths: /items: get: listItems: parameters: parse parameter \"\": resolve \"./components.yaml#/components/parameters/PagerSizeQueryParam\" reference: invalid parameter reference: \"./components.yaml#/components/parameters/PagerSizeQueryParam\""
}