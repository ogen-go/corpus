{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ensdomains/ens-metadata-service"
		},
		"file": {
			"name": "doc_output.json",
			"path": "src/assets/doc_output.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"0.0.1-alpha.0\",\n    \"title\": \"ENS Metadata Service\",\n    \"description\": \"Set of endpoints to query ENS metadata and more\",\n    \"x-logo\": {\n      \"url\": \"/assets/logo.svg\",\n      \"altText\": \"Ethereum Name Service\"\n    }\n  },\n  \"host\": \"http://localhost:8080\",\n  \"basePath\": \"/\",\n  \"tags\": [],\n  \"schemes\": [\n    \"http\"\n  ],\n  \"consumes\": [],\n  \"produces\": [],\n  \"paths\": {\n    \"/{networkName}/{contractAddress(0x[a-fA-F0-9]{40})}/{tokenId}\": {\n      \"get\": {\n        \"tags\": [],\n        \"description\": \"ENS NFT metadata\",\n        \"parameters\": [\n          {\n            \"name\": \"networkName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Name of the chain to query for. (mainnet | rinkeby | ropsten | goerli ...)\"\n          },\n          {\n            \"name\": \"contractAddress\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Contract Address of your stored NFT\"\n          },\n          {\n            \"name\": \"tokenId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Namehash(v1) /Labelhash(v2) of your ENS name.\\n\\nMore: https://docs.ens.domains/contract-api-reference/name-processing#hashing-names\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Metadata object\"\n          },\n          \"404\": {\n            \"description\": \"No results found.\"\n          }\n        }\n      }\n    },\n    \"/{networkName}/{contractAddress(0x[a-fA-F0-9]{40})}/{tokenId}/image\": {\n      \"get\": {\n        \"tags\": [],\n        \"description\": \"ENS NFT image\",\n        \"parameters\": [\n          {\n            \"name\": \"networkName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Name of the chain to query for. (mainnet | rinkeby | ropsten | goerli ...)\"\n          },\n          {\n            \"name\": \"contractAddress\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Contract Address of your stored NFT\"\n          },\n          {\n            \"name\": \"tokenId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Namehash(v1) /Labelhash(v2) of your ENS name.\\n\\nMore: https://docs.ens.domains/contract-api-reference/name-processing#hashing-names\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Image file\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          },\n          \"501\": {\n            \"description\": \"Not Implemented\"\n          }\n        }\n      }\n    },\n    \"/{networkName}/avatar/{name}/meta\": {\n      \"get\": {\n        \"tags\": [],\n        \"description\": \"ENS avatar metadata\",\n        \"parameters\": [\n          {\n            \"name\": \"networkName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Name of the chain to query for. (mainnet | rinkeby | ropsten | goerli ...)\"\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"ENS name\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Avatar metadata object\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/{networkName}/avatar/{name}\": {\n      \"get\": {\n        \"tags\": [],\n        \"description\": \"ENS avatar image\",\n        \"parameters\": [\n          {\n            \"name\": \"networkName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Name of the chain to query for. (mainnet | rinkeby | ropsten | goerli ...)\"\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"ENS name\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Avatar image file\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {}\n}"
		}
	},
	"Error": "parse: paths: /{networkName}/{contractAddress(0x[a-fA-F0-9]{40})}/{tokenId}: get: operation \"\": parse path: invalid path: /{networkName}/{contractAddress(0x[a-fA-F0-9]{40})}/{tokenId}"
}