{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/flagbase/flagbase"
		},
		"file": {
			"name": "swagger.yaml",
			"path": "core/api/swagger/swagger.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    # Overview\n    This is the swagger docs for the [Core](https://flagbase.com/oss/#core) API. For an overview of the system - please read our [overview guides](http://flagbase.com/docs/guides/overview). This API conforms to the [JSON:API spec](https://jsonapi.org/format/).\n\n    # Getting Started\n    The steps will help you create and evaluate your first flag. In this guide, we assume you already have an instance of Flagbase Core running.\n\n    1. [Obtain your root user access token](#operation/gen-access-token). In order to create a workspace, you'll need root user permissions, hence why we obtain root access to the service. If you want to create a root access key-secret pair, please refer to the [getting started guide](/dev/core/getting-started) for the core.\n    1. [Create a workspace](#operation/create-workspace). Your projects will live inside here.\n    1. [Create admin access](#operation/create-workspace-access) for your workspace. We will use this access token for all subsequent requests.\n    1. [Obtain your workspace admin access token](#operation/gen-access-token) you created in the previous step. \n    1. [Create a project](#operation/create-project). Your flags will live inside here.\n    1. [Create a flag](#operation/create-flag). You can [configure targeting](#operation/update-tageting) for that flag if you wish.\n    1. [Evaluate your flags](#operation/evaluate-flags) or [get the non-evaluated flagset](#operation/get-evaluation)\n  title: Core API\n  version: 0.0.1-alpha\n  contact:\n    name: Flagbase\n    url: 'https://flagbase.com'\n    email: info@flagbase.com\n  license:\n    name: MPL 2.0\n    url: 'https://flagbase.com/legal/license'\n  x-logo:\n    altText: Flagbase Core API\n  termsOfService: 'https://flagbase.com/legal/privacy'\ntags:\n  - name: auth\n    x-displayName: Auth Management\n    description: Authenticate using the access key-secret pair and obtain an access token used to authorize your requests.\n  - name: workspaces\n    x-displayName: Workspace Management\n    description: Workspaces represent a collection of projects. It can be used to group an individual or organisation's projects.\n  - name: workspace-access\n    x-displayName: Workspace Access\n    description: A new workspace-access link should be created in order to enable the appropriate acess permissions to this resource and its children.\n  - name: projects\n    x-displayName: Project Management\n    description: Projects represent a collection of feature flags and their respective rollout rules etc. Projects also have different contexts which are applied (i.e. environments).\n  - name: project-access\n    x-displayName: Project Access\n    description: A new project-access link should be created in order to enable the appropriate acess permissions to this resource and its children.\n  - name: environments\n    x-displayName: Environment Management\n    description: 'Environments are used to maintain isolated contexts for project resources (such as feature flags, rollout rules etc). For example, you can have Test and Production environments, which contain completely separate rollout rules etc.'\n  - name: evaluation\n    x-displayName: Flag Evaluation\n    description: 'Evaluation is the process of deriving the variation of a flag / set of flags, given a particular context (i.e. user traits)'\n  - name: environment-access\n    x-displayName: Environment Access\n    description: A new environment-access link should be created in order to enable the appropriate acess permissions to this resource and its children.\n  - name: flags\n    x-displayName: Flag Management\n    description: 'A feature flag (aka feature switch) represent the current state of a feature. Feature flags consists of variations (ie. boolean (true, false) or multi-variant (A, B, C)), where each variation represents a unique state of a particular feature.'\n  - name: variations\n    x-displayName: Variation Management\n    description: A variation represents a particular feature flag state. Feature flags usually consist of multiple variations (e.g. True and False). We can rollout different feature variations to particular users or user segments.\n  - name: targeting\n    x-displayName: Targeting Management\n    description: Targeting is essentially a rollout configuration which defines how feature flag variations are rolled out to specific users. Rollout rules can target specific user or segments. After users \"evaluate\" a specific rollout rule and obtain a flag variation.\n  - name: targeting-rules\n    x-displayName: Targeting Rules\n    description: Targeting rules allow you to explicity define how you want to target feature flags to users. You are required to specify logical statements which are evaluated when serving flags to users.\n  - name: traits\n    x-displayName: Trait Management\n    description: Traits represent a particular characteristic of a particular identity (aka users). You can create segments using these traits. Traits can also be used to target variations to specific users.\n  - name: sdk-keys\n    x-displayName: SDK Key Management\n    description: SDK keys are used by client and server-side SDKs and help identify a flagset in a particular project environment.\n  - name: segments\n    x-displayName: Segment Management\n    description: Segments represent a specific group of users based on their attributes. You can define a specific user segments using a set rules. Rules contain conditions that are applied to attributes.\n  - name: segment-rules\n    x-displayName: Segment Rules\n    description: Segment rules consists of conditions that need to match a specific user's attributes (i.e. identity traits) .\n  - name: identities\n    x-displayName: Identity Management\n    description: An identity is an instance of a user. Identities are initially created when the first evaluate a feature flag (i.e. by using the SDK).\n  - name: auditlog\n    x-displayName: Auditlog\n    description: 'Auditlog is a log of all mutations on the workspace and its children resources (i.e. projects, environments and feature flags).'\nx-tagGroups:\n  - name: Authorization\n    tags:\n      - auth\n  - name: Workspaces\n    tags:\n      - workspaces\n      - workspace-access\n  - name: Projects\n    tags:\n      - projects\n      - project-access\n      - environments\n      - sdk-keys\n  - name: Feature Flags\n    tags:\n      - flags\n      - variations\n      - evaluation\n  - name: Targeting\n    tags:\n      - targeting\n      - targeting-rules\n  - name: Segments\n    tags:\n      - segments\n      - segment-rules\n  - name: Identities\n    tags:\n      - identities\n      - traits\npaths:\n  '/workspaces/{wsKey}':\n    get:\n      operationId: get-workspace\n      summary: Get workspace\n      description: 'Retreive a workspace, given the workspace key.'\n      tags:\n        - workspaces\n      responses:\n        '200':\n          $ref: '#/components/responses/Workspace'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - Access Token: []\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n    patch:\n      summary: Update workspace\n      operationId: update-workspace\n      responses:\n        '200':\n          $ref: '#/components/responses/Workspace'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - workspaces\n      description: Update an existing workspace.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples:\n              example-1:\n                value:\n                  - op: replace\n                    path: /name\n                    value: ECorp\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete workspace\n      operationId: delete-workspace\n      responses:\n        '204':\n          description: No Content\n          content:\n            application/json:\n              schema: {}\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete an existing workspace. This operation can not be undone. Please proceed with caution.\n      tags:\n        - workspaces\n      security:\n        - Access Token: []\n      parameters: []\n  '/projects/{wsKey}/{projKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n    get:\n      summary: Get project\n      responses:\n        '200':\n          $ref: '#/components/responses/Project'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-project\n      tags:\n        - projects\n      description: Get an existing project.\n      security:\n        - Access Token: []\n    patch:\n      summary: Update project\n      operationId: update-project\n      responses:\n        '200':\n          $ref: '#/components/responses/Project'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - projects\n      description: Update an existing project.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete project\n      operationId: delete-project\n      responses:\n        '204':\n          $ref: '#/components/responses/InternalServerError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - projects\n      description: Delete an existing project.\n      security:\n        - Access Token: []\n  '/projects/{wsKey}/{projKey}/environments/{envKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n    get:\n      summary: Get environment\n      tags:\n        - environments\n      responses:\n        '200':\n          $ref: '#/components/responses/Environment'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-environment\n      description: Get a project environment.\n      parameters: []\n      security:\n        - Access Token: []\n    patch:\n      summary: Update environment\n      operationId: update-environment\n      responses:\n        '200':\n          $ref: '#/components/responses/Environment'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - environments\n      description: Update an existing environment.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples: {}\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete environment\n      operationId: delete-environment\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - environments\n      description: Delete an existing environment.\n      security:\n        - Access Token: []\n  '/flags/{wsKey}/{projKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n    get:\n      summary: List feature flags\n      tags:\n        - flags\n      responses:\n        '200':\n          $ref: '#/components/responses/Flags'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-flags\n      parameters: []\n      description: List feature flags in the project.\n      security:\n        - Access Token: []\n    post:\n      summary: Create feature flag\n      operationId: create-flag\n      responses:\n        '201':\n          $ref: '#/components/responses/Flag'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - flags\n      description: Create a new feature flag in the specified project\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Flag'\n        description: Flag Object\n      security:\n        - Access Token: []\n  /workspaces:\n    get:\n      summary: List workspaces\n      tags:\n        - workspaces\n      responses:\n        '200':\n          $ref: '#/components/responses/Workspaces'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-workspaces\n      description: |-\n        List all workspaces.\n\n        Note: you need root access to perform this operation.\n      security:\n        - Access Token: []\n    post:\n      summary: Create workspace\n      operationId: create-workspace\n      responses:\n        '201':\n          $ref: '#/components/responses/Workspace'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - workspaces\n      description: Create a new workspace. Workspace keys must be unique.\n      requestBody:\n        $ref: '#/components/requestBodies/Workspace'\n      security:\n        - Access Token: []\n    parameters: []\n  '/projects/{wsKey}':\n    post:\n      summary: Create project\n      operationId: create-project\n      responses:\n        '201':\n          $ref: '#/components/responses/Project'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        description: 'Project Object '\n      tags:\n        - projects\n      description: Create a new project. The project will be created in the workspace accociated with the access key-secret pair being used.\n      security:\n        - Access Token: []\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n    get:\n      summary: List projects\n      operationId: get-projects\n      responses:\n        '200':\n          $ref: '#/components/responses/Projects'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: List all projects in the workspace associated with this access key-secret pair.\n      tags:\n        - projects\n      security:\n        - Access Token: []\n  /access/token:\n    post:\n      summary: Obtain access token\n      operationId: gen-access-token\n      responses:\n        '200':\n          $ref: '#/components/responses/AccessToken'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Obtain a signed access token using an access key-secret pair.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                key:\n                  type: string\n                  description: Unique access key\n                secret:\n                  type: string\n                  description: Access secret\n              required:\n                - key\n                - secret\n            examples:\n              example-1:\n                value:\n                  key: root\n                  secret: toor\n        description: Access key-secret pair.\n      tags:\n        - auth\n      security: []\n    parameters: []\n  '/workspaces/{wsKey}/access':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n    get:\n      summary: List workspace access\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Access'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-workspace-access\n      description: List access keys that are currently in use for a particular workspace.\n      tags:\n        - workspace-access\n      security:\n        - Access Token: []\n    post:\n      summary: Create workspace access\n      operationId: create-workspace-access\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Access'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Create a new workspace access link. Make sure you generate the access key-secret pair with the appropriate permissions type before using this operation.\n      requestBody:\n        $ref: '#/components/requestBodies/AccessInput'\n      tags:\n        - workspace-access\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete workspace access\n      operationId: delete-workspaces-access\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete an existing workspace access link.\n      requestBody:\n        $ref: '#/components/requestBodies/AccessPairInput'\n      tags:\n        - workspace-access\n      security:\n        - Access Token: []\n  '/projects/{wsKey}/{projKey}/access':\n    get:\n      summary: List project access\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/AccessPairInput'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-project-access\n      description: List access keys that are currently in use for a particular project.\n      tags:\n        - project-access\n      security:\n        - Access Token: []\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n    post:\n      summary: Create project access\n      operationId: create-project-access\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Access'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Create a new project access link. Make sure you generate the access key-secret pair with the appropriate permissions type before using this operation.\n      requestBody:\n        $ref: '#/components/requestBodies/AccessInput'\n      tags:\n        - project-access\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete project access\n      operationId: delete-project-access\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete an existing project access link.\n      requestBody:\n        $ref: '#/components/requestBodies/AccessPairInput'\n      tags:\n        - project-access\n      security:\n        - Access Token: []\n  '/projects/{wsKey}/{projKey}/environments':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n    get:\n      summary: List project environments\n      tags:\n        - environments\n      responses:\n        '200':\n          $ref: '#/components/responses/Environments'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-environments\n      description: Retreive a list of a project's environments.\n      security:\n        - Access Token: []\n    post:\n      summary: Create environment\n      operationId: create-environment\n      responses:\n        '201':\n          $ref: '#/components/responses/Environment'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - environments\n      description: Create a new project environment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Environment'\n        description: Environmnet Object\n      security:\n        - Access Token: []\n  '/flags/{wsKey}/{projKey}/{flagKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/flagKey'\n    get:\n      summary: Get feature flag\n      tags:\n        - flags\n      responses:\n        '200':\n          $ref: '#/components/responses/Flag'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-flag\n      parameters: []\n      description: Get a single feature flag using its key.\n      security:\n        - Access Token: []\n    patch:\n      summary: Update feature flag\n      operationId: update-flag\n      responses:\n        '200':\n          $ref: '#/components/responses/Flag'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - flags\n      description: Update an existing flag.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete feature flag\n      operationId: delete-flag\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - flags\n      description: Delete an existing flag.\n      security:\n        - Access Token: []\n  '/flags/{wsKey}/{projKey}/{flagKey}/variations':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/flagKey'\n    get:\n      summary: List variations\n      tags:\n        - variations\n      responses:\n        '200':\n          $ref: '#/components/responses/Variations'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-variations\n      description: List all variations of a specific flag.\n      security:\n        - Access Token: []\n    post:\n      summary: Create variation\n      operationId: create-variation\n      responses:\n        '201':\n          $ref: '#/components/responses/Variation'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - variations\n      description: Create a flag variation.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variation'\n            examples:\n              example-1:\n                value:\n                  key: control\n                  name: Control\n                  description: Default variation observed by the control group.\n                  tags:\n                    - example-tag\n        description: Flag variation\n      security:\n        - Access Token: []\n  '/flags/{wsKey}/{projKey}/{flagKey}/variations/{variationKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/flagKey'\n      - $ref: '#/components/parameters/variationKey'\n    get:\n      summary: Get variation\n      tags:\n        - variations\n      responses:\n        '200':\n          $ref: '#/components/responses/Variation'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-variation\n      description: Get a single variation of a specific flag.\n      security:\n        - Access Token: []\n    patch:\n      summary: Update variation\n      operationId: update-variation\n      responses:\n        '200':\n          $ref: '#/components/responses/Variation'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - variations\n      description: Update a specific variation.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete variation\n      operationId: delete-variation\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - variations\n      description: Delete a single flag variation\n      security:\n        - Access Token: []\n  '/identities/{wsKey}/{projKey}/{envKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n    get:\n      summary: List identities\n      tags:\n        - identities\n      responses:\n        '200':\n          $ref: '#/components/responses/Identities'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-identities\n      description: List project identities in a specific environment.\n      parameters: []\n      security:\n        - Access Token: []\n  '/identities/{wsKey}/{projKey}/{envKey}/{identityKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/identityKey'\n    get:\n      summary: Get identity\n      tags:\n        - identities\n      responses:\n        '200':\n          $ref: '#/components/responses/Indentity'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-identity\n      description: Get a single identity from a project.\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete identity\n      operationId: delete-identity\n      responses:\n        '204':\n          description: No Content\n          content:\n            application/json:\n              schema: {}\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - identities\n      description: Delete an environment specific identity.\n      security:\n        - Access Token: []\n  '/targeting/{wsKey}/{projKey}/{envKey}/{flagKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/flagKey'\n    get:\n      summary: Get targeting\n      responses:\n        '200':\n          $ref: '#/components/responses/Targeting'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-targeting\n      description: 'Get a specific flag''s targeting configuration. '\n      tags:\n        - targeting\n      parameters: []\n      security:\n        - Access Token: []\n    patch:\n      summary: Update targeting\n      operationId: update-tageting\n      responses:\n        '200':\n          $ref: '#/components/responses/Targeting'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Update a targeting configuration of a existing feature flag.\n      parameters: []\n      tags:\n        - targeting\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples:\n              example-1:\n                value:\n                  - op: replace\n                    path: /enabled\n                    value: true\n                  - op: replace\n                    path: /fallthroughVariations/0/weight\n                    value: 60\n                  - op: replace\n                    path: /fallthroughVariations/1/weight\n                    value: 40\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    post:\n      summary: Create targeting\n      operationId: create-targeting\n      responses:\n        '201':\n          $ref: '#/components/responses/Targeting'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Create a targeting configuration for a particular flag per environment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Targeting'\n            examples:\n              example-1:\n                value:\n                  id: string\n                  enabled: true\n                  fallthroughVariations:\n                    - variationKey: control\n                      weight: 50\n                    - variationKey: treatment\n                      weight: 50\n        description: Targeting configuration\n      tags:\n        - targeting\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete targeting\n      operationId: delete-targeting\n      responses:\n        '200':\n          $ref: '#/components/responses/Targeting'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete a targeting configuration for a particular flag per environment\n      tags:\n        - targeting\n      security:\n        - Access Token: []\n  '/targeting/{wsKey}/{projKey}/{envKey}/{flagKey}/rules':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/flagKey'\n    get:\n      summary: List targeting rules\n      tags:\n        - targeting-rules\n      responses:\n        '200':\n          $ref: '#/components/responses/TargetingRules'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-target-rules\n      description: List the targeting rules of an existing flag in a specific environment.\n      parameters: []\n      security:\n        - Access Token: []\n    post:\n      summary: Create targeting rule\n      operationId: create-targeting-rule\n      responses:\n        '201':\n          $ref: '#/components/responses/TargetingRule'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - targeting-rules\n      description: Create a new targeting rule for a feature flag in a specific environment.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TargetingRule'\n            examples:\n              example-1:\n                value:\n                  key: test-targeting-rule-1\n                  name: Example targeting rule\n                  description: This should describe the purpose of the targeting rule.\n                  tags:\n                    - example-tag\n                  type: trait\n                  traitKey: some-trait-key\n                  traitValue: some-trait-value\n                  operator: equal\n                  ruleVariations:\n                    - variationKey: control\n                      weight: 0\n                    - variationKey: treatment\n                      weight: 100\n                  segmentKey: test-segment-1\n        description: Targeting Rule\n      security:\n        - Access Token: []\n  '/targeting/{wsKey}/{projKey}/{envKey}/{flagKey}/rules/{ruleKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/flagKey'\n      - $ref: '#/components/parameters/ruleKey'\n    get:\n      summary: Get targeting rule\n      tags:\n        - targeting-rules\n      responses:\n        '200':\n          $ref: '#/components/responses/TargetingRule'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-targeting-rule\n      parameters: []\n      description: Get a targeting rule for a specfic flag and its environment.\n      security:\n        - Access Token: []\n    patch:\n      summary: Update targeting rule\n      operationId: update-targeting-rule\n      responses:\n        '200':\n          $ref: '#/components/responses/TargetingRule'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Update an existing target rule.\n      parameters: []\n      tags:\n        - targeting-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples:\n              example-1:\n                value:\n                  - op: replace\n                    path: /operator\n                    value: contains\n                  - op: replace\n                    path: /ruleVariations/0/weight\n                    value: 20\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete targeting rule\n      operationId: delete-targeting-rule\n      responses:\n        '204':\n          description: No Content\n          content:\n            application/json:\n              schema: {}\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete an existing targeting rule.\n      parameters: []\n      tags:\n        - targeting-rules\n      security:\n        - Access Token: []\n  '/traits/{wsKey}/{projKey}/{envKey}/{traitKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/traitKey'\n    get:\n      summary: Get trait\n      responses:\n        '200':\n          $ref: '#/components/responses/Trait'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-trait\n      description: Get a trait within a specific environment.\n      parameters: []\n      tags:\n        - traits\n      security:\n        - Access Token: []\n    patch:\n      summary: Update trait\n      operationId: update-trait\n      responses:\n        '200':\n          $ref: '#/components/responses/Trait'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Update an existing trait.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples:\n              example-1:\n                value:\n                  - op: replace\n                    path: /key\n                    value: test-trait\n        description: Patch Document (RFC 6902)\n      tags:\n        - traits\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete trait\n      operationId: delete-trait\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete an existing trait.\n      tags:\n        - traits\n      security:\n        - Access Token: []\n  '/traits/{wsKey}/{projKey}/{envKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n    get:\n      summary: List traits\n      tags:\n        - traits\n      responses:\n        '200':\n          $ref: '#/components/responses/Traits'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-traits\n      description: Retreive a list of traits in a particular environment.\n      security:\n        - Access Token: []\n    post:\n      summary: Create trait\n      operationId: create-trait\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Trait'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - traits\n      description: Create a new trait for a particular environment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Trait'\n            examples:\n              example-1:\n                value:\n                  key: some-trait-key\n                  isIdentifier: true\n        description: Environmnet Object\n      security:\n        - Access Token: []\n  '/segments/{wsKey}/{projKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n    get:\n      summary: List segments\n      tags:\n        - segments\n      responses:\n        '200':\n          $ref: '#/components/responses/Segments'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-segments\n      description: List a project's user segments.\n      security:\n        - Access Token: []\n    post:\n      summary: Create segment\n      operationId: create-segment\n      responses:\n        '201':\n          $ref: '#/components/responses/Segment'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - segments\n      description: Create a user segment in a specific project.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Segment'\n            examples:\n              example-1:\n                value:\n                  id: 87871700-ab40-40c5-b8dc-1d4dcac38ca6\n                  key: test-segment-1\n                  name: Example Name\n                  description: This should be a description.\n                  tags:\n                    - example-tag\n      security:\n        - Access Token: []\n  '/segments/{wsKey}/{projKey}/{segKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/segKey'\n    get:\n      summary: Get segment\n      tags:\n        - segments\n      responses:\n        '200':\n          $ref: '#/components/responses/Segment'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-segment\n      description: Get a user segment from a project.\n      security:\n        - Access Token: []\n    patch:\n      summary: Update segment\n      operationId: update-segment\n      responses:\n        '200':\n          $ref: '#/components/responses/Segment'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Update an existing user segment in a specific project.\n      tags:\n        - segments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples:\n              example-1:\n                value:\n                  - op: replace\n                    path: /name\n                    value: Cool segment name\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete segment\n      operationId: delete-segment\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - segments\n      description: Delete an existing user segment.\n      security:\n        - Access Token: []\n  '/segments/{wsKey}/{projKey}/{segKey}/rules/{envKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/segKey'\n    get:\n      summary: List segment rules\n      tags:\n        - segment-rules\n      responses:\n        '200':\n          $ref: '#/components/responses/SegmentRules'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-segment-rules\n      description: List segment rules for a particular segment.\n      security:\n        - Access Token: []\n    post:\n      summary: Create segment rule\n      operationId: create-segment-rule\n      responses:\n        '201':\n          $ref: '#/components/responses/SegmentRule'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      tags:\n        - segment-rules\n      description: Create a new segment rule for a particular segment.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SegmentRule'\n            examples:\n              example-1:\n                value:\n                  key: some-segment-rule\n                  traitKey: some-trait-key\n                  traitValue: some-trait-value\n                  operator: equal\n                  negate: false\n        description: Segment Rules\n      security:\n        - Access Token: []\n  '/segments/{wsKey}/{projKey}/{segKey}/rules/{envKey}/{ruleKey}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/segKey'\n      - $ref: '#/components/parameters/ruleKey'\n    get:\n      summary: Get segment rule\n      tags:\n        - segment-rules\n      responses:\n        '200':\n          $ref: '#/components/responses/SegmentRule'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-segment-rule\n      description: Get a specific segment rule\n      security:\n        - Access Token: []\n    patch:\n      summary: Update segment rule\n      operationId: update-segment-rule\n      responses:\n        '200':\n          $ref: '#/components/responses/SegmentRule'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Update an existing segment rule.\n      tags:\n        - segment-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples:\n              example-1:\n                value:\n                  - op: replace\n                    path: /traitKey\n                    value: some-random-trait-key\n        description: Patch Document (RFC 6902)\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete segment rule\n      operationId: delete-segment-rule\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete an existing segment rule\n      tags:\n        - segment-rules\n      security:\n        - Access Token: []\n  '/evaluation/{wsKey}/{projKey}/{envKey}':\n    get:\n      summary: Get evaluation details\n      tags:\n        - evaluation\n      responses:\n        '200':\n          $ref: '#/components/responses/FlagsetRaw'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-evaluation\n      description: 'Get non-evaluated flagset rules, used for evaluation. The raw flagset contains the flag variations, rules etc. Using the raw flagset, we can compute the evaluated flagset using the user context (i.e. user traits \u0026 identifer).'\n      security:\n        - Access Token: []\n      parameters: []\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n    post:\n      summary: Evaluate flags\n      operationId: evaluate-flags\n      responses:\n        '200':\n          $ref: '#/components/responses/FlagsetEvaluated'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Evaluate flags given a particular context.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EvaluationContext'\n            examples:\n              example-1:\n                value:\n                  identifier: some-user-key\n                  traits:\n                    some-trait-key: some-trait-value\n        description: The evaluation context is required when evaluating a flagset.\n      tags:\n        - evaluation\n      security:\n        - Access Token: []\n  '/projects/{wsKey}/{projKey}/environments/{envKey}/sdk-keys':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n    get:\n      summary: List SDK keys\n      responses:\n        '200':\n          $ref: '#/components/responses/SDKKeys'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: list-sdk-keys\n      description: Retrieve a list of sdk keys for that particular environment\n      tags:\n        - sdk-keys\n      security:\n        - Access Token: []\n    post:\n      summary: Create SDK key\n      operationId: create-sdk-key\n      responses:\n        '201':\n          $ref: '#/components/responses/SDKKeys'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Create a sdk key for a particular project environment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SDKKey'\n            examples:\n              example-1:\n                value:\n                  enabled: true\n                  expiresAt: 9223372036854776000\n                  name: Secondary SDK key (us-region)\n                  description: This should only be used by servers / clients in the US region.\n                  tags:\n                    - us-region\n        description: SDK Key request body\n      tags:\n        - sdk-keys\n      security:\n        - Access Token: []\n  '/projects/{wsKey}/{projKey}/environments/{envKey}/sdk-keys/{id}':\n    parameters:\n      - $ref: '#/components/parameters/wsKey'\n      - $ref: '#/components/parameters/projKey'\n      - $ref: '#/components/parameters/envKey'\n      - $ref: '#/components/parameters/id'\n    get:\n      summary: List SDK keys\n      responses:\n        '200':\n          $ref: '#/components/responses/SDKKey'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: get-sdk-key\n      description: Retrieve a list of sdk keys for that particular environment\n      tags:\n        - sdk-keys\n      security:\n        - Access Token: []\n    patch:\n      summary: Update SDK Key\n      operationId: update-sdk-key\n      responses:\n        '200':\n          $ref: '#/components/responses/SDKKey'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Update SDK Key\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocument'\n            examples:\n              example-1:\n                value:\n                  - op: replace\n                    path: /description\n                    value: Secondary SDK key (use in us-region only)\n        description: Update sdk key\n      tags:\n        - sdk-keys\n      security:\n        - Access Token: []\n    delete:\n      summary: Delete SDK Key\n      operationId: delete-sdk-key\n      responses:\n        '204':\n          description: No Content\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Delete SDK key\n      tags:\n        - sdk-keys\n      security:\n        - Access Token: []\nservers:\n  - url: 'https://api.flagbase.io'\n    description: Flagbase Cloud\n  - url: 'http://127.0.0.1:5051'\n    description: Localhost\ncomponents:\n  requestBodies:\n    AccessInput:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccessInput'\n      description: Access Key-Secret Pair\n    Workspace:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Workspace'\n      description: Workspace Object\n    AccessPairInput:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccessPairInput'\n      description: Access Key-Secret Pair\n  schemas:\n    PatchDocument:\n      description: A JSONPatch document as defined by RFC 6902\n      title: PatchDocument\n      type: array\n      items:\n        type: object\n        properties:\n          op:\n            type: string\n            description: The operation to be performed\n            enum:\n              - add\n              - remove\n              - replace\n              - move\n              - copy\n              - test\n          path:\n            type: string\n            description: A JSON-Pointer\n          value:\n            description: The value to be used within the operations.\n            anyOf:\n              - type: object\n              - type: string\n                properties: {}\n              - properties: {}\n                type: number\n              - type: boolean\n                properties: {}\n          from:\n            type: string\n            description: A string containing a JSON Pointer value.\n    Workspace:\n      description: A representation of a workspace\n      type: object\n      title: Workspace\n      x-examples: {}\n      properties:\n        key:\n          $ref: '#/components/schemas/ResourceKey'\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n      required:\n        - key\n      x-tags:\n        - workspaces\n    Identity:\n      title: Identity\n      type: object\n      description: An identity (aka user) refers to a flag observer/consumer who requests to evaluate a flag. An identity consists of a set of traits. These traits are used as the context which is used during evaluation.\n      properties:\n        key:\n          type: string\n          description: Unique key representing an identity\n      required:\n        - key\n      x-tags:\n        - identities\n    Access:\n      title: Access\n      type: object\n      description: 'Access is a key/secret pair used to restrict operations on a particular resource via the policy enforcer. You can create and attach access to workspace, project and environment resources.'\n      x-tags:\n        - auth\n      properties:\n        key:\n          type: string\n          description: Generated access key (make sure you save this key)\n        secret:\n          type: string\n          description: Generated secret (make sure you save this secert).\n        type:\n          type: string\n          description: Access key type describes the level of permissions you get for a particular resource (root \u003e user \u003e service).\n          enum:\n            - root\n            - admin\n            - user\n            - service\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n        expiresAt:\n          type: integer\n          description: Unix time stating when this access expires.\n          format: int64\n        name:\n          $ref: '#/components/schemas/ResouceName'\n    AccessInput:\n      title: AccessInput\n      type: object\n      description: Input params for creating or updating access\n      properties:\n        type:\n          type: string\n          enum:\n            - admin\n            - user\n            - service\n          description: Access key type describes the level of permissions you get for a particular resource (root \u003e user \u003e service).\n          default: service\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n        expiresAt:\n          type: integer\n          description: Unix time stating when this access expires.\n          format: int64\n      x-tags:\n        - auth\n    ResourceKey:\n      type: string\n      title: Resource Key\n      pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n      maxLength: 30\n      example: example-key\n      description: A unique key used to identify this resource.\n      minLength: 4\n    ResouceName:\n      type: string\n      title: Resouce Name\n      description: A name used to label resources. Ideally a human-readable version of the resource key.\n      maxLength: 30\n      example: Example Name\n    ResourceDescription:\n      type: string\n      title: Resource Description\n      description: Optional resource description.\n      example: This should be a description.\n    ResourceTags:\n      title: Resource Tags\n      description: 'Optional tags used to identify this resource. '\n      type: array\n      x-examples: {}\n      items:\n        type: string\n        example: example-tag\n    Environment:\n      title: Environment\n      type: object\n      properties:\n        key:\n          $ref: '#/components/schemas/ResourceKey'\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n      required:\n        - key\n      description: 'A project can have multiple environments (e.g. staging, production) which correspond to different targeting states. This means if you modify a flag''s targeting or a segment''s rules in one environment, your changes will be scoped to that particular environment. This allows you to have different targeting rules for flags and segments in each environment.'\n      x-tags:\n        - environments\n    Project:\n      title: Project\n      type: object\n      description: A project is a collection of environments and their respective flags.\n      x-tags:\n        - projects\n      properties:\n        key:\n          $ref: '#/components/schemas/ResourceKey'\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n      required:\n        - key\n    Flag:\n      title: Flag\n      type: object\n      description: 'A flag (aka feature flag, toggle, switch etc) represents a particular point in code which when evaluated determines the state of a feature. Flags hold different variations (i.e. on/off, true/false, A/B/C), which are only revealed upon evaluation.'\n      properties:\n        key:\n          $ref: '#/components/schemas/ResourceKey'\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n      required:\n        - key\n      x-tags:\n        - flags\n    Variation:\n      title: Variation\n      type: object\n      description: 'A variation refers to a feature flag value. Eg. (Bool: True, False), (Multi-variant: A, B, C)'\n      properties:\n        key:\n          $ref: '#/components/schemas/ResourceKey'\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n      required:\n        - key\n      x-tags:\n        - variations\n    AccessPairInput:\n      title: AccessPairInput\n      type: object\n      description: An access secret-key pair.\n      properties:\n        key:\n          type: string\n          description: The access key.\n        secret:\n          type: string\n          description: The access secret.\n      x-tags:\n        - auth\n    Segment:\n      title: Segment\n      type: object\n      description: A segment is used to group users based on their characteristics (i.e. traits). Segments are made up of one or more rules that is used to filter out a portion of your users. Segments provide a method to capture common targeting rules - allowing you to reuse these rules across different flags.\n      properties:\n        key:\n          $ref: '#/components/schemas/ResourceKey'\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n      required:\n        - key\n      x-tags:\n        - segments\n    SegmentRule:\n      title: SegmentRule\n      type: object\n      description: SegmentRule represents a condition used to filter identities for a particular segment.\n      properties:\n        key:\n          $ref: '#/components/schemas/ResourceKey'\n        traitKey:\n          type: string\n        operator:\n          $ref: '#/components/schemas/RuleOperand'\n        traitValue:\n          type: string\n      x-tags:\n        - segment-rules\n    Error:\n      title: Error\n      type: object\n      properties:\n        code:\n          type: string\n        'message ':\n          type: string\n      description: 'Standard error response object, used inside an error response'\n    AccessToken:\n      title: AccessToken\n      description: Access token\n      type: object\n      properties:\n        token:\n          type: string\n        access:\n          $ref: '#/components/schemas/Access'\n      x-tags:\n        - auth\n    Trait:\n      title: Trait\n      type: object\n      description: A trait (aka attribute) represents a particular characteristic of a identity (aka user).\n      x-tags:\n        - traits\n      properties:\n        key:\n          type: string\n        isIdentifier:\n          type: boolean\n      required:\n        - key\n        - isIdentifier\n    Targeting:\n      title: Targeting\n      type: object\n      description: 'Targeting is a spec used to determine a flag''s variation. This spec consists of a set of rules which when evaluated using a user''s context (i.e. traits), determines which variation of a flag that particular user will receive. So essentially you could say targeting rules are conditions mapped to a variation. A flag''s targeting rules are scoped to a particular project environment.'\n      x-tags:\n        - targeting\n      properties:\n        id:\n          type: string\n        enabled:\n          type: boolean\n        fallthroughVariations:\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingVariation'\n    TargetingVariation:\n      title: TargetingVariation\n      type: object\n      description: 'Contains a variation and an associated rollout weight, used for targeting.'\n      x-tags:\n        - targeting\n      properties:\n        variationKey:\n          type: string\n        weight:\n          type: number\n          description: Rollout weight to be applied for this variation (0-100)\n    TargetingRule:\n      title: TargetingRule\n      type: object\n      description: 'A condition which when satisfied outputs the variation during evaluation. '\n      x-tags:\n        - targeting-rules\n        - targeting\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - trait\n            - identity\n            - segment\n        traitKey:\n          type: string\n        traitValue:\n          type: string\n        operator:\n          $ref: '#/components/schemas/RuleOperand'\n        negate:\n          type: boolean\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n        identityKey:\n          $ref: '#/components/schemas/ResourceKey'\n        segKey:\n          $ref: '#/components/schemas/ResourceKey'\n        ruleVariations:\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingVariation'\n    RuleOperand:\n      type: string\n      title: RuleOperand\n      description: Comporator operand used for rules\n      enum:\n        - equal\n        - greater_than\n        - greater_than_or_equal\n        - contains\n        - regex\n      x-tags:\n        - targeting-rules\n        - segment-rules\n    EvaluationContext:\n      title: EvaluationContext\n      type: object\n      description: evaluation context is essentially the data required to evaluate a flag\n      properties:\n        identifier:\n          type: string\n          description: Unique identifier for the user\n        traits:\n          type: object\n          description: User attributes that will be used during evaluation\n      required:\n        - identifier\n        - traits\n      x-tags:\n        - evaluation\n    SDKKey:\n      title: SDKKey\n      type: object\n      description: SDK key\n      x-tags:\n        - sdk-keys\n      properties:\n        enabled:\n          type: boolean\n          description: Whether or not this SDK key is active\n        expiresAt:\n          type: number\n          description: 'Time this key is no longer valid (unix timestamp) '\n        name:\n          $ref: '#/components/schemas/ResouceName'\n        tags:\n          $ref: '#/components/schemas/ResourceTags'\n        description:\n          $ref: '#/components/schemas/ResourceDescription'\n        clientKey:\n          type: string\n          description: Client-side SDK key\n          readOnly: true\n        serverKey:\n          type: string\n          description: Server-side SDK key\n          readOnly: true\n    FlagRaw:\n      title: RawFlag\n      type: object\n      description: Raw flag (i.e. pre-evaluate flag state containing targeting rules and serve variations)\n      properties:\n        flagKey:\n          type: string\n        fallthroughVariations:\n          type: array\n          items:\n            $ref: '#/components/schemas/VariationWeight'\n        rules:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              ruleType:\n                type: string\n              traitKey:\n                type: string\n              traitValue:\n                type: string\n              operator:\n                $ref: '#/components/schemas/RuleOperand'\n              negate:\n                type: boolean\n              ruleVariations:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VariationWeight'\n        useFallthrough:\n          type: boolean\n    VariationWeight:\n      title: VariationWeight\n      type: object\n      description: Weighted variation\n      properties:\n        variationKey:\n          type: string\n          description: 'Variation key (e.g. control, treatment)'\n        weight:\n          type: number\n          description: Rollout weight (0..100)\n          minimum: 0\n          maximum: 100\n          exclusiveMinimum: true\n          exclusiveMaximum: true\n    FlagEvaluated:\n      title: FlagEvaluated\n      type: object\n      properties:\n        flagKey:\n          type: string\n        reason:\n          type: string\n        variationKey:\n          type: string\n      description: Evaluated flag\n  securitySchemes:\n    Access Token:\n      type: http\n      scheme: bearer\n      description: 'Please include a access token in the request headers for protected endpoints. (i.e. \"Authorization\": \"Bearer my-access-token\")'\n  responses:\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Error'\n    Workspace:\n      description: Workspace response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Workspace'\n          examples:\n            example-1:\n              value:\n                data:\n                  type: workspace\n                  id: 8904dc87-067a-448d-9678-5241a0c65103\n                  attributes:\n                    description: This should be a description.\n                    key: testing-workspace\n                    name: Testing Workspace\n                    tags:\n                      - example-tag\n    Workspaces:\n      description: Workspace list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Workspace'\n          examples:\n            example-1:\n              value:\n                data:\n                  - type: workspace\n                    id: bce391e1-c54d-47b6-910e-6450720ac646\n                    attributes:\n                      description: This should be a description.\n                      key: testing-workspace\n                      name: Example Name\n                      tags:\n                        - example-tag\n                  - type: workspace\n                    id: f3c800fc-bc52-4c51-8768-164f3d2863bd\n                    attributes:\n                      description: This should be a description.\n                      key: testing-workspace-1\n                      name: Example Name\n                      tags:\n                        - example-tag\n    Project:\n      description: Project response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Project'\n          examples:\n            example-1:\n              value:\n                data:\n                  type: project\n                  id: 49af9f76-bf1d-4309-8070-a9e1318661e6\n                  attributes:\n                    description: This should be a description.\n                    key: testing-project\n                    name: Example Name\n                    tags:\n                      - some-project-tag\n    Projects:\n      description: Project list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Project'\n          examples:\n            example-1:\n              value:\n                data:\n                  - type: project\n                    id: 49af9f76-bf1d-4309-8070-a9e1318661e6\n                    attributes:\n                      description: This should be a description.\n                      key: testing-project\n                      name: Example Name\n                      tags:\n                        - some-project-tag\n                  - type: project\n                    id: 8872a9cf-7062-4230-80c2-de639395ff16\n                    attributes:\n                      description: This should be a description.\n                      key: testing-project-1\n                      name: Example Name\n                      tags:\n                        - some-project-tag\n    Environment:\n      description: Environment response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Environment'\n          examples:\n            example-1:\n              value:\n                data:\n                  type: environment\n                  id: ed741b53-720a-4d8a-b67c-57bb943ec7a7\n                  attributes:\n                    description: This should be a description.\n                    key: testing-env\n                    name: Example Name\n                    tags:\n                      - example-tag\n    Environments:\n      description: Environment list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Environment'\n          examples:\n            example-1:\n              value:\n                data:\n                  - type: environment\n                    id: ed741b53-720a-4d8a-b67c-57bb943ec7a7\n                    attributes:\n                      description: This should be a description.\n                      key: testing-env\n                      name: Example Name\n                      tags:\n                        - example-tag\n                  - type: environment\n                    id: 69d2bf3a-6e4c-41a4-a288-a901e48bdbc8\n                    attributes:\n                      description: This should be a description.\n                      key: testing-env-1\n                      name: Prod\n                      tags:\n                        - example-tag\n    Flag:\n      description: Flag response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Flag'\n          examples:\n            example-1:\n              value:\n                data:\n                  id: 6a8da406-a57e-40d6-9d25-6d22479d0b11\n                  key: test-flag\n                  name: Example Name\n                  description: This should be a description.\n                  tags:\n                    - example-tag\n    Flags:\n      description: Flag list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Flag'\n          examples:\n            example-1:\n              value:\n                data:\n                  - id: b4a506b7-e911-4ccd-8645-c58f4b35d3c9\n                    key: test-flag\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: f8c33272-8911-4159-bd45-5f4754e85e35\n                    key: test-flag-1\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: a5575918-a07c-431a-9e4e-8a70ce7eda28\n                    key: test-flag-4\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: 1b89b39d-b8e6-4e47-b01c-3895a7740bc9\n                    key: test-flag-2\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: a62469a7-36bb-4a4a-a551-ad758c4624ce\n                    key: test-flag-3\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: 6d1bac9d-adb1-4be0-b0f1-b7515a84fc39\n                    key: test-flag-5\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: c06bbda2-ec5c-4448-ae2b-53861218acdd\n                    key: test-flag-6\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: 2c605f40-b38e-4bca-8035-e6c47d37ac46\n                    key: test-flag-7\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: 1fd2a9fb-9658-420e-bbff-85770d374edf\n                    key: test-flag-8\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: 3b0dc296-a45f-45ad-84fa-380fa725081d\n                    key: test-flag-9\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n                  - id: 6a8da406-a57e-40d6-9d25-6d22479d0b11\n                    key: test-flag-10\n                    name: Example Name\n                    description: This should be a description.\n                    tags:\n                      - example-tag\n    AccessToken:\n      description: Access token response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/AccessToken'\n          examples:\n            example-1:\n              value:\n                data:\n                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBY2Nlc3MiOiJleUpwWkNJNkltTTFOamcwWVdKaExUUTJPVFl0TkRRM1l5MDVZakF3TFRBelkyWTJNMkU1TmpnMlppSXNJbXRsZVNJNkluSnZiM1FpTENKelpXTnlaWFFpT2lJa01tRWtNVEFrUWpNMmREWm1NMFV3VEVVNVJrOUljMnRVTWtGcFpTOU1iR3ByZFM0NFpqbEtlR3BYTTJveVpHNVVWM0ppTjJscGRHOTZVVk1pTENKMGVYQmxJam9pY205dmRDSXNJbVY0Y0dseVpYTkJkQ0k2T1RJeU16TTNNakF6TmpnMU5EYzNOVGd3TjMwPSIsImV4cCI6MTYyNTA5MjQwN30.2wPy7mh7Q2ml9X3K6Mq8rEwVGyUzr7Qjk4D-Relax0U\n                  access:\n                    id: c5684aba-4696-447c-9b00-03cf63a9686f\n                    key: root\n                    secret: '**************'\n                    type: root\n                    expiresAt: 9223372036854776000\n    Variation:\n      description: Variation response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Variation'\n          examples:\n            example-1:\n              value:\n                data:\n                  type: variation\n                  id: 62a70520-1959-4895-9d0f-6a92af8cf264\n                  attributes:\n                    description: This should be a description.\n                    key: test-variation\n                    name: Example Name\n                    tags:\n                      - example-tag\n    Variations:\n      description: Variation list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Variation'\n          examples:\n            example-1:\n              value:\n                data:\n                  - type: variation\n                    id: 62a70520-1959-4895-9d0f-6a92af8cf264\n                    attributes:\n                      description: This should be a description.\n                      key: test-variation\n                      name: Example Name\n                      tags:\n                        - example-tag\n                  - type: variation\n                    id: ecd1740d-5cc8-4320-aa40-8c0b0660f86c\n                    attributes:\n                      description: This should be a description.\n                      key: test-variation-1\n                      name: Example Name\n                      tags:\n                        - example-tag\n                  - type: variation\n                    id: 541bcdb1-6209-45cf-87ff-be60c15ec809\n                    attributes:\n                      description: This should be a description.\n                      key: test-variation-2\n                      name: Example Name\n                      tags:\n                        - example-tag\n    Identities:\n      description: Identity list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Identity'\n    Indentity:\n      description: Identity response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Identity'\n    Targeting:\n      description: Targeting response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Targeting'\n          examples:\n            example-1:\n              value:\n                data:\n                  type: targeting\n                  id: b05d0b54-b036-455b-9f77-64b215eb5b85\n                  attributes:\n                    enabled: true\n                    fallthroughVariations:\n                      - variationKey: control\n                        weight: 50\n                      - variationKey: treatment\n                        weight: 50\n    TargetingRule:\n      description: Targeting rule response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/TargetingRule'\n          examples:\n            example-1:\n              value:\n                data:\n                  id: 6cbee271-4bbd-4071-9085-f034ef73198e\n                  key: test-targeting-rule\n                  name: Example Name\n                  description: This should be a description.\n                  tags:\n                    - example-tag\n                  type: trait\n                  traitKey: some-trait-key\n                  traitValue: some-trait-value\n                  operator: equal\n                  ruleVariations:\n                    - variationKey: test-variation\n                      weight: 50\n                    - variationKey: test-variation-1\n                      weight: 50\n    TargetingRules:\n      description: Targeting rule list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/TargetingRule'\n          examples:\n            example-1:\n              value:\n                data:\n                  - type: targeting_rule\n                    id: 6cbee271-4bbd-4071-9085-f034ef73198e\n                    attributes:\n                      description: This should be a description.\n                      key: test-targeting-rule\n                      name: Example Name\n                      operator: equal\n                      ruleVariations:\n                        - variationKey: test-variation\n                          weight: 50\n                        - variationKey: test-variation-1\n                          weight: 50\n                      segmentKey: test-segment-1\n                      tags:\n                        - example-tag\n                      traitKey: some-trait-key\n                      traitValue: some-trait-value\n                      type: segment\n                  - type: targeting_rule\n                    id: ce95a1eb-d179-4434-8857-b9208b307318\n                    attributes:\n                      description: This should be a description.\n                      key: test-targeting-rule-1\n                      name: Example Name\n                      operator: regex\n                      ruleVariations:\n                        - variationKey: test-variation\n                          weight: 50\n                        - variationKey: test-variation-1\n                          weight: 50\n                      tags:\n                        - example-tag\n                      traitKey: some-trait-key\n                      traitValue: '((((((([[:graph:]]*.)+.)+.)+.)+.)+.)+.)+'\n                      type: trait\n    Traits:\n      description: Trait list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Trait'\n    Trait:\n      description: Trait response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: object\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Trait'\n    Segment:\n      description: Segment response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/Segment'\n          examples:\n            example-1:\n              value:\n                data:\n                  type: segment\n                  id: 87871700-ab40-40c5-b8dc-1d4dcac38ca6\n                  attributes:\n                    description: This should describe a segment.\n                    key: test-segment-1\n                    name: Example Name\n                    tags:\n                      - example-tag\n    Segments:\n      description: Segment list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/Segment'\n          examples:\n            example-1:\n              value:\n                data:\n                  - type: segment\n                    id: 1aee39f0-f753-482a-98d6-dbac6df00275\n                    attributes:\n                      description: This should be a description.\n                      key: test-segment\n                      name: Example Name\n                      tags:\n                        - example-tag\n                  - type: segment\n                    id: 87871700-ab40-40c5-b8dc-1d4dcac38ca6\n                    attributes:\n                      description: This should be a description.\n                      key: test-segment-1\n                      name: Example Name\n                      tags:\n                        - example-tag\n    SegmentRule:\n      description: Segment rule response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/SegmentRule'\n          examples:\n            example-1:\n              value:\n                data:\n                  id: 45326ac0-ac8f-46f2-9af4-f881407848f4\n                  type: segment_rule\n                  attributes:\n                    key: test-segment-rule\n                    traitKey: some-random-trait-key\n                    traitValue: some-trait-value\n                    operator: equal\n                    negate: false\n    SegmentRules:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/SegmentRule'\n          examples:\n            example-1:\n              value:\n                data:\n                  - id: 45326ac0-ac8f-46f2-9af4-f881407848f4\n                    type: segment_rule\n                    attributes:\n                      key: postcode-rule-entry\n                      traitKey: postcode\n                      traitValue: '20322'\n                      operator: greater_than\n                      negate: false\n                  - id: 45326ac0-ac8f-46f2-9af4-f881407848f4\n                    type: segment_rule\n                    attributes:\n                      key: postcode-rule-exit\n                      traitKey: postcode\n                      traitValue: '20400'\n                      operator: greater_than_or_equal\n                      negate: true\n                  - id: 45326ac0-ac8f-46f2-9af4-f881407848f4\n                    type: segment_rule\n                    attributes:\n                      key: some-other-segment-rule\n                      traitKey: some-random-trait-key\n                      traitValue: some-trait-value\n                      operator: equal\n                      negate: false\n    FlagsetEvaluated:\n      description: Evaluated flagset response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/FlagEvaluated'\n          examples:\n            example-1:\n              value:\n                data:\n                  test-flag:\n                    flagKey: test-flag\n                    variationKey: test-variation\n                    reason: FALLTHROUGH\n                  test-flag-1:\n                    flagKey: test-flag-1\n                    variationKey: test-variation-2\n                    reason: FALLTHROUGH\n                  test-flag-10:\n                    flagKey: test-flag-10\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-2:\n                    flagKey: test-flag-2\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-3:\n                    flagKey: test-flag-3\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-4:\n                    flagKey: test-flag-4\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-5:\n                    flagKey: test-flag-5\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-6:\n                    flagKey: test-flag-6\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-7:\n                    flagKey: test-flag-7\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-8:\n                    flagKey: test-flag-8\n                    variationKey: control\n                    reason: FALLTHROUGH\n                  test-flag-9:\n                    flagKey: test-flag-9\n                    variationKey: control\n                    reason: FALLTHROUGH\n    FlagsetRaw:\n      description: Pre-evaluated flagset response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/FlagRaw'\n          examples:\n            example-1:\n              value:\n                data:\n                  - type: raw_flag\n                    id: 8ab71914-9f10-4427-b257-6b30c7ad2846\n                    attributes:\n                      flagKey: test-flag\n                      useFallthrough: false\n                      fallthroughVariations:\n                        - variationKey: test-variation-2\n                          weight: 33\n                        - variationKey: test-variation\n                          weight: 33\n                        - variationKey: test-variation-1\n                          weight: 33\n                      rules:\n                        - ruleType: segment\n                          traitKey: some-trait-key\n                          traitValue: some-trait-value\n                          operator: equal\n                          negate: false\n                          ruleVariations:\n                            - variationKey: test-variation\n                              weight: 50\n                            - variationKey: test-variation-1\n                              weight: 50\n                        - ruleType: segment\n                          traitKey: some-trait-key\n                          traitValue: some-trait-value\n                          operator: equal\n                          negate: false\n                          ruleVariations:\n                            - variationKey: test-variation\n                              weight: 50\n                            - variationKey: test-variation-1\n                              weight: 50\n                        - ruleType: trait\n                          traitKey: some-trait-key\n                          traitValue: '((((((([[:graph:]]*.)+.)+.)+.)+.)+.)+.)+'\n                          operator: regex\n                          negate: false\n                          ruleVariations:\n                            - variationKey: test-variation\n                              weight: 50\n                            - variationKey: test-variation-1\n                              weight: 50\n                  - type: raw_flag\n                    id: 323dsdf3-9f10-4427-b257-6b30c7a23sd46\n                    attributes:\n                      flagKey: test-flag-1\n                      useFallthrough: false\n                      fallthroughVariations:\n                        - variationKey: test-variation\n                          weight: 50\n                        - variationKey: test-variation-1\n                          weight: 50\n                      rules:\n                        - ruleType: trait\n                          traitKey: some-trait-key\n                          traitValue: some-trait-value\n                          operator: equal\n                          negate: false\n                          ruleVariations:\n                            - variationKey: test-variation-1\n                              weight: 50\n                            - variationKey: test-variation\n                              weight: 50\n                  - type: raw_flag\n                    id: 13b71914-9f10-4427-b257-6b30c7ad2432\n                    attributes:\n                      flagKey: test-flag-10\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 923sdf914-9f10-4427-b257-6b30c7ad2699\n                    attributes:\n                      flagKey: test-flag-2\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 3471914-9f10-4427-b257-6b30c7ae46\n                    attributes:\n                      flagKey: test-flag-3\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 854b71914-9f10-4427-b257-6b30cloud6999\n                    attributes:\n                      flagKey: test-flag-4\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 8541914-9f10-4427-b257-4d30c7ad2816\n                    attributes:\n                      flagKey: test-flag-5\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 8ab71914-9f10-4427-b257-6b30c7ad2846\n                    attributes:\n                      flagKey: test-flag-6\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 35df71514-9f10-4427-b257-6b30c7ad2842\n                    attributes:\n                      flagKey: test-flag-7\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 2as34dfd-9f10-4427-b257-6b30c7a23446\n                    attributes:\n                      flagKey: test-flag-8\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n                  - type: raw_flag\n                    id: 23fsd2f23-9f10-4427-b257-43df07ad2842\n                    attributes:\n                      flagKey: test-flag-9\n                      useFallthrough: true\n                      fallthroughVariations:\n                        - variationKey: control\n                          weight: 100\n    SDKKey:\n      description: SDK Key response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                  attributes:\n                    $ref: '#/components/schemas/SDKKey'\n          examples:\n            example-1:\n              value:\n                data:\n                  id: dcb46332-ee5e-453a-8898-28218a17e92d\n                  type: sdk_key\n                  attributes:\n                    enabled: true\n                    clientKey: sdk-client_a0a016f0-e313-413f-8994-a87c9e455026\n                    serverKey: sdk-server_e7349b68-0b8d-42e2-b56d-51a75013fef4\n                    expiresAt: 9223372036854776000\n                    name: Prod SDK Key\n                    description: Generated SDK for the production environment.\n                    tags:\n                      - generated\n    SDKKeys:\n      description: SDK Key list response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                    attributes:\n                      $ref: '#/components/schemas/SDKKey'\n          examples:\n            example-1:\n              value:\n                data:\n                  - id: dcb46332-ee5e-453a-8898-28218a17e92d\n                    type: sdk_key\n                    attributes:\n                      enabled: true\n                      clientKey: sdk-client_a0a016f0-e313-413f-8994-a87c9e455026\n                      serverKey: sdk-server_e7349b68-0b8d-42e2-b56d-51a75013fef4\n                      expiresAt: 9223372036854776000\n                      name: Prod SDK Key\n                      description: Generated SDK for the production environment.\n                      tags:\n                        - generated\n                  - id: dcb46332-ee5e-453a-8898-28218a17e92d\n                    type: sdk_key\n                    attributes:\n                      enabled: true\n                      clientKey: sdk-client_a0a016f0-e313-413f-8994-a87c9e455026\n                      serverKey: sdk-server_e7349b68-0b8d-42e2-b56d-51a75013fef4\n                      expiresAt: 9223372036854776000\n                      name: Prod SDK Key (secondary)\n                      description: Secondary SDK for the production environment.\n                      tags:\n                        - generated\n  examples: {}\n  parameters:\n    wsKey:\n      name: wsKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        minLength: 4\n        maxLength: 30\n        example: my-workspace\n      description: The workspace key\n    projKey:\n      name: projKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        example: my-project\n        minLength: 4\n        maxLength: 30\n      description: The project key\n    envKey:\n      name: envKey\n      in: path\n      required: true\n      schema:\n        type: string\n        example: staging\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        minLength: 4\n        maxLength: 30\n      description: The environment key\n    flagKey:\n      name: flagKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        example: some-flag\n        minLength: 4\n        maxLength: 30\n      description: The flag key\n    variationKey:\n      name: variationKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        minLength: 4\n        maxLength: 30\n        example: control\n      description: The variation key\n    identityKey:\n      name: identityKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        minLength: 4\n        maxLength: 30\n      description: The identity key\n    id:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n      description: Resource identifier\n    ruleKey:\n      name: ruleKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        minLength: 4\n        maxLength: 30\n        example: some-rule-key\n      description: The rule key\n    segKey:\n      name: segKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        minLength: 4\n        maxLength: 30\n        example: some-segment-key\n      description: The segment key\n    traitKey:\n      name: traitKey\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'\n        minLength: 3\n        maxLength: 30\n      description: The trait key\nsecurity:\n  - Access Token: []\n"
		}
	},
	"Error": "make ir: anonymous type name conflict: \"Project\""
}