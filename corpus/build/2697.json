{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/surfstudio/SurfGen"
		},
		"file": {
			"name": "api.yaml",
			"path": "Tests/PipelinesTests/CommonTestSpecs/common/resources/api.yaml",
			"content": "openapi: 3.0.2\ninfo:\n  title: \"API\"\n  version: \"1.0.0\"\n  contact:\n    name: Кравченков Александр\n    email: kravchenkov@surfstudio.ru\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT \n\npaths:\n  /resources/captcha:\n    get:\n      summary: Возвращает капчу для ввода. Либо указывает, что капча не нужна. Эдакий антифрод.\n      parameters:\n        - name: type\n          required: true\n          in: query\n          schema:\n            $ref: \"models.yaml#/components/schemas/RequestMetaType\"\n      responses:\n        \"200\":\n          description: Успех\n          content:\n            application/json:\n              schema:\n                $ref: \"models.yaml#/components/schemas/Captcha\"\n        default:\n          $ref: \"../errors.yaml#/components/responses/ApiErrorResponse\"\n          \n  /resources/offer/{id}:\n    get:\n      security:\n        - bearerAuth: []\n      summary: Возвращает текст оферты.\n      parameters:\n        - name: id\n          required: false\n          in: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Успех\n          content:\n            application/json:\n              schema:\n                $ref: \"../models.yaml#/components/schemas/InfoMessage\"\n        default:\n          $ref: \"../errors.yaml#/components/responses/ApiErrorResponse\"\n\n  /resources/getAttachment:\n    get:\n      summary: Возвращает attachment по id\n      parameters:\n        - name: id\n          required: false\n          in: query\n          schema:\n            type: string\n        - name: type\n          required: true\n          in: query\n          schema:\n            $ref: \"models.yaml#/components/schemas/AttachType\"\n      responses:\n        \"200\":\n          description: Успех\n          content:\n            application/json:\n              schema:\n                $ref: \"models.yaml#/components/schemas/Attachment\"\n        default:\n          $ref: \"../errors.yaml#/components/responses/ApiErrorResponse\"\n\n#  /resources/config: -- cant parse it. and we don;t support additionalProperties: {}\n#    get:\n#      summary: Метод конфига\n#      description: \u003e\n#        Здесь будет возвращаться конфиг для приложения.\n#        Представляет из себя словарь со вложенными словарями:\n#        {\"common\": \"error\": {\"noNetwork\": \"text\"}}}\n#        Полную конфигурацию можно посмотреть $ссылка\n#      responses:\n#        \"200\":\n#          description: Успех\n#          content:\n#            application/json:\n#              schema:\n#                type: object\n#                additionalProperties: {}\n#        default:\n#          $ref: \"../errors.yaml#/components/responses/ApiErrorResponse\"\n\n  /resources/infoBanner:\n    get:\n      summary: Возвращает информационный баннер или пустоту \n      responses:\n        \"200\":\n          description: Успех\n          content:\n            application/json:\n              schema:\n                $ref: \"models.yaml#/components/schemas/InfoBanner\"\n        default:\n          $ref: \"../errors.yaml#/components/responses/ApiErrorResponse\"\n\n  /resources/accept:\n    get:\n      security:\n        - bearerAuth: []\n      summary: Возвращает текст и ссылки акцепта\n      responses:\n        \"200\":\n          description: Успех\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"models.yaml#/components/schemas/AcceptRequestItem\" \n        default:\n          $ref: \"../errors.yaml#/components/responses/ApiErrorResponse\"\n    post:\n      security:\n        - bearerAuth: []\n      summary: Принятие акцепта \n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"models.yaml#/components/schemas/AcceptRequest\" \n      responses:\n        \"200\":\n          description: Успех\n          content:\n            application/json:\n              schema:\n                $ref: \"../models.yaml#/components/schemas/InfoMessage\"\n#                oneOf:\n#                  - $ref: \"../models.yaml#/components/schemas/InfoMessage\"\n#                  - $ref: \"../models.yaml#/components/schemas/OtpRequired\"\n        default:\n          $ref: \"../errors.yaml#/components/responses/ApiErrorResponse\"\n\n\n"
		}
	},
	"Error": "parse: paths: /resources/accept: get: : responses: default: resolve \"../errors.yaml#/components/responses/ApiErrorResponse\" reference: invalid response reference: \"../errors.yaml#/components/responses/ApiErrorResponse\""
}