{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackus/ftgogo"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "restaurant/internal/handlers/openapi.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: Restaurant Service API\n  description: The restaurant-service API is part of the FTGOGO demonstration application\n  contact:\n    name: FTGOGO Issues\n    url: https://github.com/stackus/ftgogo/issues\nservers:\n  - url: https://{host}:{port}/api\n    variables:\n      host:\n        default: localhost\n      port:\n        default: \"8006\"\npaths:\n  /restaurants:\n    post:\n      summary: Create a new restaurant for delivery\n      operationId: createRestaurant\n      requestBody:\n        description: create restaurant request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ name, address, menu ]\n              properties:\n                name:\n                  type: string\n                address:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n                menu:\n                  type: object\n                  required: [ menu_items ]\n                  properties:\n                    menu_items:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/MenuItem'\n      responses:\n        '201':\n          $ref: '#/components/responses/RestaurantIDResponse'\n        default:\n          $ref: '../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse'\n  /restaurants/{restaurantID}:\n    get:\n      summary: Get information for an restaurant by ID\n      operationId: getRestaurant\n      parameters:\n        - $ref: '#/components/parameters/RestaurantID'\n      responses:\n        '200':\n          $ref: '#/components/responses/RestaurantResponse'\n        default:\n          $ref: '../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse'\n\ncomponents:\n  schemas:\n    Restaurant:\n      type: object\n      required: [ id, name, address, menu ]\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        address:\n          $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n        menu:\n          type: object\n          required: [ menu_items ]\n          properties:\n            menu_items:\n              type: array\n              items:\n                $ref: '#/components/schemas/MenuItem'\n    MenuItem:\n      type: object\n      required: [ id, name, price ]\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        price:\n          type: integer\n  parameters:\n    RestaurantID:\n      in: path\n      name: restaurantID\n      description: restaurant id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n  responses:\n    RestaurantIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    RestaurantResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Restaurant'\n"
		}
	},
	"Error": "parse: paths: /restaurants: post: createRestaurant: requestBody: content: application/json: parse schema: parse schema: address: parse schema: reference \"../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address\": resolve reference \"../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address\": invalid schema reference \"../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address\""
}