{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hajkmap/Hajk"
		},
		"file": {
			"name": "api.yml",
			"path": "new-backend/server/common/api.yml",
			"content": "openapi: 3.0.3\ninfo:\n  title: hajk-backend\n  description: Hajk backend\n  version: 1.1.0\nservers:\n  - url: /api/v1\n  - url: /api/v2\ntags:\n  - name: Client-accessible\n    description: Resources necessary to load a working map in client\n  - name: Admin - Maps and layers\n    description: Preform CRUD operations on layers and maps configurations\n  - name: Admin - Informative/DocumentHandler\n    description: Resources for working with the \"Documents API\", used mainly by the Informative plugin\n  - name: Admin - ActiveDirectory\n    description: Resources for working with ActiveDirectory\n  - name: Sokigo FB Proxy\n    description: Proxy specified in working with Sokigo's FB API\n  - name: FME-server Proxy\n    description: Proxy for tunneling authenticated requests against FME server\n  - name: Specification\n    description: The OpenAPI specification\npaths:\n  /informative/load/{name}:\n    get:\n      tags:\n        - Client-accessible\n      parameters:\n        - name: name\n          in: path\n          description: Name of the document to be fetched\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Return the JSON file\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentBody\"\n        5XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /informative/create:\n    post:\n      deprecated: true\n      tags:\n        - Admin - Informative/DocumentHandler\n      responses:\n        200:\n          description: Create a document connected to a specified map (OBSOLETE)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InformativeDocumentCreateBody\"\n        5XX:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      tags:\n        - Admin - Informative/DocumentHandler\n      responses:\n        200:\n          description: Create a document connected to a specified map\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InformativeDocumentCreateBody\"\n        5XX:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /informative/list:\n    get:\n      tags:\n        - Admin - Informative/DocumentHandler\n      responses:\n        200:\n          description: Return all available documents\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentsList\"\n        5XX:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /informative/list/{name}:\n    get:\n      tags:\n        - Admin - Informative/DocumentHandler\n      parameters:\n        - name: name\n          in: path\n          description: Name of the map for which connected documents will be returned\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Return available documents for the specified map\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentsList\"\n        5XX:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /informative/save/{name}:\n    post:\n      deprecated: true\n      tags:\n        - Admin - Informative/DocumentHandler\n      parameters:\n        - name: name\n          in: path\n          description: Document to be saved\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Return the saved document's body\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentsList\"\n        5XX:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      tags:\n        - Admin - Informative/DocumentHandler\n      parameters:\n        - name: name\n          in: path\n          description: Document to be saved\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Return the saved document's body\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentsList\"\n        5XX:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /informative/delete/{name}:\n    delete:\n      tags:\n        - Admin - Informative/DocumentHandler\n      parameters:\n        - name: name\n          in: path\n          description: Document to deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Delete the specified document\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentsList\"\n        5XX:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /config/layers:\n    get:\n      tags:\n        - Client-accessible\n      description: List available layers\n      parameters:\n        - in: header\n          name: X-Control-Header\n          description: User name that will be supplied to AD\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: All layers were fetched successfully\n          content: {}\n  /mapconfig/list:\n    get:\n      tags:\n        - Admin - Maps and layers\n      description: List available map configurations\n      responses:\n        200:\n          description: Available maps were fetched successfully\n          content: {}\n  /mapconfig/listimage:\n    get:\n      tags:\n        - Admin - Maps and layers\n      description: List available images in the upload folder\n      responses:\n        200:\n          description: Available images were fetched successfully\n          content: {}\n  /mapconfig/{map}:\n    get:\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: map\n          in: path\n          description: Name of the map to fetch\n          required: true\n          schema:\n            type: string\n        - in: header\n          name: X-Control-Header\n          description: User name that will be supplied to AD\n          schema:\n            type: string\n          required: false\n      description: Fetch contents of a map configuration\n      responses:\n        200:\n          description: Success\n          content: {}\n  /config/{map}:\n    get:\n      tags:\n        - Client-accessible\n      parameters:\n        - name: map\n          in: path\n          description: Name of the map to fetch\n          required: true\n          schema:\n            type: string\n        - in: header\n          name: X-Control-Header\n          description: User name that will be supplied to AD\n          schema:\n            type: string\n          required: false\n      description: Fetch contents of a map configuration\n      responses:\n        200:\n          description: Success\n          content: {}\n  /mapconfig/export/{map}/{format}:\n    get:\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: map\n          in: path\n          description: Name of the map to fetch\n          required: true\n          schema:\n            type: string\n        - name: format\n          in: path\n          description: Name of the map to fetch\n          required: true\n          schema:\n            type: string\n      description: Exports the map's layers in a human-readable format\n      responses:\n        200:\n          description: Success\n          content: {}\n  /mapconfig/create/{name}:\n    get:\n      deprecated: true\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: name\n          in: path\n          description: File name of the new map config\n          required: true\n          schema:\n            type: string\n      description: Create a new map configuration\n      responses:\n        200:\n          description: Success\n          content: {}\n    put:\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: name\n          in: path\n          description: File name of the new map config\n          required: true\n          schema:\n            type: string\n      description: Create a new map configuration\n      responses:\n        200:\n          description: Success\n          content: {}\n  /mapconfig/delete/{name}:\n    get:\n      deprecated: true\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: name\n          in: path\n          description: Name of the map to be deleted\n          required: true\n          schema:\n            type: string\n      description: Delete an existing map configuration\n      responses:\n        200:\n          description: Success\n          content: {}\n    delete:\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: name\n          in: path\n          description: Name of the map to be deleted\n          required: true\n          schema:\n            type: string\n      description: Delete an existing map configuration\n      responses:\n        200:\n          description: Success\n          content: {}\n  /mapconfig/duplicate/{nameFrom}/{nameTo}:\n    put:\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: nameFrom\n          in: path\n          description: Name of the map to be duplicated\n          required: true\n          schema:\n            type: string\n        - name: nameTo\n          in: path\n          description: Name of the new map (the duplicate)\n          required: true\n          schema:\n            type: string\n      description: Create a new map configuration by duplicating an existing one\n      responses:\n        200:\n          description: Success\n          content: {}\n  /config/userspecificmaps:\n    get:\n      tags:\n        - Client-accessible\n      description: Get a list of maps that will be available in the MapSwitcher dropdown\n      parameters:\n        - in: header\n          name: X-Control-Header\n          description: User name that will be supplied to AD\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: Success\n          content: {}\n  /ad/availableadgroups:\n    get:\n      tags:\n        - Admin - ActiveDirectory\n      description: Get a list of all available AD groups to make it easier for admins to set map and layer permissions\n      responses:\n        200:\n          description: Success\n          content: {}\n  /ad/findcommonadgroupsforusers:\n    get:\n      tags:\n        - Admin - ActiveDirectory\n      description: Find out which AD group membership is shared between specified users\n      parameters:\n        - in: query\n          name: users\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          allowReserved: true\n      responses:\n        200:\n          description: Success\n          content: {}\n  /ad/users:\n    get:\n      tags:\n        - Admin - ActiveDirectory\n      description: Get the current content of local AD Users store\n      responses:\n        200:\n          description: Success\n          content: {}\n  /ad/groups:\n    get:\n      tags:\n        - Admin - ActiveDirectory\n      description: Get the current content of local AD Groups store\n      responses:\n        200:\n          description: Success\n          content: {}\n  /ad/groupsPerUser:\n    get:\n      tags:\n        - Admin - ActiveDirectory\n      description: Get the current content of local AD Groups Per User store\n      responses:\n        200:\n          description: Success\n          content: {}\n  /ad/flushStores:\n    put:\n      tags:\n        - Admin - ActiveDirectory\n      description: Flush the contents of all local AD stores (removes the cached objects)\n      responses:\n        200:\n          description: Success\n          content: {}\n  /fbproxy/{query}:\n    get:\n      tags:\n        - Sokigo FB Proxy\n      parameters:\n        - name: query\n          in: path\n          description: The query to be proxied\n          required: true\n          schema:\n            type: string\n      description: Proxy the specified query to Sokigo's FB API\n      responses:\n        200:\n          description: Result will vary depending on response from the API\n          content: {}\n  /fmeproxy/{query}:\n    get:\n      tags:\n        - FME-server Proxy\n      parameters:\n        - name: query\n          in: path\n          description: Path corresponding to an endpoint on the FME-server REST API.\n          required: true\n          schema:\n            type: string\n      description: Proxy the specified query to FME-server REST API. For information on available endpoints, checkout the [FME-server API documentation](https://docs.safe.com/fme/html/FME_REST/apidoc/v3/#). The proxy will forward all HTTP-methods, not only GET.\n      responses:\n        200:\n          description: Result will vary depending on response from the API.\n          content: {}\n  /spec:\n    get:\n      tags:\n        - Specification\n      responses:\n        200:\n          description: Return the API specification\n          content: {}\n  /settings/layermenu:\n    put:\n      tags:\n        - Admin - Maps and layers\n      requestBody:\n        description: Settings for given map's LayerSwitcher component\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LayerSwitcherBody\"\n        required: true\n      parameters:\n        - name: mapFile\n          in: query\n          description: Name of the map who's LayerSwitcher config should be written\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: All good\n          content: {}\n  /settings/mapsettings:\n    put:\n      tags:\n        - Admin - Maps and layers\n      requestBody:\n        description: Settings for given map's LayerSwitcher component\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LayerSwitcherBody\"\n        required: true\n      parameters:\n        - name: mapFile\n          in: query\n          description: Name of the map who's LayerSwitcher config should be written\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: All good\n          content: {}\n  /settings/toolsettings:\n    put:\n      tags:\n        - Admin - Maps and layers\n      requestBody:\n        description: Settings for given map's LayerSwitcher component\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LayerSwitcherBody\"\n        required: true\n      parameters:\n        - name: mapFile\n          in: query\n          description: Name of the map who's LayerSwitcher config should be written\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: All good\n          content: {}\n  /settings/{layerType}:\n    post:\n      tags:\n        - Admin - Maps and layers\n      description: Add a new layer of specified type\n      requestBody:\n        description: Content of the layer to be added\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExampleBody\"\n        required: true\n      parameters:\n        - name: layerType\n          in: path\n          description: The type of layer that will be added\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: All good\n          content: {}\n    put:\n      tags:\n        - Admin - Maps and layers\n      description: Replace a specific layer with supplied content\n      requestBody:\n        description: Layer to be added or updated\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExampleBody\"\n        required: true\n      parameters:\n        - name: layerType\n          in: path\n          description: The type of layer that will be updated\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: All good\n          content: {}\n  /settings/{type}/{layerId}:\n    delete:\n      tags:\n        - Admin - Maps and layers\n      parameters:\n        - name: type\n          in: path\n          description: The kind of layer to delete\n          required: true\n          schema:\n            type: string\n        - name: layerId\n          in: path\n          description: The ID of layer to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Layer deleted successfully\n          content: {}\ncomponents:\n  schemas:\n    Example:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        name:\n          type: string\n          example: example 3\n    Error:\n      type: object\n      properties:\n        errno:\n          type: integer\n          example: -2\n        code:\n          type: string\n          example: ENOENT\n    DocumentBody:\n      type: object\n      properties:\n        chapters:\n          type: array\n          items:\n            type: object\n            properties:\n              header:\n                type: string\n              html:\n                type: string\n              expanded:\n                type: boolean\n              mapSettings:\n                type: object\n              chapters:\n                type: array\n                items:\n                  type: object\n    DocumentsList:\n      type: array\n      items:\n        type: string\n      example: [\"doc_1\", \"doc_2\", \"doc_3\"]\n    InformativeDocumentCreateBody:\n      type: object\n      properties:\n        documentName:\n          type: string\n        documentMap:\n          type: string\n    ExampleBody:\n      title: example\n      # required:\n      #   - name\n      type: object\n      properties:\n        name:\n          type: string\n          example: no_stress\n    LayerSwitcherBody:\n      title: LayerSwitcher body\n"
		}
	},
	"Error": "make ir: path \"/informative/load/{name}\": get: responses: parse response status code: strconv.Atoi: parsing \"5XX\": invalid syntax"
}