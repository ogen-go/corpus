{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cube-js/cube.js"
		},
		"file": {
			"name": "openspec.yml",
			"path": "packages/cubejs-api-gateway/openspec.yml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"Cube.js Swagger Schema\"\n  version: \"1.0.0\"\n  title: \"Cube.js\"\npaths:\n  \"/v1/meta\":\n    get:\n      summary: \"Load Metadata\"\n      description: \"\"\n      operationId: \"metaV1\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1MetaResponse\"\n        \"4XX\":\n          description: \"Request could not be completed\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1Error\"\n        \"5XX\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1Error\"\n  \"/v1/load\":\n    post:\n      summary: \"Load data via Cube JSON Query\"\n      operationId: \"loadV1\"\n      requestBody:\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/V1LoadRequest'\n      responses:\n        \"200\":\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1LoadResponse\"\n        \"4XX\":\n          description: \"Request could not be completed\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1Error\"\n        \"5XX\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1Error\"\nsecurity:\n  - bearerAuth: []\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    V1CubeMetaSegment:\n      type: \"object\"\n      required:\n        - name\n        - title\n        - shortTitle\n      properties:\n        name:\n          type: \"string\"\n        title:\n          type: \"string\"\n        shortTitle:\n          type: \"string\"\n    V1CubeMetaDimension:\n      type: \"object\"\n      required:\n        - name\n        - type\n      properties:\n        name:\n          type: \"string\"\n        type:\n          type: \"string\"\n    V1CubeMetaMeasure:\n      type: \"object\"\n      required:\n        - name\n        - type\n      properties:\n        name:\n          type: \"string\"\n        title:\n          type: \"string\"\n        type:\n          type: \"string\"\n        aggType:\n          type: \"string\"\n    V1CubeMeta:\n      type: \"object\"\n      required:\n        - name\n        - measures\n        - dimensions\n        - segments\n      properties:\n        name:\n          type: \"string\"\n        title:\n          type: \"string\"\n        measures:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1CubeMetaMeasure\"\n        dimensions:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1CubeMetaDimension\"\n        segments:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1CubeMetaSegment\"\n    V1MetaResponse:\n      type: \"object\"\n      properties:\n        cubes:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1CubeMeta\"\n    V1LoadResultAnnotation:\n      type: \"object\"\n      required:\n        - measures\n        - dimensions\n        - segments\n        - timeDimensions\n      properties:\n        measures:\n          type: \"object\"\n        dimensions:\n          type: \"object\"\n        segments:\n          type: \"object\"\n        timeDimensions:\n          type: \"object\"\n    V1LoadResultData:\n      type: \"object\"\n    V1LoadResult:\n      type: \"object\"\n      required:\n        - annotation\n        - data\n      properties:\n        dataSource:\n          type: \"string\"\n        annotation:\n          $ref: \"#/components/schemas/V1LoadResultAnnotation\"\n        data:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1LoadResultData\"\n        refreshKeyValues:\n          type: \"array\"\n          items:\n            type: \"object\"\n    V1Error:\n      type: \"object\"\n      required:\n        - \"error\"\n      properties:\n        error:\n          type: \"string\"\n    V1LoadResponse:\n      type: \"object\"\n      required:\n        - results\n      properties:\n        pivotQuery:\n          type: \"object\"\n        slowQuery:\n          type: \"boolean\"\n        queryType:\n          type: \"string\"\n        results:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1LoadResult\"\n    V1LoadRequestQueryFilterLogicalAnd:\n      type: \"object\"\n      properties:\n        and:\n          type: \"array\"\n          items:\n            type: \"object\"\n    V1LoadRequestQueryFilterLogicalOr:\n      type: \"object\"\n      properties:\n        or:\n          type: \"array\"\n          items:\n            type: \"object\"\n    V1LoadRequestQueryFilterBase:\n      type: \"object\"\n      properties:\n        member:\n          type: \"string\"\n        operator:\n          type: \"string\"\n        values:\n          type: \"array\"\n          items:\n            type: \"string\"\n    V1LoadRequestQueryTimeDimension:\n      type: \"object\"\n      required:\n        - \"dimension\"\n      properties:\n        dimension:\n          type: \"string\"\n        granularity:\n          type: \"string\"\n        dateRange:\n          type: \"object\"\n          # Don't work in rust code-gen\n          # oneOf:\n          #   - type: \"string\"\n          #   - type: \"array\"\n          #     items:\n          #       type: \"string\"\n    V1LoadRequestQueryFilterItem:\n      oneOf:\n        - $ref: \"#/components/schemas/V1LoadRequestQueryFilterBase\"\n        - $ref: \"#/components/schemas/V1LoadRequestQueryFilterLogicalOr\"\n        - $ref: \"#/components/schemas/V1LoadRequestQueryFilterLogicalAnd\"\n    V1LoadRequestQuery:\n      type: \"object\"\n      properties:\n        measures:\n          type: \"array\"\n          items:\n            type: \"string\"\n        dimensions:\n          type: \"array\"\n          items:\n            type: \"string\"\n        segments:\n          type: \"array\"\n          items:\n            type: \"string\"\n        timeDimensions:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1LoadRequestQueryTimeDimension\"\n        order:\n          type: \"array\"\n          items:\n            type: \"array\"\n            items:\n              type: \"string\"\n        limit:\n          type: \"integer\"\n          format: \"int32\"\n        offset:\n          type: \"integer\"\n          format: \"int32\"\n        filters:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/V1LoadRequestQueryFilterItem\"\n    V1LoadRequest:\n      type: \"object\"\n      properties:\n        queryType:\n          type: \"string\"\n        query:\n          type: \"object\"\n          $ref: \"#/components/schemas/V1LoadRequestQuery\"\n"
		}
	},
	"Error": "make ir: path \"/v1/meta\": get: responses: parse response status code: strconv.Atoi: parsing \"4XX\": invalid syntax"
}