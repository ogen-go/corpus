{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tip-initiative/tip-initiative-apis"
		},
		"file": {
			"name": "orders.yaml",
			"path": "endpoints/orders.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 6.0.0\n  title: Orders\n  description: \u003e-\n    Allows the seller to respond back to the buyer with the detailed proposal for a given RFP\n    or revised proposal; Multiple versions of a proposal can be under negotiation for\n    the same campaign, but only one version may be executed; buyer must submit a \"Proposal Change Request\" for the last proposal version submission; seller must respond back with a Proposal Response that contains a new version number when submitting new versions. Â New Proposals may be submitted without a RFP Response\n  termsOfService: http://placeholderdomain.io/terms/\n  contact:\n    name: TIP Forum\n    email: tip-mailing-list@tbd.com\n    url: http://placeholderdomain.io\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\nservers:\n  - url: http://placeholderdomain.io\nsecurity:\n  - bearerAuth: []\npaths:\n  /buyer/orders:\n    post:\n      tags:\n        - Buyer\n      summary: Create or Change an Order in the Seller System\n      description: \u003e-\n        Allows the buyer to send the detailed information for a given order;\n        execution is a summary of the sales elements details, thus allowing the seller\n        to automatically create lines based on individual system's rules.\n        Buyer must submit entire order for Order Change Request using the last confirmed booked\n        order version response.  Seller will be responsible for deciphering change request\n        from buyer.  Cancellation of order either prior to start or mid flight will be submitted\n        in an order change request\u003cbr/\u003e\n        Supported Transaction Types: New, Change, Cancel, Recall\n      operationId: BuyerOrders\n      requestBody:\n        description: Buyer Order\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuyerOrdersRequest'\n            examples:\n              New:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\JSON\\OrdersNew.json'\n              Change:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\JSON\\OrdersChange.json'\n              Cancel:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\JSON\\OrdersCancel.json'\n              Recall:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\JSON\\OrdersRecall.json'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/BuyerOrdersRequest'\n            examples:\n              New:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\XML\\OrdersNew.xml'\n              Change:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\XML\\OrdersChange.xml'\n              Cancel:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\XML\\OrdersCancel.xml'\n              Recall:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\XML\\OrdersRecall.xml'\n      responses:\n        '201': #Created\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Created'\n        '202': #Accepted\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Accepted'\n        '400': #Bad Request\n          $ref: 'schemas/commonResponses.yaml#/components/responses/BadRequest'\n        '401': #Unauthorized\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Unauthorized'\n        '403': #Forbidden\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Forbidden'\n        '404': #Not Found\n          $ref: 'schemas/commonResponses.yaml#/components/responses/NotFound'\n        '405': #Not Allowed\n          $ref: 'schemas/commonResponses.yaml#/components/responses/NotAllowed'\n        default: #unexpected\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Unexpected'\n  /seller/orders:\n    post:\n      tags:\n        - Seller\n      summary: Seller Reject or Confirm an order\n      description: \u003e-\n        Allows the seller to respond with a reject or confirm of an order\n      operationId: SellerOrders\n      requestBody:\n        description: Seller order confirm or reject\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SellerOrdersRequest'\n            examples:\n              Confirm:\n                value:\n                  $ref: 'examples\\6.0.0\\Seller\\JSON\\OrdersConfirm.json' \n              Reject:\n                value:\n                  $ref: 'examples\\6.0.0\\Seller\\JSON\\OrdersReject.json'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/SellerOrdersRequest'\n            examples:\n              Confirm:\n                value:\n                  $ref: 'examples\\6.0.0\\Seller\\XML\\OrdersConfirm.xml'\n              Reject:\n                value:\n                  $ref: 'examples\\6.0.0\\Seller\\XML\\OrdersReject.xml'\n      responses:\n        '201': #Created\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Created'\n        '202': #Accepted\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Accepted'\n        '400': #Bad Request\n          $ref: 'schemas/commonResponses.yaml#/components/responses/BadRequest'\n        '401': #Unauthorized\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Unauthorized'\n        '403': #Forbidden\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Forbidden'\n        '404': #Not Found\n          $ref: 'schemas/commonResponses.yaml#/components/responses/NotFound'\n        '405': #Not Allowed\n          $ref: 'schemas/commonResponses.yaml#/components/responses/NotAllowed'\n        default: #unexpected\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Unexpected'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    BuyerOrdersRequest:\n      description: |\n          The Buyer can perform the following operations:\n          \u003cli\u003eNew or Change - Use the Buyer orders object\n          \u003cli\u003eCancel or Recall - Use the Generic object to Cancel or Recall\n      oneOf:\n        - $ref: './schemas/ordersSchemas.yaml#/components/schemas/BuyerOrders'\n        - $ref: './schemas/commonSchemas.yaml#/components/schemas/CancelConfirmRecallReject'\n      xml:\n        name: BuyerOrdersRequest\n    SellerOrdersRequest:\n      allOf:\n        - $ref: './schemas/commonSchemas.yaml#/components/schemas/CancelConfirmRecallReject'\n      xml:\n        name: SellerOrdersRequest\n"
		}
	},
	"Error": "parse: paths: /seller/orders: post: SellerOrders: requestBody: content: application/json: parse schema: parse schema: reference \"#/components/schemas/SellerOrdersRequest\": parse schema: allOf: [0]: parse schema: reference \"./schemas/commonSchemas.yaml#/components/schemas/CancelConfirmRecallReject\": resolve reference \"./schemas/commonSchemas.yaml#/components/schemas/CancelConfirmRecallReject\": invalid schema reference \"./schemas/commonSchemas.yaml#/components/schemas/CancelConfirmRecallReject\""
}