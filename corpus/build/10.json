{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Apress/solving-identity-management-in-modern-applications"
		},
		"file": {
			"name": "api.yml",
			"path": "hydra-server/server/common/api.yml",
			"content": "openapi: 3.0.1\ninfo:\n  title: hydra-server\n  description: Test server to demonstrate principles in the book\n  version: 1.0.0\nservers:\n  - url: /api/v1\ntags:\n  - name: Hydra Server\n    description: Example endpoints for Markdown Writer App\n  - name: Specification\n    description: The swagger API specification\npaths:\n  /articles:\n    post:\n      security: \n        - {}\n        - OAuth2: ['post:article']\n      tags:\n        - Articles\n      description: Create a new article\n      requestBody: \n        content: \n          application/json:\n            schema:\n              properties:\n                data: \n                  type: string\n                  description: Request body data\n        required: true\n      responses:\n        200:\n          description: Return a new article\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Article'\n        4XX:\n          description: Bad Request, invalid data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401: \n          description: Invalid Token or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        5XX:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /articles/{articleId}/{articleVersion}:\n    parameters:\n      - in: path\n        required: true\n        name: articleId\n        schema:\n          type: string\n        description: The ID of the Article you are trying to access\n      - in: path\n        name: articleVersion\n        schema: \n          type: number\n        required: true\n    \n    get: \n      tags:\n        - Articles\n      description: Get an article specified by ID and Version\n      security: \n        - {}\n        - OAuth2: ['get:article']\n      responses:\n        200:\n          description: Requested article\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Article\"\n        4XX:\n          description: \"Error handling request\"\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Article not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401: \n          description: You do not have enough permissions to access this article\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    patch: \n      tags: \n        - Articles\n      description: Update an existing article, this will fork the article if you do not own it. However, If you do own it, an article with a new version umber will return\n      security: \n        - {}\n        - OAuth2: ['patch:article']\n      requestBody: \n        content: \n          application/json:\n            schema:\n              properties:\n                data: \n                  type: string\n                  description: Request body data, updates the article\n        required: true\n      responses:\n        200: \n          description: Update Complete, you'll receive a new article\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Article\"\n        404:\n          description: Article not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Insufficient permissions to update article\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        4XX:\n          description: Request Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n        5XX:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    \n  /articles/{articleId}/{articleVersion}/grants:\n    parameters:\n    - in: path\n      name: articleId\n      schema:\n        type: string\n      description: The ID of the Article you are trying to access\n      required: true\n    - in: path\n      name: articleVersion\n      schema: \n        type: string\n      required: true\n    put: \n      security: \n        - {}\n        - OAuth2: ['put:grant']\n      description: Adds a grant\n      tags: \n        - Articles\n      requestBody: \n        content: \n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Grant\"\n        required: true\n      responses:\n        200: \n          description: Grant successfully added\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Article\"\n        400: \n          description: Invalid Request\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        401: \n          description: Not enough permissions, you do not have the permissions to grant access to this article\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        404: \n          description: Articl Not Found\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        4XX: \n          description: Request Error\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        5XX: \n          description: Internal Server Error\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n  /articles/{articleId}/{articleVersion}/grants/{identifier}:\n    parameters:\n    - in: path\n      name: articleId\n      schema:\n        type: string\n      description: The ID of the Article you are trying to access\n      required: true\n    - in: path\n      name: articleVersion\n      schema: \n        type: string\n      required: true\n    - in: path\n      name: identifier\n      description: The identifier (username etc) for the grant to be revoked\n      schema: \n        type: string\n      required: true\n    delete: \n      tags: \n        - Articles\n      security: \n        - {}\n        - OAuth2: ['delete:grant']\n      responses:\n        200: \n          description: Grant successfully added\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Article\"\n        400: \n          description: Invalid Request\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        401: \n          description: Not enough permissions, you do not have the permissions to grant access to this article\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        404: \n          description: Articl Not Found\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        4XX: \n          description: Request Error\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        5XX: \n          description: Internal Server Error\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n  /user:\n    get:\n      tags:\n        - User\n      security: \n        - OAuth2: ['get:profile']\n      description: Gets currently logged in user\n      responses:\n        200:\n          description: currently logged in user\n          content: \n            application/json: \n              schema: \n                $ref: \"#/components/schemas/User\"\n        401:\n          description: You are not authorized\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Internal Server Error\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n    patch:\n      tags:\n        - User\n      security: \n        - OAuth2: ['patch:profile']\n      description: Gets currently logged in user\n      requestBody:\n        content: \n          application/json:\n           schema:\n             $ref: \"#/components/schemas/User\"\n        required: true\n      responses:\n        200:\n          description: currently logged in user\n          content: \n            application/json: \n              schema: \n                $ref: \"#/components/schemas/User\"\n        401:\n          description: You are not authorized\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Internal Server Error\n          content: \n            application/json:\n              schema: \n                $ref: \"#/components/schemas/Error\"\n\n  /spec:\n    get:\n      tags:\n        - Specification\n      responses:\n        200:\n          description: Return the API specification\n          content: {}\ncomponents:\n  securitySchemes:\n    OpenID:\n      type: openIdConnect\n      openIdConnectUrl: 'https://yourdomain.auth0.com/.well-known/openid-configuration'\n    OAuth2: \n      type: oauth2\n      flows: \n        authorizationCode:\n          authorizationUrl: 'https://yourdomain.auth0.com/authorize'\n          tokenUrl: 'https://yourdomain.auth0.com/oauth/token'\n          scopes: \n            'get:article': Allows you to fetch articles\n            'patch:article':  Allows you to update or post an article\n            'post:article':  Allows you to post an article  \n            'get:profile':  Allows you to fetch profile  \n            'patch:profile':  Allows you to update profile  \n            'put:grant':  Allows you to add grants  \n            'delete:grant':  allows you to delete grants\n  schemas:\n    Article:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 'ab923c'\n        data:\n          type: string\n          example: '#hello world'\n        owner:\n          type: string\n          example: 'foo|barid020340'\n        version: \n          type: number\n          example: 43\n        grants: \n          type: array\n          items: \n            $ref: '#/components/schemas/Grant'\n    Grant:\n      type: object\n      properties:\n        identifier: \n          type: string\n          example: 'foo|bar or abhishek@example.org or @example.org'\n        permissions:\n          type: array\n          items: \n            type: \"string\"\n            enum: ['read', 'write', 'share', 'owner']\n              \n    Error:\n      type: object\n      properties:\n        code: \n          type: number\n          example: 404\n          description: HTTP Status code of error\n        message: \n          type: string\n          example: Not found\n          description: Full detailed description of error\n      additionalProperties: true\n\n    User:\n      type: object\n      properties:\n        given_name: \n          type: string\n          example: John\n          description: Given Name of the user\n        family_name: \n          type: string\n          example: Doe\n          description: Family Name of the user\n        nickname: \n          type: string\n          example: johndoe\n          description: Shortname/Nickname of the user\n        picture: \n          type: string\n          example: 'example.org/foo.jpg'\n          description: URL to picture of the user\n\n      additionalProperties: true"
		}
	},
	"Error": "make ir: path \"/articles\": post: responses: parse response status code: strconv.Atoi: parsing \"4XX\": invalid syntax"
}