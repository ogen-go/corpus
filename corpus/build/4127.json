{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "openapi/instagram.bussiness/openapi.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  title: Instagram Graph API\n  version: v12.0\n  description: \u003e\n    This is a generated connector for [Instagram Graph API v12.0](https://developers.facebook.com/docs/instagram-api) OpenAPI specification. \n\n    Instagram is a free photo-sharing application that enables its users to take photos, apply filters, and share them on social networks.\n    The Instagram Graph API is a collection of Facebook Graph API endpoints that allow apps to access data in Instagram Professional accounts (both Business and Creator accounts).\n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create an [Instagram account](https://www.instagram.com/?hl=en) and obtain tokens by following [this guide](https://developers.facebook.com/docs/instagram-api/overview).\n  x-ballerina-display:\n    label: Instagram For Bussiness\n    iconPath: icon.png \nservers:\n  - url: https://graph.instagram.com/\ntags: []\npaths:\n  /{ig-media-id}:\n    get:\n      tags:\n        - \"IG_Media\"\n      description: Retrieves information about a media object.\n      operationId: Get Media Info\n      parameters:\n          - in: path\n            name: ig-media-id\n            required: true\n            schema:\n              type: string\n            description: ID of the image, video, or album.\n          # - in: query\n          #   name: access-token\n          #   required: true\n          #   schema:\n          #     type: string\n          #   description: The app user's User Access Token.\n          - in: query\n            name: fields\n            style: form\n            explode: false\n            schema:\n                type: array\n                items: \n                  type: string\n                  enum:\n                    - caption\n                    - comments_count\n                    - id\n                    - ig_id\n                    - is_comment_enabled\n                    - like_count\n                    - media_product_type\n                    - media_type\n                    - media_url\n                    - permalink\n                    - shortcode\n                    - thumbnail_url\n                    - timestamp\n                    - username\n                    - video_title\n            description: A comma-separated list of Fields you want returned.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaFieldsObject'\n\n  /{ig-media-id}/comments:\n    get:\n      tags:\n        - \"IG_Media\"\n      description: Getting Comments on a Media Object.\n      operationId: Get Media Comments\n      parameters:\n          - in: path\n            name: ig-media-id\n            required: true\n            schema:\n              type: string\n            description: ID of the image, video, or album.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comments'\n\n    post:\n      tags:\n        - \"IG_Media\"\n      description: Creating a Comment on a Media Object \n      operationId: Create Comment\n      parameters:\n          - in: path\n            name: ig-media-id\n            required: true\n            schema:\n              type: string\n            description: ID of the image, video, or album.\n          - in: query\n            name: message\n            required: true\n            schema:\n              type: string\n            description: The text to be included in the comment.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n\n  /{ig-media-id}/insights:\n    get:\n      tags:\n        - \"IG_Media\"\n      description: Get insights data on an IG Media object.\n      operationId: Get Media Insights\n      parameters:\n          - in: path\n            name: ig-media-id\n            required: true\n            schema:\n              type: string\n            description: ID of the image, video, or album.\n          # - in: query\n          #   name: access-token\n          #   required: true\n          #   schema:\n          #     type: string\n          #   description: The app user's User Access Token.\n          - in: query\n            name: metric\n            style: form\n            explode: false\n            schema:\n                type: array\n                items: \n                  type: string\n                  enum:\n                    - engagement\n                    - impressions\n                    - reach\n                    - saved\n                    - video_views\n                    - carousel_album_engagement\n                    - carousel_album_impressions\n                    - carousel_album_reach\n                    - carousel_album_saved\n                    - carousel_album_video_views\n                    - exits\n                    - impressions\n                    - reach\n                    - replies\n                    - taps_forward\n                    - taps_back\n            description: A comma-separated list of Metrics you want returned.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaMetrics'\n\n  /{ig-user-id}?fields=business_discovery.username({username}){fieldset}:\n    get:\n      tags:\n        - \"IG_User\"\n      description: |\n        Returns data about another Instagram Business or Creator IG User. \n        \n        Perform this request on the Instagram Business or Creator IG User who is making the query, and identify the \n        targeted business with the username parameter.\n      operationId: Get User Data\n      parameters:\n          - in: path\n            name: ig-user-id\n            required: true\n            schema:\n              type: string\n            description: ID of an IG User who calls the function.\n          - in: path\n            name: username\n            required: true\n            schema:\n              type: string\n            description: The username of the Instagram Business or Creator IG User you want to get data about.\n          - in: path\n            name: fieldset\n            required: true\n            schema:\n                type: string\n                enum:\n                  - biography\n                  - id\n                  - ig_id\n                  - followers_count\n                  - follows_count\n                  - media_count\n                  - name\n                  - profile_picture_url\n                  - username\n                  - website\n            description: A comma-separated list of Fields you want returned.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BussinessDiscoveryData'\n\n  /{ig-user-id}/insights:\n    get:\n      tags:\n        - \"IG_User\"\n      description: Returns insights on an IG User.\n      operationId: Get User Insights\n      parameters:\n          - in: path\n            name: ig-user-id\n            required: true\n            schema:\n              type: string\n            description: ID of an IG User who calls the function.\n          # - in: query\n          #   name: access-token\n          #   required: true\n          #   schema:\n          #     type: string\n          #   description: The app user's User Access Token.\n          - in: query\n            name: metric\n            style: form\n            explode: false\n            schema:\n                type: array\n                items: \n                  type: string\n                  enum:\n                    - audience_city\n                    - audience_country\n                    - audience_gender_age\n                    - audience_locale\n                    - email_contacts\n                    - follower_count\n                    - get_directions_clicks\n                    - impressions\n                    - online_followers\n                    - phone_call_clicks\n                    - profile_views\n                    - reach\n                    - text_message_clicks\n                    - website_clicks\n            description: A comma-separated list of Metrics you want returned. If requesting multiple metrics, they must all have the same compatible Period.\n          - in: query\n            name: period\n            required: true\n            schema:\n              type: string\n            description: A Period that is compatible with the metrics you are requesting.\n          - in: query\n            name: since\n            required: true\n            schema:\n              type: integer\n            description: Used in conjunction with {until} to define a Range. If you omit since and until, the API defaults to a 2 day range - yesterday through today.         \n          - in: query\n            name: until\n            required: true\n            schema:\n              type: integer\n            description: Used in conjunction with {since} to define a Range. If you omit since and until, the API defaults to a 2 day range - yesterday through today.   \n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserMetrics'\n\n\n  /{ig-user-id}/media:\n    get:\n      tags:\n        - \"IG_User\"\n      description: Gets all IG Media objects on an IG User.\n      operationId: Get User Media\n      parameters:\n          - in: path\n            name: ig-user-id\n            required: true\n            schema:\n              type: string\n            description: ID of an IG User who calls the function.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Media'\n\n  /{ig-hashtag-id}:\n    get:\n      tags:\n        - \"IG_Hashtag\"\n      description: Returns Fields and Edges on an IG Hashtag.\n      operationId: Get Hashtag Fields\n      parameters:\n          - in: path\n            name: ig-hashtag-id\n            required: true\n            schema:\n              type: string\n            description:  The ID of the IG Hashtag.\n          # - in: query\n          #   name: access-token\n          #   required: true\n          #   schema:\n          #     type: string\n          #   description: The app user's User Access Token.\n          - in: query\n            name: fields\n            style: form\n            explode: false\n            schema:\n                type: array\n                items: \n                  type: string\n                  enum:\n                    - id\n                    - name\n            description: A comma-separated list of Fields and Edges you want returned. If omitted, default fields will be returned.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HashtagResponse'\n\n  /{ig-hashtag-id}/recent_media:\n    get:\n      tags:\n        - \"IG_Hashtag\"\n      description: Returns a list of the most recently published photo and video IG Media objects published with a specific hashtag.\n      operationId: Get Recent Hashtag Media\n      parameters:\n          - in: path\n            name: ig-hashtag-id\n            required: true\n            schema:\n              type: string\n            description:  The ID of the IG Hashtag.\n          - in: query\n            name: user_id\n            required: true\n            schema:\n              type: string\n            description: The ID of the IG User performing the query.\n          - in: query\n            name: fields\n            style: form\n            explode: false\n            schema:\n                type: array\n                items: \n                  type: string\n                  enum:\n                    - caption\n                    - children\n                    - comments_count\n                    - id\n                    - like_count\n                    - media_type\n                    - media_url\n                    - permalink\n                    - timestamp\n            description: A comma-separated list of Fields you want returned.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Media'\n\n  /ig_hashtag_search:\n    post:\n      tags:\n        - \"IG_Hashtag_Search\"\n      description: Returns the ID of an IG Hashtag. \n      operationId: Search Hashtag\n      parameters:\n          - in: query\n            name: user_id\n            required: true\n            schema:\n              type: string\n            description:  The ID of the IG User performing the request.\n          - in: query\n            name: q\n            required: true\n            schema:\n              type: string\n            description: The hashtag name to query.\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Hashtags'\n\ncomponents:\n  schemas:\n    BussinessDiscoveryData:\n      type: object\n      properties:\n        business_discovery:\n          type: object\n          properties:\n            biography:\n              type: string\n              description: The bio of the person. \n            id:\n              type: string\n              description: The unique identifier of the Instagram business account.\n            ig_id:\n              type: string\n              description: Instagram ID.\n            followers_count:\n              type: integer\n              description: The followers count of the profile. \n            follows_count:\n              type: integer\n              description: The follows count of the profile. \n            media_count:\n              type: integer\n              description: The media count of the profile. \n            name:\n              type: string\n              description: The name of the person. \n            profile_picture_url:\n              type: string\n              description: The profile picture of the person. \n            username:\n              type: string\n              description: The username of the person. \n            website: \n              type: string\n              description: The website of the person. \n            media:\n              $ref: '#/components/schemas/Media'\n          description: Information about the Instagram Business account.\n      description: Bussiness discover data object.\n\n    MediaMetrics:\n      type: object\n      description: Media metrics\n      properties:\n        data:\n          type: array\n          description: Array of media metrics.\n          items:\n            $ref: '#/components/schemas/MediaMetricObject'\n\n    MediaMetricObject:\n      type: object\n      description: Media metric object.\n      properties:\n        name:\n          type: string\n          description: Name\n        period:\n          type: string\n          description: Period\n        values:\n          type: object\n          description: Values\n          properties:\n            value:\n              type: array\n              description: Value\n              items:\n                {} \n        title:\n          type: string\n          description: Title\n        description:\n          type: string\n          description: Description\n        id:\n          type: string\n          description: ID\n\n    UserMetrics:\n      type: object\n      description: Array of user metrics\n      properties:\n        data:\n          type: array\n          description: Array of user metrics\n          items:\n            $ref: '#/components/schemas/UserMetricObject'\n\n    UserMetricObject:\n      description: User metric object.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name\n        period:\n          type: string\n          description: Period\n        values:\n          type: object\n          description: Values\n          properties:\n            value:\n              type: array\n              description: Value\n              items:\n                {}\n        title:\n          type: string\n          description: Title\n        description:\n          type: string\n          description: Description\n        id:\n          type: string\n          description: ID\n    \n     \n    Media:\n      properties:\n        data:\n          type: array\n          description: An array containing requested media fields.\n          items:\n            $ref: '#/components/schemas/MediaFieldsObject'\n        paging:\n          $ref: '#/components/schemas/Paging'\n      description: An object containing the media data requested.\n\n    MediaFieldsObject:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The Media's ID.\n        caption:\n          type: string\n          description: The Media's caption text. Not returnable for Media in albums.\n        media_type:\n          type: string\n          description: The Media's type. Can be `IMAGE`, `VIDEO`, or `CAROUSEL_ALBUM`.\n        media_url:\n          type: string\n          description: |\n            Media URL. \n            Will be omitted from responses if the media contains copyrighted material, or has been flagged for a copyright violation.\n        permalink:\n          type: string\n          description: The Media's permanent URL. \n        thumbnail_url:\n          type: string\n          description: The Media's thumbnail image URL. Only available on VIDEO Media.\n        timestamp:\n          type: string\n          description: ISO 8601 formatted creation date in UTC (default is UTC ±00:00)\n        username:\n          type: string\n          description: Username of user who created the media.       \n        owner:\n          type: string \n          description:  |\n            ID of Instagram user who created the media. \n            Only returned if the app user making the query also created the media, otherwise username field will be returned instead.\n        comments_count:\n          type: integer\n          description: |\n            Count of comments on the media. \n            Excludes comments on album child media and the media's caption. Includes replies on comments.\n        ig_id:\n          type: string\n          description: Instagram media ID.\n        is_comment_enabled:\n          type: boolean\n          description: Indicates if comments are enabled or disabled. Excludes album children.\n        like_count:\n          type: integer\n          description: |\n            Count of likes on the media. \n            Excludes likes on album child media and likes on promoted posts created from the media. Includes replies on comments.\n        media_product_type:\n          type: string\n          description: |\n            Surface where the media is published. \n            Can be AD, FEED, IGTV, or STORY. Will return FEED instead of IGTV if targeting an Instagram TV video created on or after October 5, 2021.\n        shortcode:\n          type: integer\n          description: Shortcode to the media.\n        video_title:\n          type: string\n          description: Instagram TV media title. Will not be returned if targeting an Instagram TV video created on or after October 5, 2021.\n      description: Media fields.\n\n    Hashtags:\n      properties:\n        data:\n          type: array\n          description: An array containing hashtag IDs.\n          items:\n            $ref: '#/components/schemas/HashtagResponse'\n\n    HashtagResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The hashtag's ID (included by default). IDs are static and global.\n        name:\n          type: string\n          description: The hashtag's name, without the leading hash symbol.\n      description: Hashtag response.\n\n    CommentResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the comment.\n      description: Comment response.\n\n    Comment:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the comment.\n        timestamp:\n          type: string\n          description: Time when the comment is created.\n        text:\n          type: string\n          description: Comment content.\n        hidden:\n          type: boolean\n          description: The boolean that shows if the comment is hidden.\n        like_count:\n          type: integer\n          description: The number of likes.\n        media: \n          type: string\n          description: Comment media.\n        replies:\n          type: string\n          description: Replies for comment.\n        user:\n          type: string\n          description: Comment author.\n        username:\n          type: string\n          description: The username for the user.\n      description: Comment information. \n\n    Comments:\n      properties:\n        data:\n          type: array\n          description: An array containing comments.\n          items:\n            $ref: '#/components/schemas/Comment'\n        paging:\n          $ref: '#/components/schemas/Paging'\n      description: An object containing the media data requested.\n\n    Paging:\n      type: object\n      properties:\n        cursors:\n          type: object\n          description: Pagination cursor.\n          properties:\n            before:\n              type: string\n              description: This is the cursor that points to the start of the page of data that has been returned.\n            after:\n              type: string\n              description: This is the cursor that points to the end of the page of data that has been returned.\n        next:\n          description: |\n            The Graph API endpoint that will return the next page of data. If not included, this is the last page of data. \n            \n            Due to how pagination works with visibility and privacy, it is possible that a page may be empty but contain \n            a next paging link. Stop paging when the next link no longer appears.\n        previous:\n          description: The Graph API endpoint that will return the previous page of data. If not included, this is the first page of data.\n      description: A cursor-paginated edge.\n\n\n  securitySchemes:\n    oAuth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://api.instagram.com/oauth/authorize\n          tokenUrl: https://api.instagram.com/oauth/access_token\n          scopes:\n            instagram_graph_user_media : instagram_graph_user_media\n            instagram_graph_user_profile: instagram_graph_user_profile\nsecurity:\n- oAuth: [instagram_graph_user_media, instagram_graph_user_profile]\n\n\n"
		}
	},
	"Error": "parse: paths: /{ig-media-id}/insights: get: Get Media Insights: parameters: parse parameter \"metric\": schema: parse schema: item: parse enum values: duplicate enum value: 'impressions'"
}