{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NENA911/i3"
		},
		"file": {
			"name": "i3-dequeue.yaml",
			"path": "schema/i3-dequeue.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  title: Dequeue Registration Service\n  version: \"1.0\"\nservers:\n  - url: http://localhost/DequeueRegistration/v1\npaths:\n  /Registrations:\n    put:\n      tags:\n        - DequeueRegistration\n      summary: Registers or deregisters an entity as a dequeuer\n      operationId: DequeueRegistration\n      requestBody:\n        description: Registration details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Registration'\n        required: true\n      responses:\n        '200':\n          description: Registration successfully updated/created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  expirationTime:\n                    type: integer\n                    format: int32\n                    description: Time in seconds this registration will expire.\n        '400':\n          description: Bad request\n        '454':\n          description: Unspecified Error\n        '456':\n          description: Bad queue\n        '457':\n          description: Bad dequeuePreference\n        '458':\n          description: Policy violation\n  /Versions:\n    servers:\n      - url: https://api.example.com/DequeueRegistration\n        description: Override base path for Versions query\n    get:\n      tags:\n        - RetrieveVersions\n      summary: Retrieves all supported versions, vendor parameter is optional.\n      operationId: RetrieveVersions\n      responses:\n        '200':\n          description: Versions found\n          content:\n            application/json:\n              schema:\n                $ref: 'i3-common.yaml#/components/schemas/VersionsArray'\ncomponents:\n  schemas:\n    Registration:\n      type: object\n      required:\n        - queueUri\n        - dequeuerUri\n        - expirationTime\n      properties:\n        queueUri:\n          type: string\n          format: uri\n        dequeuerUri:\n          type: string\n          format: uri\n        expirationTime:\n          type: integer\n          format: int32\n          description: Time in seconds this registration will expire. expirationTime set to zero is a request to deregister.\n        dequeuePreference:\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 5"
		}
	},
	"Error": "parse: paths: /Registrations: put: DequeueRegistration: responses: 458: unknown status code: 458"
}