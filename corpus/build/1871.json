{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Rebilly/api-definitions"
		},
		"file": {
			"name": "users.yaml",
			"path": "openapi/users.yaml",
			"content": "openapi: 3.0.3\ninfo:\n  version: \"2.1\"\n  title: \"Rebilly User API\"\n  contact:\n    name: \"Rebilly API Support\"\n    url: \"https://www.rebilly.com/contact/\"\n    email: \"integrations@rebilly.com\"\n  license:\n    name: \"Rebilly\"\n    url: 'https://www.rebilly.com/api-license/'\n  termsOfService: 'https://www.rebilly.com/terms-of-use/'\n  x-logo:\n    url: 'https://rebilly-core.redoc.ly/rb_apiLogo.svg'\n    backgroundColor: '#0033A0'\n  description: |\n    # Introduction\n    This document covers APIs mostly intended for consumption by Rebilly's\n    Frontend GUI [app](https://app.rebilly.com).  However, any client is welcome\n    to use these APIs.  Our main API docs can be [found here](https://api-reference.rebilly.com/).\n\n    The Rebilly API is built on HTTP.  Our API is RESTful.  It has predictable\n    resource URLs.  It returns HTTP response codes to indicate errors.  It also\n    accepts and returns JSON in the HTTP body.  You can use your favorite\n    HTTP/REST library for your programming language to use Rebilly's API, or\n    you can use one of our SDKs (currently available in [PHP](https://github.com/Rebilly/rebilly-php)\n    or [Javascript](https://github.com/Rebilly/rebilly-js-sdk)).\n\n    # Authentication\n    When you sign up for an account, you are given your first API key.\n    You can generate additional API keys, and delete API keys (as you may\n    need to rotate your keys in the future). You authenticate to the\n    Rebilly API by providing your secret key in the request header.\n\n    Rebilly offers three forms of authentication:  secret key, publishable key, JSON Web Tokens, and public signature key.\n    - [Secret API key](#section/Authentication/SecretApiKey): used for requests made from the server side. Never share these keys. Keep them guarded and secure\n    - [Publishable API key](#section/Authentication/PublishableApiKey): used for requests from the client side.\n    - [JWT](#section/Authentication/JWT): short lifetime tokens that can be assigned a specific expiration time\n\n    Never share your secret keys. Keep them guarded and secure.\n\n    \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n\n    # SDKs\n\n    ## Javascript SDK\n\n    Installation and usage instructions can be found [here](https://docs.rebilly.com/docs/developer-docs/sdks).\n    SDK code examples are included in these docs.\n\n    ## PHP SDK\n    For all PHP SDK examples provided in this spec you will need to configure `$client`.\n    You may do it like this:\n\n    ```php\n    $client = new Rebilly\\Client([\n        'apiKey' =\u003e 'YourApiKeyHere',\n        'baseUrl' =\u003e 'https://api.rebilly.com',\n    ]);\n    ```\n\n    # Using filter with collections\n    Rebilly provides collections filtering. You can use `?filter` param on collection to define which records should be shown in the response.\n\n    Here is filter format description:\n\n    - Fields and values in filter are separated with `:`: `?filter=firstName:John`.\n\n    - Fields in filter are separated with `;`: `?filter=firstName:John;lastName:Doe`.\n\n    - You can use multiple values using `,` as values separator: `?filter=firstName:John,Bob`.\n\n    - To negate the filter use `!`: `?filter=firstName:!John`. Note that you can negate multiple values like this: `?filter=firstName:!John,Bob`. This filter rule will exclude all Johns and Bobs from the response.\n\n    - You can use range filters like this: `?filter=amount:1..10`.\n\n    - You can use gte (greater than or equals) filter like this: `?filter=amount:1..`, or lte (less than or equals) than filter like this: `?filter=amount:..10`.\n\n    - You can create some [predefined values lists](https://user-api-docs.rebilly.com/#tag/Lists) and use them in filter: `?filter=firstName:@yourListName`. You can also exclude list values: `?filter=firstName:!@yourListName`.\n################################################################################\ntags:\n  - name: Application owners\n    description: |\n      APIs to manage your applications.\n  - name: Application users\n    description: |\n      APIs for application users to manage their applications.\n  - name: API Keys\n    description: |\n      Always keep your API Keys private. When creating your API keys,\n      you can restrict them to a given set of permissions.\n      In addition to your API Keys, you may use\n      JSON Web Tokens (JWT) to authenticate to the API.  See\n      our [Sessions](https://user-api-docs.rebilly.com/#tag/JWT-Session) resource for more information.\n  - name: Balance transactions\n    description: |\n      Balance transactions API.\n\n      This API is experimental and not guaranteed to be backward compatible.\n  - name: Billing Portals\n    description: |\n      Customer billing portals can be configured here. You can customize various\n      options that appear on your billing portals.\n  - name: Checkout Forms\n    description: |\n      Hosted checkout forms can be configured here. You can customize various\n      options that appear on your hosted checkout forms.\n  - name: Email Credentials\n    description: |\n      Get and create SMTP credential hashes.\n  - name: Gateway Accounts\n    description: |\n      Gateway accounts connect payment request to third party networks and platforms.\n  - name: Gateway Accounts Timeline\n  - name: Lists\n    description: |\n      Lists contain sets of values and may be referenced within Rules criteria.\n\n      List order may not be maintained and duplicates may be removed.\n\n      You may grant permissions to edit Lists to different people than those who can edit Rules.\n      It may be useful if your workflow involves frequent updates to value sets used in criteria.\n  - name: Organizations\n    description: |\n      Organization is an entity that represents you, or your company, as a merchant. You can have multiple organizations.\n\n      Note: Organizations are shared between \"Live\" and \"Sandbox\" environments.\n  - name: Profile\n    description: |\n      A Profile represents the person currently logged in to Rebilly.\n  - name: Rebilly API\n    description: |\n      The Rebilly API is the main API commonly integrated by 3rd parties.  You may see\n      the [Rebilly API Documentation here](https://api-reference.rebilly.com).\n  - name: Reports API\n    description: |\n      The Rebilly Reporting API is currently experimental.  You may see\n      the [Reports API Documentation here](https://reports-api-docs.rebilly.com).\n  - name: Reset password\n    description: |\n      When a password reset is requested, an email with a token is sent. Upon receiving the email\n      the user then needs to click a link and choose a new password.\n  - name: Rules\n    description: |\n      \"Don't conform to the rules. Create the rules.\"\n      Rather than adapt your workflow and business, Rebilly can align with your business\n      objectives by giving you the power to automate certain behaviors when key events happen.\n      You can use this to your advantage to mitigate risk, maximize conversions and minimize costs.\n      You have the controls at your fingertips here. If you need more control,\n      or help dialing in on a strategy, feel free to contact us.\n\n      When an event happens, it triggers the evaluation of conditions (that you set up),\n      in order from top to bottom. If the condition is met, the corresponding actions are executed.\n      The conditions continue to be checked until either all of the conditions have been executed,\n      or a special \"stop\" action is executed.\n  - name: Rules Timeline\n\n  - name: JWT Session\n    description: |\n      A session contains a token, which is a JSON Web Token.  The token is created\n      with a user's signin credentials.\n\n      This token can be used to authenticate to the API.  In addition, the session can be set to\n      expire at a particular time. Use the token to then authenticate for further requests to the Rebilly API.\n\n      The token should be kept private, but could be stored on the user's browser\n      client to simulate a \"session\".\n  - name: Status\n    description: |\n      Check the status of the Rebilly API (no authentication required).\n  - name: Tracking\n    description: |\n      Tracking is a layer for accessing all the activity (API requests,\n      subscriptions, webhooks, events, etc.), thus providing easier\n      debugging and issues auditing.\n  - name: Users\n    description: |\n      A User represents a person who can login to Rebilly, and take actions subject to\n      their granted permissions.\n  - name: Websites\n    description: |\n      A Website represents the website/brand that customers interact with... You\n      could think of it like a brand.  For example, Nestle owns Perrier and Purina\n      and PowerBar.\n\n      We recognize that some enterprises have more than one website (or brand).  The\n      website is related to each invoice and each payment gateway account.  This feature\n      would allow you to have gateway accounts that are related to multiple websites, or\n      exclusive to particular websites.  And gives you more control over your business.\n  - name: Webhook Credentials\n    description: |\n      Get and create Webhook credential hashes.\n  - name: Webhooks\n    description: |\n      Webhooks are designed to notify your systems when certain/all registered events happen in near real-time.\n      They allow you to collect information about those events. Rebilly can send these information via\n      POST to an URL of your choice.\n  - name: Segments\n    description: |\n      Segments are grid UI settings that can be shared with other users. They are like a custom view.\n      For example, one may set up a transaction grid to show specific columns and sort a certain way, and share it with\n      others in their organization.\n  - name: Memberships\n    description: |\n      Membership describe the relationships between organizations and users.\n      For example, one user could have more than one organization.\n  - name: Roles\n    description: |\n      Roles are an implementation of the general hierarchical RBAC. A senior role inherits all of it's juniors' ACLs plus its own ACL.\n      Junior roles are not influenced by the senior role.\n  - name: Integrations\n  - name: Payment Instruments\n  - name: Broadcast Messages\n  - name: Email Delivery Settings\n  - name: Email Messages\n  - name: Email Notifications\n  - name: Plaid credentials\n  - name: Experian credentials\n  - name: TaxJar credentials\n  - name: Metadata\n  - name: Custom domains\n################################################################################\nx-tagGroups:\n  - name: Security\n    tags:\n      - JWT Session\n      - API Keys\n      - Reset password\n  - name: Email\n    tags:\n      - Broadcast Messages\n      - Email Credentials\n      - Email Delivery Settings\n      - Email Messages\n  - name: Rules\n    tags:\n      - Rules\n      - Email Notifications\n      - Lists\n      - Rules Timeline\n  - name: Users\n    tags:\n      - Profile\n      - Users\n      - Memberships\n      - Roles\n  - name: Webhooks\n    tags:\n      - Webhook Credentials\n      - Webhooks\n  - name: Applications\n    tags:\n      - Application owners\n      - Application users\n  - name: Other\n    tags:\n      - Balance transactions\n      - Billing Portals\n      - Checkout Forms\n      - Gateway Accounts\n      - Gateway Accounts Timeline\n      - Payment Cards\n      - Payment Instruments\n      - Organizations\n      - Segments\n      - Status\n      - Tracking\n      - Websites\n      - Integrations\n      - Plaid credentials\n      - Experian credentials\n      - TaxJar credentials\n      - Metadata\n      - Custom domains\n  - name: Related docs\n    tags:\n      - Rebilly API\n      - Reports API\nsecurity:\n  - SecretApiKey: []\n  - JWT: []\nservers:\n  - url: 'https://api-sandbox.rebilly.com/organizations/{organizationId}'\n    description: Sandbox server\n    variables:\n      organizationId:\n        default: unknown\n        description: Your organization ID.\n  - url: 'https://api.rebilly.com/organizations/{organizationId}'\n    description: Live server\n    variables:\n      organizationId:\n        default: unknown\n        description: Your organization ID.\n\ncomponents:\n  securitySchemes:\n    JWT:\n      $ref: components/securitySchemes/JWT.yaml\n    ApplicationJWT:\n      $ref: components/securitySchemes/ApplicationJWT.yaml\n    PublishableApiKey:\n      $ref: components/securitySchemes/PublishableApiKey.yaml\n    SecretApiKey:\n      $ref: components/securitySchemes/SecretApiKey.yaml\n\npaths:\n  '/activation/{token}':\n    $ref: './paths/activation@{token}.yaml'\n  /api-keys:\n    $ref: ./paths/api-keys.yaml\n  '/api-keys/{id}':\n    $ref: './paths/api-keys@{id}.yaml'\n  '/application-instances/{applicationId}':\n    $ref: './paths/application-instances@{applicationId}.yaml'\n  '/applications':\n    $ref: './paths/applications.yaml'\n  '/applications/{id}':\n    $ref: './paths/applications@{id}.yaml'\n  '/applications/{id}/instances':\n    $ref: './paths/applications@{id}@instances.yaml'\n  '/applications/{id}/instances/{organizationId}':\n    $ref: './paths/applications@{id}@instances@{organizationId}.yaml'\n  /balance-transactions:\n    $ref: './paths/balance-transactions.yaml'\n  '/balance-transactions/{id}':\n    $ref: './paths/balance-transactions@{id}.yaml'\n  /billing-portals:\n    $ref: ./paths/billing-portals.yaml\n  /billing-portals/{id}:\n    $ref: './paths/billing-portals@{id}.yaml'\n  /broadcast-messages:\n    $ref: ./paths/broadcast-messages.yaml\n  '/broadcast-messages/{id}':\n    $ref: './paths/broadcast-messages@{id}.yaml'\n  /checkout-forms:\n    $ref: ./paths/checkout-forms.yaml\n  /checkout-forms/{id}:\n    $ref: './paths/checkout-forms@{id}.yaml'\n  /credential-hashes/aws-ses:\n    $ref: ./paths/credential-hashes@aws-ses.yaml\n  '/credential-hashes/aws-ses/{hash}':\n    $ref: './paths/credential-hashes@aws-ses@{hash}.yaml'\n  /credential-hashes/emails:\n    $ref: ./paths/credential-hashes@emails.yaml\n  '/credential-hashes/emails/{hash}':\n    $ref: './paths/credential-hashes@emails@{hash}.yaml'\n  /credential-hashes/mailgun:\n    $ref: ./paths/credential-hashes@mailgun.yaml\n  '/credential-hashes/mailgun/{hash}':\n    $ref: './paths/credential-hashes@mailgun@{hash}.yaml'\n  /credential-hashes/oauth2:\n    $ref: ./paths/credential-hashes@oauth2.yaml\n  '/credential-hashes/oauth2/{hash}':\n    $ref: './paths/credential-hashes@oauth2@{hash}.yaml'\n  '/credential-hashes/oauth2/{hash}/items':\n    $ref: './paths/credential-hashes@oauth2@{hash}@items.yaml'\n  /credential-hashes/plaid:\n    $ref: './paths/credential-hashes@plaid.yaml'\n  '/credential-hashes/plaid/{hash}':\n    $ref: './paths/credential-hashes@plaid@{hash}.yaml'\n  /credential-hashes/postmark:\n    $ref: ./paths/credential-hashes@postmark.yaml\n  '/credential-hashes/postmark/{hash}':\n    $ref: './paths/credential-hashes@postmark@{hash}.yaml'\n  /credential-hashes/sendgrid:\n    $ref: ./paths/credential-hashes@sendgrid.yaml\n  '/credential-hashes/sendgrid/{hash}':\n    $ref: './paths/credential-hashes@sendgrid@{hash}.yaml'\n  /credential-hashes/webhooks:\n    $ref: ./paths/credential-hashes@webhooks.yaml\n  '/credential-hashes/webhooks/{hash}':\n    $ref: './paths/credential-hashes@webhooks@{hash}.yaml'\n  /credential-hashes/experian:\n    $ref: ./paths/credential-hashes@experian.yaml\n  '/credential-hashes/experian/{hash}':\n    $ref: './paths/credential-hashes@experian@{hash}.yaml'\n  /credential-hashes/taxjar:\n    $ref: ./paths/credential-hashes@taxjar.yaml\n  '/credential-hashes/taxjar/{hash}':\n    $ref: './paths/credential-hashes@taxjar@{hash}.yaml'\n  /custom-domains:\n    $ref: ./paths/custom-domains.yaml\n  '/custom-domains/{domain}':\n    $ref: './paths/custom-domains@{domain}.yaml'\n  '/email-delivery-setting-verifications/{token}':\n    $ref: './paths/email-delivery-setting-verifications@{token}.yaml'\n  /email-delivery-settings:\n    $ref: ./paths/email-delivery-settings.yaml\n  '/email-delivery-settings/{id}':\n    $ref: './paths/email-delivery-settings@{id}.yaml'\n  '/email-delivery-settings/{id}/resend-email-verification':\n    $ref: './paths/email-delivery-settings@{id}@resend-email-verification.yaml'\n  /email-messages:\n    $ref: ./paths/email-messages.yaml\n  '/email-messages/{id}':\n    $ref: './paths/email-messages@{id}.yaml'\n  /email-notifications:\n    $ref: ./paths/email-notifications.yaml\n  /events:\n    $ref: ./paths/events.yaml\n  '/events/{eventType}':\n    $ref: './paths/events@{eventType}.yaml'\n  '/events/{eventType}/rules':\n    $ref: './paths/events@{eventType}@rules.yaml'\n  '/events/{eventType}/timeline':\n    $ref: './paths/events@{eventType}@timeline.yaml'\n  '/events/{eventType}/timeline/{messageId}':\n    $ref: './paths/events@{eventType}@timeline@{messageId}.yaml'\n  '/events/{eventType}/rules/history':\n    $ref: './paths/events@{eventType}@rules@history.yaml'\n  '/events/{eventType}/rules/history/{version}':\n    $ref: './paths/events@{eventType}@rules@history@{version}.yaml'\n  '/events/{eventType}/rules/versions/{version}':\n    $ref: './paths/events@{eventType}@rules@versions@{version}.yaml'\n  '/events/{eventType}/rules/drafts':\n    $ref: './paths/events@{eventType}@rules@drafts.yaml'\n  '/events/{eventType}/rules/drafts/{id}':\n    $ref: './paths/events@{eventType}@rules@drafts@{id}.yaml'\n  /forgot-password:\n    $ref: ./paths/forgot-password.yaml\n  /gateway-accounts:\n    $ref: ./paths/gateway-accounts.yaml\n  '/gateway-accounts/{id}':\n    $ref: './paths/gateway-accounts@{id}.yaml'\n  '/gateway-accounts/{id}/close':\n    $ref: './paths/gateway-accounts@{id}@close.yaml'\n  '/gateway-accounts/{id}/disable':\n    $ref: './paths/gateway-accounts@{id}@disable.yaml'\n  '/gateway-accounts/{id}/downtime-schedules':\n    $ref: './paths/gateway-accounts@{id}@downtime-schedules.yaml'\n  '/gateway-accounts/{id}/downtime-schedules/{downtimeId}':\n    $ref: './paths/gateway-accounts@{id}@downtime-schedules@{downtimeId}.yaml'\n  '/gateway-accounts/{id}/enable':\n    $ref: './paths/gateway-accounts@{id}@enable.yaml'\n  '/gateway-accounts/{id}/limits':\n    $ref: './paths/gateway-accounts@{id}@limits.yaml'\n  '/gateway-accounts/{id}/limits/{limitId}':\n    $ref: './paths/gateway-accounts@{id}@limits@{limitId}.yaml'\n  '/gateway-accounts/{id}/timeline':\n    $ref: './paths/gateway-accounts@{id}@timeline.yaml'\n  '/gateway-accounts/{id}/timeline/{messageId}':\n    $ref: './paths/gateway-accounts@{id}@timeline@{messageId}.yaml'\n  '/gateway-accounts/{id}/check-credentials':\n    $ref: './paths/gateway-accounts@{id}@check-credentials.yaml'\n  '/gateway-accounts/{id}/financial-settings':\n    $ref: './paths/gateway-accounts@{id}@financial-settings.yaml'\n  /digital-wallets/onboarding/apple-pay:\n    $ref: './paths/digital-wallets@onboarding@apple-pay.yaml'\n  /grid-segments:\n    $ref: ./paths/grid-segments.yaml\n  '/grid-segments/{id}':\n    $ref: './paths/grid-segments@{id}.yaml'\n  /integrations:\n    $ref: ./paths/integrations.yaml\n  '/integrations/{label}':\n    $ref: './paths/integrations@{label}.yaml'\n  /lists:\n    $ref: ./paths/lists.yaml\n  '/lists/{id}':\n    $ref: './paths/lists@{id}.yaml'\n  '/lists/{id}/{version}':\n    $ref: './paths/lists@{id}@{version}.yaml'\n  /logout:\n    $ref: ./paths/logout.yaml\n  /memberships:\n    $ref: ./paths/memberships.yaml\n  '/memberships/{organizationId}/{userId}':\n    $ref: './paths/memberships@{organizationId}@{userId}.yaml'\n  /organizations:\n    $ref: ./paths/organizations.yaml\n  '/organizations/{id}':\n    $ref: './paths/organizations@{id}.yaml'\n  /payment-cards-bank-names:\n    $ref: ./paths/payment-cards-bank-names.yaml\n  /payment-methods:\n    $ref: ./paths/payment-methods.yaml\n  /payment-methods/{apiName}:\n    $ref: './paths/payment-methods@{apiName}.yaml'\n  /payment-gateways-metadata:\n    $ref: ./paths/payment-gateways-metadata.yaml\n  /payment-gateways-metadata/{apiName}:\n    $ref: './paths/payment-gateways-metadata@{apiName}.yaml'\n  /permissions-emulation:\n    $ref: ./paths/permissions-emulation.yaml\n  /previews/rule-actions/send-email:\n    $ref: ./paths/previews@rule-actions@send-email.yaml\n  /previews/rule-actions/trigger-webhook:\n    $ref: ./paths/previews@rule-actions@trigger-webhook.yaml\n  /previews/webhooks:\n    $ref: ./paths/previews@webhooks.yaml\n  /profile:\n    $ref: ./paths/profile.yaml\n  /profile/mfa:\n    $ref: ./paths/profile@mfa.yaml\n  /profile/password:\n    $ref: ./paths/profile@password.yaml\n  /profile/totp-reset:\n    $ref: ./paths/profile@totp-reset.yaml\n  '/reset-password/{token}':\n    $ref: './paths/reset-password@{token}.yaml'\n  '/roles':\n    $ref: ./paths/roles.yaml\n  '/roles/{id}':\n    $ref: './paths/roles@{id}.yaml'\n  '/send-through-attribution/{eventType}':\n    $ref: './paths/send-through-attribution@{eventType}.yaml'\n  /signin:\n    $ref: ./paths/signin.yaml\n  /signup:\n    $ref: ./paths/signup.yaml\n  /status:\n    $ref: ./paths/status.yaml\n  /tracking/api:\n    $ref: ./paths/tracking@api.yaml\n  '/tracking/api/{id}':\n    $ref: './paths/tracking@api@{id}.yaml'\n  /tracking/lists:\n    $ref: ./paths/tracking@lists.yaml\n  /tracking/webhooks:\n    $ref: ./paths/tracking@webhooks.yaml\n  '/tracking/webhooks/{id}':\n    $ref: './paths/tracking@webhooks@{id}.yaml'\n  '/tracking/webhooks/{id}/resend':\n    $ref: './paths/tracking@webhooks@{id}@resend.yaml'\n  /users:\n    $ref: ./paths/users.yaml\n  '/users/{id}':\n    $ref: './paths/users@{id}.yaml'\n  '/users/{id}/password':\n    $ref: './paths/users@{id}@password.yaml'\n  '/users/{id}/totp-reset':\n    $ref: './paths/users@{id}@totp-reset.yaml'\n  /webhooks:\n    $ref: ./paths/webhooks.yaml\n  '/webhooks/{id}':\n    $ref: './paths/webhooks@{id}.yaml'\n  /websites:\n    $ref: ./paths/websites.yaml\n  '/websites/{id}':\n    $ref: './paths/websites@{id}.yaml'\n\nx-webhooks:\n  application-instance-disabled:\n    post:\n      $ref: ./webhooks/application-instance-disabled.yaml\n  application-instance-enabled:\n    post:\n      $ref: ./webhooks/application-instance-enabled.yaml\n  gateway-account-downtime-ended:\n    post:\n      $ref: ./webhooks/gateway-account-downtime-ended.yaml\n  gateway-account-downtime-started:\n    post:\n      $ref: ./webhooks/gateway-account-downtime-started.yaml\n  gateway-account-limit-reached:\n    post:\n      $ref: ./webhooks/gateway-account-limit-reached.yaml\n"
		}
	},
	"Error": "parse: /signin: referenced pathItem not supported"
}