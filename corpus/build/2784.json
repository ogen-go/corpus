{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oas-tools/oas-generator"
		},
		"file": {
			"name": "complexPaths.yaml",
			"path": "specs/complexPaths.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Pets API -\u003e Valid OASdoc\n  license:\n    name: MIT\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      #No controller specified here, so the Default one must be used\n      #x-router-controller: \"petsController\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      requestBody:\n        description: Pet to add to the store\n        x-name: pet\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n      responses:\n        '201':\n          description: Update status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      #x-router-controller: \"petsController\"\n    delete:\n        description: deletes all the pets\n        operationId: deletePets\n        responses:\n          '204':\n            description: pets deleted\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n        #x-router-controller: \"petsController\"\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        '404':\n          description: pet not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      #x-router-controller: \"petsController\"\n    put:\n      description: updates a pet based on its petId\n      operationId: updatePet\n      parameters:\n          - name: petId\n            in: path\n            description: ID of pet to update\n            required: true\n            schema:\n              type: integer\n              format: int64\n      requestBody:\n        description: Pet to update\n        x-name: pet\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n      responses:\n          '200':\n            description: pet updated\n          '404':\n            description: pet not found\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n      #x-router-controller: \"petsController\"\n    delete:\n      description: deletes a single pet based on the ID supplied\n      operationId: deletePet\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to delete\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: pet deleted\n        '404':\n          description: pet not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      #x-router-controller: \"petsController\"\n  /2.0/pets:\n        get:\n          summary: List all pets\n          operationId: listPets\n          tags:\n            - pets\n          parameters:\n            - name: limit\n              in: query\n              description: How many items to return at one time (max 100)\n              required: true\n              schema:\n                type: integer\n                format: int32\n          responses:\n            '200':\n              description: An paged array of pets\n              headers:\n                x-next:\n                  description: A link to the next page of responses\n                  schema:\n                    type: string\n              content:\n                application/json:\n                  schema:\n                    $ref: \"#/components/schemas/Pets\"\n            default:\n              description: unexpected error\n              content:\n                application/json:\n                  schema:\n                    $ref: \"#/components/schemas/Error\"\n          #No controller specified here, so the Default one must be used\n          #x-router-controller: \"petsController\"\n        post:\n          summary: Create a pet\n          operationId: createPets\n          tags:\n            - pets\n          requestBody:\n            description: Pet to add to the store\n            x-name: pet\n            required: true\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n          responses:\n            '201':\n              description: Update status\n              content:\n                application/json:\n                  schema:\n                    $ref: \"#/components/schemas/Pets\"\n            default:\n              description: unexpected error\n              content:\n                application/json:\n                  schema:\n                    $ref: \"#/components/schemas/Error\"\n          #x-router-controller: \"petsController\"\n        delete:\n            description: deletes all the pets\n            operationId: deletePets\n            responses:\n              '204':\n                description: pets deleted\n              default:\n                description: unexpected error\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Error'\n            #x-router-controller: \"petsController\"\n  /2.0/pets/{petId}:\n        get:\n          summary: Info for a specific pet\n          operationId: showPetById\n          tags:\n            - pets\n          parameters:\n            - name: petId\n              in: path\n              required: true\n              description: The id of the pet to retrieve\n              schema:\n                type: integer\n          responses:\n            '200':\n              description: Expected response to a valid request\n              content:\n                application/json:\n                  schema:\n                    $ref: \"#/components/schemas/Pet\"\n            '404':\n              description: pet not found\n            default:\n              description: unexpected error\n              content:\n                application/json:\n                  schema:\n                    $ref: \"#/components/schemas/Error\"\n          #x-router-controller: \"petsController\"\n        put:\n          description: updates a pet based on its petId\n          operationId: updatePet\n          parameters:\n              - name: petId\n                in: path\n                description: ID of pet to update\n                required: true\n                schema:\n                  type: integer\n                  format: int64\n          requestBody:\n            description: Pet to update\n            x-name: pet\n            required: true\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n          responses:\n              '200':\n                description: pet updated\n              '404':\n                description: pet not found\n              default:\n                description: unexpected error\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Error'\n          #x-router-controller: \"petsController\"\n        delete:\n          description: deletes a single pet based on the ID supplied\n          operationId: deletePet\n          parameters:\n            - name: petId\n              in: path\n              required: true\n              description: The id of the pet to delete\n              schema:\n                type: integer\n          responses:\n            '204':\n              description: pet deleted\n            '404':\n              description: pet not found\n            default:\n              description: unexpected error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Error'\n          #x-router-controller: \"petsController\"\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "parse: paths: /2.0/pets: get: duplicate operationId: \"listPets\""
}