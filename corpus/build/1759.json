{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/societe-generale/sonar-openapi"
		},
		"file": {
			"name": "nosonar-test.yaml",
			"path": "openapi-front-end/src/test/resources/nosonar-test.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\nx-nosonar: [ RuleId1, RuleId2 ]\npaths:\n  /pets:\n    get:\n      x-sonar-enable: RuleId1\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: filter\n          in: query\n          description: attribute on which to filter\n          required: false\n          schema:\n            type: string\n          x-sonar-disable: RuleId3\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n"
		}
	},
	"Error": "parse: paths: /pets: get: listPets: responses: default: content: application/json: schema: parse schema: reference \"#/components/schemas/Error\": resolve reference \"#/components/schemas/Error\": schema not found"
}