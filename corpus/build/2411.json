{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/croct-tech/export-client-java"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "api/openapi.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: apis@croct.com\n    name: Croct\n    url: https://croct.com\n  license:\n    name: MIT\n    url: https://choosealicense.com/licenses/mit\n  title: Croct Export\n  version: 0.2.0\nservers:\n- description: Production endpoint\n  url: https://api.croct.io/export\n- description: Staging endpoint\n  url: https://api.test.croct.io/export\n- description: Local development endpoint\n  url: http://localhost:4000\nsecurity:\n- ApiKeyAuth: []\ntags:\n- name: export\npaths:\n  /events:\n    get:\n      operationId: exportEvents\n      parameters:\n      - explode: true\n        in: query\n        name: start\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: end\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          format: int32\n          maximum: 1000\n          minimum: 1\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: cursor\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: events\n        required: false\n        schema:\n          items:\n            $ref: '#/components/schemas/EventType'\n          type: array\n        style: form\n      responses:\n        \"2XX\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventResponse'\n          description: Success response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiProblem'\n          description: Request error\n      tags:\n      - export\n      x-accepts: application/json\n  /session:\n    get:\n      operationId: exportSessions\n      parameters:\n      - explode: true\n        in: query\n        name: start\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: end\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          format: int32\n          maximum: 1000\n          minimum: 1\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: cursor\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"2XX\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SessionResponse'\n          description: Success response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiProblem'\n          description: Request error\n      tags:\n      - export\n      x-accepts: application/json\n  /user:\n    get:\n      operationId: exportUsers\n      parameters:\n      - explode: true\n        in: query\n        name: start\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: end\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          format: int32\n          maximum: 1000\n          minimum: 1\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: cursor\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"2XX\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: Success response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiProblem'\n          description: Request error\n      tags:\n      - export\n      x-accepts: application/json\ncomponents:\n  parameters:\n    WindowStart:\n      explode: true\n      in: query\n      name: start\n      required: false\n      schema:\n        format: int64\n        type: integer\n      style: form\n    WindowEnd:\n      explode: true\n      in: query\n      name: end\n      required: false\n      schema:\n        format: int64\n        type: integer\n      style: form\n    PageSize:\n      explode: true\n      in: query\n      name: pageSize\n      required: false\n      schema:\n        format: int32\n        maximum: 1000\n        minimum: 1\n        type: integer\n      style: form\n    Cursor:\n      explode: true\n      in: query\n      name: cursor\n      required: false\n      schema:\n        type: string\n      style: form\n    EventFilter:\n      explode: true\n      in: query\n      name: events\n      required: false\n      schema:\n        items:\n          $ref: '#/components/schemas/EventType'\n        type: array\n      style: form\n  responses:\n    ApiProblem:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n      description: Request error\n    EventSuccess:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EventResponse'\n      description: Success response\n    SessionSuccess:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SessionResponse'\n      description: Success response\n    UserSuccess:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserResponse'\n      description: Success response\n  schemas:\n    ApiProblem:\n      additionalProperties: {}\n      properties:\n        title:\n          type: string\n        type:\n          format: url\n          type: string\n        details:\n          type: string\n      required:\n      - title\n      - type\n      type: object\n    Browser:\n      description: The available information about a browser.\n      example:\n        name: name\n        version: version\n      properties:\n        name:\n          description: The name of the browser, non-empty. For example, \"Chrome\".\n          nullable: true\n          type: string\n        version:\n          description: The version of the browser, non-empty. For example, \"79.0.3945.130\",\n            \"11\" or \"160.1\".\n          nullable: true\n          type: string\n        type:\n          $ref: '#/components/schemas/BrowserType'\n      required:\n      - name\n      - type\n      - version\n      type: object\n    BrowserType:\n      description: The type of the browser.\n      enum:\n      - WEB\n      - IN_APP\n      - CRAWLER\n      - OTHER\n      - UNKNOWN\n      type: string\n      x-enum-varnames:\n      - WEB\n      - IN_APP\n      - CRAWLER\n      - OTHER\n      - UNKNOWN\n    Campaign:\n      example:\n        name: name\n        term: term\n        source: source\n        medium: medium\n        content: content\n      properties:\n        name:\n          description: The product promotion or strategic campaign. For example, \"super_promo\".\n          nullable: true\n          type: string\n        source:\n          description: The advertiser that sent traffic to the application. For example,\n            \"newsletter4\".\n          nullable: true\n          type: string\n        medium:\n          description: The advertising or marketing medium. For example, \"email\".\n          nullable: true\n          type: string\n        content:\n          description: The specific content item related the campaign. For example,\n            \"Buy now!\".\n          nullable: true\n          type: string\n        term:\n          description: The search keywords. Foe example, \"web personalization\"\n          nullable: true\n          type: string\n      type: object\n    Cart:\n      description: A shopping cart in an online store.\n      properties:\n        currency:\n          description: The currency in which the monetary values are expressed in\n            the shopping cart. The currency should be specified using the 3-letter\n            currency codes defined by the ISO 4217 standard. For currencies having\n            no official recognition in ISO 4217, as is the case with cryptocurrencies,\n            it is allowed the use of non-ISO codes adopted locally or commercially.\n            For example, \"BRL\" for Brazilian real or \"BTC\" for Bitcoin.\n          type: string\n        items:\n          description: The list of items in the shopping cart.\n          items:\n            $ref: '#/components/schemas/CartItem'\n          type: array\n        subtotal:\n          description: The total of all items and quantities in the shopping cart\n            including applied item promotions. Applied order discounts, estimated\n            shipping, and applied shipping discounts should be excluded from the subtotal\n            amount.\n          format: double\n          nullable: true\n          type: number\n        shippingPrice:\n          description: The total shipping price for the items in the shopping cart,\n            including any handling charges.\n          format: double\n          nullable: true\n          type: number\n        taxes:\n          description: The taxes associated with the transaction.\n          nullable: true\n          type: object\n        costs:\n          description: The costs associated with the transaction, such as manufacturing\n            costs, shipping expenses not borne by the customer, or any other costs.\n          nullable: true\n          type: object\n        discount:\n          description: The amount of the discount applied to the shopping cart.\n          format: double\n          nullable: true\n          type: number\n        total:\n          description: The total revenue or grand total associated with the transaction.\n            It includes shipping, tax, and any other adjustment.\n          format: double\n          type: number\n        coupon:\n          description: The coupon applied to the shopping cart. For example, \"SUPER_DEALS\".\n          nullable: true\n          type: string\n        lastUpdateTime:\n          description: The timestamp when the shopping cart was last updated, in milliseconds\n            since epoch.\n          format: int64\n          type: integer\n      required:\n      - costs\n      - coupon\n      - currency\n      - discount\n      - items\n      - lastUpdateTime\n      - shippingPrice\n      - subtotal\n      - taxes\n      - total\n      type: object\n    CartItem:\n      description: An item in a shopping cart.\n      properties:\n        index:\n          description: The index, starting from zero, representing the order in which\n            the item was added to the shopping cart.\n          format: int32\n          type: integer\n        product:\n          $ref: '#/components/schemas/ProductDetails'\n        quantity:\n          description: The number of units of the item in the shopping cart.\n          format: int32\n          type: integer\n        total:\n          description: The total for the item. It includes discounts and any other\n            adjustment.\n          format: double\n          type: number\n        discount:\n          description: The amount of the discount applied to the item.\n          format: double\n          nullable: true\n          type: number\n        coupon:\n          description: The coupon applied to the item. For example, \"SUPER_DEALS\".\n          nullable: true\n          type: string\n      required:\n      - coupon\n      - discount\n      - index\n      - product\n      - quantity\n      - total\n      type: object\n    CartModified:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a shopping cart was modified.\n      properties:\n        cart:\n          $ref: '#/components/schemas/Cart'\n      required:\n      - cart\n      type: object\n    CartViewed:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a shopping cart was viewed.\n      properties:\n        cart:\n          $ref: '#/components/schemas/Cart'\n      required:\n      - cart\n      type: object\n    CheckoutStarted:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a shopping cart started the checkout process.\n      properties:\n        cart:\n          $ref: '#/components/schemas/Cart'\n        orderId:\n          description: The ID that uniquely identifies the order across the store.\n          format: uuid\n          nullable: true\n          type: string\n      required:\n      - cart\n      - orderId\n      type: object\n    ClientDetected:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that the user's client was detected.\n      properties:\n        client:\n          $ref: '#/components/schemas/WebClient'\n      required:\n      - client\n      type: object\n    Device:\n      description: The available information about a device.\n      example:\n        vendor: vendor\n        name: name\n        operatingSystem:\n          name: name\n          version: version\n      properties:\n        name:\n          description: The name of the device, non-empty. For example, \"Mac\", \"iPhone\"\n            or \"Nexus 10\".\n          nullable: true\n          type: string\n        vendor:\n          description: The vendor of the device, non-empty. For example, \"Apple\",\n            \"Samsung\" or \"LG\".\n          nullable: true\n          type: string\n        category:\n          $ref: '#/components/schemas/DeviceCategory'\n        operatingSystem:\n          $ref: '#/components/schemas/OperatingSystem'\n      required:\n      - category\n      - name\n      - operatingSystem\n      - vendor\n      type: object\n    DeviceCategory:\n      description: The category of the device.\n      enum:\n      - DESKTOP\n      - TABLET\n      - MOBILE\n      - BOT\n      - OTHER\n      - UNKNOWN\n      type: string\n      x-enum-varnames:\n      - DESKTOP\n      - TABLET\n      - MOBILE\n      - BOT\n      - OTHER\n      - UNKNOWN\n    Event:\n      example:\n        payload:\n          '@type': '@type'\n        context:\n          metadata:\n            key: metadata\n          type: web\n        sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        timestamp: 0\n      properties:\n        sessionId:\n          description: The ID of the session assigned to the event.\n          format: uuid\n          type: string\n        userId:\n          description: The internal ID of the user who originated the event.\n          format: uuid\n          type: string\n        timestamp:\n          description: The timestamp when the event was tracked, in milliseconds since\n            epoch.\n          format: int64\n          type: integer\n        context:\n          $ref: '#/components/schemas/EventContext'\n        payload:\n          $ref: '#/components/schemas/EventPayload'\n      required:\n      - context\n      - payload\n      - sessionId\n      - timestamp\n      - userId\n      type: object\n    EventContext:\n      description: The context of the client when the event was tracked.\n      discriminator:\n        mapping:\n          web: '#/components/schemas/WebContext'\n        propertyName: type\n      example:\n        metadata:\n          key: metadata\n        type: web\n      nullable: true\n      properties:\n        type:\n          default: web\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          type: object\n      required:\n      - type\n      type: object\n    EventOccurred:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording a domain-specific occurrence.\n      properties:\n        name:\n          description: The name of the event. For example, \"pollAnswered\" or \"onboardingStarted\".\n          type: string\n        personalizationId:\n          description: The ID of the personalization associated with the event.\n          nullable: true\n          type: string\n        audience:\n          description: The name of the audience associated with the event.\n          nullable: true\n          type: string\n        testId:\n          description: The ID of the test associated with the event.\n          nullable: true\n          type: string\n        groupId:\n          description: The ID of the test group associated with the event, also known\n            as \"variant\".\n          nullable: true\n          type: string\n        details:\n          description: The details about the event.\n          nullable: false\n          type: object\n      required:\n      - audience\n      - details\n      - groupId\n      - name\n      - personalizationId\n      - testId\n      type: object\n    EventPayload:\n      description: The event details, specific to the type of event.\n      discriminator:\n        mapping:\n          userSignedUp: '#/components/schemas/UserSignedUp'\n          userSignedIn: '#/components/schemas/UserSignedIn'\n          userSignedOut: '#/components/schemas/UserSignedOut'\n          tabUrlChanged: '#/components/schemas/TabUrlChanged'\n          tabOpened: '#/components/schemas/TabOpened'\n          tabVisibilityChanged: '#/components/schemas/TabVisibilityChanged'\n          testGroupAssigned: '#/components/schemas/TestGroupAssigned'\n          eventOccurred: '#/components/schemas/EventOccurred'\n          locationDetected: '#/components/schemas/LocationDetected'\n          clientDetected: '#/components/schemas/ClientDetected'\n          goalCompleted: '#/components/schemas/GoalCompleted'\n          pageLoaded: '#/components/schemas/PageLoaded'\n          pageOpened: '#/components/schemas/PageOpened'\n          nothingChanged: '#/components/schemas/NothingChanged'\n          cartModified: '#/components/schemas/CartModified'\n          cartViewed: '#/components/schemas/CartViewed'\n          checkoutStarted: '#/components/schemas/CheckoutStarted'\n          orderPlaced: '#/components/schemas/OrderPlaced'\n          productViewed: '#/components/schemas/ProductViewed'\n        propertyName: '@type'\n      example:\n        '@type': '@type'\n      properties:\n        '@type':\n          type: string\n      required:\n      - '@type'\n      type: object\n    EventResponse:\n      example:\n        nextCursor: nextCursor\n        items:\n        - payload:\n            '@type': '@type'\n          context:\n            metadata:\n              key: metadata\n            type: web\n          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          timestamp: 0\n        - payload:\n            '@type': '@type'\n          context:\n            metadata:\n              key: metadata\n            type: web\n          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          timestamp: 0\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Event'\n          type: array\n        nextCursor:\n          type: string\n      required:\n      - items\n      - nextCursor\n      type: object\n    EventType:\n      enum:\n      - userSignedUp\n      - userSignedIn\n      - userSignedOut\n      - tabOpened\n      - tabUrlChanged\n      - tabVisibilityChanged\n      - locationDetected\n      - clientDetected\n      - pageOpened\n      - pageLoaded\n      - productViewed\n      - cartViewed\n      - cartModified\n      - checkoutStarted\n      - orderPlaced\n      - testGroupAssigned\n      - nothingChanged\n      - goalCompleted\n      - eventOccurred\n      type: string\n      x-enum-varnames:\n      - USER_SIGNED_UP\n      - USER_SIGNED_IN\n      - USER_SIGNED_OUT\n      - TAB_OPENED\n      - TAB_URL_CHANGED\n      - TAB_VISIBILITY_CHANGED\n      - LOCATION_DETECTED\n      - CLIENT_DETECTED\n      - PAGE_OPENED\n      - PAGE_LOADED\n      - PRODUCT_VIEWED\n      - CART_VIEWED\n      - CART_MODIFIED\n      - CHECKOUT_STARTED\n      - ORDER_PLACED\n      - TEST_GROUP_ASSIGNED\n      - NOTHING_CHANGED\n      - GOAL_COMPLETED\n      - EVENT_OCCURRED\n    GeoPoint:\n      description: A geographic location represented by a latitude and longitude coordinates\n        pair.\n      example:\n        latitude: 5.962133916683182\n        longitude: 5.637376656633329\n      nullable: true\n      properties:\n        latitude:\n          description: The latitude of the geo-point, may be either negative or positive.\n          format: double\n          type: number\n        longitude:\n          description: The longitude of the geo-point, may be either negative or positive.\n          format: double\n          type: number\n      required:\n      - latitude\n      - longitude\n      type: object\n    GoalCompleted:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording a completed activity, such as a purchase.\n      properties:\n        goalId:\n          description: The ID of the goal.\n          type: string\n        value:\n          description: The monetary value associated to the completion of the goal.\n            This can represent an estimated value or a symbolic value. For example,\n            if the sales team can close 10% of people who sign up for a newsletter,\n            and the average transaction is $500, then a possible value for newsletter\n            sign-ups can be $50 (i.e., 10% of $500).\n          nullable: true\n          type: string\n        currency:\n          description: The currency in which the monetary value is expressed. The\n            currency should be specified using the 3-letter currency codes defined\n            by the ISO 4217 standard. For currencies having no official recognition\n            in ISO 4217, as is the case with cryptocurrencies, it is allowed the use\n            of non-ISO codes adopted locally or commercially. For example, \"BRL\" for\n            Brazilian real or \"BTC\" for Bitcoin.\n          nullable: true\n          type: string\n      required:\n      - currency\n      - goalId\n      - value\n      type: object\n    Location:\n      description: An identification or estimation of a geographic location of an\n        object.\n      example:\n        country: country\n        city: city\n        timezone: timezone\n        district: district\n        coordinates:\n          latitude: 5.962133916683182\n          longitude: 5.637376656633329\n        region:\n          code: code\n          name: name\n      properties:\n        continent:\n          $ref: '#/components/schemas/LocationContinent'\n        country:\n          description: The highest administrative division, also known as a nation.\n            The value is a two-letter country code, as defined in ISO 3166. For example,\n            US for United States, BR for Brazil and DE for Germany.\n          nullable: true\n          type: string\n        region:\n          $ref: '#/components/schemas/Region'\n        city:\n          description: The name of the incorporated city or town political entity.\n            For example, \"Sao Paulo\".\n          nullable: true\n          type: string\n        district:\n          description: An administrative division smaller than a city and larger than\n            a neighborhood. For example, the district of Manhattan in New York.\n          nullable: true\n          type: string\n        timezone:\n          description: The time-zone ID as defined in IANA Time Zone Database. For\n            example, \"America/New_York\".\n          nullable: true\n          type: string\n        coordinates:\n          $ref: '#/components/schemas/GeoPoint'\n        source:\n          $ref: '#/components/schemas/LocationSource'\n      required:\n      - city\n      - continent\n      - coordinates\n      - country\n      - district\n      - region\n      - source\n      - timezone\n      type: object\n    LocationContinent:\n      description: The continent of the location.\n      enum:\n      - AF\n      - AN\n      - AS\n      - EU\n      - NA\n      - OC\n      - SA\n      nullable: true\n      type: string\n      x-enum-varnames:\n      - AF\n      - AN\n      - AS\n      - EU\n      - NA\n      - OC\n      - SA\n    LocationDetected:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that the location of a user was detected.\n      properties:\n        location:\n          $ref: '#/components/schemas/Location'\n      required:\n      - location\n      type: object\n    LocationSource:\n      description: The source of information used to determine the location.\n      enum:\n      - UNKNOWN\n      - IP\n      - INPUT\n      - BROWSER\n      - GPS\n      nullable: true\n      type: string\n      x-enum-varnames:\n      - UNKNOWN\n      - IP\n      - INPUT\n      - BROWSER\n      - GPS\n    NothingChanged:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording a period of inactivity.\n      properties:\n        sinceTime:\n          description: The timestamp when an activity was last observed, in milliseconds\n            since epoch.\n          format: int64\n          type: integer\n      required:\n      - sinceTime\n      type: object\n    OperatingSystem:\n      description: The available information about an operating system.\n      example:\n        name: name\n        version: version\n      properties:\n        name:\n          description: The name of the operating system, non-empty. For example, \"macOS\",\n            \"iOS\" or \"Android\".\n          nullable: true\n          type: string\n        version:\n          description: The version of operating system, non-empty. For example, \"10.15.1\",\n            \"NT 5.1\" or \"8.4\".\n          nullable: true\n          type: string\n      required:\n      - name\n      - version\n      type: object\n    Order:\n      description: An order placed in an online store.\n      properties:\n        orderId:\n          description: The ID that uniquely identifies the order across the store.\n          format: uuid\n          type: string\n        currency:\n          description: The currency in which the monetary values are expressed in\n            the order. The currency should be specified using the 3-letter currency\n            codes defined by the ISO 4217 standard. For currencies having no official\n            recognition in ISO 4217, as is the case with cryptocurrencies, it is allowed\n            the use of non-ISO codes adopted locally or commercially. For example,\n            \"BRL\" for Brazilian real or \"BTC\" for Bitcoin.\n          type: string\n        items:\n          description: The list of items in the order.\n          items:\n            $ref: '#/components/schemas/OrderItem'\n          type: array\n        subtotal:\n          description: The total of all items and quantities in the order including\n            applied item promotions. Applied order discounts, estimated shipping,\n            and applied shipping discounts should be excluded from the subtotal amount.\n          format: double\n          nullable: true\n          type: number\n        shippingPrice:\n          description: The total shipping price for the order, including any handling\n            charges.\n          format: double\n          nullable: true\n          type: number\n        taxes:\n          description: The taxes associated with the transaction.\n          nullable: true\n          type: object\n        costs:\n          description: The costs associated with the transaction, such as manufacturing\n            costs, shipping expenses not borne by the customer, or any other costs.\n          nullable: true\n          type: object\n        discount:\n          description: The amount of the discount applied to the order.\n          format: double\n          nullable: true\n          type: number\n        total:\n          description: The total revenue or grand total associated with the transaction.\n            It includes shipping, tax, and any other adjustment.\n          format: double\n          type: number\n        coupon:\n          description: The coupon applied to the order. For example, \"SUPER_DEALS\".\n          nullable: true\n          type: string\n        paymentMethod:\n          description: The payment method used in the payment. For example, \"Credit\n            Card\", \"Paypal\" or \"Wallet\".\n          nullable: true\n          type: string\n        installments:\n          description: The number of installments of the transaction, non-negative.\n          format: int32\n          nullable: true\n          type: integer\n        status:\n          $ref: '#/components/schemas/OrderStatus'\n      required:\n      - costs\n      - coupon\n      - currency\n      - discount\n      - installments\n      - items\n      - orderId\n      - paymentMethod\n      - shippingPrice\n      - status\n      - subtotal\n      - taxes\n      - total\n      type: object\n    OrderItem:\n      description: An item of an order.\n      properties:\n        index:\n          description: The index, starting from zero, representing the order in which\n            the item was added to the shopping cart.\n          format: int32\n          type: integer\n        product:\n          $ref: '#/components/schemas/ProductDetails'\n        quantity:\n          description: The number of units of the item ordered.\n          format: int32\n          type: integer\n        total:\n          description: The total for the item. It includes discounts and any other\n            adjustment.\n          format: double\n          type: number\n        discount:\n          description: The amount of the discount applied to the item.\n          format: double\n          nullable: true\n          type: number\n        coupon:\n          description: The coupon applied to the item. For example, \"SUPER_DEALS\".\n          nullable: true\n          type: string\n      required:\n      - coupon\n      - discount\n      - index\n      - product\n      - quantity\n      - total\n      type: object\n    OrderPlaced:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that an order was placed.\n      properties:\n        order:\n          $ref: '#/components/schemas/Order'\n      required:\n      - order\n      type: object\n    OrderStatus:\n      description: The current status of the order.\n      enum:\n      - PLACED\n      - PAID\n      - COMPLETED\n      nullable: true\n      type: string\n      x-enum-varnames:\n      - PLACED\n      - PAID\n      - COMPLETED\n    PageLoaded:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a page was loaded.\n      properties:\n        url:\n          description: The URL of the page.\n          format: uri\n          pattern: ^https?://\n          type: string\n        title:\n          description: The title of the page.\n          type: string\n        lastModifiedTime:\n          description: The last time the page was modified.\n          format: int64\n          type: integer\n      required:\n      - lastModifiedTime\n      - title\n      - url\n      type: object\n    PageOpened:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a page was opened.\n      properties:\n        url:\n          description: The URL of the page.\n          format: uri\n          pattern: ^https?://\n          type: string\n        userAgent:\n          description: The user-agent of the client.\n          nullable: true\n          type: string\n        preferredLanguages:\n          description: An ordered list of the user's preferred languages.\n          nullable: true\n          type: string\n        referrer:\n          description: The URI of the page that linked to the page that was opened.\n            The value is null when the user navigated to the page directly (not through\n            a link, but by using a bookmark, for example).\n          format: uri\n          nullable: true\n          type: string\n      required:\n      - preferredLanguages\n      - referrer\n      - url\n      - userAgent\n      type: object\n    ProductDetails:\n      description: The detailed information of a product.\n      properties:\n        productId:\n          description: The ID that uniquely identifies the product across the store,\n            non-empty. For example, \"3108\" or \"yO7q4r\".\n          type: string\n        sku:\n          description: The code that uniquely identifies the product variant across\n            the store, non-empty. For example, \"IPH-GRE-64\".\n          nullable: true\n          type: string\n        name:\n          description: The name of the product, non-empty. For example \"iPhone\".\n          type: string\n        category:\n          description: The category of the product, non-empty. For example, \"Phone\".\n          nullable: true\n          type: string\n        brand:\n          description: The brand associated with the product. For example, \"Apple\".\n          nullable: true\n          type: string\n        variant:\n          description: The variant of the product, such as size, color and style.\n            For example, \"64GB Green\".\n          nullable: true\n          type: string\n        displayPrice:\n          description: The price of the product displayed in the store. For example,\n            59.90.\n          format: double\n          type: number\n        originalPrice:\n          description: The original price of the product. For example, 99.90.\n          format: double\n          nullable: true\n          type: number\n        url:\n          description: The URL of the product page. For example, \"https://apple.com/iphone\".\n          nullable: true\n          type: string\n        imageUrl:\n          description: The URL of the main product image. For example, \"https://img.apple.com/iphone.png\".\n          nullable: true\n          type: string\n      required:\n      - brand\n      - category\n      - displayPrice\n      - imageUrl\n      - name\n      - originalPrice\n      - productId\n      - sku\n      - url\n      - variant\n      type: object\n    ProductViewed:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a shopping cart was modified.\n      properties:\n        product:\n          $ref: '#/components/schemas/ProductDetails'\n      required:\n      - product\n      type: object\n    Region:\n      description: A subsection of a country, typically a state or province.\n      example:\n        code: code\n        name: name\n      properties:\n        name:\n          description: The subdivision name, non-empty. For example, \"Sao Paulo\".\n          nullable: true\n          type: string\n        code:\n          description: The 2-letter code as defined by the ISO 3166-2 standard. For\n            example, \"SP\".\n          nullable: true\n          type: string\n      required:\n      - code\n      - name\n      type: object\n    Session:\n      example:\n        sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        referrer: referrer\n        isAnonymous: true\n        closeTime: 1\n        campaign:\n          name: name\n          term: term\n          source: source\n          medium: medium\n          content: content\n        client:\n          browser:\n            name: name\n            version: version\n          device:\n            vendor: vendor\n            name: name\n            operatingSystem:\n              name: name\n              version: version\n        location:\n          country: country\n          city: city\n          timezone: timezone\n          district: district\n          coordinates:\n            latitude: 5.962133916683182\n            longitude: 5.637376656633329\n          region:\n            code: code\n            name: name\n        attributes:\n          key: \"\"\n        window:\n          start: 0\n          end: 6\n        landingPageUrl: landingPageUrl\n        statistics:\n          pageViews: 2\n          tabViews: 7\n          orders: 9\n      properties:\n        sessionId:\n          description: The ID that uniquely identifies the session across the application.\n          format: uuid\n          type: string\n        userId:\n          description: The ID that uniquely identifies the user across the cluster.\n          format: uuid\n          type: string\n        parentId:\n          description: The ID of the session that superseded this session. Usually,\n            a session receives a parent ID when a user is identified, causing the\n            current anonymous session to end and a new identified session to begin.\n            In this case, the ID of the new session is assigned as the parent ID of\n            the anonymous session.\n          format: uuid\n          nullable: true\n          type: string\n        isAnonymous:\n          description: The flag that indicates whether the user is anonymous.\n          type: boolean\n        window:\n          $ref: '#/components/schemas/Session_window'\n        closeTime:\n          description: The time from which the session is closed for new events, but\n            still may accept late-arriving events. The close time may be extended\n            if new events arrive before the session is closed.\n          format: int64\n          type: integer\n        referrer:\n          description: The URI of the content that linked to the page that started\n            the session.\n          nullable: true\n          type: string\n        landingPageUrl:\n          description: The page that started the session.\n          nullable: true\n          type: string\n        campaign:\n          $ref: '#/components/schemas/Campaign'\n        location:\n          $ref: '#/components/schemas/Location'\n        client:\n          $ref: '#/components/schemas/WebClient'\n        attributes:\n          additionalProperties:\n            nullable: true\n          description: The custom attributes.\n          type: object\n        statistics:\n          $ref: '#/components/schemas/Session_statistics'\n      required:\n      - organizationId\n      type: object\n    SessionResponse:\n      example:\n        nextCursor: nextCursor\n        items:\n        - sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          referrer: referrer\n          isAnonymous: true\n          closeTime: 1\n          campaign:\n            name: name\n            term: term\n            source: source\n            medium: medium\n            content: content\n          client:\n            browser:\n              name: name\n              version: version\n            device:\n              vendor: vendor\n              name: name\n              operatingSystem:\n                name: name\n                version: version\n          location:\n            country: country\n            city: city\n            timezone: timezone\n            district: district\n            coordinates:\n              latitude: 5.962133916683182\n              longitude: 5.637376656633329\n            region:\n              code: code\n              name: name\n          attributes:\n            key: \"\"\n          window:\n            start: 0\n            end: 6\n          landingPageUrl: landingPageUrl\n          statistics:\n            pageViews: 2\n            tabViews: 7\n            orders: 9\n        - sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          referrer: referrer\n          isAnonymous: true\n          closeTime: 1\n          campaign:\n            name: name\n            term: term\n            source: source\n            medium: medium\n            content: content\n          client:\n            browser:\n              name: name\n              version: version\n            device:\n              vendor: vendor\n              name: name\n              operatingSystem:\n                name: name\n                version: version\n          location:\n            country: country\n            city: city\n            timezone: timezone\n            district: district\n            coordinates:\n              latitude: 5.962133916683182\n              longitude: 5.637376656633329\n            region:\n              code: code\n              name: name\n          attributes:\n            key: \"\"\n          window:\n            start: 0\n            end: 6\n          landingPageUrl: landingPageUrl\n          statistics:\n            pageViews: 2\n            tabViews: 7\n            orders: 9\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Session'\n          type: array\n        nextCursor:\n          type: string\n      required:\n      - items\n      - nextCursor\n      type: object\n    TabOpened:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a new tab was opened.\n      properties:\n        tabId:\n          description: The ID that uniquely identifies the tab across the session.\n          format: uuid\n          type: string\n      required:\n      - tabId\n      type: object\n    TabUrlChanged:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that the URL of a tab has changed.\n      properties:\n        tabId:\n          description: The ID that uniquely identifies the tab across the session.\n          format: uuid\n          type: string\n        url:\n          description: The URL the page that the tab was on.\n          format: uri\n          pattern: ^https?://\n          type: string\n      required:\n      - tabId\n      - url\n      type: object\n    TabVisibility:\n      description: The visibility of the tab.\n      enum:\n      - VISIBLE\n      - HIDDEN\n      type: string\n      x-enum-varnames:\n      - VISIBLE\n      - HIDDLE\n    TabVisibilityChanged:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that the visibility of a tab has changed.\n      properties:\n        tabId:\n          description: The ID that uniquely identifies the tab across the session.\n          format: uuid\n          type: string\n        visibility:\n          $ref: '#/components/schemas/TabVisibility'\n      required:\n      - tabId\n      - visibility\n      type: object\n    TestGroupAssigned:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a test group was assigned to a user.\n      properties:\n        testId:\n          description: The ID of the test. For example, \"black-friday-banner\" or \"home-banner-cta\".\n          type: string\n        groupId:\n          description: The ID of the test group, also known as \"variant\". For example,\n            \"black-friday-promo\" or \"black-friday-shipping\".\n          type: string\n      required:\n      - groupId\n      - testId\n      type: object\n    User:\n      example:\n        lastName: lastName\n        alternateEmail: alternateEmail\n        address:\n          country: country\n          city: city\n          street: street\n          district: district\n          postalCode: postalCode\n          region: region\n        lastModifiedTime: 6\n        gender: gender\n        jobTitle: jobTitle\n        alternatePhone: alternatePhone\n        avatar: avatar\n        companyUrl: companyUrl\n        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        birthDate: 0\n        firstName: firstName\n        externalUserId: externalUserId\n        phone: phone\n        activities: activities\n        company: company\n        interests: interests\n        email: email\n        customAttributes:\n          key: \"\"\n        statistics:\n          sessions: 5\n          orders: 1\n      properties:\n        userId:\n          description: The internal ID assigned to the user, unique across the cluster.\n          format: uuid\n          type: string\n        externalUserId:\n          description: The external user ID that is used to identify the user on the\n            application side, unique across the cluster. It is always null for anonymous\n            users.\n          nullable: true\n          type: string\n        firstName:\n          description: The first name attribute.\n          nullable: true\n          type: string\n        lastName:\n          description: The last name attribute.\n          nullable: true\n          type: string\n        birthDate:\n          description: The birth date attribute.\n          format: int64\n          nullable: true\n          type: integer\n        gender:\n          description: The gender attribute.\n          nullable: true\n          type: string\n        email:\n          description: The email attribute.\n          nullable: true\n          type: string\n        alternateEmail:\n          description: The alternate email attribute.\n          nullable: true\n          type: string\n        phone:\n          description: The phone attribute.\n          nullable: true\n          type: string\n        alternatePhone:\n          description: The alternate phone attribute.\n          nullable: true\n          type: string\n        address:\n          $ref: '#/components/schemas/User_address'\n        avatar:\n          description: The avatar attribute.\n          nullable: true\n          type: string\n        company:\n          description: The company attribute.\n          nullable: true\n          type: string\n        companyUrl:\n          description: The company URL attribute.\n          nullable: true\n          type: string\n        jobTitle:\n          description: The job title attribute.\n          nullable: true\n          type: string\n        activities:\n          description: The activities attribute.\n          nullable: true\n          type: string\n        interests:\n          description: The interests attribute.\n          nullable: true\n          type: string\n        customAttributes:\n          additionalProperties: {}\n          description: The custom attributes.\n          type: object\n        lastModifiedTime:\n          description: The timestamp when the user was last modified, in milliseconds\n            since epoch. It is not updated on sync.\n          format: int64\n          type: integer\n        statistics:\n          $ref: '#/components/schemas/User_statistics'\n      type: object\n    UserResponse:\n      example:\n        nextCursor: nextCursor\n        items:\n        - lastName: lastName\n          alternateEmail: alternateEmail\n          address:\n            country: country\n            city: city\n            street: street\n            district: district\n            postalCode: postalCode\n            region: region\n          lastModifiedTime: 6\n          gender: gender\n          jobTitle: jobTitle\n          alternatePhone: alternatePhone\n          avatar: avatar\n          companyUrl: companyUrl\n          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          birthDate: 0\n          firstName: firstName\n          externalUserId: externalUserId\n          phone: phone\n          activities: activities\n          company: company\n          interests: interests\n          email: email\n          customAttributes:\n            key: \"\"\n          statistics:\n            sessions: 5\n            orders: 1\n        - lastName: lastName\n          alternateEmail: alternateEmail\n          address:\n            country: country\n            city: city\n            street: street\n            district: district\n            postalCode: postalCode\n            region: region\n          lastModifiedTime: 6\n          gender: gender\n          jobTitle: jobTitle\n          alternatePhone: alternatePhone\n          avatar: avatar\n          companyUrl: companyUrl\n          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          birthDate: 0\n          firstName: firstName\n          externalUserId: externalUserId\n          phone: phone\n          activities: activities\n          company: company\n          interests: interests\n          email: email\n          customAttributes:\n            key: \"\"\n          statistics:\n            sessions: 5\n            orders: 1\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/User'\n          type: array\n        nextCursor:\n          type: string\n      required:\n      - items\n      - nextCursor\n      type: object\n    UserSignedIn:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a user has signed in.\n      properties:\n        externalUserId:\n          description: The external ID of the user.\n          type: string\n      required:\n      - externalUserId\n      type: object\n    UserSignedOut:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a user has signed out.\n      properties:\n        externalUserId:\n          description: The external ID of the user.\n          type: string\n      required:\n      - externalUserId\n      type: object\n    UserSignedUp:\n      allOf:\n      - $ref: '#/components/schemas/EventPayload'\n      description: An event recording that a user has signed up.\n      properties:\n        externalUserId:\n          description: The external ID of the user.\n          type: string\n      required:\n      - externalUserId\n      type: object\n    WebClient:\n      description: The available information about a web client.\n      example:\n        browser:\n          name: name\n          version: version\n        device:\n          vendor: vendor\n          name: name\n          operatingSystem:\n            name: name\n            version: version\n      properties:\n        browser:\n          $ref: '#/components/schemas/Browser'\n        device:\n          $ref: '#/components/schemas/Device'\n      required:\n      - browser\n      - device\n      type: object\n    WebContext:\n      allOf:\n      - $ref: '#/components/schemas/EventContext'\n      description: The context of the web client at the time the event was tracked.\n      properties:\n        tabId:\n          description: The ID that uniquely identifies the tab across the session.\n          format: uuid\n          type: string\n        url:\n          description: The URL of the page that the client was on.\n          format: uri\n          pattern: ^https?://\n          type: string\n      required:\n      - tabId\n      - url\n      type: object\n    Session_window:\n      description: The time window covering the first and last event of the session.\n      example:\n        start: 0\n        end: 6\n      properties:\n        start:\n          format: int64\n          type: integer\n        end:\n          format: int64\n          type: integer\n      type: object\n    Session_statistics:\n      description: The aggregated statistics of the session.\n      example:\n        pageViews: 2\n        tabViews: 7\n        orders: 9\n      properties:\n        pageViews:\n          description: The total number of page views.\n          format: int32\n          type: integer\n        tabViews:\n          description: The total number of tab views.\n          format: int32\n          type: integer\n        orders:\n          description: The total number of orders placed.\n          format: int32\n          type: integer\n      type: object\n    User_address:\n      description: The address attribute.\n      example:\n        country: country\n        city: city\n        street: street\n        district: district\n        postalCode: postalCode\n        region: region\n      properties:\n        street:\n          nullable: true\n          type: string\n        district:\n          nullable: true\n          type: string\n        city:\n          nullable: true\n          type: string\n        region:\n          nullable: true\n          type: string\n        country:\n          nullable: true\n          type: string\n        postalCode:\n          nullable: true\n          type: string\n      type: object\n    User_statistics:\n      description: The aggregated statistics of the user.\n      example:\n        sessions: 5\n        orders: 1\n      properties:\n        orders:\n          description: The total number of orders placed across all applications in\n            a cluster.\n          format: int32\n          type: integer\n        sessions:\n          description: The total number of sessions across all applications in a cluster.\n          format: int32\n          type: integer\n      type: object\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-Api-Key\n      type: apiKey\n\n"
		}
	},
	"Error": "make ir: path \"/events\": get: responses: parse response status code: strconv.Atoi: parsing \"2XX\": invalid syntax"
}