{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kube-HPC/hkube"
		},
		"file": {
			"name": "swagger.json",
			"path": "core/api-server/api/rest-api/swagger.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"HKube API\",\n    \"description\": \"HKube RESTful API\",\n    \"version\": \"2.2.10\",\n    \"contact\": {\n      \"email\": \"hkube.dev@gmail.com\"\n    },\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"https://opensource.org/licenses/MIT\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"Execution\",\n      \"description\": \"Execution pipelines as raw or stored\"\n    },\n    {\n      \"name\": \"Graph\",\n      \"description\": \"Query the pipeline graph\"\n    },\n    {\n      \"name\": \"Builds\",\n      \"description\": \"status, rerun and stop builds\"\n    },\n    {\n      \"name\": \"Versions\",\n      \"description\": \"Versioning for algorithms\"\n    },\n    {\n      \"name\": \"Cron\",\n      \"description\": \"Get pipelines cron result and status\"\n    },\n    {\n      \"name\": \"DataSource\",\n      \"description\": \"DataSources and their related files\"\n    },\n    {\n      \"name\": \"GC\",\n      \"description\": \"Hkube garbage collector operations\"\n    },\n    {\n      \"name\": \"Pipelines\",\n      \"description\": \"Get pipelines status and result\"\n    },\n    {\n      \"name\": \"Pipeline Readme\",\n      \"description\": \"Store readme for pipelines\"\n    },\n    {\n      \"name\": \"Algorithm Readme\",\n      \"description\": \"Store readme for algorithms\"\n    },\n    {\n      \"name\": \"Storage\",\n      \"description\": \"Query the storage\"\n    },\n    {\n      \"name\": \"StoreAlgorithms\",\n      \"description\": \"Store new algorithms, update, get and delete\"\n    },\n    {\n      \"name\": \"StorePipelines\",\n      \"description\": \"Store new pipelines, update, get and delete\"\n    },\n    {\n      \"name\": \"Webhooks\",\n      \"description\": \"Webhooks status and result\"\n    }\n  ],\n  \"externalDocs\": {\n    \"description\": \"Find out more about Hkube\",\n    \"url\": \"http://hkube.io\"\n  },\n  \"servers\": [],\n  \"paths\": {\n    \"/exec/raw\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Run raw pipeline\",\n        \"description\": \"Start pipeline execution with raw input, returns jobId that can be used as a reference for the pipeline to do actions such as results/status/stop, etc.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"default\": \"batch\",\n                    \"example\": \"batch\",\n                    \"enum\": [\n                      \"batch\",\n                      \"stream\"\n                    ]\n                  },\n                  \"experimentName\": {\n                    \"type\": \"string\",\n                    \"description\": \"experiment name\",\n                    \"default\": \"main\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"experiment-name\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"pipeline description\"\n                  },\n                  \"nodes\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of nodes\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"nodeName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique node identifier\",\n                          \"minLength\": 1\n                        },\n                        \"algorithmName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific algorithm\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"algorithm-name\"\n                        },\n                        \"input\": {\n                          \"type\": \"array\",\n                          \"description\": \"The input for the algorithm\",\n                          \"items\": {},\n                          \"default\": []\n                        },\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                          \"minimum\": 0,\n                          \"example\": 0\n                        },\n                        \"includeInResult\": {\n                          \"type\": \"boolean\"\n                        },\n                        \"metrics\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"tensorboard\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"Should tensorboard metrics be collected.\"\n                            }\n                          }\n                        },\n                        \"retry\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"policy\": {\n                              \"type\": \"string\",\n                              \"default\": \"OnCrash\",\n                              \"enum\": [\n                                \"Never\",\n                                \"Always\",\n                                \"OnError\",\n                                \"OnCrash\"\n                              ]\n                            },\n                            \"limit\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"default\": 3,\n                              \"example\": 1\n                            }\n                          }\n                        },\n                        \"batchOperation\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"indexed\",\n                            \"cartesian\"\n                          ]\n                        },\n                        \"kind\": {\n                          \"type\": \"string\",\n                          \"default\": \"algorithm\",\n                          \"enum\": [\n                            \"algorithm\",\n                            \"pipeline\",\n                            \"debug\",\n                            \"dataSource\",\n                            \"gateway\",\n                            \"output\",\n                            \"hyperparamsTuner\"\n                          ]\n                        },\n                        \"spec\": {\n                          \"anyOf\": [\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Unique identifier representing a specific pipeline\",\n                                  \"minLength\": 1,\n                                  \"format\": \"pipeline-name\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"id\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"name\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                },\n                                \"snapshot\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    }\n                                  }\n                                }\n                              },\n                              \"required\": [\n                                \"name\",\n                                \"snapshot\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the output\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for output\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"nodeName\"\n                      ]\n                    }\n                  },\n                  \"flowInput\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"input object\"\n                  },\n                  \"webhooks\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"progress\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon progress\",\n                        \"example\": \"http://my-url-to-progress\"\n                      },\n                      \"result\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon result\",\n                        \"example\": \"http://my-url-to-result\"\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"options\": {\n                    \"default\": {},\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"ttl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                        \"minimum\": 1,\n                        \"default\": 3600,\n                        \"example\": 3600\n                      },\n                      \"activeTtl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline active time to live in seconds (only active state)\",\n                        \"nullable\": true,\n                        \"minimum\": 1,\n                        \"example\": 3600\n                      },\n                      \"batchTolerance\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0,\n                        \"maximum\": 100,\n                        \"default\": 80,\n                        \"example\": 80\n                      },\n                      \"concurrentPipelines\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"amount\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1,\n                            \"maximum\": 10000,\n                            \"example\": 1\n                          },\n                          \"rejectOnFailure\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                          }\n                        },\n                        \"additionalProperties\": false\n                      },\n                      \"progressVerbosityLevel\": {\n                        \"type\": \"string\",\n                        \"default\": \"info\",\n                        \"example\": \"info\",\n                        \"enum\": [\n                          \"trace\",\n                          \"debug\",\n                          \"info\",\n                          \"warn\",\n                          \"error\",\n                          \"critical\"\n                        ]\n                      },\n                      \"debugOverride\": {\n                        \"type\": \"array\",\n                        \"description\": \"A list of algorithms to debug in this execution\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"uniqueItems\": true\n                      }\n                    },\n                    \"description\": \"optional properties\"\n                  },\n                  \"priority\": {\n                    \"default\": 3,\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"maximum\": 5,\n                    \"example\": 3\n                  },\n                  \"triggers\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"pipelines\": {\n                        \"type\": \"array\",\n                        \"description\": \"pipelines to activate upon result\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"uniqueItems\": true\n                      },\n                      \"cron\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"pattern\": {\n                            \"type\": \"string\",\n                            \"description\": \"cron job\",\n                            \"minLength\": 1,\n                            \"format\": \"cron\"\n                          },\n                          \"enabled\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"enable or disable cron job\",\n                            \"default\": false\n                          }\n                        }\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of tags\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific tag\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32\n                    }\n                  },\n                  \"rootJobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"the root job id of the current tree\"\n                  },\n                  \"streaming\": {\n                    \"type\": \"object\",\n                    \"description\": \"streaming options\",\n                    \"properties\": {\n                      \"defaultFlow\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the default stream flow\"\n                      },\n                      \"flows\": {\n                        \"type\": \"object\",\n                        \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                        \"example\": {\n                          \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                          \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                        }\n                      }\n                    }\n                  },\n                  \"edges\": {\n                    \"type\": \"array\",\n                    \"description\": \"edges define relation between nodes\",\n                    \"items\": {},\n                    \"example\": [\n                      {\n                        \"source\": \"A\",\n                        \"target\": \"B\"\n                      }\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for pipeline execution\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline execution data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    }\n                  },\n                  \"required\": [\n                    \"jobId\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/stored\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Run stored pipeline\",\n        \"description\": \"Start pipeline execution when the name of the pipeline is known, all parameters in this action will be merged with the stored pipeline and then returns jobId that can be used as a reference for the pipeline to do actions such as results/status/stop, etc.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"default\": \"batch\",\n                    \"example\": \"batch\",\n                    \"enum\": [\n                      \"batch\",\n                      \"stream\"\n                    ]\n                  },\n                  \"experimentName\": {\n                    \"type\": \"string\",\n                    \"description\": \"experiment name\",\n                    \"default\": \"main\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"experiment-name\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"pipeline description\"\n                  },\n                  \"nodes\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of nodes\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"nodeName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique node identifier\",\n                          \"minLength\": 1\n                        },\n                        \"algorithmName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific algorithm\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"algorithm-name\"\n                        },\n                        \"input\": {\n                          \"type\": \"array\",\n                          \"description\": \"The input for the algorithm\",\n                          \"items\": {},\n                          \"default\": []\n                        },\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                          \"minimum\": 0,\n                          \"example\": 0\n                        },\n                        \"includeInResult\": {\n                          \"type\": \"boolean\"\n                        },\n                        \"metrics\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"tensorboard\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"Should tensorboard metrics be collected.\"\n                            }\n                          }\n                        },\n                        \"retry\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"policy\": {\n                              \"type\": \"string\",\n                              \"default\": \"OnCrash\",\n                              \"enum\": [\n                                \"Never\",\n                                \"Always\",\n                                \"OnError\",\n                                \"OnCrash\"\n                              ]\n                            },\n                            \"limit\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"default\": 3,\n                              \"example\": 1\n                            }\n                          }\n                        },\n                        \"batchOperation\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"indexed\",\n                            \"cartesian\"\n                          ]\n                        },\n                        \"kind\": {\n                          \"type\": \"string\",\n                          \"default\": \"algorithm\",\n                          \"enum\": [\n                            \"algorithm\",\n                            \"pipeline\",\n                            \"debug\",\n                            \"dataSource\",\n                            \"gateway\",\n                            \"output\",\n                            \"hyperparamsTuner\"\n                          ]\n                        },\n                        \"spec\": {\n                          \"anyOf\": [\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Unique identifier representing a specific pipeline\",\n                                  \"minLength\": 1,\n                                  \"format\": \"pipeline-name\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"id\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"name\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                },\n                                \"snapshot\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    }\n                                  }\n                                }\n                              },\n                              \"required\": [\n                                \"name\",\n                                \"snapshot\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the output\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for output\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"nodeName\"\n                      ]\n                    }\n                  },\n                  \"flowInput\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"input object\"\n                  },\n                  \"webhooks\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"progress\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon progress\",\n                        \"example\": \"http://my-url-to-progress\"\n                      },\n                      \"result\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon result\",\n                        \"example\": \"http://my-url-to-result\"\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"options\": {\n                    \"default\": {},\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"ttl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                        \"minimum\": 1,\n                        \"default\": 3600,\n                        \"example\": 3600\n                      },\n                      \"activeTtl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline active time to live in seconds (only active state)\",\n                        \"nullable\": true,\n                        \"minimum\": 1,\n                        \"example\": 3600\n                      },\n                      \"batchTolerance\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0,\n                        \"maximum\": 100,\n                        \"default\": 80,\n                        \"example\": 80\n                      },\n                      \"concurrentPipelines\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"amount\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1,\n                            \"maximum\": 10000,\n                            \"example\": 1\n                          },\n                          \"rejectOnFailure\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                          }\n                        },\n                        \"additionalProperties\": false\n                      },\n                      \"progressVerbosityLevel\": {\n                        \"type\": \"string\",\n                        \"default\": \"info\",\n                        \"example\": \"info\",\n                        \"enum\": [\n                          \"trace\",\n                          \"debug\",\n                          \"info\",\n                          \"warn\",\n                          \"error\",\n                          \"critical\"\n                        ]\n                      },\n                      \"debugOverride\": {\n                        \"type\": \"array\",\n                        \"description\": \"A list of algorithms to debug in this execution\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"uniqueItems\": true\n                      }\n                    },\n                    \"description\": \"optional properties\"\n                  },\n                  \"priority\": {\n                    \"default\": 3,\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"maximum\": 5,\n                    \"example\": 3\n                  },\n                  \"triggers\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"pipelines\": {\n                        \"type\": \"array\",\n                        \"description\": \"pipelines to activate upon result\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"uniqueItems\": true\n                      },\n                      \"cron\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"pattern\": {\n                            \"type\": \"string\",\n                            \"description\": \"cron job\",\n                            \"minLength\": 1,\n                            \"format\": \"cron\"\n                          },\n                          \"enabled\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"enable or disable cron job\",\n                            \"default\": false\n                          }\n                        }\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of tags\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific tag\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32\n                    }\n                  },\n                  \"rootJobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"the root job id of the current tree\"\n                  },\n                  \"streaming\": {\n                    \"type\": \"object\",\n                    \"description\": \"streaming options\",\n                    \"properties\": {\n                      \"defaultFlow\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the default stream flow\"\n                      },\n                      \"flows\": {\n                        \"type\": \"object\",\n                        \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                        \"example\": {\n                          \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                          \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                        }\n                      }\n                    }\n                  },\n                  \"edges\": {\n                    \"type\": \"array\",\n                    \"description\": \"edges define relation between nodes\",\n                    \"items\": {},\n                    \"example\": [\n                      {\n                        \"source\": \"A\",\n                        \"target\": \"B\"\n                      }\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for stored pipeline execution\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline execution data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    }\n                  },\n                  \"required\": [\n                    \"jobId\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/caching\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Run job from a specific node\",\n        \"description\": \"the api allows you to run job from current node and getting the data of the predecessors from caching of the previous run\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing pipeline execution\"\n                  },\n                  \"nodeName\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique node identifier\",\n                    \"minLength\": 1\n                  },\n                  \"debug\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Run as debug\"\n                  }\n                },\n                \"additionalProperties\": false,\n                \"required\": [\n                  \"jobId\",\n                  \"nodeName\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for stored pipeline execution\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline execution data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    }\n                  },\n                  \"required\": [\n                    \"jobId\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"node Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/algorithm\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Run algorithm\",\n        \"description\": \"Start execution for single algorithm.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific algorithm\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"algorithm-name\"\n                  },\n                  \"input\": {\n                    \"type\": \"array\",\n                    \"description\": \"The input for the algorithm\",\n                    \"items\": {},\n                    \"default\": []\n                  },\n                  \"debug\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Is debug algorithm\",\n                    \"default\": false\n                  }\n                },\n                \"additionalProperties\": false,\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for algorithm execution request\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline execution data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    }\n                  },\n                  \"required\": [\n                    \"jobId\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/rerun\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Rerun pipeline\",\n        \"description\": \"Rerun pipeline\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing pipeline execution\"\n                  }\n                },\n                \"additionalProperties\": false,\n                \"required\": [\n                  \"jobId\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline execution data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    }\n                  },\n                  \"required\": [\n                    \"jobId\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/stop\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Stop pipeline\",\n        \"description\": \"Call to stop pipeline execution\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing pipeline execution\"\n                  },\n                  \"reason\": {\n                    \"type\": \"string\",\n                    \"default\": \"requested by user\",\n                    \"description\": \"reason for stop pipeline\"\n                  }\n                },\n                \"required\": [\n                  \"jobId\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the OK string\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/pause\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Pause pipeline\",\n        \"description\": \"Call to pause pipeline execution\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing pipeline execution\"\n                  }\n                },\n                \"required\": [\n                  \"jobId\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the OK string\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/resume\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Resume pipeline\",\n        \"description\": \"Call to resume pipeline execution\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing pipeline execution\"\n                  }\n                },\n                \"required\": [\n                  \"jobId\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the OK string\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/search\": {\n      \"post\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Search jobs\",\n        \"description\": \"Search jobs\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"query\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"experimentName\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipelineName\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipelineType\": {\n                        \"type\": \"string\"\n                      },\n                      \"algorithmName\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipelineStatus\": {\n                        \"type\": \"string\"\n                      },\n                      \"datesRange\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"from\": {\n                            \"type\": \"string\",\n                            \"example\": \"2021-03-11T14:30:00\"\n                          },\n                          \"to\": {\n                            \"type\": \"string\",\n                            \"example\": \"2021-03-11T14:30:00\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"cursor\": {\n                    \"type\": \"string\",\n                    \"description\": \"get the next results starting from this cursor\"\n                  },\n                  \"pageNum\": {\n                    \"type\": \"integer\",\n                    \"description\": \"get the next results starting from this page number\"\n                  },\n                  \"sort\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"asc\",\n                      \"desc\"\n                    ],\n                    \"default\": \"desc\"\n                  },\n                  \"limit\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 100,\n                    \"default\": 100,\n                    \"example\": 100,\n                    \"description\": \"limit the result size\"\n                  },\n                  \"fields\": {\n                    \"type\": \"object\",\n                    \"description\": \"select which fields to return\"\n                  },\n                  \"exists\": {\n                    \"type\": \"object\",\n                    \"description\": \"only return records that has fields\"\n                  }\n                },\n                \"example\": {\n                  \"query\": {\n                    \"datesRange\": {\n                      \"from\": \"2021-05-22T15:00:00\",\n                      \"to\": \"2021-06-22T16:00:00\"\n                    },\n                    \"experimentName\": \"main\",\n                    \"pipelineName\": \"simple\",\n                    \"pipelineType\": \"stored\",\n                    \"algorithmName\": \"green-alg\",\n                    \"pipelineStatus\": \"completed\"\n                  },\n                  \"sort\": \"desc\",\n                  \"pageNum\": 1,\n                  \"limit\": 2,\n                  \"fields\": {\n                    \"jobId\": true\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"jobs search specification\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"search jobs response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"hits\": {\n                      \"type\": \"array\",\n                      \"description\": \"the actual result records\",\n                      \"items\": {}\n                    },\n                    \"cursor\": {\n                      \"type\": \"string\",\n                      \"description\": \"this cursor to the next query can be used for pagination\"\n                    },\n                    \"timeTook\": {\n                      \"type\": \"string\",\n                      \"description\": \"the query completion time took in milliseconds\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Search jobs\",\n        \"description\": \"Search jobs\",\n        \"parameters\": [\n          {\n            \"name\": \"experimentName\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pipelineName\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pipelineType\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"algorithmName\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pipelineStatus\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"example\": \"2021-05-22T15:00:00\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"to\",\n            \"example\": \"2021-06-22T16:00:00\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cursor\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"example\": \"asc,desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fields\",\n            \"in\": \"query\",\n            \"example\": \"result:false, pipeline:false\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"exists\",\n            \"in\": \"query\",\n            \"example\": \"result:true, pipeline:false\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"search jobs response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"hits\": {\n                      \"type\": \"array\",\n                      \"description\": \"the actual result records\",\n                      \"items\": {}\n                    },\n                    \"cursor\": {\n                      \"type\": \"string\",\n                      \"description\": \"this cursor to the next query can be used for pagination\"\n                    },\n                    \"timeTook\": {\n                      \"type\": \"string\",\n                      \"description\": \"the query completion time took in milliseconds\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/pipelines/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Get pipeline data\",\n        \"description\": \"Returns the executed pipeline data\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing pipeline execution\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"kind\": {\n                      \"type\": \"string\",\n                      \"default\": \"batch\",\n                      \"example\": \"batch\",\n                      \"enum\": [\n                        \"batch\",\n                        \"stream\"\n                      ]\n                    },\n                    \"experimentName\": {\n                      \"type\": \"string\",\n                      \"description\": \"experiment name\",\n                      \"default\": \"main\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"experiment-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"pipeline description\"\n                    },\n                    \"nodes\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of nodes\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"nodeName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique node identifier\",\n                            \"minLength\": 1\n                          },\n                          \"algorithmName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier representing a specific algorithm\",\n                            \"minLength\": 1,\n                            \"maxLength\": 32,\n                            \"format\": \"algorithm-name\"\n                          },\n                          \"input\": {\n                            \"type\": \"array\",\n                            \"description\": \"The input for the algorithm\",\n                            \"items\": {},\n                            \"default\": []\n                          },\n                          \"ttl\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                            \"minimum\": 0,\n                            \"example\": 0\n                          },\n                          \"includeInResult\": {\n                            \"type\": \"boolean\"\n                          },\n                          \"metrics\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"tensorboard\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Should tensorboard metrics be collected.\"\n                              }\n                            }\n                          },\n                          \"retry\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"policy\": {\n                                \"type\": \"string\",\n                                \"default\": \"OnCrash\",\n                                \"enum\": [\n                                  \"Never\",\n                                  \"Always\",\n                                  \"OnError\",\n                                  \"OnCrash\"\n                                ]\n                              },\n                              \"limit\": {\n                                \"type\": \"integer\",\n                                \"minimum\": 1,\n                                \"default\": 3,\n                                \"example\": 1\n                              }\n                            }\n                          },\n                          \"batchOperation\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"indexed\",\n                              \"cartesian\"\n                            ]\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"default\": \"algorithm\",\n                            \"enum\": [\n                              \"algorithm\",\n                              \"pipeline\",\n                              \"debug\",\n                              \"dataSource\",\n                              \"gateway\",\n                              \"output\",\n                              \"hyperparamsTuner\"\n                            ]\n                          },\n                          \"spec\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Unique identifier representing a specific pipeline\",\n                                    \"minLength\": 1,\n                                    \"format\": \"pipeline-name\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"snapshot\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"name\": {\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\",\n                                  \"snapshot\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the output\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for output\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"nodeName\"\n                        ]\n                      }\n                    },\n                    \"flowInput\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"input object\"\n                    },\n                    \"webhooks\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"progress\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon progress\",\n                          \"example\": \"http://my-url-to-progress\"\n                        },\n                        \"result\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon result\",\n                          \"example\": \"http://my-url-to-result\"\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"options\": {\n                      \"default\": {},\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                          \"minimum\": 1,\n                          \"default\": 3600,\n                          \"example\": 3600\n                        },\n                        \"activeTtl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline active time to live in seconds (only active state)\",\n                          \"nullable\": true,\n                          \"minimum\": 1,\n                          \"example\": 3600\n                        },\n                        \"batchTolerance\": {\n                          \"type\": \"integer\",\n                          \"minimum\": 0,\n                          \"maximum\": 100,\n                          \"default\": 80,\n                          \"example\": 80\n                        },\n                        \"concurrentPipelines\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"amount\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"maximum\": 10000,\n                              \"example\": 1\n                            },\n                            \"rejectOnFailure\": {\n                              \"type\": \"boolean\",\n                              \"default\": true\n                            }\n                          },\n                          \"additionalProperties\": false\n                        },\n                        \"progressVerbosityLevel\": {\n                          \"type\": \"string\",\n                          \"default\": \"info\",\n                          \"example\": \"info\",\n                          \"enum\": [\n                            \"trace\",\n                            \"debug\",\n                            \"info\",\n                            \"warn\",\n                            \"error\",\n                            \"critical\"\n                          ]\n                        },\n                        \"debugOverride\": {\n                          \"type\": \"array\",\n                          \"description\": \"A list of algorithms to debug in this execution\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          },\n                          \"uniqueItems\": true\n                        }\n                      },\n                      \"description\": \"optional properties\"\n                    },\n                    \"priority\": {\n                      \"default\": 3,\n                      \"type\": \"integer\",\n                      \"minimum\": 1,\n                      \"maximum\": 5,\n                      \"example\": 3\n                    },\n                    \"triggers\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pipelines\": {\n                          \"type\": \"array\",\n                          \"description\": \"pipelines to activate upon result\",\n                          \"items\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"uniqueItems\": true\n                        },\n                        \"cron\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pattern\": {\n                              \"type\": \"string\",\n                              \"description\": \"cron job\",\n                              \"minLength\": 1,\n                              \"format\": \"cron\"\n                            },\n                            \"enabled\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"enable or disable cron job\",\n                              \"default\": false\n                            }\n                          }\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of tags\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"rootJobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"the root job id of the current tree\"\n                    },\n                    \"streaming\": {\n                      \"type\": \"object\",\n                      \"description\": \"streaming options\",\n                      \"properties\": {\n                        \"defaultFlow\": {\n                          \"type\": \"string\",\n                          \"description\": \"the name of the default stream flow\"\n                        },\n                        \"flows\": {\n                          \"type\": \"object\",\n                          \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                          \"example\": {\n                            \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                            \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                          }\n                        }\n                      }\n                    },\n                    \"edges\": {\n                      \"type\": \"array\",\n                      \"description\": \"edges define relation between nodes\",\n                      \"items\": {},\n                      \"example\": [\n                        {\n                          \"source\": \"A\",\n                          \"target\": \"B\"\n                        }\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"name\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/pipeline/list\": {\n      \"get\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Get current running pipelines\",\n        \"description\": \"Returns the current running pipelines data\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"kind\": {\n                      \"type\": \"string\",\n                      \"default\": \"batch\",\n                      \"example\": \"batch\",\n                      \"enum\": [\n                        \"batch\",\n                        \"stream\"\n                      ]\n                    },\n                    \"experimentName\": {\n                      \"type\": \"string\",\n                      \"description\": \"experiment name\",\n                      \"default\": \"main\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"experiment-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"pipeline description\"\n                    },\n                    \"nodes\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of nodes\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"nodeName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique node identifier\",\n                            \"minLength\": 1\n                          },\n                          \"algorithmName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier representing a specific algorithm\",\n                            \"minLength\": 1,\n                            \"maxLength\": 32,\n                            \"format\": \"algorithm-name\"\n                          },\n                          \"input\": {\n                            \"type\": \"array\",\n                            \"description\": \"The input for the algorithm\",\n                            \"items\": {},\n                            \"default\": []\n                          },\n                          \"ttl\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                            \"minimum\": 0,\n                            \"example\": 0\n                          },\n                          \"includeInResult\": {\n                            \"type\": \"boolean\"\n                          },\n                          \"metrics\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"tensorboard\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Should tensorboard metrics be collected.\"\n                              }\n                            }\n                          },\n                          \"retry\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"policy\": {\n                                \"type\": \"string\",\n                                \"default\": \"OnCrash\",\n                                \"enum\": [\n                                  \"Never\",\n                                  \"Always\",\n                                  \"OnError\",\n                                  \"OnCrash\"\n                                ]\n                              },\n                              \"limit\": {\n                                \"type\": \"integer\",\n                                \"minimum\": 1,\n                                \"default\": 3,\n                                \"example\": 1\n                              }\n                            }\n                          },\n                          \"batchOperation\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"indexed\",\n                              \"cartesian\"\n                            ]\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"default\": \"algorithm\",\n                            \"enum\": [\n                              \"algorithm\",\n                              \"pipeline\",\n                              \"debug\",\n                              \"dataSource\",\n                              \"gateway\",\n                              \"output\",\n                              \"hyperparamsTuner\"\n                            ]\n                          },\n                          \"spec\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Unique identifier representing a specific pipeline\",\n                                    \"minLength\": 1,\n                                    \"format\": \"pipeline-name\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"snapshot\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"name\": {\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\",\n                                  \"snapshot\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the output\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for output\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"nodeName\"\n                        ]\n                      }\n                    },\n                    \"flowInput\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"input object\"\n                    },\n                    \"webhooks\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"progress\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon progress\",\n                          \"example\": \"http://my-url-to-progress\"\n                        },\n                        \"result\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon result\",\n                          \"example\": \"http://my-url-to-result\"\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"options\": {\n                      \"default\": {},\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                          \"minimum\": 1,\n                          \"default\": 3600,\n                          \"example\": 3600\n                        },\n                        \"activeTtl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline active time to live in seconds (only active state)\",\n                          \"nullable\": true,\n                          \"minimum\": 1,\n                          \"example\": 3600\n                        },\n                        \"batchTolerance\": {\n                          \"type\": \"integer\",\n                          \"minimum\": 0,\n                          \"maximum\": 100,\n                          \"default\": 80,\n                          \"example\": 80\n                        },\n                        \"concurrentPipelines\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"amount\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"maximum\": 10000,\n                              \"example\": 1\n                            },\n                            \"rejectOnFailure\": {\n                              \"type\": \"boolean\",\n                              \"default\": true\n                            }\n                          },\n                          \"additionalProperties\": false\n                        },\n                        \"progressVerbosityLevel\": {\n                          \"type\": \"string\",\n                          \"default\": \"info\",\n                          \"example\": \"info\",\n                          \"enum\": [\n                            \"trace\",\n                            \"debug\",\n                            \"info\",\n                            \"warn\",\n                            \"error\",\n                            \"critical\"\n                          ]\n                        },\n                        \"debugOverride\": {\n                          \"type\": \"array\",\n                          \"description\": \"A list of algorithms to debug in this execution\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          },\n                          \"uniqueItems\": true\n                        }\n                      },\n                      \"description\": \"optional properties\"\n                    },\n                    \"priority\": {\n                      \"default\": 3,\n                      \"type\": \"integer\",\n                      \"minimum\": 1,\n                      \"maximum\": 5,\n                      \"example\": 3\n                    },\n                    \"triggers\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pipelines\": {\n                          \"type\": \"array\",\n                          \"description\": \"pipelines to activate upon result\",\n                          \"items\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"uniqueItems\": true\n                        },\n                        \"cron\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pattern\": {\n                              \"type\": \"string\",\n                              \"description\": \"cron job\",\n                              \"minLength\": 1,\n                              \"format\": \"cron\"\n                            },\n                            \"enabled\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"enable or disable cron job\",\n                              \"default\": false\n                            }\n                          }\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of tags\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"rootJobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"the root job id of the current tree\"\n                    },\n                    \"streaming\": {\n                      \"type\": \"object\",\n                      \"description\": \"streaming options\",\n                      \"properties\": {\n                        \"defaultFlow\": {\n                          \"type\": \"string\",\n                          \"description\": \"the name of the default stream flow\"\n                        },\n                        \"flows\": {\n                          \"type\": \"object\",\n                          \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                          \"example\": {\n                            \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                            \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                          }\n                        }\n                      }\n                    },\n                    \"edges\": {\n                      \"type\": \"array\",\n                      \"description\": \"edges define relation between nodes\",\n                      \"items\": {},\n                      \"example\": [\n                        {\n                          \"source\": \"A\",\n                          \"target\": \"B\"\n                        }\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"name\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/status/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Get pipeline status\",\n        \"description\": \"Returns a status for the current pipeline.\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing pipeline execution\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline result\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    },\n                    \"timestamp\": {\n                      \"type\": \"string\"\n                    },\n                    \"pipeline\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {}\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"timeTook\": {\n                      \"type\": \"number\"\n                    },\n                    \"storageModule\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/results/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Get pipeline result\",\n        \"description\": \"returns result for the execution of a specific pipeline run. if called before result is determined - returns error.\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing workflow execution - is given in response to calling pipeline run method .\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    },\n                    \"timestamp\": {\n                      \"type\": \"string\"\n                    },\n                    \"pipeline\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {}\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"timeTook\": {\n                      \"type\": \"number\"\n                    },\n                    \"storageModule\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/exec/tree/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Execution\"\n        ],\n        \"summary\": \"Pipeline execution tree\",\n        \"description\": \"Returns a tree of pipelines, usually a triggered pipelines\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing pipeline execution\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline tree\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Pipeline name\"\n                      },\n                      \"jobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/pipelines/results\": {\n      \"get\": {\n        \"tags\": [\n          \"Pipelines\"\n        ],\n        \"summary\": \"Get stored pipeline results\",\n        \"description\": \"return results of stored pipelines by given pipeline name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"pipeline name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"experimentName\",\n            \"in\": \"query\",\n            \"description\": \"experiment name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by asc or desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"jobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      },\n                      \"timestamp\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipeline\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {}\n                      },\n                      \"status\": {\n                        \"type\": \"string\"\n                      },\n                      \"timeTook\": {\n                        \"type\": \"number\"\n                      },\n                      \"storageModule\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipelines Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/pipelines/status\": {\n      \"get\": {\n        \"tags\": [\n          \"Pipelines\"\n        ],\n        \"summary\": \"Get pipeline status\",\n        \"description\": \"return status of pipelines by given pipeline name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"pipeline name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"experimentName\",\n            \"in\": \"query\",\n            \"description\": \"experiment name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by asc or desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"jobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      },\n                      \"timestamp\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipeline\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {}\n                      },\n                      \"status\": {\n                        \"type\": \"string\"\n                      },\n                      \"timeTook\": {\n                        \"type\": \"number\"\n                      },\n                      \"storageModule\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipelines Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/pipelines/triggers/tree\": {\n      \"get\": {\n        \"tags\": [\n          \"Pipelines\"\n        ],\n        \"summary\": \"Get pipelines triggers\",\n        \"description\": \"Get tree of pipelines triggers by given name or for all pipelines\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"pipeline name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Pipeline name\"\n                        },\n                        \"children\": {\n                          \"type\": \"array\",\n                          \"items\": {}\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipelines Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cron/results\": {\n      \"get\": {\n        \"tags\": [\n          \"Cron\"\n        ],\n        \"summary\": \"Get pipeline cron result\",\n        \"description\": \"return cron results by given pipeline name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"pipeline name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"experimentName\",\n            \"in\": \"query\",\n            \"description\": \"experiment name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by asc or desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"jobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      },\n                      \"timestamp\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipeline\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {}\n                      },\n                      \"status\": {\n                        \"type\": \"string\"\n                      },\n                      \"timeTook\": {\n                        \"type\": \"number\"\n                      },\n                      \"storageModule\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"results Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cron/status\": {\n      \"get\": {\n        \"tags\": [\n          \"Cron\"\n        ],\n        \"summary\": \"Get pipeline cron status\",\n        \"description\": \"return cron status by given pipeline name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"pipeline name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"experimentName\",\n            \"in\": \"query\",\n            \"description\": \"experiment name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by asc or desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"jobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      },\n                      \"timestamp\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipeline\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {}\n                      },\n                      \"status\": {\n                        \"type\": \"string\"\n                      },\n                      \"timeTook\": {\n                        \"type\": \"number\"\n                      },\n                      \"storageModule\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"status Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cron/list\": {\n      \"get\": {\n        \"tags\": [\n          \"Cron\"\n        ],\n        \"summary\": \"Get cron list\",\n        \"description\": \"return cron list of all stored pipeline\",\n        \"parameters\": [\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by asc or desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"jobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      },\n                      \"timestamp\": {\n                        \"type\": \"string\"\n                      },\n                      \"pipeline\": {\n                        \"type\": \"string\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {}\n                      },\n                      \"status\": {\n                        \"type\": \"string\"\n                      },\n                      \"timeTook\": {\n                        \"type\": \"number\"\n                      },\n                      \"storageModule\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"cron Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cron/start\": {\n      \"post\": {\n        \"tags\": [\n          \"Cron\"\n        ],\n        \"summary\": \"Start cron\",\n        \"description\": \"Start cron by given pipeline name\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  },\n                  \"pattern\": {\n                    \"type\": \"string\",\n                    \"description\": \"cron job\",\n                    \"minLength\": 1,\n                    \"format\": \"cron\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cron/stop\": {\n      \"post\": {\n        \"tags\": [\n          \"Cron\"\n        ],\n        \"summary\": \"Stop cron\",\n        \"description\": \"Stop cron by given pipeline name\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  },\n                  \"pattern\": {\n                    \"type\": \"string\",\n                    \"description\": \"cron job\",\n                    \"minLength\": 1,\n                    \"format\": \"cron\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource\": {\n      \"get\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"Fetch all dataSources meta data\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A collection of dataSources\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"minLength\": 24,\n                        \"maxLength\": 24\n                      },\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific dataSource\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32,\n                        \"format\": \"dataSource-name\"\n                      },\n                      \"versionDescription\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"filesCount\": {\n                        \"type\": \"number\"\n                      },\n                      \"avgFileSize\": {\n                        \"type\": \"string\"\n                      },\n                      \"totalSize\": {\n                        \"type\": \"number\"\n                      },\n                      \"fileTypes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"Create a new dataSource and upload a file\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific dataSource\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"dataSource-name\"\n                  },\n                  \"files\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Data file (file types: *)\",\n                      \"format\": \"binary\"\n                    }\n                  },\n                  \"storage\": {\n                    \"type\": \"object\",\n                    \"description\": \"Contains the credentials and storage information of \\nan S3 bucket, If kind is set to \\\"internal\\\" \\nno other parameters are required\\n\",\n                    \"oneOf\": [\n                      {\n                        \"properties\": {\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"S3\"\n                            ]\n                          },\n                          \"accessKeyId\": {\n                            \"type\": \"string\"\n                          },\n                          \"secretAccessKey\": {\n                            \"type\": \"string\"\n                          },\n                          \"endpoint\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1,\n                            \"format\": \"url\"\n                          },\n                          \"bucketName\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"required\": [\n                          \"kind\",\n                          \"accessKeyId\",\n                          \"secretAccessKey\",\n                          \"endpoint\",\n                          \"bucketName\"\n                        ]\n                      },\n                      {\n                        \"properties\": {\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"internal\"\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"kind\"\n                        ]\n                      }\n                    ]\n                  },\n                  \"git\": {\n                    \"type\": \"object\",\n                    \"description\": \"Contains the credentials and Git information,\\nIf kind is set to \\\"internal\\\" \\nno other parameters are required\\n\",\n                    \"oneOf\": [\n                      {\n                        \"properties\": {\n                          \"repositoryUrl\": {\n                            \"description\": \"provide a url to an empty git repository\",\n                            \"type\": \"string\",\n                            \"minLength\": 1,\n                            \"format\": \"git-url\"\n                          },\n                          \"token\": {\n                            \"type\": \"string\"\n                          },\n                          \"tokenName\": {\n                            \"description\": \"the token name is *required* when using a *gitlab* account\",\n                            \"type\": \"string\"\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"github\",\n                              \"gitlab\"\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"repositoryUrl\",\n                          \"token\",\n                          \"kind\"\n                        ]\n                      },\n                      {\n                        \"properties\": {\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"internal\"\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"kind\"\n                        ]\n                      }\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"files\",\n                  \"storage\",\n                  \"git\"\n                ]\n              }\n            }\n          },\n          \"description\": \"DataSource name and file to upload\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"created dataSource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"allOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\",\n                          \"minLength\": 24,\n                          \"maxLength\": 24\n                        },\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific dataSource\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"dataSource-name\"\n                        },\n                        \"versionDescription\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"filesCount\": {\n                          \"type\": \"number\"\n                        },\n                        \"avgFileSize\": {\n                          \"type\": \"string\"\n                        },\n                        \"totalSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"fileTypes\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"commitHash\": {\n                          \"description\": \"a commit hash\",\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific dataSource\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"dataSource-name\"\n                        },\n                        \"files\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"path\": {\n                                \"type\": \"string\"\n                              },\n                              \"size\": {\n                                \"type\": \"number\"\n                              },\n                              \"type\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"uploadedAt\": {\n                                \"type\": \"number\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\",\n                              \"name\",\n                              \"path\"\n                            ]\n                          }\n                        },\n                        \"versionDescription\": {\n                          \"description\": \"a commit message supplied by the user\",\n                          \"type\": \"string\"\n                        },\n                        \"gitRepositoryUrl\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"name\",\n                        \"id\"\n                      ]\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"Fetch a single dataSource by name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"request a specific version, if not stated the latest is returned\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A datasource item\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"allOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"commitHash\": {\n                          \"description\": \"a commit hash\",\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific dataSource\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"dataSource-name\"\n                        },\n                        \"files\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"path\": {\n                                \"type\": \"string\"\n                              },\n                              \"size\": {\n                                \"type\": \"number\"\n                              },\n                              \"type\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"uploadedAt\": {\n                                \"type\": \"number\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\",\n                              \"name\",\n                              \"path\"\n                            ]\n                          }\n                        },\n                        \"versionDescription\": {\n                          \"description\": \"a commit message supplied by the user\",\n                          \"type\": \"string\"\n                        },\n                        \"gitRepositoryUrl\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"name\",\n                        \"id\"\n                      ]\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"files\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"path\": {\n                                \"type\": \"string\"\n                              },\n                              \"size\": {\n                                \"type\": \"number\"\n                              },\n                              \"type\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"uploadedAt\": {\n                                \"type\": \"number\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\",\n                              \"name\",\n                              \"path\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"upload a new file to a given datasource\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"versionDescription\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  },\n                  \"files\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Data file (file types: *)\",\n                      \"format\": \"binary\"\n                    }\n                  },\n                  \"droppedFileIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"mapping\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"path\": {\n                          \"type\": \"string\"\n                        },\n                        \"size\": {\n                          \"type\": \"number\"\n                        },\n                        \"type\": {\n                          \"type\": \"string\"\n                        },\n                        \"description\": {\n                          \"type\": \"string\"\n                        },\n                        \"uploadedAt\": {\n                          \"type\": \"number\"\n                        }\n                      },\n                      \"required\": [\n                        \"id\",\n                        \"name\",\n                        \"path\"\n                      ]\n                    }\n                  }\n                },\n                \"anyOf\": [\n                  {\n                    \"required\": [\n                      \"versionDescription\",\n                      \"filesDropped\"\n                    ]\n                  },\n                  {\n                    \"required\": [\n                      \"versionDescription\",\n                      \"files\"\n                    ]\n                  }\n                ]\n              }\n            }\n          },\n          \"description\": \"DataSource name and file to upload\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"new datasource version\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"allOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\",\n                          \"minLength\": 24,\n                          \"maxLength\": 24\n                        },\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific dataSource\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"dataSource-name\"\n                        },\n                        \"versionDescription\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"filesCount\": {\n                          \"type\": \"number\"\n                        },\n                        \"avgFileSize\": {\n                          \"type\": \"string\"\n                        },\n                        \"totalSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"fileTypes\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"commitHash\": {\n                          \"description\": \"a commit hash\",\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific dataSource\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"dataSource-name\"\n                        },\n                        \"files\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"path\": {\n                                \"type\": \"string\"\n                              },\n                              \"size\": {\n                                \"type\": \"number\"\n                              },\n                              \"type\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"uploadedAt\": {\n                                \"type\": \"number\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\",\n                              \"name\",\n                              \"path\"\n                            ]\n                          }\n                        },\n                        \"versionDescription\": {\n                          \"description\": \"a commit message supplied by the user\",\n                          \"type\": \"string\"\n                        },\n                        \"gitRepositoryUrl\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"name\",\n                        \"id\"\n                      ]\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"delete a datasource by name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successfully deleted the datasource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"deleted\": {\n                      \"type\": \"string\",\n                      \"description\": \"a delete acknowledgement\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/{name}/versions\": {\n      \"get\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"list a all the versions of a given dataSource name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A datasource item\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"minLength\": 24,\n                        \"maxLength\": 24\n                      },\n                      \"versionDescription\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      },\n                      \"commitHash\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/{name}/sync\": {\n      \"post\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"sync a version from git to the database\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"DataSource name\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"new datasource version\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"allOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\",\n                          \"minLength\": 24,\n                          \"maxLength\": 24\n                        },\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific dataSource\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"dataSource-name\"\n                        },\n                        \"versionDescription\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"filesCount\": {\n                          \"type\": \"number\"\n                        },\n                        \"avgFileSize\": {\n                          \"type\": \"string\"\n                        },\n                        \"totalSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"fileTypes\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"commitHash\": {\n                          \"description\": \"a commit hash\",\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific dataSource\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"dataSource-name\"\n                        },\n                        \"files\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"path\": {\n                                \"type\": \"string\"\n                              },\n                              \"size\": {\n                                \"type\": \"number\"\n                              },\n                              \"type\": {\n                                \"type\": \"string\"\n                              },\n                              \"description\": {\n                                \"type\": \"string\"\n                              },\n                              \"uploadedAt\": {\n                                \"type\": \"number\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\",\n                              \"name\",\n                              \"path\"\n                            ]\n                          }\n                        },\n                        \"versionDescription\": {\n                          \"description\": \"a commit message supplied by the user\",\n                          \"type\": \"string\"\n                        },\n                        \"gitRepositoryUrl\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"name\",\n                        \"id\"\n                      ]\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/id/{id}/snapshot\": {\n      \"post\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"create a new snapshot for a given datasource version\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"A datasource id (indicating a version)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"snapshot\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 25\n                      },\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      }\n                    }\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"query\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"A newly created snapshot\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"allOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"snapshot\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1,\n                              \"maxLength\": 25\n                            },\n                            \"query\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            }\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"name\",\n                        \"query\"\n                      ]\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\",\n                          \"minLength\": 25\n                        },\n                        \"dataSource\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"minLength\": 24,\n                              \"maxLength\": 24\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique identifier representing a specific dataSource\",\n                              \"minLength\": 1,\n                              \"maxLength\": 32,\n                              \"format\": \"dataSource-name\"\n                            },\n                            \"filteredFilesList\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"path\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"size\": {\n                                    \"type\": \"number\"\n                                  },\n                                  \"type\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"uploadedAt\": {\n                                    \"type\": \"number\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\",\n                                  \"name\",\n                                  \"path\"\n                                ]\n                              }\n                            },\n                            \"droppedFiles\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"path\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"size\": {\n                                    \"type\": \"number\"\n                                  },\n                                  \"type\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"uploadedAt\": {\n                                    \"type\": \"number\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\",\n                                  \"name\",\n                                  \"path\"\n                                ]\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/id/{id}/snapshot/preview\": {\n      \"post\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"post a query for *preview only*,\\nthe results are NOT persisted to the database\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"A datasource id (indicating a version)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"query\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  }\n                },\n                \"required\": [\n                  \"query\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"a list of files\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"size\": {\n                        \"type\": \"number\"\n                      },\n                      \"type\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": {\n                        \"type\": \"string\"\n                      },\n                      \"uploadedAt\": {\n                        \"type\": \"number\"\n                      }\n                    },\n                    \"required\": [\n                      \"id\",\n                      \"name\",\n                      \"path\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/{name}/snapshot\": {\n      \"post\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"create a new snapshot for a given datasource version\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"snapshot\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 25\n                      },\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                      }\n                    }\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"query\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"A newly created snapshot\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"allOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"snapshot\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1,\n                              \"maxLength\": 25\n                            },\n                            \"query\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            }\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"name\",\n                        \"query\"\n                      ]\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\",\n                          \"minLength\": 25\n                        },\n                        \"dataSource\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"minLength\": 24,\n                              \"maxLength\": 24\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique identifier representing a specific dataSource\",\n                              \"minLength\": 1,\n                              \"maxLength\": 32,\n                              \"format\": \"dataSource-name\"\n                            },\n                            \"filteredFilesList\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"path\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"size\": {\n                                    \"type\": \"number\"\n                                  },\n                                  \"type\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"uploadedAt\": {\n                                    \"type\": \"number\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\",\n                                  \"name\",\n                                  \"path\"\n                                ]\n                              }\n                            },\n                            \"droppedFiles\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"path\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"size\": {\n                                    \"type\": \"number\"\n                                  },\n                                  \"type\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"uploadedAt\": {\n                                    \"type\": \"number\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\",\n                                  \"name\",\n                                  \"path\"\n                                ]\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"fetch all snapshots for a given datasource\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A collection of snapshots\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"allOf\": [\n                      {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"snapshot\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"name\": {\n                                \"type\": \"string\",\n                                \"minLength\": 1,\n                                \"maxLength\": 25\n                              },\n                              \"query\": {\n                                \"type\": \"string\",\n                                \"minLength\": 1\n                              }\n                            }\n                          }\n                        },\n                        \"required\": [\n                          \"name\",\n                          \"query\"\n                        ]\n                      },\n                      {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"minLength\": 25\n                          },\n                          \"dataSource\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"minLength\": 24,\n                                \"maxLength\": 24\n                              },\n                              \"name\": {\n                                \"type\": \"string\",\n                                \"description\": \"Unique identifier representing a specific dataSource\",\n                                \"minLength\": 1,\n                                \"maxLength\": 32,\n                                \"format\": \"dataSource-name\"\n                              },\n                              \"filteredFilesList\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"id\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"path\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"size\": {\n                                      \"type\": \"number\"\n                                    },\n                                    \"type\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"description\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"uploadedAt\": {\n                                      \"type\": \"number\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"id\",\n                                    \"name\",\n                                    \"path\"\n                                  ]\n                                }\n                              },\n                              \"droppedFiles\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"id\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"path\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"size\": {\n                                      \"type\": \"number\"\n                                    },\n                                    \"type\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"description\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"uploadedAt\": {\n                                      \"type\": \"number\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"id\",\n                                    \"name\",\n                                    \"path\"\n                                  ]\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/{name}/credentials\": {\n      \"patch\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"update the credentials for the git repository and the storage\\nupdates throughout the entire version history of a dataSource by its name\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"git\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"token\": {\n                        \"type\": \"string\"\n                      },\n                      \"tokenName\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"token\"\n                    ]\n                  },\n                  \"storage\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"accessKeyId\": {\n                        \"type\": \"string\"\n                      },\n                      \"secretAccessKey\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"accessKeyId\",\n                      \"secretAccessKey\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"New credentials to update\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"number of versions updated with the new credentials\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"updatedCount\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/{name}/snapshot/{snapshotName}\": {\n      \"get\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"fetch snapshots for a given datasource\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"A dataSource name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"snapshotName\",\n            \"in\": \"path\",\n            \"description\": \"A Snapshot name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"resolve\",\n            \"in\": \"query\",\n            \"description\": \"return the entire dataSource with the snapshot\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A collection of snapshots\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"dataSource\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"snapshot\": {\n                          \"allOf\": [\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"snapshot\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\",\n                                      \"minLength\": 1,\n                                      \"maxLength\": 25\n                                    },\n                                    \"query\": {\n                                      \"type\": \"string\",\n                                      \"minLength\": 1\n                                    }\n                                  }\n                                }\n                              },\n                              \"required\": [\n                                \"name\",\n                                \"query\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"minLength\": 25\n                                },\n                                \"dataSource\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"id\": {\n                                      \"type\": \"string\",\n                                      \"minLength\": 24,\n                                      \"maxLength\": 24\n                                    },\n                                    \"name\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"Unique identifier representing a specific dataSource\",\n                                      \"minLength\": 1,\n                                      \"maxLength\": 32,\n                                      \"format\": \"dataSource-name\"\n                                    },\n                                    \"filteredFilesList\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                          \"id\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"name\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"path\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"size\": {\n                                            \"type\": \"number\"\n                                          },\n                                          \"type\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"description\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"uploadedAt\": {\n                                            \"type\": \"number\"\n                                          }\n                                        },\n                                        \"required\": [\n                                          \"id\",\n                                          \"name\",\n                                          \"path\"\n                                        ]\n                                      }\n                                    },\n                                    \"droppedFiles\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                          \"id\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"name\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"path\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"size\": {\n                                            \"type\": \"number\"\n                                          },\n                                          \"type\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"description\": {\n                                            \"type\": \"string\"\n                                          },\n                                          \"uploadedAt\": {\n                                            \"type\": \"number\"\n                                          }\n                                        },\n                                        \"required\": [\n                                          \"id\",\n                                          \"name\",\n                                          \"path\"\n                                        ]\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1,\n                          \"maxLength\": 25\n                        },\n                        \"query\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"dataSource\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\"\n                            },\n                            \"commitHash\": {\n                              \"description\": \"a commit hash\",\n                              \"type\": \"string\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique identifier representing a specific dataSource\",\n                              \"minLength\": 1,\n                              \"maxLength\": 32,\n                              \"format\": \"dataSource-name\"\n                            },\n                            \"files\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"path\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"size\": {\n                                    \"type\": \"number\"\n                                  },\n                                  \"type\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"uploadedAt\": {\n                                    \"type\": \"number\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\",\n                                  \"name\",\n                                  \"path\"\n                                ]\n                              }\n                            },\n                            \"versionDescription\": {\n                              \"description\": \"a commit message supplied by the user\",\n                              \"type\": \"string\"\n                            },\n                            \"gitRepositoryUrl\": {\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"required\": [\n                            \"name\",\n                            \"id\"\n                          ]\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/id/{id}/download\": {\n      \"post\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"create download link\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"A datasource id (indicating a version)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"fileIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"a list of file ids to include in the generated zip file\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"A Zip file\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"href\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"download an archive of the selected files\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"A datasource id (indicating a version)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing a downloadId\",\n              \"minLength\": 4,\n              \"maxLength\": 4,\n              \"format\": \"download-id\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A Zip file\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/datasource/validate\": {\n      \"get\": {\n        \"tags\": [\n          \"DataSource\"\n        ],\n        \"summary\": \"Fetch all dataSources meta data\",\n        \"parameters\": [\n          {\n            \"name\": \"datasource_name\",\n            \"in\": \"query\",\n            \"description\": \"a datasource name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"snapshot_name\",\n            \"in\": \"query\",\n            \"description\": \"A Snapshot name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"request a specific version, if not stated the latest is returned\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"ensure a datasource exists by name, version or snapshot\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"exists\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/store/algorithms/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"StoreAlgorithms\"\n        ],\n        \"summary\": \"Get algorithm\",\n        \"description\": \"get specific algorithm from store\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific algorithm\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"algorithm-name\"\n                    },\n                    \"kind\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"batch\",\n                        \"stream\"\n                      ]\n                    },\n                    \"env\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"nodejs\",\n                        \"python\",\n                        \"java\"\n                      ]\n                    },\n                    \"algorithmImage\": {\n                      \"type\": \"string\",\n                      \"description\": \"image name as in the docker registry\",\n                      \"format\": \"algorithm-image\"\n                    },\n                    \"cpu\": {\n                      \"type\": \"number\",\n                      \"default\": 0.1,\n                      \"minimum\": 0,\n                      \"description\": \"algorithm cpu\"\n                    },\n                    \"gpu\": {\n                      \"type\": \"number\",\n                      \"minimum\": 0,\n                      \"description\": \"algorithm gpu\"\n                    },\n                    \"mem\": {\n                      \"type\": \"string\",\n                      \"description\": \"algorithm memory\",\n                      \"format\": \"algorithm-memory\",\n                      \"default\": \"256Mi\",\n                      \"example\": \"512Mi\"\n                    },\n                    \"reservedMemory\": {\n                      \"type\": \"string\",\n                      \"nullable\": true,\n                      \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                      \"format\": \"memory\",\n                      \"example\": \"512Mi\"\n                    },\n                    \"options\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"devMode\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                        },\n                        \"pending\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"pending algorithm\",\n                          \"default\": false\n                        },\n                        \"opengl\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                        }\n                      },\n                      \"default\": {}\n                    },\n                    \"version\": {\n                      \"type\": \"string\",\n                      \"description\": \"Hkube's auto increment semantic versioning\",\n                      \"readOnly\": true\n                    },\n                    \"mounts\": {\n                      \"type\": \"array\",\n                      \"nullable\": true,\n                      \"description\": \"a list of volumes to mount into the algorithm\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"pvcName\": {\n                            \"type\": \"string\",\n                            \"format\": \"algorithm-mount-pvc\",\n                            \"minLength\": 1,\n                            \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                          },\n                          \"path\": {\n                            \"type\": \"string\",\n                            \"format\": \"path\",\n                            \"minLength\": 1,\n                            \"description\": \"the mount path in the algorithm container\"\n                          },\n                          \"volumeType\": {\n                            \"type\": \"string\",\n                            \"description\": \"Special volume types such as emptyDir\",\n                            \"enum\": [\n                              \"emptyDir\",\n                              \"configMap\"\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"pvcName\",\n                          \"path\"\n                        ]\n                      },\n                      \"uniqueItems\": true,\n                      \"example\": []\n                    },\n                    \"gitRepository\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"properties\": {\n                        \"url\": {\n                          \"type\": \"string\",\n                          \"description\": \"a url for the git repository\",\n                          \"format\": \"url\"\n                        },\n                        \"commit\": {\n                          \"type\": \"object\",\n                          \"description\": \"commit details\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"description\": \"commit id\"\n                            },\n                            \"timestamp\": {\n                              \"type\": \"string\",\n                              \"description\": \"commit time\"\n                            },\n                            \"message\": {\n                              \"type\": \"string\",\n                              \"description\": \"commit message\"\n                            }\n                          },\n                          \"required\": [\n                            \"id\"\n                          ]\n                        },\n                        \"branchName\": {\n                          \"type\": \"string\",\n                          \"default\": \"master\",\n                          \"description\": \"the branch name you wish to create a build from\"\n                        },\n                        \"tag\": {\n                          \"type\": \"string\",\n                          \"description\": \"a specific tag which will trigger the build\"\n                        },\n                        \"token\": {\n                          \"type\": \"string\",\n                          \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                        },\n                        \"gitKind\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"github\",\n                            \"gitlab\"\n                          ],\n                          \"default\": \"github\"\n                        }\n                      },\n                      \"required\": [\n                        \"url\"\n                      ]\n                    },\n                    \"entryPoint\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    },\n                    \"dependencyInstallCmd\": {\n                      \"type\": \"string\",\n                      \"nullable\": true,\n                      \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                    },\n                    \"baseImage\": {\n                      \"type\": \"string\",\n                      \"nullable\": true,\n                      \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                    },\n                    \"minHotWorkers\": {\n                      \"type\": \"integer\",\n                      \"description\": \"how many live algorithm instances will always run\",\n                      \"minimum\": 0,\n                      \"default\": 0\n                    },\n                    \"maxWorkers\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                      \"minimum\": 0,\n                      \"nullable\": true\n                    },\n                    \"quotaGuarantee\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true,\n                      \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                      \"minimum\": 0\n                    },\n                    \"algorithmEnv\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"key value environment variables for algorithm\"\n                    },\n                    \"workerEnv\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"key value environment variables for worker\"\n                    },\n                    \"nodeSelector\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"key value labels for nodes constraint\",\n                      \"additionalProperties\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"labels\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                    },\n                    \"annotations\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                    },\n                    \"streamKind\": {\n                      \"enum\": [\n                        \"stateless\",\n                        \"stateful\"\n                      ]\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"description\": \"type of algorithm code resource\",\n                      \"enum\": [\n                        \"Git\",\n                        \"Code\",\n                        \"Image\"\n                      ],\n                      \"default\": \"Image\"\n                    },\n                    \"downloadFileExt\": {\n                      \"type\": \"string\",\n                      \"nullable\": true,\n                      \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                    }\n                  },\n                  \"required\": [\n                    \"name\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"StoreAlgorithms\"\n        ],\n        \"summary\": \"Delete algorithm\",\n        \"description\": \"Delete existing algorithm from store\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"force\",\n            \"in\": \"query\",\n            \"description\": \"should also delete all related data, e.g. pipelines, builds, versions.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/store/algorithms\": {\n      \"get\": {\n        \"tags\": [\n          \"StoreAlgorithms\"\n        ],\n        \"summary\": \"Get all algorithms\",\n        \"description\": \"Get all available algorithms from store\",\n        \"parameters\": [\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific algorithm\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32,\n                        \"format\": \"algorithm-name\"\n                      },\n                      \"kind\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"batch\",\n                          \"stream\"\n                        ]\n                      },\n                      \"env\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"nodejs\",\n                          \"python\",\n                          \"java\"\n                        ]\n                      },\n                      \"algorithmImage\": {\n                        \"type\": \"string\",\n                        \"description\": \"image name as in the docker registry\",\n                        \"format\": \"algorithm-image\"\n                      },\n                      \"cpu\": {\n                        \"type\": \"number\",\n                        \"default\": 0.1,\n                        \"minimum\": 0,\n                        \"description\": \"algorithm cpu\"\n                      },\n                      \"gpu\": {\n                        \"type\": \"number\",\n                        \"minimum\": 0,\n                        \"description\": \"algorithm gpu\"\n                      },\n                      \"mem\": {\n                        \"type\": \"string\",\n                        \"description\": \"algorithm memory\",\n                        \"format\": \"algorithm-memory\",\n                        \"default\": \"256Mi\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"reservedMemory\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                        \"format\": \"memory\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"options\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"devMode\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                          },\n                          \"pending\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"pending algorithm\",\n                            \"default\": false\n                          },\n                          \"opengl\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                          }\n                        },\n                        \"default\": {}\n                      },\n                      \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"Hkube's auto increment semantic versioning\",\n                        \"readOnly\": true\n                      },\n                      \"mounts\": {\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"a list of volumes to mount into the algorithm\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pvcName\": {\n                              \"type\": \"string\",\n                              \"format\": \"algorithm-mount-pvc\",\n                              \"minLength\": 1,\n                              \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                            },\n                            \"path\": {\n                              \"type\": \"string\",\n                              \"format\": \"path\",\n                              \"minLength\": 1,\n                              \"description\": \"the mount path in the algorithm container\"\n                            },\n                            \"volumeType\": {\n                              \"type\": \"string\",\n                              \"description\": \"Special volume types such as emptyDir\",\n                              \"enum\": [\n                                \"emptyDir\",\n                                \"configMap\"\n                              ]\n                            }\n                          },\n                          \"required\": [\n                            \"pvcName\",\n                            \"path\"\n                          ]\n                        },\n                        \"uniqueItems\": true,\n                        \"example\": []\n                      },\n                      \"gitRepository\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"a url for the git repository\",\n                            \"format\": \"url\"\n                          },\n                          \"commit\": {\n                            \"type\": \"object\",\n                            \"description\": \"commit details\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit id\"\n                              },\n                              \"timestamp\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit time\"\n                              },\n                              \"message\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit message\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\"\n                            ]\n                          },\n                          \"branchName\": {\n                            \"type\": \"string\",\n                            \"default\": \"master\",\n                            \"description\": \"the branch name you wish to create a build from\"\n                          },\n                          \"tag\": {\n                            \"type\": \"string\",\n                            \"description\": \"a specific tag which will trigger the build\"\n                          },\n                          \"token\": {\n                            \"type\": \"string\",\n                            \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                          },\n                          \"gitKind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"github\",\n                              \"gitlab\"\n                            ],\n                            \"default\": \"github\"\n                          }\n                        },\n                        \"required\": [\n                          \"url\"\n                        ]\n                      },\n                      \"entryPoint\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"dependencyInstallCmd\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                      },\n                      \"baseImage\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                      },\n                      \"minHotWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"how many live algorithm instances will always run\",\n                        \"minimum\": 0,\n                        \"default\": 0\n                      },\n                      \"maxWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                        \"minimum\": 0,\n                        \"nullable\": true\n                      },\n                      \"quotaGuarantee\": {\n                        \"type\": \"integer\",\n                        \"nullable\": true,\n                        \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                        \"minimum\": 0\n                      },\n                      \"algorithmEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for algorithm\"\n                      },\n                      \"workerEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for worker\"\n                      },\n                      \"nodeSelector\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value labels for nodes constraint\",\n                        \"additionalProperties\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"labels\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                      },\n                      \"annotations\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                      },\n                      \"streamKind\": {\n                        \"enum\": [\n                          \"stateless\",\n                          \"stateful\"\n                        ]\n                      },\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"type of algorithm code resource\",\n                        \"enum\": [\n                          \"Git\",\n                          \"Code\",\n                          \"Image\"\n                        ],\n                        \"default\": \"Image\"\n                      },\n                      \"downloadFileExt\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                      }\n                    },\n                    \"required\": [\n                      \"name\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"StoreAlgorithms\"\n        ],\n        \"summary\": \"Insert algorithm\",\n        \"description\": \"Insert new algorithm to store if not exists\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific algorithm\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"algorithm-name\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"batch\",\n                      \"stream\"\n                    ]\n                  },\n                  \"env\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"nodejs\",\n                      \"python\",\n                      \"java\"\n                    ]\n                  },\n                  \"algorithmImage\": {\n                    \"type\": \"string\",\n                    \"description\": \"image name as in the docker registry\",\n                    \"format\": \"algorithm-image\"\n                  },\n                  \"cpu\": {\n                    \"type\": \"number\",\n                    \"default\": 0.1,\n                    \"minimum\": 0,\n                    \"description\": \"algorithm cpu\"\n                  },\n                  \"gpu\": {\n                    \"type\": \"number\",\n                    \"minimum\": 0,\n                    \"description\": \"algorithm gpu\"\n                  },\n                  \"mem\": {\n                    \"type\": \"string\",\n                    \"description\": \"algorithm memory\",\n                    \"format\": \"algorithm-memory\",\n                    \"default\": \"256Mi\",\n                    \"example\": \"512Mi\"\n                  },\n                  \"reservedMemory\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                    \"format\": \"memory\",\n                    \"example\": \"512Mi\"\n                  },\n                  \"options\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"devMode\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                      },\n                      \"pending\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"pending algorithm\",\n                        \"default\": false\n                      },\n                      \"opengl\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                      }\n                    },\n                    \"default\": {}\n                  },\n                  \"version\": {\n                    \"type\": \"string\",\n                    \"description\": \"Hkube's auto increment semantic versioning\",\n                    \"readOnly\": true\n                  },\n                  \"mounts\": {\n                    \"type\": \"array\",\n                    \"nullable\": true,\n                    \"description\": \"a list of volumes to mount into the algorithm\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pvcName\": {\n                          \"type\": \"string\",\n                          \"format\": \"algorithm-mount-pvc\",\n                          \"minLength\": 1,\n                          \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                        },\n                        \"path\": {\n                          \"type\": \"string\",\n                          \"format\": \"path\",\n                          \"minLength\": 1,\n                          \"description\": \"the mount path in the algorithm container\"\n                        },\n                        \"volumeType\": {\n                          \"type\": \"string\",\n                          \"description\": \"Special volume types such as emptyDir\",\n                          \"enum\": [\n                            \"emptyDir\",\n                            \"configMap\"\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"pvcName\",\n                        \"path\"\n                      ]\n                    },\n                    \"uniqueItems\": true,\n                    \"example\": []\n                  },\n                  \"gitRepository\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"a url for the git repository\",\n                        \"format\": \"url\"\n                      },\n                      \"commit\": {\n                        \"type\": \"object\",\n                        \"description\": \"commit details\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"commit id\"\n                          },\n                          \"timestamp\": {\n                            \"type\": \"string\",\n                            \"description\": \"commit time\"\n                          },\n                          \"message\": {\n                            \"type\": \"string\",\n                            \"description\": \"commit message\"\n                          }\n                        },\n                        \"required\": [\n                          \"id\"\n                        ]\n                      },\n                      \"branchName\": {\n                        \"type\": \"string\",\n                        \"default\": \"master\",\n                        \"description\": \"the branch name you wish to create a build from\"\n                      },\n                      \"tag\": {\n                        \"type\": \"string\",\n                        \"description\": \"a specific tag which will trigger the build\"\n                      },\n                      \"token\": {\n                        \"type\": \"string\",\n                        \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                      },\n                      \"gitKind\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"github\",\n                          \"gitlab\"\n                        ],\n                        \"default\": \"github\"\n                      }\n                    },\n                    \"required\": [\n                      \"url\"\n                    ]\n                  },\n                  \"entryPoint\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  },\n                  \"dependencyInstallCmd\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                  },\n                  \"baseImage\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                  },\n                  \"minHotWorkers\": {\n                    \"type\": \"integer\",\n                    \"description\": \"how many live algorithm instances will always run\",\n                    \"minimum\": 0,\n                    \"default\": 0\n                  },\n                  \"maxWorkers\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                    \"minimum\": 0,\n                    \"nullable\": true\n                  },\n                  \"quotaGuarantee\": {\n                    \"type\": \"integer\",\n                    \"nullable\": true,\n                    \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                    \"minimum\": 0\n                  },\n                  \"algorithmEnv\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"key value environment variables for algorithm\"\n                  },\n                  \"workerEnv\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"key value environment variables for worker\"\n                  },\n                  \"nodeSelector\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"key value labels for nodes constraint\",\n                    \"additionalProperties\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"labels\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                  },\n                  \"annotations\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                  },\n                  \"streamKind\": {\n                    \"enum\": [\n                      \"stateless\",\n                      \"stateful\"\n                    ]\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"type of algorithm code resource\",\n                    \"enum\": [\n                      \"Git\",\n                      \"Code\",\n                      \"Image\"\n                    ],\n                    \"default\": \"Image\"\n                  },\n                  \"downloadFileExt\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"algorithm descriptor to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"algorithm created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"pipeline conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"StoreAlgorithms\"\n        ],\n        \"summary\": \"Update algorithm\",\n        \"description\": \"Update existing algorithm\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific algorithm\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"algorithm-name\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"batch\",\n                      \"stream\"\n                    ]\n                  },\n                  \"env\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"nodejs\",\n                      \"python\",\n                      \"java\"\n                    ]\n                  },\n                  \"algorithmImage\": {\n                    \"type\": \"string\",\n                    \"description\": \"image name as in the docker registry\",\n                    \"format\": \"algorithm-image\"\n                  },\n                  \"cpu\": {\n                    \"type\": \"number\",\n                    \"default\": 0.1,\n                    \"minimum\": 0,\n                    \"description\": \"algorithm cpu\"\n                  },\n                  \"gpu\": {\n                    \"type\": \"number\",\n                    \"minimum\": 0,\n                    \"description\": \"algorithm gpu\"\n                  },\n                  \"mem\": {\n                    \"type\": \"string\",\n                    \"description\": \"algorithm memory\",\n                    \"format\": \"algorithm-memory\",\n                    \"default\": \"256Mi\",\n                    \"example\": \"512Mi\"\n                  },\n                  \"reservedMemory\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                    \"format\": \"memory\",\n                    \"example\": \"512Mi\"\n                  },\n                  \"options\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"devMode\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                      },\n                      \"pending\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"pending algorithm\",\n                        \"default\": false\n                      },\n                      \"opengl\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                      }\n                    },\n                    \"default\": {}\n                  },\n                  \"version\": {\n                    \"type\": \"string\",\n                    \"description\": \"Hkube's auto increment semantic versioning\",\n                    \"readOnly\": true\n                  },\n                  \"mounts\": {\n                    \"type\": \"array\",\n                    \"nullable\": true,\n                    \"description\": \"a list of volumes to mount into the algorithm\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pvcName\": {\n                          \"type\": \"string\",\n                          \"format\": \"algorithm-mount-pvc\",\n                          \"minLength\": 1,\n                          \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                        },\n                        \"path\": {\n                          \"type\": \"string\",\n                          \"format\": \"path\",\n                          \"minLength\": 1,\n                          \"description\": \"the mount path in the algorithm container\"\n                        },\n                        \"volumeType\": {\n                          \"type\": \"string\",\n                          \"description\": \"Special volume types such as emptyDir\",\n                          \"enum\": [\n                            \"emptyDir\",\n                            \"configMap\"\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"pvcName\",\n                        \"path\"\n                      ]\n                    },\n                    \"uniqueItems\": true,\n                    \"example\": []\n                  },\n                  \"gitRepository\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"a url for the git repository\",\n                        \"format\": \"url\"\n                      },\n                      \"commit\": {\n                        \"type\": \"object\",\n                        \"description\": \"commit details\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"description\": \"commit id\"\n                          },\n                          \"timestamp\": {\n                            \"type\": \"string\",\n                            \"description\": \"commit time\"\n                          },\n                          \"message\": {\n                            \"type\": \"string\",\n                            \"description\": \"commit message\"\n                          }\n                        },\n                        \"required\": [\n                          \"id\"\n                        ]\n                      },\n                      \"branchName\": {\n                        \"type\": \"string\",\n                        \"default\": \"master\",\n                        \"description\": \"the branch name you wish to create a build from\"\n                      },\n                      \"tag\": {\n                        \"type\": \"string\",\n                        \"description\": \"a specific tag which will trigger the build\"\n                      },\n                      \"token\": {\n                        \"type\": \"string\",\n                        \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                      },\n                      \"gitKind\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"github\",\n                          \"gitlab\"\n                        ],\n                        \"default\": \"github\"\n                      }\n                    },\n                    \"required\": [\n                      \"url\"\n                    ]\n                  },\n                  \"entryPoint\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  },\n                  \"dependencyInstallCmd\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                  },\n                  \"baseImage\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                  },\n                  \"minHotWorkers\": {\n                    \"type\": \"integer\",\n                    \"description\": \"how many live algorithm instances will always run\",\n                    \"minimum\": 0,\n                    \"default\": 0\n                  },\n                  \"maxWorkers\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                    \"minimum\": 0,\n                    \"nullable\": true\n                  },\n                  \"quotaGuarantee\": {\n                    \"type\": \"integer\",\n                    \"nullable\": true,\n                    \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                    \"minimum\": 0\n                  },\n                  \"algorithmEnv\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"key value environment variables for algorithm\"\n                  },\n                  \"workerEnv\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"key value environment variables for worker\"\n                  },\n                  \"nodeSelector\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"key value labels for nodes constraint\",\n                    \"additionalProperties\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"labels\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                  },\n                  \"annotations\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                  },\n                  \"streamKind\": {\n                    \"enum\": [\n                      \"stateless\",\n                      \"stateful\"\n                    ]\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"type of algorithm code resource\",\n                    \"enum\": [\n                      \"Git\",\n                      \"Code\",\n                      \"Image\"\n                    ],\n                    \"default\": \"Image\"\n                  },\n                  \"downloadFileExt\": {\n                    \"type\": \"string\",\n                    \"nullable\": true,\n                    \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"algorithm descriptor to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/store/algorithms/apply\": {\n      \"post\": {\n        \"tags\": [\n          \"StoreAlgorithms\"\n        ],\n        \"summary\": \"Apply algorithm\",\n        \"description\": \"create or update algorithm, build id will be returned if build was triggered\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"payload\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific algorithm\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32,\n                        \"format\": \"algorithm-name\"\n                      },\n                      \"kind\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"batch\",\n                          \"stream\"\n                        ]\n                      },\n                      \"env\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"nodejs\",\n                          \"python\",\n                          \"java\"\n                        ]\n                      },\n                      \"algorithmImage\": {\n                        \"type\": \"string\",\n                        \"description\": \"image name as in the docker registry\",\n                        \"format\": \"algorithm-image\"\n                      },\n                      \"cpu\": {\n                        \"type\": \"number\",\n                        \"default\": 0.1,\n                        \"minimum\": 0,\n                        \"description\": \"algorithm cpu\"\n                      },\n                      \"gpu\": {\n                        \"type\": \"number\",\n                        \"minimum\": 0,\n                        \"description\": \"algorithm gpu\"\n                      },\n                      \"mem\": {\n                        \"type\": \"string\",\n                        \"description\": \"algorithm memory\",\n                        \"format\": \"algorithm-memory\",\n                        \"default\": \"256Mi\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"reservedMemory\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                        \"format\": \"memory\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"options\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"devMode\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                          },\n                          \"pending\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"pending algorithm\",\n                            \"default\": false\n                          },\n                          \"opengl\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                          }\n                        },\n                        \"default\": {}\n                      },\n                      \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"Hkube's auto increment semantic versioning\",\n                        \"readOnly\": true\n                      },\n                      \"mounts\": {\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"a list of volumes to mount into the algorithm\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pvcName\": {\n                              \"type\": \"string\",\n                              \"format\": \"algorithm-mount-pvc\",\n                              \"minLength\": 1,\n                              \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                            },\n                            \"path\": {\n                              \"type\": \"string\",\n                              \"format\": \"path\",\n                              \"minLength\": 1,\n                              \"description\": \"the mount path in the algorithm container\"\n                            },\n                            \"volumeType\": {\n                              \"type\": \"string\",\n                              \"description\": \"Special volume types such as emptyDir\",\n                              \"enum\": [\n                                \"emptyDir\",\n                                \"configMap\"\n                              ]\n                            }\n                          },\n                          \"required\": [\n                            \"pvcName\",\n                            \"path\"\n                          ]\n                        },\n                        \"uniqueItems\": true,\n                        \"example\": []\n                      },\n                      \"gitRepository\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"a url for the git repository\",\n                            \"format\": \"url\"\n                          },\n                          \"commit\": {\n                            \"type\": \"object\",\n                            \"description\": \"commit details\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit id\"\n                              },\n                              \"timestamp\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit time\"\n                              },\n                              \"message\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit message\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\"\n                            ]\n                          },\n                          \"branchName\": {\n                            \"type\": \"string\",\n                            \"default\": \"master\",\n                            \"description\": \"the branch name you wish to create a build from\"\n                          },\n                          \"tag\": {\n                            \"type\": \"string\",\n                            \"description\": \"a specific tag which will trigger the build\"\n                          },\n                          \"token\": {\n                            \"type\": \"string\",\n                            \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                          },\n                          \"gitKind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"github\",\n                              \"gitlab\"\n                            ],\n                            \"default\": \"github\"\n                          }\n                        },\n                        \"required\": [\n                          \"url\"\n                        ]\n                      },\n                      \"entryPoint\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"dependencyInstallCmd\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                      },\n                      \"baseImage\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                      },\n                      \"minHotWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"how many live algorithm instances will always run\",\n                        \"minimum\": 0,\n                        \"default\": 0\n                      },\n                      \"maxWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                        \"minimum\": 0,\n                        \"nullable\": true\n                      },\n                      \"quotaGuarantee\": {\n                        \"type\": \"integer\",\n                        \"nullable\": true,\n                        \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                        \"minimum\": 0\n                      },\n                      \"algorithmEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for algorithm\"\n                      },\n                      \"workerEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for worker\"\n                      },\n                      \"nodeSelector\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value labels for nodes constraint\",\n                        \"additionalProperties\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"labels\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                      },\n                      \"annotations\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                      },\n                      \"streamKind\": {\n                        \"enum\": [\n                          \"stateless\",\n                          \"stateful\"\n                        ]\n                      },\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"type of algorithm code resource\",\n                        \"enum\": [\n                          \"Git\",\n                          \"Code\",\n                          \"Image\"\n                        ],\n                        \"default\": \"Image\"\n                      },\n                      \"downloadFileExt\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                      }\n                    },\n                    \"required\": [\n                      \"name\"\n                    ]\n                  },\n                  \"options\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"forceUpdate\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"should set the newly created version as current\",\n                        \"default\": false\n                      },\n                      \"forceBuild\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"should force new build\",\n                        \"default\": false\n                      }\n                    }\n                  },\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\",\n                    \"description\": \"the algorithm source code (file types: zip, tar.gz)\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"algorithm descriptor to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"algorithm applied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"buildId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Pipeline name\"\n                    },\n                    \"algorithm\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific algorithm\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"algorithm-name\"\n                        },\n                        \"kind\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"batch\",\n                            \"stream\"\n                          ]\n                        },\n                        \"env\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"nodejs\",\n                            \"python\",\n                            \"java\"\n                          ]\n                        },\n                        \"algorithmImage\": {\n                          \"type\": \"string\",\n                          \"description\": \"image name as in the docker registry\",\n                          \"format\": \"algorithm-image\"\n                        },\n                        \"cpu\": {\n                          \"type\": \"number\",\n                          \"default\": 0.1,\n                          \"minimum\": 0,\n                          \"description\": \"algorithm cpu\"\n                        },\n                        \"gpu\": {\n                          \"type\": \"number\",\n                          \"minimum\": 0,\n                          \"description\": \"algorithm gpu\"\n                        },\n                        \"mem\": {\n                          \"type\": \"string\",\n                          \"description\": \"algorithm memory\",\n                          \"format\": \"algorithm-memory\",\n                          \"default\": \"256Mi\",\n                          \"example\": \"512Mi\"\n                        },\n                        \"reservedMemory\": {\n                          \"type\": \"string\",\n                          \"nullable\": true,\n                          \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                          \"format\": \"memory\",\n                          \"example\": \"512Mi\"\n                        },\n                        \"options\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"devMode\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                            },\n                            \"pending\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"pending algorithm\",\n                              \"default\": false\n                            },\n                            \"opengl\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                            }\n                          },\n                          \"default\": {}\n                        },\n                        \"version\": {\n                          \"type\": \"string\",\n                          \"description\": \"Hkube's auto increment semantic versioning\",\n                          \"readOnly\": true\n                        },\n                        \"mounts\": {\n                          \"type\": \"array\",\n                          \"nullable\": true,\n                          \"description\": \"a list of volumes to mount into the algorithm\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"pvcName\": {\n                                \"type\": \"string\",\n                                \"format\": \"algorithm-mount-pvc\",\n                                \"minLength\": 1,\n                                \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                              },\n                              \"path\": {\n                                \"type\": \"string\",\n                                \"format\": \"path\",\n                                \"minLength\": 1,\n                                \"description\": \"the mount path in the algorithm container\"\n                              },\n                              \"volumeType\": {\n                                \"type\": \"string\",\n                                \"description\": \"Special volume types such as emptyDir\",\n                                \"enum\": [\n                                  \"emptyDir\",\n                                  \"configMap\"\n                                ]\n                              }\n                            },\n                            \"required\": [\n                              \"pvcName\",\n                              \"path\"\n                            ]\n                          },\n                          \"uniqueItems\": true,\n                          \"example\": []\n                        },\n                        \"gitRepository\": {\n                          \"type\": \"object\",\n                          \"nullable\": true,\n                          \"properties\": {\n                            \"url\": {\n                              \"type\": \"string\",\n                              \"description\": \"a url for the git repository\",\n                              \"format\": \"url\"\n                            },\n                            \"commit\": {\n                              \"type\": \"object\",\n                              \"description\": \"commit details\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"commit id\"\n                                },\n                                \"timestamp\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"commit time\"\n                                },\n                                \"message\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"commit message\"\n                                }\n                              },\n                              \"required\": [\n                                \"id\"\n                              ]\n                            },\n                            \"branchName\": {\n                              \"type\": \"string\",\n                              \"default\": \"master\",\n                              \"description\": \"the branch name you wish to create a build from\"\n                            },\n                            \"tag\": {\n                              \"type\": \"string\",\n                              \"description\": \"a specific tag which will trigger the build\"\n                            },\n                            \"token\": {\n                              \"type\": \"string\",\n                              \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                            },\n                            \"gitKind\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"github\",\n                                \"gitlab\"\n                              ],\n                              \"default\": \"github\"\n                            }\n                          },\n                          \"required\": [\n                            \"url\"\n                          ]\n                        },\n                        \"entryPoint\": {\n                          \"type\": \"string\",\n                          \"nullable\": true\n                        },\n                        \"dependencyInstallCmd\": {\n                          \"type\": \"string\",\n                          \"nullable\": true,\n                          \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                        },\n                        \"baseImage\": {\n                          \"type\": \"string\",\n                          \"nullable\": true,\n                          \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                        },\n                        \"minHotWorkers\": {\n                          \"type\": \"integer\",\n                          \"description\": \"how many live algorithm instances will always run\",\n                          \"minimum\": 0,\n                          \"default\": 0\n                        },\n                        \"maxWorkers\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                          \"minimum\": 0,\n                          \"nullable\": true\n                        },\n                        \"quotaGuarantee\": {\n                          \"type\": \"integer\",\n                          \"nullable\": true,\n                          \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                          \"minimum\": 0\n                        },\n                        \"algorithmEnv\": {\n                          \"type\": \"object\",\n                          \"nullable\": true,\n                          \"description\": \"key value environment variables for algorithm\"\n                        },\n                        \"workerEnv\": {\n                          \"type\": \"object\",\n                          \"nullable\": true,\n                          \"description\": \"key value environment variables for worker\"\n                        },\n                        \"nodeSelector\": {\n                          \"type\": \"object\",\n                          \"nullable\": true,\n                          \"description\": \"key value labels for nodes constraint\",\n                          \"additionalProperties\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"labels\": {\n                          \"type\": \"object\",\n                          \"nullable\": true,\n                          \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                        },\n                        \"annotations\": {\n                          \"type\": \"object\",\n                          \"nullable\": true,\n                          \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                        },\n                        \"streamKind\": {\n                          \"enum\": [\n                            \"stateless\",\n                            \"stateful\"\n                          ]\n                        },\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"description\": \"type of algorithm code resource\",\n                          \"enum\": [\n                            \"Git\",\n                            \"Code\",\n                            \"Image\"\n                          ],\n                          \"default\": \"Image\"\n                        },\n                        \"downloadFileExt\": {\n                          \"type\": \"string\",\n                          \"nullable\": true,\n                          \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                        }\n                      },\n                      \"required\": [\n                        \"name\"\n                      ]\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/store/pipelines/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"StorePipelines\"\n        ],\n        \"summary\": \"Get pipeline\",\n        \"description\": \"Get specific pipeline from store\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"pipeline name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"kind\": {\n                      \"type\": \"string\",\n                      \"default\": \"batch\",\n                      \"example\": \"batch\",\n                      \"enum\": [\n                        \"batch\",\n                        \"stream\"\n                      ]\n                    },\n                    \"experimentName\": {\n                      \"type\": \"string\",\n                      \"description\": \"experiment name\",\n                      \"default\": \"main\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"experiment-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"pipeline description\"\n                    },\n                    \"nodes\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of nodes\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"nodeName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique node identifier\",\n                            \"minLength\": 1\n                          },\n                          \"algorithmName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier representing a specific algorithm\",\n                            \"minLength\": 1,\n                            \"maxLength\": 32,\n                            \"format\": \"algorithm-name\"\n                          },\n                          \"input\": {\n                            \"type\": \"array\",\n                            \"description\": \"The input for the algorithm\",\n                            \"items\": {},\n                            \"default\": []\n                          },\n                          \"ttl\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                            \"minimum\": 0,\n                            \"example\": 0\n                          },\n                          \"includeInResult\": {\n                            \"type\": \"boolean\"\n                          },\n                          \"metrics\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"tensorboard\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Should tensorboard metrics be collected.\"\n                              }\n                            }\n                          },\n                          \"retry\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"policy\": {\n                                \"type\": \"string\",\n                                \"default\": \"OnCrash\",\n                                \"enum\": [\n                                  \"Never\",\n                                  \"Always\",\n                                  \"OnError\",\n                                  \"OnCrash\"\n                                ]\n                              },\n                              \"limit\": {\n                                \"type\": \"integer\",\n                                \"minimum\": 1,\n                                \"default\": 3,\n                                \"example\": 1\n                              }\n                            }\n                          },\n                          \"batchOperation\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"indexed\",\n                              \"cartesian\"\n                            ]\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"default\": \"algorithm\",\n                            \"enum\": [\n                              \"algorithm\",\n                              \"pipeline\",\n                              \"debug\",\n                              \"dataSource\",\n                              \"gateway\",\n                              \"output\",\n                              \"hyperparamsTuner\"\n                            ]\n                          },\n                          \"spec\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Unique identifier representing a specific pipeline\",\n                                    \"minLength\": 1,\n                                    \"format\": \"pipeline-name\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"snapshot\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"name\": {\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\",\n                                  \"snapshot\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the output\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for output\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"nodeName\"\n                        ]\n                      }\n                    },\n                    \"flowInput\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"input object\"\n                    },\n                    \"webhooks\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"progress\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon progress\",\n                          \"example\": \"http://my-url-to-progress\"\n                        },\n                        \"result\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon result\",\n                          \"example\": \"http://my-url-to-result\"\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"options\": {\n                      \"default\": {},\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                          \"minimum\": 1,\n                          \"default\": 3600,\n                          \"example\": 3600\n                        },\n                        \"activeTtl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline active time to live in seconds (only active state)\",\n                          \"nullable\": true,\n                          \"minimum\": 1,\n                          \"example\": 3600\n                        },\n                        \"batchTolerance\": {\n                          \"type\": \"integer\",\n                          \"minimum\": 0,\n                          \"maximum\": 100,\n                          \"default\": 80,\n                          \"example\": 80\n                        },\n                        \"concurrentPipelines\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"amount\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"maximum\": 10000,\n                              \"example\": 1\n                            },\n                            \"rejectOnFailure\": {\n                              \"type\": \"boolean\",\n                              \"default\": true\n                            }\n                          },\n                          \"additionalProperties\": false\n                        },\n                        \"progressVerbosityLevel\": {\n                          \"type\": \"string\",\n                          \"default\": \"info\",\n                          \"example\": \"info\",\n                          \"enum\": [\n                            \"trace\",\n                            \"debug\",\n                            \"info\",\n                            \"warn\",\n                            \"error\",\n                            \"critical\"\n                          ]\n                        },\n                        \"debugOverride\": {\n                          \"type\": \"array\",\n                          \"description\": \"A list of algorithms to debug in this execution\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          },\n                          \"uniqueItems\": true\n                        }\n                      },\n                      \"description\": \"optional properties\"\n                    },\n                    \"priority\": {\n                      \"default\": 3,\n                      \"type\": \"integer\",\n                      \"minimum\": 1,\n                      \"maximum\": 5,\n                      \"example\": 3\n                    },\n                    \"triggers\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pipelines\": {\n                          \"type\": \"array\",\n                          \"description\": \"pipelines to activate upon result\",\n                          \"items\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"uniqueItems\": true\n                        },\n                        \"cron\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pattern\": {\n                              \"type\": \"string\",\n                              \"description\": \"cron job\",\n                              \"minLength\": 1,\n                              \"format\": \"cron\"\n                            },\n                            \"enabled\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"enable or disable cron job\",\n                              \"default\": false\n                            }\n                          }\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of tags\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"rootJobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"the root job id of the current tree\"\n                    },\n                    \"streaming\": {\n                      \"type\": \"object\",\n                      \"description\": \"streaming options\",\n                      \"properties\": {\n                        \"defaultFlow\": {\n                          \"type\": \"string\",\n                          \"description\": \"the name of the default stream flow\"\n                        },\n                        \"flows\": {\n                          \"type\": \"object\",\n                          \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                          \"example\": {\n                            \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                            \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                          }\n                        }\n                      }\n                    },\n                    \"edges\": {\n                      \"type\": \"array\",\n                      \"description\": \"edges define relation between nodes\",\n                      \"items\": {},\n                      \"example\": [\n                        {\n                          \"source\": \"A\",\n                          \"target\": \"B\"\n                        }\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"name\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"StorePipelines\"\n        ],\n        \"summary\": \"Delete pipeline\",\n        \"description\": \"Delete existing pipeline from store\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"pipeline name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/store/pipelines\": {\n      \"get\": {\n        \"tags\": [\n          \"StorePipelines\"\n        ],\n        \"summary\": \"Get all pipelines\",\n        \"description\": \"Get all pipelines from store\",\n        \"parameters\": [\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific pipeline\",\n                        \"minLength\": 1,\n                        \"format\": \"pipeline-name\"\n                      },\n                      \"kind\": {\n                        \"type\": \"string\",\n                        \"default\": \"batch\",\n                        \"example\": \"batch\",\n                        \"enum\": [\n                          \"batch\",\n                          \"stream\"\n                        ]\n                      },\n                      \"experimentName\": {\n                        \"type\": \"string\",\n                        \"description\": \"experiment name\",\n                        \"default\": \"main\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32,\n                        \"format\": \"experiment-name\"\n                      },\n                      \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"pipeline description\"\n                      },\n                      \"nodes\": {\n                        \"type\": \"array\",\n                        \"description\": \"Array of nodes\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"nodeName\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique node identifier\",\n                              \"minLength\": 1\n                            },\n                            \"algorithmName\": {\n                              \"type\": \"string\",\n                              \"description\": \"Unique identifier representing a specific algorithm\",\n                              \"minLength\": 1,\n                              \"maxLength\": 32,\n                              \"format\": \"algorithm-name\"\n                            },\n                            \"input\": {\n                              \"type\": \"array\",\n                              \"description\": \"The input for the algorithm\",\n                              \"items\": {},\n                              \"default\": []\n                            },\n                            \"ttl\": {\n                              \"type\": \"integer\",\n                              \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                              \"minimum\": 0,\n                              \"example\": 0\n                            },\n                            \"includeInResult\": {\n                              \"type\": \"boolean\"\n                            },\n                            \"metrics\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"tensorboard\": {\n                                  \"type\": \"boolean\",\n                                  \"description\": \"Should tensorboard metrics be collected.\"\n                                }\n                              }\n                            },\n                            \"retry\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"policy\": {\n                                  \"type\": \"string\",\n                                  \"default\": \"OnCrash\",\n                                  \"enum\": [\n                                    \"Never\",\n                                    \"Always\",\n                                    \"OnError\",\n                                    \"OnCrash\"\n                                  ]\n                                },\n                                \"limit\": {\n                                  \"type\": \"integer\",\n                                  \"minimum\": 1,\n                                  \"default\": 3,\n                                  \"example\": 1\n                                }\n                              }\n                            },\n                            \"batchOperation\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"indexed\",\n                                \"cartesian\"\n                              ]\n                            },\n                            \"kind\": {\n                              \"type\": \"string\",\n                              \"default\": \"algorithm\",\n                              \"enum\": [\n                                \"algorithm\",\n                                \"pipeline\",\n                                \"debug\",\n                                \"dataSource\",\n                                \"gateway\",\n                                \"output\",\n                                \"hyperparamsTuner\"\n                              ]\n                            },\n                            \"spec\": {\n                              \"anyOf\": [\n                                {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"Unique identifier representing a specific pipeline\",\n                                      \"minLength\": 1,\n                                      \"format\": \"pipeline-name\"\n                                    }\n                                  }\n                                },\n                                {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"gateway name\",\n                                      \"minLength\": 1,\n                                      \"maxLength\": 32,\n                                      \"format\": \"gateway-name\"\n                                    },\n                                    \"description\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"describe the gateway\"\n                                    },\n                                    \"mem\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"Memory allocated for streaming gateway\",\n                                      \"format\": \"algorithm-memory\",\n                                      \"default\": \"512Mi\"\n                                    },\n                                    \"cpu\": {\n                                      \"type\": \"number\",\n                                      \"description\": \"Cpu allocated for streaming gateway\",\n                                      \"default\": 0.5\n                                    }\n                                  }\n                                },\n                                {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"id\": {\n                                      \"type\": \"string\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"id\"\n                                  ]\n                                },\n                                {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"name\"\n                                  ]\n                                },\n                                {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    },\n                                    \"snapshot\": {\n                                      \"type\": \"object\",\n                                      \"properties\": {\n                                        \"name\": {\n                                          \"type\": \"string\"\n                                        }\n                                      }\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"name\",\n                                    \"snapshot\"\n                                  ]\n                                },\n                                {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"description\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"describe the output\"\n                                    },\n                                    \"mem\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"Memory allocated for output\",\n                                      \"format\": \"algorithm-memory\",\n                                      \"default\": \"512Mi\"\n                                    }\n                                  }\n                                },\n                                {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"gateway name\",\n                                      \"minLength\": 1,\n                                      \"maxLength\": 32,\n                                      \"format\": \"gateway-name\"\n                                    },\n                                    \"description\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"describe the gateway\"\n                                    },\n                                    \"mem\": {\n                                      \"type\": \"string\",\n                                      \"description\": \"Memory allocated for streaming gateway\",\n                                      \"format\": \"algorithm-memory\",\n                                      \"default\": \"512Mi\"\n                                    },\n                                    \"cpu\": {\n                                      \"type\": \"number\",\n                                      \"description\": \"Cpu allocated for streaming gateway\",\n                                      \"default\": 0.5\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          \"required\": [\n                            \"nodeName\"\n                          ]\n                        }\n                      },\n                      \"flowInput\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"input object\"\n                      },\n                      \"webhooks\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"progress\": {\n                            \"type\": \"string\",\n                            \"format\": \"url\",\n                            \"minLength\": 1,\n                            \"description\": \"url to activate upon progress\",\n                            \"example\": \"http://my-url-to-progress\"\n                          },\n                          \"result\": {\n                            \"type\": \"string\",\n                            \"format\": \"url\",\n                            \"minLength\": 1,\n                            \"description\": \"url to activate upon result\",\n                            \"example\": \"http://my-url-to-result\"\n                          }\n                        },\n                        \"additionalProperties\": false\n                      },\n                      \"options\": {\n                        \"default\": {},\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"ttl\": {\n                            \"type\": \"integer\",\n                            \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                            \"minimum\": 1,\n                            \"default\": 3600,\n                            \"example\": 3600\n                          },\n                          \"activeTtl\": {\n                            \"type\": \"integer\",\n                            \"description\": \"pipeline active time to live in seconds (only active state)\",\n                            \"nullable\": true,\n                            \"minimum\": 1,\n                            \"example\": 3600\n                          },\n                          \"batchTolerance\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 0,\n                            \"maximum\": 100,\n                            \"default\": 80,\n                            \"example\": 80\n                          },\n                          \"concurrentPipelines\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"amount\": {\n                                \"type\": \"integer\",\n                                \"minimum\": 1,\n                                \"maximum\": 10000,\n                                \"example\": 1\n                              },\n                              \"rejectOnFailure\": {\n                                \"type\": \"boolean\",\n                                \"default\": true\n                              }\n                            },\n                            \"additionalProperties\": false\n                          },\n                          \"progressVerbosityLevel\": {\n                            \"type\": \"string\",\n                            \"default\": \"info\",\n                            \"example\": \"info\",\n                            \"enum\": [\n                              \"trace\",\n                              \"debug\",\n                              \"info\",\n                              \"warn\",\n                              \"error\",\n                              \"critical\"\n                            ]\n                          },\n                          \"debugOverride\": {\n                            \"type\": \"array\",\n                            \"description\": \"A list of algorithms to debug in this execution\",\n                            \"items\": {\n                              \"type\": \"string\"\n                            },\n                            \"uniqueItems\": true\n                          }\n                        },\n                        \"description\": \"optional properties\"\n                      },\n                      \"priority\": {\n                        \"default\": 3,\n                        \"type\": \"integer\",\n                        \"minimum\": 1,\n                        \"maximum\": 5,\n                        \"example\": 3\n                      },\n                      \"triggers\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"pipelines\": {\n                            \"type\": \"array\",\n                            \"description\": \"pipelines to activate upon result\",\n                            \"items\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            },\n                            \"uniqueItems\": true\n                          },\n                          \"cron\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"pattern\": {\n                                \"type\": \"string\",\n                                \"description\": \"cron job\",\n                                \"minLength\": 1,\n                                \"format\": \"cron\"\n                              },\n                              \"enabled\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"enable or disable cron job\",\n                                \"default\": false\n                              }\n                            }\n                          }\n                        },\n                        \"additionalProperties\": false\n                      },\n                      \"tags\": {\n                        \"type\": \"array\",\n                        \"description\": \"Array of tags\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific tag\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32\n                        }\n                      },\n                      \"rootJobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"the root job id of the current tree\"\n                      },\n                      \"streaming\": {\n                        \"type\": \"object\",\n                        \"description\": \"streaming options\",\n                        \"properties\": {\n                          \"defaultFlow\": {\n                            \"type\": \"string\",\n                            \"description\": \"the name of the default stream flow\"\n                          },\n                          \"flows\": {\n                            \"type\": \"object\",\n                            \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                            \"example\": {\n                              \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                              \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                            }\n                          }\n                        }\n                      },\n                      \"edges\": {\n                        \"type\": \"array\",\n                        \"description\": \"edges define relation between nodes\",\n                        \"items\": {},\n                        \"example\": [\n                          {\n                            \"source\": \"A\",\n                            \"target\": \"B\"\n                          }\n                        ]\n                      }\n                    },\n                    \"required\": [\n                      \"name\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"StorePipelines\"\n        ],\n        \"summary\": \"Insert pipeline\",\n        \"description\": \"Insert new pipeline to store if not exist\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"default\": \"batch\",\n                    \"example\": \"batch\",\n                    \"enum\": [\n                      \"batch\",\n                      \"stream\"\n                    ]\n                  },\n                  \"experimentName\": {\n                    \"type\": \"string\",\n                    \"description\": \"experiment name\",\n                    \"default\": \"main\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"experiment-name\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"pipeline description\"\n                  },\n                  \"nodes\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of nodes\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"nodeName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique node identifier\",\n                          \"minLength\": 1\n                        },\n                        \"algorithmName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific algorithm\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"algorithm-name\"\n                        },\n                        \"input\": {\n                          \"type\": \"array\",\n                          \"description\": \"The input for the algorithm\",\n                          \"items\": {},\n                          \"default\": []\n                        },\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                          \"minimum\": 0,\n                          \"example\": 0\n                        },\n                        \"includeInResult\": {\n                          \"type\": \"boolean\"\n                        },\n                        \"metrics\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"tensorboard\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"Should tensorboard metrics be collected.\"\n                            }\n                          }\n                        },\n                        \"retry\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"policy\": {\n                              \"type\": \"string\",\n                              \"default\": \"OnCrash\",\n                              \"enum\": [\n                                \"Never\",\n                                \"Always\",\n                                \"OnError\",\n                                \"OnCrash\"\n                              ]\n                            },\n                            \"limit\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"default\": 3,\n                              \"example\": 1\n                            }\n                          }\n                        },\n                        \"batchOperation\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"indexed\",\n                            \"cartesian\"\n                          ]\n                        },\n                        \"kind\": {\n                          \"type\": \"string\",\n                          \"default\": \"algorithm\",\n                          \"enum\": [\n                            \"algorithm\",\n                            \"pipeline\",\n                            \"debug\",\n                            \"dataSource\",\n                            \"gateway\",\n                            \"output\",\n                            \"hyperparamsTuner\"\n                          ]\n                        },\n                        \"spec\": {\n                          \"anyOf\": [\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Unique identifier representing a specific pipeline\",\n                                  \"minLength\": 1,\n                                  \"format\": \"pipeline-name\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"id\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"name\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                },\n                                \"snapshot\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    }\n                                  }\n                                }\n                              },\n                              \"required\": [\n                                \"name\",\n                                \"snapshot\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the output\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for output\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"nodeName\"\n                      ]\n                    }\n                  },\n                  \"flowInput\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"input object\"\n                  },\n                  \"webhooks\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"progress\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon progress\",\n                        \"example\": \"http://my-url-to-progress\"\n                      },\n                      \"result\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon result\",\n                        \"example\": \"http://my-url-to-result\"\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"options\": {\n                    \"default\": {},\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"ttl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                        \"minimum\": 1,\n                        \"default\": 3600,\n                        \"example\": 3600\n                      },\n                      \"activeTtl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline active time to live in seconds (only active state)\",\n                        \"nullable\": true,\n                        \"minimum\": 1,\n                        \"example\": 3600\n                      },\n                      \"batchTolerance\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0,\n                        \"maximum\": 100,\n                        \"default\": 80,\n                        \"example\": 80\n                      },\n                      \"concurrentPipelines\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"amount\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1,\n                            \"maximum\": 10000,\n                            \"example\": 1\n                          },\n                          \"rejectOnFailure\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                          }\n                        },\n                        \"additionalProperties\": false\n                      },\n                      \"progressVerbosityLevel\": {\n                        \"type\": \"string\",\n                        \"default\": \"info\",\n                        \"example\": \"info\",\n                        \"enum\": [\n                          \"trace\",\n                          \"debug\",\n                          \"info\",\n                          \"warn\",\n                          \"error\",\n                          \"critical\"\n                        ]\n                      },\n                      \"debugOverride\": {\n                        \"type\": \"array\",\n                        \"description\": \"A list of algorithms to debug in this execution\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"uniqueItems\": true\n                      }\n                    },\n                    \"description\": \"optional properties\"\n                  },\n                  \"priority\": {\n                    \"default\": 3,\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"maximum\": 5,\n                    \"example\": 3\n                  },\n                  \"triggers\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"pipelines\": {\n                        \"type\": \"array\",\n                        \"description\": \"pipelines to activate upon result\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"uniqueItems\": true\n                      },\n                      \"cron\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"pattern\": {\n                            \"type\": \"string\",\n                            \"description\": \"cron job\",\n                            \"minLength\": 1,\n                            \"format\": \"cron\"\n                          },\n                          \"enabled\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"enable or disable cron job\",\n                            \"default\": false\n                          }\n                        }\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of tags\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific tag\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32\n                    }\n                  },\n                  \"rootJobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"the root job id of the current tree\"\n                  },\n                  \"streaming\": {\n                    \"type\": \"object\",\n                    \"description\": \"streaming options\",\n                    \"properties\": {\n                      \"defaultFlow\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the default stream flow\"\n                      },\n                      \"flows\": {\n                        \"type\": \"object\",\n                        \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                        \"example\": {\n                          \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                          \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                        }\n                      }\n                    }\n                  },\n                  \"edges\": {\n                    \"type\": \"array\",\n                    \"description\": \"edges define relation between nodes\",\n                    \"items\": {},\n                    \"example\": [\n                      {\n                        \"source\": \"A\",\n                        \"target\": \"B\"\n                      }\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for pipeline execution\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"pipeline created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"kind\": {\n                      \"type\": \"string\",\n                      \"default\": \"batch\",\n                      \"example\": \"batch\",\n                      \"enum\": [\n                        \"batch\",\n                        \"stream\"\n                      ]\n                    },\n                    \"experimentName\": {\n                      \"type\": \"string\",\n                      \"description\": \"experiment name\",\n                      \"default\": \"main\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"experiment-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"pipeline description\"\n                    },\n                    \"nodes\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of nodes\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"nodeName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique node identifier\",\n                            \"minLength\": 1\n                          },\n                          \"algorithmName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier representing a specific algorithm\",\n                            \"minLength\": 1,\n                            \"maxLength\": 32,\n                            \"format\": \"algorithm-name\"\n                          },\n                          \"input\": {\n                            \"type\": \"array\",\n                            \"description\": \"The input for the algorithm\",\n                            \"items\": {},\n                            \"default\": []\n                          },\n                          \"ttl\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                            \"minimum\": 0,\n                            \"example\": 0\n                          },\n                          \"includeInResult\": {\n                            \"type\": \"boolean\"\n                          },\n                          \"metrics\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"tensorboard\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Should tensorboard metrics be collected.\"\n                              }\n                            }\n                          },\n                          \"retry\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"policy\": {\n                                \"type\": \"string\",\n                                \"default\": \"OnCrash\",\n                                \"enum\": [\n                                  \"Never\",\n                                  \"Always\",\n                                  \"OnError\",\n                                  \"OnCrash\"\n                                ]\n                              },\n                              \"limit\": {\n                                \"type\": \"integer\",\n                                \"minimum\": 1,\n                                \"default\": 3,\n                                \"example\": 1\n                              }\n                            }\n                          },\n                          \"batchOperation\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"indexed\",\n                              \"cartesian\"\n                            ]\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"default\": \"algorithm\",\n                            \"enum\": [\n                              \"algorithm\",\n                              \"pipeline\",\n                              \"debug\",\n                              \"dataSource\",\n                              \"gateway\",\n                              \"output\",\n                              \"hyperparamsTuner\"\n                            ]\n                          },\n                          \"spec\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Unique identifier representing a specific pipeline\",\n                                    \"minLength\": 1,\n                                    \"format\": \"pipeline-name\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"snapshot\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"name\": {\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\",\n                                  \"snapshot\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the output\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for output\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"nodeName\"\n                        ]\n                      }\n                    },\n                    \"flowInput\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"input object\"\n                    },\n                    \"webhooks\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"progress\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon progress\",\n                          \"example\": \"http://my-url-to-progress\"\n                        },\n                        \"result\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon result\",\n                          \"example\": \"http://my-url-to-result\"\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"options\": {\n                      \"default\": {},\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                          \"minimum\": 1,\n                          \"default\": 3600,\n                          \"example\": 3600\n                        },\n                        \"activeTtl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline active time to live in seconds (only active state)\",\n                          \"nullable\": true,\n                          \"minimum\": 1,\n                          \"example\": 3600\n                        },\n                        \"batchTolerance\": {\n                          \"type\": \"integer\",\n                          \"minimum\": 0,\n                          \"maximum\": 100,\n                          \"default\": 80,\n                          \"example\": 80\n                        },\n                        \"concurrentPipelines\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"amount\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"maximum\": 10000,\n                              \"example\": 1\n                            },\n                            \"rejectOnFailure\": {\n                              \"type\": \"boolean\",\n                              \"default\": true\n                            }\n                          },\n                          \"additionalProperties\": false\n                        },\n                        \"progressVerbosityLevel\": {\n                          \"type\": \"string\",\n                          \"default\": \"info\",\n                          \"example\": \"info\",\n                          \"enum\": [\n                            \"trace\",\n                            \"debug\",\n                            \"info\",\n                            \"warn\",\n                            \"error\",\n                            \"critical\"\n                          ]\n                        },\n                        \"debugOverride\": {\n                          \"type\": \"array\",\n                          \"description\": \"A list of algorithms to debug in this execution\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          },\n                          \"uniqueItems\": true\n                        }\n                      },\n                      \"description\": \"optional properties\"\n                    },\n                    \"priority\": {\n                      \"default\": 3,\n                      \"type\": \"integer\",\n                      \"minimum\": 1,\n                      \"maximum\": 5,\n                      \"example\": 3\n                    },\n                    \"triggers\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pipelines\": {\n                          \"type\": \"array\",\n                          \"description\": \"pipelines to activate upon result\",\n                          \"items\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"uniqueItems\": true\n                        },\n                        \"cron\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pattern\": {\n                              \"type\": \"string\",\n                              \"description\": \"cron job\",\n                              \"minLength\": 1,\n                              \"format\": \"cron\"\n                            },\n                            \"enabled\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"enable or disable cron job\",\n                              \"default\": false\n                            }\n                          }\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of tags\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"rootJobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"the root job id of the current tree\"\n                    },\n                    \"streaming\": {\n                      \"type\": \"object\",\n                      \"description\": \"streaming options\",\n                      \"properties\": {\n                        \"defaultFlow\": {\n                          \"type\": \"string\",\n                          \"description\": \"the name of the default stream flow\"\n                        },\n                        \"flows\": {\n                          \"type\": \"object\",\n                          \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                          \"example\": {\n                            \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                            \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                          }\n                        }\n                      }\n                    },\n                    \"edges\": {\n                      \"type\": \"array\",\n                      \"description\": \"edges define relation between nodes\",\n                      \"items\": {},\n                      \"example\": [\n                        {\n                          \"source\": \"A\",\n                          \"target\": \"B\"\n                        }\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"name\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"pipeline conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"StorePipelines\"\n        ],\n        \"summary\": \"Update pipeline\",\n        \"description\": \"Update existing pipeline\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"default\": \"batch\",\n                    \"example\": \"batch\",\n                    \"enum\": [\n                      \"batch\",\n                      \"stream\"\n                    ]\n                  },\n                  \"experimentName\": {\n                    \"type\": \"string\",\n                    \"description\": \"experiment name\",\n                    \"default\": \"main\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"experiment-name\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"pipeline description\"\n                  },\n                  \"nodes\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of nodes\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"nodeName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique node identifier\",\n                          \"minLength\": 1\n                        },\n                        \"algorithmName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific algorithm\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"algorithm-name\"\n                        },\n                        \"input\": {\n                          \"type\": \"array\",\n                          \"description\": \"The input for the algorithm\",\n                          \"items\": {},\n                          \"default\": []\n                        },\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                          \"minimum\": 0,\n                          \"example\": 0\n                        },\n                        \"includeInResult\": {\n                          \"type\": \"boolean\"\n                        },\n                        \"metrics\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"tensorboard\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"Should tensorboard metrics be collected.\"\n                            }\n                          }\n                        },\n                        \"retry\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"policy\": {\n                              \"type\": \"string\",\n                              \"default\": \"OnCrash\",\n                              \"enum\": [\n                                \"Never\",\n                                \"Always\",\n                                \"OnError\",\n                                \"OnCrash\"\n                              ]\n                            },\n                            \"limit\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"default\": 3,\n                              \"example\": 1\n                            }\n                          }\n                        },\n                        \"batchOperation\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"indexed\",\n                            \"cartesian\"\n                          ]\n                        },\n                        \"kind\": {\n                          \"type\": \"string\",\n                          \"default\": \"algorithm\",\n                          \"enum\": [\n                            \"algorithm\",\n                            \"pipeline\",\n                            \"debug\",\n                            \"dataSource\",\n                            \"gateway\",\n                            \"output\",\n                            \"hyperparamsTuner\"\n                          ]\n                        },\n                        \"spec\": {\n                          \"anyOf\": [\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Unique identifier representing a specific pipeline\",\n                                  \"minLength\": 1,\n                                  \"format\": \"pipeline-name\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"id\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"id\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"name\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\"\n                                },\n                                \"snapshot\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"name\": {\n                                      \"type\": \"string\"\n                                    }\n                                  }\n                                }\n                              },\n                              \"required\": [\n                                \"name\",\n                                \"snapshot\"\n                              ]\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the output\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for output\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                }\n                              }\n                            },\n                            {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"name\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"gateway name\",\n                                  \"minLength\": 1,\n                                  \"maxLength\": 32,\n                                  \"format\": \"gateway-name\"\n                                },\n                                \"description\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"describe the gateway\"\n                                },\n                                \"mem\": {\n                                  \"type\": \"string\",\n                                  \"description\": \"Memory allocated for streaming gateway\",\n                                  \"format\": \"algorithm-memory\",\n                                  \"default\": \"512Mi\"\n                                },\n                                \"cpu\": {\n                                  \"type\": \"number\",\n                                  \"description\": \"Cpu allocated for streaming gateway\",\n                                  \"default\": 0.5\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"nodeName\"\n                      ]\n                    }\n                  },\n                  \"flowInput\": {\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"description\": \"input object\"\n                  },\n                  \"webhooks\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"progress\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon progress\",\n                        \"example\": \"http://my-url-to-progress\"\n                      },\n                      \"result\": {\n                        \"type\": \"string\",\n                        \"format\": \"url\",\n                        \"minLength\": 1,\n                        \"description\": \"url to activate upon result\",\n                        \"example\": \"http://my-url-to-result\"\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"options\": {\n                    \"default\": {},\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"ttl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                        \"minimum\": 1,\n                        \"default\": 3600,\n                        \"example\": 3600\n                      },\n                      \"activeTtl\": {\n                        \"type\": \"integer\",\n                        \"description\": \"pipeline active time to live in seconds (only active state)\",\n                        \"nullable\": true,\n                        \"minimum\": 1,\n                        \"example\": 3600\n                      },\n                      \"batchTolerance\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0,\n                        \"maximum\": 100,\n                        \"default\": 80,\n                        \"example\": 80\n                      },\n                      \"concurrentPipelines\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"amount\": {\n                            \"type\": \"integer\",\n                            \"minimum\": 1,\n                            \"maximum\": 10000,\n                            \"example\": 1\n                          },\n                          \"rejectOnFailure\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                          }\n                        },\n                        \"additionalProperties\": false\n                      },\n                      \"progressVerbosityLevel\": {\n                        \"type\": \"string\",\n                        \"default\": \"info\",\n                        \"example\": \"info\",\n                        \"enum\": [\n                          \"trace\",\n                          \"debug\",\n                          \"info\",\n                          \"warn\",\n                          \"error\",\n                          \"critical\"\n                        ]\n                      },\n                      \"debugOverride\": {\n                        \"type\": \"array\",\n                        \"description\": \"A list of algorithms to debug in this execution\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"uniqueItems\": true\n                      }\n                    },\n                    \"description\": \"optional properties\"\n                  },\n                  \"priority\": {\n                    \"default\": 3,\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"maximum\": 5,\n                    \"example\": 3\n                  },\n                  \"triggers\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"pipelines\": {\n                        \"type\": \"array\",\n                        \"description\": \"pipelines to activate upon result\",\n                        \"items\": {\n                          \"type\": \"string\",\n                          \"minLength\": 1\n                        },\n                        \"uniqueItems\": true\n                      },\n                      \"cron\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"pattern\": {\n                            \"type\": \"string\",\n                            \"description\": \"cron job\",\n                            \"minLength\": 1,\n                            \"format\": \"cron\"\n                          },\n                          \"enabled\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"enable or disable cron job\",\n                            \"default\": false\n                          }\n                        }\n                      }\n                    },\n                    \"additionalProperties\": false\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of tags\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific tag\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32\n                    }\n                  },\n                  \"rootJobId\": {\n                    \"type\": \"string\",\n                    \"description\": \"the root job id of the current tree\"\n                  },\n                  \"streaming\": {\n                    \"type\": \"object\",\n                    \"description\": \"streaming options\",\n                    \"properties\": {\n                      \"defaultFlow\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the default stream flow\"\n                      },\n                      \"flows\": {\n                        \"type\": \"object\",\n                        \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                        \"example\": {\n                          \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                          \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                        }\n                      }\n                    }\n                  },\n                  \"edges\": {\n                    \"type\": \"array\",\n                    \"description\": \"edges define relation between nodes\",\n                    \"items\": {},\n                    \"example\": [\n                      {\n                        \"source\": \"A\",\n                        \"target\": \"B\"\n                      }\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for pipeline execution\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"kind\": {\n                      \"type\": \"string\",\n                      \"default\": \"batch\",\n                      \"example\": \"batch\",\n                      \"enum\": [\n                        \"batch\",\n                        \"stream\"\n                      ]\n                    },\n                    \"experimentName\": {\n                      \"type\": \"string\",\n                      \"description\": \"experiment name\",\n                      \"default\": \"main\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"experiment-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"pipeline description\"\n                    },\n                    \"nodes\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of nodes\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"nodeName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique node identifier\",\n                            \"minLength\": 1\n                          },\n                          \"algorithmName\": {\n                            \"type\": \"string\",\n                            \"description\": \"Unique identifier representing a specific algorithm\",\n                            \"minLength\": 1,\n                            \"maxLength\": 32,\n                            \"format\": \"algorithm-name\"\n                          },\n                          \"input\": {\n                            \"type\": \"array\",\n                            \"description\": \"The input for the algorithm\",\n                            \"items\": {},\n                            \"default\": []\n                          },\n                          \"ttl\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                            \"minimum\": 0,\n                            \"example\": 0\n                          },\n                          \"includeInResult\": {\n                            \"type\": \"boolean\"\n                          },\n                          \"metrics\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"tensorboard\": {\n                                \"type\": \"boolean\",\n                                \"description\": \"Should tensorboard metrics be collected.\"\n                              }\n                            }\n                          },\n                          \"retry\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"policy\": {\n                                \"type\": \"string\",\n                                \"default\": \"OnCrash\",\n                                \"enum\": [\n                                  \"Never\",\n                                  \"Always\",\n                                  \"OnError\",\n                                  \"OnCrash\"\n                                ]\n                              },\n                              \"limit\": {\n                                \"type\": \"integer\",\n                                \"minimum\": 1,\n                                \"default\": 3,\n                                \"example\": 1\n                              }\n                            }\n                          },\n                          \"batchOperation\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"indexed\",\n                              \"cartesian\"\n                            ]\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"default\": \"algorithm\",\n                            \"enum\": [\n                              \"algorithm\",\n                              \"pipeline\",\n                              \"debug\",\n                              \"dataSource\",\n                              \"gateway\",\n                              \"output\",\n                              \"hyperparamsTuner\"\n                            ]\n                          },\n                          \"spec\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Unique identifier representing a specific pipeline\",\n                                    \"minLength\": 1,\n                                    \"format\": \"pipeline-name\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"id\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"snapshot\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"name\": {\n                                        \"type\": \"string\"\n                                      }\n                                    }\n                                  }\n                                },\n                                \"required\": [\n                                  \"name\",\n                                  \"snapshot\"\n                                ]\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the output\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for output\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  }\n                                }\n                              },\n                              {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"name\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"gateway name\",\n                                    \"minLength\": 1,\n                                    \"maxLength\": 32,\n                                    \"format\": \"gateway-name\"\n                                  },\n                                  \"description\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"describe the gateway\"\n                                  },\n                                  \"mem\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Memory allocated for streaming gateway\",\n                                    \"format\": \"algorithm-memory\",\n                                    \"default\": \"512Mi\"\n                                  },\n                                  \"cpu\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Cpu allocated for streaming gateway\",\n                                    \"default\": 0.5\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        },\n                        \"required\": [\n                          \"nodeName\"\n                        ]\n                      }\n                    },\n                    \"flowInput\": {\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"description\": \"input object\"\n                    },\n                    \"webhooks\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"progress\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon progress\",\n                          \"example\": \"http://my-url-to-progress\"\n                        },\n                        \"result\": {\n                          \"type\": \"string\",\n                          \"format\": \"url\",\n                          \"minLength\": 1,\n                          \"description\": \"url to activate upon result\",\n                          \"example\": \"http://my-url-to-result\"\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"options\": {\n                      \"default\": {},\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ttl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                          \"minimum\": 1,\n                          \"default\": 3600,\n                          \"example\": 3600\n                        },\n                        \"activeTtl\": {\n                          \"type\": \"integer\",\n                          \"description\": \"pipeline active time to live in seconds (only active state)\",\n                          \"nullable\": true,\n                          \"minimum\": 1,\n                          \"example\": 3600\n                        },\n                        \"batchTolerance\": {\n                          \"type\": \"integer\",\n                          \"minimum\": 0,\n                          \"maximum\": 100,\n                          \"default\": 80,\n                          \"example\": 80\n                        },\n                        \"concurrentPipelines\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"amount\": {\n                              \"type\": \"integer\",\n                              \"minimum\": 1,\n                              \"maximum\": 10000,\n                              \"example\": 1\n                            },\n                            \"rejectOnFailure\": {\n                              \"type\": \"boolean\",\n                              \"default\": true\n                            }\n                          },\n                          \"additionalProperties\": false\n                        },\n                        \"progressVerbosityLevel\": {\n                          \"type\": \"string\",\n                          \"default\": \"info\",\n                          \"example\": \"info\",\n                          \"enum\": [\n                            \"trace\",\n                            \"debug\",\n                            \"info\",\n                            \"warn\",\n                            \"error\",\n                            \"critical\"\n                          ]\n                        },\n                        \"debugOverride\": {\n                          \"type\": \"array\",\n                          \"description\": \"A list of algorithms to debug in this execution\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          },\n                          \"uniqueItems\": true\n                        }\n                      },\n                      \"description\": \"optional properties\"\n                    },\n                    \"priority\": {\n                      \"default\": 3,\n                      \"type\": \"integer\",\n                      \"minimum\": 1,\n                      \"maximum\": 5,\n                      \"example\": 3\n                    },\n                    \"triggers\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pipelines\": {\n                          \"type\": \"array\",\n                          \"description\": \"pipelines to activate upon result\",\n                          \"items\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"uniqueItems\": true\n                        },\n                        \"cron\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pattern\": {\n                              \"type\": \"string\",\n                              \"description\": \"cron job\",\n                              \"minLength\": 1,\n                              \"format\": \"cron\"\n                            },\n                            \"enabled\": {\n                              \"type\": \"boolean\",\n                              \"description\": \"enable or disable cron job\",\n                              \"default\": false\n                            }\n                          }\n                        }\n                      },\n                      \"additionalProperties\": false\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of tags\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"rootJobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"the root job id of the current tree\"\n                    },\n                    \"streaming\": {\n                      \"type\": \"object\",\n                      \"description\": \"streaming options\",\n                      \"properties\": {\n                        \"defaultFlow\": {\n                          \"type\": \"string\",\n                          \"description\": \"the name of the default stream flow\"\n                        },\n                        \"flows\": {\n                          \"type\": \"object\",\n                          \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                          \"example\": {\n                            \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                            \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                          }\n                        }\n                      }\n                    },\n                    \"edges\": {\n                      \"type\": \"array\",\n                      \"description\": \"edges define relation between nodes\",\n                      \"items\": {},\n                      \"example\": [\n                        {\n                          \"source\": \"A\",\n                          \"target\": \"B\"\n                        }\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"name\"\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/webhooks/status/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Webhooks\"\n        ],\n        \"summary\": \"Webhook status\",\n        \"description\": \"Returns a webhook status for specific pipeline\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing pipeline execution\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline result\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"timestamp\": {\n                      \"type\": \"string\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\"\n                    },\n                    \"pipelineStatus\": {\n                      \"type\": \"string\"\n                    },\n                    \"responseStatus\": {\n                      \"type\": \"string\"\n                    },\n                    \"httpResponse\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"statusCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"statusMessage\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/webhooks/results/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Webhooks\"\n        ],\n        \"summary\": \"Webhook result\",\n        \"description\": \"Returns a webhook result for specific pipeline\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing pipeline execution\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"timestamp\": {\n                      \"type\": \"string\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\"\n                    },\n                    \"pipelineStatus\": {\n                      \"type\": \"string\"\n                    },\n                    \"responseStatus\": {\n                      \"type\": \"string\"\n                    },\n                    \"httpResponse\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"statusCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"statusMessage\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"webhook Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/webhooks/list/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Webhooks\"\n        ],\n        \"summary\": \"Webhook list\",\n        \"description\": \"Returns all webhooks for specific pipeline\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing pipeline execution\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pipeline result\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"timestamp\": {\n                      \"type\": \"string\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\"\n                    },\n                    \"pipelineStatus\": {\n                      \"type\": \"string\"\n                    },\n                    \"responseStatus\": {\n                      \"type\": \"string\"\n                    },\n                    \"httpResponse\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"statusCode\": {\n                          \"type\": \"string\"\n                        },\n                        \"statusMessage\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"webhook Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/tensors\": {\n      \"post\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Start board\",\n        \"description\": \"start board\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"pipelineName\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  },\n                  \"nodeName\": {\n                    \"type\": \"string\"\n                  },\n                  \"jobId\": {\n                    \"type\": \"string\"\n                  },\n                  \"taskId\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"start board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/tensors/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Board details\",\n        \"description\": \"Board details\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing board\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"get board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"relativeUrl\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"board Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Stop board\",\n        \"description\": \"Stop board\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing board\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"delete board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"board Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/tensors/\": {\n      \"get\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Board list\",\n        \"description\": \"Board list\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"start board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"Array of boards\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"status\": {\n                        \"type\": \"string\"\n                      },\n                      \"relativeUrl\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/optunas\": {\n      \"post\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Start board\",\n        \"description\": \"start board\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobId\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"start board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/optunas/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Board details\",\n        \"description\": \"Board details\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing board\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"get board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"relativeUrl\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"board Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Stop board\",\n        \"description\": \"Stop board\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing board\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"delete board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"board Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/boards/optunas/\": {\n      \"get\": {\n        \"tags\": [\n          \"Boards\"\n        ],\n        \"summary\": \"Board list\",\n        \"description\": \"Board list\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"start board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"description\": \"Array of boards\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"status\": {\n                        \"type\": \"string\"\n                      },\n                      \"relativeUrl\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/preferred\": {\n      \"get\": {\n        \"tags\": [\n          \"Preferred\"\n        ],\n        \"summary\": \"Get preferred\",\n        \"description\": \"Get preferred\",\n        \"parameters\": [\n          {\n            \"name\": \"firstJobId\",\n            \"in\": \"query\",\n            \"description\": \"from this job and on\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lastJobId\",\n            \"in\": \"query\",\n            \"description\": \"up to this job\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"number of records in page\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pipelineName\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"filter by pipeline\"\n          },\n          {\n            \"name\": \"tag\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"filter by tag\"\n          },\n          {\n            \"name\": \"lastJobs\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"description\": \"Should get the jobs from the end of the list\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get preferred\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"hits\": {\n                      \"type\": \"array\",\n                      \"description\": \"the actual result records\",\n                      \"items\": {}\n                    },\n                    \"cursor\": {\n                      \"type\": \"string\",\n                      \"description\": \"this cursor to the next query can be used for pagination\"\n                    },\n                    \"timeTook\": {\n                      \"type\": \"string\",\n                      \"description\": \"the query completion time took in milliseconds\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Preferred\"\n        ],\n        \"summary\": \"Add to preferred\",\n        \"description\": \"Add to preferred\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    }\n                  },\n                  \"position\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"first\",\n                      \"last\",\n                      \"before\",\n                      \"after\"\n                    ]\n                  },\n                  \"query\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"tag\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      },\n                      \"jobId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      },\n                      \"pipeline\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific pipeline\",\n                        \"minLength\": 1,\n                        \"format\": \"pipeline-name\"\n                      }\n                    }\n                  }\n                },\n                \"required\": [\n                  \"jobs\",\n                  \"position\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"start board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      }\n                    },\n                    \"position\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"first\",\n                        \"last\",\n                        \"before\",\n                        \"after\"\n                      ]\n                    },\n                    \"query\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"tag\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific tag\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32\n                        },\n                        \"jobId\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing pipeline execution\"\n                        },\n                        \"pipeline\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific pipeline\",\n                          \"minLength\": 1,\n                          \"format\": \"pipeline-name\"\n                        }\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"jobs\",\n                    \"position\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/preferred/deletes\": {\n      \"post\": {\n        \"tags\": [\n          \"Preferred\"\n        ],\n        \"summary\": \"Remover from preferred\",\n        \"description\": \"Remover from preferred\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"jobs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"jobs\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"start board response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"jobs\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/preferred/aggregation/pipeline\": {\n      \"get\": {\n        \"tags\": [\n          \"Preferred\"\n        ],\n        \"summary\": \"Get preferred\",\n        \"description\": \"Get preferred\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get preferred\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"pipeline\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"jobs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/preferred/aggregation/tag\": {\n      \"get\": {\n        \"tags\": [\n          \"Preferred\"\n        ],\n        \"summary\": \"Get preferred\",\n        \"description\": \"Get preferred\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get preferred\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"pipeline\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"jobs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/managed/aggregation/pipeline\": {\n      \"get\": {\n        \"tags\": [\n          \"Managed\"\n        ],\n        \"summary\": \"Get preferred\",\n        \"description\": \"Get preferred\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get preferred\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"pipeline\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"jobs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/managed/aggregation/tag\": {\n      \"get\": {\n        \"tags\": [\n          \"Managed\"\n        ],\n        \"summary\": \"Get preferred\",\n        \"description\": \"Get preferred\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get preferred\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"pipeline\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific pipeline\",\n                      \"minLength\": 1,\n                      \"format\": \"pipeline-name\"\n                    },\n                    \"tags\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific tag\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32\n                      }\n                    },\n                    \"jobs\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing pipeline execution\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/queue/managed/\": {\n      \"get\": {\n        \"tags\": [\n          \"Managed\"\n        ],\n        \"summary\": \"Get Managed\",\n        \"description\": \"Get managed\",\n        \"parameters\": [\n          {\n            \"name\": \"firstJobId\",\n            \"in\": \"query\",\n            \"description\": \"from this job and on\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lastJobId\",\n            \"in\": \"query\",\n            \"description\": \"up to this job\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"description\": \"number of records in page\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pipelineName\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"filter by pipeline\"\n          },\n          {\n            \"name\": \"tag\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"filter by tag\"\n          },\n          {\n            \"name\": \"lastJobs\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"description\": \"Should get the jobs from the end of the list\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get managed jobs\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"hits\": {\n                      \"type\": \"array\",\n                      \"description\": \"the actual result records\",\n                      \"items\": {}\n                    },\n                    \"cursor\": {\n                      \"type\": \"string\",\n                      \"description\": \"this cursor to the next query can be used for pagination\"\n                    },\n                    \"timeTook\": {\n                      \"type\": \"string\",\n                      \"description\": \"the query completion time took in milliseconds\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/builds/status/{buildId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Builds\"\n        ],\n        \"summary\": \"Get build status\",\n        \"description\": \"returns the build status by specific build id\",\n        \"parameters\": [\n          {\n            \"name\": \"buildId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing build for algorithm\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"algorithm apply response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"build Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/builds/list/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Builds\"\n        ],\n        \"summary\": \"Get build list\",\n        \"description\": \"returns all builds that related to algorithm\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by asc or desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"algorithm apply list response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"build Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/builds/stop\": {\n      \"post\": {\n        \"tags\": [\n          \"Builds\"\n        ],\n        \"summary\": \"Stop build\",\n        \"description\": \"stop build\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"buildId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing build id\"\n                  }\n                },\n                \"required\": [\n                  \"buildId\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"stop build response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"build Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/builds/rerun\": {\n      \"post\": {\n        \"tags\": [\n          \"Builds\"\n        ],\n        \"summary\": \"Rerun build\",\n        \"description\": \"rerun build\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"buildId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing build id\"\n                  }\n                },\n                \"required\": [\n                  \"buildId\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"stop build response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"build Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/builds/webhook/github\": {\n      \"post\": {\n        \"tags\": [\n          \"Builds\"\n        ],\n        \"summary\": \"Insert webhook for automating build after push\",\n        \"description\": \"webhook for automating  build algorithm directly from github\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-from-urlencoded\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"github\": {\n                    \"type\": \"object\",\n                    \"description\": \"github object which received after push for more information https://developer.github.com/webhooks/\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"github webhook data\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"webhook created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/builds/webhook/gitlab\": {\n      \"post\": {\n        \"tags\": [\n          \"Builds\"\n        ],\n        \"summary\": \"Insert webhook for automating build after push\",\n        \"description\": \"webhook for automating  build algorithm directly from gitlab\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"gitlab\": {\n                    \"type\": \"object\",\n                    \"description\": \"gitlab object which received after push for more information https://docs.gitlab.com/ee/user/project/integrations/webhooks.html\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"gitlab webhook data\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"webhook created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/readme/algorithms/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Algorithm Readme\"\n        ],\n        \"summary\": \"Get stored readme by name\",\n        \"description\": \"Get stored readme by name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Algorithm Readme\"\n        ],\n        \"summary\": \"Insert new readme to algorithm\",\n        \"description\": \"Insert new algorithm to store if not exists\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"README.md\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\",\n                    \"description\": \"the readme.md file name of the file must be README.md\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"algorithm readme to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"algorithm created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"algorithm conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Algorithm Readme\"\n        ],\n        \"summary\": \"Update readme to algorithm\",\n        \"description\": \"Update algorithm's store if not exists\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"README.md\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\",\n                    \"description\": \"the readme.md file name of the file must be README.md\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"algorithm readme to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"algorithm readme updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"algorithm conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Algorithm Readme\"\n        ],\n        \"summary\": \"Delete algorithm\",\n        \"description\": \"Delete existing algorithm from store\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/readme/pipelines/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Pipeline Readme\"\n        ],\n        \"summary\": \"Get stored readme by name\",\n        \"description\": \"Get stored readme by name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"pipelines name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Pipeline Readme\"\n        ],\n        \"summary\": \"Insert new readme to pipelines\",\n        \"description\": \"Insert new pipeline to store if not exists\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"pipeline name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"README.md\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\",\n                    \"description\": \"the readme.md file name of the file must be README.md\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"pipeline readme to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"pipeline created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"pipeline conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Pipeline Readme\"\n        ],\n        \"summary\": \"Update readme to pipeline\",\n        \"description\": \"Update pipeline's store if not exists\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"pipeline name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"README.md\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\",\n                    \"description\": \"the readme.md file name of the file must be README.md\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"pipeline readme to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"pipeline readme updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"pipeline conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Pipeline Readme\"\n        ],\n        \"summary\": \"Delete pipeline\",\n        \"description\": \"Delete existing pipeline from store\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"pipeline name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/versions/algorithms/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Versions\"\n        ],\n        \"summary\": \"Get algorithm versions\",\n        \"description\": \"returns list of algorithm versions.\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing a specific algorithm\",\n              \"minLength\": 1,\n              \"maxLength\": 32,\n              \"format\": \"algorithm-name\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by asc or desc\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific algorithm\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32,\n                        \"format\": \"algorithm-name\"\n                      },\n                      \"kind\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"batch\",\n                          \"stream\"\n                        ]\n                      },\n                      \"env\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"nodejs\",\n                          \"python\",\n                          \"java\"\n                        ]\n                      },\n                      \"algorithmImage\": {\n                        \"type\": \"string\",\n                        \"description\": \"image name as in the docker registry\",\n                        \"format\": \"algorithm-image\"\n                      },\n                      \"cpu\": {\n                        \"type\": \"number\",\n                        \"default\": 0.1,\n                        \"minimum\": 0,\n                        \"description\": \"algorithm cpu\"\n                      },\n                      \"gpu\": {\n                        \"type\": \"number\",\n                        \"minimum\": 0,\n                        \"description\": \"algorithm gpu\"\n                      },\n                      \"mem\": {\n                        \"type\": \"string\",\n                        \"description\": \"algorithm memory\",\n                        \"format\": \"algorithm-memory\",\n                        \"default\": \"256Mi\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"reservedMemory\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                        \"format\": \"memory\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"options\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"devMode\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                          },\n                          \"pending\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"pending algorithm\",\n                            \"default\": false\n                          },\n                          \"opengl\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                          }\n                        },\n                        \"default\": {}\n                      },\n                      \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"Hkube's auto increment semantic versioning\",\n                        \"readOnly\": true\n                      },\n                      \"mounts\": {\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"a list of volumes to mount into the algorithm\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pvcName\": {\n                              \"type\": \"string\",\n                              \"format\": \"algorithm-mount-pvc\",\n                              \"minLength\": 1,\n                              \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                            },\n                            \"path\": {\n                              \"type\": \"string\",\n                              \"format\": \"path\",\n                              \"minLength\": 1,\n                              \"description\": \"the mount path in the algorithm container\"\n                            },\n                            \"volumeType\": {\n                              \"type\": \"string\",\n                              \"description\": \"Special volume types such as emptyDir\",\n                              \"enum\": [\n                                \"emptyDir\",\n                                \"configMap\"\n                              ]\n                            }\n                          },\n                          \"required\": [\n                            \"pvcName\",\n                            \"path\"\n                          ]\n                        },\n                        \"uniqueItems\": true,\n                        \"example\": []\n                      },\n                      \"gitRepository\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"a url for the git repository\",\n                            \"format\": \"url\"\n                          },\n                          \"commit\": {\n                            \"type\": \"object\",\n                            \"description\": \"commit details\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit id\"\n                              },\n                              \"timestamp\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit time\"\n                              },\n                              \"message\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit message\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\"\n                            ]\n                          },\n                          \"branchName\": {\n                            \"type\": \"string\",\n                            \"default\": \"master\",\n                            \"description\": \"the branch name you wish to create a build from\"\n                          },\n                          \"tag\": {\n                            \"type\": \"string\",\n                            \"description\": \"a specific tag which will trigger the build\"\n                          },\n                          \"token\": {\n                            \"type\": \"string\",\n                            \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                          },\n                          \"gitKind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"github\",\n                              \"gitlab\"\n                            ],\n                            \"default\": \"github\"\n                          }\n                        },\n                        \"required\": [\n                          \"url\"\n                        ]\n                      },\n                      \"entryPoint\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"dependencyInstallCmd\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                      },\n                      \"baseImage\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                      },\n                      \"minHotWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"how many live algorithm instances will always run\",\n                        \"minimum\": 0,\n                        \"default\": 0\n                      },\n                      \"maxWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                        \"minimum\": 0,\n                        \"nullable\": true\n                      },\n                      \"quotaGuarantee\": {\n                        \"type\": \"integer\",\n                        \"nullable\": true,\n                        \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                        \"minimum\": 0\n                      },\n                      \"algorithmEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for algorithm\"\n                      },\n                      \"workerEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for worker\"\n                      },\n                      \"nodeSelector\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value labels for nodes constraint\",\n                        \"additionalProperties\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"labels\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                      },\n                      \"annotations\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                      },\n                      \"streamKind\": {\n                        \"enum\": [\n                          \"stateless\",\n                          \"stateful\"\n                        ]\n                      },\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"type of algorithm code resource\",\n                        \"enum\": [\n                          \"Git\",\n                          \"Code\",\n                          \"Image\"\n                        ],\n                        \"default\": \"Image\"\n                      },\n                      \"downloadFileExt\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                      }\n                    },\n                    \"required\": [\n                      \"name\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/versions/algorithms/{name}/{version}\": {\n      \"get\": {\n        \"tags\": [\n          \"Versions\"\n        ],\n        \"summary\": \"Get version\",\n        \"description\": \"returns algorithm version\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing a specific algorithm\",\n              \"minLength\": 1,\n              \"maxLength\": 32,\n              \"format\": \"algorithm-name\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"description\": \"algorithm version\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique identifier representing a specific algorithm\",\n                        \"minLength\": 1,\n                        \"maxLength\": 32,\n                        \"format\": \"algorithm-name\"\n                      },\n                      \"kind\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"batch\",\n                          \"stream\"\n                        ]\n                      },\n                      \"env\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"nodejs\",\n                          \"python\",\n                          \"java\"\n                        ]\n                      },\n                      \"algorithmImage\": {\n                        \"type\": \"string\",\n                        \"description\": \"image name as in the docker registry\",\n                        \"format\": \"algorithm-image\"\n                      },\n                      \"cpu\": {\n                        \"type\": \"number\",\n                        \"default\": 0.1,\n                        \"minimum\": 0,\n                        \"description\": \"algorithm cpu\"\n                      },\n                      \"gpu\": {\n                        \"type\": \"number\",\n                        \"minimum\": 0,\n                        \"description\": \"algorithm gpu\"\n                      },\n                      \"mem\": {\n                        \"type\": \"string\",\n                        \"description\": \"algorithm memory\",\n                        \"format\": \"algorithm-memory\",\n                        \"default\": \"256Mi\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"reservedMemory\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                        \"format\": \"memory\",\n                        \"example\": \"512Mi\"\n                      },\n                      \"options\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"devMode\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                          },\n                          \"pending\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"pending algorithm\",\n                            \"default\": false\n                          },\n                          \"opengl\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                          }\n                        },\n                        \"default\": {}\n                      },\n                      \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"Hkube's auto increment semantic versioning\",\n                        \"readOnly\": true\n                      },\n                      \"mounts\": {\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"a list of volumes to mount into the algorithm\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"pvcName\": {\n                              \"type\": \"string\",\n                              \"format\": \"algorithm-mount-pvc\",\n                              \"minLength\": 1,\n                              \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                            },\n                            \"path\": {\n                              \"type\": \"string\",\n                              \"format\": \"path\",\n                              \"minLength\": 1,\n                              \"description\": \"the mount path in the algorithm container\"\n                            },\n                            \"volumeType\": {\n                              \"type\": \"string\",\n                              \"description\": \"Special volume types such as emptyDir\",\n                              \"enum\": [\n                                \"emptyDir\",\n                                \"configMap\"\n                              ]\n                            }\n                          },\n                          \"required\": [\n                            \"pvcName\",\n                            \"path\"\n                          ]\n                        },\n                        \"uniqueItems\": true,\n                        \"example\": []\n                      },\n                      \"gitRepository\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\",\n                            \"description\": \"a url for the git repository\",\n                            \"format\": \"url\"\n                          },\n                          \"commit\": {\n                            \"type\": \"object\",\n                            \"description\": \"commit details\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit id\"\n                              },\n                              \"timestamp\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit time\"\n                              },\n                              \"message\": {\n                                \"type\": \"string\",\n                                \"description\": \"commit message\"\n                              }\n                            },\n                            \"required\": [\n                              \"id\"\n                            ]\n                          },\n                          \"branchName\": {\n                            \"type\": \"string\",\n                            \"default\": \"master\",\n                            \"description\": \"the branch name you wish to create a build from\"\n                          },\n                          \"tag\": {\n                            \"type\": \"string\",\n                            \"description\": \"a specific tag which will trigger the build\"\n                          },\n                          \"token\": {\n                            \"type\": \"string\",\n                            \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                          },\n                          \"gitKind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"github\",\n                              \"gitlab\"\n                            ],\n                            \"default\": \"github\"\n                          }\n                        },\n                        \"required\": [\n                          \"url\"\n                        ]\n                      },\n                      \"entryPoint\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"dependencyInstallCmd\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n                      },\n                      \"baseImage\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n                      },\n                      \"minHotWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"how many live algorithm instances will always run\",\n                        \"minimum\": 0,\n                        \"default\": 0\n                      },\n                      \"maxWorkers\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                        \"minimum\": 0,\n                        \"nullable\": true\n                      },\n                      \"quotaGuarantee\": {\n                        \"type\": \"integer\",\n                        \"nullable\": true,\n                        \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                        \"minimum\": 0\n                      },\n                      \"algorithmEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for algorithm\"\n                      },\n                      \"workerEnv\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value environment variables for worker\"\n                      },\n                      \"nodeSelector\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"key value labels for nodes constraint\",\n                        \"additionalProperties\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"labels\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n                      },\n                      \"annotations\": {\n                        \"type\": \"object\",\n                        \"nullable\": true,\n                        \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n                      },\n                      \"streamKind\": {\n                        \"enum\": [\n                          \"stateless\",\n                          \"stateful\"\n                        ]\n                      },\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"type of algorithm code resource\",\n                        \"enum\": [\n                          \"Git\",\n                          \"Code\",\n                          \"Image\"\n                        ],\n                        \"default\": \"Image\"\n                      },\n                      \"downloadFileExt\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n                      }\n                    },\n                    \"required\": [\n                      \"name\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Versions\"\n        ],\n        \"summary\": \"Delete version\",\n        \"description\": \"Delete existing algorithm version.\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"algorithm name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing a specific algorithm\",\n              \"minLength\": 1,\n              \"maxLength\": 32,\n              \"format\": \"algorithm-name\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"description\": \"algorithm version\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"algorithm Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/versions/algorithms/apply\": {\n      \"post\": {\n        \"tags\": [\n          \"Versions\"\n        ],\n        \"summary\": \"Apply algorithm version\",\n        \"description\": \"Change the current algorithm version\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific algorithm\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"algorithm-name\"\n                  },\n                  \"version\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing version id\",\n                    \"minLength\": 1,\n                    \"maxLength\": 10\n                  },\n                  \"force\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"should replace or not current algorithm version for running algorithm instances\",\n                    \"default\": false\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"version\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for stored pipeline execution\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the OK string\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/versions/algorithms/tag\": {\n      \"post\": {\n        \"tags\": [\n          \"Versions\"\n        ],\n        \"summary\": \"Tag algorithm version\",\n        \"description\": \"Tag algorithm version with pinned and tags\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific algorithm\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"algorithm-name\"\n                  },\n                  \"version\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing version id\",\n                    \"minLength\": 1,\n                    \"maxLength\": 10\n                  },\n                  \"pinned\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Should set the version as pinned\",\n                    \"default\": false\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"description\": \"Array of tags\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing a specific tag\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32\n                    }\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"version\"\n                ]\n              }\n            }\n          },\n          \"description\": \"an object representing all information needed for stored pipeline execution\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"the OK string\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/experiment/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Experiment\"\n        ],\n        \"summary\": \"get experiment details\",\n        \"description\": \"get experiment details\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"experiment name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"experiment name\",\n                      \"default\": \"main\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"experiment-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"describe the experiment\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Experiment\"\n        ],\n        \"summary\": \"Delete experiment\",\n        \"description\": \"Delete existing experiment from store\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"experiment name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"experiment Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/experiment\": {\n      \"get\": {\n        \"tags\": [\n          \"Experiment\"\n        ],\n        \"summary\": \"Get experiments list\",\n        \"description\": \"Returns experiments list\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"list of experiments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"experiment name\",\n                      \"default\": \"main\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"experiment-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"describe the experiment\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Experiment\"\n        ],\n        \"summary\": \"Insert experiment\",\n        \"description\": \"Insert new experiment to store if not exists\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"experiment name\",\n                    \"default\": \"main\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"experiment-name\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"describe the experiment\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"experiment to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"experiment created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"pipeline conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gateway\": {\n      \"get\": {\n        \"tags\": [\n          \"Gateway\"\n        ],\n        \"summary\": \"get gateways\",\n        \"description\": \"get list of gateways\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"gateway name\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"gateway-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"describe the gateway\"\n                    },\n                    \"mem\": {\n                      \"type\": \"string\",\n                      \"description\": \"Memory allocated for streaming gateway\",\n                      \"format\": \"algorithm-memory\",\n                      \"default\": \"512Mi\"\n                    },\n                    \"cpu\": {\n                      \"type\": \"number\",\n                      \"description\": \"Cpu allocated for streaming gateway\",\n                      \"default\": 0.5\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gateway/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Gateway\"\n        ],\n        \"summary\": \"get gateway details\",\n        \"description\": \"get gateway details\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"gateway name to get from the store\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"gateway name\",\n                      \"minLength\": 1,\n                      \"maxLength\": 32,\n                      \"format\": \"gateway-name\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\",\n                      \"description\": \"describe the gateway\"\n                    },\n                    \"mem\": {\n                      \"type\": \"string\",\n                      \"description\": \"Memory allocated for streaming gateway\",\n                      \"format\": \"algorithm-memory\",\n                      \"default\": \"512Mi\"\n                    },\n                    \"cpu\": {\n                      \"type\": \"number\",\n                      \"description\": \"Cpu allocated for streaming gateway\",\n                      \"default\": 0.5\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"pipeline Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gc/clean\": {\n      \"post\": {\n        \"tags\": [\n          \"GC\"\n        ],\n        \"summary\": \"Clean all\",\n        \"description\": \"Clean all\",\n        \"requestBody\": {\n          \"description\": \"message body\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"maxAge\": {\n                    \"type\": \"integer\",\n                    \"description\": \"max age to clean (minutes)\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gc/clean/{type}\": {\n      \"post\": {\n        \"tags\": [\n          \"GC\"\n        ],\n        \"summary\": \"Clean by type\",\n        \"description\": \"Clean by type\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"message body\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"maxAge\": {\n                    \"type\": \"integer\",\n                    \"description\": \"max age to clean (minutes)\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gc/dryrun\": {\n      \"post\": {\n        \"tags\": [\n          \"GC\"\n        ],\n        \"summary\": \"DryRun all\",\n        \"description\": \"DryRun all\",\n        \"requestBody\": {\n          \"description\": \"message body\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"maxAge\": {\n                    \"type\": \"integer\",\n                    \"description\": \"max age to clean (minutes)\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gc/dryrun/{type}\": {\n      \"post\": {\n        \"tags\": [\n          \"GC\"\n        ],\n        \"summary\": \"DryRun by type\",\n        \"description\": \"DryRun by type\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"message body\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"maxAge\": {\n                    \"type\": \"integer\",\n                    \"description\": \"max age to clean (minutes)\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gc/status\": {\n      \"get\": {\n        \"tags\": [\n          \"GC\"\n        ],\n        \"summary\": \"Get all statuses\",\n        \"description\": \"Get all statuses\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/gc/status/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"GC\"\n        ],\n        \"summary\": \"Get status by type\",\n        \"description\": \"Get status by type\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/graph/raw/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Graph\"\n        ],\n        \"summary\": \"Get graph as raw data\",\n        \"description\": \"returns the graph data by jobId\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing jobId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"algorithm apply response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    },\n                    \"timestamp\": {\n                      \"type\": \"number\"\n                    },\n                    \"edges\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of edges\"\n                    },\n                    \"nodes\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of nodes\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"build Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/graph/parsed/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Graph\"\n        ],\n        \"summary\": \"Query the pipeline graph\",\n        \"description\": \"returns the graph data by jobId, node and tasks\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier representing jobId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"node\",\n            \"in\": \"query\",\n            \"description\": \"the node name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by status, error or any other property\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by asc or desc\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"the start index\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"description\": \"the end index\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"algorithm apply response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique identifier representing pipeline execution\"\n                    },\n                    \"timestamp\": {\n                      \"type\": \"number\"\n                    },\n                    \"edges\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of edges\"\n                    },\n                    \"nodes\": {\n                      \"type\": \"array\",\n                      \"description\": \"Array of nodes\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"jobId Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/info\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"Get storage info\",\n        \"description\": \"returns the storage info\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/prefix/types\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"Get storage types\",\n        \"description\": \"returns the storage types that managed by Hkube\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/prefixes/{path}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"Get all prefixes by path\",\n        \"description\": \"returns all available prefixes found in storage according to path\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"path\",\n            \"description\": \"path to storage\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by status, error or any other property\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by asc or desc\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"the start index\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"description\": \"the start index\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/keys/{path}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"Get all keys by path\",\n        \"description\": \"returns all available keys found in storage according to path\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"path\",\n            \"description\": \"path to storage\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"sort by status, error or any other property\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"order by asc or desc\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"the start index\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"description\": \"the end index\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/values/{path}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"Get storage data\",\n        \"description\": \"returns the storage data\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"path\",\n            \"description\": \"path to storage\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/stream/{path}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"stream data\",\n        \"description\": \"stream data according to path\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"path\",\n            \"description\": \"path to storage\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/stream/custom/{path}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"stream data\",\n        \"description\": \"stream data according to path\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"path\",\n            \"description\": \"path to storage\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/download/{path}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"stream data to file\",\n        \"description\": \"download data as file according to path\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"path\",\n            \"description\": \"path to storage\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/download/custom/{path}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"stream data to file\",\n        \"description\": \"download data as file according to path\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"path\",\n            \"description\": \"path to storage\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/storage/download/pipeline/result/{jobId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Storage\"\n        ],\n        \"summary\": \"stream data to file\",\n        \"description\": \"download data as file according to path\",\n        \"parameters\": [\n          {\n            \"name\": \"jobId\",\n            \"in\": \"path\",\n            \"description\": \"the pipeline jobId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"storage response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"path Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/status/version\": {\n      \"get\": {\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Get system status\",\n        \"description\": \"Get system status such as version and health\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"action summery\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"algorithm\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific algorithm\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"algorithm-name\"\n          },\n          \"kind\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"batch\",\n              \"stream\"\n            ]\n          },\n          \"env\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"nodejs\",\n              \"python\",\n              \"java\"\n            ]\n          },\n          \"algorithmImage\": {\n            \"type\": \"string\",\n            \"description\": \"image name as in the docker registry\",\n            \"format\": \"algorithm-image\"\n          },\n          \"cpu\": {\n            \"type\": \"number\",\n            \"default\": 0.1,\n            \"minimum\": 0,\n            \"description\": \"algorithm cpu\"\n          },\n          \"gpu\": {\n            \"type\": \"number\",\n            \"minimum\": 0,\n            \"description\": \"algorithm gpu\"\n          },\n          \"mem\": {\n            \"type\": \"string\",\n            \"description\": \"algorithm memory\",\n            \"format\": \"algorithm-memory\",\n            \"default\": \"256Mi\",\n            \"example\": \"512Mi\"\n          },\n          \"reservedMemory\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n            \"format\": \"memory\",\n            \"example\": \"512Mi\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"devMode\": {\n                \"type\": \"boolean\",\n                \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n              },\n              \"pending\": {\n                \"type\": \"boolean\",\n                \"description\": \"pending algorithm\",\n                \"default\": false\n              },\n              \"opengl\": {\n                \"type\": \"boolean\",\n                \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n              }\n            },\n            \"default\": {}\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"Hkube's auto increment semantic versioning\",\n            \"readOnly\": true\n          },\n          \"mounts\": {\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"description\": \"a list of volumes to mount into the algorithm\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"pvcName\": {\n                  \"type\": \"string\",\n                  \"format\": \"algorithm-mount-pvc\",\n                  \"minLength\": 1,\n                  \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                },\n                \"path\": {\n                  \"type\": \"string\",\n                  \"format\": \"path\",\n                  \"minLength\": 1,\n                  \"description\": \"the mount path in the algorithm container\"\n                },\n                \"volumeType\": {\n                  \"type\": \"string\",\n                  \"description\": \"Special volume types such as emptyDir\",\n                  \"enum\": [\n                    \"emptyDir\",\n                    \"configMap\"\n                  ]\n                }\n              },\n              \"required\": [\n                \"pvcName\",\n                \"path\"\n              ]\n            },\n            \"uniqueItems\": true,\n            \"example\": []\n          },\n          \"gitRepository\": {\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"properties\": {\n              \"url\": {\n                \"type\": \"string\",\n                \"description\": \"a url for the git repository\",\n                \"format\": \"url\"\n              },\n              \"commit\": {\n                \"type\": \"object\",\n                \"description\": \"commit details\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"commit id\"\n                  },\n                  \"timestamp\": {\n                    \"type\": \"string\",\n                    \"description\": \"commit time\"\n                  },\n                  \"message\": {\n                    \"type\": \"string\",\n                    \"description\": \"commit message\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              },\n              \"branchName\": {\n                \"type\": \"string\",\n                \"default\": \"master\",\n                \"description\": \"the branch name you wish to create a build from\"\n              },\n              \"tag\": {\n                \"type\": \"string\",\n                \"description\": \"a specific tag which will trigger the build\"\n              },\n              \"token\": {\n                \"type\": \"string\",\n                \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n              },\n              \"gitKind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"github\",\n                  \"gitlab\"\n                ],\n                \"default\": \"github\"\n              }\n            },\n            \"required\": [\n              \"url\"\n            ]\n          },\n          \"entryPoint\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"dependencyInstallCmd\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n          },\n          \"baseImage\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n          },\n          \"minHotWorkers\": {\n            \"type\": \"integer\",\n            \"description\": \"how many live algorithm instances will always run\",\n            \"minimum\": 0,\n            \"default\": 0\n          },\n          \"maxWorkers\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n            \"minimum\": 0,\n            \"nullable\": true\n          },\n          \"quotaGuarantee\": {\n            \"type\": \"integer\",\n            \"nullable\": true,\n            \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n            \"minimum\": 0\n          },\n          \"algorithmEnv\": {\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"description\": \"key value environment variables for algorithm\"\n          },\n          \"workerEnv\": {\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"description\": \"key value environment variables for worker\"\n          },\n          \"nodeSelector\": {\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"description\": \"key value labels for nodes constraint\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          },\n          \"labels\": {\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n          },\n          \"annotations\": {\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n          },\n          \"streamKind\": {\n            \"enum\": [\n              \"stateless\",\n              \"stateful\"\n            ]\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"type of algorithm code resource\",\n            \"enum\": [\n              \"Git\",\n              \"Code\",\n              \"Image\"\n            ],\n            \"default\": \"Image\"\n          },\n          \"downloadFileExt\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"algorithmKind\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"batch\",\n          \"stream\"\n        ]\n      },\n      \"algorithmName\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier representing a specific algorithm\",\n        \"minLength\": 1,\n        \"maxLength\": 32,\n        \"format\": \"algorithm-name\"\n      },\n      \"algorithmNameObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific algorithm\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"algorithm-name\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"algorithmDelete\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific algorithm\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"algorithm-name\"\n          },\n          \"force\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"algorithmImage\": {\n        \"type\": \"string\",\n        \"description\": \"image name as in the docker registry\",\n        \"format\": \"algorithm-image\"\n      },\n      \"algorithmMount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pvcName\": {\n            \"type\": \"string\",\n            \"format\": \"algorithm-mount-pvc\",\n            \"minLength\": 1,\n            \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"format\": \"path\",\n            \"minLength\": 1,\n            \"description\": \"the mount path in the algorithm container\"\n          },\n          \"volumeType\": {\n            \"type\": \"string\",\n            \"description\": \"Special volume types such as emptyDir\",\n            \"enum\": [\n              \"emptyDir\",\n              \"configMap\"\n            ]\n          }\n        },\n        \"required\": [\n          \"pvcName\",\n          \"path\"\n        ]\n      },\n      \"algorithmEnv\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"nodejs\",\n          \"python\",\n          \"java\"\n        ]\n      },\n      \"algorithmFileExt\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"zip\",\n          \"gz\"\n        ]\n      },\n      \"algorithmVersionId\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier representing version id\",\n        \"minLength\": 1,\n        \"maxLength\": 10\n      },\n      \"applyAlgorithmVersion\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific algorithm\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"algorithm-name\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing version id\",\n            \"minLength\": 1,\n            \"maxLength\": 10\n          },\n          \"force\": {\n            \"type\": \"boolean\",\n            \"description\": \"should replace or not current algorithm version for running algorithm instances\",\n            \"default\": false\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"version\"\n        ]\n      },\n      \"algorithmVersionTag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific algorithm\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"algorithm-name\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing version id\",\n            \"minLength\": 1,\n            \"maxLength\": 10\n          },\n          \"pinned\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should set the version as pinned\",\n            \"default\": false\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"description\": \"Array of tags\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing a specific tag\",\n              \"minLength\": 1,\n              \"maxLength\": 32\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"version\"\n        ]\n      },\n      \"algorithmApplyOptions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"forceUpdate\": {\n            \"type\": \"boolean\",\n            \"description\": \"should set the newly created version as current\",\n            \"default\": false\n          },\n          \"forceBuild\": {\n            \"type\": \"boolean\",\n            \"description\": \"should force new build\",\n            \"default\": false\n          }\n        }\n      },\n      \"algorithmApplyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"buildId\": {\n            \"type\": \"string\",\n            \"description\": \"Pipeline name\"\n          },\n          \"algorithm\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing a specific algorithm\",\n                \"minLength\": 1,\n                \"maxLength\": 32,\n                \"format\": \"algorithm-name\"\n              },\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"batch\",\n                  \"stream\"\n                ]\n              },\n              \"env\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"nodejs\",\n                  \"python\",\n                  \"java\"\n                ]\n              },\n              \"algorithmImage\": {\n                \"type\": \"string\",\n                \"description\": \"image name as in the docker registry\",\n                \"format\": \"algorithm-image\"\n              },\n              \"cpu\": {\n                \"type\": \"number\",\n                \"default\": 0.1,\n                \"minimum\": 0,\n                \"description\": \"algorithm cpu\"\n              },\n              \"gpu\": {\n                \"type\": \"number\",\n                \"minimum\": 0,\n                \"description\": \"algorithm gpu\"\n              },\n              \"mem\": {\n                \"type\": \"string\",\n                \"description\": \"algorithm memory\",\n                \"format\": \"algorithm-memory\",\n                \"default\": \"256Mi\",\n                \"example\": \"512Mi\"\n              },\n              \"reservedMemory\": {\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"description\": \"Reserved memory for HKube's operations such as in-memory cache, higher value means faster data retrieval and less algorithm memory, lower value means slower data retrieval and more algorithm memory\",\n                \"format\": \"memory\",\n                \"example\": \"512Mi\"\n              },\n              \"options\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"devMode\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"runs algorithm with mounted sources to allow rapid development cycles\"\n                  },\n                  \"pending\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"pending algorithm\",\n                    \"default\": false\n                  },\n                  \"opengl\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"should algorithm support XGL context creation (mount X socket)\"\n                  }\n                },\n                \"default\": {}\n              },\n              \"version\": {\n                \"type\": \"string\",\n                \"description\": \"Hkube's auto increment semantic versioning\",\n                \"readOnly\": true\n              },\n              \"mounts\": {\n                \"type\": \"array\",\n                \"nullable\": true,\n                \"description\": \"a list of volumes to mount into the algorithm\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"pvcName\": {\n                      \"type\": \"string\",\n                      \"format\": \"algorithm-mount-pvc\",\n                      \"minLength\": 1,\n                      \"description\": \"name of an existing kubernetes pvc (persistent volume claim)\"\n                    },\n                    \"path\": {\n                      \"type\": \"string\",\n                      \"format\": \"path\",\n                      \"minLength\": 1,\n                      \"description\": \"the mount path in the algorithm container\"\n                    },\n                    \"volumeType\": {\n                      \"type\": \"string\",\n                      \"description\": \"Special volume types such as emptyDir\",\n                      \"enum\": [\n                        \"emptyDir\",\n                        \"configMap\"\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"pvcName\",\n                    \"path\"\n                  ]\n                },\n                \"uniqueItems\": true,\n                \"example\": []\n              },\n              \"gitRepository\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"properties\": {\n                  \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"a url for the git repository\",\n                    \"format\": \"url\"\n                  },\n                  \"commit\": {\n                    \"type\": \"object\",\n                    \"description\": \"commit details\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"commit id\"\n                      },\n                      \"timestamp\": {\n                        \"type\": \"string\",\n                        \"description\": \"commit time\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"commit message\"\n                      }\n                    },\n                    \"required\": [\n                      \"id\"\n                    ]\n                  },\n                  \"branchName\": {\n                    \"type\": \"string\",\n                    \"default\": \"master\",\n                    \"description\": \"the branch name you wish to create a build from\"\n                  },\n                  \"tag\": {\n                    \"type\": \"string\",\n                    \"description\": \"a specific tag which will trigger the build\"\n                  },\n                  \"token\": {\n                    \"type\": \"string\",\n                    \"description\": \"a token which allows hkube's build system to access private repositories more information https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n                  },\n                  \"gitKind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"github\",\n                      \"gitlab\"\n                    ],\n                    \"default\": \"github\"\n                  }\n                },\n                \"required\": [\n                  \"url\"\n                ]\n              },\n              \"entryPoint\": {\n                \"type\": \"string\",\n                \"nullable\": true\n              },\n              \"dependencyInstallCmd\": {\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"description\": \"Command to run to install algorithm dependencies. CWD is the algorithm root folder\\nDefaults to language specific defaults.\\ne.g. For python: pip install -r requirements.txt\\n\"\n              },\n              \"baseImage\": {\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"description\": \"Custom docker image to be used as base to the newly built algorithm image\"\n              },\n              \"minHotWorkers\": {\n                \"type\": \"integer\",\n                \"description\": \"how many live algorithm instances will always run\",\n                \"minimum\": 0,\n                \"default\": 0\n              },\n              \"maxWorkers\": {\n                \"type\": \"integer\",\n                \"description\": \"Maximum number of workers for this algorithm. 0 marks no limit\",\n                \"minimum\": 0,\n                \"nullable\": true\n              },\n              \"quotaGuarantee\": {\n                \"type\": \"integer\",\n                \"nullable\": true,\n                \"description\": \"The amount of algorithms required to be scheduled first in a case of cluster pressure\",\n                \"minimum\": 0\n              },\n              \"algorithmEnv\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"description\": \"key value environment variables for algorithm\"\n              },\n              \"workerEnv\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"description\": \"key value environment variables for worker\"\n              },\n              \"nodeSelector\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"description\": \"key value labels for nodes constraint\",\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"labels\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"description\": \"attach key value metadata to algorithm pod, usually for users\"\n              },\n              \"annotations\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"description\": \"attach key value metadata to algorithm pod, usually for tools and libraries\"\n              },\n              \"streamKind\": {\n                \"enum\": [\n                  \"stateless\",\n                  \"stateful\"\n                ]\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"type of algorithm code resource\",\n                \"enum\": [\n                  \"Git\",\n                  \"Code\",\n                  \"Image\"\n                ],\n                \"default\": \"Image\"\n              },\n              \"downloadFileExt\": {\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"description\": \"the extension name that will be attached to a file when downloading algorithm result\"\n              }\n            },\n            \"required\": [\n              \"name\"\n            ]\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"algorithmBuild\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fileExt\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"zip\",\n              \"gz\"\n            ]\n          },\n          \"env\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"nodejs\",\n              \"python\",\n              \"java\"\n            ]\n          }\n        },\n        \"required\": [\n          \"env\"\n        ]\n      },\n      \"kubernetesValueFrom\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"fieldRef\",\n          \"configMapKeyRef\",\n          \"resourceFieldRef\",\n          \"secretKeyRef\"\n        ]\n      },\n      \"createBoardRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pipelineName\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific pipeline\",\n            \"minLength\": 1,\n            \"format\": \"pipeline-name\"\n          },\n          \"nodeName\": {\n            \"type\": \"string\"\n          },\n          \"jobId\": {\n            \"type\": \"string\"\n          },\n          \"taskId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"createOptunaboardRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"createBoardResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"getBoardResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"relativeUrl\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"listBoardResponse\": {\n        \"type\": \"array\",\n        \"description\": \"Array of boards\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"status\": {\n              \"type\": \"string\"\n            },\n            \"relativeUrl\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"metrics\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tensorboard\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should tensorboard metrics be collected.\"\n          }\n        }\n      },\n      \"addToPreferredRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing pipeline execution\"\n            }\n          },\n          \"position\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"first\",\n              \"last\",\n              \"before\",\n              \"after\"\n            ]\n          },\n          \"query\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"tag\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing a specific tag\",\n                \"minLength\": 1,\n                \"maxLength\": 32\n              },\n              \"jobId\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing pipeline execution\"\n              },\n              \"pipeline\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing a specific pipeline\",\n                \"minLength\": 1,\n                \"format\": \"pipeline-name\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"jobs\",\n          \"position\"\n        ]\n      },\n      \"removeFromPreferredRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing pipeline execution\"\n            }\n          }\n        },\n        \"required\": [\n          \"jobs\"\n        ]\n      },\n      \"preferredQuery\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific tag\",\n            \"minLength\": 1,\n            \"maxLength\": 32\n          },\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          },\n          \"pipeline\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific pipeline\",\n            \"minLength\": 1,\n            \"format\": \"pipeline-name\"\n          }\n        }\n      },\n      \"jobsAggregationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pipeline\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific pipeline\",\n            \"minLength\": 1,\n            \"format\": \"pipeline-name\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing a specific tag\",\n              \"minLength\": 1,\n              \"maxLength\": 32\n            }\n          },\n          \"jobs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing pipeline execution\"\n            }\n          }\n        }\n      },\n      \"buildId\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"buildId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing build id\"\n          }\n        },\n        \"required\": [\n          \"buildId\"\n        ]\n      },\n      \"buildIdObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"buildId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"buildId\"\n        ]\n      },\n      \"defaultResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"defaultResponseWithName\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"jobId\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier representing pipeline execution\"\n      },\n      \"jobIdObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          }\n        },\n        \"required\": [\n          \"jobId\"\n        ]\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier representing a specific tag\",\n        \"minLength\": 1,\n        \"maxLength\": 32\n      },\n      \"queryList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"default\": \"\"\n          },\n          \"experimentName\": {\n            \"type\": \"string\",\n            \"description\": \"experiment name\",\n            \"default\": \"main\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"experiment-name\"\n          },\n          \"sort\": {\n            \"type\": \"string\",\n            \"default\": \"desc\",\n            \"enum\": [\n              \"asc\",\n              \"desc\"\n            ]\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"default\": 1,\n            \"minimum\": 1,\n            \"maximum\": 100000\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"queryRange\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sort\": {\n            \"type\": \"string\"\n          },\n          \"order\": {\n            \"type\": \"string\",\n            \"default\": \"desc\",\n            \"enum\": [\n              \"asc\",\n              \"desc\"\n            ]\n          },\n          \"from\": {\n            \"type\": \"integer\",\n            \"default\": 0,\n            \"minimum\": 0\n          },\n          \"to\": {\n            \"type\": \"integer\",\n            \"default\": 10,\n            \"minimum\": 0\n          }\n        }\n      },\n      \"cronPattern\": {\n        \"type\": \"string\",\n        \"description\": \"cron job\",\n        \"minLength\": 1,\n        \"format\": \"cron\"\n      },\n      \"cronRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific pipeline\",\n            \"minLength\": 1,\n            \"format\": \"pipeline-name\"\n          },\n          \"pattern\": {\n            \"type\": \"string\",\n            \"description\": \"cron job\",\n            \"minLength\": 1,\n            \"format\": \"cron\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"dataSource-name\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"dataSource-snapshot\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"snapshot\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"snapshot\"\n        ]\n      },\n      \"dataSource-id\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"Files\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\",\n          \"description\": \"Data file (file types: *)\",\n          \"format\": \"binary\"\n        }\n      },\n      \"FileMeta\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"size\": {\n            \"type\": \"number\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"uploadedAt\": {\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"path\"\n        ]\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"DataSourceMeta\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 24,\n            \"maxLength\": 24\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific dataSource\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"dataSource-name\"\n          },\n          \"versionDescription\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"filesCount\": {\n            \"type\": \"number\"\n          },\n          \"avgFileSize\": {\n            \"type\": \"string\"\n          },\n          \"totalSize\": {\n            \"type\": \"number\"\n          },\n          \"fileTypes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"DataSource\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"commitHash\": {\n            \"description\": \"a commit hash\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific dataSource\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"dataSource-name\"\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"path\": {\n                  \"type\": \"string\"\n                },\n                \"size\": {\n                  \"type\": \"number\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                },\n                \"description\": {\n                  \"type\": \"string\"\n                },\n                \"uploadedAt\": {\n                  \"type\": \"number\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\",\n                \"path\"\n              ]\n            }\n          },\n          \"versionDescription\": {\n            \"description\": \"a commit message supplied by the user\",\n            \"type\": \"string\"\n          },\n          \"gitRepositoryUrl\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"id\"\n        ]\n      },\n      \"DataSourceId\": {\n        \"type\": \"string\",\n        \"minLength\": 24,\n        \"maxLength\": 24\n      },\n      \"DataSourceWithMeta\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"minLength\": 24,\n                \"maxLength\": 24\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing a specific dataSource\",\n                \"minLength\": 1,\n                \"maxLength\": 32,\n                \"format\": \"dataSource-name\"\n              },\n              \"versionDescription\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              },\n              \"filesCount\": {\n                \"type\": \"number\"\n              },\n              \"avgFileSize\": {\n                \"type\": \"string\"\n              },\n              \"totalSize\": {\n                \"type\": \"number\"\n              },\n              \"fileTypes\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"commitHash\": {\n                \"description\": \"a commit hash\",\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing a specific dataSource\",\n                \"minLength\": 1,\n                \"maxLength\": 32,\n                \"format\": \"dataSource-name\"\n              },\n              \"files\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"path\": {\n                      \"type\": \"string\"\n                    },\n                    \"size\": {\n                      \"type\": \"number\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    },\n                    \"uploadedAt\": {\n                      \"type\": \"number\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"path\"\n                  ]\n                }\n              },\n              \"versionDescription\": {\n                \"description\": \"a commit message supplied by the user\",\n                \"type\": \"string\"\n              },\n              \"gitRepositoryUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"name\",\n              \"id\"\n            ]\n          }\n        ]\n      },\n      \"DataSourceName\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier representing a specific dataSource\",\n        \"minLength\": 1,\n        \"maxLength\": 32,\n        \"format\": \"dataSource-name\"\n      },\n      \"DataSourceVersion\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 24,\n            \"maxLength\": 24\n          },\n          \"versionDescription\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"commitHash\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"VersionDescription\": {\n        \"type\": \"string\",\n        \"minLength\": 1\n      },\n      \"dataSourceExists\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific dataSource\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"dataSource-name\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 24,\n            \"maxLength\": 24\n          },\n          \"snapshot\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"minLength\": 1,\n                \"maxLength\": 25\n              }\n            }\n          }\n        }\n      },\n      \"SnapshotName\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 25\n      },\n      \"SnapshotQuery\": {\n        \"type\": \"string\",\n        \"minLength\": 1\n      },\n      \"SnapshotRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"snapshot\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"minLength\": 1,\n                \"maxLength\": 25\n              },\n              \"query\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"query\"\n        ]\n      },\n      \"SnapshotCreate\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 25\n          },\n          \"query\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"dataSource\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"minLength\": 24,\n                \"maxLength\": 24\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing a specific dataSource\",\n                \"minLength\": 1,\n                \"maxLength\": 32,\n                \"format\": \"dataSource-name\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"query\",\n          \"dataSource\"\n        ]\n      },\n      \"Snapshot\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"snapshot\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"maxLength\": 25\n                  },\n                  \"query\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1\n                  }\n                }\n              }\n            },\n            \"required\": [\n              \"name\",\n              \"query\"\n            ]\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"minLength\": 25\n              },\n              \"dataSource\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"minLength\": 24,\n                    \"maxLength\": 24\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific dataSource\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"dataSource-name\"\n                  },\n                  \"filteredFilesList\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"path\": {\n                          \"type\": \"string\"\n                        },\n                        \"size\": {\n                          \"type\": \"number\"\n                        },\n                        \"type\": {\n                          \"type\": \"string\"\n                        },\n                        \"description\": {\n                          \"type\": \"string\"\n                        },\n                        \"uploadedAt\": {\n                          \"type\": \"number\"\n                        }\n                      },\n                      \"required\": [\n                        \"id\",\n                        \"name\",\n                        \"path\"\n                      ]\n                    }\n                  },\n                  \"droppedFiles\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"path\": {\n                          \"type\": \"string\"\n                        },\n                        \"size\": {\n                          \"type\": \"number\"\n                        },\n                        \"type\": {\n                          \"type\": \"string\"\n                        },\n                        \"description\": {\n                          \"type\": \"string\"\n                        },\n                        \"uploadedAt\": {\n                          \"type\": \"number\"\n                        }\n                      },\n                      \"required\": [\n                        \"id\",\n                        \"name\",\n                        \"path\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"ResolvedSnapshot\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 25\n          },\n          \"query\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"dataSource\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"commitHash\": {\n                \"description\": \"a commit hash\",\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Unique identifier representing a specific dataSource\",\n                \"minLength\": 1,\n                \"maxLength\": 32,\n                \"format\": \"dataSource-name\"\n              },\n              \"files\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"path\": {\n                      \"type\": \"string\"\n                    },\n                    \"size\": {\n                      \"type\": \"number\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    },\n                    \"uploadedAt\": {\n                      \"type\": \"number\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"path\"\n                  ]\n                }\n              },\n              \"versionDescription\": {\n                \"description\": \"a commit message supplied by the user\",\n                \"type\": \"string\"\n              },\n              \"gitRepositoryUrl\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"name\",\n              \"id\"\n            ]\n          }\n        }\n      },\n      \"SnapshotPreviewRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 24,\n            \"maxLength\": 24\n          },\n          \"query\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          }\n        },\n        \"required\": [\n          \"query\",\n          \"id\"\n        ]\n      },\n      \"createRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific dataSource\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"dataSource-name\"\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Data file (file types: *)\",\n              \"format\": \"binary\"\n            }\n          },\n          \"storage\": {\n            \"type\": \"object\",\n            \"description\": \"Contains the credentials and storage information of \\nan S3 bucket, If kind is set to \\\"internal\\\" \\nno other parameters are required\\n\",\n            \"oneOf\": [\n              {\n                \"properties\": {\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"S3\"\n                    ]\n                  },\n                  \"accessKeyId\": {\n                    \"type\": \"string\"\n                  },\n                  \"secretAccessKey\": {\n                    \"type\": \"string\"\n                  },\n                  \"endpoint\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"format\": \"url\"\n                  },\n                  \"bucketName\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"kind\",\n                  \"accessKeyId\",\n                  \"secretAccessKey\",\n                  \"endpoint\",\n                  \"bucketName\"\n                ]\n              },\n              {\n                \"properties\": {\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"internal\"\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"kind\"\n                ]\n              }\n            ]\n          },\n          \"git\": {\n            \"type\": \"object\",\n            \"description\": \"Contains the credentials and Git information,\\nIf kind is set to \\\"internal\\\" \\nno other parameters are required\\n\",\n            \"oneOf\": [\n              {\n                \"properties\": {\n                  \"repositoryUrl\": {\n                    \"description\": \"provide a url to an empty git repository\",\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"format\": \"git-url\"\n                  },\n                  \"token\": {\n                    \"type\": \"string\"\n                  },\n                  \"tokenName\": {\n                    \"description\": \"the token name is *required* when using a *gitlab* account\",\n                    \"type\": \"string\"\n                  },\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"github\",\n                      \"gitlab\"\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"repositoryUrl\",\n                  \"token\",\n                  \"kind\"\n                ]\n              },\n              {\n                \"properties\": {\n                  \"kind\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"internal\"\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"kind\"\n                ]\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"files\",\n          \"storage\",\n          \"git\"\n        ]\n      },\n      \"updateRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"versionDescription\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Data file (file types: *)\",\n              \"format\": \"binary\"\n            }\n          },\n          \"droppedFileIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"mapping\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"path\": {\n                  \"type\": \"string\"\n                },\n                \"size\": {\n                  \"type\": \"number\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                },\n                \"description\": {\n                  \"type\": \"string\"\n                },\n                \"uploadedAt\": {\n                  \"type\": \"number\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\",\n                \"path\"\n              ]\n            }\n          }\n        },\n        \"anyOf\": [\n          {\n            \"required\": [\n              \"versionDescription\",\n              \"filesDropped\"\n            ]\n          },\n          {\n            \"required\": [\n              \"versionDescription\",\n              \"files\"\n            ]\n          }\n        ]\n      },\n      \"deleteRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific dataSource\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"dataSource-name\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"update\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific dataSource\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"dataSource-name\"\n          },\n          \"versionDescription\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"files\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapping\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"path\": {\n                      \"type\": \"string\"\n                    },\n                    \"size\": {\n                      \"type\": \"number\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    },\n                    \"uploadedAt\": {\n                      \"type\": \"number\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"path\"\n                  ]\n                }\n              },\n              \"added\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Data file (file types: *)\",\n                  \"format\": \"binary\"\n                }\n              },\n              \"dropped\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"syncRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"CreateDownloadLinkRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dataSourceId\": {\n            \"type\": \"string\",\n            \"minLength\": 24,\n            \"maxLength\": 24\n          },\n          \"fileIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"minItems\": 1\n          }\n        },\n        \"required\": [\n          \"dataSourceId\",\n          \"fileIds\"\n        ]\n      },\n      \"DownloadId\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier representing a downloadId\",\n        \"minLength\": 4,\n        \"maxLength\": 4,\n        \"format\": \"download-id\"\n      },\n      \"Credentials\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"git\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"token\": {\n                \"type\": \"string\"\n              },\n              \"tokenName\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"token\"\n            ]\n          },\n          \"storage\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"accessKeyId\": {\n                \"type\": \"string\"\n              },\n              \"secretAccessKey\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"accessKeyId\",\n              \"secretAccessKey\"\n            ]\n          }\n        }\n      },\n      \"updateCredentials\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific dataSource\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"dataSource-name\"\n          },\n          \"credentials\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"git\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"token\": {\n                    \"type\": \"string\"\n                  },\n                  \"tokenName\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"token\"\n                ]\n              },\n              \"storage\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"accessKeyId\": {\n                    \"type\": \"string\"\n                  },\n                  \"secretAccessKey\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"accessKeyId\",\n                  \"secretAccessKey\"\n                ]\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"credentials\"\n        ]\n      },\n      \"URL\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"format\": \"url\"\n      },\n      \"GitURL\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"format\": \"git-url\"\n      },\n      \"caching\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          },\n          \"nodeName\": {\n            \"type\": \"string\",\n            \"description\": \"Unique node identifier\",\n            \"minLength\": 1\n          },\n          \"debug\": {\n            \"type\": \"boolean\",\n            \"description\": \"Run as debug\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"jobId\",\n          \"nodeName\"\n        ]\n      },\n      \"execTreeNode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Pipeline name\"\n          },\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          }\n        }\n      },\n      \"execTreeResult\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Pipeline name\"\n            },\n            \"jobId\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing pipeline execution\"\n            }\n          }\n        }\n      },\n      \"stopRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          },\n          \"reason\": {\n            \"type\": \"string\",\n            \"default\": \"requested by user\",\n            \"description\": \"reason for stop pipeline\"\n          }\n        },\n        \"required\": [\n          \"jobId\"\n        ]\n      },\n      \"pauseRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          }\n        },\n        \"required\": [\n          \"jobId\"\n        ]\n      },\n      \"resumeRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          }\n        },\n        \"required\": [\n          \"jobId\"\n        ]\n      },\n      \"execAlgorithmRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific algorithm\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"algorithm-name\"\n          },\n          \"input\": {\n            \"type\": \"array\",\n            \"description\": \"The input for the algorithm\",\n            \"items\": {},\n            \"default\": []\n          },\n          \"debug\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is debug algorithm\",\n            \"default\": false\n          }\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"searchJobs\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"experimentName\": {\n                \"type\": \"string\"\n              },\n              \"pipelineName\": {\n                \"type\": \"string\"\n              },\n              \"pipelineType\": {\n                \"type\": \"string\"\n              },\n              \"algorithmName\": {\n                \"type\": \"string\"\n              },\n              \"pipelineStatus\": {\n                \"type\": \"string\"\n              },\n              \"datesRange\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"from\": {\n                    \"type\": \"string\",\n                    \"example\": \"2021-03-11T14:30:00\"\n                  },\n                  \"to\": {\n                    \"type\": \"string\",\n                    \"example\": \"2021-03-11T14:30:00\"\n                  }\n                }\n              }\n            }\n          },\n          \"cursor\": {\n            \"type\": \"string\",\n            \"description\": \"get the next results starting from this cursor\"\n          },\n          \"pageNum\": {\n            \"type\": \"integer\",\n            \"description\": \"get the next results starting from this page number\"\n          },\n          \"sort\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"asc\",\n              \"desc\"\n            ],\n            \"default\": \"desc\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 100,\n            \"default\": 100,\n            \"example\": 100,\n            \"description\": \"limit the result size\"\n          },\n          \"fields\": {\n            \"type\": \"object\",\n            \"description\": \"select which fields to return\"\n          },\n          \"exists\": {\n            \"type\": \"object\",\n            \"description\": \"only return records that has fields\"\n          }\n        },\n        \"example\": {\n          \"query\": {\n            \"datesRange\": {\n              \"from\": \"2021-05-22T15:00:00\",\n              \"to\": \"2021-06-22T16:00:00\"\n            },\n            \"experimentName\": \"main\",\n            \"pipelineName\": \"simple\",\n            \"pipelineType\": \"stored\",\n            \"algorithmName\": \"green-alg\",\n            \"pipelineStatus\": \"completed\"\n          },\n          \"sort\": \"desc\",\n          \"pageNum\": 1,\n          \"limit\": 2,\n          \"fields\": {\n            \"jobId\": true\n          }\n        }\n      },\n      \"searchJobsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"hits\": {\n            \"type\": \"array\",\n            \"description\": \"the actual result records\",\n            \"items\": {}\n          },\n          \"cursor\": {\n            \"type\": \"string\",\n            \"description\": \"this cursor to the next query can be used for pagination\"\n          },\n          \"timeTook\": {\n            \"type\": \"string\",\n            \"description\": \"the query completion time took in milliseconds\"\n          }\n        }\n      },\n      \"rerun\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"jobId\"\n        ]\n      },\n      \"experiment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"experiment name\",\n            \"default\": \"main\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"experiment-name\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"describe the experiment\"\n          }\n        }\n      },\n      \"experimentName\": {\n        \"type\": \"string\",\n        \"description\": \"experiment name\",\n        \"default\": \"main\",\n        \"minLength\": 1,\n        \"maxLength\": 32,\n        \"format\": \"experiment-name\"\n      },\n      \"gatewayName\": {\n        \"type\": \"string\",\n        \"description\": \"gateway name\",\n        \"minLength\": 1,\n        \"maxLength\": 32,\n        \"format\": \"gateway-name\"\n      },\n      \"gateway\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"gateway name\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"gateway-name\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"describe the gateway\"\n          },\n          \"mem\": {\n            \"type\": \"string\",\n            \"description\": \"Memory allocated for streaming gateway\",\n            \"format\": \"algorithm-memory\",\n            \"default\": \"512Mi\"\n          },\n          \"cpu\": {\n            \"type\": \"number\",\n            \"description\": \"Cpu allocated for streaming gateway\",\n            \"default\": 0.5\n          }\n        }\n      },\n      \"output\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"describe the output\"\n          },\n          \"mem\": {\n            \"type\": \"string\",\n            \"description\": \"Memory allocated for output\",\n            \"format\": \"algorithm-memory\",\n            \"default\": \"512Mi\"\n          }\n        }\n      },\n      \"hyperparamsTuner\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"gateway name\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"gateway-name\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"describe the gateway\"\n          },\n          \"mem\": {\n            \"type\": \"string\",\n            \"description\": \"Memory allocated for streaming gateway\",\n            \"format\": \"algorithm-memory\",\n            \"default\": \"512Mi\"\n          },\n          \"cpu\": {\n            \"type\": \"number\",\n            \"description\": \"Cpu allocated for streaming gateway\",\n            \"default\": 0.5\n          }\n        }\n      },\n      \"hyperparamsTunerName\": {\n        \"type\": \"string\",\n        \"description\": \"gateway name\",\n        \"minLength\": 1,\n        \"maxLength\": 32,\n        \"format\": \"gateway-name\"\n      },\n      \"hyperparamsTunerSpec\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"numberOfTrials\": {\n            \"type\": \"number\",\n            \"description\": \"number Of Trials\"\n          },\n          \"hyperParams\": {\n            \"type\": \"array\",\n            \"description\": \"list of hyper params to optimize\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"suggest\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"uniform\",\n                    \"loguniform\",\n                    \"int\",\n                    \"discrete_uniform\",\n                    \"categorical\"\n                  ]\n                },\n                \"low\": {\n                  \"type\": \"number\"\n                },\n                \"hight\": {\n                  \"type\": \"number\"\n                },\n                \"choices\": {\n                  \"type\": \"array\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"name\",\n                \"suggest\"\n              ]\n            }\n          },\n          \"objectivePipeline\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific pipeline\",\n            \"minLength\": 1,\n            \"format\": \"pipeline-name\"\n          },\n          \"sampler\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"Grid\",\n                  \"PartialFixed\",\n                  \"Random\",\n                  \"TPE\",\n                  \"CmaEs\"\n                ]\n              },\n              \"fixed_values\": {\n                \"type\": \"object\"\n              },\n              \"search_space\": {\n                \"type\": \"object\"\n              }\n            },\n            \"required\": [\n              \"name\"\n            ]\n          }\n        },\n        \"required\": [\n          \"numberOfTrials\",\n          \"objectivePipeline\"\n        ]\n      },\n      \"hyperParams\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"suggest\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"uniform\",\n              \"loguniform\",\n              \"int\",\n              \"discrete_uniform\",\n              \"categorical\"\n            ]\n          },\n          \"low\": {\n            \"type\": \"number\"\n          },\n          \"hight\": {\n            \"type\": \"number\"\n          },\n          \"choices\": {\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"suggest\"\n        ]\n      },\n      \"sampler\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Grid\",\n              \"PartialFixed\",\n              \"Random\",\n              \"TPE\",\n              \"CmaEs\"\n            ]\n          },\n          \"fixed_values\": {\n            \"type\": \"object\"\n          },\n          \"search_space\": {\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"clean\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"maxAge\": {\n            \"type\": \"integer\",\n            \"description\": \"max age to clean (minutes)\"\n          }\n        }\n      },\n      \"gcError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"response\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"graphQuery\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\"\n          },\n          \"nodeName\": {\n            \"type\": \"string\"\n          },\n          \"sort\": {\n            \"type\": \"string\"\n          },\n          \"order\": {\n            \"type\": \"string\"\n          },\n          \"from\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"to\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          }\n        },\n        \"required\": [\n          \"jobId\"\n        ]\n      },\n      \"graphResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          },\n          \"timestamp\": {\n            \"type\": \"number\"\n          },\n          \"edges\": {\n            \"type\": \"array\",\n            \"description\": \"Array of edges\"\n          },\n          \"nodes\": {\n            \"type\": \"array\",\n            \"description\": \"Array of nodes\"\n          }\n        }\n      },\n      \"options\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ttl\": {\n            \"type\": \"integer\",\n            \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n            \"minimum\": 1,\n            \"default\": 3600,\n            \"example\": 3600\n          },\n          \"activeTtl\": {\n            \"type\": \"integer\",\n            \"description\": \"pipeline active time to live in seconds (only active state)\",\n            \"nullable\": true,\n            \"minimum\": 1,\n            \"example\": 3600\n          },\n          \"batchTolerance\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 100,\n            \"default\": 80,\n            \"example\": 80\n          },\n          \"concurrentPipelines\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"amount\": {\n                \"type\": \"integer\",\n                \"minimum\": 1,\n                \"maximum\": 10000,\n                \"example\": 1\n              },\n              \"rejectOnFailure\": {\n                \"type\": \"boolean\",\n                \"default\": true\n              }\n            },\n            \"additionalProperties\": false\n          },\n          \"progressVerbosityLevel\": {\n            \"type\": \"string\",\n            \"default\": \"info\",\n            \"example\": \"info\",\n            \"enum\": [\n              \"trace\",\n              \"debug\",\n              \"info\",\n              \"warn\",\n              \"error\",\n              \"critical\"\n            ]\n          },\n          \"debugOverride\": {\n            \"type\": \"array\",\n            \"description\": \"A list of algorithms to debug in this execution\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"uniqueItems\": true\n          }\n        },\n        \"description\": \"optional properties\"\n      },\n      \"pipeline\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific pipeline\",\n            \"minLength\": 1,\n            \"format\": \"pipeline-name\"\n          },\n          \"kind\": {\n            \"type\": \"string\",\n            \"default\": \"batch\",\n            \"example\": \"batch\",\n            \"enum\": [\n              \"batch\",\n              \"stream\"\n            ]\n          },\n          \"experimentName\": {\n            \"type\": \"string\",\n            \"description\": \"experiment name\",\n            \"default\": \"main\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"experiment-name\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"pipeline description\"\n          },\n          \"nodes\": {\n            \"type\": \"array\",\n            \"description\": \"Array of nodes\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"nodeName\": {\n                  \"type\": \"string\",\n                  \"description\": \"Unique node identifier\",\n                  \"minLength\": 1\n                },\n                \"algorithmName\": {\n                  \"type\": \"string\",\n                  \"description\": \"Unique identifier representing a specific algorithm\",\n                  \"minLength\": 1,\n                  \"maxLength\": 32,\n                  \"format\": \"algorithm-name\"\n                },\n                \"input\": {\n                  \"type\": \"array\",\n                  \"description\": \"The input for the algorithm\",\n                  \"items\": {},\n                  \"default\": []\n                },\n                \"ttl\": {\n                  \"type\": \"integer\",\n                  \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n                  \"minimum\": 0,\n                  \"example\": 0\n                },\n                \"includeInResult\": {\n                  \"type\": \"boolean\"\n                },\n                \"metrics\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"tensorboard\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Should tensorboard metrics be collected.\"\n                    }\n                  }\n                },\n                \"retry\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"policy\": {\n                      \"type\": \"string\",\n                      \"default\": \"OnCrash\",\n                      \"enum\": [\n                        \"Never\",\n                        \"Always\",\n                        \"OnError\",\n                        \"OnCrash\"\n                      ]\n                    },\n                    \"limit\": {\n                      \"type\": \"integer\",\n                      \"minimum\": 1,\n                      \"default\": 3,\n                      \"example\": 1\n                    }\n                  }\n                },\n                \"batchOperation\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"indexed\",\n                    \"cartesian\"\n                  ]\n                },\n                \"kind\": {\n                  \"type\": \"string\",\n                  \"default\": \"algorithm\",\n                  \"enum\": [\n                    \"algorithm\",\n                    \"pipeline\",\n                    \"debug\",\n                    \"dataSource\",\n                    \"gateway\",\n                    \"output\",\n                    \"hyperparamsTuner\"\n                  ]\n                },\n                \"spec\": {\n                  \"anyOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Unique identifier representing a specific pipeline\",\n                          \"minLength\": 1,\n                          \"format\": \"pipeline-name\"\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"gateway name\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"gateway-name\"\n                        },\n                        \"description\": {\n                          \"type\": \"string\",\n                          \"description\": \"describe the gateway\"\n                        },\n                        \"mem\": {\n                          \"type\": \"string\",\n                          \"description\": \"Memory allocated for streaming gateway\",\n                          \"format\": \"algorithm-memory\",\n                          \"default\": \"512Mi\"\n                        },\n                        \"cpu\": {\n                          \"type\": \"number\",\n                          \"description\": \"Cpu allocated for streaming gateway\",\n                          \"default\": 0.5\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"id\"\n                      ]\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\n                        \"name\"\n                      ]\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"snapshot\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"name\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"name\",\n                        \"snapshot\"\n                      ]\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"description\": {\n                          \"type\": \"string\",\n                          \"description\": \"describe the output\"\n                        },\n                        \"mem\": {\n                          \"type\": \"string\",\n                          \"description\": \"Memory allocated for output\",\n                          \"format\": \"algorithm-memory\",\n                          \"default\": \"512Mi\"\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"description\": \"gateway name\",\n                          \"minLength\": 1,\n                          \"maxLength\": 32,\n                          \"format\": \"gateway-name\"\n                        },\n                        \"description\": {\n                          \"type\": \"string\",\n                          \"description\": \"describe the gateway\"\n                        },\n                        \"mem\": {\n                          \"type\": \"string\",\n                          \"description\": \"Memory allocated for streaming gateway\",\n                          \"format\": \"algorithm-memory\",\n                          \"default\": \"512Mi\"\n                        },\n                        \"cpu\": {\n                          \"type\": \"number\",\n                          \"description\": \"Cpu allocated for streaming gateway\",\n                          \"default\": 0.5\n                        }\n                      }\n                    }\n                  ]\n                }\n              },\n              \"required\": [\n                \"nodeName\"\n              ]\n            }\n          },\n          \"flowInput\": {\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"description\": \"input object\"\n          },\n          \"webhooks\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"progress\": {\n                \"type\": \"string\",\n                \"format\": \"url\",\n                \"minLength\": 1,\n                \"description\": \"url to activate upon progress\",\n                \"example\": \"http://my-url-to-progress\"\n              },\n              \"result\": {\n                \"type\": \"string\",\n                \"format\": \"url\",\n                \"minLength\": 1,\n                \"description\": \"url to activate upon result\",\n                \"example\": \"http://my-url-to-result\"\n              }\n            },\n            \"additionalProperties\": false\n          },\n          \"options\": {\n            \"default\": {},\n            \"type\": \"object\",\n            \"properties\": {\n              \"ttl\": {\n                \"type\": \"integer\",\n                \"description\": \"pipeline time to live in seconds (including pending and active states)\",\n                \"minimum\": 1,\n                \"default\": 3600,\n                \"example\": 3600\n              },\n              \"activeTtl\": {\n                \"type\": \"integer\",\n                \"description\": \"pipeline active time to live in seconds (only active state)\",\n                \"nullable\": true,\n                \"minimum\": 1,\n                \"example\": 3600\n              },\n              \"batchTolerance\": {\n                \"type\": \"integer\",\n                \"minimum\": 0,\n                \"maximum\": 100,\n                \"default\": 80,\n                \"example\": 80\n              },\n              \"concurrentPipelines\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"amount\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"maximum\": 10000,\n                    \"example\": 1\n                  },\n                  \"rejectOnFailure\": {\n                    \"type\": \"boolean\",\n                    \"default\": true\n                  }\n                },\n                \"additionalProperties\": false\n              },\n              \"progressVerbosityLevel\": {\n                \"type\": \"string\",\n                \"default\": \"info\",\n                \"example\": \"info\",\n                \"enum\": [\n                  \"trace\",\n                  \"debug\",\n                  \"info\",\n                  \"warn\",\n                  \"error\",\n                  \"critical\"\n                ]\n              },\n              \"debugOverride\": {\n                \"type\": \"array\",\n                \"description\": \"A list of algorithms to debug in this execution\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"uniqueItems\": true\n              }\n            },\n            \"description\": \"optional properties\"\n          },\n          \"priority\": {\n            \"default\": 3,\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"maximum\": 5,\n            \"example\": 3\n          },\n          \"triggers\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"pipelines\": {\n                \"type\": \"array\",\n                \"description\": \"pipelines to activate upon result\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1\n                },\n                \"uniqueItems\": true\n              },\n              \"cron\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"pattern\": {\n                    \"type\": \"string\",\n                    \"description\": \"cron job\",\n                    \"minLength\": 1,\n                    \"format\": \"cron\"\n                  },\n                  \"enabled\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"enable or disable cron job\",\n                    \"default\": false\n                  }\n                }\n              }\n            },\n            \"additionalProperties\": false\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"description\": \"Array of tags\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier representing a specific tag\",\n              \"minLength\": 1,\n              \"maxLength\": 32\n            }\n          },\n          \"rootJobId\": {\n            \"type\": \"string\",\n            \"description\": \"the root job id of the current tree\"\n          },\n          \"streaming\": {\n            \"type\": \"object\",\n            \"description\": \"streaming options\",\n            \"properties\": {\n              \"defaultFlow\": {\n                \"type\": \"string\",\n                \"description\": \"the name of the default stream flow\"\n              },\n              \"flows\": {\n                \"type\": \"object\",\n                \"description\": \"define streaming flows in simple syntax\\nexample: node A stream to B and C, node B stream to D.\\nit will be: A \u003e\u003e B\u0026C | B \u003e\u003e D\\n\",\n                \"example\": {\n                  \"main\": \"A \u003e\u003e B\u0026C | B \u003e\u003e D | C \u003e\u003e E\",\n                  \"second\": \"A \u003e\u003e B \u003e\u003e C\"\n                }\n              }\n            }\n          },\n          \"edges\": {\n            \"type\": \"array\",\n            \"description\": \"edges define relation between nodes\",\n            \"items\": {},\n            \"example\": [\n              {\n                \"source\": \"A\",\n                \"target\": \"B\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"pipelineName\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier representing a specific pipeline\",\n        \"minLength\": 1,\n        \"format\": \"pipeline-name\"\n      },\n      \"kindPipeline\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific pipeline\",\n            \"minLength\": 1,\n            \"format\": \"pipeline-name\"\n          }\n        }\n      },\n      \"pipelineKind\": {\n        \"type\": \"string\",\n        \"default\": \"batch\",\n        \"example\": \"batch\",\n        \"enum\": [\n          \"batch\",\n          \"stream\"\n        ]\n      },\n      \"nodeKind\": {\n        \"type\": \"string\",\n        \"default\": \"algorithm\",\n        \"enum\": [\n          \"algorithm\",\n          \"pipeline\",\n          \"debug\",\n          \"dataSource\",\n          \"gateway\",\n          \"output\",\n          \"hyperparamsTuner\"\n        ]\n      },\n      \"pipelineNode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"nodeName\": {\n            \"type\": \"string\",\n            \"description\": \"Unique node identifier\",\n            \"minLength\": 1\n          },\n          \"algorithmName\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing a specific algorithm\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"format\": \"algorithm-name\"\n          },\n          \"input\": {\n            \"type\": \"array\",\n            \"description\": \"The input for the algorithm\",\n            \"items\": {},\n            \"default\": []\n          },\n          \"ttl\": {\n            \"type\": \"integer\",\n            \"description\": \"Algorithm execution time to live in seconds. 0 to disable\",\n            \"minimum\": 0,\n            \"example\": 0\n          },\n          \"includeInResult\": {\n            \"type\": \"boolean\"\n          },\n          \"metrics\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"tensorboard\": {\n                \"type\": \"boolean\",\n                \"description\": \"Should tensorboard metrics be collected.\"\n              }\n            }\n          },\n          \"retry\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"policy\": {\n                \"type\": \"string\",\n                \"default\": \"OnCrash\",\n                \"enum\": [\n                  \"Never\",\n                  \"Always\",\n                  \"OnError\",\n                  \"OnCrash\"\n                ]\n              },\n              \"limit\": {\n                \"type\": \"integer\",\n                \"minimum\": 1,\n                \"default\": 3,\n                \"example\": 1\n              }\n            }\n          },\n          \"batchOperation\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"indexed\",\n              \"cartesian\"\n            ]\n          },\n          \"kind\": {\n            \"type\": \"string\",\n            \"default\": \"algorithm\",\n            \"enum\": [\n              \"algorithm\",\n              \"pipeline\",\n              \"debug\",\n              \"dataSource\",\n              \"gateway\",\n              \"output\",\n              \"hyperparamsTuner\"\n            ]\n          },\n          \"spec\": {\n            \"anyOf\": [\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier representing a specific pipeline\",\n                    \"minLength\": 1,\n                    \"format\": \"pipeline-name\"\n                  }\n                }\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"gateway name\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"gateway-name\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"describe the gateway\"\n                  },\n                  \"mem\": {\n                    \"type\": \"string\",\n                    \"description\": \"Memory allocated for streaming gateway\",\n                    \"format\": \"algorithm-memory\",\n                    \"default\": \"512Mi\"\n                  },\n                  \"cpu\": {\n                    \"type\": \"number\",\n                    \"description\": \"Cpu allocated for streaming gateway\",\n                    \"default\": 0.5\n                  }\n                }\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"snapshot\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"snapshot\"\n                ]\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"describe the output\"\n                  },\n                  \"mem\": {\n                    \"type\": \"string\",\n                    \"description\": \"Memory allocated for output\",\n                    \"format\": \"algorithm-memory\",\n                    \"default\": \"512Mi\"\n                  }\n                }\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"gateway name\",\n                    \"minLength\": 1,\n                    \"maxLength\": 32,\n                    \"format\": \"gateway-name\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"describe the gateway\"\n                  },\n                  \"mem\": {\n                    \"type\": \"string\",\n                    \"description\": \"Memory allocated for streaming gateway\",\n                    \"format\": \"algorithm-memory\",\n                    \"default\": \"512Mi\"\n                  },\n                  \"cpu\": {\n                    \"type\": \"number\",\n                    \"description\": \"Cpu allocated for streaming gateway\",\n                    \"default\": 0.5\n                  }\n                }\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"nodeName\"\n        ]\n      },\n      \"pipelineResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier representing pipeline execution\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\"\n          },\n          \"pipeline\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {}\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timeTook\": {\n            \"type\": \"number\"\n          },\n          \"storageModule\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"priority\": {\n        \"type\": \"integer\",\n        \"minimum\": 1,\n        \"maximum\": 5,\n        \"default\": 3,\n        \"example\": 3\n      },\n      \"triggers\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pipelines\": {\n            \"type\": \"array\",\n            \"description\": \"pipelines to activate upon result\",\n            \"items\": {\n              \"type\": \"string\",\n              \"minLength\": 1\n            },\n            \"uniqueItems\": true\n          },\n          \"cron\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"pattern\": {\n                \"type\": \"string\",\n                \"description\": \"cron job\",\n                \"minLength\": 1,\n                \"format\": \"cron\"\n              },\n              \"enabled\": {\n                \"type\": \"boolean\",\n                \"description\": \"enable or disable cron job\",\n                \"default\": false\n              }\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"pipelineTriggersNode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Pipeline name\"\n          },\n          \"children\": {\n            \"type\": \"array\",\n            \"items\": {}\n          }\n        }\n      },\n      \"pipelineTriggersResult\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Pipeline name\"\n            },\n            \"children\": {\n              \"type\": \"array\",\n              \"items\": {}\n            }\n          }\n        }\n      },\n      \"codeApiPipelineRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jobId\": {\n            \"type\": \"string\"\n          },\n          \"taskId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"jobId\",\n          \"taskId\"\n        ]\n      },\n      \"webhookResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"timestamp\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"pipelineStatus\": {\n            \"type\": \"string\"\n          },\n          \"responseStatus\": {\n            \"type\": \"string\"\n          },\n          \"httpResponse\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"statusCode\": {\n                \"type\": \"string\"\n              },\n              \"statusMessage\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"webhooks\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"progress\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"minLength\": 1,\n            \"description\": \"url to activate upon progress\",\n            \"example\": \"http://my-url-to-progress\"\n          },\n          \"result\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"minLength\": 1,\n            \"description\": \"url to activate upon result\",\n            \"example\": \"http://my-url-to-result\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"githubWebhook\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"github\": {\n            \"type\": \"object\",\n            \"description\": \"github object which received after push for more information https://developer.github.com/webhooks/\"\n          }\n        }\n      },\n      \"gitlabWebhook\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gitlab\": {\n            \"type\": \"object\",\n            \"description\": \"gitlab object which received after push for more information https://docs.gitlab.com/ee/user/project/integrations/webhooks.html\"\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"nameParam\": {\n        \"name\": \"name\",\n        \"in\": \"path\",\n        \"description\": \"A dataSource name\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"idParam\": {\n        \"name\": \"id\",\n        \"in\": \"path\",\n        \"description\": \"A datasource id (indicating a version)\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"snapshotNameParam\": {\n        \"name\": \"snapshotName\",\n        \"in\": \"path\",\n        \"description\": \"A Snapshot name\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"snapshotNameQuery\": {\n        \"name\": \"snapshot_name\",\n        \"in\": \"query\",\n        \"description\": \"A Snapshot name\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"nameQuery\": {\n        \"name\": \"datasource_name\",\n        \"in\": \"query\",\n        \"description\": \"a datasource name\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"idQuery\": {\n        \"name\": \"id\",\n        \"in\": \"query\",\n        \"description\": \"request a specific version, if not stated the latest is returned\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"idQueryRequired\": {\n        \"name\": \"id\",\n        \"in\": \"query\",\n        \"description\": \"request a specific version, if not stated the latest is returned\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"downloadIdQuery\": {\n        \"name\": \"id\",\n        \"in\": \"query\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"description\": \"Unique identifier representing a downloadId\",\n          \"minLength\": 4,\n          \"maxLength\": 4,\n          \"format\": \"download-id\"\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: paths: /store/algorithms/{name}: get: : responses: 200: content: application/json: schema: parse schema: options: parse default: unexpected type: \"object\""
}