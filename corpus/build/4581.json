{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mrin9/RapiDoc"
		},
		"file": {
			"name": "temp.json",
			"path": "docs/specs/temp.json",
			"content": "{\n  \"x-generator\": \"NSwag v13.13.2.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v12.0.0.0))\",\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"API\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:8181\"\n    }\n  ],\n  \"paths\": {\n    \"/api/employee\": {\n      \"get\": {\n        \"tags\": [\n          \"Employee\"\n        ],\n        \"summary\": \"Get Employees\",\n        \"description\": \"Gets one or more employees\",\n        \"operationId\": \"Employee_GetEmployees\",\n        \"parameters\": [\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"description\": \"A comma-delimited list of employee ids/codes to retrieve.  If not provided, all employees will be returned.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"nullable\": true,\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"idType\",\n            \"in\": \"query\",\n            \"description\": \"The type of id: MasterId, EmployeeCode, or TimeWorksPlusId\",\n            \"schema\": {\n              \"default\": \"EmployeeCode\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/EmployeeIdType\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Employee\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Employee\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"employeeCode\"\n        ],\n        \"properties\": {\n          \"employeeCode\": {\n            \"type\": \"string\",\n            \"description\": \"The employee code.\",\n            \"maxLength\": 20,\n            \"minLength\": 1\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The employee's first name.\",\n            \"nullable\": true\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The employee's last name.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"EmployeeIdType\": {\n        \"type\": \"string\",\n        \"description\": \"Type of unique identifier to identify the employee.\",\n        \"x-enumFlags\": true,\n        \"x-enumNames\": [\n          \"MasterId\",\n          \"EmployeeCode\",\n          \"TimeWorksPlusId\"\n        ],\n        \"enum\": [\n          \"MasterId\",\n          \"EmployeeCode\",\n          \"TimeWorksPlusId\"\n        ]\n      }\n    },\n    \"securitySchemes\": {\n      \"Authorization\": {\n        \"type\": \"http\",\n        \"description\": \"All API endpoints use JWT Authentication. You must obtain a valid JWT from the SwipeClock Authorization Service\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"scheme\": \"Bearer\",\n        \"bearerFormat\": \"JWT\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"http://localhost:8181/AuthenticationService/\"\n          }\n        }\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Authorization\": []\n    }\n  ]\n}"
		}
	},
	"Error": "parse: paths: /api/employee: get: operation \"Employee_GetEmployees\": parameters: parse parameter \"idType\": schema: parse default: unexpected type: \"\""
}