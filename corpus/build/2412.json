{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mockoon/mockoon"
		},
		"file": {
			"name": "custom-schema-no-prefix-v3.yaml",
			"path": "test/data/res/import-openapi/samples/custom-schema-no-prefix-v3.yaml",
			"content": "# Test: primitives, arrays, objects (with or without type: object), refs, example, default, allOf, oneOf, anyOf\n\nopenapi: \"3.0.0\"\ninfo:\n  title: \"Sample v3 schema\"\n  description: \"Sample v3 schema\"\n  version: \"1.0.0\"\npaths:\n  /endpoint:\n    get:\n      responses:\n        \"200\":\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/SchemaObject\"\n  /endpoint2:\n    get:\n      responses:\n        default:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/SchemaObject\"\n  /endpoint3:\n    get:\n      responses:\n        default:\n          description: \"Success\"\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/SchemaObject\"\ncomponents:\n  schemas:\n    SchemaObject:\n      properties:\n        id:\n          type: \"integer\"\n          format: \"int64\"\n        order:\n          type: \"number\"\n          format: \"double\"\n        quantity:\n          type: \"number\"\n          format: \"float\"\n        datetime:\n          type: \"string\"\n          format: \"date-time\"\n        date:\n          type: \"string\"\n          format: \"date\"\n        age:\n          type: \"integer\"\n          default: \"32\"\n        email:\n          type: \"string\"\n          format: \"email\"\n        uuid:\n          type: \"string\"\n          format: \"uuid\"\n        tags:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: \"string\"\n          description: \"Order Status\"\n          enum:\n            - \"enum1\"\n            - \"enum2\"\n            - \"enum3\"\n        inProgress:\n          type: \"boolean\"\n        complete:\n          type: \"boolean\"\n          example: true\n        categories:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/Category\"\n        allOfArray:\n          type: \"array\"\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Category\"\n              - $ref: \"#/components/schemas/Tag\"\n        oneOfArray:\n          type: \"array\"\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/Tag\"\n              - $ref: \"#/components/schemas/Category\"\n        anyOfArray:\n          type: \"array\"\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/Category\"\n              - $ref: \"#/components/schemas/Tag\"\n\n    Category:\n      type: \"object\"\n      properties:\n        name:\n          type: \"string\"\n    Tag:\n      type: \"string\"\n"
		}
	},
	"Error": "parse: paths: /endpoint: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: reference \"#/components/schemas/SchemaObject\": parse schema: age: parse default: expected type \"integer\", got \"string\""
}