{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/interagent/committee"
		},
		"file": {
			"name": "normal.yaml",
			"path": "test/data/openapi3/normal.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: OpenAPI3 Test\n  description: A Sample file\nservers:\n- url: https://github.com/interagent/committee/\npaths:\n  /csv:\n    get:\n      description: get csv\n      responses:\n        '200':\n          description: success\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n\n  /characters:\n    get:\n      description: get characters\n      parameters:\n      - name: school_name\n        in: query\n        description: school name to filter by\n        required: false\n        style: form\n        schema:\n          type: array\n          items:\n            type: string\n      - name: limit\n        in: query\n        description: maximum number of characters\n        required: false\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string_1:\n                    type: string\n                  time_string_1:\n                    type: string\n                    exmaple: 2021-09-22T05:36:45Z\n                  array_1:\n                    type: array\n                    items:\n                      type: string\n        '400':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  integer:\n                    type: integer\n    post:\n      description: new characters\n      responses:\n        '200':\n          description: correct\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  response_1:\n                    type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                string_post_1:\n                  type: string\n    delete:\n      description: new characters\n      responses:\n        '200':\n          description: correct\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  response_1:\n                    type: string\n      parameters:\n      - name: limit\n        in: query\n        description: maximum number of characters\n        required: false\n        schema:\n          type: integer\n          format: int32\n    head:\n      description: new characters\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  integer:\n                    type: integer\n      parameters:\n        - name: limit\n          in: query\n          description: maximum number of characters\n          required: false\n          schema:\n            type: integer\n            format: int32\n    options:\n      description: preflight request\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  integer:\n                    type: integer\n    trace:\n      description: trace request\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  integer:\n                    type: integer\n\n  /string_params_coercer:\n    get:\n      description: string_params_coercer test data\n      parameters:\n      - name: integer_1\n        in: query\n        description: integer 32\n        required: false\n        schema:\n          type: integer\n          format: int32\n      - name: string_1\n        in: query\n        description: string data\n        required: false\n        schema:\n          type: string\n      - name: boolean_1\n        in: query\n        description: boolean data\n        required: false\n        schema:\n          type: boolean\n      - name: number_1\n        in: query\n        description: number data\n        required: false\n        schema:\n          nullable: true\n          type: number\n      - name: datetime_string\n        in: query\n        required: false\n        schema:\n          type: string\n          format: date-time\n      - name: normal_array\n        in: query\n        description: number data\n        required: false\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: nested_array\n        in: query\n        description: nested_array\n        required: false\n        schema:\n          \"$ref\": '#/components/schemas/nested_array'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n    post:\n      description: string_params_coercer test data\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                nested_array:\n                  \"$ref\": '#/components/schemas/nested_array'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /validate:\n    get:\n      description: get characters\n      parameters:\n      - name: query_string\n        in: query\n        required: true\n        style: form\n        schema:\n          type: string\n      - name: query_string\n        in: path\n        required: true\n        schema:\n          type: integer\n      - name: query_integer_list\n        in: query\n        required: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: optional_integer\n        in: query\n        required: false\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: no content\n    post:\n      description: validate test data\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                string:\n                  type: string\n                integer:\n                  type: integer\n                boolean:\n                  type: boolean\n                number:\n                  type: number\n                array:\n                  type: array\n                  items:\n                    type: integer\n                object_1:\n                  type: object\n                  properties:\n                    string_1:\n                      nullable: true\n                      type: string\n                    integer_1:\n                      nullable: true\n                      type: integer\n                    boolean_1:\n                      nullable: true\n                      type: boolean\n                    number_1:\n                      nullable: true\n                      type: number\n                object_2:\n                  type: object\n                  required:\n                  - string_2\n                  - integer_2\n                  - boolean_2\n                  - number_2\n                  properties:\n                    string_2:\n                      type: string\n                    integer_2:\n                      type: integer\n                    boolean_2:\n                      type: boolean\n                    number_2:\n                      type: number\n                required_object:\n                  type: object\n                  required:\n                  - need_object\n                  properties:\n                    need_object:\n                      type: object\n                      required:\n                      - string\n                      properties:\n                        string:\n                          type: string\n                    no_need_object:\n                      type: object\n                      required:\n                      - integer\n                      properties:\n                        integer:\n                          type: integer\n                any_of:\n                  type: array\n                  items:\n                    anyOf:\n                    - type: string\n                    - type: boolean\n                enum_string:\n                  type: string\n                  enum:\n                  - a\n                  - b\n                enum_integer:\n                  type: integer\n                  enum:\n                  - 1\n                  - 2\n                enum_number:\n                  type: number\n                  enum:\n                  - 1.0\n                  - 2.1\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                integer:\n                  type: integer\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string:\n                    type: string\n        '204':\n          description: no content\n    put:\n      description: validate put metodhd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                string:\n                  type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string:\n                    type: string\n    patch:\n      description: validate patch metodhd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                integer:\n                  type: integer\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string:\n                    type: string\n    options:\n      description: validate options metodhd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                integer:\n                  type: integer\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string:\n                    type: string\n\n  /validate_content_types:\n    post:\n      description: validate request content type\n      responses:\n        '200':\n          description: correct\n          content:\n            application/json:\n              schema:\n                type: object\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n          application/binary:\n            schema:\n              type: string\n              format: binary\n\n  /validate_no_parameter:\n    patch:\n      description: validate no body\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  integer:\n                    type: integer\n\n  /validate_response_array:\n    get:\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /path_template_test/no_template:\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}:\n    parameters:\n    - name: template_name\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/nested:\n    parameters:\n    - name: template_name\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/nested/{nested_parameter}:\n    parameters:\n    - name: template_name\n      in: path\n      required: true\n      schema:\n        type: string\n    - name: nested_parameter\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/{nested_parameter}:\n    parameters:\n    - name: template_name\n      in: path\n      required: true\n      schema:\n        type: string\n    - name: nested_parameter\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/{nested_parameter}/finish:\n    parameters:\n    - name: template_name\n      in: path\n      required: true\n      schema:\n        type: string\n    - name: nested_parameter\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /{ambiguous}/no_template:\n    parameters:\n    - name: ambiguous\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /coerce_path_params/{integer}:\n    get:\n      description: get characters\n      parameters:\n      - name: integer\n        in: path\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: no content\n  /header:\n    get:\n      parameters:\n        - $ref: '#/components/parameters/header_integer_required'\n      responses:\n        '200':\n          $ref: '#/components/responses/header_integer_required'\n    post:\n      parameters:\n        - $ref: '#/components/parameters/header_integer_required'\n      responses:\n        '200':\n          $ref: '#/components/responses/header_integer_required'\n    put:\n      parameters:\n        - $ref: '#/components/parameters/header_integer_required'\n      responses:\n        '200':\n          $ref: '#/components/responses/header_integer_required'\n    patch:\n      parameters:\n        - $ref: '#/components/parameters/header_integer_required'\n      responses:\n        '200':\n          $ref: '#/components/responses/header_integer_required'\n    delete:\n      parameters:\n        - $ref: '#/components/parameters/header_integer_required'\n      responses:\n        '200':\n          $ref: '#/components/responses/header_integer_required'\n    options:\n      parameters:\n        - $ref: '#/components/parameters/header_integer_required'\n      responses:\n        '200':\n          $ref: '#/components/responses/header_integer_required'\n\n  /get_endpoint_with_requered_parameter:\n    get:\n      description: get body test\n      parameters:\n      - name: data\n        in: query\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: no content\n\n  /ref-sample:\n    get:\n      responses:\n        '200':\n          description: sample of remote schema reference\n          content:\n            application/json:\n              schema:\n                $ref: referee.yaml#/components/schemas/referred_schema\n\n  /parameter_option_test/{integer}:\n    post:\n      description: parameter option test\n      parameters:\n      - name: integer\n        in: path\n        required: true\n        schema:\n          type: integer\n      - name: integer\n        in: query\n        required: true\n        schema:\n          type: integer    \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                integer:\n                  type: integer\n      responses:\n        '204':\n          description: sample of remote schema reference\n\ncomponents:\n  schemas:\n    nested_array:\n      type: array\n      items:\n        type: object\n        properties:\n          update_time:\n            type: string\n            format: date-time\n          per_page:\n            type: integer\n          threshold:\n            type: number\n          nested_coercer_object:\n            type: object\n            properties:\n              update_time:\n                type: string\n                format: date-time\n              threshold:\n                type: number\n          nested_no_coercer_object:\n            type: object\n          nested_coercer_array:\n            type: array\n            items:\n              type: object\n              properties:\n                update_time:\n                  type: string\n                  format: date-time\n                threshold:\n                  type: number\n          nested_no_coercer_array:\n            type: array\n            items:\n              type: object\n          datetime_array:\n            type: array\n            items:\n              type: string\n              format: date-time\n\n  parameters:\n    header_integer_required:\n      name: integer\n      in: header\n      required: true\n      schema:\n        type: integer\n\n  responses:\n    header_integer_required:\n      headers:\n        integer:\n          schema:\n            required: true\n            type: integer\n"
		}
	},
	"Error": "parse: paths: /ref-sample: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: reference \"referee.yaml#/components/schemas/referred_schema\": resolve reference \"referee.yaml#/components/schemas/referred_schema\": invalid schema reference \"referee.yaml#/components/schemas/referred_schema\""
}