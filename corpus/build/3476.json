{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mitre/emasser"
		},
		"file": {
			"name": "eMASSRestOpenApi.yaml",
			"path": "emass_client/eMASSRestOpenApi.yaml",
			"content": "# eMass Rest Open API specification\n---\nopenapi: 3.0.3\n#-------------------------------------------------------------------------------\n# I N F O  - API metadata\n#-------------------------------------------------------------------------------\ninfo:\n  title: Enterprise Mission Assurance Support Service (eMASS)\n  description: |\n      The Enterprise Mission Assurance Support Service (eMASS) Representational State\n      Transfer (REST) Application Programming Interface (API) enables users to perform\n      assessments and complete actions associated with system records. \n      \n      The `emasser` is a command-line interface (CLI) tool that implements all of the \n      eMASS endpoints defined in the eMASS REST API v3.2, dated October 21, 2021.\u003c/br\u003e\u003cbr\u003e\n\n      \u003cstrong\u003eRegister CLI\u003c/strong\u003e\u003c/br\u003e\n      New users will need to register an API key with the eMASS development team prior to\n      accessing the site for the first time. The eMASS REST API requires a client certificate\n      (SSL/TLS, DoD PKI only) where {url}/api/register (POST) is used to register the client\n      certificate.\u003c/br\u003e\u003c/br\u003e\n\n      Every call to the eMASS REST API will require the use of the agreed upon public key\n      certificate and API key. The API key must be provided in the request header for all\n      endpoint calls (api-key). If the service receives an untrusted certificate or API key, a\n      401 error response code will be returned along with an error message.\u003c/br\u003e\u003c/br\u003e\n  \n      \u003cstrong\u003eAvailable Request Headers:\u003c/strong\u003e\u003c/br\u003e\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth align=left\u003ekey\u003c/th\u003e\n          \u003cth align=left\u003eExample Value\u003c/th\u003e\n          \u003cth align=left\u003eDescription\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003e`api-key`\u003c/td\u003e\n          \u003ctd\u003eapi-key-provided-by-emass\u003c/td\u003e\n          \u003ctd\u003eThis API key must be provided in the request header for all endpoint calls\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003e`user-uid`\u003c/td\u003e\n          \u003ctd\u003eUSER.UID.KEY\u003c/td\u003e\n          \u003ctd\u003eThis User unique identifier key must be provided in the request header for all PUT, POST, and DELETE endpoint calls\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\n            Note: For DoD users this is the DoD ID Number (EIDIPI) on their DoD CAC\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n      \u003c/br\u003e\u003cstrong\u003eApprove API Client for Actionable Requests\u003c/strong\u003e\u003c/br\u003e\n      Users are required to log-in to eMASS and grant permissions for a client to update data\n      within eMASS on their behalf. This is only required for actionable requests (PUT, POST,\n      DELETE). The Registration Endpoint and all GET requests can be accessed without\n      completing this process with the correct permissions. Please note that leaving a field\n      parameter blank (for PUT/POST requests) has the potential to clear information in the\n      active eMASS records.\n\n      To establish an account with eMASS and/or acquire an api-key/user-uid, contact one of the listed POC:\n  contact:\n    name: eMASS Tier III support\n    url: 'https://www.dcsa.mil/is/emass/'\n    email: disa.meade.id.mbx.emass-tier-iii-support@mail.mil\n\n  version: 'v3.2'\n\nexternalDocs:\n  description: eMASS New User Registration (requires CAC authentication)\n  url: 'https://nisp.emass.apps.mil/Content/Help/jobaids/eMASS_OT_NewUser_Job_Aid.pdf'\n#-------------------------------------------------------------------------------\n# S E R V E R S - Array of Server Objects which provide connectivity information\n#                  to target servers.\n#-------------------------------------------------------------------------------\nservers:\n  - url: \"http://localhost:4010\"\n    description: Use localhost mock server\n  - url: \"https://stoplight.io/mocks/mitre/emasser/32836028\"\n    description: Use the hosted Prism mock server\n  #- dst: \"what\"\n#-------------------------------------------------------------------------------\n# T A G S - A list of tags used by the specification with additional metadata.\n#-------------------------------------------------------------------------------\ntags:\n  - name: Test\n    description: \u003e\n      The Test Connection endpoint provides the ability to verify connection to the web service.\n  - name: Registration\n    description: \u003e\n      The Registration endpoint provides the ability to register a certificate \u0026 obtain an API-key.\n  - name: Systems\n    description: |\n      The Systems endpoints provide the ability to view system information.\n\n      **Notes**\n        - If a system is dual-policy enabled, the returned system details default to the RMF policy information unless otherwise specified for an individual system.\n        - Certain fields are instance specific and may not be returned in GET request.\n  - name: System Roles\n    description: |\n      The System Roles endpoints provides the ability to access user data assigned to systems.\n\n      **Notes:**\n      - The endpoint can access three different role categories: PAC, CAC, and Other.\n      - If a system is dual-policy enabled, the returned system role information will default to the RMF policy information unless otherwise specified.\n  - name: Controls\n    description: \"The Controls endpoints provide the ability to view, add, and update\n      Security Control information to a system for both the Implementation Plan and\n      Risk Assessment.\"\n  - name: Test Results\n    description: \u003e\n      The Test Results endpoints provide the ability to view and add test results for a system's\n      Assessment Procedures (CCIs) which determine Security Control compliance.\n  - name: POAM\n    description: \u003e\n      The POA\u0026Ms endpoints provide the ability to view, add, update, and remove Plan of Action\n      and Milestones (POA\u0026M) items and associated milestones for a system.\n  - name: Milestones\n    description: \u003e\n      The Milestones endpoints provide the ability to view, add, update, and remove milestones\n      that are associated with Plan of Action and Milestones (POA\u0026M) items for a system.\n  - name: Artifacts\n    description: \u003e\n      The Artifacts endpoints provide the ability to view, add, update, and remove artifacts\n      (supporting documentation/evidence) and associated files for a system.\n  - name: Artifacts Export\n    description: \u003e\n      The Artifacts Export endpoint provides the ability to download artifact files for a system.\n  - name: CAC\n    description: |\n      The Control Approval Chain (CAC) endpoints provide the ability to view the status of\n      Security Controls and submit them to the second stage in the Control Approval Chain.\n\n      **Notes:**\n      - POST requests will only yield successful results if the Security Control is at the\n        first stage of the CAC. If the control is not at the first stage, an error will be returned.      \n  - name: PAC\n    description: |\n      The Package Approval Chain (PAC) endpoints provide the ability to view the status of\n      existing workflows and initiate new workflows for a system.\n      \n      **Notes:**\n      - If the indicated system has any active workflows, the response will include information\n        such as the workflow type and the current stage of each workflow.\n      - If there are no active workflows, then a null data member will be returned.\n  - name: CMMC Assessments\n    description: \u003e\n      The Cybersecurity Maturity Model Certification (CMMC) Assessments endpoint provides the\n      ability to view CMMC assessment information. It is available to CMMC eMASS only.\n  - name: Static Code Scans\n    description: \u003e\n      The Static Code Scans endpoint provides the ability to upload application scan findings\n      into a system's assets module. Application findings can also be cleared from the system.\n  - name: Workflow Definitions\n    description: \u003e\n      The Workflow Definitions endpoint provides the ability to view all workflow schemas \n      available on the eMASS instance. Every transition for each workflow stage is included.\n  - name: Workflow Instances\n    description: \u003e\n      The Workflow Instances endpoint provides the ability to view detailed information on\n      all active and historical workflows for a system.\n\n#-------------------------------------------------------------------------------\n# P A T H S - The available paths and operations for the API endpoints\n#-------------------------------------------------------------------------------\npaths:\n  #----------------------------------------------------------------------------\n  # Test endpoint\n  #----------------------------------------------------------------------------\n  /api:\n    get:\n      tags:\n        - Test\n      summary: \"Test connection to the API\"\n      description: \"Returns endpoint call status\"\n      operationId: testConnection\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Test\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Register endpoint\n  #----------------------------------------------------------------------------\n  /api/api-key:\n    post:\n      tags:\n        - Registration\n      summary: \"Register user certificate and obtain an API key\"\n      description: \"Returns the api-key - This API key must be provided in the request header for all endpoint calls (api-key).\"\n      operationId: registerUser\n      requestBody:\n        description: \"User certificate previously provided by eMASS.\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/RegisterUserRequestPostBody\"\n        required: true\n      responses:\n        '200':\n          description: \"Request has succeeded\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Register\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Systems endpoint\n  #----------------------------------------------------------------------------\n  /api/systems:\n    get:\n      tags:\n        - Systems\n      summary: \"Get system information\"\n      description: \"Returns all system(s) that match the query parameters\"\n      operationId: getSystems\n      parameters:\n        - $ref: '#/components/parameters/includePackage'\n        - $ref: '#/components/parameters/registrationType'\n        - $ref: '#/components/parameters/ditprId'\n        - $ref: '#/components/parameters/coamsId'\n        - $ref: '#/components/parameters/policy'\n        - $ref: '#/components/parameters/includeDitprMetrics'\n        - $ref: '#/components/parameters/includeDecommissioned'\n        - $ref: '#/components/parameters/reportsForScorecard'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SystemResponse\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  /api/systems/{systemId}: \n    get:\n      tags:\n        - Systems\n      summary: \"Get system information for a specific system\"\n      description: \"Returns the system matching provided parameters\"\n      operationId: getSystem\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/includePackage'\n        - $ref: '#/components/parameters/policy'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SystemResponse\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # System Roles endpoint\n  #----------------------------------------------------------------------------\n  /api/system-roles:\n    get:\n      tags:\n        - System Roles\n      summary: \"Get available roles\"\n      description: \"Returns all available roles\"\n      operationId: getSystemRoles\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SystemRolesResponse\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  /api/system-roles/{roleCategory}:\n    get:\n      tags:\n        - System Roles\n      summary: \"Get system roles\"\n      description: \"Returns the role(s) data matching parameters.\"\n      operationId: getSystemRolesByCategoryId\n      parameters:\n        - $ref: '#/components/parameters/roleCategory'\n        - $ref: '#/components/parameters/role'\n        - $ref: '#/components/parameters/policy'\n        - $ref: '#/components/parameters/includeDecommissioned'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SystemRolesCategoryResponse\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Control endpoint\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/controls:\n    get:\n      tags:\n       - Controls\n      summary: \"Get control information in a system for one or many controls\"\n      description: |-\n          Returns system control information for matching `systemId` path parameter\n      operationId: getSystemControls\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/acronyms'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ControlsResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    put:\n      tags:\n        - Controls\n      summary: \"Update control information in a system for one or many controls\"\n      description: |-\n\n        Update a Control for given `systemId`\u003cbr\u003e\n\n        **Request Body Required Fields**\n        - `acronym`\n        - `responsibleEntities`\n        - `controlDesignation`\n        - `estimatedCompletionDate`\n        - `implementationNarrative`\n\n        The following optional fields are required based on the Implementation Status `implementationStatus` value\u003cbr\u003e\n        | Value                    | Required Fields\n        |--------------------------|---------------------------------------------------\n        | Planned  or Implemented  | `estimatedCompletionDate`, `responsibleEntities`, `slcmCriticality`, `slcmFrequency`, `slcmMethod`, `slcmReporting`, `slcmTracking`, `slcmComments`\n        | Not Applicable           | `naJustification`, `responsibleEntities`\n        | Manually Inherited       | `commonControlProvider`, `estimatedCompletionDate`, `responsibleEntities`, `slcmCriticality`, `slcmFrequency`, `slcmMethod`, `slcmReporting`, `slcmTracking`, `slcmComments`\n        \n        If the Implementation Status `implementationStatus` value is \"Inherited\", only the following fields can be updated:\n          - `controlDesignation`\n          - `commonnControlProvider`\n      operationId: updateControlBySystemId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"Update an existing control by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ControlsRequestPutBody\"\n        required: true\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ControlsResponsePut\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Test Results endpoint\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/test-results:\n    get:\n      tags:\n        - Test Results\n      summary: \"Get one or many test results in a system\"\n      description: |-\n          Returns system test results information for matching parameters.\u003cbr\u003e\n      operationId: getSystemTestResults\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/controlAcronyms'\n        - $ref: '#/components/parameters/ccis'\n        - $ref: '#/components/parameters/latestOnly'\n      responses:\n        '200':\n          description: \"Successful Response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TestResultsResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    post:\n      tags:\n        - Test Results\n      summary: \"Add one or many test results in a system\"\n      description: |-\n        Adds test results for given `systemId`\n\n        **Request Body Required Fields**\n        - `cci`\n        - `testedBy`\n        - `testDate`\n        - `description`\n        - `complianceStatus`\n     \n      operationId: addTestResultsBySystemId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"Update an existing control by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TestResultsRequestPostBody\"\n        required: true\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TestResultsResponsePost\"\n        '201':\n          description: \"Created\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/201\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '411':\n          description: \"Length Required\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/411\"        \n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # POA\u0026Ms endpoint\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/poams:\n    get:\n      tags:\n        - POAM\n      summary: \"Get one or many POA\u0026M items in a system\"\n      description: \"Returns system(s) containing POA\u0026M items for matching parameters.\"\n      operationId: getSystemPoams\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/scheduledCompletionDateStart'\n        - $ref: '#/components/parameters/scheduledCompletionDateEnd'\n        - $ref: '#/components/parameters/controlAcronyms'\n        - $ref: '#/components/parameters/ccis'\n        - $ref: '#/components/parameters/systemOnly'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PoamResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    post:\n      tags:\n        - POAM\n      summary: \"Add one or many POA\u0026M items in a system\"\n      description: |-\n        Add a POA\u0026M for given `systemId`\u003cbr\u003e\n\n        **Request Body Required Fields**\n        - `status`\n        - `vulnerabilityDescription`\n        - `sourceIdentVuln`\n        - `pocOrganization`\n        - `resources`\n\n        **Note**\u003cbr /\u003e\n        If a POC email is supplied, the application will attempt to locate a user already\n        registered within the application and pre-populate any information not explicitly supplied\n        in the request. If no such user is found, these fields are **required** within the request.\u003cbr\u003e\n        `pocFirstName`, `pocLastName`, `pocPhoneNumber`\u003cbr /\u003e\n      operationId: addPoamBySystemId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"Update an existing control by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/PoamRequestPostBody\"\n        required: true\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PoamResponsePost\"\n        '201':\n          description: \"Created\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/201\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '411':\n          description: \"Length Required\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/411\"        \n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    put:\n      tags:\n        - POAM\n      summary: \"Update one or many POA\u0026M items in a system\"\n      description: |-\n        Update a POA\u0026M for given `systemId`\u003cbr\u003e\n\n        **Request Body Required Fields**\n        - `poamId`\n        - `displayPoamId`\n        - `status`\n        - `vulnerabilityDescription`\n        - `sourceIdentVuln`\n        - `pocOrganization`\n        - `reviewStatus`\n\n        **Notes**\n        - If a POC email is supplied, the application will attempt to locate a user already\n          registered within the application and pre-populate any information not explicitly supplied\n          in the request. If no such user is found, these fields are **required** within the request.\u003cbr\u003e\n          `pocOrganization`, `pocFirstName`, `pocLastName`, `pocEmail`, `pocPhoneNumber`\u003cbr /\u003e\n\n        - To delete a milestone through the POA\u0026M PUT the field `isActive` must be set to `false`: `isActive=false`.\n      operationId: updatePoamBySystemId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"Update an existing control by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/PoamRequestPutBody\"\n        required: true\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PoamResponsePut\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    delete:\n      tags:\n        - POAM\n      summary: \"Remove one or many POA\u0026M items in a system\"\n      description: |-\n        Remove the POA\u0026M matching `systemId` path parameter and `poamId` query parameter\u003cbr\u003e\n      operationId: deletePoam\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"Delete the given POA\u0026M Id\"\n        content:\n          application/json:\n            schema:\n              title: DeletePoam\n              type: object\n              required:\n                - poamId\n              additionalProperties: false\n              properties:\n                poamId:\n                  type: integer\n                  format: int64\n                  description: \"[Required] Unique item identifier\"\n                  example: 45\n                  minimum: 1\n                  maximum: 300\n        required: true             \n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PoamResponseDelete\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  /api/systems/{systemId}/poams/{poamId}:\n    get:\n      tags:\n        - POAM\n      summary: \"Get POA\u0026M item by ID in a system\"\n      description: \"Returns system(s) containing POA\u0026M items for matching parameters.\"\n      operationId: getSystemPoamsByPoamId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/poamId'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PoamResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Milestones endpoint\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/poams/{poamId}/milestones:\n    get:\n      tags:\n        - Milestones\n      summary: \"Get milestones in one or many POA\u0026M items in a system\"\n      description: |-\n          Returns system containing milestones for matching parameters.\n      operationId: getSystemMilestonesByPoamId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/poamId'\n        - $ref: '#/components/parameters/scheduledCompletionDateStart'\n        - $ref: '#/components/parameters/scheduledCompletionDateEnd'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/MilestoneResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    post:\n      tags:\n        - Milestones\n      summary: \"Add milestones to one or many POA\u0026M items in a system\"\n      description: |-\n        Adds a milestone for given `systemId` and `poamId` path parameters\n\n        **Request Body Required Fields**\n        - `description`\n        - `scheduledCompletionDate`\n\n      operationId: addMilestoneBySystemIdAndPoamId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/poamId'\n      requestBody:\n        description: \"Update an existing milestone\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/MilestonesRequestPostBody\"\n        required: true\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/MilestoneResponsePost\"\n        '201':\n          description: \"Created\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/201\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '411':\n          description: \"Length Required\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/411\"        \n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    put:\n      tags:\n        - Milestones\n      summary: \"Update one or many POA\u0026M items in a system\"\n      description: |-\n        Updates a milestone for given `systemId` and `poamId` path parameters\n\n        **Request Body Required Fields**\n        - `milestoneId`\n        - `description`\n        - `scheduledCompletionDate`\n      operationId: updateMilestoneBySystemIdAndPoamId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/poamId'\n      requestBody:\n        description: \"Update an existing control by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/MilestonesRequestPutBody\"\n        required: true\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/MilestoneResponsePut\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    delete:\n      tags:\n        - Milestones\n      summary: \"Remove milestones in a system for one or many POA\u0026M items\"\n      description: |-\n        Remove the POA\u0026M matching `systemId` path parameter\u003cbr\u003e\n        **Notes**\u003cbr\u003e\n        To delete a milestone the record must be inactive by having the field isActive set to false (`isActive=false`).\n      operationId: deleteMilestone\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/poamId'\n      requestBody:\n        description: \"Delete the given Milestone Id\"\n        content:\n          application/json:\n            schema:\n              title: DeleteMilestone\n              type: object\n              required:\n                - milestoneId\n              additionalProperties: false\n              properties:\n                milestoneId:\n                  type: integer\n                  format: int64\n                  description: \"[Required] Unique item identifier\"\n                  example: 19\n                  minimum: 1\n                  maximum: 300\n        required: true \n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                #\"$ref\": \"#/components/schemas/MilestonesDelete\"\n                \"$ref\": \"#/components/schemas/Empty200Response\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  /api/systems/{systemId}/poams/{poamId}/milestones/{milestoneId}:\n    get:\n      tags:\n        - Milestones\n      summary: \"Get milestone by ID in POA\u0026M item in a system\"\n      description: |-\n          Returns systems containing milestones for matching parameters.\n      operationId: getSystemMilestonesByPoamIdAndMilestoneId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/poamId'\n        - $ref: '#/components/parameters/milestoneId'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/MilestoneResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Artifacts endpoint\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/artifacts:\n    get:\n      tags:\n        - Artifacts\n      summary: \"Get one or many artifacts in a system\"\n      description: |-\n          Returns selected artifacts matching parameters to include the file name containing the artifacts.\n      operationId: getSystemArtifacts\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/filename'\n        - $ref: '#/components/parameters/controlAcronyms'\n        - $ref: '#/components/parameters/ccis'\n        - $ref: '#/components/parameters/systemOnly'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ArtifactsResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n    \n    post:\n      tags:\n        - Artifacts\n      summary: \"Add one or many artifacts in a system\"\n      description: |-\n          \u003cstrong\u003eInformation\u003c/strong\u003e\u003cbr\u003e\n          The request body of a POST request through the Artifact Endpoint accepts a single binary file\n          with file extension \".zip\" only. This accepted .zip file should contain one or more files\n          corresponding to existing artifacts or new artifacts that will be created upon successful receipt.\n          Filename uniqueness throughout eMASS will be enforced by the API.\u003cbr\u003e\u003cbr\u003e\n          Upon successful receipt of a file, if a file within the .zip is matched via filename to an artifact\n          existing within the application, the file associated with the artifact will be updated. If no artifact\n          is matched via filename to the application, a new artifact will be created with the following\n          default values. Any values not specified below will be blank.\n          \u003cul\u003e\n            \u003cli\u003eisTemplate: false\u003c/li\u003e\n            \u003cli\u003etype: other\u003c/li\u003e\n            \u003cli\u003ecategory: evidence\u003c/li\u003e\n          \u003c/ul\u003e\n          To update values other than the file itself, please submit a PUT request.\u003cbr\u003e\n          \n          \u003cstrong\u003eZip file information\u003c/strong\u003e\u003cbr\u003e\n          Upload a zip file contain one or more files corresponding to existing artifacts\n          or new artifacts that will be created upon successful receipt.\u003cbr\u003e\u003cbr\u003e\n          \u003cstrong\u003eBusiness Rules\u003c/strong\u003e\u003cbr\u003e\n          Artifact cannot be saved if the file does not have the following file extensions:\n\n              .docx,.doc,.txt,.rtf,.xfdl,.xml,.mht,.mh,tml,.html,.htm,.pdf,.mdb,.accdb,.ppt,\n              .pptx,.xls,.xlsx,.csv,.log,.jpeg,.jpg,.tiff,.bmp,.tif,.png,.gif,.zip,.rar,.msg,\n              .vsd,.vsw,.vdx,.z{#},.ckl,.avi,.vsdx\n\n          Artifact version cannot be saved if an Artifact with the same file name already exist in the system.\n\n          Artifact cannot be saved if the file size exceeds 30MB.\n      operationId: addArtifactsBySystemId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"See `Information` posted above for additional instructions\"\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required: [Zipper]\n              properties:\n                isTemplate:\n                  type: boolean\n                  example: false \n                type:\n                  type: string\n                  enum:\n                    - Procedure\n                    - Diagram\n                    - Policy\n                    - Labor\n                    - Document\n                    - Image\n                    - Other\n                    - Scan Result\n                    - Auditor Report\n                  example: \"Other\"\n                category:\n                  type: string\n                  enum:\n                    - Implementation Guidance\n                    - Evidence\n                  example: Evidence\n                Zipper:\n                  type: string\n                  format: binary\n        required: true\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ArtifactsResponsePutPost\"\n        '201':\n          description: \"Created\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/201\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '411':\n          description: \"Length Required\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/411\"        \n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    put:\n      tags:\n        - Artifacts\n      summary: \"Update one or many artifacts in a system\"\n      description: |-\n        Updates an artifact for given `systemId` path parameter\u003cbr\u003e\u003cbr\u003e\n\n        **Request Body Required Fields**\n        - `filename`\n        - `isTemplate`\n        - `type`\n        - `category`\n\n      operationId: updateArtifactBySystemId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"See `information` above for additional instructions\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ArtifactsRequestPutBody\"\n        required: true\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ArtifactsResponsePutPost\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    delete:\n      tags:\n        - Artifacts\n      summary: \"Remove one or many artifacts in a system\"\n      description: |-\n        Remove the Artifact(s) matching `systemId` path parameter and request body artifact(s) file name\u003cbr\u003e\u003cbr\u003e\n        \u003cb\u003eNote:\u003c/b\u003e\n        Multiple files can be deleted by providing multiple file names at the CL (comma delimited)\n\n        Example: --files file1.txt, file2.txt\n      operationId: deleteArtifact\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"See notes above for additional information\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ArtifactsDelete\"\n        required: true\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ArtifactsResponseDel\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Artifacts Export endpoint\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/artifacts-export:\n    get:\n      tags:\n        - Artifacts Export\n      summary: \"Get the file of an artifact in a system\"\n      description: |-\n         \u003cstrong\u003eSample Responce\u003c/strong\u003e\u003cbr\u003e\n          Binary file associated with given filename.\u003cbr\u003e\n          If `compress` parameter is specified, zip archive of binary file associated with given filename.\n      operationId: getSystemArtifactsExport\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/exportfilename'\n        - $ref: '#/components/parameters/compress'\n      responses:\n        '200':\n          description: \"Successful retrieved Artifacts file\"\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"The requested file contents\"\n            application/octet-stream:\n              schema:\n                description: \"Artifacts file ready for download\"\n                type: string\n                format: binary\n                example: \"Binary file content for given filename\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # CAC endpoints\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/approval/cac:\n    get:\n      tags:\n       - CAC\n      summary: \"Get location of one or many controls in CAC\"\n      description: |-\n          Returns the location of a system's package in the Control Approval Chain (CAC) for matching `systemId` path parameter\n      operationId: getSystemCac\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/controlAcronyms'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/CacResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    post:\n      tags:\n        - CAC\n      summary: \"Submit control to second role of CAC\"\n      description: |-\n        Adds a Control Approval Chain (CAC) for given `systemId` path parameter\u003cbr\u003e\u003cbr\u003e\n        POST requests will only yield successful results if the control is currently sitting at the first\n        role of the CAC. If the control is not currently sitting at the first role, then an error will be\n        returned.\n      operationId: addSystemCac\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      requestBody:\n        description: \"Update an existing Artifact by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/CacRequestPostBody\"\n        required: true\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/CacResponsePost\"\n        '201':\n          description: \"Created\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/201\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '411':\n          description: \"Length Required\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/411\"        \n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # PAC endpoints\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/approval/pac:\n    get:\n      tags:\n       - PAC\n      summary: \"Get location of system package in PAC\"\n      description: |-\n          Returns the location of a system's package in the Package Approval Chain (PAC)\n          for matching `systemId` path parameter\n      operationId: getSystemPac\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PacResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n    post:\n      tags:\n        - PAC\n      summary: \"Submit system package for review\"\n      description: |-\n        Adds a Package Approval Chain (PAC) for given `systemId` path parameter\n      operationId: addSystemPac\n      parameters:\n        - $ref: \"#/components/parameters/systemId\"\n      requestBody:\n        description: \"Update an existing Artifact by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/PacRequestPostBody\"\n        required: true\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PacResponsePost\"\n        '201':\n          description: \"Created\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/201\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '411':\n          description: \"Length Required\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/411\"        \n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # CMMC Assessments endpoints\n  #----------------------------------------------------------------------------\n  /api/cmmc-assessments:\n    get:\n      tags:\n       - CMMC Assessments\n      summary: \"Get CMMC assessment information\"\n      description: |-\n          Get all CMMC assessment after the given date `sinceDate` parameter. It is available\n          to CMMC eMASS only.\n      operationId: getCmmcAssessments\n      parameters:\n        - $ref: '#/components/parameters/sinceDate'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/CmmcResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Static Code Scans endpoints\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/static-code-scans:\n    post:\n      tags:\n        - Static Code Scans\n      summary: \"Upload static code scans or Clear static code scans\"\n      description: |-\n        Upload or clear application scan findings into a system's `systemId` assets module.\n\n        **Note:** To clear an application's findings, use only the field `clearFindings` as\n        the Request body and set it to true.\n      operationId: addStaticCodeScansBySystemId\n      parameters:\n        - $ref: \"#/components/parameters/systemId\"\n      requestBody:\n        description: \"Update an existing Artifact by Id\"\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/StaticCodeRequestPostBody\"\n        required: true\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Success200Response\"\n        '201':\n          description: \"Created\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/201\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '411':\n          description: \"Length Required\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/411\"        \n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Workflow Definitions endpoints\n  #----------------------------------------------------------------------------\n  /api/workflow-definitions:\n    get:\n      tags:\n       - Workflow Definitions\n      summary: \"Get workflow definitions in a site\"\n      description: |-\n          View all workflow schemas available on the eMASS instance filtered by \n          status `includeInactive` and registration type `registrationType`.\n      operationId: getWorkflowDefinitions\n      parameters:\n        - $ref: '#/components/parameters/includeInactive'\n        - $ref: '#/components/parameters/registrationType'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/WorkflowDefinitionResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  #----------------------------------------------------------------------------\n  # Workflow Instances endpoints\n  #----------------------------------------------------------------------------\n  /api/systems/{systemId}/workflow-instances:\n    get:\n      tags:\n       - Workflow Instances\n      summary: \"Get workflow instances in a system\"\n      description: |-\n        View detailed information on all active and historical workflows for a system\n        `systemId` and filtered by provided parameters.\n      operationId: getSystemWorkflowInstances\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/includeComments'\n        - $ref: '#/components/parameters/pageIndex'\n        - $ref: '#/components/parameters/optionalSinceDate'\n        - $ref: '#/components/parameters/status'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/WorkflowInstancesResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n  /api/systems/{systemId}/workflow-instances/{workflowInstanceId}:\n    get:\n      tags:\n       - Workflow Instances\n      summary: \"Get workflow instance by ID in a system\"\n      description: |-\n        View detailed information on all active and historical workflows for a system\n        `systemId` and `workflowInstanceId`.\n      operationId: getSystemWorkflowInstancesByWorkflowInstanceId\n      parameters:\n        - $ref: '#/components/parameters/systemId'\n        - $ref: '#/components/parameters/workflowInstanceId'\n      responses:\n        '200':\n          description: \"Successful response\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/WorkflowInstancesResponseGet\"\n        '400':\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/400\"          \n        '401':\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/401\"\n        '403':\n          description: \"Forbidden\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/403\"                \n        '404':\n          description: \"Not Found\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/404\"\n        '405':\n          description: \"Method Not Allowed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/405\"\n        '490':\n          description: \"API Rule Failed\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/490\"\n        '500':\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/500\"\n\n#-------------------------------------------------------------------------------\n# C O M P O N E N T S\n#-------------------------------------------------------------------------------\ncomponents:\n  #----------------------------------------------------------------------------\n  # Parameters\n  #----------------------------------------------------------------------------\n  parameters:\n    #--------------------------------------------------------------------------\n    # Path\n    #-------------------------------------------------------------------------=\n    roleCategory:\n      name: roleCategory\n      in: path\n      description: \"**Role Category**: The system role category been queried\"\n      required: true\n      schema:\n        type: string\n        enum: [\"CAC\",\"PAC\",\"Other\"]\n        default: \"PAC\"\n    systemId:\n      name: systemId\n      in: path\n      description: \"**System Id**: The unique system record identifier.\"\n      required: true\n      schema:\n        type: integer\n        x-faker: random.number\n        example: 35\n    poamId:\n      name: poamId\n      in: path\n      description: \"**POA\u0026M Id**: The unique POA\u0026M record identifier.\"\n      required: true\n      schema:\n        type: integer\n        x-faker: random.number\n        example: 45\n    milestoneId:\n      name: milestoneId\n      in: path\n      description: \"**Milestone Id**: The unique milestone record identifier.\"\n      required: true\n      schema:\n        type: integer\n        x-faker: random.number\n        example: 77\n    workflowInstanceId:\n      name: workflowInstanceId\n      in: path\n      description: \"**Workflow Instance Id**: The unique milestone record identifier.\"\n      required: true\n      schema:\n        type: integer\n        x-faker: random.number\n        example: 123\n    #--------------------------------------------------------------------------\n    # Query - Required --------------------------------------------------------\n    role:\n      name: role\n      in: query\n      description: \"**Role**: Accepts single value from options available at base system-roles endpoint e.g., SCA.\"\n      required: true\n      schema:\n        type: string\n        enum: [\"AO\",\"Auditor\",\"Artifact Manager\",\"C\u0026A Team\",\"IAO\",\"ISSO\",\"PM/IAM\",\"SCA\",\"User Rep\", \"Validator\"]\n        default: \"IAO\"\n    exportfilename:\n      name: filename\n      in: query\n      required: true\n      description: \"**File Name**: The file name (to include file-extension).\"\n      schema:\n        type: string\n        example: ArtifactsExporFile.pdf\n    sinceDate:\n      name: sinceDate\n      in: query\n      required: true\n      description: \"**Date** CMMC date (Unix date format)\"\n      schema:\n        type: string\n        example: \"1638764040\"\n    #--------------------------------------------------------------------------\n    # Query - Optional --------------------------------------------------------\n    includePackage:\n      name: includePackage\n      in: query\n      description: \"**Include Package**:  Indicates if additional packages information is retrieved for queried system.\"\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true\n    registrationType:\n      name: registrationType\n      in: query\n      description: |\n        **Registration Type**: Filter record by selected registration type (single value or comma delimited values).\n\n        *Available values:* assessAndAuthorize, assessOnly, guest, regular,\n        functional, cloudServiceProvider, commonControlProvider \n      schema:\n        type: string\n        default: \"regular\"\n    ditprId:\n      name: ditprId\n      in: query\n      description: \"**DITPR ID**: Filter query by DoD Information Technology (IT) Portfolio Repository (DITPR).\"\n      schema:\n        type: string\n    coamsId:\n      name: coamsId\n      in: query\n      description: \"**COAMS ID**: Filter query by Cyber Operational Attributes Management System (COAMS).\"\n      schema:\n        type: string\n    policy:\n      name: policy\n      in: query\n      description: \"**System Policy**: Filter query by system policy. If no value is specified and more than one policy is available, the default return is the RMF policy information.\"\n      schema:\n        type: string\n        enum: [\"diacap\", \"rmf\", \"reporting\"]\n        default: \"rmf\"\n    acronyms:\n      name: acronyms\n      in: query\n      description: \"**Acronym**: The system acronym(s) being queried (single value or comma delimited values).\"\n      schema:\n        type: string\n        default: \"PM-6\"\n    includeDitprMetrics:\n      name: includeDitprMetrics\n      in: query\n      description: |-\n        **Include DITPR**: Indicates if DITPR metrics are retrieved. This query string parameter can only be used in conjunction with the following parameters:\u003cbr\u003e\n          \u003cul\u003e\n            \u003cli\u003eregistrationType\u003c/li\u003e\n            \u003cli\u003epolicy\u003c/li\u003e\n          \u003c/ul\u003e\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: false\n    includeDecommissioned:\n      name: includeDecommissioned\n      in: query\n      description: \"**Include Decommissioned Systems**: Indicates if decommissioned systems are retrieved. If no value is specified, the default returns true to include decommissioned systems.\"\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true\n    reportsForScorecard:\n      name: reportsForScorecard\n      in: query\n      description: \"**DoD Cyber Hygiene Scorecard**: Indicates if the system reports to the DoD Cyber Hygiene Scorecard.\"\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true        \n    filename:\n      name: filename\n      in: query\n      description: \"**File Name**: The file name (to include file-extension).\"\n      schema:\n        type: string\n        example: ArtifactsExporFile.pdf\n    compress:\n      name: compress\n      in: query\n      description: \"**Compress File**: Determines if returned file is compressed.\"\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true\n    controlAcronyms:\n      name: controlAcronyms\n      in: query\n      description: \"**System Acronym**: Filter query by given system acronym (single or comma separated).\"\n      schema:\n        type: string\n    ccis:\n      name: ccis\n      in: query\n      description: \"**CCI System**: Filter query by Control Correlation Identifiers (CCIs).\"\n      schema:\n        type: string\n    latestOnly:\n      name: latestOnly\n      in: query\n      description: \"**Latest Results Only**: Indicates that only the latest test resultes are retrieved (single or comma separated).\"\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true\n    scheduledCompletionDateStart:\n      name: scheduledCompletionDateStart\n      in: query\n      description: \"**Date Started**: Filter query by the scheduled completion start date (Unix date format).\"\n      schema:\n        type: string\n    scheduledCompletionDateEnd:\n      name: scheduledCompletionDateEnd\n      in: query\n      description: \"**Date Ended**: Filter query by the scheduled completion start date (Unix date format).\"\n      schema:\n        type: string\n    systemOnly:\n      name: systemOnly\n      in: query\n      description: \"**Systems Only**: Indicates that only system(s) information is retrieved.\"\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true\n    description:\n      name: description\n      in: query\n      description: \"**Description**: Milestone description information.\"\n      schema:\n        type: string\n    scheduledCompletionDate:\n      name: scheduledCompletionDate\n      in: query\n      description: \"**Completion Date**: Schedule completion date for milestone (Unix date format).\"\n      schema:\n        type: string\n    includeInactive:\n      name: includeInactive\n      in: query\n      description: \"**Include Inactive**: If no value is specified, the default returns false to not include outdated workflow definitions.\"\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true\n    includeComments:\n      name: includeComments\n      in: query\n      description: |\n        **Include Comments**: If no value is specified, the default returns true to not include\n        transition comments.\n\n        Note: Corresponds to the Comments textbox that is required at most workflow transitions.\n        Does not include other text input fields such as Terms / Conditions for Authorization.\n\n      schema:\n        type: boolean\n        enum: [true, false]\n        default: true\n    pageIndex:\n      name: pageIndex\n      in: query\n      description: \"**Page Index**: If no value is specified, the default returns true to not include transition comments.\"\n      schema:\n        type: integer\n        default: 0\n    optionalSinceDate:\n      name: sinceDate\n      in: query\n      description: |\n        **Date**: Filter on authorization/assessment date (Unix date format).\n\n        Note: Filters off the lastEditedDate field.\n\n        Note: The authorization/assessment decisions on completed workflows \n        can be edited for up to 30 days after the initial decision is made.\n      schema:\n        type: string\n        example: \"1638764040\"\n    status:\n      name: status\n      in: query\n      description: |\n        **Status**: Filter by status.\n\n        If no value is specified, the default returns all to include both active and inactive workflows.\n        \n        Note: Any workflows at a current stage of Complete or Cancelled are inactive.\n        Ongoing workflows currently at other stages are active.\n      schema:\n        type: string\n        enum: [\"active\", \"inactive\", \"all\"]\n        default: \"all\"\n\n  #----------------------------------------------------------------------------\n  # Schemas\n  #----------------------------------------------------------------------------\n  schemas:\n    #----------------------------------------------------------------------------\n    # Request Body for (POSTs \u0026 PUTs)\n    #----------------------------------------------------------------------------\n    RegisterUserRequestPostBody:\n      required: [user-uid]\n      type: object\n      properties:\n        user-uid:\n          type: string\n          example: \"MY.USERUUID.KEY\"\n    ControlsRequestPutBody:\n      title: Controls Query Body\n      type: object\n      required:\n        - acronym\n        - responsibleEntities\n        - controlDesignation\n        - estimatedCompletionDate\n        - implementationNarrative\n      additionalProperties: false\n      properties:\n        acronym:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"[Required] Required to match the NIST SP 800-53 Revision 4.\"\n          example: \"AC-3\"\n        responsibleEntities:\n          type: string\n          description: \"[Required] Include written description of Responsible Entities that are responsible for the Security Control. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Unknown\"\n        implementationStatus:\n          type: string\n          description: \"[Optional] Implementation Status of the Security Control for the information system.\"\n          example: \"Planned\"\n          enum: [\"Planned\", \"Implemented\", \"Inherited\", \"Not Applicable\", \"Manually Inherited\"]            \n        commonControlProvider:\n          type: string\n          description: \"[Conditional] Indicate the type of Common Control Provider for an “Inherited” Security Control.\"\n          example: \"DoD\"\n          enum: [\"DoD\", \"Component\", \"Enclave\"]\n        naJustification:\n          type: string\n          description: \"[Conditional] Provide justification for Security Controls deemed Not Applicable to the system.\"\n          example: \"System EOL within 120 days\"\n        controlDesignation:\n          type: string\n          description: \"[Required] Control designations\"\n          example: \"Common\"\n          enum: [\"Common\", \"System-Specific\", \"Hybrid\"]\n        testMethod:\n          type: string\n          description: \"[Optional] Identifies the assessment method / combination that will determine if the security requirements are implemented correctly.\"\n          example: \"Test\"\n          enum: ['Test', 'Interview', 'Examine', 'Test, Interview', 'Test, Examine', 'Interview, Examine','Test, Interview, Examine']        \n        estimatedCompletionDate:\n          type: integer\n          description: \"[Required] Field is required for Implementation Plan.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        implementationNarrative:\n          type: string\n          description: \"[Required] Includes security control comments. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Test Imp. Narrative\"\n        slcmCriticality:\n          type: string\n          description: \"[Conditional] Criticality of Security Control regarding SLCM. Character Limit = 2,000.\"\n          x-faker: random.word\n          example: \"Test Criticality\"\n        slcmFrequency:\n          type: string\n          description: \"[Conditional] SLCM frequency\"\n          example: \"Annually\"\n          enum: [\"Constantly\", \"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Semi-Annually\", \"Annually\", \"Every Two Years\", \"Every Three Years\", \"Undetermined\"]\n        slcmMethod:\n          type: string\n          description: \"[Conditional] SLCM method utilized\"\n          example: \"Automated\"\n          enum: [\"Automated\", \"Semi-Automated\", \"Manual\", \"Undetermined\"]\n        slcmReporting:\n          type: string\n          description: \"[Conditional] Method for reporting Security Control for SLCM. Character Limit = 2,000.\"\n          x-faker: random.word\n          example: \"Test Reporting\"\n        slcmTracking:\n          type: string\n          description: \"[Conditional] How Non-Compliant Security Controls will be tracked for SLCM. Character Limit = 2,000.\"\n          x-faker: random.word\n          example: \"Test Tracking\"\n        slcmComments:\n          type: string\n          description: \"[Conditional] Additional comments for Security Control regarding SLCM. Character Limit = 4,000.\"\n          x-faker: random.word\n          example: \"Test SLCM Comments\"\n        severity:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        vulnerabiltySummary:\n          type: string\n          description: \"[Optional] Include vulnerability summary. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Test Vulnerability Summary\"\n        recommendations:\n          type: string\n          description: \"[Optional] Include recommendations. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Test Recommendations\"\n        relevanceOfThreat:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        likelihood:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        impact:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        impactDescription:\n          type: string\n          description: \"[Optional] Include description of Security Control's impact.\"\n          x-faker: random.words\n          example: \"Impact text\"\n        residualRiskLevel:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n    TestResultsRequestPostBody:\n      title: Test Results Query Body\n      type: object\n      required:\n        - cci\n        - testedBy\n        - testDate\n        - description\n        - complianceStatus\n      additionalProperties: false\n      properties:\n        cci:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"[Required] CCI associated with test result.\"\n          example: \"000001,000002\"\n        testedBy:\n          type: string\n          description: \"[Required] Last Name, First Name. 100 Characters.\"\n          x-faker: name.findName\n          example: \"Smith, Joe\"\n        testDate:\n          type: integer\n          format: int64\n          description: \"[Required] Unix time format.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        description:\n          type: string\n          description: \"[Required] Include description of test result. 4000 Characters.\"\n          x-faker: random.words\n          example: \"Test result description\"\n        complianceStatus:\n          type: string\n          description: \"[Required] Test result compliance status\"\n          example: \"Compliant\"\n          enum: [\"Compliant\", \"Non-Compliant\", \"Not Applicable\"]\n    PoamRequestPostBody:\n      title: POAM POST Query Body\n      type: object\n      required:\n        - status\n        - vulnerabilityDescription\n        - sourceIdentVuln\n        - pocOrganization\n        - resources\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/PoamRequiredPost\"\n    PoamRequestPutBody:\n      title: POAM PUT Query Body\n      type: object\n      required:\n        - poamId\n        - displayPoamId\n        - status\n        - vulnerabilityDescription\n        - sourceIdentVuln\n        - pocOrganization\n        - reviewStatus\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/PoamRequiredPut\"\n    MilestonesRequestPostBody:\n      title: Milestones POST Query Body\n      type: object\n      required:\n        - poamId\n        - description\n        - scheduledCompletionDate      \n      additionalProperties: false\n      properties:\n        poamId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique POA\u0026M item identifier.\"\n          example: 45\n          minimum: 1\n          maximum: 300\n        description:\n          type: string\n          description: \"[Required] Provide a description of the milestone.\"\n          x-faker: random.words\n          example: \"Description text\"\n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Required] Unix date format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000    \n    MilestonesRequestPutBody:\n      title: Milestones PUT Query Body\n      type: object\n      required:\n        - milestoneId\n        - description\n        - scheduledCompletionDate        \n      additionalProperties: false\n      properties:\n        milestoneId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique milestone identifier.\"\n          example: 19\n          minimum: 1\n          maximum: 300\n        description:\n          type: string\n          description: \"[Required] Provide a description of the milestone.\"\n          x-faker: random.words\n          example: \"Description text\"\n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Required] Unix date format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000    \n    ArtifactsRequestPutBody:\n      title: Artifacts PUT Query Body\n      type: object\n      required:\n        - filename\n        - isTemplate\n        - type\n        - category\n      additionalProperties: false\n      properties:\n        # Required fields\n        filename:\n          type: string\n          description: \"[Required] File name should match exactly one file within the provided zip file. 1000 Characters.\"\n          x-faker: system.commonFileName\n          example: \"AutorizationGuidance.pdf\"\n        isTemplate:\n          type: boolean\n          description: \"[Required] Indicates it is an artifact template.\"\n          x-faker: random.boolean\n          example: false\n        type:\n          type: string\n          description: \"[Required] Artifact type options\"\n          example: \"Policy\"\n          enum: [\"Procedure\", \"Diagram\", \"Policy\", \"Labor\", \"Document\", \"Image\", \"Other\", \"Scan Result\"]            \n        category:\n          type: string\n          description: \"[Required] Artifact category options\"\n          example: \"Change Request\"\n          enum: [\"Implementation Guidance\", \"Evidence\"]\n        # Optional fields\n        description:\n          type: string\n          description: \"[Optional] Artifact description. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Artifact description text\"        \n        refPageNumber:\n          type: string\n          description: \"[Optional] Artifact reference page number. 50 Characters.\"\n          x-faker: random.words\n          example: \"Reference page number\"\n        ccis:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"[Required] CCI associated with test result.\"\n          example: \"000001,000002\"                \n        controls:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"[Optional] Control acronym associated with the artifact. NIST SP 800-53 Revision 4 defined.\"\n          example: \"AC-8,AC-2(4)\"     \n        artifactExpirationDate:\n          type: integer\n          format: int64\n          description: \"[Optional] Date Artifact expires and requires review. In Unix Date format.\"\n          example: 1549036928\n          minimum: 1500000000\n          maximum: 1900000000\n        lastReviewedDate:\n          type: integer\n          format: int64\n          description: \"[Optional]] Date Artifact was last reviewed.. Unix time format.\"\n          example: 1549036928\n          minimum: 1500000000\n          maximum: 1900000000\n    CacRequestPostBody:\n      title: CAC POST Query Body\n      type: object\n      additionalProperties: false\n      properties:\n        controlAcronym:\n          type: string\n          description: \"[Required] System acronym name.\"\n          x-faker: finance.bic\n          example: \"AC-3\"\n        comments:\n          type: string\n          description: \"[Conditional] Control Approval Chain comments - 2000 Characters.\"\n          x-faker: random.words\n          example: \"Control Approval Chain comments text.\"\n    PacRequestPostBody:\n      title: PAC POST Query Body\n      type: object\n      properties:\n        workflow:\n          type: string\n          description: \"[Required] The PAC workflow\"\n          example: \"Assess and Authorize\"\n          enum: [\"Assess and Authorize\", \"Assess Only\", \"Security Plan Approval\"]\n        name:\n          type: string\n          description: \"[Required] Package name. 100 Characters.\"\n          x-faker: random.word\n          example: \"Package name text\"\n        comments:\n          type: string\n          description: \"[Required] Character Limit = 4,000.\"\n          x-faker: random.words\n          example: \"Comments text.\"      \n    StaticCodeRequestPostBody:\n      title: Static Code PUT Query Body\n      type: object\n      additionalProperties: false\n      $ref: \"#/components/schemas/StaticCodeRequiredPost\"\n \n    #----------------------------------------------------------------------------\n    # Request Body supporting fields for (POSTs \u0026 PUTs)\n    #----------------------------------------------------------------------------\n    PoamRequiredPost:\n      title: POAM POST Required Fields\n      type: object\n      additionalProperties: false\n      properties:\n        # Required fields\n        status:\n          type: string\n          description: \"[Required] Values include the following: (Ongoing,Risk Accepted,Completed,Not Applicable\"\n          example: \"Completed\"\n          enum:\n            - \"Ongoing\"\n            - \"Risk Accepted\"\n            - \"Completed\"\n            - \"Not Applicable\"\n        vulnerabilityDescription:\n          type: string\n          description: \"[Required] Provide a description of the POA\u0026M Item. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Description text\"\n        sourceIdentVuln:\n          type: string\n          description: \"[Required] Include Source Identifying Vulnerability text. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Source Indentifying Vulnerability text\"\n        pocOrganization:\n          type: string\n          description: \"[Required] Organization/Office represented. 100 Characters.\"\n          x-faker: company.companyName\n          example: \"Army\"\n        resources:\n          type: string\n          description: \"[Required] List of resources used. 250 Characters.\"\n          x-faker: random.words\n          example: \"Resource text.\"        \n        # Optional/Required fields (REQ based on business rules)\n        pocFirstName:\n          type: string\n          description: \"[Required] First name of POC. 100 Characters.\"\n          x-faker: name.firstName\n          example: \"John\"\n        pocLastName:\n          type: string\n          description: \"[Required] Last name of POC. 100 Characters.\"\n          x-faker: name.lastName\n          example: \"Smith\"\n        pocEmail:\n          type: string\n          description: \"[Required] Email address of POC. 100 Characters.\"\n          x-faker: internet.email\n          example: \"smith@ah.com\"\n        pocPhoneNumber:\n          type: string\n          description: \"[Required] Phone number of POC (area code) ***-**** format. 100 Characters.\"\n          x-faker: phone.phoneNumber.email\n          example: \"555-555-5555\"\n        # Optional Fields\n        externalUid:\n          type: string\n          description: \"[Optional] Unique identifier external to the eMASS application for use with associating POA\u0026Ms. 100 Characters.\"\n          x-faker: random.uuid\n          example: \"d6d98b88-c866-4496-9bd4-de7ba48d0f52\"\n        controlAcronym:\n          type: string\n          description: \"[Optional] Control acronym associated with the POA\u0026M Item. NIST SP 800-53 Revision 4 defined.\"\n          x-faker: finance.bic\n          example: “AC-3”\n        cci:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"[Optional] CCI associated with POA\u0026M.\"\n          example: \"000001,000002\"        \n        securityChecks:\n          type: string\n          description: \"[Optional] Security Checks that are associated with the POA\u0026M.\"\n          x-faker: random.words\n          example: \"SV-25123r1_rule,2016-A-0279\"\n        rawSeverity:\n          type: string\n          description: \"[Optional] Values include the following options (I,II,III)\"\n          example: \"I\"\n          enum:\n            - \"I\"\n            - \"II\"\n            - \"III\"\n        relevanceOfThreat:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum:\n            - \"Very Low\"\n            - \"Low\"\n            - \"Moderate\"\n            - \"High\"\n            - \"Very High\"\n        likelihood:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum:\n            - \"Very Low\"\n            - \"Low\"\n            - \"Moderate\"\n            - \"High\"\n            - \"Very High\"\n        impact:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum:\n            - \"Very Low\"\n            - \"Low\"\n            - \"Moderate\"\n            - \"High\"\n            - \"Very High\"\n        impactDescription:\n          type: string\n          description: \"[Optional] Include description of Security Control’s impact.\"\n          x-faker: random.words\n          example: \"Impact text\"\n        residualRiskLevel:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum:\n            - \"Very Low\"\n            - \"Low\"\n            - \"Moderate\"\n            - \"High\"\n            - \"Very High\"\n        recommendations:\n          type: string\n          description: \"[Optional] Include recommendations. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Recommendations text\"        \n        mitigation:\n          type: string\n          description: \"[Optional] Include mitigation explanation. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Mitigation text\"\n        # Conditional Fields\n        severity:\n          type: string\n          description: \"[Conditional] Required for approved items. Values include the following options: (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum:\n            - \"Very Low\"\n            - \"Low\"\n            - \"Moderate\"\n            - \"High\"\n            - \"Very High\"        \n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Conditional] Required for ongoing and completed POA\u0026M items. Unix time format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000\n        comments:\n          type: string\n          description: \"[Conditional] Field is required for completed and risk accepted POA\u0026M items. 2000 Characters\"\n          x-faker: random.words\n          example: \"Comments text.\"\n        completionDate:\n          type: integer\n          format: int64\n          description: \"[Conditional] Field is required for completed POA\u0026M items. Unix time format.\"\n          example: 1505916276\n          minimum: 1500000000\n          maximum: 1900000000\n        milestones:\n            type: array\n            minimum: 1\n            maxItems: 3\n            items:\n              $ref: \"#/components/schemas/MilestonesRequiredPost\"\n    PoamRequiredPut:\n      title: POAM PUT Required Fields\n      type: object\n      additionalProperties: false\n      properties:\n        # Required fields\n        poamId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique item identifier\"\n          example: 45\n          minimum: 1\n          maximum: 300\n        displayPoamId:\n          type: integer\n          format: int64\n          description: \"[Required] Globally unique identifier for individual POA\u0026M Items, seen on the front-end as “ID”.\"\n          example: 100000010\n          minimum: 100000000\n          maximum: 101003239          \n        status:\n          type: string\n          description: \"[Required] The POA\u0026M status\"\n          example: \"Completed\"\n          enum: [\"Ongoing\",\"Risk Accepted\",\"Completed\",\"Not Applicable\"]\n        vulnerabilityDescription:\n          type: string\n          description: \"[Required] Provide a description of the POA\u0026M Item. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Description text\"\n        sourceIdentVuln:\n          type: string\n          description: \"[Required] Include Source Identifying Vulnerability text. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Source Indentifying Vulnerability text\"\n        pocOrganization:\n          type: string\n          description: \"[Required] Organization/Office represented. 100 Characters.\"\n          x-faker: company.companyName\n          example: \"Army\"          \n        resources:\n          type: string\n          description: \"[Required] List of resources used. 250 Characters.\"\n          x-faker: random.words\n          example: \"Resource text.\"\n        # Optional Fields\n        externalUid:\n          type: string\n          description: \"[Optional] Unique identifier external to the eMASS application for use with associating POA\u0026Ms. 100 Characters.\"\n          x-faker: random.uuid\n          example: \"d6d98b88-c866-4496-9bd4-de7ba48d0f52\"\n        controlAcronym:\n          type: string\n          description: \"[Optional] Control acronym associated with the POA\u0026M Item. NIST SP 800-53 Revision 4 defined.\"\n          x-faker: finance.bic\n          example: “AC-3”\n        cci:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"CCI associated with POA\u0026M.\"\n          example: \"000001,000002\"        \n        securityChecks:\n          type: string\n          description: \"[Optional] Security Checks that are associated with the POA\u0026M.\"\n          x-faker: random.words\n          example: \"SV-25123r1_rule,2016-A-0279\"\n        rawSeverity:\n          type: string\n          description: \"[Optional] Values include the following options (I,II,III)\"\n          example: \"I\"\n          enum: [\"I\",\"II\",\"III\"]\n        relevanceOfThreat:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\",\"Low\", \"Moderate\",\"High\",\"Very High\"]\n        likelihood:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\",\"Low\", \"Moderate\",\"High\",\"Very High\"]\n        impact:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\",\"Low\", \"Moderate\",\"High\",\"Very High\"]\n        impactDescription:\n          type: string\n          description: \"[Optional] Include description of Security Control’s impact.\"\n          x-faker: random.words\n          example: \"Impact text\"\n        residualRiskLevel:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\",\"Low\", \"Moderate\",\"High\",\"Very High\"]\n        recommendations:\n          type: string\n          description: \"[Optional] Include recommendations. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Recommendations text\"        \n        mitigation:\n          type: string\n          description: \"[Optional] Include mitigation explanation. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Mitigation text\"\n        # Conditional Fields\n        pocFirstName:\n          type: string\n          description: \"[Conditional] First name of POC. 100 Characters.\"\n          x-faker: name.firstName\n          example: \"John\"\n        pocLastName:\n          type: string\n          description: \"[Conditional] Last name of POC. 100 Characters.\"\n          x-faker: name.lastName\n          example: \"Smith\"\n        pocEmail:\n          type: string\n          description: \"[Conditional] Email address of POC. 100 Characters.\"\n          x-faker: internet.email\n          example: \"smith@ah.com\"\n        pocPhoneNumber:\n          type: string\n          description: \"[Conditional] Phone number of POC (area code) ***-**** format. 100 Characters.\"\n          x-faker: phone.phoneNumber.email\n          example: \"555-555-5555\"\n        severity:\n          type: string\n          description: \"[Conditional] Required for approved items. Values include the following options: (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\",\"Low\", \"Moderate\",\"High\",\"Very High\"]\n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Conditional] Required for ongoing and completed POA\u0026M items. Unix time format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000\n        completionDate:\n          type: integer\n          format: int64\n          description: \"[Conditional] Field is required for completed POA\u0026M items. Unix time format.\"\n          example: 1505916276\n          minimum: 1500000000\n          maximum: 1900000000\n        comments:\n          type: string\n          description: \"[Conditional] Field is required for completed and risk accepted POA\u0026M items. 2000 Characters\"\n          x-faker: random.words\n          example: \"Comments text.\"\n        isActive:\n          type: boolean\n          description: \"[Conditional] Optionally used in PUT to delete milestones when updating a POA\u0026M.\"\n          x-faker: random.boolean\n          example: true   \n        milestones:\n            type: array\n            minimum: 1\n            maxItems: 3\n            items:\n              $ref: \"#/components/schemas/MilestonesRequiredPut\"\n    MilestonesRequiredPost:\n      title: Milestones\n      type: object\n      required:\n        - description\n        - scheduledCompletionDate  \n      additionalProperties: false\n      properties:\n        description:\n          type: string\n          description: \"[Required] Include milestone description.\"\n          x-faker: random.words\n          example: \"Description text\"\n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Required] Required for ongoing and completed POA\u0026M items. Unix time format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000\n    MilestonesRequiredPut:\n      title: Milestones\n      type: object\n      required:\n        - milestoneId\n        - description\n        - scheduledCompletionDate  \n      additionalProperties: false\n      properties:\n        milestoneId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique item identifier\"\n          example: 19\n          minimum: 1\n          maximum: 300\n        description:\n          type: string\n          description: \"[Required] Include milestone description.\"\n          x-faker: random.words\n          example: \"Description text\"\n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Required] Shecdule completion date. Unix time format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000\n    StaticCodeRequiredPost:\n      title: StaticCode\n      type: object\n      additionalProperties: false\n      properties:\n        application:\n          type: object\n          properties:\n            applicationName:\n              type: string\n              description: \"[Required] Name of the software application that was assessed.\"\n              x-faker: company.companyName\n              example: 'Artemis'\n            version:\n              type: string\n              description: \"[Required] The version of the application.\"\n              x-faker: system.semver\n              example: 'Version 5.0'\n        applicationFindings:\n          type: array\n          minimum: 1\n          maxItems: 3\n          items:\n            $ref: \"#/components/schemas/StaticCodeApplication\"\n    StaticCodeApplication:\n      title: Static Code Application POST object\"\n      type: object\n      additionalProperties: false\n      properties:\n        rawSeverity:\n          type: string\n          description: \"[Optional] Scan vulnerability ratting\"\n          example: \"Moderate\"\n          enum: [Low, Medium, Moderate, High, Critical]\n        codeCheckName:\n          type: string\n          description: \"[Required] Name of the software vulnerability or weakness.\"\n          example: \"Hidden Field\"\n          enum: ['Hidden Field', 'Redundant Check', 'Invalid Field', 'Vulnerable Field']\n        count:\n          type: integer\n          format: int64\n          description: \"[Optional] Number of instances observed for a specified finding.\"\n          example: 14\n          minimum: 1\n          maximum: 50\n        scanDate:\n          type: integer\n          format: int64\n          description: \"[Required] The date of the scan. Unix date format.\"\n          example: 1625070000\n          minimum: 1500000000\n          maximum: 1900000000\n        cweId:\n          type: string\n          description: '[Required] The Common Weakness Enumerator (CWE) identifier.'\n          x-faker: number.number\n          example: '155'\n        clearFindings:\n          type: boolean\n          description: \"[Optional] When used by itself, can clear out all application findings for a single application/version pairing.\"\n          x-faker: random.boolean\n          example: false          \n    #----------------------------------------------------------------------------\n    # 200 Responses\n    #----------------------------------------------------------------------------\n    Test:\n      title: \"api GET response schema\"    \n      type: object\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: object\n          additionalProperties: false\n          properties:\n            success:\n              type: boolean\n              x-faker: random.boolean\n              example: true\n    Register:\n      title: \"api-key POST response schema\"\n      type: object\n      properties:\n        meta:\n           \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: object\n          additionalProperties: false\n          properties:\n            apikey:\n              type: string\n              x-faker: random.uuid\n              example: f32516cc-57d3-43f5-9e16-8f86780a4cce\n    SystemResponse:\n      title: \"Systems GET response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/Systems\"\n    SystemRolesResponse:\n      title: \"Roles GET response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              roleCategory:\n                type: string\n                x-faker: random.word\n                default: \"PAC\"\n              role:\n                type: string\n                x-faker: random.words\n                default: \"PM/IAM\"\n    SystemRolesCategoryResponse:\n      title: \"Roles by category GET response schema\"    \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 4\n          items:\n            $ref: \"#/components/schemas/RoleCategory\"\n    ControlsResponseGet:\n      title: \"Controls GET response schema\"      \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 5\n          items:\n            $ref: '#/components/schemas/ControlsGet'\n    ControlsResponsePut:\n      title: \"Controls PUT response schema\"      \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/ControlsPut\"\n    TestResultsResponseGet:\n      title: \"Test Results GET response schema\"      \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 5\n          items:\n            $ref: \"#/components/schemas/TestResultsGet\"\n    TestResultsResponsePost:\n      title: \"Test Results POST response schema\"      \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/TestResultsPost\"\n    PoamResponseGet:\n      title: \"POAMS GET response schema\"      \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 5\n          items:\n            $ref: \"#/components/schemas/PoamGet\"\n    PoamResponsePost:\n      title: \"POAMS POST response schema\"        \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/PoamPost\"\n    PoamResponsePut:\n      title: \"POAMS PUT response schema\"        \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/PoamPut\"\n    PoamResponseDelete:\n      title: \"POAMS DELETE response schema\"      \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/PoamDelete\"                     \n    MilestoneResponseGet:\n      title: \"Milestones GET response schema\"      \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 10\n          items:\n            $ref: \"#/components/schemas/MilestonesGet\"\n    MilestoneResponsePost:\n      title: \"Milestones POST response schema\"        \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/MilestonesPost\"\n    MilestoneResponsePut:\n      title: \"Milestones PUT response schema\"        \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/MilestonesPut\"\n    ArtifactsResponseGet:\n      title: \"Artifacts GET response schema\"        \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 10\n          type: array\n          items:\n            $ref: '#/components/schemas/ArtifactsGet'\n    ArtifactsResponseDel:\n      title: \"Artifacts DELETE response schema\"        \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 1\n          minItems: 1\n          type: array\n          items:\n            additionalProperties: false\n            properties:\n              filename:\n                type: string\n                description: \"[Required] File name should match exactly one file within the provided zip file. 1000 Characters.\"\n                x-faker: system.commonFileName\n                example: \"AutorizationGuidance.pdf\"\n              success:\n                type: boolean\n                x-faker: random.boolean\n                example: true\n              systemId:\n                type: integer\n                format: int64\n                example: 35\n                minimum: 1\n                maximum: 3000\n    ArtifactsResponsePutPost:\n      title: \"Artifacts POST and PUT response schema\"    \n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 1\n          minItems: 1\n          type: array\n          items:\n            type: object\n            additionalProperties: false\n            properties:\n              filename:\n                type: string\n                description: \"[Required] File name should match exactly one file within the provided zip file. 1000 Characters.\"\n                x-faker: system.commonFileName\n                example: \"AutorizationGuidance.pdf\"\n              success:\n                type: boolean\n                x-faker: random.boolean\n                example: true\n              systemId:\n                type: integer\n                format: int64\n                example: 35\n                minimum: 1\n                maximum: 3000\n    CacResponseGet:\n      title: \"CAC GET response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 10\n          type: array\n          items:\n            $ref: '#/components/schemas/CacGet'\n    CacResponsePost:\n      title: \"CAC POST response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 1\n          minItems: 1\n          type: array\n          items:\n            type: object\n            additionalProperties: false\n            properties:\n              controlAcronym:\n                type: string\n                pattern: '^[A-Z0-9-]{3,6}'\n                description: \"[Required] System acronym name.\"\n                example: \"AC-3\"\n              success:\n                type: boolean\n                x-faker: random.boolean\n                example: true\n              systemId:\n                type: integer\n                format: int64\n                example: 35\n                minimum: 1\n                maximum: 3000\n    PacResponseGet:\n      title: \"PAC GET response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 10\n          type: array\n          items:\n            $ref: '#/components/schemas/PacGet'\n    PacResponsePost:\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 1\n          minItems: 1\n          type: array\n          items:\n            $ref: '#/components/schemas/PacPost'\n    CmmcResponseGet:\n      title: \"CMMC GET response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 2\n          type: array\n          items:\n            $ref: '#/components/schemas/CmmcGet'    \n    WorkflowDefinitionResponseGet:\n      title: \"Workflow Definition GET response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 1\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkflowDefinitionGet'       \n    WorkflowInstancesResponseGet:\n      title: \"Workflow Instances GET response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 2\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkflowInstancesGet'\n    Success200Response:\n      title: \"Default success response schema\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/200\"\n        data:\n          maxItems: 1\n          minItems: 1\n          type: array\n          items:\n            type: object\n            additionalProperties: false\n            properties:\n\n              success:\n                type: boolean\n                x-faker: random.boolean\n                example: true           \n    Empty200Response:\n      type: object\n\n    #----------------------------------------------------------------------------\n    # Supporting 200 Responses - Endpoint response - returned values\n    #----------------------------------------------------------------------------\n    # System Response for both cases: \n    #    (includeDitprMetrics=true) or (includePackage=true, includeDecommissioned=false)\n    Systems:\n      title: \"Systems - return query from the server for the GET call\"\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Read-only] Unique system record identifier.\"\n          example: 35\n          minimum: 1\n          maximum: 3000\n        policy:\n          type: string\n          description: \"[Read-only] RMF/DIACAP Policy identifier for the system record.\"\n          example: RMF\n          enum: [\"RMF\", \"DIACAP\"]\n        registrationType:\n          type: string\n          description: \"[Read-Only] Registration types parameters (assessAndAuthorize, assessOnly, guest, regular, functional, cloudServiceProvider.)\"\n          example: \"Assess and Authorize\"\n          enum: [\"Assess and Authorize\", \"Assess Only\", \"Guest\", \"Regular\", \"Functional\", \"Cloud Service Provider\", \"Common Control Provider\"]\n        name:\n          type: string\n          description: \"[Read-only] Name of the system record.\"\n          x-faker: company.companyName\n          example: \"System XYZ\"\n        acronym:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"[Read-only] Acronym of the system record.\"\n          example: \"PM-6\"\n        description:\n          type: string\n          description: \"[Read-only] Description of the system record.\"\n          x-faker: random.words\n          example: \"This is a test system for the eMASS API documentation\"\n        systemOwner:\n          type: string\n          description: \"[Read-only] Owning organization of the system record.\"\n          x-faker: company.companyName\n          example: \"DISA\"\n        organizationName:\n          type: string\n          description: \"[Read-only] Name of the top-level component that owns the system (e.g. Navy, Air Force, Army, etc..).\"\n          example: \"Defense Information Systems Agency\"\n          enum: [\"Army\", \"Navy\", \"Air Force\", \"Marines\", \"DoD\", \"Defense Information Systems Agency\"]\n        secondaryOrganization:\n          type: string\n          description: \"[Read-only] Secondary organization that owns the system record (i.e. Sub-Organization-level.\"\n          x-faker: company.companyName\n          example: \"ID31\"        \n        versionReleaseNo:\n          type: string\n          description: \"[Read-only] Version/Release Number of system record.\"\n          x-faker: system.semver\n          example: \"V1\"        \n        systemType:\n          type: string\n          description: \"[Read-only] Type of the system record. RMF values include the following options (IS Major Application, IS Enclave, Platform IT System). DIACAP values include the following options (Platform IT, Interconnection, AIS Application)\"\n          example: \"IS Major Application\"\n          enum: [\"IS Major Application\", \"IS Enclave\", \"Platform IT\", \"Platform IT System\", \"Platform IT Interconnection\", \"AIS Application\", \"Outsourced IT-Based Process (DoD-controlled)\", \"Enclave\", \"Outsourced IT-Based Process (service provider shared)\"]\n        isNSS:\n          type: boolean\n          description: \"[Read-only] Is the system record a National Security System?\"\n          x-faker: random.boolean\n          example: true\n        isPublicFacing:\n          type: boolean\n          description: \"[Read-only] Does the system record have a public facing component/presence.\"\n          x-faker: random.boolean\n          example: true\n        coamsId:\n          type: integer\n          format: int64\n          description: \"[Read-only] Corresponding Cyber Operational Attributes Management System (COAMS) identifier for the system record.\"\n          example: 93054\n          minimum: 40000\n          maximum: 98536\n        isTypeAuthorization:\n          type: boolean\n          description: \"[Read-only] Identifies if system is a Type Authorization.\"\n          x-faker: random.boolean\n          example: true\n        ditprId:\n          type: string\n          pattern: '^\\d{5}'\n          description: \"[Read-only] DITPR ID of the system record.\"\n          example: \"30498\"\n        authorizationStatus:\n          type: string\n          description: \"[Read-only] Authorization Status of the system record.\"\n          example: \"Authority to Operate (ATO)\"\n          enum: [\"Authority to Operate (ATO)\", \"Authority to Operate with Conditions (ATO) w/Conditions)\", \n                 \"Interim Authority to Test (IATT)\", \"Interim Authority to Operate (IATO)\",\n                 \"Denied Authority to Operate (DATO)\", \"Not Yet Authorized\", \"Unaccredited\", \"Decommissioned\"]\n        authorizationDate:\n          type: integer\n          description: \"[Read-only] Authorization Date of the system record.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        authorizationTerminationDate:\n          type: integer\n          description: \"[Read-only] Authorization Termination Date of the system record.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        authorizationLength:\n          type: integer\n          description: \"[Read-only] Length of system’s Authorization. Calculated based off of Authorization Date \u0026 Authorization Termination Date.\"\n          example: 365\n          minimum: 30\n          maximum: 1825\n        termsForAuth:\n          type: string\n          description: \"[Read-only] Terms/Conditions for receiving and maintaining the system’s Authorization. Assigned by the Authorizing Official.\"\n          x-faker: company.bs\n          example: \"Terms/Conditions to maintain a valid ATO\"\n        securityPlanApprovalStatus:\n          type: string\n          description: \"[Read-only] Status of the approval of the system’s RMF Security Plan. Values include the following options (Approved, Denied, Not Yet Approved).\"\n          example: \"Approved\"\n          enum: [\"Approved\", \"Not Yet Approved\", \"Denied\"]\n        securityPlanApprovalDate:\n          type: integer\n          description: \"[Read-only] Approval date of the system’s RMF Security Plan.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        missionCriticality:\n          type: string\n          description: \"[Read-only] Mission Criticality of the system record. Values include the following options (Mission Critical (MC), Mission Essential (ME), Mission Support (MS).\"\n          example: \"Mission Support (MS)\"\n          enum: [\"Mission Critical (MC)\", \"Mission Essential (ME)\", \"Mission Support (MS)\"]\n        geographicalAssociation:\n          type: string\n          description: \"[Read-only] Geographical Association of the system record (VA only).\"\n          example: \"VA Operated IS\"\n          enum: [\"VA Operated IS\", \"non-VA Operated IS\"]\n        systemOwnership:\n          type: string\n          description: \"[Read-only] Ownership of the system record (VA only).\"\n          example: \"Region 1\"\n          enum: [\"Region 1\", \"Region 2\", \"Region 3\", \"Region 4\"]\n        governingMissionArea:\n          type: string\n          description: \"[Read-only] Governing Mission Area of the system record.\"\n          example: \"DoD portion of the Intelligence MA (DIMA)\"\n          enum: [\"Business MA (BMA)\", \"DoD portion of the Intelligence MA (DIMA)\", \"Enterprise Information Environment MA (EIEMA)\", \"Warfighting MA (WMA)\"]\n        primaryFunctionalArea:\n          type: string\n          description: \"[Read-only] Primary functional area of the system record.\"\n          example: \"Health/Medical\"\n          enum: [\"Allies\", \"CBRNE\", \"Civilian Personnel \u0026 Readiness\", \"Command and Control\", \"Communications\", \"Communications Security (COMSEC)\",\n                \"Economic\", \"Environmental Security\", \"Facilities\", \"Finance\", \"Health/Medical\", \"Human Resources\", \"Information Management\",\n                \"Inspector General\", \"Intelligence\", \"Logistics\", \"Military Personnel and Readiness\", \"Nuclear\", \"Nuclear, Chemical, and Biological\",\n                \"Operations\", \"Personnel and Readiness\", \"Procurement/Acquisition\", \"Reserve Components\", \"Scientific and Engineering\", \"Space and Weather\",\n                \"Test and Evaluation\", \"Trainers\", \"Weapons\", \"Legal\", \"Transportation\", \"Not Applicable (N/A)\", \"Integration and Testing\"]\n        secondaryFunctionalArea:\n          type: string\n          description:  \"[Read-only] Secondary functional area of the system record.\"\n          example: \"Logistics\"\n          enum: [\"Allies\", \"CBRNE\", \"Civilian Personnel \u0026 Readiness\", \"Command and Control\", \"Communications\", \"Communications Security (COMSEC)\",\n                \"Economic\", \"Environmental Security\", \"Facilities\", \"Finance\", \"Health/Medical\", \"Human Resources\", \"Information Management\",\n                \"Inspector General\", \"Intelligence\", \"Logistics\", \"Military Personnel and Readiness\", \"Nuclear\", \"Nuclear, Chemical, and Biological\",\n                \"Operations\", \"Personnel and Readiness\", \"Procurement/Acquisition\", \"Reserve Components\", \"Scientific and Engineering\", \"Space and Weather\",\n                \"Test and Evaluation\", \"Trainers\", \"Weapons\", \"Legal\", \"Transportation\", \"Not Applicable (N/A)\", \"Integration and Testing\"]\n        primaryControlSet:\n          type: string\n          description: \"[Read-only] Primary Control Set of the system record. RMF values include the following options (NIST SP 800-53 Revision 4), DIACAP values include the following options (DoDI 8500.2)\"\n          example: \"NIST SP 800-53 Revision 4\"\n          enum: [\"NIST SP 800-53 Revision 4\", \"DoDI 8500.2\"]\n        confidentiality:\n          type: string\n          description: \"[Read-only] Confidentiality of the system record. RMF values include the following options (High, Moderate, Low)\"\n          example: \"Low\"\n          enum: [\"High\", \"Moderate\", \"Low\"]\n        integrity:\n          type: string\n          description: \"[Read-only] Integrity of the system record. RMF values include the following options (High, Moderate, Low)\"\n          example: \"Moderate\"\n          enum: [\"High\", \"Moderate\", \"Low\"]\n        availability:\n          type: string\n          description: \"[Read-only] Availability of the system record. RMF values include the following options (High, Moderate, Low)\"\n          example: \"High\"\n          enum: [\"High\", \"Moderate\", \"Low\"]\n        appliedOverlays:\n          type: string\n          description: \"[Read-only] Overlays applied to the system record.\"\n          example: \"Classified Information\"\n          enum: [\"Classified Information\", \"Privacy\", \"Cross Domain Solution (CDS)\", \"Financial Management\",\n                  \"Intelligence\", \"Nuclear Command, Communication, Control Systems (NC3)\", \"Cloud Service Provider (CSP)\"]\n        rmfActivity:\n          type: string\n          description: \"[Read-only] RMF Activity of the system record.\"\n          example: \"Maintain ATO and conduct reviews\"\n          enum: [\"Initiate and plan C\u0026A\", \"Initiate and plan cybersecurity Assessment Authorization\", \n                 \"Implement and validate assigned security controls\", \"Make assessment determination and authorization decision\",\n                 \"Maintain ATO and conduct reviews\", \"Decommission\"]\n        crossDomainTicket:\n          type: string\n          description: \"[Read-only] Cross Domain Tickets of the system record.\"\n          x-faker: random.words\n          example: \"Cross Domain Ticket test\"\n        ditprDonId:\n          type: string\n          description: \"[Read-Only] DITPR-DON identifier of the system record.\"\n          x-faker: random.alphaNumeric\n          example: \"5910, 1234, 8765\"\n        mac:\n          type: string\n          description: \"[Read-Only] MAC level of the system record.\"\n          example: \"II\"\n          enum: [ \"I\", \"II\", \"III\"]\n        dodConfidentiality:\n          type: string\n          description: \"[Read-Only] DoD Confidentiality level of the system record.\"\n          example: \"Public\"\n          enum: [\"Public\", \"Sensitive\", \"Classified\"]\n        contingencyPlanTested:\n          type: boolean\n          description: \"[Read-only] Has the system record’s Contingency Plan been tested?\"\n          x-faker: random.boolean\n          example: true\n        contingencyPlanTestDate:\n          type: integer\n          description: \"[Read-only] Date the system record’s Contingency Plan was tested.\"\n          example: 1426957321\n          minimum: 1500000000\n          maximum: 1900000000\n        securityReviewDate:\n          type: integer\n          description: \"[Read-only] Date the system record’s Annual Security Review was conducted.\"\n          example: 1531958400\n          minimum: 1500000000\n          maximum: 1900000000\n        hasOpenPoamItem:\n          type: boolean\n          description: \"[Read-Only] Does the system record have an Ongoing or Risk Accepted POA\u0026M Item?\"\n          x-faker: random.boolean\n          example: true     \n        hasOpenPoamItem90to120PastScheduledCompletionDate:\n          type: boolean\n          description: \"[Read-Only] Does the system record have an Ongoing or Risk Accepted POA\u0026M Item 90 to 120 days past its Scheduled Completion Date?\"\n          x-faker: random.boolean\n          example: false                 \n        hasOpenPoamItem120PlusPastScheudledCompletionDate:\n          type: boolean\n          description: \"[Read-Only] Does the system record have an Ongoing or Risk Accepted POA\u0026M Item 120 days past its Scheduled Completion Date?\"\n          x-faker: random.boolean\n          example: false          \n        impact:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"low\", \"Moderate\", \"High\"]\n        hasCUI:\n          type: boolean\n          description: \"[Read-only] Does the system record contain and/or process Controlled Unclassified information?\"\n          x-faker: random.boolean\n          example: false  \n        hasPII:\n          type: boolean\n          description: \"[Read-only] Does the system record contain and/or process Personally Identifiable Information?\"\n          x-faker: random.boolean\n          example: false\n        hasPHI:\n          type: boolean\n          description: \"[Read-only] Does the system record contain and/or process Personal Health Information?\"\n          x-faker: random.boolean\n          example: false\n        ppsmRegistryNumber:\n          type: string\n          description: \"[Read-only] Unique identifier for the DoD’s Ports, Protocols, and Services Management Registry system.\"\n          x-faker: random.words\n          example: \"Test PPSM Registry Number\"        \n        interconnectedInformationSystemAndIdentifiers:\n          type: string\n          description: \"[Read-only] Identify the interconnected information systems and corresponding identifiers within control CA-3.\"\n          x-faker: random.word\n          example: \"Test\"    \n        isPiaRequired:\n          type: boolean\n          description: \"[Read-only] Does the system require a Privacy Impact Assessment?\"\n          x-faker: random.boolean\n          example: true\n        piaStatus:\n          type: string\n          description: \"[Read-only] Status of the PIA, availability values include the following options (Not Started, In Progress, Completed)\"\n          example: \"Not Started\"\n          enum: [\"Not Started\", \"In Progress\", \"Completed\"]\n        piaDate:\n          type: integer\n          description: \"[Read-only] Date in which the system’s PIA took place.\"\n          example: 1622048629\n          minimum: 1500000000\n          maximum: 1900000000\n        userDefinedField1:\n          type: string\n          description: \"[Read-only] User-defined field to augment Ad Hoc Reporting.\"\n          x-faker: random.words\n          example: \"Test User-defined Field 1\"\n        userDefinedField2:\n          type: string\n          description: \"[Read-only] User-defined field to augment Ad Hoc Reporting.\"\n          x-faker: random.words\n          example: \"Test User-defined Field 2\"\n        userDefinedField3:\n          type: string\n          description: \"[Read-only] User-defined field to augment Ad Hoc Reporting.\"\n          x-faker: random.words\n          example: \"Test User-defined Field 3\"          \n        userDefinedField4:\n          type: string\n          description: \"[Read-only] User-defined field to augment Ad Hoc Reporting.\"\n          x-faker: random.words\n          example: \"Test User-defined Field 4\"\n        userDefinedField5:\n          type: string\n          description: \"[Read-only] User-defined field to augment Ad Hoc Reporting.\"\n          x-faker: random.words\n          example: \"Test User-defined Field 5\"\n        currentRmfLifecycleStep:\n          type: string\n          description: \"[Read-only] Displays the system’s current step within the RMF Lifecycle.\"\n          example: \"4 – Assess\"\n          enum: [\"1 – Categorize\", \"2 – Select\", \"3 – Implement\", \"4 – Assess\", \"5 – Authorize\", \"6 – Monitor\"]\n        otherInformation:\n          type: string\n          description: \"[Read-only] Include any additional information required by the organization.\"\n          x-faker: random.words\n          example: \"Additional Comments\"\n        reportsForScorecard:\n          type: boolean\n          description: \"[Read-only] Indicates if the system reports to the DoD Cyber Hygiene Scorecard.\"\n          x-faker: random.boolean\n          example: true   \n        package:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/PacGet\"   \n        connectivityCcsd:\n          type: array\n          maxItems: 2\n          items:\n            $ref: \"#/components/schemas/ConnectivityCcsd\"\n    ConnectivityCcsd:\n      title: System CCSD Connectivity\n      type: object\n      additionalProperties: false\n      properties:\n        ccsdNumber:\n          type: string\n          description: \"[Read-Only] Identifier for specific connections to the system.\"\n          x-faker: random.word\n          example: \"CCSD Number\"\n        connectivity:\n          type: string\n          description: \"[Read-Only] Choose connection type for the system.\"\n          x-faker: random.word\n          example: \"Test Connectivity\"          \n    RoleCategory:\n      title: System Roles Gategories\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Read-only] Unique system record identifier.\"\n          example: 35\n          minimum: 1\n          maximum: 3000\n        systemName:\n          type: string\n          description: \"[Read-only] Name of the system record.\"\n          example: \"Test system 1\"\n          enum: [\"Test system 1\", \"Test system 2\", \"Test system 3\", \"Test system 4\"]\n        systemAcronym:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"[Read-only] Acronym of the system record.\"\n          example: \"S-XYZ\"\n        roles:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/Roles\"\n    Roles:\n      title: System Role\n      type: object\n      additionalProperties: false\n      properties:\n        roleCategory:\n          type: string\n          description: \"[Required] System role categories\"\n          example: \"PAC\"\n          enum: [\"CAC\",\"PAC\",\"Other\"]\n        role:\n          type: string\n          description: \"[Required] System role description\"\n          example: \"AO\"\n          enum: [\"PM/IAM\", \"SCA\", \"AO\", \"ISSO\", \"IAO\", \"Validator (IV\u0026V)\", \"User Rep (View Only)\", \"Auditor\", \"Artifact Manager\",\"C\u0026A Team\"]\n        users:\n          type: array\n          maxItems: 1\n          items:\n            $ref: \"#/components/schemas/Users\"\n    Users:\n      title: System role users\n      type: object\n      additionalProperties: false\n      properties:\n        firstName:\n          type: string\n          x-faker: name.firstName\n          example: \"John\"\n        lastName:\n          type: string\n          x-faker: name.lastName\n          example: \"Smith\"\n        email:\n          type: string\n          format: email\n          x-faker: internet.email\n          example: \"John.Smith@hb.com\"\n    ControlsGet:\n      title: Controls - server returned data from the GET call\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique system record identifier.\"\n          example: 35\n          minimum: 1\n          maximum: 3000\n        name:\n          type: string\n          description: \"[Read-only] Name of the system record.\"\n          x-faker: random.word\n          example: \"System XYZ\"\n        acronym:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"[Required] Acronym of the system record.\"\n          example: \"AC-3\"\n        ccis:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"[Read-only] Comma separated list of CCIs associated with the control.\"\n          example: \"000001,000002\"\n        isInherited:\n          type: boolean\n          description: \"[Read-only] Indicates whether a control is inherited.\"\n          x-faker: random.boolean\n          example: true\n        modifiedByOverlays:\n          type: string\n          description: \"[Read-only] List of overlays that affect the control.\"\n          example: \"Requirements\"\n          enum: [\"Privacy\", \"Requirements\", \"Concurrency\"]\n        includedStatus:\n          type: string\n          description: \"[Read-only] Indicates the manner by which a control was included in the system’s categorization.\"\n          example: \"Manually\"\n        complianceStatus:\n          type: string\n          description: \"[Read-only] Compliance of the control.\"\n          x-faker: random.word\n          example: \"Status\"\n        responsibleEntities:\n          type: string\n          description: \"[Required] Include written description of Responsible Entities that are responsible for the Security Control. Character Limit = 2,000.\"\n          example: \"Unknown\"\n        implementationStatus:\n          type: string\n          description: \"[Optional] Implementation Status of the Security Control for the information system.\"\n          example: \"Planned\"\n          enum: [\"Planned\", \"Implemented\", \"Inherited\", \"Not Applicable\", \"Manually Inherited\"]\n        commonControlProvider:\n          type: string\n          description: \"[Conditional] Indicate the type of Common Control Provider for an “Inherited” Security Control.\"\n          example: \"DoD\"\n          enum: [\"DoD\", \"Component\", \"Enclave\"]\n        naJustification:\n          type: string\n          description: \"[Conditional] Provide justification for Security Controls deemed Not Applicable to the system.\"\n          example: \"System EOL within 120 days\"\n        controlDesignation:\n          type: string\n          description: \"[Required] Control designations\"\n          example: \"Common\"\n          enum: [\"Common\", \"System-Specific\", \"Hybrid\"]\n        estimatedCompletionDate:\n          type: integer\n          description: \"[Required] Field is required for Implementation Plan.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        implementationNarrative:\n          type: string\n          description: \"[Required] Includes security control comments. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Test Imp. Narrative\"\n        slcmCriticality:\n          type: string\n          description: \"[Conditional] Criticality of Security Control regarding SLCM. Character Limit = 2,000.\"\n          x-faker: random.word\n          example: \"Test Criticality\"\n        slcmFrequency:\n          type: string\n          description: \"[Conditional] SLCM frequency\"\n          example: \"Annually\"\n          enum: [\"Constantly\", \"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Semi-Annually\", \"Annually\", \"Every Two Years\", \"Every Three Years\", \"Undetermined\"]\n        slcmMethod:\n          type: string\n          description: \"[Conditional] SLCM method utilized\"\n          example: \"Automated\"\n          enum: [\"Automated\", \"Semi-Automated\", \"Manual\", \"Undetermined\"]\n        slcmReporting:\n          type: string\n          description: \"[Conditional] Method for reporting Security Control for SLCM. Character Limit = 2,000.\"\n          x-faker: random.word\n          example: \"Test Reporting\"\n        slcmTracking:\n          type: string\n          description: \"[Conditional] How Non-Compliant Security Controls will be tracked for SLCM. Character Limit = 2,000.\"\n          x-faker: random.word\n          example: \"Test Tracking\"\n        slcmComments:\n          type: string\n          description: \"[Conditional] Additional comments for Security Control regarding SLCM. Character Limit = 4,000.\"\n          x-faker: random.word\n          example: \"Test SLCM Comments\"\n        severity:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        vulnerabiltySummary:\n          type: string\n          description: \"[Optional] Include vulnerability summary. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Test Vulnerability Summary\"\n        recommendations:\n          type: string\n          description: \"[Optional] Include recommendations. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Test Recommendations\"\n        relevanceOfThreat:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        likelihood:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        impact:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        impactDescription:\n          type: string\n          description: \"[Optional] Include description of Security Control’s impact.\"\n          x-faker: random.words\n          example: \"Impact text\"\n        residualRiskLevel:\n          type: string\n          description: \"[Optional] Values include the following options (Very Low, Low, Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        testMethod:\n          type: string\n          description: \"[Optional] Identifies the assessment method / combination that will determine if the security requirements are implemented correctly.\"\n          example: \"Test\"\n          enum: ['Test', 'Interview', 'Examine', 'Test, Interview', 'Test, Examine', 'Interview, Examine','Test, Interview, Examine']\n    ControlsPut:\n      title: Controls - return query from the server for the PUT call\n      type: object\n      additionalProperties: false\n      properties:\n        acronym:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"Acronym of the system record.\"\n          example: \"AC-3\"\n        success:\n          type: boolean\n          description: \"Indicates if operations result (success/fail)\"\n          x-faker: random.boolean\n          example: true\n        systemId:\n          type: integer\n          format: int64\n          description: \"The system identifier for the system being updated.\"\n          example: 33\n          minimum: 10\n          maximum: 3000\n    TestResultsGet:\n      title: Test Results - server returned data from the GET call\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique eMASS identifier. Will need to provide correct number\"\n          example: 35\n          minimum: 1\n          maximum: 3000\n        control:\n          type: string\n          description: \"[Read-Only] Control acronym associated with the test result. NIST SP 800-53 Revision 4 defined.\"\n          x-faker: finance.bic\n          example: “AC-3”\n        cci:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"[Required] CCI associated with test result.\"\n          example: \"000001,000002\"\n        isInherited:\n          type: boolean\n          description: \"[Read-only] Indicates whether a test result is inherited.\"\n          x-faker: random.boolean\n          example: true\n        testedBy:\n          type: string\n          description: \"[Required] Last Name, First Name. 100 Characters.\"\n          x-faker: name.findName\n          example: \"Smith, Joe\"\n        testDate:\n          type: integer\n          format: int64\n          description: \"[Required] Unix time format.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        description:\n          type: string\n          description: \"[Required] Include description of test result. 4000 Characters.\"\n          x-faker: random.words\n          example: \"Test result description\"\n        type:\n          type: string\n          description: \"[Read-Only] Indicates the location in the Control Approval Chain when the test result is submitted.\"\n          example: \"Self-Assessment\"\n          enum: [\"Self-Assessment\", \"Schedule-Assessment\", \"Deep Evaluation\"]\n        complianceStatus:\n          type: string\n          description: \"[Required] Test result compliance status\"\n          example: \"Compliant\"\n          enum: [\"Compliant\", \"Non-Compliant\", \"Not Applicable\"]\n    TestResultsPost:\n      title: Test Results - return query from the server for the POST call\n      type: object\n      additionalProperties: false\n      properties:\n        cci:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"CCI associated with test result.\"\n          example: \"000001,000002\"\n        success:\n          type: boolean\n          description: \"Indicates if operations result (success/fail)\"\n          x-faker: random.boolean\n          example: true\n        systemId:\n          type: integer\n          format: int64\n          description: \"The system identifier for the system being updated.\"\n          example: 35\n          minimum: 10\n          maximum: 3000\n    PoamGet:\n      title: POAM - return query from the server for the GET call\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique eMASS system identifier.\"\n          example: 830\n          minimum: 1\n          maximum: 3000\n        poamId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique item identifier\"\n          example: 45\n          minimum: 1\n          maximum: 300\n        displayPoamId:\n          type: integer\n          format: int64\n          description: \"[Required] Globally unique identifier for individual POA\u0026M Items, seen on the front-end as “ID”.\"\n          example: 100000010\n          minimum: 100000000\n          maximum: 101003239\n        isInherited:\n          type: boolean\n          description: \"[Read-only] Indicates whether a test result is inherited.\"\n          x-faker: random.boolean\n          example: true\n        externalUid:\n          type: string\n          description: \"[Optional] Unique identifier external to the eMASS application for use with associating POA\u0026Ms. 100 Characters.\"\n          x-faker: random.uuid\n          example: \"d6d98b88-c866-4496-9bd4-de7ba48d0f52\"\n        controlAcronyms:\n          type: string\n          description: \"[Optional] System acronym name.\"\n          x-faker: finance.bic\n          example: “AC-3”\n        cci:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"[Optional] CCI associated with POA\u0026M Item..\"\n          example: \"000001,000002\"\n        status:\n          type: string\n          description: \"[Required] Values include the following: (Ongoing,Risk Accepted,Completed,Not Applicable\"\n          example: \"Completed\"\n          enum: [\"Ongoing\", \"Risk Accepted\", \"Completed\", \"Not Applicable\"]\n        reviewStatus:\n          type: string\n          description: \"[Read-Only] Values include the following options: (Not Approved,Under Review,Approved)\"\n          example: \"Under Review\"\n          enum: [\"Not Approved\", \"Under Review\", \"Approved\"]\n        vulnerabilityDescription:\n          type: string\n          description: \"[Required] Provide a description of the POA\u0026M Item. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Description text\"    \n        sourceIdentVuln:\n          type: string\n          description: \"[Required] Include Source Identifying Vulnerability text. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Source Indentifying Vulnerability text\"        \n        securityChecks:\n          type: string\n          description: \"[Optional] Security Checks that are associated with the POA\u0026M.\"\n          x-faker: random.words\n          example: \"SV-25123r1_rule,2016-A-0279\"\n        milestones:\n          type: array\n          maxItems: 3\n          items:\n            $ref: \"#/components/schemas/MilestonesGet\"\n        pocOrganization:\n          type: string\n          description: \"[Required] Organization/Office represented. 100 Characters.\"\n          x-faker: company.companyName\n          example: \"Army\"\n        pocFirstName:\n          type: string\n          description: \"[Conditional] First name of POC. 100 Characters.\"\n          x-faker: name.firstName\n          example: \"John\"\n        pocLastName:\n          type: string\n          description: \"[Conditional] Last name of POC. 100 Characters.\"\n          x-faker: name.lastName\n          example: \"Smith\"\n        pocEmail:\n          type: string\n          description: \"[Conditional] Email address of POC. 100 Characters.\"\n          x-faker: internet.email\n          example: \"smith@ah.com\"\n        pocPhoneNumber:\n          type: string\n          description: \"[Conditional] Phone number of POC (area code) ***-**** format. 100 Characters.\"\n          x-faker: phone.phoneNumber.email\n          example: \"555-555-5555\"\n        severity:\n          type: string\n          description: \"[Conditional] Required for approved items. Values include the following options (Very Low,Low,Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        rawSeverity:\n          type: string\n          description: \"[Optional] Values include the following options (I,II,III)\"\n          example: \"I\"\n          enum: [\"I\", \"II\", \"III\"]\n        relevanceOfThreat:\n          type: string\n          description: \"[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)\"\n          example: \"Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        likelihood:\n          type: string\n          description: \"[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)\"\n          example: \"Moderate\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        impact:\n          type: string\n          description: \"[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)\"\n          example: \"High\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        impactDescription:\n          type: string\n          description: \"[Optional] Include description of Security Control’s impact.\"\n          x-faker: random.words\n          example: \"Impact Description text\"\n        residualRiskLevel:\n          type: string\n          description: \"[Optional] Values include the following options: (Very Low,Low,Moderate,High,Very High)\"\n          example: \"Very Low\"\n          enum: [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n        recommendations:\n          type: string\n          description: \"[Optional] Include recommendations. Character Limit = 2,000.\"\n          x-faker: random.words\n          example: \"Recommendations text\"\n        resources:\n          type: string\n          description: \"[Required] List of resources used. 250 Characters.\"\n          x-faker: random.words\n          example: \"Resource text.\"\n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Conditional] Required for ongoing and completed POA\u0026M items. Unix time format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000\n        completionDate:\n          type: integer\n          format: int64\n          description: \"[Conditional] Field is required for completed POA\u0026M items. Unix time format.\"\n          example: 1505916276\n          minimum: 1500000000\n          maximum: 1900000000\n        extensionDate:\n          type: integer\n          format: int64\n          description: \u003e\n            [Read-Only] Value returned for a POA\u0026M Item with review status\n            Approved” and has a milestone with a scheduled completion date\n            that extends beyond the POA\u0026M Item’s scheduled completion date.\n          example: 1505916298\n          minimum: 1500000000\n          maximum: 1900000000\n        comments:\n          type: string\n          description: \"[Conditional] Field is required for completed and risk accepted POA\u0026M items. 2000 Characters\"\n          x-faker: random.words\n          example: \"Comments text.\"\n        mitigation:\n          type: string\n          description: \"[Optional] Include mitigation explanation. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Mitigation text\"\n        isActive:\n          type: boolean\n          description: \"[Conditional] Optionally used in PUT to delete milestones when updating a POA\u0026M.\"\n          x-faker: random.boolean\n          example: true       \n    PoamPost:\n      title: POAM - return query from the server for the POST call\n      type: object\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/PoamPostPutDel\"\n    PoamPut:\n      title: POAM - return query from the server for the PUT call\n      type: object\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/PoamPostPutDel\"\n    PoamDelete:\n      title: POAM - return query from the server for the DELETE call\n      type: object\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/PoamPostPutDel\"\n    PoamPostPutDel:\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"The system identifier for the system being updated.\"\n          example: 33\n          minimum: 10\n          maximum: 3000        \n        poamId:\n          type: integer\n          format: int64\n          description: \"The newly created POAM identifier\"\n          example: 45\n          minimum: 1\n          maximum: 300              \n        externalUid:\n          type: string\n          description: \"The unique identifier external to the eMASS application for use with associating POA\u0026Ms. 100 Characters.\"\n          x-faker: random.uuid\n          example: \"d6d98b88-c866-4496-9bd4-de7ba48d0f52\"\n        success:\n          type: boolean\n          description: \"Indicates if operations result (success/fail)\"\n          x-faker: random.boolean\n          example: true      \n    MilestonesGet:\n      title: Milestones - return query from the server for the GET call\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique eMASS system identifier.\"\n          example: 830\n          minimum: 1\n          maximum: 3000\n        milestoneId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique item identifier\"\n          example: 19\n          minimum: 1\n          maximum: 300\n        poamId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique item identifier\"\n          example: 45\n          minimum: 1\n          maximum: 300\n        description:\n          type: string\n          description: \"[Required] Include milestone description.\"\n          x-faker: random.words\n          example: \"Description text\"\n        scheduledCompletionDate:\n          type: integer\n          format: int64\n          description: \"[Required] Required for ongoing and completed POA\u0026M items. Unix time format.\"\n          example: 1599644800\n          minimum: 1500000000\n          maximum: 1900000000\n        reviewStatus:\n          type: string\n          description: \"[Read-Only] Values include the following options: (Not Approved,Under Review,Approved)\"\n          example: \"Under Review\"\n          enum: [\"Not Approved\", \"Under Review\", \"Approved\"]          \n    MilestonesPost:\n      title: Milestones - return query from the server for the POST call\n      type: object\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/MilestonesPutPostDelete\"\n    MilestonesPut:\n      title: Milestones - return query from the server for the PUT call\n      type: object\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/MilestonesPutPostDelete\"\n    MilestonesDelete:\n      title:  Milestones - return query from the server for the DELETE call\n      type: object\n      additionalProperties: false\n      \"$ref\": \"#/components/schemas/MilestonesPutPostDelete\"\n    MilestonesPutPostDelete:\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"The system identifier that the POAM was added.\"\n          example: 35\n          minimum: 10\n          maximum: 3000\n        poamId:\n          type: integer\n          format: int64\n          description: \"The newly created POAM identifier\"\n          example: 45\n          minimum: 1\n          maximum: 300\n        milestoneId:\n          type: integer\n          format: int64\n          description: \"The Milestone unique item identifier\"\n          example: 77\n          minimum: 1\n          maximum: 300         \n        externalUid:\n          type: string\n          description: \"The unique identifier external to the eMASS application for use with associating POA\u0026Ms. 100 Characters.\"\n          x-faker: random.uuid\n          example: \"d6d98b88-c866-4496-9bd4-de7ba48d0f52\"\n        success:\n          type: boolean\n          description: \"Indicates if operations result (success/fail)\"\n          x-faker: random.boolean\n          example: true    \n    ArtifactsGet:\n      title: Artifacts - return query from the server for the GET call\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique eMASS system identifier.\"\n          example: 35\n          minimum: 1\n          maximum: 3000\n        filename:\n          type: string\n          description: \"[Required] File name should match exactly one file within the provided zip file. 1000 Characters.\"\n          x-faker: system.commonFileName\n          example: \"AutorizationGuidance.pdf\"\n        isInherited:\n          type: boolean\n          description: \"[Read-only] Indicates whether an artifact is inherited.\"\n          x-faker: random.boolean\n          example: true\n        isTemplate:\n          type: boolean\n          description: \"[Read-only] Indicates whether an artifact template.\"\n          x-faker: random.boolean\n          example: false\n        type:\n          type: string\n          description: \"[Required] Artifact type options\"\n          example: \"Policy\"\n          enum: [\"Procedure\", \"Diagram\", \"Policy\", \"Labor\", \"Document\", \"Image\", \"Other\", \"Scan Result\", \"Auditor Report\"]          \n        category:\n          type: string\n          description: \"[Required] Artifact category options\"\n          example: \"Change Request\"\n          enum: [\"Implementation Guidance\", \"Evidence\"]\n        description:\n          type: string\n          description: \"[Optional] Artifact description. 2000 Characters.\"\n          x-faker: random.words\n          example: \"Artifact description text\"\n        refPageNumber:\n          type: string\n          description: \"[Optional] Artifact reference page number. 50 Characters.\"\n          x-faker: random.words\n          example: \"Reference page number\"\n        ccis:\n          type: string\n          pattern: '^\\d{5,6},\\d{5,6}'\n          description: \"[Optional] CCI associated with test result.\"\n          example: \"000001,000002\"\n        controls:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"[Optional] Control acronym associated with the artifact. NIST SP 800-53 Revision 4 defined.\"\n          example: \"AC-8,AC-2(4)\"\n        mimeContentType:\n          type: string\n          description: \"[Read-Only] Standard MIME content type derived from file extension.\"\n          x-faker: system.mimeType\n          example: \"application/zip\"\n        fileSize:\n          type: string\n          description: \"[Read-Only] File size of attached artifact.\"\n          x-faker: random.number\n          example: \"4MB\"\n        artifactExpirationDate:\n          type: integer\n          format: int64\n          description: \"[Optional] Date Artifact expires and requires review. In Unix Date format.\"\n          example: 1549036926\n          minimum: 1500000000\n          maximum: 1900000000\n        lastReviewedDate:\n          type: integer\n          format: int64\n          description: \"[Conditional] Date Artifact was last reviewed.. Unix time format.\"\n          example: 1549036928\n          minimum: 1500000000\n          maximum: 1900000000\n    ArtifactsDelete:\n      title: Artifacts - return query from the server for the DELETE call\n      type: array\n      maxItems: 4\n      items:\n        type: object\n        additionalProperties: false\n        properties:\n          filename:\n            type: string\n            description: \"[Required] File name should match exactly one file within the provided zip file. 1000 Characters.\"\n            x-faker: system.commonFileName\n            example: \"AutorizationGuidance.pdf\"\n    CacGet:\n      title: CAC - return query from the server for the GET call\n      type: object\n      additionalProperties: false\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique eMASS system identifier.\"\n          example: 35\n          minimum: 1\n          maximum: 3000      \n        controlAcronym:\n          type: string\n          pattern: '^[A-Z0-9-]{3,6}'\n          description: \"[Required] System acronym name.\"\n          example: \"AC-3\"\n        complianceStatus:\n          type: string\n          description: \"[Read-only] Compliance status of the control.\"\n          example: \"Compliant\"\n          enum: [\"Compliant\", \"Not Compliant\", \"No Status\", \"Not Applicable\"]\n        currentStageName:\n          type: string\n          description: \"[Read-Only] Role in current stage.\"\n          x-faker: random.word\n          example: \"SCA-V\"\n        currentStage:\n          type: integer\n          description: \"[Read-Only] Current step in the Control Approval Chain.\"\n          example: 2\n          minimum: 1\n          maximum: 20\n        totalStages:\n          type: integer\n          description: \"[Read-Only] Total number of steps in Control Approval Chain.\"\n          example: 2\n          minimum: 1\n          maximum: 10\n        comments:\n          type: string\n          description: \"[Conditional] Control Approval Chain comments - 2000 Characters.\"\n          x-faker: random.words\n          example: \"Control Approval Chain comments text.\"\n    PacGet:\n      title: PAC - return query from the server for the GET call\n      type: object\n      properties:\n        systemId:\n          type: integer\n          format: int64\n          description: \"[Required] Unique eMASS system identifier.\"\n          example: 35\n          minimum: 1\n          maximum: 3000        \n        workflow:\n          type: string\n          description: \"[Required] Values include the following:(Assess and Authorize, Assess Only, Security Plan Approval)\"\n          example: \"Assess and Authorize\"\n          enum: [\"Assess and Authorize\", \"Assess Only\", \"Security Plan Approval\"]\n        name:\n          type: string\n          description: \"[Required] Package name. 100 Characters.\"\n          x-faker: random.word\n          example: \"Package name text\"\n        currentStageName:\n          type: string\n          description: \"[Read-Only] Name of the current stage in the active workflow.\"\n          x-faker: random.word\n          example: \"SCA-R\"\n        currentStage:\n          type: integer\n          description: \"[Read-Only] Number of the current stage in the active workflow.\"\n          example: 4\n          minimum: 2\n          maximum: 20\n        totalStages:\n          type: integer\n          description: \"[Read-Only] Total number of stages in the active workflow.\"\n          example: 6\n          minimum: 2\n          maximum: 25\n        daysAtCurrentStage:\n          type: integer\n          description: \"[Read-Only] Indicates the number of days at current workflow stage.\"\n          example: 2\n          minimum: 1\n          maximum: 30\n        comments:\n          type: string\n          description: \"[Required] Comments related to package approval chain. Character Limit = 4,000.\"\n          x-faker: random.words\n          example: \"Comments text.\"\n    PacPost:\n      title: PAC - return query from the server for the POST call\n      type: object\n      properties:\n        workflow:\n          type: string\n          description: \"[Required] Values include the following:(Assess and Authorize, Assess Only, Security Plan Approval)\"\n          example: \"Assess and Authorize\"\n          enum: [\"Assess and Authorize\", \"Assess Only\", \"Security Plan Approval\"]\n        success:\n          type: boolean\n          x-faker: random.boolean\n          example: true\n        systemId:\n          type: integer\n          format: int64\n          example: 35\n          minimum: 1\n          maximum: 3000    \n    CmmcGet:\n      title: CMMC - return query from the server for the GET call\n      type: object\n      additionalProperties: false\n      properties:    \n        operation:\n          type: string\n          description: \"[Read-Only] Indicates the action that should be taken on the assessment record since the provided sinceDate.\"\n          example: \"UPDATED\"\n          enum: [\"ADDED\", \"UPDATED\", \"DELETED\"]\n        hqOrganizationName:\n          type: string\n          description: \"[Read-Only] The name of the DIB Company.\"\n          x-faker: company.companyName\n          example: \"Army\"\n        duns:\n          type: string\n          description: \"[Read-Only] The Data Universal Numbering System (DUNS) number.\"\n          x-faker: finance.account\n          example: \"852159753\"\n        uniqueEntityIdentifier:\n          type: string\n          description: \"[Read-Only] The Unique Entity Identifier assigned to the DIB Company.\"\n          x-faker: finance.account\n          example: \"9809123\"\n        cageCodes:\n          type: string\n          description: \"[Read-Only] The five position code(s) associated with the Organization Seeking Certification (OSC).\"\n          example: \"89ED9; 99D8B\"\n          enum: [\"89ED9; 99D8B\", \"34TH5; 23YH6\", \"75F8H; 2GH5I\", \"45RF9\", \"58H9L; 45UH8; 75F8H; 2GH5I\"]\n        oscName:\n          type: string\n          description: \"[Read-Only] The name of the Organization Seeking Certification.\"\n          x-faker: company.companyName\n          example: \"UC Labs\"\n        scope:\n          type: string\n          description: \"[Read-Only] The scope of the OSC assessment.\"\n          example: \"Enterprise\"\n          enum: [\"Enterprise\", \"Non-Enterprise\"]\n        scopeDescription:\n          type: string\n          description: \"[Read-Only] Brief description of the scope of the OSC assessment\"\n          x-faker: random.words\n          example: \"Assessment of UC's Lab\"\n        awardedCMMCLevel:\n          type: string\n          description: \"[Read-Only] The CMMC award level.\"\n          example: \"Not Certified\"\n          enum: [\"Not Certified\", \"Level 1\", \"Level 2\", \"Level 3\", \"Level 4\", \"Level 5\"]\n        expirationDate:\n          type: integer\n          format: int64\n          description: \"[Read-Only] Expiration date of the awarded CMMC certification.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n        certificateId:\n          type: string\n          description: \"[Read-Only] Unique identifier for the assessment/certificate.\"\n          x-faker: random.uuid\n          example: \"41b89528-a7a8-470a-90f4-c3fd1267d6f7\"\n        modelVersion:\n          type: string\n          description: \"[Read-Only] Version of the CMMC Model used as part of the assessment.\"\n          x-faker: system.semver\n          example: \"1.12\"\n        ssps:\n          maxItems: 4\n          type: array\n          items:\n            $ref: '#/components/schemas/Ssps'\n    Ssps:\n      title: System Role\n      type: object\n      additionalProperties: false\n      properties:\n        sspName:\n          type: string\n          description: \"[Read-Only] Name of the System Security Plan.\"\n          x-faker: company.companyName\n          example: \"UC Lab\"\n        sspVersion:\n          type: string\n          description: \"[Read-Only] Version of the System Security Plan.\"\n          x-faker: system.semver\n          example: \"4.3.0\"\n        sspDate:\n          type: integer\n          format: int64\n          description: \"Date of the System Security Plan. Unix date format.\"\n          example: 1638741660\n          minimum: 1500000000\n          maximum: 1900000000\n    WorkflowDefinitionGet:\n      title: Workflow Definition - return query from the server for the GET call\n      type: object\n      properties:    \n        description:\n          type: string\n          description: \"[Read-Only] Description of the workflow or the stage transition. For stage transitions, this matches the action dropdown that appears for PAC users.\"\n          x-faker: lorem.sentence \n          example: \"The workflow description\"\n        isActive:\n          type: boolean\n          description: \"[Read-Only] Returns true if the workflow is available to the site.\"\n          x-faker: random.boolean\n          example: false\n        version:\n          type: string\n          description: \"[Read-Only] Version of the workflow definition.\"\n          x-faker: system.semver\n          example: \"4\"\n        workflow:\n          type: string\n          description: \"[Read-Only] The workflow type.\"\n          example: \"RMF Step 1: Security Category\"\n          enum: [\"RMF Step 1: Security Category\", \"RMF Step 2: Security Category\", \"RMF Step 3: Security Category\"]\n        stages:\n          maxItems: 2\n          type: array\n          items:\n            $ref: '#/components/schemas/Stage'\n    Stage:\n      title: Workflow Definition Stage\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n          description: \"[Read-Only] Name of the stage.\"\n          example: \"Not Started\"\n          enum: [\"Not Started\",\"Categorize System\",\"Submit Categorization\",\"Approval\",\"Complete\"]\n        transitions:\n          maxItems: 4\n          type: array\n          items:\n            $ref: '#/components/schemas/DefinitionTransitions'\n    DefinitionTransitions:\n      title: Workflow Definition Transition\n      type: object\n      additionalProperties: false\n      properties:\n        endStage:\n          type: string\n          description: \"[Read-Only] The landing stage that is active after performing a transition.\"\n          example: \"Submit Categorization\"\n          enum: [\"Categorize System\",\"Submit Categorization\",\"Cancelled\",\"Cancel\",\"Complete\"]\n        description:  \n          type: string\n          description: \"[Read-Only] Description of the workflow or the stage transition. For stage transitions, this matches the action dropdown that appears for PAC users.\"\n          example: \"Initiate Workflow\"\n          enum: [\"Initiate Workflow\",\"Approve\",\"Disapprove and Move Forward\",\"Cancel\",\"Deny\"]\n        roles:\n          type: array\n          items:\n            type: string\n            example: [\"PM/ISO\", \"System Admin\", \"eMASS System Admin\", \"ISSE\", \"ISSM\", \"IO\"]\n            enum: [\"PM/ISO\", \"System Admin\", \"eMASS System Admin\", \"ISSE\", \"ISSM\", \"IO\",\"Other\",\"Unknown\"]\n          minItems: 1\n          maxItems: 6\n    WorkflowInstancesGet: \n      title: Workflow Instances - return query from the server for the GET call\n      type: object\n      properties:\n        createdDate:\n          type: integer\n          format: int64\n          description: \"[Read-Only] Date the workflow instance or the workflow transition was created.\"\n          example: 1636124623\n          minimum: 1500000000\n          maximum: 1900000000\n        currentStage:\n          type: string\n          description: \"[Read-Only] Name of the current stage.\"\n          example: \"Echelon II\"\n          enum: [\"Echelon I\",\"Echelon II\",\"Echelon III\",\"Categorize System\",\"Submit Categorization\",\"Approval\",\"Cancel\",\"Complete\"]\n        lastEditedBy:\n          type: string\n          description: \"[Read-Only] User that last acted on the workflow.\"\n          x-faker: internet.email\n          example: \"john.doe.ctr@mail.mil\"\n        lastEditedDate:\n          type: integer\n          format: int64\n          description: \"[Read-Only] Date the workflow was last acted on.\"\n          example: 1631130837\n          minimum: 1500000000\n          maximum: 1900000000\n        packageName:\n          type: string\n          description: \"[Read-Only] The package name.\"\n          example: \"Test RMF Step 1 package\"\n          enum: [\"Test POA\u0026M Approval\",\"Test RMF Step 1 package\",\"Test RMF Step 2 package\",\"Test RMF Step 3 package\"]\n        systemName:\n          type: string\n          description: \"[Read-Only] The system name.\"\n          example: \"Test system 1\"\n          enum: [\"Test system 1\", \"Test system 2\", \"Test system 3\", \"Test system 4\"]\n        version:\n          type: string\n          description: \"[Read-Only] Version of the workflow definition.\"\n          x-faker: system.semver\n          example: \"4\"\n        workflow:\n          type: string\n          description: \"[Read-Only] The workflow type.\"\n          example: \"RMF Step 1: Security Category\"\n          enum: [\"POA\u0026M Approval\", \"RMF Step 1: Security Category\", \"RMF Step 2: Security Category\", \"RMF Step 3: Security Category\"]        \n        workflowInstanceId:\n          type: integer\n          format: int64\n          description: \"[Read-Only] Unique workflow instance identifier.\"\n          example: 35\n          minimum: 10\n          maximum: 3000\n        transitions:\n          maxItems: 4\n          type: array\n          items:\n            $ref: '#/components/schemas/InstancesTransitions'          \n    InstancesTransitions:\n      title: Workflow Instances Transition\n      type: object\n      additionalProperties: false\n      properties:\n        comments: \n          type: string \n          description: \"[Read-Only] Comments entered by the user when performing the transition.\"\n          example: \"Approved the categorization\"\n          enum: [\"Approved the categorization\",\"Submitted the categorization\",\"Categorized the system as HMM\",\"Selected POA\u0026M Items\"]\n        createdBy:\n          type: string\n          description: \"[Read-Only] User that performed the workflow transition.\"\n          x-faker: internet.email\n          example: \"john.doe.ctr@mail.mil\"\n        createdDate:\n          type: integer\n          format: int64\n          description: \"[Read-Only] Date the workflow instance or the workflow transition was created.\"\n          example: 1636124623\n          minimum: 1500000000\n          maximum: 1900000000\n        description:  \n          type: string\n          description: \"[Read-Only] Description of the stage transition. This matches the action dropdown that appears for PAC users.\"\n          example: \"Submit New Package\"\n          enum: [\"Initiate Workflow\",\"Approve\",\"Submit New Package\",\"Disapprove and Move Forward\",\"Cancel\",\"Deny\"]\n        endStage:\n          type: string\n          description: \"[Read-Only] The landing stage that is active after performing a transition.\"\n          example: \"Submit Categorization\"\n          enum: [\"PM/ISO\",\"Echelon I\",\"Echelon II\",\"Echelon III\", \"Categorize System\",\"Submit Categorization\",\"Approval\",\"Complete\"]\n        startStage:\n          type: string\n          description: \"[Read-Only] The beginning stage that is active before performing a transition.\"\n          example: \"Not Started\"\n          enum: [\"Not Started\",\"PM/ISO\",\"Categorize System\",\"Submit Categorization\",\"Approval\",\"Deny\"]   \n  \n    #----------------------------------------------------------------------------\n    # 400 Responses\n    #----------------------------------------------------------------------------\n    400Response:\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/400\"\n    404Response:\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          \"$ref\": \"#/components/schemas/404\"\n  \n    #----------------------------------------------------------------------------\n    # HTTP response status code values \n    #----------------------------------------------------------------------------\n    \"200\":\n      title: OK\n      type: object\n      additionalProperties: false\n      properties:\n        code:\n          type: integer\n          format: int32\n          minimum: 200\n          maximum: 200\n          default: 200\n    \"201\":\n      title: \"Created\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 201\n              maximum: 201\n              default: 201\n            message:\n              type: string\n              default: \"Request was fulfilled and resulted in on or more new resources being successfully created on the server.\"    \n    \"400\":\n      title: \"Bad Request\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 400\n              maximum: 400\n              default: 400\n            errorMessage:\n              type: string\n              default: \"Request could not be understood by the server due to incorrect syntax or an unexpected format\"          \n    \"401\":\n      title: \"Unauthorized\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 401\n              maximum: 401\n              default: 401\n            errorMessage:\n              type: string\n              default: \"Request has failed to provide suitable authentication from the client\"\n    \"403\":\n      title: \"Forbidden\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 403\n              maximum: 403\n              default: 403\n            errorMessage:\n              type: string\n              default: \"Request was blocked by the application due to a lack of client permissions to the API or to a specific endpoint\"\n    \"404\":\n      title: \"Not Found\"\n      type: object\n      additionalProperties: false\n      properties:\n        code:\n          type: integer\n          format: int32\n          minimum: 404\n          maximum: 404\n          default: 404\n        errorMessage:\n          type: string\n          default: \"Request has failed because the URL provided in the request did not match any available endpoint locations\"\n    \"405\":\n      title: \"Method Not Allowed\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 405\n              maximum: 405\n              default: 405\n            errorMessage:\n              type: string\n              default: \"Request was made with a verb (GET, POST, etc.) that is not permitted for the endpoint\"\n    \"411\":\n      title: \"Length Required\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 411\n              maximum: 411\n              default: 411\n            errorMessage:\n              type: string\n              default: \"Request was of type POST and failed to provide the server information about the data/content length being submitted\"              \n    \"490\":\n      title: \"API Rule Failed\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 490\n              maximum: 490\n              default: 490\n            errorMessage:\n              type: string\n              default: \"Request has failed because too much data was requested in a single batch. This error is specific to eMASS\"\n    \"500\":\n      title: \"Internal Server Error\"\n      type: object\n      additionalProperties: false\n      properties:\n        meta:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n              minimum: 500\n              maximum: 500\n              default: 500\n            errorMessage:\n              type: string\n              default: \"Server encountered an unexpected condition which prevented it from fulfilling the request\"\n\n    #----------------------------------------------------------------------------  \n    # Schema for error response body\n    #----------------------------------------------------------------------------\n    Error:\n      title: \"ResponseDefaultError\"\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message      \n\n  #----------------------------------------------------------------------------\n  # Security schemes\n  #----------------------------------------------------------------------------\n  securitySchemes:\n    apikey:\n      type: apiKey\n      in: header\n      name: api-key\n      description: \u003e\n        The API key must be provided in the request header for all eMASS endpoint calls.\u003c/br\u003e\u003c/br\u003e\n        **For connecting to a mock server, any value is acceptable, e.g., 123**\n    userid:\n      type: apiKey\n      in: header\n      name: user-uid\n      description: \u003e\n        This User unique identifier key must be provided in the request header for all PUT,\n        POST, and DELETE endpoint calls.\u003c/br\u003e\n        Note: For DoD users this is the DoD ID Number (EIDIPI) on their DoD CAC.\u003c/br\u003e\u003c/br\u003e\n        **For connecting to a mock server, any value is acceptable, e.g., 123**\n    mockType:\n      type: apiKey\n      in: header\n      name: Prefer\n      description: \u003e\n        This header parameter is ony utilized when interacting with the mock server.\u003c/br\u003e\n        Options are (enter in the **Value** textbox): \n          - For random response values `code=200, dynamic=true`\n          - For static response values `code=200` \n#-------------------------------------------------------------------------------\n# S E C U R I T Y\n#-------------------------------------------------------------------------------\nsecurity:\n  - apikey: []\n  - userid: []\n  - mockType: []\n...\n"
		}
	},
	"Error": "parse: paths: /api/systems/{systemId}/poams: get: getSystemPoams: responses: 490: unknown status code: 490"
}