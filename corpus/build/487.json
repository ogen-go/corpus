{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/maingocthanhtan96/LaraJS"
		},
		"file": {
			"name": "swagger.yml",
			"path": "public/swagger/swagger.yml",
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Manage API'\n  description: 'Documents Api'\n  contact:\n    email: maingocthanhtan96@gmail.com\n  license:\n    name: 'Go to LaraJS'\n    url: /\n  version: 1.0.0\nservers:\n  -\n    url: 'http://local.larajs.com/api/v1'\n    description: 'Api v1'\n  -\n    url: 'http://local.larajs.com/api/v2'\n    description: 'Api v2'\npaths:\n  /login:\n    post:\n      tags:\n        - Auth\n      summary: Login\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n                - email\n                - password\n              properties:\n                email:\n                  type: string\n                  example: example@larajs.com\n                password:\n                  type: string\n                  format: password\n              type: object\n      responses:\n        '200':\n          description: 'Login Success!'\n  /user-info:\n    get:\n      tags:\n        - Auth\n      summary: 'Info user'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/Error'\n      security:\n        -\n          authApi: []\n  /users:\n    get:\n      tags:\n        - User\n      summary: 'List User'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/Error'\n      security:\n        -\n          authApi: []\n    post:\n      tags:\n        - User\n      summary: 'Create User'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/Error'\n      security:\n        -\n          authApi: []\n  '/users/{id}':\n    get:\n      tags:\n        - User\n      summary: 'Find User'\n      parameters:\n        -\n          $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/Error'\n      security:\n        -\n          authApi: []\n    put:\n      tags:\n        - User\n      summary: 'Update User'\n      parameters:\n        -\n          $ref: '#/components/parameters/id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/Error'\n      security:\n        -\n          authApi: []\n    delete:\n      tags:\n        - User\n      summary: 'Delete User'\n      parameters:\n        -\n          $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/Error'\n      security:\n        -\n          authApi: []\ncomponents:\n  schemas:\n    User:\n      title: User\n      required:\n        - name\n        - email\n        - password\n        - role_id\n      properties:\n        name:\n          title: Name\n          description: ''\n          type: string\n          default: None\n        email:\n          title: Email\n          description: ''\n          type: string\n          default: None\n          example: example@larajs.com\n        avatar:\n          title: Avatar\n          description: ''\n          type: string\n          default: None\n          example: 'https://lorempixel.com/150/150/?57749'\n        role_id:\n          title: Role\n          description: 'You cann''t set id as 1(role: admin)'\n          type: integer\n          default: None\n          example: '2'\n        password:\n          title: Password\n          description: ''\n          type: string\n          default: None\n          example: larajs\n        created_at:\n          title: 'Create date'\n          description: ''\n          type: string\n          format: date-time\n          default: timestamp\n          example: ''\n        updated_at:\n          title: 'Update date'\n          description: ''\n          type: string\n          format: date-time\n          default: timestamp\n          example: ''\n        deleted_at:\n          title: 'Delete date'\n          description: ''\n          type: string\n          format: date-time\n          default: timestamp\n          example: ''\n      type: object\n  responses:\n    OK:\n      description: Success\n      content:\n        application/json:\n          schema:\n            properties:\n              success:\n                type: string\n                example: 'true'\n              data:\n                type: string\n                example: '[]'\n            type: object\n    NotFound:\n      description: Error\n      content:\n        application/json:\n          schema:\n            properties:\n              success:\n                type: string\n                example: 'false'\n              message:\n                type: string\n                example: '404 not found'\n            type: object\n    Error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            properties:\n              success:\n                type: string\n                example: 'false'\n              message:\n                type: string\n                example: 'Error server'\n            type: object\n  parameters:\n    id:\n      name: id\n      in: path\n      description: ID\n      required: true\n      schema:\n        type: integer\n  securitySchemes:\n    authApi:\n      type: http\n      in: header\n      bearerFormat: JWT\n      scheme: bearer\n"
		}
	},
	"Error": "parse: paths: /users: post: : requestBody: content: application/json: parse schema: parse schema: reference \"#/components/schemas/User\": parse schema: role_id: parse default: expected type \"integer\", got \"string\""
}