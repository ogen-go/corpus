{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/graphsense/graphsense-REST"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "openapi_server/openapi/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  description: GraphSense API\n  title: GraphSense API\n  version: 0.5.1\nservers:\n- url: https://api.graphsense.info\nsecurity:\n- cookieAuth: []\npaths:\n  /search:\n    get:\n      operationId: search\n      parameters:\n      - description: The cryptocurrency (e.g., btc)\n        example: btc\n        explode: true\n        in: query\n        name: currency\n        required: false\n        schema:\n          format: string\n          type: string\n        style: form\n      - description: It can be (the beginning of) an address, a transaction or a label\n        example: foo\n        explode: true\n        in: query\n        name: q\n        required: true\n        schema:\n          minLength: 3\n          pattern: ^[\\w ]+$\n          type: string\n        style: form\n      - description: Maximum number of search results\n        example: 10\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          maximum: 100\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                search_result_04d9200:\n                  summary: search result for '04d9200'\n                  value:\n                    currencies:\n                      addresses: []\n                      currency: btc\n                      txs:\n                      - 04d920038d78be339694fe28116789dc49509cc9f47724d4ebcf574261caee8c,\n                      - 04d920094700443cab848544411a9a6d6628ab0d8502a796fbc70989b7991ccf\n                    labels: []\n                search_result_1Archive:\n                  summary: search result for '1Archive'\n                  value:\n                    currencies:\n                      addresses:\n                      - 1Archive1n2C579dMsAu3iC6tWzuQJz8dN\n                      - 1ArchiveisY6i4Hpostivemate1sVRhQ71\n                      - 1ArchiveiskxdThieferHRHi1592TqsV4c\n                      currency: btc\n                      txs: []\n                    labels: []\n                search_result_internet:\n                  summary: search result for 'internet'\n                  value:\n                    currencies:\n                      addresses: []\n                      currency: btc\n                      txs: []\n                    labels:\n                    - Internet Archive\n              schema:\n                $ref: '#/components/schemas/search_result'\n          description: OK\n      security:\n      - api_key: []\n      summary: Returns matching addresses, transactions and labels\n      tags:\n      - general\n      x-openapi-router-controller: openapi_server.controllers.general_controller\n  /stats:\n    get:\n      operationId: get_statistics\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stats'\n          description: OK\n      security: []\n      summary: Get statistics of supported currencies\n      tags:\n      - general\n      x-openapi-router-controller: openapi_server.controllers.general_controller\n  /tags/taxonomies:\n    get:\n      operationId: list_taxonomies\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/taxonomy'\n                type: array\n          description: OK\n      security:\n      - api_key: []\n      summary: Returns the supported taxonomies\n      tags:\n      - tags\n      x-openapi-router-controller: openapi_server.controllers.tags_controller\n  /tags/taxonomies/{taxonomy}/concepts:\n    get:\n      operationId: list_concepts\n      parameters:\n      - description: The taxonomy\n        example: foo\n        explode: false\n        in: path\n        name: taxonomy\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/concept'\n                type: array\n          description: OK\n      security:\n      - api_key: []\n      summary: Returns the supported concepts of a taxonomy\n      tags:\n      - tags\n      x-openapi-router-controller: openapi_server.controllers.tags_controller\n  /{currency}/addresses/{address}:\n    get:\n      operationId: get_address\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The cryptocurrency address\n        example: addressA\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          $ref: '#/components/schemas/address_id'\n        style: simple\n      - description: Whether to include the first page of tags. Use the respective\n          /tags endpoint to retrieve more if needed.\n        explode: true\n        in: query\n        name: include_tags\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get an address, optionally with tags\n      tags:\n      - addresses\n      x-openapi-router-controller: openapi_server.controllers.addresses_controller\n  /{currency}/addresses/{address}/entity:\n    get:\n      operationId: get_address_entity\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The cryptocurrency address\n        example: addressA\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          $ref: '#/components/schemas/address_id'\n        style: simple\n      - description: Whether to include the first page of tags. Use the respective\n          /tags endpoint to retrieve more if needed.\n        explode: true\n        in: query\n        name: include_tags\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/entity'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get the entity of an address\n      tags:\n      - addresses\n      x-openapi-router-controller: openapi_server.controllers.addresses_controller\n  /{currency}/addresses/{address}/links:\n    get:\n      operationId: list_address_links\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The cryptocurrency address\n        example: addressA\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          $ref: '#/components/schemas/address_id'\n        style: simple\n      - description: Neighbor address\n        example: addressE\n        explode: true\n        in: query\n        name: neighbor\n        required: true\n        schema:\n          $ref: '#/components/schemas/address_id'\n        style: form\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/links'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get outgoing transactions between two addresses\n      tags:\n      - addresses\n      x-openapi-router-controller: openapi_server.controllers.addresses_controller\n  /{currency}/addresses/{address}/neighbors:\n    get:\n      operationId: list_address_neighbors\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The cryptocurrency address\n        example: addressA\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          $ref: '#/components/schemas/address_id'\n        style: simple\n      - description: Incoming or outgoing neighbors\n        example: out\n        explode: true\n        in: query\n        name: direction\n        required: true\n        schema:\n          enum:\n          - in\n          - out\n          type: string\n        style: form\n      - description: Whether to include labels of first page of tags\n        explode: true\n        in: query\n        name: include_labels\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/neighbors'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get an addresses' neighbors in the address graph\n      tags:\n      - addresses\n      x-openapi-router-controller: openapi_server.controllers.addresses_controller\n  /{currency}/addresses/{address}/tags:\n    get:\n      operationId: list_tags_by_address\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The cryptocurrency address\n        example: addressA\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          $ref: '#/components/schemas/address_id'\n        style: simple\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address_tags'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get attribution tags for a given address\n      tags:\n      - addresses\n      x-openapi-router-controller: openapi_server.controllers.addresses_controller\n  /{currency}/addresses/{address}/txs:\n    get:\n      operationId: list_address_txs\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The cryptocurrency address\n        example: addressA\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          $ref: '#/components/schemas/address_id'\n        style: simple\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address_txs'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get all transactions an address has been involved in\n      tags:\n      - addresses\n      x-openapi-router-controller: openapi_server.controllers.addresses_controller\n  /{currency}/blocks/{height}:\n    get:\n      operationId: get_block\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The block height\n        example: 1\n        explode: false\n        in: path\n        name: height\n        required: true\n        schema:\n          $ref: '#/components/schemas/height'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/block'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get a block by its height\n      tags:\n      - blocks\n      x-openapi-router-controller: openapi_server.controllers.blocks_controller\n  /{currency}/blocks/{height}/txs:\n    get:\n      operationId: list_block_txs\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The block height\n        example: 1\n        explode: false\n        in: path\n        name: height\n        required: true\n        schema:\n          $ref: '#/components/schemas/height'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                tx_account_array:\n                  summary: list of account transactions\n                  value:\n                  - $ref: '#/components/examples/tx_account/value'\n                tx_utxo_array:\n                  summary: list of UTXO transactions\n                  value:\n                  - $ref: '#/components/examples/tx_utxo/value'\n              schema:\n                items:\n                  $ref: '#/components/schemas/tx'\n                type: array\n          description: OK\n      security:\n      - api_key: []\n      summary: Get block transactions\n      tags:\n      - blocks\n      x-openapi-router-controller: openapi_server.controllers.blocks_controller\n  /{currency}/bulk.csv/{operation}:\n    post:\n      operationId: bulk_csv\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The operation to execute in bulk\n        example: get_block\n        explode: false\n        in: path\n        name: operation\n        required: true\n        schema:\n          enum:\n          - get_block\n          - list_block_txs\n          - get_address\n          - list_address_txs\n          - list_tags_by_address\n          - list_address_neighbors\n          - get_address_entity\n          - list_address_links\n          - get_entity\n          - list_tags_by_entity\n          - list_entity_neighbors\n          - list_entity_txs\n          - list_entity_links\n          - list_entity_addresses\n          - get_tx\n          - get_tx_io\n          - get_exchange_rates\n          type: string\n        style: simple\n      - description: Number of pages to retrieve for operations with list response\n        example: 1\n        explode: true\n        in: query\n        name: num_pages\n        required: true\n        schema:\n          type: integer\n        style: form\n      requestBody:\n        content:\n          application/json:\n            example:\n              height:\n              - 1\n              - 2\n              - 3\n            schema:\n              type: object\n        description: Map of the operation's parameter names to (arrays of) values\n        required: true\n        x-body-name: body\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                type: string\n          description: OK\n      security:\n      - api_key: []\n      summary: Get data as CSV in bulk\n      tags:\n      - bulk\n      x-streamed: true\n      x-openapi-router-controller: openapi_server.controllers.bulk_controller\n      x-codegen-request-body-name: body\n  /{currency}/bulk.json/{operation}:\n    post:\n      operationId: bulk_json\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The operation to execute in bulk\n        example: get_block\n        explode: false\n        in: path\n        name: operation\n        required: true\n        schema:\n          enum:\n          - get_block\n          - list_block_txs\n          - get_address\n          - list_address_txs\n          - list_tags_by_address\n          - list_address_neighbors\n          - get_address_entity\n          - list_address_links\n          - get_entity\n          - list_tags_by_entity\n          - list_entity_neighbors\n          - list_entity_txs\n          - list_entity_links\n          - list_entity_addresses\n          - get_tx\n          - get_tx_io\n          - get_exchange_rates\n          type: string\n        style: simple\n      - description: Number of pages to retrieve for operations with list response\n        example: 1\n        explode: true\n        in: query\n        name: num_pages\n        required: true\n        schema:\n          type: integer\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: Map of the operation's parameter names to (arrays of) values\n        required: true\n        x-body-name: body\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  additionalProperties: true\n                  type: object\n                type: array\n          description: OK\n      security:\n      - api_key: []\n      summary: Get data as JSON in bulk\n      tags:\n      - bulk\n      x-streamed: true\n      x-openapi-router-controller: openapi_server.controllers.bulk_controller\n      x-codegen-request-body-name: body\n  /{currency}/entities/{entity}:\n    get:\n      operationId: get_entity\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The entity ID\n        example: 67065\n        explode: false\n        in: path\n        name: entity\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: simple\n      - description: Whether to include the first page of tags. Use the respective\n          /tags endpoint to retrieve more if needed.\n        explode: true\n        in: query\n        name: include_tags\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/entity'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get an entity, optionally with tags\n      tags:\n      - entities\n      x-openapi-router-controller: openapi_server.controllers.entities_controller\n  /{currency}/entities/{entity}/addresses:\n    get:\n      operationId: list_entity_addresses\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The entity ID\n        example: 67065\n        explode: false\n        in: path\n        name: entity\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: simple\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/entity_addresses'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get an entity's addresses\n      tags:\n      - entities\n      x-openapi-router-controller: openapi_server.controllers.entities_controller\n  /{currency}/entities/{entity}/links:\n    get:\n      operationId: list_entity_links\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The entity ID\n        example: 67065\n        explode: false\n        in: path\n        name: entity\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: simple\n      - description: Neighbor entity\n        example: 123456\n        explode: true\n        in: query\n        name: neighbor\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: form\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/links'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get transactions between two entities\n      tags:\n      - entities\n      x-openapi-router-controller: openapi_server.controllers.entities_controller\n  /{currency}/entities/{entity}/neighbors:\n    get:\n      operationId: list_entity_neighbors\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The entity ID\n        example: 67065\n        explode: false\n        in: path\n        name: entity\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: simple\n      - description: Incoming or outgoing neighbors\n        example: out\n        explode: true\n        in: query\n        name: direction\n        required: true\n        schema:\n          enum:\n          - in\n          - out\n          type: string\n        style: form\n      - description: Restrict result to given set of comma separated IDs\n        explode: true\n        in: query\n        name: only_ids\n        required: false\n        schema:\n          $ref: '#/components/schemas/only_entity_ids'\n        style: form\n      - description: Whether to include labels of first page of tags\n        explode: true\n        in: query\n        name: include_labels\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/neighbors'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get an entity's neighbors in the entity graph\n      tags:\n      - entities\n      x-openapi-router-controller: openapi_server.controllers.entities_controller\n  /{currency}/entities/{entity}/search:\n    get:\n      operationId: search_entity_neighbors\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The entity ID\n        example: 67065\n        explode: false\n        in: path\n        name: entity\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: simple\n      - description: Incoming or outgoing neighbors\n        example: out\n        explode: true\n        in: query\n        name: direction\n        required: true\n        schema:\n          enum:\n          - in\n          - out\n          type: string\n        style: form\n      - description: 'Match neighbors against one and only one of these properties:\n          - the category the entity belongs to - addresses the entity contains - entity\n          ids - total_received: amount the entity received in total - balance: amount\n          the entity holds finally'\n        example: category\n        explode: true\n        in: query\n        name: key\n        required: true\n        schema:\n          enum:\n          - category\n          - addresses\n          - entities\n          - total_received\n          - balance\n          type: string\n        style: form\n      - description: 'If key is - category: comma separated list of category names\n          - addresses: comma separated list of address IDs - entities: comma separated\n          list of entity IDs - total_received/balance: comma separated tuple of (currency,\n          min, max) where currency is ''value'' for the cryptocurrency value or an\n          ISO currency code'\n        example: Miner\n        explode: true\n        in: query\n        name: value\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: How many hops should the transaction graph be searched\n        example: 2\n        explode: true\n        in: query\n        name: depth\n        required: true\n        schema:\n          format: int32\n          maximum: 7\n          type: integer\n        style: form\n      - description: How many siblings of each neighbor should be tried\n        explode: true\n        in: query\n        name: breadth\n        required: false\n        schema:\n          default: 16\n          format: int32\n          type: integer\n        style: form\n      - description: Skip entities containing more addresses\n        explode: true\n        in: query\n        name: skip_num_addresses\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/search_result_level1'\n          description: OK\n      security:\n      - api_key: []\n      summary: Search deeply for matching neighbors\n      tags:\n      - entities\n      x-openapi-router-controller: openapi_server.controllers.entities_controller\n  /{currency}/entities/{entity}/tags:\n    get:\n      operationId: list_tags_by_entity\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The entity ID\n        example: 67065\n        explode: false\n        in: path\n        name: entity\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: simple\n      - description: Whether tags on the address or entity level are requested\n        example: address\n        explode: true\n        in: query\n        name: level\n        required: true\n        schema:\n          enum:\n          - address\n          - entity\n          type: string\n        style: form\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tags'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get tags for a given entity for the given level\n      tags:\n      - entities\n      x-openapi-router-controller: openapi_server.controllers.entities_controller\n  /{currency}/entities/{entity}/txs:\n    get:\n      operationId: list_entity_txs\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The entity ID\n        example: 67065\n        explode: false\n        in: path\n        name: entity\n        required: true\n        schema:\n          $ref: '#/components/schemas/entity_id'\n        style: simple\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address_txs'\n          description: OK\n      security:\n      - api_key: []\n      summary: Get all transactions an entity has been involved in\n      tags:\n      - entities\n      x-openapi-router-controller: openapi_server.controllers.entities_controller\n  /{currency}/rates/{height}:\n    get:\n      operationId: get_exchange_rates\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The block height\n        example: 1\n        explode: false\n        in: path\n        name: height\n        required: true\n        schema:\n          $ref: '#/components/schemas/height'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rates'\n          description: OK\n      security:\n      - api_key: []\n      summary: Returns exchange rate for a given height\n      tags:\n      - rates\n      x-openapi-router-controller: openapi_server.controllers.rates_controller\n  /{currency}/tags:\n    get:\n      operationId: list_tags\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The label of an entity\n        example: cimedy\n        explode: true\n        in: query\n        name: label\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Whether tags on the address or entity level are requested\n        example: address\n        explode: true\n        in: query\n        name: level\n        required: true\n        schema:\n          enum:\n          - address\n          - entity\n          type: string\n        style: form\n      - description: Resumption token for retrieving the next page\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items returned in a single page\n        example: 10\n        explode: true\n        in: query\n        name: pagesize\n        required: false\n        schema:\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tags'\n          description: OK\n      security:\n      - api_key: []\n      summary: Returns address or entity tags associated with a given label\n      tags:\n      - tags\n      x-openapi-router-controller: openapi_server.controllers.tags_controller\n  /{currency}/txs/{tx_hash}:\n    get:\n      operationId: get_tx\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The transaction hash\n        example: ab188013\n        explode: false\n        in: path\n        name: tx_hash\n        required: true\n        schema:\n          $ref: '#/components/schemas/tx_hash'\n        style: simple\n      - description: Whether to include inputs/outputs of a transaction (UTXO only)\n        explode: true\n        in: query\n        name: include_io\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                tx_account:\n                  $ref: '#/components/examples/tx_account'\n                tx_utxo:\n                  $ref: '#/components/examples/tx_utxo'\n              schema:\n                $ref: '#/components/schemas/tx'\n          description: OK\n      security:\n      - api_key: []\n      summary: Returns details of a specific transaction identified by its hash.\n      tags:\n      - txs\n      x-openapi-router-controller: openapi_server.controllers.txs_controller\n  /{currency}/txs/{tx_hash}/{io}:\n    get:\n      operationId: get_tx_io\n      parameters:\n      - description: The cryptocurrency code (e.g., btc)\n        example: btc\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          format: string\n          type: string\n        style: simple\n      - description: The transaction hash\n        example: ab188013\n        explode: false\n        in: path\n        name: tx_hash\n        required: true\n        schema:\n          $ref: '#/components/schemas/tx_hash'\n        style: simple\n      - description: Input or outpus values of a transaction\n        example: outputs\n        explode: false\n        in: path\n        name: io\n        required: true\n        schema:\n          enum:\n          - inputs\n          - outputs\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tx_values'\n          description: OK\n      security:\n      - api_key: []\n      summary: Returns input/output values of a specific transaction identified by\n        its hash.\n      tags:\n      - txs\n      x-openapi-router-controller: openapi_server.controllers.txs_controller\ncomponents:\n  examples:\n    tx_account:\n      summary: account transaction\n      value:\n        from_address: addressA\n        height: 47\n        timestamp: 123456789\n        to_address: addressB\n        tx_hash: 04d92601677d62a985310b61a301e74870fa942c8be0648e16b1db23b996a8cd\n        tx_type: account\n        value:\n          fiat_values:\n          - code: eur\n            value: 30\n          - code: usd\n            value: 60\n          value: 15\n    tx_utxo:\n      summary: UTXO transaction\n      value:\n        coinbase: false\n        height: 47\n        inputs:\n        - address: addressA\n          value:\n            fiat_values:\n            - code: eur\n              value: 10\n            - code: usd\n              value: 20\n            value: 5\n        - address: addressB\n          value:\n            fiat_values:\n            - code: eur\n              value: 20\n            - code: usd\n              value: 40\n            value: 10\n        outputs:\n        - address: addressC\n          value:\n            fiat_values:\n            - code: eur\n              value: 5\n            - code: usd\n              value: 10\n            value: 2.5\n        - address: addressD\n          value:\n            fiat_values:\n            - code: eur\n              value: 25\n            - code: usd\n              value: 50\n            value: 12.5\n        timestamp: 123456789\n        total_input:\n          fiat_values:\n          - code: eur\n            value: 30\n          - code: usd\n            value: 60\n          value: 15\n        total_output:\n          fiat_values:\n          - code: eur\n            value: 30\n          - code: usd\n            value: 60\n          value: 15\n        tx_hash: 04d92601677d62a985310b61a301e74870fa942c8be0648e16b1db23b996a8cd\n        tx_type: utxo\n  parameters:\n    address:\n      description: The cryptocurrency address\n      example: addressA\n      explode: false\n      in: path\n      name: address\n      required: true\n      schema:\n        $ref: '#/components/schemas/address_id'\n      style: simple\n    address_ids:\n      description: Restrict result to given set of comma separated addresses\n      explode: true\n      in: query\n      name: ids\n      required: false\n      schema:\n        items:\n          type: string\n        type: array\n      style: form\n    breadth:\n      description: How many siblings of each neighbor should be tried\n      explode: true\n      in: query\n      name: breadth\n      required: false\n      schema:\n        default: 16\n        format: int32\n        type: integer\n      style: form\n    currency:\n      description: The cryptocurrency code (e.g., btc)\n      example: btc\n      explode: false\n      in: path\n      name: currency\n      required: true\n      schema:\n        format: string\n        type: string\n      style: simple\n    currency_query:\n      description: The cryptocurrency (e.g., btc)\n      example: btc\n      explode: true\n      in: query\n      name: currency\n      required: false\n      schema:\n        format: string\n        type: string\n      style: form\n    depth:\n      description: How many hops should the transaction graph be searched\n      example: 2\n      explode: true\n      in: query\n      name: depth\n      required: true\n      schema:\n        format: int32\n        maximum: 7\n        type: integer\n      style: form\n    direction:\n      description: Incoming or outgoing neighbors\n      example: out\n      explode: true\n      in: query\n      name: direction\n      required: true\n      schema:\n        enum:\n        - in\n        - out\n        type: string\n      style: form\n    entity:\n      description: The entity ID\n      example: 67065\n      explode: false\n      in: path\n      name: entity\n      required: true\n      schema:\n        $ref: '#/components/schemas/entity_id'\n      style: simple\n    entity_neighbor:\n      description: Neighbor entity\n      example: 123456\n      explode: true\n      in: query\n      name: neighbor\n      required: true\n      schema:\n        $ref: '#/components/schemas/entity_id'\n      style: form\n    height:\n      description: The block height\n      example: 1\n      explode: false\n      in: path\n      name: height\n      required: true\n      schema:\n        $ref: '#/components/schemas/height'\n      style: simple\n    include_io:\n      description: Whether to include inputs/outputs of a transaction (UTXO only)\n      explode: true\n      in: query\n      name: include_io\n      required: false\n      schema:\n        default: false\n        type: boolean\n      style: form\n    include_labels:\n      description: Whether to include labels of first page of tags\n      explode: true\n      in: query\n      name: include_labels\n      required: false\n      schema:\n        default: false\n        type: boolean\n      style: form\n    include_tags:\n      description: Whether to include the first page of tags. Use the respective /tags\n        endpoint to retrieve more if needed.\n      explode: true\n      in: query\n      name: include_tags\n      required: false\n      schema:\n        default: false\n        type: boolean\n      style: form\n    io:\n      description: Input or outpus values of a transaction\n      example: outputs\n      explode: false\n      in: path\n      name: io\n      required: true\n      schema:\n        enum:\n        - inputs\n        - outputs\n        type: string\n      style: simple\n    label:\n      description: The label of an entity\n      example: cimedy\n      explode: true\n      in: query\n      name: label\n      required: true\n      schema:\n        type: string\n      style: form\n    limit:\n      description: Maximum number of search results\n      example: 10\n      explode: true\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 10\n        maximum: 100\n        type: integer\n      style: form\n    neighbor:\n      description: Neighbor address\n      example: addressE\n      explode: true\n      in: query\n      name: neighbor\n      required: true\n      schema:\n        $ref: '#/components/schemas/address_id'\n      style: form\n    num_pages:\n      description: Number of pages to retrieve for operations with list response\n      example: 1\n      explode: true\n      in: query\n      name: num_pages\n      required: true\n      schema:\n        type: integer\n      style: form\n    only_entity_ids:\n      description: Restrict result to given set of comma separated IDs\n      explode: true\n      in: query\n      name: only_ids\n      required: false\n      schema:\n        $ref: '#/components/schemas/only_entity_ids'\n      style: form\n    operation:\n      description: The operation to execute in bulk\n      example: get_block\n      explode: false\n      in: path\n      name: operation\n      required: true\n      schema:\n        enum:\n        - get_block\n        - list_block_txs\n        - get_address\n        - list_address_txs\n        - list_tags_by_address\n        - list_address_neighbors\n        - get_address_entity\n        - list_address_links\n        - get_entity\n        - list_tags_by_entity\n        - list_entity_neighbors\n        - list_entity_txs\n        - list_entity_links\n        - list_entity_addresses\n        - get_tx\n        - get_tx_io\n        - get_exchange_rates\n        type: string\n      style: simple\n    page:\n      description: Resumption token for retrieving the next page\n      explode: true\n      in: query\n      name: page\n      required: false\n      schema:\n        type: string\n      style: form\n    pagesize:\n      description: Number of items returned in a single page\n      example: 10\n      explode: true\n      in: query\n      name: pagesize\n      required: false\n      schema:\n        minimum: 1\n        type: integer\n      style: form\n    search_key:\n      description: 'Match neighbors against one and only one of these properties:\n        - the category the entity belongs to - addresses the entity contains - entity\n        ids - total_received: amount the entity received in total - balance: amount\n        the entity holds finally'\n      example: category\n      explode: true\n      in: query\n      name: key\n      required: true\n      schema:\n        enum:\n        - category\n        - addresses\n        - entities\n        - total_received\n        - balance\n        type: string\n      style: form\n    search_query:\n      description: It can be (the beginning of) an address, a transaction or a label\n      example: foo\n      explode: true\n      in: query\n      name: q\n      required: true\n      schema:\n        minLength: 3\n        pattern: ^[\\w ]+$\n        type: string\n      style: form\n    search_value:\n      description: 'If key is - category: comma separated list of category names -\n        addresses: comma separated list of address IDs - entities: comma separated\n        list of entity IDs - total_received/balance: comma separated tuple of (currency,\n        min, max) where currency is ''value'' for the cryptocurrency value or an ISO\n        currency code'\n      example: Miner\n      explode: true\n      in: query\n      name: value\n      required: true\n      schema:\n        items:\n          type: string\n        type: array\n      style: form\n    skip_num_addresses:\n      description: Skip entities containing more addresses\n      explode: true\n      in: query\n      name: skip_num_addresses\n      required: false\n      schema:\n        format: int32\n        type: integer\n      style: form\n    tag_level:\n      description: Whether tags on the address or entity level are requested\n      example: address\n      explode: true\n      in: query\n      name: level\n      required: true\n      schema:\n        enum:\n        - address\n        - entity\n        type: string\n      style: form\n    taxonomy:\n      description: The taxonomy\n      example: foo\n      explode: false\n      in: path\n      name: taxonomy\n      required: true\n      schema:\n        type: string\n      style: simple\n    tx_hash:\n      description: The transaction hash\n      example: ab188013\n      explode: false\n      in: path\n      name: tx_hash\n      required: true\n      schema:\n        $ref: '#/components/schemas/tx_hash'\n      style: simple\n  schemas:\n    address:\n      example:\n        total_spent:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        in_degree: 1\n        address: addressA\n        balance:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        no_incoming_txs: 5\n        no_outgoing_txs: 5\n        out_degree: 2\n        first_tx:\n          tx_hash: tx_hash\n          height: 47\n          timestamp: 123456789\n        last_tx:\n          tx_hash: tx_hash\n          height: 47\n          timestamp: 123456789\n        entity: 123456\n        total_received:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        tags:\n        - null\n        - null\n      properties:\n        address:\n          description: Address\n          example: addressA\n          title: address\n          type: string\n        balance:\n          $ref: '#/components/schemas/values'\n        entity:\n          description: Entity id\n          example: 123456\n          format: int32\n          title: entity\n          type: integer\n        first_tx:\n          $ref: '#/components/schemas/tx_summary'\n        in_degree:\n          format: int32\n          title: in_degree\n          type: integer\n        last_tx:\n          $ref: '#/components/schemas/tx_summary'\n        no_incoming_txs:\n          format: int32\n          title: no_incoming_txs\n          type: integer\n        no_outgoing_txs:\n          format: int32\n          title: no_outgoing_txs\n          type: integer\n        out_degree:\n          format: int32\n          title: out_degree\n          type: integer\n        tags:\n          description: First page of tags of this address\n          items:\n            $ref: '#/components/schemas/address_tag'\n          title: tags\n          type: array\n        total_received:\n          $ref: '#/components/schemas/values'\n        total_spent:\n          $ref: '#/components/schemas/values'\n      required:\n      - address\n      - balance\n      - entity\n      - first_tx\n      - in_degree\n      - last_tx\n      - no_incoming_txs\n      - no_outgoing_txs\n      - out_degree\n      - total_received\n      - total_spent\n      title: address\n      type: object\n    address_and_entity_tags:\n      example:\n        entity_tags:\n        - null\n        - null\n        address_tags:\n        - null\n        - null\n      properties:\n        address_tags:\n          description: First page of address tags of this entity\n          items:\n            $ref: '#/components/schemas/address_tag'\n          title: address_tags\n          type: array\n        entity_tags:\n          description: First page of entity tags of this entity\n          items:\n            $ref: '#/components/schemas/entity_tag'\n          title: entity_tags\n          type: array\n      required:\n      - address_tags\n      - entity_tags\n      title: address_and_entity_tags\n      type: object\n    address_id:\n      description: Address\n      example: addressA\n      title: address\n      type: string\n    address_tag:\n      allOf:\n      - $ref: '#/components/schemas/tag'\n      - $ref: '#/components/schemas/address_tag_allOf'\n      title: address_tag\n    address_tags:\n      example:\n        next_page: next_page\n        address_tags:\n        - null\n        - null\n      properties:\n        address_tags:\n          items:\n            $ref: '#/components/schemas/address_tag'\n          title: address_tags\n          type: array\n        next_page:\n          format: string\n          title: next_page\n          type: string\n      required:\n      - address_tags\n      title: address_tags\n      type: object\n    address_tx:\n      discriminator:\n        mapping:\n          account: '#/components/schemas/tx_account'\n          utxo: '#/components/schemas/address_tx_utxo'\n        propertyName: tx_type\n      oneOf:\n      - $ref: '#/components/schemas/address_tx_utxo'\n      - $ref: '#/components/schemas/tx_account'\n      title: address_tx\n    address_tx_utxo:\n      properties:\n        coinbase:\n          description: Coinbase transaction flag\n          type: boolean\n        height:\n          description: Height\n          example: 47\n          format: int32\n          minimum: 0\n          title: height\n          type: integer\n        timestamp:\n          description: Timestamp\n          example: 123456789\n          format: int32\n          title: timestamp\n          type: integer\n        tx_hash:\n          description: Transaction hash\n          title: tx_hash\n          type: string\n        tx_type:\n          default: utxo\n          type: string\n        value:\n          $ref: '#/components/schemas/values'\n      required:\n      - coinbase\n      - height\n      - timestamp\n      - tx_hash\n      - tx_type\n      - value\n      type: object\n    address_txs:\n      example:\n        next_page: next_page\n        address_txs:\n        - null\n        - null\n      properties:\n        address_txs:\n          items:\n            $ref: '#/components/schemas/address_tx'\n          title: address_txs\n          type: array\n        next_page:\n          format: string\n          title: next_page\n          type: string\n      title: address_txs\n      type: object\n    block:\n      example:\n        block_hash: block_hash\n        height: 47\n        no_txs: 11\n        timestamp: 123456789\n      properties:\n        block_hash:\n          format: string\n          title: block_hash\n          type: string\n        height:\n          description: Height\n          example: 47\n          format: int32\n          minimum: 0\n          title: height\n          type: integer\n        no_txs:\n          example: 11\n          format: int32\n          title: no_txs\n          type: integer\n        timestamp:\n          description: Timestamp\n          example: 123456789\n          format: int32\n          title: timestamp\n          type: integer\n      title: block\n      type: object\n    coinbase:\n      description: Coinbase transaction flag\n      type: boolean\n    concept:\n      example:\n        description: A cryptocurrency exchange or a digital currency exchange (DCE)\n          is a business that allows customers to trade cryptocurrencies or digital\n          currencies for other assets.\n        id: exchange\n        label: example\n        taxonomy: abuse\n        uri: https://example.com\n      properties:\n        description:\n          description: Description\n          example: A cryptocurrency exchange or a digital currency exchange (DCE)\n            is a business that allows customers to trade cryptocurrencies or digital\n            currencies for other assets.\n          title: description\n          type: string\n        id:\n          description: ID\n          example: exchange\n          title: id\n          type: string\n        label:\n          description: Label\n          example: example\n          title: label\n          type: string\n        taxonomy:\n          description: Taxonomy\n          example: abuse\n          title: taxonomy\n          type: string\n        uri:\n          description: URI\n          example: https://example.com\n          title: uri\n          type: string\n      required:\n      - description\n      - id\n      - label\n      - taxonomy\n      - uri\n      title: concept\n      type: object\n    currency:\n      description: crypto currency code\n      example: btc\n      title: currency\n      type: string\n    currency_stats:\n      example:\n        no_addresses: 12345\n        no_labels: 123\n        name: name\n        no_entities: 123\n        no_address_relations: 1234567\n        no_blocks: 12345\n        no_txs: 11\n        timestamp: 123456789\n      properties:\n        name:\n          title: name\n          type: string\n        no_address_relations:\n          example: 1234567\n          format: int32\n          title: no_address_relations\n          type: integer\n        no_addresses:\n          example: 12345\n          format: int32\n          title: no_addresses\n          type: integer\n        no_blocks:\n          example: 12345\n          format: int32\n          title: no_blocks\n          type: integer\n        no_entities:\n          example: 123\n          format: int32\n          title: no_entities\n          type: integer\n        no_labels:\n          example: 123\n          format: int32\n          title: no_labels\n          type: integer\n        no_txs:\n          description: number of transactions\n          example: 11\n          format: int32\n          title: no_txs\n          type: integer\n        timestamp:\n          description: Timestamp\n          example: 123456789\n          format: int32\n          title: timestamp\n          type: integer\n      title: statistics of a cryptocurrency\n      type: object\n    entity:\n      example:\n        total_spent:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        in_degree: 0\n        balance:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        no_addresses: 6\n        no_incoming_txs: 1\n        no_outgoing_txs: 5\n        out_degree: 5\n        first_tx:\n          tx_hash: tx_hash\n          height: 47\n          timestamp: 123456789\n        last_tx:\n          tx_hash: tx_hash\n          height: 47\n          timestamp: 123456789\n        entity: 123456\n        total_received:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        tags:\n          entity_tags:\n          - null\n          - null\n          address_tags:\n          - null\n          - null\n      properties:\n        balance:\n          $ref: '#/components/schemas/values'\n        entity:\n          description: Entity id\n          example: 123456\n          format: int32\n          title: entity\n          type: integer\n        first_tx:\n          $ref: '#/components/schemas/tx_summary'\n        in_degree:\n          format: int32\n          title: in_degree\n          type: integer\n        last_tx:\n          $ref: '#/components/schemas/tx_summary'\n        no_addresses:\n          description: number of contained addresses\n          format: int32\n          title: no_addresses\n          type: integer\n        no_incoming_txs:\n          format: int32\n          title: no_incoming_txs\n          type: integer\n        no_outgoing_txs:\n          format: int32\n          title: no_outgoing_txs\n          type: integer\n        out_degree:\n          format: int32\n          title: out_degree\n          type: integer\n        tags:\n          $ref: '#/components/schemas/address_and_entity_tags'\n        total_received:\n          $ref: '#/components/schemas/values'\n        total_spent:\n          $ref: '#/components/schemas/values'\n      required:\n      - balance\n      - entity\n      - first_tx\n      - in_degree\n      - last_tx\n      - no_addresses\n      - no_incoming_txs\n      - no_outgoing_txs\n      - out_degree\n      - total_received\n      - total_spent\n      title: entity\n      type: object\n    entity_addresses:\n      example:\n        next_page: next_page\n        addresses:\n        - total_spent:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          in_degree: 1\n          address: addressA\n          balance:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          no_incoming_txs: 5\n          no_outgoing_txs: 5\n          out_degree: 2\n          first_tx:\n            tx_hash: tx_hash\n            height: 47\n            timestamp: 123456789\n          last_tx:\n            tx_hash: tx_hash\n            height: 47\n            timestamp: 123456789\n          entity: 123456\n          total_received:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          tags:\n          - null\n          - null\n        - total_spent:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          in_degree: 1\n          address: addressA\n          balance:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          no_incoming_txs: 5\n          no_outgoing_txs: 5\n          out_degree: 2\n          first_tx:\n            tx_hash: tx_hash\n            height: 47\n            timestamp: 123456789\n          last_tx:\n            tx_hash: tx_hash\n            height: 47\n            timestamp: 123456789\n          entity: 123456\n          total_received:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          tags:\n          - null\n          - null\n      properties:\n        addresses:\n          items:\n            $ref: '#/components/schemas/address'\n          title: addresses\n          type: array\n        next_page:\n          format: string\n          title: next_page\n          type: string\n      title: entity_addresses\n      type: object\n    entity_id:\n      description: Entity id\n      example: 123456\n      format: int32\n      title: entity\n      type: integer\n    entity_tag:\n      allOf:\n      - $ref: '#/components/schemas/tag'\n      - $ref: '#/components/schemas/entity_tag_allOf'\n      title: entity_tag\n    entity_tags:\n      properties:\n        entity_tags:\n          items:\n            $ref: '#/components/schemas/entity_tag'\n          type: array\n        next_page:\n          format: string\n          title: next_page\n          type: string\n      required:\n      - entity_tags\n      type: object\n    height:\n      description: Height\n      example: 47\n      format: int32\n      minimum: 0\n      title: height\n      type: integer\n    label:\n      description: Label\n      example: example\n      title: label\n      type: string\n    link:\n      discriminator:\n        mapping:\n          account: '#/components/schemas/tx_account'\n          utxo: '#/components/schemas/link_utxo'\n        propertyName: tx_type\n      oneOf:\n      - $ref: '#/components/schemas/link_utxo'\n      - $ref: '#/components/schemas/tx_account'\n      title: link\n    link_utxo:\n      properties:\n        height:\n          description: Height\n          example: 47\n          format: int32\n          minimum: 0\n          title: height\n          type: integer\n        input_value:\n          $ref: '#/components/schemas/values'\n        output_value:\n          $ref: '#/components/schemas/values'\n        timestamp:\n          description: Timestamp\n          example: 123456789\n          format: int32\n          title: timestamp\n          type: integer\n        tx_hash:\n          description: Transaction hash\n          title: tx_hash\n          type: string\n        tx_type:\n          default: utxo\n          type: string\n      required:\n      - height\n      - input_value\n      - output_value\n      - timestamp\n      - tx_hash\n      - tx_type\n      type: object\n    links:\n      example:\n        next_page: next_page\n        links:\n        - null\n        - null\n      properties:\n        links:\n          items:\n            $ref: '#/components/schemas/link'\n          title: links\n          type: array\n        next_page:\n          format: string\n          title: next_page\n          type: string\n      title: links\n      type: object\n    neighbor:\n      example:\n        node_type: address\n        balance:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        received:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        id: id\n        value:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n        labels:\n        - labels\n        - labels\n        no_txs: 11\n      properties:\n        balance:\n          $ref: '#/components/schemas/values'\n        id:\n          description: address or entity id\n          title: id\n          type: string\n        labels:\n          description: labels\n          items:\n            type: string\n          title: labels\n          type: array\n        no_txs:\n          description: number of transactions\n          example: 11\n          format: int32\n          title: no_txs\n          type: integer\n        node_type:\n          description: address or entity\n          enum:\n          - address\n          - entity\n          title: node_type\n          type: string\n        received:\n          $ref: '#/components/schemas/values'\n        value:\n          $ref: '#/components/schemas/values'\n      required:\n      - balance\n      - id\n      - no_txs\n      - node_type\n      - received\n      - value\n      title: neighbor\n      type: object\n    neighbors:\n      example:\n        next_page: next_page\n        neighbors:\n        - node_type: address\n          balance:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          received:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          id: id\n          value:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          labels:\n          - labels\n          - labels\n          no_txs: 11\n        - node_type: address\n          balance:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          received:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          id: id\n          value:\n            fiat_values:\n            - code: code\n              value: 0.8008282\n            - code: code\n              value: 0.8008282\n            value: 6\n          labels:\n          - labels\n          - labels\n          no_txs: 11\n      properties:\n        neighbors:\n          items:\n            $ref: '#/components/schemas/neighbor'\n          title: neighbors\n          type: array\n        next_page:\n          format: string\n          title: next_page\n          type: string\n      title: neighbors\n      type: object\n    next_page:\n      format: string\n      title: next_page\n      type: string\n    no_addresses:\n      description: number of contained addresses\n      format: int32\n      title: no_addresses\n      type: integer\n    no_txs:\n      description: number of transactions\n      example: 11\n      format: int32\n      title: no_txs\n      type: integer\n    only_entity_ids:\n      items:\n        format: int32\n        type: integer\n      type: array\n    rate:\n      example:\n        code: code\n        value: 0.8008282\n      properties:\n        code:\n          description: iso currency code\n          title: code\n          type: string\n        value:\n          description: exchange rate\n          format: float\n          title: value\n          type: number\n      title: rate\n      type: object\n    rates:\n      example:\n        rates:\n        - code: code\n          value: 0.8008282\n        - code: code\n          value: 0.8008282\n        height: 47\n      properties:\n        height:\n          description: Height\n          example: 47\n          format: int32\n          minimum: 0\n          title: height\n          type: integer\n        rates:\n          items:\n            $ref: '#/components/schemas/rate'\n          title: rates\n          type: array\n      title: rates\n      type: object\n    search_result:\n      example:\n        currencies:\n        - addresses:\n          - addresses\n          - addresses\n          currency: btc\n          txs:\n          - txs\n          - txs\n        - addresses:\n          - addresses\n          - addresses\n          currency: btc\n          txs:\n          - txs\n          - txs\n        labels:\n        - labels\n        - labels\n      properties:\n        currencies:\n          items:\n            $ref: '#/components/schemas/search_result_by_currency'\n          title: currencies\n          type: array\n        labels:\n          description: The list of matching labels\n          items:\n            type: string\n          title: labels\n          type: array\n      title: search_result\n      type: object\n    search_result_by_currency:\n      example:\n        addresses:\n        - addresses\n        - addresses\n        currency: btc\n        txs:\n        - txs\n        - txs\n      properties:\n        addresses:\n          description: The list of found addresses\n          items:\n            type: string\n          title: addresses\n          type: array\n        currency:\n          description: crypto currency code\n          example: btc\n          title: currency\n          type: string\n        txs:\n          description: The list of found transaction ids\n          items:\n            type: string\n          title: txs\n          type: array\n      title: search_result_by_currency\n      type: object\n    search_result_labels:\n      description: The list of matching labels\n      items:\n        type: string\n      title: labels\n      type: array\n    search_result_leaf:\n      properties:\n        matching_addresses:\n          items:\n            $ref: '#/components/schemas/address'\n          title: matching_addresses\n          type: array\n        node:\n          $ref: '#/components/schemas/entity'\n        relation:\n          $ref: '#/components/schemas/neighbor'\n      title: search_result_leaf\n      type: object\n    search_result_level1:\n      allOf:\n      - $ref: '#/components/schemas/search_result_leaf'\n      - $ref: '#/components/schemas/search_result_level1_allOf'\n      title: search_result_level1\n    search_result_level2:\n      allOf:\n      - $ref: '#/components/schemas/search_result_leaf'\n      - $ref: '#/components/schemas/search_result_level2_allOf'\n      title: search_result_level2\n    search_result_level3:\n      allOf:\n      - $ref: '#/components/schemas/search_result_leaf'\n      - $ref: '#/components/schemas/search_result_level3_allOf'\n      title: search_result_level3\n    search_result_level4:\n      allOf:\n      - $ref: '#/components/schemas/search_result_leaf'\n      - $ref: '#/components/schemas/search_result_level4_allOf'\n      title: search_result_level4\n    search_result_level5:\n      allOf:\n      - $ref: '#/components/schemas/search_result_leaf'\n      - $ref: '#/components/schemas/search_result_level5_allOf'\n      title: search_result_level5\n    search_result_level6:\n      allOf:\n      - $ref: '#/components/schemas/search_result_leaf'\n      - $ref: '#/components/schemas/search_result_level6_allOf'\n      title: search_result_level6\n    stats:\n      example:\n        request_timestamp: request_timestamp\n        version: version\n        currencies:\n        - no_addresses: 12345\n          no_labels: 123\n          name: name\n          no_entities: 123\n          no_address_relations: 1234567\n          no_blocks: 12345\n          no_txs: 11\n          timestamp: 123456789\n        - no_addresses: 12345\n          no_labels: 123\n          name: name\n          no_entities: 123\n          no_address_relations: 1234567\n          no_blocks: 12345\n          no_txs: 11\n          timestamp: 123456789\n      properties:\n        currencies:\n          items:\n            $ref: '#/components/schemas/currency_stats'\n          title: currencies\n          type: array\n        request_timestamp:\n          title: request_timestamp\n          type: string\n        version:\n          title: version\n          type: string\n      title: stats\n      type: object\n    tag:\n      properties:\n        abuse:\n          description: Abuses\n          example: fraud\n          type: string\n        active:\n          description: whether the address has been ever used\n          example: false\n          type: boolean\n        category:\n          description: Category\n          example: exchange\n          type: string\n        currency:\n          description: crypto currency code\n          example: btc\n          title: currency\n          type: string\n        label:\n          description: Label\n          example: example\n          title: label\n          type: string\n        lastmod:\n          description: Last modified\n          example: 123456789\n          format: int32\n          type: integer\n        source:\n          description: Source\n          example: https://foobar.com\n          type: string\n        tagpack_uri:\n          description: Tagpack URI\n          example: https://example.com/tagpacks/sample.yaml\n          type: string\n      required:\n      - active\n      - currency\n      - label\n      type: object\n    tags:\n      oneOf:\n      - $ref: '#/components/schemas/entity_tags'\n      - $ref: '#/components/schemas/address_tags'\n      title: tags\n    taxonomy:\n      example:\n        taxonomy: abuse\n        uri: https://example.com\n      properties:\n        taxonomy:\n          description: Taxonomy\n          example: abuse\n          title: taxonomy\n          type: string\n        uri:\n          description: URI\n          example: https://example.com\n          title: uri\n          type: string\n      required:\n      - taxonomy\n      - uri\n      title: taxonomy\n      type: object\n    taxonomy_key:\n      description: Taxonomy\n      example: abuse\n      title: taxonomy\n      type: string\n    timestamp:\n      description: Timestamp\n      example: 123456789\n      format: int32\n      title: timestamp\n      type: integer\n    tx:\n      discriminator:\n        mapping:\n          account: '#/components/schemas/tx_account'\n          utxo: '#/components/schemas/tx_utxo'\n        propertyName: tx_type\n      oneOf:\n      - $ref: '#/components/schemas/tx_utxo'\n      - $ref: '#/components/schemas/tx_account'\n      title: tx\n    tx_account:\n      properties:\n        from_address:\n          description: Address\n          example: addressA\n          title: address\n          type: string\n        height:\n          description: Height\n          example: 47\n          format: int32\n          minimum: 0\n          title: height\n          type: integer\n        timestamp:\n          description: Timestamp\n          example: 123456789\n          format: int32\n          title: timestamp\n          type: integer\n        to_address:\n          description: Address\n          example: addressA\n          title: address\n          type: string\n        tx_hash:\n          description: Transaction hash\n          title: tx_hash\n          type: string\n        tx_type:\n          default: account\n          type: string\n        value:\n          $ref: '#/components/schemas/values'\n      required:\n      - from_address\n      - height\n      - timestamp\n      - to_address\n      - tx_hash\n      - tx_type\n      - value\n      type: object\n    tx_hash:\n      description: Transaction hash\n      title: tx_hash\n      type: string\n    tx_summary:\n      example:\n        tx_hash: tx_hash\n        height: 47\n        timestamp: 123456789\n      properties:\n        height:\n          description: Height\n          example: 47\n          format: int32\n          minimum: 0\n          title: height\n          type: integer\n        timestamp:\n          description: Timestamp\n          example: 123456789\n          format: int32\n          title: timestamp\n          type: integer\n        tx_hash:\n          description: Transaction hash\n          title: tx_hash\n          type: string\n      required:\n      - height\n      - timestamp\n      - tx_hash\n      title: tx_summary\n      type: object\n    tx_utxo:\n      properties:\n        coinbase:\n          description: Coinbase transaction flag\n          type: boolean\n        height:\n          description: Height\n          example: 47\n          format: int32\n          minimum: 0\n          title: height\n          type: integer\n        inputs:\n          description: Transaction inputs/outputs\n          items:\n            $ref: '#/components/schemas/tx_value'\n          type: array\n        outputs:\n          description: Transaction inputs/outputs\n          items:\n            $ref: '#/components/schemas/tx_value'\n          type: array\n        timestamp:\n          description: Timestamp\n          example: 123456789\n          format: int32\n          title: timestamp\n          type: integer\n        total_input:\n          $ref: '#/components/schemas/values'\n        total_output:\n          $ref: '#/components/schemas/values'\n        tx_hash:\n          description: Transaction hash\n          title: tx_hash\n          type: string\n        tx_type:\n          default: utxo\n          type: string\n      required:\n      - coinbase\n      - height\n      - timestamp\n      - total_input\n      - total_output\n      - tx_hash\n      - tx_type\n      type: object\n    tx_value:\n      example:\n        address:\n        - addressA\n        - addressA\n        value:\n          fiat_values:\n          - code: code\n            value: 0.8008282\n          - code: code\n            value: 0.8008282\n          value: 6\n      properties:\n        address:\n          items:\n            $ref: '#/components/schemas/address_id'\n          title: address\n          type: array\n        value:\n          $ref: '#/components/schemas/values'\n      required:\n      - address\n      - value\n      title: tx_value\n      type: object\n    tx_values:\n      description: Transaction inputs/outputs\n      items:\n        $ref: '#/components/schemas/tx_value'\n      type: array\n    uri:\n      description: URI\n      example: https://example.com\n      title: uri\n      type: string\n    values:\n      example:\n        fiat_values:\n        - code: code\n          value: 0.8008282\n        - code: code\n          value: 0.8008282\n        value: 6\n      properties:\n        fiat_values:\n          items:\n            $ref: '#/components/schemas/rate'\n          title: fiat_values\n          type: array\n        value:\n          format: int64\n          title: value\n          type: integer\n      title: values\n      type: object\n    address_tag_allOf:\n      properties:\n        address:\n          description: Address\n          example: addressA\n          title: address\n          type: string\n      required:\n      - address\n      type: object\n    entity_tag_allOf:\n      properties:\n        entity:\n          description: Entity id\n          example: 123456\n          format: int32\n          title: entity\n          type: integer\n      required:\n      - entity\n      type: object\n    search_result_level1_allOf:\n      properties:\n        paths:\n          description: Branches to matching entities\n          items:\n            $ref: '#/components/schemas/search_result_level2'\n          type: array\n      type: object\n    search_result_level2_allOf:\n      properties:\n        paths:\n          description: Branches to matching entities\n          items:\n            $ref: '#/components/schemas/search_result_level3'\n          type: array\n      type: object\n    search_result_level3_allOf:\n      properties:\n        paths:\n          description: Branches to matching entities\n          items:\n            $ref: '#/components/schemas/search_result_level4'\n          type: array\n      type: object\n    search_result_level4_allOf:\n      properties:\n        paths:\n          description: Branches to matching entities\n          items:\n            $ref: '#/components/schemas/search_result_level5'\n          type: array\n      type: object\n    search_result_level5_allOf:\n      properties:\n        paths:\n          description: Branches to matching entities\n          items:\n            $ref: '#/components/schemas/search_result_level6'\n          type: array\n      type: object\n    search_result_level6_allOf:\n      properties:\n        paths:\n          description: Branches to matching entities\n          items:\n            $ref: '#/components/schemas/search_result_leaf'\n          type: array\n      type: object\n  securitySchemes:\n    api_key:\n      in: header\n      name: Authorization\n      type: apiKey\n      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_api_key\n    cookieAuth:\n      in: cookie\n      name: session\n      type: apiKey\n      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_cookieAuth\n"
		}
	},
	"Error": "make ir: path \"/{currency}/addresses/{address}/links\": get: responses: 200: contents: application/json: schema: field links: item: oneOf: discriminator: unable to map account to #/components/schemas/tx_account"
}