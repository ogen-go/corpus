{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sdslabs/gasper"
		},
		"file": {
			"name": "openapi.json",
			"path": "docs/content/api/specs/openapi.json",
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Gasper Master API\",\n    \"description\": \"Handles authentication, creation/management of applications, databases, users and also provides a superuser API. \u003cbr\u003e\u003cbr\u003e Only a superuser can avail the superuser API. A superuser can **grant/revoke** superuser privileges to other users. A default  superuser is created every time a Gasper instance is launched whose credentials are defined in the `admin` section of `config.toml`, the main configuration file. A sample configuration file is available [here](https://github.com/sdslabs/gasper/blob/develop/config.sample.toml#L37).\u003cbr\u003e\u003cbr\u003e\\n**Note:-** Normally the applications and databases can only be managed by their owners but the superuser can bypass that check.\u003cbr\u003e\u003cbr\u003e\\n**PS:-** If you want to programmatically generate a client for this API, you can find the corresponding OpenAPI specifications [here](https://github.com/sdslabs/gasper/tree/develop/docs/content/api/specs). We recommend using [OpenAPI-Generator](https://openapi-generator.tech/) for generating clients.\",\n    \"contact\": {\n      \"name\": \"SDSLabs\",\n      \"url\": \"https://chat.sdslabs.co\",\n      \"email\": \"contact@sdslabs.co.in\"\n    },\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"https://github.com/sdslabs/gasper/blob/develop/LICENSE.md\"\n    },\n    \"version\": \"1.0\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Gasper\",\n    \"url\": \"https://github.com/sdslabs/gasper\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"auth\",\n      \"description\": \"Authentication for all endpoints\"\n    },\n    {\n      \"name\": \"apps\",\n      \"description\": \"Application management\"\n    },\n    {\n      \"name\": \"dbs\",\n      \"description\": \"Database management\"\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"User specific operations\"\n    },\n    {\n      \"name\": \"admin\",\n      \"description\": \"Operations with superuser privileges\"\n    }\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"Context\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"index\"\n        ],\n        \"properties\": {\n          \"index\": {\n            \"type\": \"string\",\n            \"description\": \"Entrypoint for an application\",\n            \"example\": \"index.js\"\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"description\": \"Port on which the application runs\",\n            \"example\": 3000,\n            \"default\": 80\n          },\n          \"rc_file\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is a Run Commands file present in the application's git repository's root directory?\",\n            \"default\": false\n          },\n          \"build\": {\n            \"type\": \"array\",\n            \"description\": \"Commands for installing application dependencies\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              \"npm install\",\n              \"grunt build\"\n            ]\n          },\n          \"run\": {\n            \"type\": \"array\",\n            \"description\": \"Commands for running the application\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              \"node index.js\"\n            ]\n          }\n        }\n      },\n      \"Git\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"repo_url\"\n        ],\n        \"properties\": {\n          \"repo_url\": {\n            \"type\": \"string\",\n            \"description\": \"Git Repository URL of the application\",\n            \"example\": \"https://github.com/sdslabs/gasper\"\n          },\n          \"access_token\": {\n            \"type\": \"string\",\n            \"description\": \"Access token for cloning the application's git repository\"\n          },\n          \"branch\": {\n            \"type\": \"string\",\n            \"description\": \"Specific branch to clone\",\n            \"default\": \"master\",\n            \"example\": \"master\"\n          }\n        }\n      },\n      \"Application\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"git\",\n          \"context\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the application\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password required for SSH access to the application's docker container\"\n          },\n          \"git\": {\n            \"$ref\": \"#/components/schemas/Git\"\n          },\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Context\"\n          },\n          \"env\": {\n            \"type\": \"object\",\n            \"description\": \"Environment variables required by the application\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          },\n          \"resources\": {\n            \"type\": \"object\",\n            \"description\": \"Resources required by the application\",\n            \"properties\": {\n              \"cpu\": {\n                \"type\": \"number\",\n                \"format\": \"float\",\n                \"example\": 0.25,\n                \"description\": \"Number of virtual CPUs\"\n              },\n              \"memory\": {\n                \"type\": \"number\",\n                \"format\": \"float\",\n                \"example\": 0.5,\n                \"description\": \"Memory in GigaBytes (GB)\"\n              }\n            }\n          }\n        }\n      },\n      \"CreatedApplication\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the application\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password required for SSH access to the application's docker container\"\n          },\n          \"git\": {\n            \"$ref\": \"#/components/schemas/Git\"\n          },\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Context\"\n          },\n          \"env\": {\n            \"type\": \"object\",\n            \"description\": \"Environment variables required by the application\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          },\n          \"resources\": {\n            \"type\": \"object\",\n            \"description\": \"Resources required by the application\",\n            \"properties\": {\n              \"cpu\": {\n                \"type\": \"number\",\n                \"format\": \"float\",\n                \"example\": 0.25,\n                \"description\": \"Number of virtual CPUs\"\n              },\n              \"memory\": {\n                \"type\": \"number\",\n                \"format\": \"float\",\n                \"example\": 0.5,\n                \"description\": \"Memory in GigaBytes (GB)\"\n              }\n            }\n          },\n          \"container_id\": {\n            \"type\": \"string\",\n            \"description\": \"ID of the application's docker container\"\n          },\n          \"container_port\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 35000,\n            \"description\": \"Port assigned by the node to the application's docker container\"\n          },\n          \"docker_image\": {\n            \"type\": \"string\",\n            \"description\": \"Docker image used in building the application's container\",\n            \"example\": \"sdsws/node:2.0\"\n          },\n          \"app_url\": {\n            \"type\": \"string\",\n            \"description\": \"The domain name of the application (DNS entry is managed by GenDNS ðŸ’¡)\",\n            \"example\": \"alphadose.app.sdslabs.co\"\n          },\n          \"host_ip\": {\n            \"type\": \"string\",\n            \"example\": \"192.168.208.206\",\n            \"description\": \"IPv4 address of the node\"\n          },\n          \"public_ip\": {\n            \"type\": \"string\",\n            \"example\": \"49.37.14.115\",\n            \"description\": \"Public IPv4 address of the node (if defined in config.toml of the node)\"\n          },\n          \"name_servers\": {\n            \"type\": \"array\",\n            \"description\": \"The DNS NameServers used by the application's docker container\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              \"8.8.8.8\",\n              \"8.8.4.4\"\n            ]\n          },\n          \"instance_type\": {\n            \"type\": \"string\",\n            \"description\": \"The kind of instance this application belongs to\",\n            \"example\": \"app\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"The programming language in which the application is written\",\n            \"example\": \"nodejs\",\n            \"enum\": [\n              \"php\",\n              \"nodejs\",\n              \"static\",\n              \"python2\",\n              \"python3\",\n              \"golang\",\n              \"ruby\",\n              \"rust\"\n            ]\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"description\": \"Owner of the application\",\n            \"example\": \"anish.mukherjee1996@gmail.com\"\n          },\n          \"ssh_cmd\": {\n            \"type\": \"string\",\n            \"description\": \"Command to SSH into the application's docker container\",\n            \"example\": \"ssh -p 2222 alphadose@192.168.208.206\"\n          },\n          \"_id\": {\n            \"type\": \"string\",\n            \"description\": \"Application's identifier assigned by MongoDB\"\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"password\",\n          \"email\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CreatedUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"admin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Field denoting superuser privileges\",\n            \"example\": true\n          },\n          \"_id\": {\n            \"type\": \"string\",\n            \"description\": \"User's identifier assigned by MongoDB\"\n          }\n        }\n      },\n      \"Login\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"password\",\n          \"email\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 200\n          },\n          \"expire\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-10-28T00:58:11+05:30\"\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"description\": \"The token required for authentication via bearer scheme\",\n            \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n          }\n        }\n      },\n      \"Database\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"password\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the database\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password of the database\"\n          }\n        }\n      },\n      \"CreatedDatabase\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the database\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password of the database\"\n          },\n          \"user\": {\n            \"type\": \"string\",\n            \"description\": \"Username of the database\"\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"description\": \"Owner of the database\"\n          },\n          \"db_url\": {\n            \"type\": \"string\",\n            \"description\": \"The domain name of the database (DNS entry is managed by GenDNS ðŸ’¡)\",\n            \"example\": \"alphadose.db.sdslabs.co\"\n          },\n          \"host_ip\": {\n            \"type\": \"string\",\n            \"description\": \"IPv4 address of the node where the database is deployed\",\n            \"example\": \"192.168.208.208\"\n          },\n          \"public_ip\": {\n            \"type\": \"string\",\n            \"example\": \"49.37.14.115\",\n            \"description\": \"Public IPv4 address of the node (if defined in config.toml of the node)\"\n          },\n          \"port\": {\n            \"type\": \"string\",\n            \"description\": \"Port on which the database server is running\",\n            \"example\": 35000\n          },\n          \"instance_type\": {\n            \"type\": \"string\",\n            \"description\": \"The kind of instance the database belongs to\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"The type of database\",\n            \"example\": \"mysql\",\n            \"enum\": [\n              \"mysql\",\n              \"mongodb\",\n              \"postgresql\",\n              \"redis\"\n            ]\n          }\n        }\n      },\n      \"Metrics\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\",\n            \"description\": \"Document's identifier assigned by MongoDB\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the application\",\n            \"example\": \"sampledose\"\n          },\n          \"host_ip\": {\n            \"type\": \"string\",\n            \"description\": \"IPv4 address of the node where the application is deployed\",\n            \"example\": \"192.168.208.208\"\n          },\n          \"alive\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is the application up and running?\"\n          },\n          \"online_cpus\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of available CPUs in the node\",\n            \"example\": 4\n          },\n          \"cpu_usage\": {\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"description\": \"Fraction of total CPUs utilized by the application\",\n            \"example\": 0.1\n          },\n          \"memory_usage\": {\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"description\": \"Fraction of memory utilized by the application\",\n            \"example\": 0.2\n          },\n          \"max_memory_usage\": {\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"description\": \"Highest fraction of memory utilized by the application in its lifetime\",\n            \"example\": 0.5\n          },\n          \"memory_limit\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"description\": \"Memory (in GigaBytes) alloted to the application\",\n            \"example\": 1\n          },\n          \"timestamp\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"description\": \"Unix timestamp of the metrics document\",\n            \"example\": 1576210138\n          }\n        }\n      },\n      \"Instances\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\",\n            \"description\": \"Document's identifier assigned by MongoDB\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the application or database\",\n            \"example\": \"Facebook\"\n          },\n          \"instance_type\": {\n            \"type\": \"string\",\n            \"description\": \"The kind of instance this application belongs to\",\n            \"example\": \"app\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"The programming language in which the application is written\",\n            \"example\": \"nodejs\",\n            \"enum\": [\n              \"php\",\n              \"nodejs\",\n              \"static\",\n              \"python2\",\n              \"python3\",\n              \"golang\",\n              \"ruby\",\n              \"rust\"\n            ]\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  },\n  \"paths\": {\n    \"/auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Login to get a Bearer token\",\n        \"operationId\": \"login\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Login\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Login successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Register a user\",\n        \"operationId\": \"register\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Registration successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"User created\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/refresh\": {\n      \"get\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Refresh JWT token using existing token\",\n        \"operationId\": \"refresh\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Refresh successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/instances\": {\n      \"get\": {\n        \"tags\": [\n          \"instances\"\n        ],\n        \"summary\": \"Fetch all instances owned by a user\",\n        \"operationId\": \"fetchIntancesByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Instances\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{language}\": {\n      \"post\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Create an application\",\n        \"operationId\": \"createApp\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Application\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"language\",\n            \"required\": true,\n            \"description\": \"The programming language in which the application is written\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"static\",\n                \"php\",\n                \"nodejs\",\n                \"python2\",\n                \"python3\",\n                \"golang\",\n                \"ruby\",\n                \"rust\"\n              ]\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Name of the application\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"description\": \"Password required for SSH access to the application's docker container\"\n                    },\n                    \"git\": {\n                      \"$ref\": \"#/components/schemas/Git\"\n                    },\n                    \"context\": {\n                      \"$ref\": \"#/components/schemas/Context\"\n                    },\n                    \"env\": {\n                      \"type\": \"object\",\n                      \"description\": \"Environment variables required by the application\",\n                      \"additionalProperties\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"resources\": {\n                      \"type\": \"object\",\n                      \"description\": \"Resources required by the application\",\n                      \"properties\": {\n                        \"cpu\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"example\": 0.25,\n                          \"description\": \"Number of virtual CPUs\"\n                        },\n                        \"memory\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"example\": 0.5,\n                          \"description\": \"Memory in GigaBytes (GB)\"\n                        }\n                      }\n                    },\n                    \"container_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"ID of the application's docker container\"\n                    },\n                    \"container_port\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"example\": 35000,\n                      \"description\": \"Port assigned by the node to the application's docker container\"\n                    },\n                    \"docker_image\": {\n                      \"type\": \"string\",\n                      \"description\": \"Docker image used in building the application's container\",\n                      \"example\": \"sdsws/node:2.0\"\n                    },\n                    \"app_url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The domain name of the application (DNS entry is managed by GenDNS ðŸ’¡)\",\n                      \"example\": \"alphadose.app.sdslabs.co\"\n                    },\n                    \"host_ip\": {\n                      \"type\": \"string\",\n                      \"example\": \"192.168.208.206\",\n                      \"description\": \"IPv4 address of the node\"\n                    },\n                    \"public_ip\": {\n                      \"type\": \"string\",\n                      \"example\": \"49.37.14.115\",\n                      \"description\": \"Public IPv4 address of the node (if defined in config.toml of the node)\"\n                    },\n                    \"name_servers\": {\n                      \"type\": \"array\",\n                      \"description\": \"The DNS NameServers used by the application's docker container\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"8.8.8.8\",\n                        \"8.8.4.4\"\n                      ]\n                    },\n                    \"instance_type\": {\n                      \"type\": \"string\",\n                      \"description\": \"The kind of instance this application belongs to\",\n                      \"example\": \"app\"\n                    },\n                    \"language\": {\n                      \"type\": \"string\",\n                      \"description\": \"The programming language in which the application is written\",\n                      \"example\": \"nodejs\",\n                      \"enum\": [\n                        \"php\",\n                        \"nodejs\",\n                        \"static\",\n                        \"python2\",\n                        \"python3\",\n                        \"golang\",\n                        \"ruby\",\n                        \"rust\"\n                      ]\n                    },\n                    \"owner\": {\n                      \"type\": \"string\",\n                      \"description\": \"Owner of the application\",\n                      \"example\": \"anish.mukherjee1996@gmail.com\"\n                    },\n                    \"ssh_cmd\": {\n                      \"type\": \"string\",\n                      \"description\": \"Command to SSH into the application's docker container\",\n                      \"example\": \"ssh -p 2222 alphadose@192.168.208.206\"\n                    },\n                    \"_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Application's identifier assigned by MongoDB\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps\": {\n      \"get\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Fetch all applications owned by a user\",\n        \"operationId\": \"fetchAppsByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedApplication\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{app}\": {\n      \"get\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Fetch a single application owned by a user\",\n        \"operationId\": \"fetchAppByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedApplication\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Update an application owned by a user\",\n        \"operationId\": \"updateAppByUser\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Application\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Name of the application\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"description\": \"Password required for SSH access to the application's docker container\"\n                    },\n                    \"git\": {\n                      \"$ref\": \"#/components/schemas/Git\"\n                    },\n                    \"context\": {\n                      \"$ref\": \"#/components/schemas/Context\"\n                    },\n                    \"env\": {\n                      \"type\": \"object\",\n                      \"description\": \"Environment variables required by the application\",\n                      \"additionalProperties\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"resources\": {\n                      \"type\": \"object\",\n                      \"description\": \"Resources required by the application\",\n                      \"properties\": {\n                        \"cpu\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"example\": 0.25,\n                          \"description\": \"Number of virtual CPUs\"\n                        },\n                        \"memory\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"example\": 0.5,\n                          \"description\": \"Memory in GigaBytes (GB)\"\n                        }\n                      }\n                    },\n                    \"container_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"ID of the application's docker container\"\n                    },\n                    \"container_port\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"example\": 35000,\n                      \"description\": \"Port assigned by the node to the application's docker container\"\n                    },\n                    \"docker_image\": {\n                      \"type\": \"string\",\n                      \"description\": \"Docker image used in building the application's container\",\n                      \"example\": \"sdsws/node:2.0\"\n                    },\n                    \"app_url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The domain name of the application (DNS entry is managed by GenDNS ðŸ’¡)\",\n                      \"example\": \"alphadose.app.sdslabs.co\"\n                    },\n                    \"host_ip\": {\n                      \"type\": \"string\",\n                      \"example\": \"192.168.208.206\",\n                      \"description\": \"IPv4 address of the node\"\n                    },\n                    \"public_ip\": {\n                      \"type\": \"string\",\n                      \"example\": \"49.37.14.115\",\n                      \"description\": \"Public IPv4 address of the node (if defined in config.toml of the node)\"\n                    },\n                    \"name_servers\": {\n                      \"type\": \"array\",\n                      \"description\": \"The DNS NameServers used by the application's docker container\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"8.8.8.8\",\n                        \"8.8.4.4\"\n                      ]\n                    },\n                    \"instance_type\": {\n                      \"type\": \"string\",\n                      \"description\": \"The kind of instance this application belongs to\",\n                      \"example\": \"app\"\n                    },\n                    \"language\": {\n                      \"type\": \"string\",\n                      \"description\": \"The programming language in which the application is written\",\n                      \"example\": \"nodejs\",\n                      \"enum\": [\n                        \"php\",\n                        \"nodejs\",\n                        \"static\",\n                        \"python2\",\n                        \"python3\",\n                        \"golang\",\n                        \"ruby\",\n                        \"rust\"\n                      ]\n                    },\n                    \"owner\": {\n                      \"type\": \"string\",\n                      \"description\": \"Owner of the application\",\n                      \"example\": \"anish.mukherjee1996@gmail.com\"\n                    },\n                    \"ssh_cmd\": {\n                      \"type\": \"string\",\n                      \"description\": \"Command to SSH into the application's docker container\",\n                      \"example\": \"ssh -p 2222 alphadose@192.168.208.206\"\n                    },\n                    \"_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Application's identifier assigned by MongoDB\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Delete an application owned by a user\",\n        \"operationId\": \"deleteAppByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{app}/rebuild\": {\n      \"patch\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Rebuild an application\",\n        \"operationId\": \"rebuildAppByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Name of the application\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"description\": \"Password required for SSH access to the application's docker container\"\n                    },\n                    \"git\": {\n                      \"$ref\": \"#/components/schemas/Git\"\n                    },\n                    \"context\": {\n                      \"$ref\": \"#/components/schemas/Context\"\n                    },\n                    \"env\": {\n                      \"type\": \"object\",\n                      \"description\": \"Environment variables required by the application\",\n                      \"additionalProperties\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"resources\": {\n                      \"type\": \"object\",\n                      \"description\": \"Resources required by the application\",\n                      \"properties\": {\n                        \"cpu\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"example\": 0.25,\n                          \"description\": \"Number of virtual CPUs\"\n                        },\n                        \"memory\": {\n                          \"type\": \"number\",\n                          \"format\": \"float\",\n                          \"example\": 0.5,\n                          \"description\": \"Memory in GigaBytes (GB)\"\n                        }\n                      }\n                    },\n                    \"container_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"ID of the application's docker container\"\n                    },\n                    \"container_port\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"example\": 35000,\n                      \"description\": \"Port assigned by the node to the application's docker container\"\n                    },\n                    \"docker_image\": {\n                      \"type\": \"string\",\n                      \"description\": \"Docker image used in building the application's container\",\n                      \"example\": \"sdsws/node:2.0\"\n                    },\n                    \"app_url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The domain name of the application (DNS entry is managed by GenDNS ðŸ’¡)\",\n                      \"example\": \"alphadose.app.sdslabs.co\"\n                    },\n                    \"host_ip\": {\n                      \"type\": \"string\",\n                      \"example\": \"192.168.208.206\",\n                      \"description\": \"IPv4 address of the node\"\n                    },\n                    \"public_ip\": {\n                      \"type\": \"string\",\n                      \"example\": \"49.37.14.115\",\n                      \"description\": \"Public IPv4 address of the node (if defined in config.toml of the node)\"\n                    },\n                    \"name_servers\": {\n                      \"type\": \"array\",\n                      \"description\": \"The DNS NameServers used by the application's docker container\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"8.8.8.8\",\n                        \"8.8.4.4\"\n                      ]\n                    },\n                    \"instance_type\": {\n                      \"type\": \"string\",\n                      \"description\": \"The kind of instance this application belongs to\",\n                      \"example\": \"app\"\n                    },\n                    \"language\": {\n                      \"type\": \"string\",\n                      \"description\": \"The programming language in which the application is written\",\n                      \"example\": \"nodejs\",\n                      \"enum\": [\n                        \"php\",\n                        \"nodejs\",\n                        \"static\",\n                        \"python2\",\n                        \"python3\",\n                        \"golang\",\n                        \"ruby\",\n                        \"rust\"\n                      ]\n                    },\n                    \"owner\": {\n                      \"type\": \"string\",\n                      \"description\": \"Owner of the application\",\n                      \"example\": \"anish.mukherjee1996@gmail.com\"\n                    },\n                    \"ssh_cmd\": {\n                      \"type\": \"string\",\n                      \"description\": \"Command to SSH into the application's docker container\",\n                      \"example\": \"ssh -p 2222 alphadose@192.168.208.206\"\n                    },\n                    \"_id\": {\n                      \"type\": \"string\",\n                      \"description\": \"Application's identifier assigned by MongoDB\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{app}/transfer/{userEmail}\": {\n      \"patch\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Transfer ownership of an application to another user\",\n        \"operationId\": \"transferAppByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"required\": true,\n            \"description\": \"Email ID of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{app}/term\": {\n      \"get\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Fetch a browser terminal instance for an application owned by a user\",\n        \"operationId\": \"fetchTerminalByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The URL endpoint for accessing the browser terminal instance in the form of domain_name:port\",\n                      \"example\": \"master.sdslabs.co:51000\"\n                    },\n                    \"raw_url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The URL endpoint for accessing the browser terminal instance in the form of ip_address:port\",\n                      \"example\": \"10.43.3.24:51000\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{app}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Fetch logs of an application\",\n        \"operationId\": \"fetchLogsByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"tail\",\n            \"description\": \"Fetch the last **n** logs (Fetches all logs if not specified)\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 3\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"2019-10-28T05:46:19.012861400Z Server listening on port 3000\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/apps/{app}/metrics\": {\n      \"get\": {\n        \"tags\": [\n          \"apps\"\n        ],\n        \"summary\": \"Fetch metrics of an application\",\n        \"operationId\": \"fetchMetricsByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"seconds\",\n            \"description\": \"Fetch metrics in the last **n** seconds\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 8\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"minutes\",\n            \"description\": \"Fetch metrics in the last **n** minutes\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 7\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"hours\",\n            \"description\": \"Fetch metrics in the last **n** hours\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 6\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"days\",\n            \"description\": \"Fetch metrics in the last **n** days\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 5\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"weeks\",\n            \"description\": \"Fetch metrics in the last **n** weeks\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 4\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"months\",\n            \"description\": \"Fetch metrics in the last **n** months\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 3\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"years\",\n            \"description\": \"Fetch metrics in the last **n** years\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 2\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"decades\",\n            \"description\": \"Fetch metrics in the last **n** decades\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Metrics\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/dbs/{databaseType}\": {\n      \"post\": {\n        \"tags\": [\n          \"dbs\"\n        ],\n        \"summary\": \"Create a database\",\n        \"operationId\": \"createDB\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Database\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"databaseType\",\n            \"required\": true,\n            \"description\": \"The type of database\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"mysql\",\n                \"mongodb\",\n                \"postgresql\",\n                \"redis\"\n              ]\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"Name of the database\"\n                    },\n                    \"password\": {\n                      \"type\": \"string\",\n                      \"description\": \"Password of the database\"\n                    },\n                    \"user\": {\n                      \"type\": \"string\",\n                      \"description\": \"Username of the database\"\n                    },\n                    \"owner\": {\n                      \"type\": \"string\",\n                      \"description\": \"Owner of the database\"\n                    },\n                    \"db_url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The domain name of the database (DNS entry is managed by GenDNS ðŸ’¡)\",\n                      \"example\": \"alphadose.db.sdslabs.co\"\n                    },\n                    \"host_ip\": {\n                      \"type\": \"string\",\n                      \"description\": \"IPv4 address of the node where the database is deployed\",\n                      \"example\": \"192.168.208.208\"\n                    },\n                    \"public_ip\": {\n                      \"type\": \"string\",\n                      \"example\": \"49.37.14.115\",\n                      \"description\": \"Public IPv4 address of the node (if defined in config.toml of the node)\"\n                    },\n                    \"port\": {\n                      \"type\": \"string\",\n                      \"description\": \"Port on which the database server is running\",\n                      \"example\": 35000\n                    },\n                    \"instance_type\": {\n                      \"type\": \"string\",\n                      \"description\": \"The kind of instance the database belongs to\"\n                    },\n                    \"language\": {\n                      \"type\": \"string\",\n                      \"description\": \"The type of database\",\n                      \"example\": \"mysql\",\n                      \"enum\": [\n                        \"mysql\",\n                        \"mongodb\",\n                        \"postgresql\",\n                        \"redis\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/dbs\": {\n      \"get\": {\n        \"tags\": [\n          \"dbs\"\n        ],\n        \"summary\": \"Fetch all databases owned by a user\",\n        \"operationId\": \"fetchDbsByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedDatabase\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/dbs/{db}\": {\n      \"get\": {\n        \"tags\": [\n          \"dbs\"\n        ],\n        \"summary\": \"Fetch a single database owned by a user\",\n        \"operationId\": \"fetchDbByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"db\",\n            \"required\": true,\n            \"description\": \"Name of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedDatabase\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"dbs\"\n        ],\n        \"summary\": \"Delete a single database owned by a user\",\n        \"operationId\": \"deleteDbByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"db\",\n            \"required\": true,\n            \"description\": \"Name of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/dbs/{db}/transfer/{userEmail}\": {\n      \"patch\": {\n        \"tags\": [\n          \"dbs\"\n        ],\n        \"summary\": \"Transfer ownership of a database to another user\",\n        \"operationId\": \"transferDbByUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"db\",\n            \"required\": true,\n            \"description\": \"Name of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"required\": true,\n            \"description\": \"Email ID of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Fetch logged in user's info\",\n        \"operationId\": \"fetchUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"username\": {\n                      \"type\": \"string\",\n                      \"example\": \"alphadose\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"example\": \"anish.mukherjee1996@gmail.com\"\n                    },\n                    \"admin\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"user deleted\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/password\": {\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update the password of the logged in user\",\n        \"operationId\": \"updatePassword\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"old_password\": {\n                    \"type\": \"string\",\n                    \"description\": \"The current password in use\",\n                    \"example\": \"alphadose\"\n                  },\n                  \"new_password\": {\n                    \"type\": \"string\",\n                    \"description\": \"The new password meant to replace the old one\",\n                    \"example\": \"betadose\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"password updated\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/apps\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch all applications with/without a filter defined by query params\",\n        \"operationId\": \"fetchAppsByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"description\": \"Name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"owner\",\n            \"description\": \"Owner of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"language\",\n            \"description\": \"Language in which the application is written\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"nodejs\",\n              \"enum\": [\n                \"php\",\n                \"static\",\n                \"nodejs\",\n                \"python2\",\n                \"python3\",\n                \"golang\",\n                \"ruby\",\n                \"rust\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"docker_image\",\n            \"description\": \"Docker Image used in building the application's container\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"sdsws/node:2.0\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"host_ip\",\n            \"description\": \"IPv4 address of the node in which the application is deployed\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"192.168.208.208\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"git_url\",\n            \"description\": \"Application's Git Repository URL\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"container_port\",\n            \"description\": \"Port assigned by the node to the application's docker container\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": 35000\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedApplication\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/apps/{app}\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch a single application\",\n        \"operationId\": \"fetchAppByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedApplication\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Delete an application\",\n        \"operationId\": \"deleteAppByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"app\",\n            \"required\": true,\n            \"description\": \"The name of the application\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/dbs\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch all databases with/without a filter defined by query params\",\n        \"operationId\": \"fetchDbsByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"description\": \"Name of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"user\",\n            \"description\": \"User of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"owner\",\n            \"description\": \"Owner of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"language\",\n            \"description\": \"Type of the database\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"mysql\",\n              \"enum\": [\n                \"mysql\",\n                \"mongodb\",\n                \"postgresql\",\n                \"redis\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"host_ip\",\n            \"description\": \"IPv4 address of the node in which the database is deployed\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"192.168.208.208\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"container_port\",\n            \"description\": \"Port assigned by the node to the database's docker container\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": 35000\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedDatabase\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/dbs/{db}\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch a single database\",\n        \"operationId\": \"fetchDbByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"db\",\n            \"required\": true,\n            \"description\": \"Name of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedDatabase\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Delete a single database\",\n        \"operationId\": \"deleteDbByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"db\",\n            \"required\": true,\n            \"description\": \"Name of the database\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/users\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch all users with/without a filter defined by query params\",\n        \"operationId\": \"fetchUsersByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"description\": \"Name of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"email\",\n            \"description\": \"Email of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"admin\",\n            \"description\": \"Field denoting superuser privileges\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedUser\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/users/{userEmail}\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch a single user\",\n        \"operationId\": \"fetchUserByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"required\": true,\n            \"description\": \"Email ID of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CreatedUser\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Delete a single user\",\n        \"operationId\": \"deleteUserByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"required\": true,\n            \"description\": \"Email ID of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/users/{userEmail}/grant\": {\n      \"patch\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Grant superuser privileges to a single user\",\n        \"operationId\": \"grantSuperuserPrivilege\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"required\": true,\n            \"description\": \"Email ID of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/users/{userEmail}/revoke\": {\n      \"patch\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Revoke superuser privileges from a single user\",\n        \"operationId\": \"revokeSuperuserPrivilege\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"required\": true,\n            \"description\": \"Email ID of the user\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/nodes\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch bind addresses(IP:Port) of all microservices on all nodes\",\n        \"operationId\": \"fetchNodesByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"master\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:3000\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"genproxy\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:80\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"gendns\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:53\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"appmaker\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:4000\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"mongodb\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:9000\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"mysql\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:9000\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"postgresql\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:9000\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"redis\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:9000\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"genssh\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:2222\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/admin/nodes/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Fetch bind addresses(IP:Port) of a single microservice on all nodes\",\n        \"operationId\": \"fetchNodeByAdmin\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"description\": \"Bearer Token Authentication\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"type\",\n            \"required\": true,\n            \"description\": \"Type of microservice\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"master\",\n              \"enum\": [\n                \"master\",\n                \"workers\",\n                \"master\",\n                \"genproxy\",\n                \"appmaker\",\n                \"genssh\",\n                \"gendns\",\n                \"mysql\",\n                \"mongodb\",\n                \"postgresql\",\n                \"redis\"\n              ]\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"master\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"192.168.208.206:3000\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Token is expired\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"INTERNAL_SERVER_ERROR\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: paths: /admin/nodes/{type}: get: fetchNodeByAdmin: parameters: parse parameter \"type\": schema: parse enum values: duplicate enum value: 'master'"
}