{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-tools"
		},
		"file": {
			"name": "invalid.yaml",
			"path": "openapi-cli/src/test/resources/generators/client/swagger/invalid.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Uber API\n  description: Move your app forward with the Uber API\n  version: 1.0.0\nservers:\n  - url: https://api.uber.com/v1\npaths:\n  /products/{country}:\n    get:\n      summary: Product Types\n      description: The Products endpoint returns information about the Uber products\n        offered at a given location. The response includes the display name and\n        other details about each product, and lists the products in the proper\n        display order.\n      parameters:\n        - name: latitude\n          in: query\n          description: Latitude component of location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: longitude\n          in: query\n          description: Longitude component of location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: country\n          in: path\n          description: Country name.\n          required: true\n          schema:\n            type: string\n      tags:\n        - Products\n      responses:\n        \"200\":\n          description: An array of products\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Product\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    apikey:\n      type: apiKey\n      name: server_token\n      in: query\n  schemas:\n    Product:\n      properties:\n        product_id:\n          type: int\n        description:\n          type: string\n          description: Description of product.\n        display_name:\n          type: string\n          description: Display name of product.\n        capacity:\n          type: integer\n          description: Capacity of product. For example, 4 people.\n        image:\n          type: string\n          description: Image URL representing the product.\n    ProductList:\n      properties:\n        products:\n          description: Contains the list of products\n          type: array\n          items:\n            $ref: \"#/components/schemas/Product\"\n    PriceEstimate:\n      properties:\n        product_id:\n          type: string\n          description: Unique identifier representing a specific product for a given\n            latitude \u0026 longitude. For example, uberX in San Francisco will have\n            a different product_id than uberX in Los Angeles\n        currency_code:\n          type: string\n          description: \"[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.\"\n        display_name:\n          type: string\n          description: Display name of product.\n        estimate:\n          type: string\n          description: Formatted string of estimate in local currency of the start\n            location. Estimate could be a range, a single number (flat rate) or\n            \"Metered\" for TAXI.\n        low_estimate:\n          type: number\n          description: Lower bound of the estimated price.\n        high_estimate:\n          type: number\n          description: Upper bound of the estimated price.\n        surge_multiplier:\n          type: number\n          description: Expected surge multiplier. Surge is active if surge_multiplier is\n            greater than 1. Price estimate already factors in the surge\n            multiplier.\n    Profile:\n      properties:\n        first_name:\n          type: string\n          description: First name of the Uber user.\n        last_name:\n          type: string\n          description: Last name of the Uber user.\n        email:\n          type: string\n          description: Email address of the Uber user\n        picture:\n          type: string\n          description: Image URL of the Uber user.\n        promo_code:\n          type: string\n          description: Promo code of the Uber user.\n    Activity:\n      properties:\n        uuid:\n          type: string\n          description: Unique identifier for the activity\n    Activities:\n      properties:\n        offset:\n          type: integer\n          format: int32\n          description: Position in pagination.\n        limit:\n          type: integer\n          format: int32\n          description: Number of items to retrieve (100 max).\n        count:\n          type: integer\n          format: int32\n          description: Total number of items available.\n        history:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Activity\"\n    Error:\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n        fields:\n          type: string\n"
		}
	},
	"Error": "parse: paths: /products/{country}: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: reference \"#/components/schemas/Product\": parse schema: product_id: parse schema: unexpected schema type: \"int\""
}