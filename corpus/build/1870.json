{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Rebilly/api-definitions"
		},
		"file": {
			"name": "storefront.yaml",
			"path": "openapi/storefront.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '0.1'\n  title: Rebilly Storefront REST API\n  contact:\n    name: Rebilly API Support\n    url: 'https://www.rebilly.com/contact/'\n    email: integrations@rebilly.com\n  license:\n    name: Rebilly\n    url: 'https://www.rebilly.com/api-license/'\n  termsOfService: 'https://www.rebilly.com/terms-of-use/'\n  x-logo:\n    url: 'https://rebilly-core.redoc.ly/rb_apiLogo.svg'\n    backgroundColor: '#0033A0'\n  description: |\n    # Warning\n\n    The Rebilly Storefront API is experimental and subject to change.\n\n    # Introduction\n\n    The Rebilly Storefront API is built on HTTP.  Our API is RESTful.  It has predictable\n    resource URLs.  It returns HTTP response codes to indicate errors.  It also\n    accepts and returns JSON in the HTTP body. You can use your favorite\n    HTTP/REST library for your programming language to use Rebilly's Storefront API.\ntags:\n  - name: Account\n  - name: Authentication\n  - name: Billing Portals\n  - name: Checkout Forms\n  - name: Email verification\n  - name: Password reset\n  - name: KYC Documents\n  - name: Payment Instruments\n  - name: Purchases\n  - name: Transactions\n  - name: Orders\n  - name: Invoices\n  - name: Products\n  - name: Plans\n  - name: Websites\nx-tagGroups:\n  - name: Account management\n    tags:\n      - Account\n      - Authentication\n      - Billing Portals\n      - Email verification\n      - Password reset\n      - KYC Documents\n  - name: Payments\n    tags:\n      - Payment Instruments\n      - Transactions\n  - name: Orders\n    tags:\n      - Checkout Forms\n      - Purchases\n      - Orders\n      - Invoices\n      - Products\n      - Plans\n  - name: System\n    tags:\n      - Websites\nservers:\n  - url: 'https://api-sandbox.rebilly.com/storefront/organizations/{organizationId}'\n    description: Sandbox server with organizationId.\n    variables:\n      organizationId:\n        default: unknown\n        description: Your organization ID.\n  - url: 'https://api.rebilly.com/storefront/organizations/{organizationId}'\n    description: Live server with organizationId.\n    variables:\n      organizationId:\n        default: unknown\n        description: Your organization ID.\n  - url: 'https://api-sandbox.rebilly.com/storefront'\n    description: Sandbox Server.\n  - url: 'https://api.rebilly.com/storefront'\n    description: Live Server.\ncomponents:\n  securitySchemes:\n    CustomerJWT:\n      $ref: components/securitySchemes/CustomerJWT.yaml\n    PublishableApiKey:\n      $ref: components/securitySchemes/PublishableApiKey.yaml\npaths:\n  '/account':\n    $ref: paths/storefront/account.yaml\n  '/account/forgot-password':\n    $ref: paths/storefront/account@forgot-password.yaml\n  '/account/password':\n    $ref: paths/storefront/account@password.yaml\n  '/account/resend-verification':\n    $ref: paths/storefront/account@resend-verification.yaml\n  '/account/reset-password/{token}':\n    $ref: paths/storefront/account@reset-password@{token}.yaml\n  '/account/verification/{token}':\n    $ref: paths/storefront/account@verification@{token}.yaml\n  '/billing-portals/{slug}':\n    $ref: paths/storefront/billing-portals@{slug}.yaml\n  '/checkout-forms/{id}':\n    $ref: paths/storefront/checkout-forms@{id}.yaml\n  '/invoices':\n    $ref: paths/storefront/invoices.yaml\n  '/invoices/{id}':\n    $ref: paths/storefront/invoices@{id}.yaml\n  '/kyc-documents':\n    $ref: paths/storefront/kyc-documents.yaml\n  '/kyc-documents/{id}':\n    $ref: paths/storefront/kyc-documents@{id}.yaml\n  '/kyc-requests/{id}':\n    $ref: paths/storefront/kyc-requests@{id}.yaml\n  '/login':\n    $ref: paths/storefront/login.yaml\n  '/logout':\n    $ref: paths/storefront/logout.yaml\n  '/orders':\n    $ref: paths/storefront/orders.yaml\n  '/orders/{id}':\n    $ref: paths/storefront/orders@{id}.yaml\n  '/orders/{id}/cancellation':\n    $ref: paths/storefront/orders@{id}@cancellation.yaml\n  '/payment':\n    $ref: paths/storefront/payment.yaml\n  '/payment-instruments':\n    $ref: paths/storefront/payment-instruments.yaml\n  '/payment-instruments/{id}':\n    $ref: paths/storefront/payment-instruments@{id}.yaml\n  '/payment-instruments/{id}/deactivation':\n    $ref: paths/storefront/payment-instruments@{id}@deactivation.yaml\n  '/payment-instruments/{id}/setup':\n    $ref: paths/storefront/payment-instruments@{id}@setup.yaml\n  '/plans':\n    $ref: paths/storefront/plans.yaml\n  '/plans/{id}':\n    $ref: paths/storefront/plans@{id}.yaml\n  '/products':\n    $ref: paths/storefront/products.yaml\n  '/products/{id}':\n    $ref: paths/storefront/products@{id}.yaml\n  '/purchase':\n    $ref: paths/storefront/purchase.yaml\n  '/preview-purchase':\n    $ref: paths/storefront/preview-purchase.yaml\n  '/ready-to-pay':\n    $ref: paths/storefront/ready-to-pay.yaml\n  '/register':\n    $ref: paths/storefront/register.yaml\n  '/transactions':\n    $ref: paths/storefront/transactions.yaml\n  '/transactions/{id}':\n    $ref: paths/storefront/transactions@{id}.yaml\n  '/websites/{id}':\n    $ref: paths/storefront/websites@{id}.yaml\n"
		}
	},
	"Error": "parse: /account/password: referenced pathItem not supported"
}