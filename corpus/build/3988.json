{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Traits_TraitDbId_GET_PUT.yaml",
			"path": "Specification/BrAPI-Phenotyping/Traits/Traits_TraitDbId_GET_PUT.yaml",
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /traits/{traitDbId}:\n    get:\n      summary: Get the details of a specific Trait\n      description: |-\n        Retrieve the details of a single trait\n\n        An Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.\n      parameters:\n      - description: Id of the trait to retrieve details of.\n        in: path\n        name: traitDbId\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/TraitSingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Traits\n    put:\n      summary: Update an existing Trait\n      description: Update an existing trait\n      parameters:\n      - description: Id of the trait to retrieve details of.\n        in: path\n        name: traitDbId\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TraitNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/TraitSingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Traits\ncomponents:\n  responses:\n    TraitSingleResponse:\n      content:\n        application/json:\n          schema:\n            title: TraitSingleResponse\n            type: object\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                $ref: '#/components/schemas/Trait'\n            required:\n            - metadata\n            - result\n      description: OK\n      headers: {}\n"
		}
	},
	"Error": "parse: paths: /traits/{traitDbId}: get: : parameters: parse parameter \"\": resolve \"#/components/parameters/authorizationHeader\" reference: component by reference \"#/components/parameters/authorizationHeader\" not found"
}