{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "moderation-messages.yml",
			"path": "applications/dashboard/openapi/moderation-messages.yml",
			"content": "openapi: 3.0.3\ninfo:\npaths:\n    /moderation-messages:\n        post:\n            summary: Post a moderation message.\n            tags:\n                - Moderation Messages\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ModerationMessagePost\"\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/ModerationMessage\"\n                                type: array\n                    description: Success\n        get:\n            summary: Get a list of moderation messages.\n            tags:\n                - Moderation Messages\n            parameters:\n                - name: isEnabled\n                  description: Whether the message is enabled or not.\n                  in: query\n                  schema:\n                      type: boolean\n                - name: recordID\n                  description: Filter by recordID\n                  in: query\n                  schema:\n                      $ref: \"#/components/schemas/RangeExpression\"\n                - name: type\n                  in: query\n                  description: Filter by message type.\n                  schema:\n                      type: string\n                      enum:\n                          - casual\n                          - info\n                          - alert\n                          - warning\n                - name: layoutViewType\n                  in: query\n                  description: Filter messages by the layoutViewType\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        \"application/json\":\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/ModerationMessage\"\n    /moderation-messages/{id}:\n        parameters:\n            - name: id\n              in: path\n              required: true\n              schema:\n                  type: integer\n        get:\n            summary: Get a moderation message by its ID.\n            tags:\n                - Moderation Messages\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/ModerationMessage\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        patch:\n            summary: Edit a moderation message.\n            tags:\n                - Moderation Messages\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ModerationMessagePatch\"\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/ModerationMessage\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        delete:\n            summary: Delete a moderation message.\n            tags:\n                - Moderation Messages\n            responses:\n                \"204\":\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n    /moderation-messages/{id}/dismiss:\n        parameters:\n            - name: id\n              in: path\n              required: true\n              schema:\n                  type: integer\n        put:\n            summary: Dismiss a moderation message for the session user.\n            tags:\n                - Moderation Messages\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        \"application/json\":\n                            schema:\n                                type: object\n                                properties:\n                                    dismissed:\n                                        type: boolean\ncomponents:\n    schemas:\n        ModerationMessage:\n            type: object\n            properties:\n                moderationMessageID:\n                    type: integer\n                    description: The id of the message.\n                body:\n                    type: string\n                    description: The content of the message.\n                format:\n                    $ref: \"#/components/schemas/Format\"\n                isDismissible:\n                    type: boolean\n                    description: Whether the moderation message can be dismissed by a user.\n                isEnabled:\n                    type: boolean\n                    description: Whether the message is enabled.\n                recordType:\n                    type: string\n                    nullable: true\n                    enum:\n                        - category\n                    description: The record type (i.e., category) associated with the message, if any.\n                recordID:\n                    type: integer\n                    nullable: true\n                    description: The recordID associated with the message, if any.\n                includeDescendants:\n                    type: boolean\n                    description: Whether to display the message for descendants of the record it's associated with (i.e., subcategories).\n                type:\n                    type: string\n                    description: The type of moderation message.\n                    enum:\n                        - casual\n                        - info\n                        - alert\n                        - warning\n                viewLocation:\n                    type: string\n                    description: Where on the page the message should appear.\n                    enum:\n                        - content\n                        - panel\n                layoutViewType:\n                    type: string\n            required:\n                - body\n                - format\n                - viewLocation\n                - moderationMessageID\n                - isEnabled\n                - isDismissible\n        ModerationMessagePost:\n            type: object\n            properties:\n                body:\n                    type: string\n                    description: The content of the message.\n                format:\n                    $ref: \"#/components/schemas/Format\"\n                isDismissible:\n                    type: boolean\n                    description: Whether the moderation message can be dismissed by a user.\n                isEnabled:\n                    type: boolean\n                    description: Whether the message is enabled.\n                recordType:\n                    type: string\n                    nullable: true\n                    enum:\n                        - category\n                    description: The record type (i.e., category) associated with the message, if any.\n                recordID:\n                    type: integer\n                    nullable: true\n                    description: The recordID associated with the message, if any.\n                includeDescendants:\n                    type: boolean\n                    description: Whether to display the message for descendants of the record it's associated with (i.e., subcategories).\n                type:\n                    type: string\n                    description: The type of moderation message.\n                    enum:\n                        - casual\n                        - info\n                        - alert\n                        - warning\n                viewLocation:\n                    type: string\n                    description: Where on the page the message should appear.\n                    enum:\n                        - content\n                        - panel\n                layoutViewType:\n                    type: string\n            required:\n                - body\n                - format\n                - layoutViewType\n                - viewLocation\n        ModerationMessagePatch:\n            type: object\n            properties:\n                body:\n                    type: string\n                    description: The content of the message.\n                format:\n                    $ref: \"#/components/schemas/Format\"\n                isDismissible:\n                    type: boolean\n                    description: Whether the moderation message can be dismissed by a user.\n                    default: false\n                isEnabled:\n                    type: boolean\n                    description: Whether the message is enabled.\n                    default: false\n                recordType:\n                    type: string\n                    nullable: true\n                    enum:\n                        - category\n                    description: The record type (i.e., category) associated with the message, if any.\n                    default: null\n                recordID:\n                    type: integer\n                    nullable: true\n                    description: The recordID associated with the message, if any.\n                    default: null\n                includeDescendants:\n                    type: boolean\n                    description: Whether to display the message for descendants of the record it's associated with (i.e., subcategories).\n                type:\n                    type: string\n                    description: The type of moderation message.\n                    enum:\n                        - casual\n                        - info\n                        - alert\n                        - warning\n                viewLocation:\n                    type: string\n                    description: Where on the page the message should appear.\n                    enum:\n                        - content\n                        - panel\n                layoutViewType:\n                    type: string\n"
		}
	},
	"Error": "parse: paths: /moderation-messages: get: operation \"\": parameters: parse parameter \"recordID\": schema: parse schema: reference \"#/components/schemas/RangeExpression\": resolve reference \"#/components/schemas/RangeExpression\": schema not found"
}