{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opengeospatial/ogcapi-features"
		},
		"file": {
			"name": "ogcapi-features-1-example2.yaml",
			"path": "core/examples/openapi/ogcapi-features-1-example2.yaml",
			"content": "openapi: 3.0.2\ninfo:\n  title: \"A sample API conforming to the draft standard OGC API - Features - Part 1: Core\"\n  version: '1.0.0'\n  description: |-\n    This is a sample OpenAPI definition that conforms to the conformance\n    classes \"Core\", \"GeoJSON\", \"HTML\" and \"OpenAPI 3.0\" of the draft\n    standard \"OGC API - Features - Part 1: Core\".\n\n    This example differs from the [other example](ogcapi-features-1-example1.yaml)\n    in that each feature collections is specified explicitly in its own path, not using a path\n    parameter. This API definiton is more verbose, but provides information about the feature\n    collection 'buildings' (paths `/collections/buildings`), the schema of the building features\n    (schema `buildingGeoJSON`) and a filter parameter for building features (parameter `function`).\n  contact:\n    name: Acme Corporation\n    email: info@example.org\n    url: 'http://example.org/'\n  license:\n    name: CC-BY 4.0 license\n    url: 'https://creativecommons.org/licenses/by/4.0/'\nservers:\n  - url: 'https://data.example.org/'\n    description: Production server\n  - url: 'https://dev.example.org/'\n    description: Development server\ntags:\n  - name: Capabilities\n    description: |-\n      essential characteristics of this API\n  - name: Data\n    description: |-\n      access to data (features)\npaths:\n  '/':\n    get:\n      tags:\n        - Capabilities\n      summary: landing page\n      description: |-\n        The landing page provides links to the API definition, the conformance\n        statements and to the feature collections in this dataset.\n      operationId: getLandingPage\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/conformance':\n    get:\n      tags:\n        - Capabilities\n      summary: information about specifications that this API conforms to\n      description: |-\n        A list of all conformance classes specified in a standard that the\n        server conforms to.\n      operationId: getConformanceDeclaration\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections':\n    get:\n      tags:\n        - Capabilities\n      summary: the feature collections in the dataset\n      operationId: getCollections\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Collections'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections/buildings':\n    get:\n      tags:\n        - Capabilities\n      summary: |-\n        information about the buildings\n      operationId: describeCollection\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Collection'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections/buildings/items':\n    get:\n      tags:\n        - Data\n      summary: fetch buildings\n      description: |-\n        Fetch buildings.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeatures\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/limit'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/bbox'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/datetime'\n        - $ref: '#/components/parameters/function'\n      responses:\n        '200':\n          description: |-\n            The response is a document consisting of building features.\n            The buildings included in the response are determined by the server\n            based on the query parameters of the request. To support access to\n            larger collections without overloading the client, the API supports\n            paged access with links to the next page, if more features are selected\n            that the page size.\n\n            The `bbox` and `datetime` parameter can be used to select only a\n            subset of the features in the collection (the features that are in the\n            bounding box or time interval). The `bbox` parameter matches all features\n            in the collection that are not associated with a location, too. The\n            `datetime` parameter matches all features in the collection that are\n            not associated with a time stamp or interval, too.\n\n            The `limit` parameter may be used to control the subset of the\n            selected features that should be returned in the response, the page size.\n            Each page may include information about the number of selected and\n            returned features (`numberMatched` and `numberReturned`) as well as\n            links to support paging (link relation `next`).\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/buildingCollectionGeoJSON'\n              example:\n                type: FeatureCollection\n                links:\n                  - href: 'http://data.example.com/collections/buildings/items.json'\n                    rel: self\n                    type: application/geo+json\n                    title: this document\n                  - href: 'http://data.example.com/collections/buildings/items.html'\n                    rel: alternate\n                    type: text/html\n                    title: this document as HTML\n                  - href: 'http://data.example.com/collections/buildings/items.json\u0026offset=10\u0026limit=2'\n                    rel: next\n                    type: application/geo+json\n                    title: next page\n                timeStamp: '2018-04-03T14:52:23Z'\n                numberMatched: 123\n                numberReturned: 2\n                features:\n                  - type: Feature\n                    id: '123'\n                    geometry:\n                      type: Polygon\n                      coordinates:\n                        - ...\n                    properties:\n                      function: residential\n                      floors: '2'\n                      lastUpdate: '2015-08-01T12:34:56Z'\n                  - type: Feature\n                    id: '132'\n                    geometry:\n                      type: Polygon\n                      coordinates:\n                        - ...\n                    properties:\n                      function: public use\n                      floors: '10'\n                      lastUpdate: '2013-12-03T10:15:37Z'\n            text/html:\n              schema:\n                type: string\n        '400':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections/buildings/items/{featureId}':\n    get:\n      tags:\n        - Data\n      summary: fetch a single building\n      description: |-\n        Fetch the building with id `featureId`.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeature\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/featureId'\n      responses:\n        '200':\n          description: |-\n            fetch the building with id `featureId`\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/buildingGeoJSON'\n              example:\n                type: Feature\n                links:\n                  - href: 'http://data.example.com/id/building/123'\n                    rel: canonical\n                    title: canonical URI of the building\n                  - href: 'http://data.example.com/collections/buildings/items/123.json'\n                    rel: self\n                    type: application/geo+json\n                    title: this document\n                  - href: 'http://data.example.com/collections/buildings/items/123.html'\n                    rel: alternate\n                    type: text/html\n                    title: this document as HTML\n                  - href: 'http://data.example.com/collections/buildings'\n                    rel: collection\n                    type: application/geo+json\n                    title: the collection document\n                id: '123'\n                geometry:\n                  type: Polygon\n                  coordinates:\n                    - ...\n                properties:\n                  function: residential\n                  floors: '2'\n                  lastUpdate: '2015-08-01T12:34:56Z'\n            text/html:\n              schema:\n                type: string\n        '404':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\ncomponents:\n  parameters:\n    function:\n      name: function\n      in: query\n      description: |-\n        Only return buildings of a particular function.\n\n        Default = return all buildings.\n      required: false\n      schema:\n        type: string\n        enum:\n          - residential\n          - commercial\n          - public use\n      style: form\n      explode: false\n      example: 'function=public+use'\n  schemas:\n    buildingCollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - features\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: \"#/components/schemas/buildingGeoJSON\"\n        links:\n          type: array\n          items:\n            $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/link'\n        timeStamp:\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/timeStamp'\n        numberMatched:\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberMatched'\n        numberReturned:\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberReturned'\n    buildingGeoJSON:\n      type: object\n      required:\n        - type\n        - geometry\n        - properties\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/geometryGeoJSON'\n        properties:\n          type: object\n          nullable: true\n          properties:\n            name:\n              type: string\n            function:\n              type: string\n              enum:\n                - residential\n                - commercial\n                - public use\n            floors:\n              type: integer\n              minimum: 1\n            lastUpdate:\n              type: string\n              format: date-time\n        id:\n          oneOf:\n            - type: string\n            - type: integer\n        links:\n          type: array\n          items:\n            $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/link'\n"
		}
	},
	"Error": "parse: paths: /collections/buildings: get: describeCollection: responses: 500: resolve \"https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\" reference: invalid response reference: \"https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\""
}