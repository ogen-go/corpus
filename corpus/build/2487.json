{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/snok/drf-openapi-tester"
		},
		"file": {
			"name": "geodati.gov.it.yaml",
			"path": "tests/schemas/sample-schemas/external-apis/geodati.gov.it.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: |\n    Repertorio Nazionale dei Dati Territoriali\n  description: |\n    Il Repertorio Nazionale dei Dati Territoriali è il [catalogo nazionale dei metadati riguardanti i dati territoriali e i servizi ad essi relativi](https://geodati.gov.it/geoportale/che-cos-e-il-rndt) disponibili presso le Pubbliche Amministrazioni.\n\n    #### Documentazione\n    Il catalogo è una base di dati d'interesse nazionale, istituita dall' [art. 59 del Codice dell'Amministrazione Digitale](https://cad.readthedocs.io/it/v2017-12-13/_rst/capo5_sezione2_art59.html).\n    La ricerca (ad esempio, di dati territoriali su \"Latina\") ritorna una serie di informazioni che includono:\n\n      - la descrizione dei dati, eg. *Cartografia catastale in scala 1:2000*\n      - la copertura geografica\n      - la data di creazione e/o pubblicazione e/o ultima modifica dei dati\n      - i contatti dell'ente che li pubblica, eg. *Agenzia delle Entrate Direzione Centrale Catasto* con la relativa email\n\n    #### Note\n\n    L'interfaccia REST è fornita a supporto delle attività di sviluppo e di accessibilità, mentre **l'interfaccia ufficiale\n    basata sulle indicazioni della [Direttiva INSPIRE](https://geodati.gov.it/geoportale/direttiva-inspire)** è descritta\n    [qui](https://geodati.gov.it/geoportale/manuale-rndt).\n\n    L'endpoint in formato [CSW - Catalogo dei Servizi Web](https://it.wikipedia.org/wiki/Catalog_Service_for_the_Web) è disponibile qui:\n\n    ```\n    http://geodati.gov.it/RNDT/csw\n    ```\n\n    #### Informazioni tecniche ed esempi\n\n    Di default, i dati sono ritornati in `xml`; utilizzare `f=json` per richiedere dati in formato JSON.\n\n    Query:\n\n    ```\n    http 'https://geodati.gov.it/RNDT/rest/find/document?max=5\u0026searchText=natura\u0026f=json'\n    ```\n\n  termsOfService: 'https://geodati.gov.it/geoportale/note-legali'\n  contact:\n    email: \"info@rndt.gov.it\"\n    name: \"Agenzia per l'Italia Digitale\"\n    url: \"https://geodati.gov.it/geoportale/responsabile-procedimento-pubblicazione\"\n  x-api-id: 81e79570-58ae-4cb0-b3f3-554a476a1fb9\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: public\n    description: Public search.\n    externalDocs:\n      url: \u003e-\n        https://github.com/Esri/geoportal-server/wiki/REST-API-Syntax\nservers:\n  - description: Geodati Server.\n    url: \u003e-\n      https://geodati.gov.it/RNDT/rest\n\npaths:\n  /find/document:\n    get:\n      summary: Search documents.\n      description: |\n        Search data into the catalog.\n      operationId: findDocument\n      tags:\n        - public\n      parameters:\n        - name: bbox\n          in: query\n          description: |\n            Query by extent specified as two pairs of coordinates (west-south and east-north).\n            Comma-delimited string of integers between -180,180 and -90, 90.\n          example: -179,-5,120,17\n          schema:\n            type: array\n            items:\n              type: integer\n            minItems: 4\n            maxItems: 4\n          explode: false\n          x-style: simple\n        - name: spatialRel\n          in: query\n          description: |\n            Query by spatial relationship. Used in conjunction with bbox parameter.\n            example: esriSpatialRelWithin\n          schema:\n            type: string\n            default: esriSpatialRelWithin\n            x-extensible-enum:\n              - esriSpatialRelWithin\n              - esriSpatialRelOverlaps\n        - name: searchText\n          in: query\n          description: |\n            Query by keyword. String value representing a keyword.\n            Note, as of version 1.1.1, you can use searchText=sys.schema.key to query\n            for documents that correspond to a specific metadata schema.\n\n            Eg:\n            ```\n            curl https://geodati.gov.it/RNDT/rest/find/document?searchText=INSPIRETheme:Idrografia\u0026start=1\u0026max=5\u0026f=pjson\n            ```\n\n            For an exact match use double quotes. For example, see the syntax for two terms, `carta` and `geologica`:\n\n            - Exact: `searchText=title:\"carta geologica\"`\n            - Any: `searchText=title:carta geologica`\n            - All: `searchText=title:carta AND geologica`\n\n            example: `searchText=INSPIRETheme:Idrografia`\n          schema:\n            type: string\n\n        - name: contains\n          in: query\n          deprecated: true\n          description: |\n            Keyword concatenation options. This parameter is obsolete with the Lucene syntax (see Using Lucene Search Text Queries).\n          example: \"Hawaii quads\"\n          schema:\n            type: string\n        - name: contentType\n          in: query\n          description: |\n            Query by content type.  String value representing an Esri content type. See Javadoc for complete list.\n            example: TODO\n          schema:\n            type: string\n        - name: dataCategory\n          in: query\n          description: |\n            Query by data category (ISO 19115 themes).\n            Comma-delimited list of strings. Keywords identified by the ISO 19115 specification. See JavaDoc for complete list.\n          schema:\n            type: array\n            items:\n              type: string\n          explode: false\n          x-style: simple\n        - name: after\n          in: query\n          description: |\n            Query by date.\n            example: \"2014-12-30\"\n          schema:\n            type: string\n            format: date\n        - name: before\n          in: query\n          description: |\n            Query by date.\n            example: \"2014-12-30\"\n          example: TODO\n          schema:\n            type: string\n            format: date\n        - name: orderBy\n          in: query\n          description: |\n            Result sort options.\n          example: dateDescending\n          schema:\n            type: string\n            default: dateDescending\n            x-extensible-enum:\n              - dateDescending\n              - areaAscending\n              - areaDescending\n              - dateAscending\n              - format\n              - relevance\n              - title\n        - name: start\n          in: query\n          description: |\n            Specify which item to start the response with out of the entire resultset.\n            When used with the max parameter, this provides for pagination of the search results.\n          example: 12\n          schema:\n            type: integer\n        - name: max\n          in: query\n          required: true\n          description: |\n            Specify max number of records to retrieve.\n            There is a limit of max=100 on unqualified queries.\n            An 'unqualified query' is when there are no search parameters set.\n            The limit on qualified queries is max=5000. Default: 10.\n             When used with the start parameter, this provides for pagination of the search results.\n          example: 50\n          schema:\n            type: integer\n            default: 10\n        - name: geometryType\n          in: query\n          description: |\n            Defines how spatial data will be represented.\n          example: esriGeometryPolygon\n          schema:\n            type: string\n            default: esriGeometryPolygon\n            x-extensible-enum:\n              - esriGeometryPolygon\n              - esriGeometryPoint\n              - esriGeometryBox\n\n        - name: f\n          in: query\n          description: |\n            the response format.\n          example: json\n          schema:\n            type: string\n            default: georss\n            x-extensible-enum:\n              - georss\n              - atom\n              - json\n              - pjson\n              - xjson\n              - dcat (1.2.4)\n              - kml\n              - html\n              - htmlfragment\n              - searchpage (as of 1.1.1)\n              - CSV (as of 1.2)\n              - xjson\n\n        - name: style\n          in: query\n          description: |\n            CSS stylesheet for HTML results.\n            String value representing a URL to a stylesheet.\n          example: \"https://geodati.gov.it/geoportale/templates/rndt/css/template.css\"\n          schema:\n            type: string\n            format: url\n        - name: target\n          in: query\n          description: |\n            Behavior of links (open in same or new window).\n          schema:\n            type: string\n            x-extensible-enum:\n              - blank\n              - parent\n              - self\n              - top\n\n        - name: rid\n          in: query\n          description: |\n            Id associated with the repository. Multiple rid parameters\n            are allowed for comparing results between different repositories.\n          schema:\n            type: string\n\n        - name: rids\n          in: query\n          description: |\n            Comma Delimited rid. Can be used instead of the multiple rid parameters.\n          schema:\n            type: string\n\n        - name: maxSearchTimeMilliSec\n          in: query\n          description: |\n            Maximum amount of time allowed to retrieve results.\n          example: 5000\n          schema:\n            type: integer\n            default: 5000\n\n        - name: filter\n          in: query\n          description: |\n            Can apply a persistent filter to the search interface. See URL Filter Customization\n          schema:\n            type: string\n\n      responses:\n        '200':\n          description: |\n            A list of datasources.\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/X-RateLimit-Limit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/X-RateLimit-Remaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/X-RateLimit-Reset'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '503':\n          $ref: '#/components/responses/503ServiceUnavailable'\n        default:\n          $ref: '#/components/responses/default'\n\ncomponents:\n  parameters:\n    limit:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/parameters/v3.yaml#/limit'\n    offset:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/parameters/v3.yaml#/offset'\n    sort:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/parameters/v3.yaml#/sort'\n\n  headers:\n    X-RateLimit-Limit:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/headers/v3.yaml#/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/headers/v3.yaml#/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/headers/v3.yaml#/X-RateLimit-Reset'\n\n  responses:\n    # Predefined error codes for this API\n    400BadRequest:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/400BadRequest'\n    404NotFound:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/404NotFound'\n    429TooManyRequests:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/429TooManyRequests'\n    503ServiceUnavailable:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/503ServiceUnavailable'\n    default:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/default'\n\n  schemas:\n    Problem:\n      $ref: 'https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/schemas/problem.yaml#/Problem'\n    Response:\n      title: Root Type for Response\n      description: Geoportal response.\n      type: object\n      properties:\n        title:\n          type: string\n          example: Geoportal GeoRSS.\n        description:\n          type: string\n          example: Most recently updated documents\n        copyright:\n          type: string\n        updated:\n          format: date-time\n          type: string\n          example: \"2018-05-14T09:07:55Z\"\n        records:\n          type: array\n          items:\n            $ref: '#/components/schemas/Record'\n    Geometry:\n      title: Geometry\n      description: Geometry schema\n      type: object\n      properties:\n        coordinates:\n          type: array\n          items:\n            type: number\n          example:\n            - [ 12.7200248, 41.3830331 ]\n            - [ 12.7200248, 41.5616704 ]\n            - [ 13.0246195, 41.5616704 ]\n            - [ 13.0246195, 41.3830331 ]\n            - [ 12.7200248, 41.3830331 ]\n        type:\n          type: string\n          example: Polygon\n    Links:\n      title: Root Type for Links\n      description: The root of the Links type's schema.\n      type: object\n      properties:\n        href:\n          format: url\n          type: string\n          example: https://geodati.gov.it/geoportalRNDTPA/catalog/search/resource/details.page?uuid=age%3AD_E472_LATINA\n        type:\n          type: string\n          example: details\n        labelKey:\n          type: string\n          example: catalog.rest.viewDetails\n    PointOfContactOfData:\n      title: Root Type for PointOfContactOfData\n      description: The root of the PointOfContactOfData type's schema.\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n          example: Agenzia delle Entrate\n        email:\n          type: string\n          example: contatto@example.it\n        phone:\n          type: string\n    Record:\n      title: Root Type for Record\n      description: The root of the Record type's schema.\n      required:\n        - geometry\n        - bbox\n        - pointOfContactOfData\n      type: object\n      properties:\n        title:\n          type: string\n        id:\n          type: string\n        updated:\n          format: date-time\n          type: string\n          example: \"2018-05-14T09:07:55Z\"\n        summary:\n          type: string\n          example: Cartografia catastale\n        hierarchyLevel:\n          type: string\n          example: Dataset\n        responsibleOfData:\n          type: string\n          example: Agenzia delle Entrate\n        pointOfContactOfData:\n          $ref: '#/components/schemas/PointOfContactOfData'\n        keywords:\n          type: array\n          items:\n            type: string\n            example: Particelle catastali\n        bbox:\n          type: array\n          items:\n            format: double\n            type: number\n          example:\n            - 12.7200248\n            - 41.3830331\n            - 13.0246195\n            - 41.5616704\n        geometry:\n          $ref: '#/components/schemas/Geometry'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Links'\n"
		}
	},
	"Error": "parse: paths: /find/document: get: findDocument: responses: default: resolve \"#/components/responses/default\" reference: resolve \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/default\" reference: invalid response reference: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.2/docs/responses/v3.yaml#/default\""
}