{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FraunhoferISST/diva"
		},
		"file": {
			"name": "openapi.yml",
			"path": "core/services/adapter-services/diva-lake-adapter/apiDoc/openapi.yml",
			"content": "openapi: 3.0.0\ninfo:\n  description: DIVA Lake Adapter provides an API to interact with the DIVA Lake. \n    Currently, only uploading local files to the DIVA Lake is supported.\n  version: 1.0.0\n  title: DIVA Lake Adapter API\ntags:\n  - name: import\n    description: Imports a local File into the DIVA Lake\npaths:\n  /import:\n    parameters:\n      - $ref: \"#/components/parameters/actorId\"\n    post:\n      tags:\n        - import\n      summary: POST a local file into the DIVA Lake\n      description: Users can have files stored locally on their machine. \n        As we do not have access to these machines (at least no direct access) a user can upload files to a so called DIVA Lake.\n      operationId: import\n      requestBody:\n        $ref: \"#/components/requestBodies/File\"\n      responses:\n        201:\n          $ref: \"#/components/responses/Success\"\n        4XX:\n          $ref: \"#/components/responses/RequestValidationError\"\n        406:\n          $ref: \"#/components/responses/InvalidDataError\"\n        500:\n          $ref: \"#/components/responses/UnexpectedError\"\n  /download/{fileName}:\n    parameters:\n      - $ref: \"#/components/parameters/actorId\"\n    get:\n      tags:\n        - download\n      summary: Download a file from the DIVA Lake by name\n      description: Donwloads a file from the DIVA lake by `fileName` wich is a file hash. Files are always associated with a\n        resource, you can obtain the `fileName` from a corresponding resource as `uniqueFingerprint`.\n      operationId: download\n      parameters:\n        - name: fileName\n          in: path\n          description: Name of the file wich is a file hash\n          required: true\n          schema:\n            type: string\n            example: 3a0d32967309cbc44d377c0aa801e95bfbf50f48c103f288ce25cc1f4df30f9a\n            pattern: \"^[A-Fa-f0-9]{64}$\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            \"*/*\":\n              schema:\n                description: File binary\n                type: string\n                format: binary\n        4XX:\n          $ref: \"#/components/responses/RequestValidationError\"\n        500:\n          $ref: \"#/components/responses/UnexpectedError\"\n\nservers:\n  - url: http://localhost:4001\n\ncomponents:\n\n  requestBodies:\n\n    File:\n      required: true\n      content:\n        multipart/form-data:\n          schema:\n            type: object\n            additionalProperties: false\n            required:\n              - file\n            properties:\n              file:\n                type: string\n                format: binary\n\n  schemas:\n\n    ResourceId:\n      title: ResourceId\n      description: Unique resource identifier\n      type: string\n      example: \"resource:uuid:asdsad4d1fcb08-b894-4bdf-b662-0f105d597189\"\n      pattern: \"^resource:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n\n    Error:\n      type: object\n      title: Operation error\n      description: Error that can occure on request processing\n      required:\n        - type\n        - message\n        - code\n      properties:\n        type:\n          title: Error type\n          description: Futher error type information\n          type: string\n        message:\n          title: Error message\n          description: Details about error\n          type: string\n        code:\n          title: Error code\n          description: HTTP error code\n          type: number\n          format: int32\n          example: 409\n        errors:\n          title: Errors\n          description: More error details that are reference in most case specification or schema validation errors\n          type: array\n          items:\n            type: object\n\n  responses:\n\n    Success:\n      description: Successful operation with response data\n      content:\n        text/html:\n          schema:\n            $ref: \"#/components/schemas/ResourceId\"\n    SuccessEmpty:\n      description: Succesful operation\n    RequestValidationError:\n      description: Request violates API Specification\n      content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Error\"        \n\n    ImportUknowlegment:\n      description: Import successfuly initiated\n    UnexpectedError:\n      description: Internal error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotFoundError:\n      description: Entity not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    InvalidDataError:\n      description: Invalid data supplied\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    ResourceAlreadyExistsError:\n      description: Resource already imported\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n\n  parameters:\n\n    actorId:\n      in: header\n      description: The id of the origin that produces action/message. Can be a user or service\n      name: x-actorid\n      schema:\n        type: string\n        minLength: 1\n        pattern: \"^(user|service):uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n      required: true"
		}
	},
	"Error": "make ir: path \"/download/{fileName}\": get: responses: parse response status code: strconv.Atoi: parsing \"4XX\": invalid syntax"
}