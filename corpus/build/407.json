{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/goauthentik/terraform-provider-authentik"
		},
		"file": {
			"name": "schema.yml",
			"path": "schema.yml",
			"content": "openapi: 3.0.3\ninfo:\n  title: authentik\n  version: 2022.1.5\n  description: Making authentication simple.\n  contact:\n    email: hello@beryju.org\n  license:\n    name: GNU GPLv3\n    url: https://github.com/goauthentik/authentik/blob/master/LICENSE\npaths:\n  /admin/apps/:\n    get:\n      operationId: admin_apps_list\n      description: List current messages and pass into Serializer\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/App'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /admin/metrics/:\n    get:\n      operationId: admin_metrics_retrieve\n      description: Login Metrics per 1h\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginMetrics'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /admin/system/:\n    get:\n      operationId: admin_system_retrieve\n      description: Get system information.\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /admin/system_tasks/:\n    get:\n      operationId: admin_system_tasks_list\n      description: List system tasks\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /admin/system_tasks/{id}/:\n    get:\n      operationId: admin_system_tasks_retrieve\n      description: Get a single system task\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        required: true\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n        '404':\n          description: Task not found\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /admin/system_tasks/{id}/retry/:\n    post:\n      operationId: admin_system_tasks_retry_create\n      description: Retry task\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        required: true\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Task retried successfully\n        '404':\n          description: Task not found\n        '500':\n          description: Failed to retry task\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /admin/version/:\n    get:\n      operationId: admin_version_retrieve\n      description: Get running and latest version.\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /admin/workers/:\n    get:\n      operationId: admin_workers_retrieve\n      description: Get currently connected worker count.\n      tags:\n      - admin\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workers'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/duo/:\n    get:\n      operationId: authenticators_admin_duo_list\n      description: Viewset for Duo authenticator devices (for admins)\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDuoDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: authenticators_admin_duo_create\n      description: Viewset for Duo authenticator devices (for admins)\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DuoDeviceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuoDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/duo/{id}/:\n    get:\n      operationId: authenticators_admin_duo_retrieve\n      description: Viewset for Duo authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuoDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: authenticators_admin_duo_update\n      description: Viewset for Duo authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DuoDeviceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuoDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: authenticators_admin_duo_partial_update\n      description: Viewset for Duo authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDuoDeviceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuoDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: authenticators_admin_duo_destroy\n      description: Viewset for Duo authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/sms/:\n    get:\n      operationId: authenticators_admin_sms_list\n      description: Viewset for sms authenticator devices (for admins)\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSMSDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/sms/{id}/:\n    get:\n      operationId: authenticators_admin_sms_retrieve\n      description: Viewset for sms authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SMS Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SMSDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/static/:\n    get:\n      operationId: authenticators_admin_static_list\n      description: Viewset for static authenticator devices (for admins)\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedStaticDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/static/{id}/:\n    get:\n      operationId: authenticators_admin_static_retrieve\n      description: Viewset for static authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this static device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/totp/:\n    get:\n      operationId: authenticators_admin_totp_list\n      description: Viewset for totp authenticator devices (for admins)\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTOTPDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/totp/{id}/:\n    get:\n      operationId: authenticators_admin_totp_retrieve\n      description: Viewset for totp authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this TOTP device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TOTPDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/webauthn/:\n    get:\n      operationId: authenticators_admin_webauthn_list\n      description: Viewset for WebAuthn authenticator devices (for admins)\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedWebAuthnDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/admin/webauthn/{id}/:\n    get:\n      operationId: authenticators_admin_webauthn_retrieve\n      description: Viewset for WebAuthn authenticator devices (for admins)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this WebAuthn Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebAuthnDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/all/:\n    get:\n      operationId: authenticators_all_list\n      description: Get all devices for current user\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Device'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/duo/:\n    get:\n      operationId: authenticators_duo_list\n      description: Viewset for Duo authenticator devices\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDuoDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/duo/{id}/:\n    get:\n      operationId: authenticators_duo_retrieve\n      description: Viewset for Duo authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuoDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: authenticators_duo_update\n      description: Viewset for Duo authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DuoDeviceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuoDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: authenticators_duo_partial_update\n      description: Viewset for Duo authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDuoDeviceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuoDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: authenticators_duo_destroy\n      description: Viewset for Duo authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/duo/{id}/used_by/:\n    get:\n      operationId: authenticators_duo_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Duo Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/sms/:\n    get:\n      operationId: authenticators_sms_list\n      description: Viewset for sms authenticator devices\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSMSDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/sms/{id}/:\n    get:\n      operationId: authenticators_sms_retrieve\n      description: Viewset for sms authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SMS Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SMSDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: authenticators_sms_update\n      description: Viewset for sms authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SMS Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SMSDeviceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SMSDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: authenticators_sms_partial_update\n      description: Viewset for sms authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SMS Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSMSDeviceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SMSDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: authenticators_sms_destroy\n      description: Viewset for sms authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SMS Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/sms/{id}/used_by/:\n    get:\n      operationId: authenticators_sms_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SMS Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/static/:\n    get:\n      operationId: authenticators_static_list\n      description: Viewset for static authenticator devices\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedStaticDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/static/{id}/:\n    get:\n      operationId: authenticators_static_retrieve\n      description: Viewset for static authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this static device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: authenticators_static_update\n      description: Viewset for static authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this static device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StaticDeviceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: authenticators_static_partial_update\n      description: Viewset for static authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this static device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedStaticDeviceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: authenticators_static_destroy\n      description: Viewset for static authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this static device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/static/{id}/used_by/:\n    get:\n      operationId: authenticators_static_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this static device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/totp/:\n    get:\n      operationId: authenticators_totp_list\n      description: Viewset for totp authenticator devices\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTOTPDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/totp/{id}/:\n    get:\n      operationId: authenticators_totp_retrieve\n      description: Viewset for totp authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this TOTP device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TOTPDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: authenticators_totp_update\n      description: Viewset for totp authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this TOTP device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TOTPDeviceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TOTPDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: authenticators_totp_partial_update\n      description: Viewset for totp authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this TOTP device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedTOTPDeviceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TOTPDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: authenticators_totp_destroy\n      description: Viewset for totp authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this TOTP device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/totp/{id}/used_by/:\n    get:\n      operationId: authenticators_totp_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this TOTP device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/webauthn/:\n    get:\n      operationId: authenticators_webauthn_list\n      description: Viewset for WebAuthn authenticator devices\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedWebAuthnDeviceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/webauthn/{id}/:\n    get:\n      operationId: authenticators_webauthn_retrieve\n      description: Viewset for WebAuthn authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this WebAuthn Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebAuthnDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: authenticators_webauthn_update\n      description: Viewset for WebAuthn authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this WebAuthn Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebAuthnDeviceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebAuthnDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: authenticators_webauthn_partial_update\n      description: Viewset for WebAuthn authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this WebAuthn Device.\n        required: true\n      tags:\n      - authenticators\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedWebAuthnDeviceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebAuthnDevice'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: authenticators_webauthn_destroy\n      description: Viewset for WebAuthn authenticator devices\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this WebAuthn Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /authenticators/webauthn/{id}/used_by/:\n    get:\n      operationId: authenticators_webauthn_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this WebAuthn Device.\n        required: true\n      tags:\n      - authenticators\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/applications/:\n    get:\n      operationId: core_applications_list\n      description: Custom list method that checks Policy based access instead of guardian\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: superuser_full_list\n        schema:\n          type: boolean\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedApplicationList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: core_applications_create\n      description: Application Viewset\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/applications/{slug}/:\n    get:\n      operationId: core_applications_retrieve\n      description: Application Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: core_applications_update\n      description: Application Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: core_applications_partial_update\n      description: Application Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedApplicationRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: core_applications_destroy\n      description: Application Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/applications/{slug}/check_access/:\n    get:\n      operationId: core_applications_check_access_retrieve\n      description: Check access to a single application by slug\n      parameters:\n      - in: query\n        name: for_user\n        schema:\n          type: integer\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyTestResult'\n          description: ''\n        '404':\n          description: for_user user not found\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/applications/{slug}/metrics/:\n    get:\n      operationId: core_applications_metrics_list\n      description: Metrics for application logins\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Coordinate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/applications/{slug}/set_icon/:\n    post:\n      operationId: core_applications_set_icon_create\n      description: Set application icon\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FileUploadRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          description: Success\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/applications/{slug}/set_icon_url/:\n    post:\n      operationId: core_applications_set_icon_url_create\n      description: Set application icon (as URL)\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FilePathRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          description: Success\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/applications/{slug}/used_by/:\n    get:\n      operationId: core_applications_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal application name, used in URLs.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/authenticated_sessions/:\n    get:\n      operationId: core_authenticated_sessions_list\n      description: AuthenticatedSession Viewset\n      parameters:\n      - in: query\n        name: last_ip\n        schema:\n          type: string\n      - in: query\n        name: last_user_agent\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: user__username\n        schema:\n          type: string\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAuthenticatedSessionList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/authenticated_sessions/{uuid}/:\n    get:\n      operationId: core_authenticated_sessions_retrieve\n      description: AuthenticatedSession Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticated Session.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatedSession'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: core_authenticated_sessions_destroy\n      description: AuthenticatedSession Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticated Session.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/authenticated_sessions/{uuid}/used_by/:\n    get:\n      operationId: core_authenticated_sessions_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticated Session.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/groups/:\n    get:\n      operationId: core_groups_list\n      description: Group Viewset\n      parameters:\n      - in: query\n        name: attributes\n        schema:\n          type: string\n        description: Attributes\n      - in: query\n        name: is_superuser\n        schema:\n          type: boolean\n      - in: query\n        name: members_by_pk\n        schema:\n          type: array\n          items:\n            type: integer\n        explode: true\n        style: form\n      - in: query\n        name: members_by_username\n        schema:\n          type: array\n          items:\n            type: string\n        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n          only.\n        explode: true\n        style: form\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGroupList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: core_groups_create\n      description: Group Viewset\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/groups/{group_uuid}/:\n    get:\n      operationId: core_groups_retrieve\n      description: Group Viewset\n      parameters:\n      - in: path\n        name: group_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this group.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: core_groups_update\n      description: Group Viewset\n      parameters:\n      - in: path\n        name: group_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this group.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: core_groups_partial_update\n      description: Group Viewset\n      parameters:\n      - in: path\n        name: group_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this group.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: core_groups_destroy\n      description: Group Viewset\n      parameters:\n      - in: path\n        name: group_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this group.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/groups/{group_uuid}/used_by/:\n    get:\n      operationId: core_groups_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: group_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this group.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tenants/:\n    get:\n      operationId: core_tenants_list\n      description: Tenant Viewset\n      parameters:\n      - in: query\n        name: branding_favicon\n        schema:\n          type: string\n      - in: query\n        name: branding_logo\n        schema:\n          type: string\n      - in: query\n        name: branding_title\n        schema:\n          type: string\n      - in: query\n        name: default\n        schema:\n          type: boolean\n      - in: query\n        name: domain\n        schema:\n          type: string\n      - in: query\n        name: event_retention\n        schema:\n          type: string\n      - in: query\n        name: flow_authentication\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: flow_invalidation\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: flow_recovery\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: flow_unenrollment\n        schema:\n          type: string\n          format: uuid\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tenant_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: web_certificate\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTenantList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: core_tenants_create\n      description: Tenant Viewset\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TenantRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tenant'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tenants/{tenant_uuid}/:\n    get:\n      operationId: core_tenants_retrieve\n      description: Tenant Viewset\n      parameters:\n      - in: path\n        name: tenant_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Tenant.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tenant'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: core_tenants_update\n      description: Tenant Viewset\n      parameters:\n      - in: path\n        name: tenant_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Tenant.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TenantRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tenant'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: core_tenants_partial_update\n      description: Tenant Viewset\n      parameters:\n      - in: path\n        name: tenant_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Tenant.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedTenantRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tenant'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: core_tenants_destroy\n      description: Tenant Viewset\n      parameters:\n      - in: path\n        name: tenant_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Tenant.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tenants/{tenant_uuid}/used_by/:\n    get:\n      operationId: core_tenants_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: tenant_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Tenant.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tenants/current/:\n    get:\n      operationId: core_tenants_current_retrieve\n      description: Get current tenant\n      tags:\n      - core\n      security:\n      - authentik: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CurrentTenant'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tokens/:\n    get:\n      operationId: core_tokens_list\n      description: Token Viewset\n      parameters:\n      - in: query\n        name: description\n        schema:\n          type: string\n      - in: query\n        name: expires\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: expiring\n        schema:\n          type: boolean\n      - in: query\n        name: identifier\n        schema:\n          type: string\n      - in: query\n        name: intent\n        schema:\n          type: string\n          enum:\n          - api\n          - app_password\n          - recovery\n          - verification\n      - in: query\n        name: managed\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: user__username\n        schema:\n          type: string\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTokenList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: core_tokens_create\n      description: Token Viewset\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tokens/{identifier}/:\n    get:\n      operationId: core_tokens_retrieve\n      description: Token Viewset\n      parameters:\n      - in: path\n        name: identifier\n        schema:\n          type: string\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: core_tokens_update\n      description: Token Viewset\n      parameters:\n      - in: path\n        name: identifier\n        schema:\n          type: string\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: core_tokens_partial_update\n      description: Token Viewset\n      parameters:\n      - in: path\n        name: identifier\n        schema:\n          type: string\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedTokenRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: core_tokens_destroy\n      description: Token Viewset\n      parameters:\n      - in: path\n        name: identifier\n        schema:\n          type: string\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tokens/{identifier}/used_by/:\n    get:\n      operationId: core_tokens_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: identifier\n        schema:\n          type: string\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/tokens/{identifier}/view_key/:\n    get:\n      operationId: core_tokens_view_key_retrieve\n      description: Return token key and log access\n      parameters:\n      - in: path\n        name: identifier\n        schema:\n          type: string\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenView'\n          description: ''\n        '404':\n          description: Token not found or expired\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/user_consent/:\n    get:\n      operationId: core_user_consent_list\n      description: UserConsent Viewset\n      parameters:\n      - in: query\n        name: application\n        schema:\n          type: string\n          format: uuid\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: user\n        schema:\n          type: integer\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserConsentList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/user_consent/{id}/:\n    get:\n      operationId: core_user_consent_retrieve\n      description: UserConsent Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Consent.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserConsent'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: core_user_consent_destroy\n      description: UserConsent Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Consent.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/user_consent/{id}/used_by/:\n    get:\n      operationId: core_user_consent_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Consent.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/:\n    get:\n      operationId: core_users_list\n      description: User Viewset\n      parameters:\n      - in: query\n        name: attributes\n        schema:\n          type: string\n        description: Attributes\n      - in: query\n        name: email\n        schema:\n          type: string\n      - in: query\n        name: groups_by_name\n        schema:\n          type: array\n          items:\n            type: string\n        explode: true\n        style: form\n      - in: query\n        name: groups_by_pk\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: is_active\n        schema:\n          type: boolean\n      - in: query\n        name: is_superuser\n        schema:\n          type: boolean\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: username\n        schema:\n          type: string\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: core_users_create\n      description: User Viewset\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/{id}/:\n    get:\n      operationId: core_users_retrieve\n      description: User Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: core_users_update\n      description: User Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: core_users_partial_update\n      description: User Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: core_users_destroy\n      description: User Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/{id}/metrics/:\n    get:\n      operationId: core_users_metrics_retrieve\n      description: User metrics per 1h\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserMetrics'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/{id}/recovery/:\n    get:\n      operationId: core_users_recovery_retrieve\n      description: Create a temporary link that a user can use to recover their accounts\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Link'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Link'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/{id}/recovery_email/:\n    get:\n      operationId: core_users_recovery_email_retrieve\n      description: Create a temporary link that a user can use to recover their accounts\n      parameters:\n      - in: query\n        name: email_stage\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '404':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/{id}/set_password/:\n    post:\n      operationId: core_users_set_password_create\n      description: Set password for user\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPasswordSetRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          description: No response body\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/{id}/used_by/:\n    get:\n      operationId: core_users_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User.\n        required: true\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/me/:\n    get:\n      operationId: core_users_me_retrieve\n      description: Get information about current user\n      tags:\n      - core\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SessionUser'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/service_account/:\n    post:\n      operationId: core_users_service_account_create\n      description: Create a new user account that is marked as a service account\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserServiceAccountRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserServiceAccountResponse'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /core/users/update_self/:\n    put:\n      operationId: core_users_update_self_update\n      description: Allow users to change information on their own profile\n      tags:\n      - core\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserSelfRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SessionUser'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /crypto/certificatekeypairs/:\n    get:\n      operationId: crypto_certificatekeypairs_list\n      description: CertificateKeyPair Viewset\n      parameters:\n      - in: query\n        name: has_key\n        schema:\n          type: boolean\n        description: Only return certificate-key pairs with keys\n      - in: query\n        name: managed\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - crypto\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedCertificateKeyPairList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: crypto_certificatekeypairs_create\n      description: CertificateKeyPair Viewset\n      tags:\n      - crypto\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CertificateKeyPairRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateKeyPair'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /crypto/certificatekeypairs/{kp_uuid}/:\n    get:\n      operationId: crypto_certificatekeypairs_retrieve\n      description: CertificateKeyPair Viewset\n      parameters:\n      - in: path\n        name: kp_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Certificate-Key Pair.\n        required: true\n      tags:\n      - crypto\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateKeyPair'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: crypto_certificatekeypairs_update\n      description: CertificateKeyPair Viewset\n      parameters:\n      - in: path\n        name: kp_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Certificate-Key Pair.\n        required: true\n      tags:\n      - crypto\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CertificateKeyPairRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateKeyPair'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: crypto_certificatekeypairs_partial_update\n      description: CertificateKeyPair Viewset\n      parameters:\n      - in: path\n        name: kp_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Certificate-Key Pair.\n        required: true\n      tags:\n      - crypto\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedCertificateKeyPairRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateKeyPair'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: crypto_certificatekeypairs_destroy\n      description: CertificateKeyPair Viewset\n      parameters:\n      - in: path\n        name: kp_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Certificate-Key Pair.\n        required: true\n      tags:\n      - crypto\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /crypto/certificatekeypairs/{kp_uuid}/used_by/:\n    get:\n      operationId: crypto_certificatekeypairs_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: kp_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Certificate-Key Pair.\n        required: true\n      tags:\n      - crypto\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /crypto/certificatekeypairs/{kp_uuid}/view_certificate/:\n    get:\n      operationId: crypto_certificatekeypairs_view_certificate_retrieve\n      description: Return certificate-key pairs certificate and log access\n      parameters:\n      - in: query\n        name: download\n        schema:\n          type: boolean\n      - in: path\n        name: kp_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Certificate-Key Pair.\n        required: true\n      tags:\n      - crypto\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateData'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /crypto/certificatekeypairs/{kp_uuid}/view_private_key/:\n    get:\n      operationId: crypto_certificatekeypairs_view_private_key_retrieve\n      description: Return certificate-key pairs private key and log access\n      parameters:\n      - in: query\n        name: download\n        schema:\n          type: boolean\n      - in: path\n        name: kp_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Certificate-Key Pair.\n        required: true\n      tags:\n      - crypto\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateData'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /crypto/certificatekeypairs/generate/:\n    post:\n      operationId: crypto_certificatekeypairs_generate_create\n      description: Generate a new, self-signed certificate-key pair\n      tags:\n      - crypto\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CertificateGenerationRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateKeyPair'\n          description: ''\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/events/:\n    get:\n      operationId: events_events_list\n      description: Event Read-Only Viewset\n      parameters:\n      - in: query\n        name: action\n        schema:\n          type: string\n      - in: query\n        name: client_ip\n        schema:\n          type: string\n      - in: query\n        name: context_authorized_app\n        schema:\n          type: string\n        description: Context Authorized application\n      - in: query\n        name: context_model_app\n        schema:\n          type: string\n        description: Context Model App\n      - in: query\n        name: context_model_name\n        schema:\n          type: string\n        description: Context Model Name\n      - in: query\n        name: context_model_pk\n        schema:\n          type: string\n        description: Context Model Primary Key\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tenant_name\n        schema:\n          type: string\n        description: Tenant name\n      - in: query\n        name: username\n        schema:\n          type: string\n        description: Username\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEventList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: events_events_create\n      description: Event Read-Only Viewset\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/events/{event_uuid}/:\n    get:\n      operationId: events_events_retrieve\n      description: Event Read-Only Viewset\n      parameters:\n      - in: path\n        name: event_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: events_events_update\n      description: Event Read-Only Viewset\n      parameters:\n      - in: path\n        name: event_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: events_events_partial_update\n      description: Event Read-Only Viewset\n      parameters:\n      - in: path\n        name: event_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedEventRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: events_events_destroy\n      description: Event Read-Only Viewset\n      parameters:\n      - in: path\n        name: event_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/events/actions/:\n    get:\n      operationId: events_events_actions_list\n      description: Get all actions\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/events/per_month/:\n    get:\n      operationId: events_events_per_month_list\n      description: Get the count of events per month\n      parameters:\n      - in: query\n        name: action\n        schema:\n          type: string\n      - in: query\n        name: query\n        schema:\n          type: string\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Coordinate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/events/top_per_user/:\n    get:\n      operationId: events_events_top_per_user_list\n      description: Get the top_n events grouped by user count\n      parameters:\n      - in: query\n        name: action\n        schema:\n          type: string\n      - in: query\n        name: top_n\n        schema:\n          type: integer\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EventTopPerUser'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/notifications/:\n    get:\n      operationId: events_notifications_list\n      description: Notification Viewset\n      parameters:\n      - in: query\n        name: body\n        schema:\n          type: string\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: event\n        schema:\n          type: string\n          format: uuid\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: seen\n        schema:\n          type: boolean\n      - in: query\n        name: severity\n        schema:\n          type: string\n          enum:\n          - alert\n          - notice\n          - warning\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedNotificationList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/notifications/{uuid}/:\n    get:\n      operationId: events_notifications_retrieve\n      description: Notification Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Notification'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: events_notifications_update\n      description: Notification Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Notification'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: events_notifications_partial_update\n      description: Notification Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedNotificationRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Notification'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: events_notifications_destroy\n      description: Notification Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/notifications/{uuid}/used_by/:\n    get:\n      operationId: events_notifications_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/notifications/mark_all_seen/:\n    post:\n      operationId: events_notifications_mark_all_seen_create\n      description: Mark all the user's notifications as seen\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Marked tasks as read successfully.\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/rules/:\n    get:\n      operationId: events_rules_list\n      description: NotificationRule Viewset\n      parameters:\n      - in: query\n        name: group__name\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: severity\n        schema:\n          type: string\n          enum:\n          - alert\n          - notice\n          - warning\n        description: Controls which severity level the created notifications will\n          have.\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedNotificationRuleList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: events_rules_create\n      description: NotificationRule Viewset\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationRuleRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/rules/{pbm_uuid}/:\n    get:\n      operationId: events_rules_retrieve\n      description: NotificationRule Viewset\n      parameters:\n      - in: path\n        name: pbm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Rule.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: events_rules_update\n      description: NotificationRule Viewset\n      parameters:\n      - in: path\n        name: pbm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Rule.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationRuleRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: events_rules_partial_update\n      description: NotificationRule Viewset\n      parameters:\n      - in: path\n        name: pbm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Rule.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedNotificationRuleRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: events_rules_destroy\n      description: NotificationRule Viewset\n      parameters:\n      - in: path\n        name: pbm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Rule.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/rules/{pbm_uuid}/used_by/:\n    get:\n      operationId: events_rules_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: pbm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Rule.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/transports/:\n    get:\n      operationId: events_transports_list\n      description: NotificationTransport Viewset\n      parameters:\n      - in: query\n        name: mode\n        schema:\n          type: string\n          enum:\n          - email\n          - webhook\n          - webhook_slack\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: send_once\n        schema:\n          type: boolean\n      - in: query\n        name: webhook_url\n        schema:\n          type: string\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedNotificationTransportList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: events_transports_create\n      description: NotificationTransport Viewset\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationTransportRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationTransport'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/transports/{uuid}/:\n    get:\n      operationId: events_transports_retrieve\n      description: NotificationTransport Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Transport.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationTransport'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: events_transports_update\n      description: NotificationTransport Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Transport.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationTransportRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationTransport'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: events_transports_partial_update\n      description: NotificationTransport Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Transport.\n        required: true\n      tags:\n      - events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedNotificationTransportRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationTransport'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: events_transports_destroy\n      description: NotificationTransport Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Transport.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/transports/{uuid}/test/:\n    post:\n      operationId: events_transports_test_create\n      description: |-\n        Send example notification using selected transport. Requires\n        Modify permissions.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Transport.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationTransportTest'\n          description: ''\n        '500':\n          description: Failed to test transport\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /events/transports/{uuid}/used_by/:\n    get:\n      operationId: events_transports_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Transport.\n        required: true\n      tags:\n      - events\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/bindings/:\n    get:\n      operationId: flows_bindings_list\n      description: FlowStageBinding Viewset\n      parameters:\n      - in: query\n        name: evaluate_on_plan\n        schema:\n          type: boolean\n      - in: query\n        name: fsb_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: invalid_response_action\n        schema:\n          type: string\n          enum:\n          - restart\n          - restart_with_context\n          - retry\n        description: Configure how the flow executor should handle an invalid response\n          to a challenge. RETRY returns the error message and a similar challenge\n          to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT\n          restarts the flow while keeping the current context.\n      - in: query\n        name: order\n        schema:\n          type: integer\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: pbm_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: policies\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: policy_engine_mode\n        schema:\n          type: string\n          enum:\n          - all\n          - any\n      - in: query\n        name: re_evaluate_policies\n        schema:\n          type: boolean\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: target\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedFlowStageBindingList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: flows_bindings_create\n      description: FlowStageBinding Viewset\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FlowStageBindingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlowStageBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/bindings/{fsb_uuid}/:\n    get:\n      operationId: flows_bindings_retrieve\n      description: FlowStageBinding Viewset\n      parameters:\n      - in: path\n        name: fsb_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Flow Stage Binding.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlowStageBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: flows_bindings_update\n      description: FlowStageBinding Viewset\n      parameters:\n      - in: path\n        name: fsb_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Flow Stage Binding.\n        required: true\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FlowStageBindingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlowStageBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: flows_bindings_partial_update\n      description: FlowStageBinding Viewset\n      parameters:\n      - in: path\n        name: fsb_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Flow Stage Binding.\n        required: true\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedFlowStageBindingRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlowStageBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: flows_bindings_destroy\n      description: FlowStageBinding Viewset\n      parameters:\n      - in: path\n        name: fsb_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Flow Stage Binding.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/bindings/{fsb_uuid}/used_by/:\n    get:\n      operationId: flows_bindings_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: fsb_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Flow Stage Binding.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/executor/{flow_slug}/:\n    get:\n      operationId: flows_executor_get\n      description: Get the next pending challenge from the currently active flow.\n      parameters:\n      - in: path\n        name: flow_slug\n        schema:\n          type: string\n        required: true\n      - in: query\n        name: query\n        schema:\n          type: string\n        description: Querystring as received\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChallengeTypes'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: flows_executor_solve\n      description: Solve the previously retrieved challenge and advanced to the next\n        stage.\n      parameters:\n      - in: path\n        name: flow_slug\n        schema:\n          type: string\n        required: true\n      - in: query\n        name: query\n        schema:\n          type: string\n        description: Querystring as received\n        required: true\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FlowChallengeResponseRequest'\n      security:\n      - authentik: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChallengeTypes'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/inspector/{flow_slug}/:\n    get:\n      operationId: flows_inspector_get\n      description: Get current flow state and record it\n      parameters:\n      - in: path\n        name: flow_slug\n        schema:\n          type: string\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlowInspection'\n          description: ''\n        '400':\n          description: No flow plan in session.\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/:\n    get:\n      operationId: flows_instances_list\n      description: Flow Viewset\n      parameters:\n      - in: query\n        name: designation\n        schema:\n          type: string\n          enum:\n          - authentication\n          - authorization\n          - enrollment\n          - invalidation\n          - recovery\n          - stage_configuration\n          - unenrollment\n        description: Decides what this Flow is used for. For example, the Authentication\n          flow is redirect to when an un-authenticated user visits authentik.\n      - in: query\n        name: flow_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: slug\n        schema:\n          type: string\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedFlowList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: flows_instances_create\n      description: Flow Viewset\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FlowRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/{slug}/:\n    get:\n      operationId: flows_instances_retrieve\n      description: Flow Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: flows_instances_update\n      description: Flow Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FlowRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: flows_instances_partial_update\n      description: Flow Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedFlowRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: flows_instances_destroy\n      description: Flow Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/{slug}/diagram/:\n    get:\n      operationId: flows_instances_diagram_retrieve\n      description: Return diagram for flow with slug `slug`, in the format used by\n        flowchart.js\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlowDiagram'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/{slug}/execute/:\n    get:\n      operationId: flows_instances_execute_retrieve\n      description: Execute flow for current user\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Link'\n          description: ''\n        '400':\n          description: Flow not applicable\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/{slug}/export/:\n    get:\n      operationId: flows_instances_export_retrieve\n      description: Export flow to .akflow file\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/{slug}/set_background/:\n    post:\n      operationId: flows_instances_set_background_create\n      description: Set Flow background\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FileUploadRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          description: Success\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/{slug}/set_background_url/:\n    post:\n      operationId: flows_instances_set_background_url_create\n      description: Set Flow background (as URL)\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FilePathRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          description: Success\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/{slug}/used_by/:\n    get:\n      operationId: flows_instances_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Visible in the URL.\n        required: true\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/cache_clear/:\n    post:\n      operationId: flows_instances_cache_clear_create\n      description: Clear flow cache\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Successfully cleared cache\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/cache_info/:\n    get:\n      operationId: flows_instances_cache_info_retrieve\n      description: Info about cached flows\n      tags:\n      - flows\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cache'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /flows/instances/import_flow/:\n    post:\n      operationId: flows_instances_import_flow_create\n      description: Import flow from .akflow file\n      tags:\n      - flows\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FileUploadRequest'\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Successfully imported flow\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /oauth2/authorization_codes/:\n    get:\n      operationId: oauth2_authorization_codes_list\n      description: AuthorizationCode Viewset\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: provider\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: user\n        schema:\n          type: integer\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedExpiringBaseGrantModelList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /oauth2/authorization_codes/{id}/:\n    get:\n      operationId: oauth2_authorization_codes_retrieve\n      description: AuthorizationCode Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Authorization Code.\n        required: true\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpiringBaseGrantModel'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: oauth2_authorization_codes_destroy\n      description: AuthorizationCode Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Authorization Code.\n        required: true\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /oauth2/authorization_codes/{id}/used_by/:\n    get:\n      operationId: oauth2_authorization_codes_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Authorization Code.\n        required: true\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /oauth2/refresh_tokens/:\n    get:\n      operationId: oauth2_refresh_tokens_list\n      description: RefreshToken Viewset\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: provider\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: user\n        schema:\n          type: integer\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedRefreshTokenModelList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /oauth2/refresh_tokens/{id}/:\n    get:\n      operationId: oauth2_refresh_tokens_retrieve\n      description: RefreshToken Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2 Token.\n        required: true\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefreshTokenModel'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: oauth2_refresh_tokens_destroy\n      description: RefreshToken Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2 Token.\n        required: true\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /oauth2/refresh_tokens/{id}/used_by/:\n    get:\n      operationId: oauth2_refresh_tokens_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2 Token.\n        required: true\n      tags:\n      - oauth2\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/instances/:\n    get:\n      operationId: outposts_instances_list\n      description: Outpost Viewset\n      parameters:\n      - in: query\n        name: managed__icontains\n        schema:\n          type: string\n      - in: query\n        name: managed__iexact\n        schema:\n          type: string\n      - in: query\n        name: name__icontains\n        schema:\n          type: string\n      - in: query\n        name: name__iexact\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: providers__isnull\n        schema:\n          type: boolean\n      - in: query\n        name: providers_by_pk\n        schema:\n          type: array\n          items:\n            type: integer\n        explode: true\n        style: form\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: service_connection__name__icontains\n        schema:\n          type: string\n      - in: query\n        name: service_connection__name__iexact\n        schema:\n          type: string\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedOutpostList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: outposts_instances_create\n      description: Outpost Viewset\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OutpostRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Outpost'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/instances/{uuid}/:\n    get:\n      operationId: outposts_instances_retrieve\n      description: Outpost Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this outpost.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Outpost'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: outposts_instances_update\n      description: Outpost Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this outpost.\n        required: true\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OutpostRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Outpost'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: outposts_instances_partial_update\n      description: Outpost Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this outpost.\n        required: true\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedOutpostRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Outpost'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: outposts_instances_destroy\n      description: Outpost Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this outpost.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/instances/{uuid}/health/:\n    get:\n      operationId: outposts_instances_health_list\n      description: Get outposts current health\n      parameters:\n      - in: query\n        name: managed__icontains\n        schema:\n          type: string\n      - in: query\n        name: managed__iexact\n        schema:\n          type: string\n      - in: query\n        name: name__icontains\n        schema:\n          type: string\n      - in: query\n        name: name__iexact\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: providers__isnull\n        schema:\n          type: boolean\n      - in: query\n        name: providers_by_pk\n        schema:\n          type: array\n          items:\n            type: integer\n        explode: true\n        style: form\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: service_connection__name__icontains\n        schema:\n          type: string\n      - in: query\n        name: service_connection__name__iexact\n        schema:\n          type: string\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this outpost.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OutpostHealth'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/instances/{uuid}/used_by/:\n    get:\n      operationId: outposts_instances_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this outpost.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/instances/default_settings/:\n    get:\n      operationId: outposts_instances_default_settings_retrieve\n      description: Global default outpost config\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutpostDefaultConfig'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/ldap/:\n    get:\n      operationId: outposts_ldap_list\n      description: LDAPProvider Viewset\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedLDAPOutpostConfigList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/ldap/{id}/:\n    get:\n      operationId: outposts_ldap_retrieve\n      description: LDAPProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this LDAP Provider.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPOutpostConfig'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/proxy/:\n    get:\n      operationId: outposts_proxy_list\n      description: ProxyProvider Viewset\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProxyOutpostConfigList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/proxy/{id}/:\n    get:\n      operationId: outposts_proxy_retrieve\n      description: ProxyProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Proxy Provider.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProxyOutpostConfig'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/all/:\n    get:\n      operationId: outposts_service_connections_all_list\n      description: ServiceConnection Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedServiceConnectionList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/all/{uuid}/:\n    get:\n      operationId: outposts_service_connections_all_retrieve\n      description: ServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Outpost Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: outposts_service_connections_all_destroy\n      description: ServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Outpost Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/all/{uuid}/state/:\n    get:\n      operationId: outposts_service_connections_all_state_retrieve\n      description: Get the service connection's state\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Outpost Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceConnectionState'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/all/{uuid}/used_by/:\n    get:\n      operationId: outposts_service_connections_all_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Outpost Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/all/types/:\n    get:\n      operationId: outposts_service_connections_all_types_list\n      description: Get all creatable service connection types\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/docker/:\n    get:\n      operationId: outposts_service_connections_docker_list\n      description: DockerServiceConnection Viewset\n      parameters:\n      - in: query\n        name: local\n        schema:\n          type: boolean\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tls_authentication\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: tls_verification\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: url\n        schema:\n          type: string\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDockerServiceConnectionList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: outposts_service_connections_docker_create\n      description: DockerServiceConnection Viewset\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DockerServiceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DockerServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/docker/{uuid}/:\n    get:\n      operationId: outposts_service_connections_docker_retrieve\n      description: DockerServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Docker Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DockerServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: outposts_service_connections_docker_update\n      description: DockerServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Docker Service-Connection.\n        required: true\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DockerServiceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DockerServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: outposts_service_connections_docker_partial_update\n      description: DockerServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Docker Service-Connection.\n        required: true\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDockerServiceConnectionRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DockerServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: outposts_service_connections_docker_destroy\n      description: DockerServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Docker Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/docker/{uuid}/used_by/:\n    get:\n      operationId: outposts_service_connections_docker_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Docker Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/kubernetes/:\n    get:\n      operationId: outposts_service_connections_kubernetes_list\n      description: KubernetesServiceConnection Viewset\n      parameters:\n      - in: query\n        name: local\n        schema:\n          type: boolean\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedKubernetesServiceConnectionList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: outposts_service_connections_kubernetes_create\n      description: KubernetesServiceConnection Viewset\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KubernetesServiceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KubernetesServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/kubernetes/{uuid}/:\n    get:\n      operationId: outposts_service_connections_kubernetes_retrieve\n      description: KubernetesServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Kubernetes Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KubernetesServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: outposts_service_connections_kubernetes_update\n      description: KubernetesServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Kubernetes Service-Connection.\n        required: true\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KubernetesServiceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KubernetesServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: outposts_service_connections_kubernetes_partial_update\n      description: KubernetesServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Kubernetes Service-Connection.\n        required: true\n      tags:\n      - outposts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedKubernetesServiceConnectionRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KubernetesServiceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: outposts_service_connections_kubernetes_destroy\n      description: KubernetesServiceConnection Viewset\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Kubernetes Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /outposts/service_connections/kubernetes/{uuid}/used_by/:\n    get:\n      operationId: outposts_service_connections_kubernetes_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Kubernetes Service-Connection.\n        required: true\n      tags:\n      - outposts\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/all/:\n    get:\n      operationId: policies_all_list\n      description: Policy Viewset\n      parameters:\n      - in: query\n        name: bindings__isnull\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: promptstage__isnull\n        schema:\n          type: boolean\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/all/{policy_uuid}/:\n    get:\n      operationId: policies_all_retrieve\n      description: Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_all_destroy\n      description: Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/all/{policy_uuid}/test/:\n    post:\n      operationId: policies_all_test_create\n      description: Test policy\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyTestRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyTestResult'\n          description: ''\n        '400':\n          description: Invalid parameters\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/all/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_all_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/all/cache_clear/:\n    post:\n      operationId: policies_all_cache_clear_create\n      description: Clear policy cache\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Successfully cleared cache\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/all/cache_info/:\n    get:\n      operationId: policies_all_cache_info_retrieve\n      description: Info about cached policies\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cache'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/all/types/:\n    get:\n      operationId: policies_all_types_list\n      description: Get all creatable policy types\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/bindings/:\n    get:\n      operationId: policies_bindings_list\n      description: PolicyBinding Viewset\n      parameters:\n      - in: query\n        name: enabled\n        schema:\n          type: boolean\n      - in: query\n        name: order\n        schema:\n          type: integer\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: policy__isnull\n        schema:\n          type: boolean\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: target\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: target_in\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: timeout\n        schema:\n          type: integer\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPolicyBindingList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_bindings_create\n      description: PolicyBinding Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyBindingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/bindings/{policy_binding_uuid}/:\n    get:\n      operationId: policies_bindings_retrieve\n      description: PolicyBinding Viewset\n      parameters:\n      - in: path\n        name: policy_binding_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy Binding.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_bindings_update\n      description: PolicyBinding Viewset\n      parameters:\n      - in: path\n        name: policy_binding_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy Binding.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyBindingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_bindings_partial_update\n      description: PolicyBinding Viewset\n      parameters:\n      - in: path\n        name: policy_binding_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy Binding.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPolicyBindingRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyBinding'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_bindings_destroy\n      description: PolicyBinding Viewset\n      parameters:\n      - in: path\n        name: policy_binding_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy Binding.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/bindings/{policy_binding_uuid}/used_by/:\n    get:\n      operationId: policies_bindings_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_binding_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Policy Binding.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/dummy/:\n    get:\n      operationId: policies_dummy_list\n      description: Dummy Viewset\n      parameters:\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: execution_logging\n        schema:\n          type: boolean\n      - in: query\n        name: last_updated\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: result\n        schema:\n          type: boolean\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: wait_max\n        schema:\n          type: integer\n      - in: query\n        name: wait_min\n        schema:\n          type: integer\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDummyPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_dummy_create\n      description: Dummy Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DummyPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/dummy/{policy_uuid}/:\n    get:\n      operationId: policies_dummy_retrieve\n      description: Dummy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_dummy_update\n      description: Dummy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DummyPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_dummy_partial_update\n      description: Dummy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDummyPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_dummy_destroy\n      description: Dummy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/dummy/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_dummy_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/event_matcher/:\n    get:\n      operationId: policies_event_matcher_list\n      description: Event Matcher Policy Viewset\n      parameters:\n      - in: query\n        name: action\n        schema:\n          type: string\n          enum:\n          - authorize_application\n          - configuration_error\n          - custom_\n          - email_sent\n          - flow_execution\n          - impersonation_ended\n          - impersonation_started\n          - invitation_used\n          - login\n          - login_failed\n          - logout\n          - model_created\n          - model_deleted\n          - model_updated\n          - password_set\n          - policy_exception\n          - policy_execution\n          - property_mapping_exception\n          - secret_rotate\n          - secret_view\n          - source_linked\n          - suspicious_request\n          - system_exception\n          - system_task_exception\n          - system_task_execution\n          - update_available\n          - user_write\n        description: Match created events with this action type. When left empty,\n          all action types will be matched.\n      - in: query\n        name: app\n        schema:\n          type: string\n          enum:\n          - authentik.admin\n          - authentik.api\n          - authentik.core\n          - authentik.crypto\n          - authentik.events\n          - authentik.flows\n          - authentik.lib\n          - authentik.managed\n          - authentik.outposts\n          - authentik.policies\n          - authentik.policies.dummy\n          - authentik.policies.event_matcher\n          - authentik.policies.expiry\n          - authentik.policies.expression\n          - authentik.policies.hibp\n          - authentik.policies.password\n          - authentik.policies.reputation\n          - authentik.providers.ldap\n          - authentik.providers.oauth2\n          - authentik.providers.proxy\n          - authentik.providers.saml\n          - authentik.recovery\n          - authentik.sources.ldap\n          - authentik.sources.oauth\n          - authentik.sources.plex\n          - authentik.sources.saml\n          - authentik.stages.authenticator_duo\n          - authentik.stages.authenticator_sms\n          - authentik.stages.authenticator_static\n          - authentik.stages.authenticator_totp\n          - authentik.stages.authenticator_validate\n          - authentik.stages.authenticator_webauthn\n          - authentik.stages.captcha\n          - authentik.stages.consent\n          - authentik.stages.deny\n          - authentik.stages.dummy\n          - authentik.stages.email\n          - authentik.stages.identification\n          - authentik.stages.invitation\n          - authentik.stages.password\n          - authentik.stages.prompt\n          - authentik.stages.user_delete\n          - authentik.stages.user_login\n          - authentik.stages.user_logout\n          - authentik.stages.user_write\n          - authentik.tenants\n        description: Match events created by selected application. When left empty,\n          all applications are matched.\n      - in: query\n        name: client_ip\n        schema:\n          type: string\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: execution_logging\n        schema:\n          type: boolean\n      - in: query\n        name: last_updated\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEventMatcherPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_event_matcher_create\n      description: Event Matcher Policy Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventMatcherPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventMatcherPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/event_matcher/{policy_uuid}/:\n    get:\n      operationId: policies_event_matcher_retrieve\n      description: Event Matcher Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event Matcher Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventMatcherPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_event_matcher_update\n      description: Event Matcher Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event Matcher Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventMatcherPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventMatcherPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_event_matcher_partial_update\n      description: Event Matcher Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event Matcher Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedEventMatcherPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventMatcherPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_event_matcher_destroy\n      description: Event Matcher Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event Matcher Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/event_matcher/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_event_matcher_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Event Matcher Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/expression/:\n    get:\n      operationId: policies_expression_list\n      description: Source Viewset\n      parameters:\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: execution_logging\n        schema:\n          type: boolean\n      - in: query\n        name: expression\n        schema:\n          type: string\n      - in: query\n        name: last_updated\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedExpressionPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_expression_create\n      description: Source Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExpressionPolicyRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpressionPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/expression/{policy_uuid}/:\n    get:\n      operationId: policies_expression_retrieve\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Expression Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpressionPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_expression_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Expression Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExpressionPolicyRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpressionPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_expression_partial_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Expression Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedExpressionPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpressionPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_expression_destroy\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Expression Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/expression/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_expression_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Expression Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/haveibeenpwned/:\n    get:\n      operationId: policies_haveibeenpwned_list\n      description: Source Viewset\n      parameters:\n      - in: query\n        name: allowed_count\n        schema:\n          type: integer\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: execution_logging\n        schema:\n          type: boolean\n      - in: query\n        name: last_updated\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: password_field\n        schema:\n          type: string\n      - in: query\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedHaveIBeenPwendPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_haveibeenpwned_create\n      description: Source Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HaveIBeenPwendPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HaveIBeenPwendPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/haveibeenpwned/{policy_uuid}/:\n    get:\n      operationId: policies_haveibeenpwned_retrieve\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Have I Been Pwned Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HaveIBeenPwendPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_haveibeenpwned_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Have I Been Pwned Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HaveIBeenPwendPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HaveIBeenPwendPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_haveibeenpwned_partial_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Have I Been Pwned Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedHaveIBeenPwendPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HaveIBeenPwendPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_haveibeenpwned_destroy\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Have I Been Pwned Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/haveibeenpwned/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_haveibeenpwned_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Have I Been Pwned Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/password/:\n    get:\n      operationId: policies_password_list\n      description: Password Policy Viewset\n      parameters:\n      - in: query\n        name: amount_digits\n        schema:\n          type: integer\n      - in: query\n        name: amount_lowercase\n        schema:\n          type: integer\n      - in: query\n        name: amount_symbols\n        schema:\n          type: integer\n      - in: query\n        name: amount_uppercase\n        schema:\n          type: integer\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: error_message\n        schema:\n          type: string\n      - in: query\n        name: execution_logging\n        schema:\n          type: boolean\n      - in: query\n        name: last_updated\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: length_min\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: password_field\n        schema:\n          type: string\n      - in: query\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: symbol_charset\n        schema:\n          type: string\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPasswordPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_password_create\n      description: Password Policy Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordPolicyRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/password/{policy_uuid}/:\n    get:\n      operationId: policies_password_retrieve\n      description: Password Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_password_update\n      description: Password Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordPolicyRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_password_partial_update\n      description: Password Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPasswordPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_password_destroy\n      description: Password Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/password/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_password_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/password_expiry/:\n    get:\n      operationId: policies_password_expiry_list\n      description: Password Expiry Viewset\n      parameters:\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: days\n        schema:\n          type: integer\n      - in: query\n        name: deny_only\n        schema:\n          type: boolean\n      - in: query\n        name: execution_logging\n        schema:\n          type: boolean\n      - in: query\n        name: last_updated\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPasswordExpiryPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_password_expiry_create\n      description: Password Expiry Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordExpiryPolicyRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordExpiryPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/password_expiry/{policy_uuid}/:\n    get:\n      operationId: policies_password_expiry_retrieve\n      description: Password Expiry Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Expiry Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordExpiryPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_password_expiry_update\n      description: Password Expiry Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Expiry Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordExpiryPolicyRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordExpiryPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_password_expiry_partial_update\n      description: Password Expiry Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Expiry Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPasswordExpiryPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordExpiryPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_password_expiry_destroy\n      description: Password Expiry Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Expiry Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/password_expiry/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_password_expiry_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Expiry Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/reputation/:\n    get:\n      operationId: policies_reputation_list\n      description: Reputation Policy Viewset\n      parameters:\n      - in: query\n        name: check_ip\n        schema:\n          type: boolean\n      - in: query\n        name: check_username\n        schema:\n          type: boolean\n      - in: query\n        name: created\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: execution_logging\n        schema:\n          type: boolean\n      - in: query\n        name: last_updated\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: threshold\n        schema:\n          type: integer\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedReputationPolicyList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: policies_reputation_create\n      description: Reputation Policy Viewset\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReputationPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReputationPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/reputation/{policy_uuid}/:\n    get:\n      operationId: policies_reputation_retrieve\n      description: Reputation Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Reputation Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReputationPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: policies_reputation_update\n      description: Reputation Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Reputation Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReputationPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReputationPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: policies_reputation_partial_update\n      description: Reputation Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Reputation Policy.\n        required: true\n      tags:\n      - policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedReputationPolicyRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReputationPolicy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_reputation_destroy\n      description: Reputation Policy Viewset\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Reputation Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/reputation/{policy_uuid}/used_by/:\n    get:\n      operationId: policies_reputation_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: policy_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Reputation Policy.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/reputation/scores/:\n    get:\n      operationId: policies_reputation_scores_list\n      description: Reputation Viewset\n      parameters:\n      - in: query\n        name: identifier\n        schema:\n          type: string\n      - in: query\n        name: ip\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: score\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedReputationList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/reputation/scores/{reputation_uuid}/:\n    get:\n      operationId: policies_reputation_scores_retrieve\n      description: Reputation Viewset\n      parameters:\n      - in: path\n        name: reputation_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this reputation.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Reputation'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: policies_reputation_scores_destroy\n      description: Reputation Viewset\n      parameters:\n      - in: path\n        name: reputation_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this reputation.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /policies/reputation/scores/{reputation_uuid}/used_by/:\n    get:\n      operationId: policies_reputation_scores_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: reputation_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this reputation.\n        required: true\n      tags:\n      - policies\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/all/:\n    get:\n      operationId: propertymappings_all_list\n      description: PropertyMapping Viewset\n      parameters:\n      - in: query\n        name: managed__isnull\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPropertyMappingList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/all/{pm_uuid}/:\n    get:\n      operationId: propertymappings_all_retrieve\n      description: PropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: propertymappings_all_destroy\n      description: PropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/all/{pm_uuid}/test/:\n    post:\n      operationId: propertymappings_all_test_create\n      description: Test Property Mapping\n      parameters:\n      - in: query\n        name: format_result\n        schema:\n          type: boolean\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyTestRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PropertyMappingTestResult'\n          description: ''\n        '400':\n          description: Invalid parameters\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/all/{pm_uuid}/used_by/:\n    get:\n      operationId: propertymappings_all_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/all/types/:\n    get:\n      operationId: propertymappings_all_types_list\n      description: Get all creatable property-mapping types\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/ldap/:\n    get:\n      operationId: propertymappings_ldap_list\n      description: LDAP PropertyMapping Viewset\n      parameters:\n      - in: query\n        name: expression\n        schema:\n          type: string\n      - in: query\n        name: managed\n        schema:\n          type: array\n          items:\n            type: string\n        explode: true\n        style: form\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: object_field\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedLDAPPropertyMappingList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: propertymappings_ldap_create\n      description: LDAP PropertyMapping Viewset\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LDAPPropertyMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/ldap/{pm_uuid}/:\n    get:\n      operationId: propertymappings_ldap_retrieve\n      description: LDAP PropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this LDAP Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: propertymappings_ldap_update\n      description: LDAP PropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this LDAP Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LDAPPropertyMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: propertymappings_ldap_partial_update\n      description: LDAP PropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this LDAP Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedLDAPPropertyMappingRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: propertymappings_ldap_destroy\n      description: LDAP PropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this LDAP Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/ldap/{pm_uuid}/used_by/:\n    get:\n      operationId: propertymappings_ldap_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this LDAP Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/notification/:\n    get:\n      operationId: propertymappings_notification_list\n      description: NotificationWebhookMapping Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedNotificationWebhookMappingList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: propertymappings_notification_create\n      description: NotificationWebhookMapping Viewset\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationWebhookMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationWebhookMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/notification/{pm_uuid}/:\n    get:\n      operationId: propertymappings_notification_retrieve\n      description: NotificationWebhookMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Webhook Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationWebhookMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: propertymappings_notification_update\n      description: NotificationWebhookMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Webhook Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationWebhookMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationWebhookMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: propertymappings_notification_partial_update\n      description: NotificationWebhookMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Webhook Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedNotificationWebhookMappingRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationWebhookMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: propertymappings_notification_destroy\n      description: NotificationWebhookMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Webhook Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/notification/{pm_uuid}/used_by/:\n    get:\n      operationId: propertymappings_notification_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Notification Webhook Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/saml/:\n    get:\n      operationId: propertymappings_saml_list\n      description: SAMLPropertyMapping Viewset\n      parameters:\n      - in: query\n        name: expression\n        schema:\n          type: string\n      - in: query\n        name: friendly_name\n        schema:\n          type: string\n      - in: query\n        name: managed\n        schema:\n          type: array\n          items:\n            type: string\n        explode: true\n        style: form\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: saml_name\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSAMLPropertyMappingList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: propertymappings_saml_create\n      description: SAMLPropertyMapping Viewset\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMLPropertyMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/saml/{pm_uuid}/:\n    get:\n      operationId: propertymappings_saml_retrieve\n      description: SAMLPropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SAML Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: propertymappings_saml_update\n      description: SAMLPropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SAML Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMLPropertyMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: propertymappings_saml_partial_update\n      description: SAMLPropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SAML Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSAMLPropertyMappingRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLPropertyMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: propertymappings_saml_destroy\n      description: SAMLPropertyMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SAML Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/saml/{pm_uuid}/used_by/:\n    get:\n      operationId: propertymappings_saml_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SAML Property Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/scope/:\n    get:\n      operationId: propertymappings_scope_list\n      description: ScopeMapping Viewset\n      parameters:\n      - in: query\n        name: managed\n        schema:\n          type: array\n          items:\n            type: string\n        explode: true\n        style: form\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: scope_name\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedScopeMappingList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: propertymappings_scope_create\n      description: ScopeMapping Viewset\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScopeMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/scope/{pm_uuid}/:\n    get:\n      operationId: propertymappings_scope_retrieve\n      description: ScopeMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Scope Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: propertymappings_scope_update\n      description: ScopeMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Scope Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScopeMappingRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: propertymappings_scope_partial_update\n      description: ScopeMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Scope Mapping.\n        required: true\n      tags:\n      - propertymappings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedScopeMappingRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeMapping'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: propertymappings_scope_destroy\n      description: ScopeMapping Viewset\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Scope Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /propertymappings/scope/{pm_uuid}/used_by/:\n    get:\n      operationId: propertymappings_scope_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: pm_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Scope Mapping.\n        required: true\n      tags:\n      - propertymappings\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/all/:\n    get:\n      operationId: providers_all_list\n      description: Provider Viewset\n      parameters:\n      - in: query\n        name: application__isnull\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProviderList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/all/{id}/:\n    get:\n      operationId: providers_all_retrieve\n      description: Provider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: providers_all_destroy\n      description: Provider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/all/{id}/used_by/:\n    get:\n      operationId: providers_all_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/all/types/:\n    get:\n      operationId: providers_all_types_list\n      description: Get all creatable provider types\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/ldap/:\n    get:\n      operationId: providers_ldap_list\n      description: LDAPProvider Viewset\n      parameters:\n      - in: query\n        name: application__isnull\n        schema:\n          type: boolean\n      - in: query\n        name: authorization_flow__slug__iexact\n        schema:\n          type: string\n      - in: query\n        name: base_dn__iexact\n        schema:\n          type: string\n      - in: query\n        name: certificate__kp_uuid__iexact\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: certificate__name__iexact\n        schema:\n          type: string\n      - in: query\n        name: gid_start_number__iexact\n        schema:\n          type: integer\n      - in: query\n        name: name__iexact\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: search_group__group_uuid__iexact\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: search_group__name__iexact\n        schema:\n          type: string\n      - in: query\n        name: tls_server_name__iexact\n        schema:\n          type: string\n      - in: query\n        name: uid_start_number__iexact\n        schema:\n          type: integer\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedLDAPProviderList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: providers_ldap_create\n      description: LDAPProvider Viewset\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LDAPProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/ldap/{id}/:\n    get:\n      operationId: providers_ldap_retrieve\n      description: LDAPProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this LDAP Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: providers_ldap_update\n      description: LDAPProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this LDAP Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LDAPProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: providers_ldap_partial_update\n      description: LDAPProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this LDAP Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedLDAPProviderRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: providers_ldap_destroy\n      description: LDAPProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this LDAP Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/ldap/{id}/used_by/:\n    get:\n      operationId: providers_ldap_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this LDAP Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/oauth2/:\n    get:\n      operationId: providers_oauth2_list\n      description: OAuth2Provider Viewset\n      parameters:\n      - in: query\n        name: access_code_validity\n        schema:\n          type: string\n      - in: query\n        name: application\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: authorization_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: client_id\n        schema:\n          type: string\n      - in: query\n        name: client_type\n        schema:\n          type: string\n          enum:\n          - confidential\n          - public\n        description: |-\n          Confidential clients are capable of maintaining the confidentiality\n              of their credentials. Public clients are incapable.\n      - in: query\n        name: include_claims_in_id_token\n        schema:\n          type: boolean\n      - in: query\n        name: issuer_mode\n        schema:\n          type: string\n          enum:\n          - global\n          - per_provider\n        description: Configure how the issuer field of the ID Token should be filled.\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: property_mappings\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: redirect_uris\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: signing_key\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: sub_mode\n        schema:\n          type: string\n          enum:\n          - hashed_user_id\n          - user_email\n          - user_upn\n          - user_username\n        description: Configure what data should be used as unique User Identifier.\n          For most cases, the default should be fine.\n      - in: query\n        name: token_validity\n        schema:\n          type: string\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedOAuth2ProviderList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: providers_oauth2_create\n      description: OAuth2Provider Viewset\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuth2ProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Provider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/oauth2/{id}/:\n    get:\n      operationId: providers_oauth2_retrieve\n      description: OAuth2Provider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2/OpenID Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Provider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: providers_oauth2_update\n      description: OAuth2Provider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2/OpenID Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuth2ProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Provider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: providers_oauth2_partial_update\n      description: OAuth2Provider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2/OpenID Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedOAuth2ProviderRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2Provider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: providers_oauth2_destroy\n      description: OAuth2Provider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2/OpenID Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/oauth2/{id}/setup_urls/:\n    get:\n      operationId: providers_oauth2_setup_urls_retrieve\n      description: Get Providers setup URLs\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2/OpenID Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2ProviderSetupURLs'\n          description: ''\n        '404':\n          description: Provider has no application assigned\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/oauth2/{id}/used_by/:\n    get:\n      operationId: providers_oauth2_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this OAuth2/OpenID Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/proxy/:\n    get:\n      operationId: providers_proxy_list\n      description: ProxyProvider Viewset\n      parameters:\n      - in: query\n        name: application__isnull\n        schema:\n          type: boolean\n      - in: query\n        name: authorization_flow__slug__iexact\n        schema:\n          type: string\n      - in: query\n        name: basic_auth_enabled__iexact\n        schema:\n          type: boolean\n      - in: query\n        name: basic_auth_password_attribute__iexact\n        schema:\n          type: string\n      - in: query\n        name: basic_auth_user_attribute__iexact\n        schema:\n          type: string\n      - in: query\n        name: certificate__kp_uuid__iexact\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: certificate__name__iexact\n        schema:\n          type: string\n      - in: query\n        name: cookie_domain__iexact\n        schema:\n          type: string\n      - in: query\n        name: external_host__iexact\n        schema:\n          type: string\n      - in: query\n        name: internal_host__iexact\n        schema:\n          type: string\n      - in: query\n        name: internal_host_ssl_validation__iexact\n        schema:\n          type: boolean\n      - in: query\n        name: mode__iexact\n        schema:\n          type: string\n      - in: query\n        name: name__iexact\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: property_mappings__iexact\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: redirect_uris__iexact\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: skip_path_regex__iexact\n        schema:\n          type: string\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProxyProviderList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: providers_proxy_create\n      description: ProxyProvider Viewset\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProxyProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProxyProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/proxy/{id}/:\n    get:\n      operationId: providers_proxy_retrieve\n      description: ProxyProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Proxy Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProxyProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: providers_proxy_update\n      description: ProxyProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Proxy Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProxyProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProxyProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: providers_proxy_partial_update\n      description: ProxyProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Proxy Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedProxyProviderRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProxyProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: providers_proxy_destroy\n      description: ProxyProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Proxy Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/proxy/{id}/used_by/:\n    get:\n      operationId: providers_proxy_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Proxy Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/saml/:\n    get:\n      operationId: providers_saml_list\n      description: SAMLProvider Viewset\n      parameters:\n      - in: query\n        name: acs_url\n        schema:\n          type: string\n      - in: query\n        name: assertion_valid_not_before\n        schema:\n          type: string\n      - in: query\n        name: assertion_valid_not_on_or_after\n        schema:\n          type: string\n      - in: query\n        name: audience\n        schema:\n          type: string\n      - in: query\n        name: authorization_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: digest_algorithm\n        schema:\n          type: string\n          enum:\n          - http://www.w3.org/2000/09/xmldsig#sha1\n          - http://www.w3.org/2001/04/xmldsig-more#sha384\n          - http://www.w3.org/2001/04/xmlenc#sha256\n          - http://www.w3.org/2001/04/xmlenc#sha512\n      - in: query\n        name: issuer\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: name_id_mapping\n        schema:\n          type: string\n          format: uuid\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: property_mappings\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: session_valid_not_on_or_after\n        schema:\n          type: string\n      - in: query\n        name: signature_algorithm\n        schema:\n          type: string\n          enum:\n          - http://www.w3.org/2000/09/xmldsig#dsa-sha1\n          - http://www.w3.org/2000/09/xmldsig#rsa-sha1\n          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\n          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\n          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\n      - in: query\n        name: signing_kp\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: sp_binding\n        schema:\n          type: string\n          title: Service Provider Binding\n          enum:\n          - post\n          - redirect\n        description: This determines how authentik sends the response back to the\n          Service Provider.\n      - in: query\n        name: verification_kp\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSAMLProviderList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: providers_saml_create\n      description: SAMLProvider Viewset\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMLProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/saml/{id}/:\n    get:\n      operationId: providers_saml_retrieve\n      description: SAMLProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SAML Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: providers_saml_update\n      description: SAMLProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SAML Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMLProviderRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: providers_saml_partial_update\n      description: SAMLProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SAML Provider.\n        required: true\n      tags:\n      - providers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSAMLProviderRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLProvider'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: providers_saml_destroy\n      description: SAMLProvider Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SAML Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/saml/{id}/metadata/:\n    get:\n      operationId: providers_saml_metadata_retrieve\n      description: Return metadata as XML string\n      parameters:\n      - in: query\n        name: download\n        schema:\n          type: boolean\n      - in: query\n        name: force_binding\n        schema:\n          type: string\n          enum:\n          - urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\n          - urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\n        description: Optionally force the metadata to only include one binding.\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SAML Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLMetadata'\n          description: ''\n        '404':\n          description: Provider has no application assigned\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/saml/{id}/used_by/:\n    get:\n      operationId: providers_saml_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this SAML Provider.\n        required: true\n      tags:\n      - providers\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /providers/saml/import_metadata/:\n    post:\n      operationId: providers_saml_import_metadata_create\n      description: Create provider from SAML Metadata\n      tags:\n      - providers\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SAMLProviderImportRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Successfully imported provider\n        '400':\n          description: Bad request\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /root/config/:\n    get:\n      operationId: root_config_retrieve\n      description: Retrieve public configuration options\n      tags:\n      - root\n      security:\n      - authentik: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Config'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /schema/:\n    get:\n      operationId: schema_retrieve\n      description: |-\n        OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n        - YAML: application/vnd.oai.openapi\n        - JSON: application/vnd.oai.openapi+json\n      parameters:\n      - in: query\n        name: format\n        schema:\n          type: string\n          enum:\n          - json\n          - yaml\n      - in: query\n        name: lang\n        schema:\n          type: string\n          enum:\n          - af\n          - ar\n          - ar-dz\n          - ast\n          - az\n          - be\n          - bg\n          - bn\n          - br\n          - bs\n          - ca\n          - cs\n          - cy\n          - da\n          - de\n          - dsb\n          - el\n          - en\n          - en-au\n          - en-gb\n          - eo\n          - es\n          - es-ar\n          - es-co\n          - es-mx\n          - es-ni\n          - es-ve\n          - et\n          - eu\n          - fa\n          - fi\n          - fr\n          - fy\n          - ga\n          - gd\n          - gl\n          - he\n          - hi\n          - hr\n          - hsb\n          - hu\n          - hy\n          - ia\n          - id\n          - ig\n          - io\n          - is\n          - it\n          - ja\n          - ka\n          - kab\n          - kk\n          - km\n          - kn\n          - ko\n          - ky\n          - lb\n          - lt\n          - lv\n          - mk\n          - ml\n          - mn\n          - mr\n          - ms\n          - my\n          - nb\n          - ne\n          - nl\n          - nn\n          - os\n          - pa\n          - pl\n          - pt\n          - pt-br\n          - ro\n          - ru\n          - sk\n          - sl\n          - sq\n          - sr\n          - sr-latn\n          - sv\n          - sw\n          - ta\n          - te\n          - tg\n          - th\n          - tk\n          - tr\n          - tt\n          - udm\n          - uk\n          - ur\n          - uz\n          - vi\n          - zh-hans\n          - zh-hant\n      tags:\n      - schema\n      security:\n      - authentik: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/vnd.oai.openapi:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/yaml:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/vnd.oai.openapi+json:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/all/:\n    get:\n      operationId: sources_all_list\n      description: Source Viewset\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSourceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/all/{slug}/:\n    get:\n      operationId: sources_all_retrieve\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_all_destroy\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/all/{slug}/used_by/:\n    get:\n      operationId: sources_all_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/all/types/:\n    get:\n      operationId: sources_all_types_list\n      description: Get all creatable source types\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/all/user_settings/:\n    get:\n      operationId: sources_all_user_settings_list\n      description: Get all sources the user can configure\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserSetting'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/ldap/:\n    get:\n      operationId: sources_ldap_list\n      description: LDAP Source Viewset\n      parameters:\n      - in: query\n        name: additional_group_dn\n        schema:\n          type: string\n      - in: query\n        name: additional_user_dn\n        schema:\n          type: string\n      - in: query\n        name: base_dn\n        schema:\n          type: string\n      - in: query\n        name: bind_cn\n        schema:\n          type: string\n      - in: query\n        name: enabled\n        schema:\n          type: boolean\n      - in: query\n        name: group_membership_field\n        schema:\n          type: string\n      - in: query\n        name: group_object_filter\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: object_uniqueness_field\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: peer_certificate\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: property_mappings\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: property_mappings_group\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: server_uri\n        schema:\n          type: string\n      - in: query\n        name: slug\n        schema:\n          type: string\n      - in: query\n        name: start_tls\n        schema:\n          type: boolean\n      - in: query\n        name: sync_groups\n        schema:\n          type: boolean\n      - in: query\n        name: sync_parent_group\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: sync_users\n        schema:\n          type: boolean\n      - in: query\n        name: sync_users_password\n        schema:\n          type: boolean\n      - in: query\n        name: user_object_filter\n        schema:\n          type: string\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedLDAPSourceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: sources_ldap_create\n      description: LDAP Source Viewset\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LDAPSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/ldap/{slug}/:\n    get:\n      operationId: sources_ldap_retrieve\n      description: LDAP Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: sources_ldap_update\n      description: LDAP Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LDAPSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: sources_ldap_partial_update\n      description: LDAP Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedLDAPSourceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LDAPSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_ldap_destroy\n      description: LDAP Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/ldap/{slug}/sync_status/:\n    get:\n      operationId: sources_ldap_sync_status_list\n      description: Get source's sync status\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/ldap/{slug}/used_by/:\n    get:\n      operationId: sources_ldap_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/oauth/:\n    get:\n      operationId: sources_oauth_list\n      description: Source Viewset\n      parameters:\n      - in: query\n        name: access_token_url\n        schema:\n          type: string\n      - in: query\n        name: additional_scopes\n        schema:\n          type: string\n      - in: query\n        name: authentication_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: authorization_url\n        schema:\n          type: string\n      - in: query\n        name: consumer_key\n        schema:\n          type: string\n      - in: query\n        name: enabled\n        schema:\n          type: boolean\n      - in: query\n        name: enrollment_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy_engine_mode\n        schema:\n          type: string\n          enum:\n          - all\n          - any\n      - in: query\n        name: profile_url\n        schema:\n          type: string\n      - in: query\n        name: provider_type\n        schema:\n          type: string\n      - in: query\n        name: request_token_url\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: slug\n        schema:\n          type: string\n      - in: query\n        name: user_matching_mode\n        schema:\n          type: string\n          enum:\n          - email_deny\n          - email_link\n          - identifier\n          - username_deny\n          - username_link\n        description: How the source determines if an existing user should be authenticated\n          or a new user enrolled.\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedOAuthSourceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: sources_oauth_create\n      description: Source Viewset\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuthSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuthSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/oauth/{slug}/:\n    get:\n      operationId: sources_oauth_retrieve\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuthSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: sources_oauth_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuthSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuthSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: sources_oauth_partial_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedOAuthSourceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuthSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_oauth_destroy\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/oauth/{slug}/used_by/:\n    get:\n      operationId: sources_oauth_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/oauth/source_types/:\n    get:\n      operationId: sources_oauth_source_types_list\n      description: |-\n        Get all creatable source types. If ?name is set, only returns the type for \u003cname\u003e.\n        If \u003cname\u003e isn't found, returns the default type.\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SourceType'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/plex/:\n    get:\n      operationId: sources_plex_list\n      description: Plex source Viewset\n      parameters:\n      - in: query\n        name: allow_friends\n        schema:\n          type: boolean\n      - in: query\n        name: authentication_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: client_id\n        schema:\n          type: string\n      - in: query\n        name: enabled\n        schema:\n          type: boolean\n      - in: query\n        name: enrollment_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: policy_engine_mode\n        schema:\n          type: string\n          enum:\n          - all\n          - any\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: slug\n        schema:\n          type: string\n      - in: query\n        name: user_matching_mode\n        schema:\n          type: string\n          enum:\n          - email_deny\n          - email_link\n          - identifier\n          - username_deny\n          - username_link\n        description: How the source determines if an existing user should be authenticated\n          or a new user enrolled.\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPlexSourceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: sources_plex_create\n      description: Plex source Viewset\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlexSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/plex/{slug}/:\n    get:\n      operationId: sources_plex_retrieve\n      description: Plex source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: sources_plex_update\n      description: Plex source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlexSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: sources_plex_partial_update\n      description: Plex source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPlexSourceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_plex_destroy\n      description: Plex source Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/plex/{slug}/used_by/:\n    get:\n      operationId: sources_plex_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/plex/redeem_token/:\n    post:\n      operationId: sources_plex_redeem_token_create\n      description: |-\n        Redeem a plex token, check it's access to resources against what's allowed\n        for the source, and redirect to an authentication/enrollment flow.\n      parameters:\n      - in: query\n        name: slug\n        schema:\n          type: string\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlexTokenRedeemRequest'\n        required: true\n      security:\n      - authentik: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectChallenge'\n          description: ''\n        '400':\n          description: Token not found\n        '403':\n          description: Access denied\n  /sources/plex/redeem_token_authenticated/:\n    post:\n      operationId: sources_plex_redeem_token_authenticated_create\n      description: Redeem a plex token for an authenticated user, creating a connection\n      parameters:\n      - in: query\n        name: slug\n        schema:\n          type: string\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlexTokenRedeemRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          description: Token not found\n        '403':\n          description: Access denied\n  /sources/saml/:\n    get:\n      operationId: sources_saml_list\n      description: SAMLSource Viewset\n      parameters:\n      - in: query\n        name: allow_idp_initiated\n        schema:\n          type: boolean\n      - in: query\n        name: authentication_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: binding_type\n        schema:\n          type: string\n          enum:\n          - POST\n          - POST_AUTO\n          - REDIRECT\n      - in: query\n        name: digest_algorithm\n        schema:\n          type: string\n          enum:\n          - http://www.w3.org/2000/09/xmldsig#sha1\n          - http://www.w3.org/2001/04/xmldsig-more#sha384\n          - http://www.w3.org/2001/04/xmlenc#sha256\n          - http://www.w3.org/2001/04/xmlenc#sha512\n      - in: query\n        name: enabled\n        schema:\n          type: boolean\n      - in: query\n        name: enrollment_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: issuer\n        schema:\n          type: string\n      - in: query\n        name: managed\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: name_id_policy\n        schema:\n          type: string\n          enum:\n          - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n          - urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName\n          - urn:oasis:names:tc:SAML:2.0:nameid-format:X509SubjectName\n          - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n          - urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n        description: NameID Policy sent to the IdP. Can be unset, in which case no\n          Policy is sent.\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: pbm_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: policies\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: policy_engine_mode\n        schema:\n          type: string\n          enum:\n          - all\n          - any\n      - in: query\n        name: pre_authentication_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: property_mappings\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: signature_algorithm\n        schema:\n          type: string\n          enum:\n          - http://www.w3.org/2000/09/xmldsig#dsa-sha1\n          - http://www.w3.org/2000/09/xmldsig#rsa-sha1\n          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\n          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\n          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\n      - in: query\n        name: signing_kp\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: slo_url\n        schema:\n          type: string\n      - in: query\n        name: slug\n        schema:\n          type: string\n      - in: query\n        name: sso_url\n        schema:\n          type: string\n      - in: query\n        name: temporary_user_delete_after\n        schema:\n          type: string\n      - in: query\n        name: user_matching_mode\n        schema:\n          type: string\n          enum:\n          - email_deny\n          - email_link\n          - identifier\n          - username_deny\n          - username_link\n        description: How the source determines if an existing user should be authenticated\n          or a new user enrolled.\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSAMLSourceList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: sources_saml_create\n      description: SAMLSource Viewset\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMLSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/saml/{slug}/:\n    get:\n      operationId: sources_saml_retrieve\n      description: SAMLSource Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: sources_saml_update\n      description: SAMLSource Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMLSourceRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: sources_saml_partial_update\n      description: SAMLSource Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSAMLSourceRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLSource'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_saml_destroy\n      description: SAMLSource Viewset\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/saml/{slug}/metadata/:\n    get:\n      operationId: sources_saml_metadata_retrieve\n      description: Return metadata as XML string\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMLMetadata'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/saml/{slug}/used_by/:\n    get:\n      operationId: sources_saml_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n          description: Internal source name, used in URLs.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/all/:\n    get:\n      operationId: sources_user_connections_all_list\n      description: User-source connection Viewset\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserSourceConnectionList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/all/{id}/:\n    get:\n      operationId: sources_user_connections_all_retrieve\n      description: User-source connection Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user source connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: sources_user_connections_all_update\n      description: User-source connection Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user source connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: sources_user_connections_all_partial_update\n      description: User-source connection Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user source connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_user_connections_all_destroy\n      description: User-source connection Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user source connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/all/{id}/used_by/:\n    get:\n      operationId: sources_user_connections_all_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user source connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/oauth/:\n    get:\n      operationId: sources_user_connections_oauth_list\n      description: Source Viewset\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: source__slug\n        schema:\n          type: string\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserOAuthSourceConnectionList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: sources_user_connections_oauth_create\n      description: Source Viewset\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserOAuthSourceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserOAuthSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/oauth/{id}/:\n    get:\n      operationId: sources_user_connections_oauth_retrieve\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User OAuth Source Connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserOAuthSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: sources_user_connections_oauth_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User OAuth Source Connection.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserOAuthSourceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserOAuthSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: sources_user_connections_oauth_partial_update\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User OAuth Source Connection.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserOAuthSourceConnectionRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserOAuthSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_user_connections_oauth_destroy\n      description: Source Viewset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User OAuth Source Connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/oauth/{id}/used_by/:\n    get:\n      operationId: sources_user_connections_oauth_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User OAuth Source Connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/plex/:\n    get:\n      operationId: sources_user_connections_plex_list\n      description: Plex Source connection Serializer\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: source__slug\n        schema:\n          type: string\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPlexSourceConnectionList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: sources_user_connections_plex_create\n      description: Plex Source connection Serializer\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlexSourceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/plex/{id}/:\n    get:\n      operationId: sources_user_connections_plex_retrieve\n      description: Plex Source connection Serializer\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Plex Source Connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: sources_user_connections_plex_update\n      description: Plex Source connection Serializer\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Plex Source Connection.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlexSourceConnectionRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: sources_user_connections_plex_partial_update\n      description: Plex Source connection Serializer\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Plex Source Connection.\n        required: true\n      tags:\n      - sources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPlexSourceConnectionRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlexSourceConnection'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: sources_user_connections_plex_destroy\n      description: Plex Source connection Serializer\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Plex Source Connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /sources/user_connections/plex/{id}/used_by/:\n    get:\n      operationId: sources_user_connections_plex_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this User Plex Source Connection.\n        required: true\n      tags:\n      - sources\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/all/:\n    get:\n      operationId: stages_all_list\n      description: Stage Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/all/{stage_uuid}/:\n    get:\n      operationId: stages_all_retrieve\n      description: Stage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_all_destroy\n      description: Stage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/all/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_all_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/all/types/:\n    get:\n      operationId: stages_all_types_list\n      description: Get all creatable stage types\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/all/user_settings/:\n    get:\n      operationId: stages_all_user_settings_list\n      description: Get all stages the user can configure\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserSetting'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/duo/:\n    get:\n      operationId: stages_authenticator_duo_list\n      description: AuthenticatorDuoStage Viewset\n      parameters:\n      - in: query\n        name: api_hostname\n        schema:\n          type: string\n      - in: query\n        name: client_id\n        schema:\n          type: string\n      - in: query\n        name: configure_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAuthenticatorDuoStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_authenticator_duo_create\n      description: AuthenticatorDuoStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorDuoStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorDuoStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/duo/{stage_uuid}/:\n    get:\n      operationId: stages_authenticator_duo_retrieve\n      description: AuthenticatorDuoStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Duo Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorDuoStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_authenticator_duo_update\n      description: AuthenticatorDuoStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Duo Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorDuoStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorDuoStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_authenticator_duo_partial_update\n      description: AuthenticatorDuoStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Duo Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAuthenticatorDuoStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorDuoStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_authenticator_duo_destroy\n      description: AuthenticatorDuoStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Duo Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/duo/{stage_uuid}/enrollment_status/:\n    post:\n      operationId: stages_authenticator_duo_enrollment_status_create\n      description: Check enrollment status of user details in current session\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Duo Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Enrollment successful\n        '420':\n          description: Enrollment pending/failed\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/duo/{stage_uuid}/import_devices/:\n    post:\n      operationId: stages_authenticator_duo_import_devices_create\n      description: Import duo devices into authentik\n      parameters:\n      - in: query\n        name: duo_user_id\n        schema:\n          type: string\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Duo Authenticator Setup Stage.\n        required: true\n      - in: query\n        name: username\n        schema:\n          type: string\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorDuoStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: Enrollment successful\n        '400':\n          description: Device exists already\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/duo/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_authenticator_duo_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Duo Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/sms/:\n    get:\n      operationId: stages_authenticator_sms_list\n      description: AuthenticatorSMSStage Viewset\n      parameters:\n      - in: query\n        name: account_sid\n        schema:\n          type: string\n      - in: query\n        name: auth\n        schema:\n          type: string\n      - in: query\n        name: auth_password\n        schema:\n          type: string\n      - in: query\n        name: auth_type\n        schema:\n          type: string\n          enum:\n          - basic\n          - bearer\n      - in: query\n        name: configure_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: from_number\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: provider\n        schema:\n          type: string\n          enum:\n          - generic\n          - twilio\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAuthenticatorSMSStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_authenticator_sms_create\n      description: AuthenticatorSMSStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorSMSStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorSMSStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/sms/{stage_uuid}/:\n    get:\n      operationId: stages_authenticator_sms_retrieve\n      description: AuthenticatorSMSStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SMS Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorSMSStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_authenticator_sms_update\n      description: AuthenticatorSMSStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SMS Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorSMSStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorSMSStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_authenticator_sms_partial_update\n      description: AuthenticatorSMSStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SMS Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAuthenticatorSMSStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorSMSStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_authenticator_sms_destroy\n      description: AuthenticatorSMSStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SMS Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/sms/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_authenticator_sms_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this SMS Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/static/:\n    get:\n      operationId: stages_authenticator_static_list\n      description: AuthenticatorStaticStage Viewset\n      parameters:\n      - in: query\n        name: configure_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: token_count\n        schema:\n          type: integer\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAuthenticatorStaticStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_authenticator_static_create\n      description: AuthenticatorStaticStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorStaticStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorStaticStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/static/{stage_uuid}/:\n    get:\n      operationId: stages_authenticator_static_retrieve\n      description: AuthenticatorStaticStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Static Authenticator Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorStaticStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_authenticator_static_update\n      description: AuthenticatorStaticStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Static Authenticator Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorStaticStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorStaticStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_authenticator_static_partial_update\n      description: AuthenticatorStaticStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Static Authenticator Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAuthenticatorStaticStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorStaticStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_authenticator_static_destroy\n      description: AuthenticatorStaticStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Static Authenticator Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/static/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_authenticator_static_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Static Authenticator Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/totp/:\n    get:\n      operationId: stages_authenticator_totp_list\n      description: AuthenticatorTOTPStage Viewset\n      parameters:\n      - in: query\n        name: configure_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: digits\n        schema:\n          type: integer\n          enum:\n          - 6\n          - 8\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAuthenticatorTOTPStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_authenticator_totp_create\n      description: AuthenticatorTOTPStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorTOTPStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorTOTPStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/totp/{stage_uuid}/:\n    get:\n      operationId: stages_authenticator_totp_retrieve\n      description: AuthenticatorTOTPStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this TOTP Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorTOTPStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_authenticator_totp_update\n      description: AuthenticatorTOTPStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this TOTP Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorTOTPStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorTOTPStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_authenticator_totp_partial_update\n      description: AuthenticatorTOTPStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this TOTP Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAuthenticatorTOTPStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorTOTPStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_authenticator_totp_destroy\n      description: AuthenticatorTOTPStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this TOTP Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/totp/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_authenticator_totp_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this TOTP Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/validate/:\n    get:\n      operationId: stages_authenticator_validate_list\n      description: AuthenticatorValidateStage Viewset\n      parameters:\n      - in: query\n        name: configuration_stages\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: not_configured_action\n        schema:\n          type: string\n          enum:\n          - configure\n          - deny\n          - skip\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAuthenticatorValidateStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_authenticator_validate_create\n      description: AuthenticatorValidateStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorValidateStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorValidateStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/validate/{stage_uuid}/:\n    get:\n      operationId: stages_authenticator_validate_retrieve\n      description: AuthenticatorValidateStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticator Validation Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorValidateStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_authenticator_validate_update\n      description: AuthenticatorValidateStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticator Validation Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticatorValidateStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorValidateStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_authenticator_validate_partial_update\n      description: AuthenticatorValidateStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticator Validation Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAuthenticatorValidateStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticatorValidateStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_authenticator_validate_destroy\n      description: AuthenticatorValidateStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticator Validation Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/validate/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_authenticator_validate_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Authenticator Validation Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/webauthn/:\n    get:\n      operationId: stages_authenticator_webauthn_list\n      description: AuthenticateWebAuthnStage Viewset\n      parameters:\n      - in: query\n        name: authenticator_attachment\n        schema:\n          type: string\n          nullable: true\n          enum:\n          - cross-platform\n          - platform\n      - in: query\n        name: configure_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: resident_key_requirement\n        schema:\n          type: string\n          enum:\n          - discouraged\n          - preferred\n          - required\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: user_verification\n        schema:\n          type: string\n          enum:\n          - discouraged\n          - preferred\n          - required\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAuthenticateWebAuthnStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_authenticator_webauthn_create\n      description: AuthenticateWebAuthnStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticateWebAuthnStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticateWebAuthnStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/webauthn/{stage_uuid}/:\n    get:\n      operationId: stages_authenticator_webauthn_retrieve\n      description: AuthenticateWebAuthnStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this WebAuthn Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticateWebAuthnStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_authenticator_webauthn_update\n      description: AuthenticateWebAuthnStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this WebAuthn Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticateWebAuthnStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticateWebAuthnStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_authenticator_webauthn_partial_update\n      description: AuthenticateWebAuthnStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this WebAuthn Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAuthenticateWebAuthnStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticateWebAuthnStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_authenticator_webauthn_destroy\n      description: AuthenticateWebAuthnStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this WebAuthn Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/authenticator/webauthn/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_authenticator_webauthn_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this WebAuthn Authenticator Setup Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/captcha/:\n    get:\n      operationId: stages_captcha_list\n      description: CaptchaStage Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: public_key\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedCaptchaStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_captcha_create\n      description: CaptchaStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CaptchaStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptchaStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/captcha/{stage_uuid}/:\n    get:\n      operationId: stages_captcha_retrieve\n      description: CaptchaStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Captcha Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptchaStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_captcha_update\n      description: CaptchaStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Captcha Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CaptchaStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptchaStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_captcha_partial_update\n      description: CaptchaStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Captcha Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedCaptchaStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptchaStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_captcha_destroy\n      description: CaptchaStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Captcha Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/captcha/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_captcha_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Captcha Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/consent/:\n    get:\n      operationId: stages_consent_list\n      description: ConsentStage Viewset\n      parameters:\n      - in: query\n        name: consent_expire_in\n        schema:\n          type: string\n      - in: query\n        name: mode\n        schema:\n          type: string\n          enum:\n          - always_require\n          - expiring\n          - permanent\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedConsentStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_consent_create\n      description: ConsentStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/consent/{stage_uuid}/:\n    get:\n      operationId: stages_consent_retrieve\n      description: ConsentStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Consent Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_consent_update\n      description: ConsentStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Consent Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_consent_partial_update\n      description: ConsentStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Consent Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedConsentStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_consent_destroy\n      description: ConsentStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Consent Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/consent/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_consent_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Consent Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/deny/:\n    get:\n      operationId: stages_deny_list\n      description: DenyStage Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDenyStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_deny_create\n      description: DenyStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DenyStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DenyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/deny/{stage_uuid}/:\n    get:\n      operationId: stages_deny_retrieve\n      description: DenyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Deny Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DenyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_deny_update\n      description: DenyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Deny Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DenyStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DenyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_deny_partial_update\n      description: DenyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Deny Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDenyStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DenyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_deny_destroy\n      description: DenyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Deny Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/deny/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_deny_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Deny Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/dummy/:\n    get:\n      operationId: stages_dummy_list\n      description: DummyStage Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDummyStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_dummy_create\n      description: DummyStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DummyStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/dummy/{stage_uuid}/:\n    get:\n      operationId: stages_dummy_retrieve\n      description: DummyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_dummy_update\n      description: DummyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DummyStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_dummy_partial_update\n      description: DummyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDummyStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DummyStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_dummy_destroy\n      description: DummyStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/dummy/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_dummy_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Dummy Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/email/:\n    get:\n      operationId: stages_email_list\n      description: EmailStage Viewset\n      parameters:\n      - in: query\n        name: activate_user_on_success\n        schema:\n          type: boolean\n      - in: query\n        name: from_address\n        schema:\n          type: string\n      - in: query\n        name: host\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: port\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: subject\n        schema:\n          type: string\n      - in: query\n        name: template\n        schema:\n          type: string\n      - in: query\n        name: timeout\n        schema:\n          type: integer\n      - in: query\n        name: token_expiry\n        schema:\n          type: integer\n      - in: query\n        name: use_global_settings\n        schema:\n          type: boolean\n      - in: query\n        name: use_ssl\n        schema:\n          type: boolean\n      - in: query\n        name: use_tls\n        schema:\n          type: boolean\n      - in: query\n        name: username\n        schema:\n          type: string\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEmailStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_email_create\n      description: EmailStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/email/{stage_uuid}/:\n    get:\n      operationId: stages_email_retrieve\n      description: EmailStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_email_update\n      description: EmailStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_email_partial_update\n      description: EmailStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedEmailStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_email_destroy\n      description: EmailStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/email/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_email_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/email/templates/:\n    get:\n      operationId: stages_email_templates_list\n      description: Get all available templates, including custom templates\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TypeCreate'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/identification/:\n    get:\n      operationId: stages_identification_list\n      description: IdentificationStage Viewset\n      parameters:\n      - in: query\n        name: case_insensitive_matching\n        schema:\n          type: boolean\n      - in: query\n        name: enrollment_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: password_stage\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: passwordless_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: recovery_flow\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: show_matched_user\n        schema:\n          type: boolean\n      - in: query\n        name: show_source_labels\n        schema:\n          type: boolean\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedIdentificationStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_identification_create\n      description: IdentificationStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentificationStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentificationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/identification/{stage_uuid}/:\n    get:\n      operationId: stages_identification_retrieve\n      description: IdentificationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Identification Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentificationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_identification_update\n      description: IdentificationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Identification Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentificationStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentificationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_identification_partial_update\n      description: IdentificationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Identification Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedIdentificationStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentificationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_identification_destroy\n      description: IdentificationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Identification Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/identification/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_identification_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Identification Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/invitation/invitations/:\n    get:\n      operationId: stages_invitation_invitations_list\n      description: Invitation Viewset\n      parameters:\n      - in: query\n        name: created_by__username\n        schema:\n          type: string\n      - in: query\n        name: expires\n        schema:\n          type: string\n          format: date-time\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedInvitationList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_invitation_invitations_create\n      description: Invitation Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InvitationRequest'\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invitation'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/invitation/invitations/{invite_uuid}/:\n    get:\n      operationId: stages_invitation_invitations_retrieve\n      description: Invitation Viewset\n      parameters:\n      - in: path\n        name: invite_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invitation'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_invitation_invitations_update\n      description: Invitation Viewset\n      parameters:\n      - in: path\n        name: invite_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InvitationRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invitation'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_invitation_invitations_partial_update\n      description: Invitation Viewset\n      parameters:\n      - in: path\n        name: invite_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedInvitationRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invitation'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_invitation_invitations_destroy\n      description: Invitation Viewset\n      parameters:\n      - in: path\n        name: invite_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/invitation/invitations/{invite_uuid}/used_by/:\n    get:\n      operationId: stages_invitation_invitations_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: invite_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/invitation/stages/:\n    get:\n      operationId: stages_invitation_stages_list\n      description: InvitationStage Viewset\n      parameters:\n      - in: query\n        name: continue_flow_without_invitation\n        schema:\n          type: boolean\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: no_flows\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedInvitationStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_invitation_stages_create\n      description: InvitationStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InvitationStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvitationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/invitation/stages/{stage_uuid}/:\n    get:\n      operationId: stages_invitation_stages_retrieve\n      description: InvitationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvitationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_invitation_stages_update\n      description: InvitationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InvitationStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvitationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_invitation_stages_partial_update\n      description: InvitationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedInvitationStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvitationStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_invitation_stages_destroy\n      description: InvitationStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/invitation/stages/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_invitation_stages_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Invitation Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/password/:\n    get:\n      operationId: stages_password_list\n      description: PasswordStage Viewset\n      parameters:\n      - in: query\n        name: configure_flow\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: failed_attempts_before_cancel\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPasswordStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_password_create\n      description: PasswordStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/password/{stage_uuid}/:\n    get:\n      operationId: stages_password_retrieve\n      description: PasswordStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_password_update\n      description: PasswordStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_password_partial_update\n      description: PasswordStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPasswordStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_password_destroy\n      description: PasswordStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/password/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_password_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Password Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/prompt/prompts/:\n    get:\n      operationId: stages_prompt_prompts_list\n      description: Prompt Viewset\n      parameters:\n      - in: query\n        name: field_key\n        schema:\n          type: string\n      - in: query\n        name: label\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: placeholder\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: type\n        schema:\n          type: string\n          enum:\n          - checkbox\n          - date\n          - date-time\n          - email\n          - hidden\n          - number\n          - password\n          - separator\n          - static\n          - text\n          - text_read_only\n          - username\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPromptList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_prompt_prompts_create\n      description: Prompt Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PromptRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prompt'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/prompt/prompts/{prompt_uuid}/:\n    get:\n      operationId: stages_prompt_prompts_retrieve\n      description: Prompt Viewset\n      parameters:\n      - in: path\n        name: prompt_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prompt'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_prompt_prompts_update\n      description: Prompt Viewset\n      parameters:\n      - in: path\n        name: prompt_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PromptRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prompt'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_prompt_prompts_partial_update\n      description: Prompt Viewset\n      parameters:\n      - in: path\n        name: prompt_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPromptRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prompt'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_prompt_prompts_destroy\n      description: Prompt Viewset\n      parameters:\n      - in: path\n        name: prompt_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/prompt/prompts/{prompt_uuid}/used_by/:\n    get:\n      operationId: stages_prompt_prompts_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: prompt_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/prompt/stages/:\n    get:\n      operationId: stages_prompt_stages_list\n      description: PromptStage Viewset\n      parameters:\n      - in: query\n        name: fields\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: validation_policies\n        schema:\n          type: array\n          items:\n            type: string\n            format: uuid\n        explode: true\n        style: form\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPromptStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_prompt_stages_create\n      description: PromptStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PromptStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PromptStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/prompt/stages/{stage_uuid}/:\n    get:\n      operationId: stages_prompt_stages_retrieve\n      description: PromptStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PromptStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_prompt_stages_update\n      description: PromptStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PromptStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PromptStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_prompt_stages_partial_update\n      description: PromptStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPromptStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PromptStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_prompt_stages_destroy\n      description: PromptStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/prompt/stages/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_prompt_stages_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Prompt Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_delete/:\n    get:\n      operationId: stages_user_delete_list\n      description: UserDeleteStage Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserDeleteStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_user_delete_create\n      description: UserDeleteStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDeleteStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDeleteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_delete/{stage_uuid}/:\n    get:\n      operationId: stages_user_delete_retrieve\n      description: UserDeleteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Delete Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDeleteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_user_delete_update\n      description: UserDeleteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Delete Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDeleteStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDeleteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_user_delete_partial_update\n      description: UserDeleteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Delete Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserDeleteStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDeleteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_user_delete_destroy\n      description: UserDeleteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Delete Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_delete/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_user_delete_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Delete Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_login/:\n    get:\n      operationId: stages_user_login_list\n      description: UserLoginStage Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: session_duration\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserLoginStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_user_login_create\n      description: UserLoginStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserLoginStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLoginStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_login/{stage_uuid}/:\n    get:\n      operationId: stages_user_login_retrieve\n      description: UserLoginStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Login Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLoginStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_user_login_update\n      description: UserLoginStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Login Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserLoginStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLoginStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_user_login_partial_update\n      description: UserLoginStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Login Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserLoginStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLoginStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_user_login_destroy\n      description: UserLoginStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Login Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_login/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_user_login_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Login Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_logout/:\n    get:\n      operationId: stages_user_logout_list\n      description: UserLogoutStage Viewset\n      parameters:\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserLogoutStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_user_logout_create\n      description: UserLogoutStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserLogoutStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLogoutStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_logout/{stage_uuid}/:\n    get:\n      operationId: stages_user_logout_retrieve\n      description: UserLogoutStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Logout Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLogoutStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_user_logout_update\n      description: UserLogoutStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Logout Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserLogoutStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLogoutStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_user_logout_partial_update\n      description: UserLogoutStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Logout Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserLogoutStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLogoutStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_user_logout_destroy\n      description: UserLogoutStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Logout Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_logout/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_user_logout_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Logout Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_write/:\n    get:\n      operationId: stages_user_write_list\n      description: UserWriteStage Viewset\n      parameters:\n      - in: query\n        name: create_users_as_inactive\n        schema:\n          type: boolean\n      - in: query\n        name: create_users_group\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserWriteStageList'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    post:\n      operationId: stages_user_write_create\n      description: UserWriteStage Viewset\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserWriteStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWriteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_write/{stage_uuid}/:\n    get:\n      operationId: stages_user_write_retrieve\n      description: UserWriteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Write Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWriteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    put:\n      operationId: stages_user_write_update\n      description: UserWriteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Write Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserWriteStageRequest'\n        required: true\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWriteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    patch:\n      operationId: stages_user_write_partial_update\n      description: UserWriteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Write Stage.\n        required: true\n      tags:\n      - stages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserWriteStageRequest'\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWriteStage'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n    delete:\n      operationId: stages_user_write_destroy\n      description: UserWriteStage Viewset\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Write Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '204':\n          description: No response body\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\n  /stages/user_write/{stage_uuid}/used_by/:\n    get:\n      operationId: stages_user_write_used_by_list\n      description: Get a list of all objects that use this object\n      parameters:\n      - in: path\n        name: stage_uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this User Write Stage.\n        required: true\n      tags:\n      - stages\n      security:\n      - authentik: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UsedBy'\n          description: ''\n        '400':\n          $ref: '#/components/schemas/ValidationError'\n        '403':\n          $ref: '#/components/schemas/GenericError'\ncomponents:\n  schemas:\n    AccessDeniedChallenge:\n      type: object\n      description: Challenge when a flow's active stage calls `stage_invalid()`.\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-access-denied\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        error_message:\n          type: string\n      required:\n      - pending_user\n      - pending_user_avatar\n      - type\n    App:\n      type: object\n      description: Serialize Application info\n      properties:\n        name:\n          type: string\n        label:\n          type: string\n      required:\n      - label\n      - name\n    AppEnum:\n      enum:\n      - authentik.admin\n      - authentik.api\n      - authentik.crypto\n      - authentik.events\n      - authentik.flows\n      - authentik.lib\n      - authentik.outposts\n      - authentik.policies.dummy\n      - authentik.policies.event_matcher\n      - authentik.policies.expiry\n      - authentik.policies.expression\n      - authentik.policies.hibp\n      - authentik.policies.password\n      - authentik.policies.reputation\n      - authentik.policies\n      - authentik.providers.ldap\n      - authentik.providers.oauth2\n      - authentik.providers.proxy\n      - authentik.providers.saml\n      - authentik.recovery\n      - authentik.sources.ldap\n      - authentik.sources.oauth\n      - authentik.sources.plex\n      - authentik.sources.saml\n      - authentik.stages.authenticator_duo\n      - authentik.stages.authenticator_sms\n      - authentik.stages.authenticator_static\n      - authentik.stages.authenticator_totp\n      - authentik.stages.authenticator_validate\n      - authentik.stages.authenticator_webauthn\n      - authentik.stages.captcha\n      - authentik.stages.consent\n      - authentik.stages.deny\n      - authentik.stages.dummy\n      - authentik.stages.email\n      - authentik.stages.identification\n      - authentik.stages.invitation\n      - authentik.stages.password\n      - authentik.stages.prompt\n      - authentik.stages.user_delete\n      - authentik.stages.user_login\n      - authentik.stages.user_logout\n      - authentik.stages.user_write\n      - authentik.tenants\n      - authentik.managed\n      - authentik.core\n      type: string\n    AppleChallengeResponseRequest:\n      type: object\n      description: Pseudo class for plex response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-flow-sources-oauth-apple\n    AppleLoginChallenge:\n      type: object\n      description: Special challenge for apple-native authentication flow, which happens\n        on the client.\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-flow-sources-oauth-apple\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        client_id:\n          type: string\n        scope:\n          type: string\n        redirect_uri:\n          type: string\n        state:\n          type: string\n      required:\n      - client_id\n      - redirect_uri\n      - scope\n      - state\n      - type\n    Application:\n      type: object\n      description: Application Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pbm uuid\n        name:\n          type: string\n          description: Application's display Name.\n        slug:\n          type: string\n          description: Internal application name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        provider:\n          type: integer\n          nullable: true\n        provider_obj:\n          $ref: '#/components/schemas/Provider'\n        launch_url:\n          type: string\n          nullable: true\n          readOnly: true\n        meta_launch_url:\n          type: string\n          format: uri\n        meta_icon:\n          type: string\n          nullable: true\n          readOnly: true\n        meta_description:\n          type: string\n        meta_publisher:\n          type: string\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n      required:\n      - launch_url\n      - meta_icon\n      - name\n      - pk\n      - slug\n    ApplicationRequest:\n      type: object\n      description: Application Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Application's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal application name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        provider:\n          type: integer\n          nullable: true\n        provider_obj:\n          $ref: '#/components/schemas/ProviderRequest'\n        meta_launch_url:\n          type: string\n          format: uri\n        meta_description:\n          type: string\n        meta_publisher:\n          type: string\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n      required:\n      - name\n      - slug\n    AuthTypeEnum:\n      enum:\n      - basic\n      - bearer\n      type: string\n    AuthenticateWebAuthnStage:\n      type: object\n      description: AuthenticateWebAuthnStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        user_verification:\n          $ref: '#/components/schemas/UserVerificationEnum'\n        authenticator_attachment:\n          allOf:\n          - $ref: '#/components/schemas/AuthenticatorAttachmentEnum'\n          nullable: true\n        resident_key_requirement:\n          $ref: '#/components/schemas/ResidentKeyRequirementEnum'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    AuthenticateWebAuthnStageRequest:\n      type: object\n      description: AuthenticateWebAuthnStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        user_verification:\n          $ref: '#/components/schemas/UserVerificationEnum'\n        authenticator_attachment:\n          allOf:\n          - $ref: '#/components/schemas/AuthenticatorAttachmentEnum'\n          nullable: true\n        resident_key_requirement:\n          $ref: '#/components/schemas/ResidentKeyRequirementEnum'\n      required:\n      - name\n    AuthenticatedSession:\n      type: object\n      description: AuthenticatedSession Serializer\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        current:\n          type: boolean\n          readOnly: true\n        user_agent:\n          type: object\n          properties:\n            device:\n              type: object\n              properties:\n                brand:\n                  type: string\n                family:\n                  type: string\n                model:\n                  type: string\n            os:\n              type: object\n              properties:\n                family:\n                  type: string\n                major:\n                  type: string\n                minor:\n                  type: string\n                patch:\n                  type: string\n                patch_minor:\n                  type: string\n            user_agent:\n              type: object\n              properties:\n                family:\n                  type: string\n                major:\n                  type: string\n                minor:\n                  type: string\n                patch:\n                  type: string\n            string:\n              type: string\n          readOnly: true\n        geo_ip:\n          type: object\n          properties:\n            continent:\n              type: string\n            country:\n              type: string\n            lat:\n              type: number\n              format: float\n            long:\n              type: number\n              format: float\n            city:\n              type: string\n          nullable: true\n          readOnly: true\n        user:\n          type: integer\n        last_ip:\n          type: string\n        last_user_agent:\n          type: string\n        last_used:\n          type: string\n          format: date-time\n          readOnly: true\n        expires:\n          type: string\n          format: date-time\n      required:\n      - current\n      - geo_ip\n      - last_ip\n      - last_used\n      - user\n      - user_agent\n    AuthenticatorAttachmentEnum:\n      enum:\n      - platform\n      - cross-platform\n      type: string\n    AuthenticatorDuoChallenge:\n      type: object\n      description: Duo Challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-authenticator-duo\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        activation_barcode:\n          type: string\n        activation_code:\n          type: string\n        stage_uuid:\n          type: string\n      required:\n      - activation_barcode\n      - activation_code\n      - pending_user\n      - pending_user_avatar\n      - stage_uuid\n      - type\n    AuthenticatorDuoChallengeResponseRequest:\n      type: object\n      description: Pseudo class for duo response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-authenticator-duo\n    AuthenticatorDuoStage:\n      type: object\n      description: AuthenticatorDuoStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        client_id:\n          type: string\n        api_hostname:\n          type: string\n      required:\n      - api_hostname\n      - client_id\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    AuthenticatorDuoStageRequest:\n      type: object\n      description: AuthenticatorDuoStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        client_id:\n          type: string\n          minLength: 1\n        client_secret:\n          type: string\n          writeOnly: true\n          minLength: 1\n        api_hostname:\n          type: string\n          minLength: 1\n      required:\n      - api_hostname\n      - client_id\n      - client_secret\n      - name\n    AuthenticatorSMSChallenge:\n      type: object\n      description: SMS Setup challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-authenticator-sms\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        phone_number_required:\n          type: boolean\n          default: true\n      required:\n      - pending_user\n      - pending_user_avatar\n      - type\n    AuthenticatorSMSChallengeResponseRequest:\n      type: object\n      description: SMS Challenge response, device is set by get_response_instance\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-authenticator-sms\n        code:\n          type: integer\n        phone_number:\n          type: string\n          minLength: 1\n    AuthenticatorSMSStage:\n      type: object\n      description: AuthenticatorSMSStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        provider:\n          $ref: '#/components/schemas/ProviderEnum'\n        from_number:\n          type: string\n        account_sid:\n          type: string\n        auth:\n          type: string\n        auth_password:\n          type: string\n        auth_type:\n          $ref: '#/components/schemas/AuthTypeEnum'\n      required:\n      - account_sid\n      - auth\n      - component\n      - from_number\n      - meta_model_name\n      - name\n      - pk\n      - provider\n      - verbose_name\n      - verbose_name_plural\n    AuthenticatorSMSStageRequest:\n      type: object\n      description: AuthenticatorSMSStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        provider:\n          $ref: '#/components/schemas/ProviderEnum'\n        from_number:\n          type: string\n          minLength: 1\n        account_sid:\n          type: string\n          minLength: 1\n        auth:\n          type: string\n          minLength: 1\n        auth_password:\n          type: string\n        auth_type:\n          $ref: '#/components/schemas/AuthTypeEnum'\n      required:\n      - account_sid\n      - auth\n      - from_number\n      - name\n      - provider\n    AuthenticatorStaticChallenge:\n      type: object\n      description: Static authenticator challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-authenticator-static\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        codes:\n          type: array\n          items:\n            type: string\n      required:\n      - codes\n      - pending_user\n      - pending_user_avatar\n      - type\n    AuthenticatorStaticChallengeResponseRequest:\n      type: object\n      description: Pseudo class for static response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-authenticator-static\n    AuthenticatorStaticStage:\n      type: object\n      description: AuthenticatorStaticStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        token_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    AuthenticatorStaticStageRequest:\n      type: object\n      description: AuthenticatorStaticStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        token_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n      required:\n      - name\n    AuthenticatorTOTPChallenge:\n      type: object\n      description: TOTP Setup challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-authenticator-totp\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        config_url:\n          type: string\n      required:\n      - config_url\n      - pending_user\n      - pending_user_avatar\n      - type\n    AuthenticatorTOTPChallengeResponseRequest:\n      type: object\n      description: TOTP Challenge response, device is set by get_response_instance\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-authenticator-totp\n        code:\n          type: integer\n      required:\n      - code\n    AuthenticatorTOTPStage:\n      type: object\n      description: AuthenticatorTOTPStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        digits:\n          allOf:\n          - $ref: '#/components/schemas/DigitsEnum'\n          minimum: -2147483648\n          maximum: 2147483647\n      required:\n      - component\n      - digits\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    AuthenticatorTOTPStageRequest:\n      type: object\n      description: AuthenticatorTOTPStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        digits:\n          allOf:\n          - $ref: '#/components/schemas/DigitsEnum'\n          minimum: -2147483648\n          maximum: 2147483647\n      required:\n      - digits\n      - name\n    AuthenticatorValidateStage:\n      type: object\n      description: AuthenticatorValidateStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        not_configured_action:\n          $ref: '#/components/schemas/NotConfiguredActionEnum'\n        device_classes:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceClassesEnum'\n          description: Device classes which can be used to authenticate\n        configuration_stages:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Stages used to configure Authenticator when user doesn't have\n            any compatible devices. After this configuration Stage passes, the user\n            is not prompted again.\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    AuthenticatorValidateStageRequest:\n      type: object\n      description: AuthenticatorValidateStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        not_configured_action:\n          $ref: '#/components/schemas/NotConfiguredActionEnum'\n        device_classes:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceClassesEnum'\n          description: Device classes which can be used to authenticate\n        configuration_stages:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Stages used to configure Authenticator when user doesn't have\n            any compatible devices. After this configuration Stage passes, the user\n            is not prompted again.\n      required:\n      - name\n    AuthenticatorValidationChallenge:\n      type: object\n      description: Authenticator challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-authenticator-validate\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        device_challenges:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceChallenge'\n        configuration_stages:\n          type: array\n          items:\n            $ref: '#/components/schemas/SelectableStage'\n      required:\n      - configuration_stages\n      - device_challenges\n      - pending_user\n      - pending_user_avatar\n      - type\n    AuthenticatorValidationChallengeResponseRequest:\n      type: object\n      description: Challenge used for Code-based and WebAuthn authenticators\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-authenticator-validate\n        selected_challenge:\n          $ref: '#/components/schemas/DeviceChallengeRequest'\n        selected_stage:\n          type: string\n          minLength: 1\n        code:\n          type: string\n          minLength: 1\n        webauthn:\n          type: object\n          additionalProperties: {}\n        duo:\n          type: integer\n    AuthenticatorWebAuthnChallenge:\n      type: object\n      description: WebAuthn Challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-authenticator-webauthn\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        registration:\n          type: object\n          additionalProperties: {}\n      required:\n      - pending_user\n      - pending_user_avatar\n      - registration\n      - type\n    AuthenticatorWebAuthnChallengeResponseRequest:\n      type: object\n      description: WebAuthn Challenge response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-authenticator-webauthn\n        response:\n          type: object\n          additionalProperties: {}\n      required:\n      - response\n    AutoSubmitChallengeResponseRequest:\n      type: object\n      description: Pseudo class for autosubmit response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-autosubmit\n    AutosubmitChallenge:\n      type: object\n      description: Autosubmit challenge used to send and navigate a POST request\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-autosubmit\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        url:\n          type: string\n        attrs:\n          type: object\n          additionalProperties:\n            type: string\n      required:\n      - attrs\n      - type\n      - url\n    BackendsEnum:\n      enum:\n      - authentik.core.auth.InbuiltBackend\n      - authentik.core.auth.TokenBackend\n      - authentik.sources.ldap.auth.LDAPBackend\n      type: string\n    BindingTypeEnum:\n      enum:\n      - REDIRECT\n      - POST\n      - POST_AUTO\n      type: string\n    Cache:\n      type: object\n      description: Generic cache stats for an object\n      properties:\n        count:\n          type: integer\n          readOnly: true\n      required:\n      - count\n    CapabilitiesEnum:\n      enum:\n      - can_save_media\n      - can_geo_ip\n      type: string\n    CaptchaChallenge:\n      type: object\n      description: Site public key\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-captcha\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        site_key:\n          type: string\n      required:\n      - pending_user\n      - pending_user_avatar\n      - site_key\n      - type\n    CaptchaChallengeResponseRequest:\n      type: object\n      description: Validate captcha token\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-captcha\n        token:\n          type: string\n          minLength: 1\n      required:\n      - token\n    CaptchaStage:\n      type: object\n      description: CaptchaStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        public_key:\n          type: string\n          description: Public key, acquired from https://www.google.com/recaptcha/intro/v3.html\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - public_key\n      - verbose_name\n      - verbose_name_plural\n    CaptchaStageRequest:\n      type: object\n      description: CaptchaStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        public_key:\n          type: string\n          minLength: 1\n          description: Public key, acquired from https://www.google.com/recaptcha/intro/v3.html\n        private_key:\n          type: string\n          writeOnly: true\n          minLength: 1\n          description: Private key, acquired from https://www.google.com/recaptcha/intro/v3.html\n      required:\n      - name\n      - private_key\n      - public_key\n    CertificateData:\n      type: object\n      description: Get CertificateKeyPair's data\n      properties:\n        data:\n          type: string\n          readOnly: true\n      required:\n      - data\n    CertificateGenerationRequest:\n      type: object\n      description: Certificate generation parameters\n      properties:\n        common_name:\n          type: string\n          minLength: 1\n        subject_alt_name:\n          type: string\n        validity_days:\n          type: integer\n      required:\n      - common_name\n      - validity_days\n    CertificateKeyPair:\n      type: object\n      description: CertificateKeyPair Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Kp uuid\n        name:\n          type: string\n        fingerprint_sha256:\n          type: string\n          readOnly: true\n        fingerprint_sha1:\n          type: string\n          readOnly: true\n        cert_expiry:\n          type: string\n          format: date-time\n          readOnly: true\n        cert_subject:\n          type: string\n          readOnly: true\n        private_key_available:\n          type: boolean\n          readOnly: true\n        private_key_type:\n          type: string\n          nullable: true\n          readOnly: true\n        certificate_download_url:\n          type: string\n          readOnly: true\n        private_key_download_url:\n          type: string\n          readOnly: true\n        managed:\n          type: string\n          nullable: true\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n      required:\n      - cert_expiry\n      - cert_subject\n      - certificate_download_url\n      - fingerprint_sha1\n      - fingerprint_sha256\n      - name\n      - pk\n      - private_key_available\n      - private_key_download_url\n      - private_key_type\n    CertificateKeyPairRequest:\n      type: object\n      description: CertificateKeyPair Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        certificate_data:\n          type: string\n          writeOnly: true\n          minLength: 1\n          description: PEM-encoded Certificate data\n        key_data:\n          type: string\n          writeOnly: true\n          description: Optional Private Key. If this is set, you can use this keypair\n            for encryption.\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n      required:\n      - certificate_data\n      - name\n    ChallengeChoices:\n      enum:\n      - native\n      - shell\n      - redirect\n      type: string\n    ChallengeTypes:\n      oneOf:\n      - $ref: '#/components/schemas/AccessDeniedChallenge'\n      - $ref: '#/components/schemas/AppleLoginChallenge'\n      - $ref: '#/components/schemas/AuthenticatorDuoChallenge'\n      - $ref: '#/components/schemas/AuthenticatorSMSChallenge'\n      - $ref: '#/components/schemas/AuthenticatorStaticChallenge'\n      - $ref: '#/components/schemas/AuthenticatorTOTPChallenge'\n      - $ref: '#/components/schemas/AuthenticatorValidationChallenge'\n      - $ref: '#/components/schemas/AuthenticatorWebAuthnChallenge'\n      - $ref: '#/components/schemas/AutosubmitChallenge'\n      - $ref: '#/components/schemas/CaptchaChallenge'\n      - $ref: '#/components/schemas/ConsentChallenge'\n      - $ref: '#/components/schemas/DummyChallenge'\n      - $ref: '#/components/schemas/EmailChallenge'\n      - $ref: '#/components/schemas/IdentificationChallenge'\n      - $ref: '#/components/schemas/PasswordChallenge'\n      - $ref: '#/components/schemas/PlexAuthenticationChallenge'\n      - $ref: '#/components/schemas/PromptChallenge'\n      - $ref: '#/components/schemas/RedirectChallenge'\n      - $ref: '#/components/schemas/ShellChallenge'\n      discriminator:\n        propertyName: component\n        mapping:\n          ak-stage-access-denied: '#/components/schemas/AccessDeniedChallenge'\n          ak-flow-sources-oauth-apple: '#/components/schemas/AppleLoginChallenge'\n          ak-stage-authenticator-duo: '#/components/schemas/AuthenticatorDuoChallenge'\n          ak-stage-authenticator-sms: '#/components/schemas/AuthenticatorSMSChallenge'\n          ak-stage-authenticator-static: '#/components/schemas/AuthenticatorStaticChallenge'\n          ak-stage-authenticator-totp: '#/components/schemas/AuthenticatorTOTPChallenge'\n          ak-stage-authenticator-validate: '#/components/schemas/AuthenticatorValidationChallenge'\n          ak-stage-authenticator-webauthn: '#/components/schemas/AuthenticatorWebAuthnChallenge'\n          ak-stage-autosubmit: '#/components/schemas/AutosubmitChallenge'\n          ak-stage-captcha: '#/components/schemas/CaptchaChallenge'\n          ak-stage-consent: '#/components/schemas/ConsentChallenge'\n          ak-stage-dummy: '#/components/schemas/DummyChallenge'\n          ak-stage-email: '#/components/schemas/EmailChallenge'\n          ak-stage-identification: '#/components/schemas/IdentificationChallenge'\n          ak-stage-password: '#/components/schemas/PasswordChallenge'\n          ak-flow-sources-plex: '#/components/schemas/PlexAuthenticationChallenge'\n          ak-stage-prompt: '#/components/schemas/PromptChallenge'\n          xak-flow-redirect: '#/components/schemas/RedirectChallenge'\n          xak-flow-shell: '#/components/schemas/ShellChallenge'\n    ClientTypeEnum:\n      enum:\n      - confidential\n      - public\n      type: string\n    Config:\n      type: object\n      description: Serialize authentik Config into DRF Object\n      properties:\n        error_reporting:\n          $ref: '#/components/schemas/ErrorReportingConfig'\n        capabilities:\n          type: array\n          items:\n            $ref: '#/components/schemas/CapabilitiesEnum'\n        cache_timeout:\n          type: integer\n        cache_timeout_flows:\n          type: integer\n        cache_timeout_policies:\n          type: integer\n        cache_timeout_reputation:\n          type: integer\n      required:\n      - cache_timeout\n      - cache_timeout_flows\n      - cache_timeout_policies\n      - cache_timeout_reputation\n      - capabilities\n      - error_reporting\n    ConsentChallenge:\n      type: object\n      description: Challenge info for consent screens\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-consent\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        header_text:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n      required:\n      - header_text\n      - pending_user\n      - pending_user_avatar\n      - permissions\n      - type\n    ConsentChallengeResponseRequest:\n      type: object\n      description: Consent challenge response, any valid response request is valid\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-consent\n    ConsentStage:\n      type: object\n      description: ConsentStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        mode:\n          $ref: '#/components/schemas/ConsentStageModeEnum'\n        consent_expire_in:\n          type: string\n          title: Consent expires in\n          description: 'Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3).'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    ConsentStageModeEnum:\n      enum:\n      - always_require\n      - permanent\n      - expiring\n      type: string\n    ConsentStageRequest:\n      type: object\n      description: ConsentStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        mode:\n          $ref: '#/components/schemas/ConsentStageModeEnum'\n        consent_expire_in:\n          type: string\n          minLength: 1\n          title: Consent expires in\n          description: 'Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3).'\n      required:\n      - name\n    ContextualFlowInfo:\n      type: object\n      description: Contextual flow information for a challenge\n      properties:\n        title:\n          type: string\n        background:\n          type: string\n        cancel_url:\n          type: string\n      required:\n      - cancel_url\n    Coordinate:\n      type: object\n      description: Coordinates for diagrams\n      properties:\n        x_cord:\n          type: integer\n          readOnly: true\n        y_cord:\n          type: integer\n          readOnly: true\n      required:\n      - x_cord\n      - y_cord\n    CurrentTenant:\n      type: object\n      description: Partial tenant information for styling\n      properties:\n        matched_domain:\n          type: string\n        branding_title:\n          type: string\n        branding_logo:\n          type: string\n        branding_favicon:\n          type: string\n        ui_footer_links:\n          type: array\n          items:\n            $ref: '#/components/schemas/FooterLink'\n          readOnly: true\n          default:\n          - href: https://goauthentik.io/docs/?utm_source=authentik\n            name: Documentation\n          - href: https://goauthentik.io/?utm_source=authentik\n            name: authentik Website\n        flow_authentication:\n          type: string\n        flow_invalidation:\n          type: string\n        flow_recovery:\n          type: string\n        flow_unenrollment:\n          type: string\n      required:\n      - branding_favicon\n      - branding_logo\n      - branding_title\n      - matched_domain\n      - ui_footer_links\n    DenyStage:\n      type: object\n      description: DenyStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    DenyStageRequest:\n      type: object\n      description: DenyStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n      required:\n      - name\n    Device:\n      type: object\n      description: Serializer for Duo authenticator devices\n      properties:\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        pk:\n          type: integer\n        name:\n          type: string\n        type:\n          type: string\n          readOnly: true\n      required:\n      - meta_model_name\n      - name\n      - pk\n      - type\n      - verbose_name\n      - verbose_name_plural\n    DeviceChallenge:\n      type: object\n      description: Single device challenge\n      properties:\n        device_class:\n          type: string\n        device_uid:\n          type: string\n        challenge:\n          type: object\n          additionalProperties: {}\n      required:\n      - challenge\n      - device_class\n      - device_uid\n    DeviceChallengeRequest:\n      type: object\n      description: Single device challenge\n      properties:\n        device_class:\n          type: string\n          minLength: 1\n        device_uid:\n          type: string\n          minLength: 1\n        challenge:\n          type: object\n          additionalProperties: {}\n      required:\n      - challenge\n      - device_class\n      - device_uid\n    DeviceClassesEnum:\n      enum:\n      - static\n      - totp\n      - webauthn\n      - duo\n      - sms\n      type: string\n    DigestAlgorithmEnum:\n      enum:\n      - http://www.w3.org/2000/09/xmldsig#sha1\n      - http://www.w3.org/2001/04/xmlenc#sha256\n      - http://www.w3.org/2001/04/xmldsig-more#sha384\n      - http://www.w3.org/2001/04/xmlenc#sha512\n      type: string\n    DigitsEnum:\n      enum:\n      - 6\n      - 8\n      type: integer\n    DockerServiceConnection:\n      type: object\n      description: DockerServiceConnection Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Uuid\n        name:\n          type: string\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        url:\n          type: string\n          description: Can be in the format of 'unix://\u003cpath\u003e' when connecting to\n            a local docker daemon, or 'https://\u003chostname\u003e:2376' when connecting to\n            a remote system.\n        tls_verification:\n          type: string\n          format: uuid\n          nullable: true\n          description: CA which the endpoint's Certificate is verified against. Can\n            be left empty for no validation.\n        tls_authentication:\n          type: string\n          format: uuid\n          nullable: true\n          description: Certificate/Key used for authentication. Can be left empty\n            for no authentication.\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - url\n      - verbose_name\n      - verbose_name_plural\n    DockerServiceConnectionRequest:\n      type: object\n      description: DockerServiceConnection Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n        url:\n          type: string\n          minLength: 1\n          description: Can be in the format of 'unix://\u003cpath\u003e' when connecting to\n            a local docker daemon, or 'https://\u003chostname\u003e:2376' when connecting to\n            a remote system.\n        tls_verification:\n          type: string\n          format: uuid\n          nullable: true\n          description: CA which the endpoint's Certificate is verified against. Can\n            be left empty for no validation.\n        tls_authentication:\n          type: string\n          format: uuid\n          nullable: true\n          description: Certificate/Key used for authentication. Can be left empty\n            for no authentication.\n      required:\n      - name\n      - url\n    DummyChallenge:\n      type: object\n      description: Dummy challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-dummy\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n      required:\n      - type\n    DummyChallengeResponseRequest:\n      type: object\n      description: Dummy challenge response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-dummy\n    DummyPolicy:\n      type: object\n      description: Dummy Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n        result:\n          type: boolean\n        wait_min:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        wait_max:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n      required:\n      - bound_to\n      - component\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    DummyPolicyRequest:\n      type: object\n      description: Dummy Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        result:\n          type: boolean\n        wait_min:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        wait_max:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n    DummyStage:\n      type: object\n      description: DummyStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    DummyStageRequest:\n      type: object\n      description: DummyStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n      required:\n      - name\n    DuoDevice:\n      type: object\n      description: Serializer for Duo authenticator devices\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n          description: The human-readable name of this device.\n          maxLength: 64\n      required:\n      - name\n      - pk\n    DuoDeviceRequest:\n      type: object\n      description: Serializer for Duo authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n      required:\n      - name\n    EmailChallenge:\n      type: object\n      description: Email challenge\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-email\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n      required:\n      - type\n    EmailChallengeResponseRequest:\n      type: object\n      description: |-\n        Email challenge resposen. No fields. This challenge is\n        always declared invalid to give the user a chance to retry\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-email\n    EmailStage:\n      type: object\n      description: EmailStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        use_global_settings:\n          type: boolean\n          description: When enabled, global Email connection settings will be used\n            and connection settings below will be ignored.\n        host:\n          type: string\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        username:\n          type: string\n        use_tls:\n          type: boolean\n        use_ssl:\n          type: boolean\n        timeout:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        from_address:\n          type: string\n          format: email\n          maxLength: 254\n        token_expiry:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Time in minutes the token sent is valid.\n        subject:\n          type: string\n        template:\n          type: string\n        activate_user_on_success:\n          type: boolean\n          description: Activate users upon completion of stage.\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    EmailStageRequest:\n      type: object\n      description: EmailStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        use_global_settings:\n          type: boolean\n          description: When enabled, global Email connection settings will be used\n            and connection settings below will be ignored.\n        host:\n          type: string\n          minLength: 1\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        username:\n          type: string\n        password:\n          type: string\n          writeOnly: true\n        use_tls:\n          type: boolean\n        use_ssl:\n          type: boolean\n        timeout:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        from_address:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        token_expiry:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Time in minutes the token sent is valid.\n        subject:\n          type: string\n          minLength: 1\n        template:\n          type: string\n          minLength: 1\n        activate_user_on_success:\n          type: boolean\n          description: Activate users upon completion of stage.\n      required:\n      - name\n    ErrorDetail:\n      type: object\n      description: Serializer for rest_framework's error messages\n      properties:\n        string:\n          type: string\n        code:\n          type: string\n      required:\n      - code\n      - string\n    ErrorReportingConfig:\n      type: object\n      description: Config for error reporting\n      properties:\n        enabled:\n          type: boolean\n          readOnly: true\n        environment:\n          type: string\n          readOnly: true\n        send_pii:\n          type: boolean\n          readOnly: true\n        traces_sample_rate:\n          type: number\n          format: float\n          readOnly: true\n      required:\n      - enabled\n      - environment\n      - send_pii\n      - traces_sample_rate\n    Event:\n      type: object\n      description: Event Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Event uuid\n        user:\n          type: object\n          additionalProperties: {}\n        action:\n          $ref: '#/components/schemas/EventActions'\n        app:\n          type: string\n        context:\n          type: object\n          additionalProperties: {}\n        client_ip:\n          type: string\n          nullable: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        expires:\n          type: string\n          format: date-time\n        tenant:\n          type: object\n          additionalProperties: {}\n      required:\n      - action\n      - app\n      - created\n      - pk\n    EventActions:\n      enum:\n      - login\n      - login_failed\n      - logout\n      - user_write\n      - suspicious_request\n      - password_set\n      - secret_view\n      - secret_rotate\n      - invitation_used\n      - authorize_application\n      - source_linked\n      - impersonation_started\n      - impersonation_ended\n      - flow_execution\n      - policy_execution\n      - policy_exception\n      - property_mapping_exception\n      - system_task_execution\n      - system_task_exception\n      - system_exception\n      - configuration_error\n      - model_created\n      - model_updated\n      - model_deleted\n      - email_sent\n      - update_available\n      - custom_\n      type: string\n    EventMatcherPolicy:\n      type: object\n      description: Event Matcher Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n        action:\n          allOf:\n          - $ref: '#/components/schemas/EventActions'\n          description: Match created events with this action type. When left empty,\n            all action types will be matched.\n        client_ip:\n          type: string\n          description: Matches Event's Client IP (strict matching, for network matching\n            use an Expression Policy)\n        app:\n          allOf:\n          - $ref: '#/components/schemas/AppEnum'\n          description: Match events created by selected application. When left empty,\n            all applications are matched.\n      required:\n      - bound_to\n      - component\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    EventMatcherPolicyRequest:\n      type: object\n      description: Event Matcher Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        action:\n          allOf:\n          - $ref: '#/components/schemas/EventActions'\n          description: Match created events with this action type. When left empty,\n            all action types will be matched.\n        client_ip:\n          type: string\n          description: Matches Event's Client IP (strict matching, for network matching\n            use an Expression Policy)\n        app:\n          allOf:\n          - $ref: '#/components/schemas/AppEnum'\n          description: Match events created by selected application. When left empty,\n            all applications are matched.\n    EventRequest:\n      type: object\n      description: Event Serializer\n      properties:\n        user:\n          type: object\n          additionalProperties: {}\n        action:\n          $ref: '#/components/schemas/EventActions'\n        app:\n          type: string\n          minLength: 1\n        context:\n          type: object\n          additionalProperties: {}\n        client_ip:\n          type: string\n          nullable: true\n          minLength: 1\n        expires:\n          type: string\n          format: date-time\n        tenant:\n          type: object\n          additionalProperties: {}\n      required:\n      - action\n      - app\n    EventTopPerUser:\n      type: object\n      description: Response object of Event's top_per_user\n      properties:\n        application:\n          type: object\n          additionalProperties: {}\n        counted_events:\n          type: integer\n        unique_users:\n          type: integer\n      required:\n      - application\n      - counted_events\n      - unique_users\n    ExpiringBaseGrantModel:\n      type: object\n      description: Serializer for BaseGrantModel and ExpiringBaseGrant\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        provider:\n          $ref: '#/components/schemas/OAuth2Provider'\n        user:\n          $ref: '#/components/schemas/User'\n        is_expired:\n          type: boolean\n          readOnly: true\n        expires:\n          type: string\n          format: date-time\n        scope:\n          type: array\n          items:\n            type: string\n      required:\n      - is_expired\n      - pk\n      - provider\n      - scope\n      - user\n    ExpressionPolicy:\n      type: object\n      description: Group Membership Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n        expression:\n          type: string\n      required:\n      - bound_to\n      - component\n      - expression\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    ExpressionPolicyRequest:\n      type: object\n      description: Group Membership Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        expression:\n          type: string\n          minLength: 1\n      required:\n      - expression\n    FilePathRequest:\n      type: object\n      description: Serializer to upload file\n      properties:\n        url:\n          type: string\n          minLength: 1\n      required:\n      - url\n    FileUploadRequest:\n      type: object\n      description: Serializer to upload file\n      properties:\n        file:\n          type: string\n          format: binary\n        clear:\n          type: boolean\n          default: false\n    Flow:\n      type: object\n      description: Flow Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Flow uuid\n        policybindingmodel_ptr_id:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n        slug:\n          type: string\n          description: Visible in the URL.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        title:\n          type: string\n          description: Shown as the Title in Flow pages.\n        designation:\n          allOf:\n          - $ref: '#/components/schemas/FlowDesignationEnum'\n          description: Decides what this Flow is used for. For example, the Authentication\n            flow is redirect to when an un-authenticated user visits authentik.\n        background:\n          type: string\n          readOnly: true\n        stages:\n          type: array\n          items:\n            type: string\n            format: uuid\n          readOnly: true\n        policies:\n          type: array\n          items:\n            type: string\n            format: uuid\n          readOnly: true\n        cache_count:\n          type: integer\n          readOnly: true\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        compatibility_mode:\n          type: boolean\n          description: Enable compatibility mode, increases compatibility with password\n            managers on mobile devices.\n        export_url:\n          type: string\n          readOnly: true\n      required:\n      - background\n      - cache_count\n      - designation\n      - export_url\n      - name\n      - pk\n      - policies\n      - policybindingmodel_ptr_id\n      - slug\n      - stages\n      - title\n    FlowChallengeResponseRequest:\n      oneOf:\n      - $ref: '#/components/schemas/AppleChallengeResponseRequest'\n      - $ref: '#/components/schemas/AuthenticatorDuoChallengeResponseRequest'\n      - $ref: '#/components/schemas/AuthenticatorSMSChallengeResponseRequest'\n      - $ref: '#/components/schemas/AuthenticatorStaticChallengeResponseRequest'\n      - $ref: '#/components/schemas/AuthenticatorTOTPChallengeResponseRequest'\n      - $ref: '#/components/schemas/AuthenticatorValidationChallengeResponseRequest'\n      - $ref: '#/components/schemas/AuthenticatorWebAuthnChallengeResponseRequest'\n      - $ref: '#/components/schemas/AutoSubmitChallengeResponseRequest'\n      - $ref: '#/components/schemas/CaptchaChallengeResponseRequest'\n      - $ref: '#/components/schemas/ConsentChallengeResponseRequest'\n      - $ref: '#/components/schemas/DummyChallengeResponseRequest'\n      - $ref: '#/components/schemas/EmailChallengeResponseRequest'\n      - $ref: '#/components/schemas/IdentificationChallengeResponseRequest'\n      - $ref: '#/components/schemas/PasswordChallengeResponseRequest'\n      - $ref: '#/components/schemas/PlexAuthenticationChallengeResponseRequest'\n      - $ref: '#/components/schemas/PromptChallengeResponseRequest'\n      discriminator:\n        propertyName: component\n        mapping:\n          ak-flow-sources-oauth-apple: '#/components/schemas/AppleChallengeResponseRequest'\n          ak-stage-authenticator-duo: '#/components/schemas/AuthenticatorDuoChallengeResponseRequest'\n          ak-stage-authenticator-sms: '#/components/schemas/AuthenticatorSMSChallengeResponseRequest'\n          ak-stage-authenticator-static: '#/components/schemas/AuthenticatorStaticChallengeResponseRequest'\n          ak-stage-authenticator-totp: '#/components/schemas/AuthenticatorTOTPChallengeResponseRequest'\n          ak-stage-authenticator-validate: '#/components/schemas/AuthenticatorValidationChallengeResponseRequest'\n          ak-stage-authenticator-webauthn: '#/components/schemas/AuthenticatorWebAuthnChallengeResponseRequest'\n          ak-stage-autosubmit: '#/components/schemas/AutoSubmitChallengeResponseRequest'\n          ak-stage-captcha: '#/components/schemas/CaptchaChallengeResponseRequest'\n          ak-stage-consent: '#/components/schemas/ConsentChallengeResponseRequest'\n          ak-stage-dummy: '#/components/schemas/DummyChallengeResponseRequest'\n          ak-stage-email: '#/components/schemas/EmailChallengeResponseRequest'\n          ak-stage-identification: '#/components/schemas/IdentificationChallengeResponseRequest'\n          ak-stage-password: '#/components/schemas/PasswordChallengeResponseRequest'\n          ak-flow-sources-plex: '#/components/schemas/PlexAuthenticationChallengeResponseRequest'\n          ak-stage-prompt: '#/components/schemas/PromptChallengeResponseRequest'\n    FlowDesignationEnum:\n      enum:\n      - authentication\n      - authorization\n      - invalidation\n      - enrollment\n      - unenrollment\n      - recovery\n      - stage_configuration\n      type: string\n    FlowDiagram:\n      type: object\n      description: response of the flow's diagram action\n      properties:\n        diagram:\n          type: string\n          readOnly: true\n      required:\n      - diagram\n    FlowInspection:\n      type: object\n      description: Serializer for inspect endpoint\n      properties:\n        plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowInspectorPlan'\n        current_plan:\n          $ref: '#/components/schemas/FlowInspectorPlan'\n        is_completed:\n          type: boolean\n      required:\n      - is_completed\n      - plans\n    FlowInspectorPlan:\n      type: object\n      description: Serializer for an active FlowPlan\n      properties:\n        current_stage:\n          allOf:\n          - $ref: '#/components/schemas/FlowStageBinding'\n          readOnly: true\n        next_planned_stage:\n          allOf:\n          - $ref: '#/components/schemas/FlowStageBinding'\n          readOnly: true\n        plan_context:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        session_id:\n          type: string\n          readOnly: true\n      required:\n      - current_stage\n      - next_planned_stage\n      - plan_context\n      - session_id\n    FlowRequest:\n      type: object\n      description: Flow Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        slug:\n          type: string\n          minLength: 1\n          description: Visible in the URL.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        title:\n          type: string\n          minLength: 1\n          description: Shown as the Title in Flow pages.\n        designation:\n          allOf:\n          - $ref: '#/components/schemas/FlowDesignationEnum'\n          description: Decides what this Flow is used for. For example, the Authentication\n            flow is redirect to when an un-authenticated user visits authentik.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        compatibility_mode:\n          type: boolean\n          description: Enable compatibility mode, increases compatibility with password\n            managers on mobile devices.\n      required:\n      - designation\n      - name\n      - slug\n      - title\n    FlowStageBinding:\n      type: object\n      description: FlowStageBinding Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Fsb uuid\n        policybindingmodel_ptr_id:\n          type: string\n          format: uuid\n          readOnly: true\n        target:\n          type: string\n          format: uuid\n        stage:\n          type: string\n          format: uuid\n        stage_obj:\n          allOf:\n          - $ref: '#/components/schemas/Stage'\n          readOnly: true\n        evaluate_on_plan:\n          type: boolean\n          description: Evaluate policies during the Flow planning process. Disable\n            this for input-based policies.\n        re_evaluate_policies:\n          type: boolean\n          description: Evaluate policies when the Stage is present to the user.\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        invalid_response_action:\n          allOf:\n          - $ref: '#/components/schemas/InvalidResponseActionEnum'\n          description: Configure how the flow executor should handle an invalid response\n            to a challenge. RETRY returns the error message and a similar challenge\n            to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT\n            restarts the flow while keeping the current context.\n      required:\n      - order\n      - pk\n      - policybindingmodel_ptr_id\n      - stage\n      - stage_obj\n      - target\n    FlowStageBindingRequest:\n      type: object\n      description: FlowStageBinding Serializer\n      properties:\n        target:\n          type: string\n          format: uuid\n        stage:\n          type: string\n          format: uuid\n        evaluate_on_plan:\n          type: boolean\n          description: Evaluate policies during the Flow planning process. Disable\n            this for input-based policies.\n        re_evaluate_policies:\n          type: boolean\n          description: Evaluate policies when the Stage is present to the user.\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        invalid_response_action:\n          allOf:\n          - $ref: '#/components/schemas/InvalidResponseActionEnum'\n          description: Configure how the flow executor should handle an invalid response\n            to a challenge. RETRY returns the error message and a similar challenge\n            to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT\n            restarts the flow while keeping the current context.\n      required:\n      - order\n      - stage\n      - target\n    FooterLink:\n      type: object\n      description: Links returned in Config API\n      properties:\n        href:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n      required:\n      - href\n      - name\n    GenericError:\n      type: object\n      description: Generic API Error\n      properties:\n        detail:\n          type: string\n        code:\n          type: string\n      required:\n      - detail\n    Group:\n      type: object\n      description: Group Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Group uuid\n        name:\n          type: string\n          maxLength: 80\n        is_superuser:\n          type: boolean\n          description: Users added to this group will be superusers.\n        parent:\n          type: string\n          format: uuid\n          nullable: true\n        parent_name:\n          type: string\n          readOnly: true\n        users:\n          type: array\n          items:\n            type: integer\n        attributes:\n          type: object\n          additionalProperties: {}\n        users_obj:\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupMember'\n          readOnly: true\n      required:\n      - name\n      - parent\n      - parent_name\n      - pk\n      - users\n      - users_obj\n    GroupMember:\n      type: object\n      description: Stripped down user serializer to show relevant users for groups\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        name:\n          type: string\n          description: User's display name.\n        is_active:\n          type: boolean\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        last_login:\n          type: string\n          format: date-time\n          nullable: true\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        avatar:\n          type: string\n          readOnly: true\n        attributes:\n          type: object\n          additionalProperties: {}\n        uid:\n          type: string\n          readOnly: true\n      required:\n      - avatar\n      - name\n      - pk\n      - uid\n      - username\n    GroupMemberRequest:\n      type: object\n      description: Stripped down user serializer to show relevant users for groups\n      properties:\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        name:\n          type: string\n          minLength: 1\n          description: User's display name.\n        is_active:\n          type: boolean\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        last_login:\n          type: string\n          format: date-time\n          nullable: true\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        attributes:\n          type: object\n          additionalProperties: {}\n      required:\n      - name\n      - username\n    GroupRequest:\n      type: object\n      description: Group Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 80\n        is_superuser:\n          type: boolean\n          description: Users added to this group will be superusers.\n        parent:\n          type: string\n          format: uuid\n          nullable: true\n        users:\n          type: array\n          items:\n            type: integer\n        attributes:\n          type: object\n          additionalProperties: {}\n      required:\n      - name\n      - parent\n      - users\n    HaveIBeenPwendPolicy:\n      type: object\n      description: Have I Been Pwned Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n        password_field:\n          type: string\n          description: Field key to check, field keys defined in Prompt stages are\n            available.\n        allowed_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n      required:\n      - bound_to\n      - component\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    HaveIBeenPwendPolicyRequest:\n      type: object\n      description: Have I Been Pwned Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        password_field:\n          type: string\n          minLength: 1\n          description: Field key to check, field keys defined in Prompt stages are\n            available.\n        allowed_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n    IdentificationChallenge:\n      type: object\n      description: Identification challenges with all UI elements\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-identification\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        user_fields:\n          type: array\n          items:\n            type: string\n          nullable: true\n        password_fields:\n          type: boolean\n        application_pre:\n          type: string\n        enroll_url:\n          type: string\n        recovery_url:\n          type: string\n        passwordless_url:\n          type: string\n        primary_action:\n          type: string\n        sources:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoginSource'\n        show_source_labels:\n          type: boolean\n      required:\n      - password_fields\n      - primary_action\n      - show_source_labels\n      - type\n      - user_fields\n    IdentificationChallengeResponseRequest:\n      type: object\n      description: Identification challenge\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-identification\n        uid_field:\n          type: string\n          minLength: 1\n        password:\n          type: string\n          nullable: true\n      required:\n      - uid_field\n    IdentificationStage:\n      type: object\n      description: IdentificationStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        user_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserFieldsEnum'\n          description: Fields of the user object to match against. (Hold shift to\n            select multiple options)\n        password_stage:\n          type: string\n          format: uuid\n          nullable: true\n          description: When set, shows a password field, instead of showing the password\n            field as seaprate step.\n        case_insensitive_matching:\n          type: boolean\n          description: When enabled, user fields are matched regardless of their casing.\n        show_matched_user:\n          type: boolean\n          description: When a valid username/email has been entered, and this option\n            is enabled, the user's username and avatar will be shown. Otherwise, the\n            text that the user entered will be shown\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional enrollment flow, which is linked at the bottom of\n            the page.\n        recovery_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional recovery flow, which is linked at the bottom of the\n            page.\n        passwordless_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional passwordless flow, which is linked at the bottom of\n            the page.\n        sources:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Specify which sources should be shown.\n        show_source_labels:\n          type: boolean\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    IdentificationStageRequest:\n      type: object\n      description: IdentificationStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        user_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserFieldsEnum'\n          description: Fields of the user object to match against. (Hold shift to\n            select multiple options)\n        password_stage:\n          type: string\n          format: uuid\n          nullable: true\n          description: When set, shows a password field, instead of showing the password\n            field as seaprate step.\n        case_insensitive_matching:\n          type: boolean\n          description: When enabled, user fields are matched regardless of their casing.\n        show_matched_user:\n          type: boolean\n          description: When a valid username/email has been entered, and this option\n            is enabled, the user's username and avatar will be shown. Otherwise, the\n            text that the user entered will be shown\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional enrollment flow, which is linked at the bottom of\n            the page.\n        recovery_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional recovery flow, which is linked at the bottom of the\n            page.\n        passwordless_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional passwordless flow, which is linked at the bottom of\n            the page.\n        sources:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Specify which sources should be shown.\n        show_source_labels:\n          type: boolean\n      required:\n      - name\n    IntentEnum:\n      enum:\n      - verification\n      - api\n      - recovery\n      - app_password\n      type: string\n    InvalidResponseActionEnum:\n      enum:\n      - retry\n      - restart\n      - restart_with_context\n      type: string\n    Invitation:\n      type: object\n      description: Invitation Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Invite uuid\n        expires:\n          type: string\n          format: date-time\n        fixed_data:\n          type: object\n          additionalProperties: {}\n        created_by:\n          allOf:\n          - $ref: '#/components/schemas/GroupMember'\n          readOnly: true\n        single_use:\n          type: boolean\n          description: When enabled, the invitation will be deleted after usage.\n      required:\n      - created_by\n      - pk\n    InvitationRequest:\n      type: object\n      description: Invitation Serializer\n      properties:\n        expires:\n          type: string\n          format: date-time\n        fixed_data:\n          type: object\n          additionalProperties: {}\n        single_use:\n          type: boolean\n          description: When enabled, the invitation will be deleted after usage.\n    InvitationStage:\n      type: object\n      description: InvitationStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        continue_flow_without_invitation:\n          type: boolean\n          description: If this flag is set, this Stage will jump to the next Stage\n            when no Invitation is given. By default this Stage will cancel the Flow\n            when no invitation is given.\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    InvitationStageRequest:\n      type: object\n      description: InvitationStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        continue_flow_without_invitation:\n          type: boolean\n          description: If this flag is set, this Stage will jump to the next Stage\n            when no Invitation is given. By default this Stage will cancel the Flow\n            when no invitation is given.\n      required:\n      - name\n    IssuerModeEnum:\n      enum:\n      - global\n      - per_provider\n      type: string\n    KubernetesServiceConnection:\n      type: object\n      description: KubernetesServiceConnection Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Uuid\n        name:\n          type: string\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        kubeconfig:\n          type: object\n          additionalProperties: {}\n          description: Paste your kubeconfig here. authentik will automatically use\n            the currently selected context.\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    KubernetesServiceConnectionRequest:\n      type: object\n      description: KubernetesServiceConnection Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n        kubeconfig:\n          type: object\n          additionalProperties: {}\n          description: Paste your kubeconfig here. authentik will automatically use\n            the currently selected context.\n      required:\n      - name\n    LDAPOutpostConfig:\n      type: object\n      description: LDAPProvider Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n        base_dn:\n          type: string\n          description: DN under which objects are accessible.\n        bind_flow_slug:\n          type: string\n        application_slug:\n          type: string\n        search_group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Users in this group can do search queries. If not set, every\n            user can execute search queries.\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        tls_server_name:\n          type: string\n        uid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for uidNumbers, this number is added to the user.Pk\n            to make sure that the numbers aren't too low for POSIX users. Default\n            is 2000 to ensure that we don't collide with local users uidNumber\n        gid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for gidNumbers, this number is added to a number\n            generated from the group.Pk to make sure that the numbers aren't too low\n            for POSIX groups. Default is 4000 to ensure that we don't collide with\n            local groups or users primary groups gidNumber\n        search_mode:\n          $ref: '#/components/schemas/SearchModeEnum'\n      required:\n      - application_slug\n      - bind_flow_slug\n      - name\n      - pk\n    LDAPPropertyMapping:\n      type: object\n      description: LDAP PropertyMapping Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pm uuid\n        managed:\n          type: string\n          nullable: true\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n        expression:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        object_field:\n          type: string\n      required:\n      - component\n      - expression\n      - meta_model_name\n      - name\n      - object_field\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    LDAPPropertyMappingRequest:\n      type: object\n      description: LDAP PropertyMapping Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n        object_field:\n          type: string\n          minLength: 1\n      required:\n      - expression\n      - name\n      - object_field\n    LDAPProvider:\n      type: object\n      description: LDAPProvider Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        component:\n          type: string\n          readOnly: true\n        assigned_application_slug:\n          type: string\n          description: Internal application name, used in URLs.\n          readOnly: true\n        assigned_application_name:\n          type: string\n          description: Application's display Name.\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        base_dn:\n          type: string\n          description: DN under which objects are accessible.\n        search_group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Users in this group can do search queries. If not set, every\n            user can execute search queries.\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        tls_server_name:\n          type: string\n        uid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for uidNumbers, this number is added to the user.Pk\n            to make sure that the numbers aren't too low for POSIX users. Default\n            is 2000 to ensure that we don't collide with local users uidNumber\n        gid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for gidNumbers, this number is added to a number\n            generated from the group.Pk to make sure that the numbers aren't too low\n            for POSIX groups. Default is 4000 to ensure that we don't collide with\n            local groups or users primary groups gidNumber\n        outpost_set:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        search_mode:\n          $ref: '#/components/schemas/SearchModeEnum'\n      required:\n      - assigned_application_name\n      - assigned_application_slug\n      - authorization_flow\n      - component\n      - meta_model_name\n      - name\n      - outpost_set\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    LDAPProviderRequest:\n      type: object\n      description: LDAPProvider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        base_dn:\n          type: string\n          minLength: 1\n          description: DN under which objects are accessible.\n        search_group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Users in this group can do search queries. If not set, every\n            user can execute search queries.\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        tls_server_name:\n          type: string\n        uid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for uidNumbers, this number is added to the user.Pk\n            to make sure that the numbers aren't too low for POSIX users. Default\n            is 2000 to ensure that we don't collide with local users uidNumber\n        gid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for gidNumbers, this number is added to a number\n            generated from the group.Pk to make sure that the numbers aren't too low\n            for POSIX groups. Default is 4000 to ensure that we don't collide with\n            local groups or users primary groups gidNumber\n        search_mode:\n          $ref: '#/components/schemas/SearchModeEnum'\n      required:\n      - authorization_flow\n      - name\n    LDAPSource:\n      type: object\n      description: LDAP Source Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pbm uuid\n        name:\n          type: string\n          description: Source's display Name.\n        slug:\n          type: string\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        server_uri:\n          type: string\n          format: uri\n        peer_certificate:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optionally verify the LDAP Server's Certificate against the\n            CA Chain in this keypair.\n        bind_cn:\n          type: string\n        start_tls:\n          type: boolean\n          title: Enable Start TLS\n        base_dn:\n          type: string\n        additional_user_dn:\n          type: string\n          title: Addition User DN\n          description: Prepended to Base DN for User-queries.\n        additional_group_dn:\n          type: string\n          title: Addition Group DN\n          description: Prepended to Base DN for Group-queries.\n        user_object_filter:\n          type: string\n          description: Consider Objects matching this filter to be Users.\n        group_object_filter:\n          type: string\n          description: Consider Objects matching this filter to be Groups.\n        group_membership_field:\n          type: string\n          description: Field which contains members of a group.\n        object_uniqueness_field:\n          type: string\n          description: Field which contains a unique Identifier.\n        sync_users:\n          type: boolean\n        sync_users_password:\n          type: boolean\n          description: When a user changes their password, sync it back to LDAP. This\n            can only be enabled on a single LDAP source.\n        sync_groups:\n          type: boolean\n        sync_parent_group:\n          type: string\n          format: uuid\n          nullable: true\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        property_mappings_group:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Property mappings used for group creation/updating.\n      required:\n      - base_dn\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - server_uri\n      - slug\n      - verbose_name\n      - verbose_name_plural\n    LDAPSourceRequest:\n      type: object\n      description: LDAP Source Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        server_uri:\n          type: string\n          minLength: 1\n          format: uri\n        peer_certificate:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optionally verify the LDAP Server's Certificate against the\n            CA Chain in this keypair.\n        bind_cn:\n          type: string\n        bind_password:\n          type: string\n          writeOnly: true\n        start_tls:\n          type: boolean\n          title: Enable Start TLS\n        base_dn:\n          type: string\n          minLength: 1\n        additional_user_dn:\n          type: string\n          title: Addition User DN\n          description: Prepended to Base DN for User-queries.\n        additional_group_dn:\n          type: string\n          title: Addition Group DN\n          description: Prepended to Base DN for Group-queries.\n        user_object_filter:\n          type: string\n          minLength: 1\n          description: Consider Objects matching this filter to be Users.\n        group_object_filter:\n          type: string\n          minLength: 1\n          description: Consider Objects matching this filter to be Groups.\n        group_membership_field:\n          type: string\n          minLength: 1\n          description: Field which contains members of a group.\n        object_uniqueness_field:\n          type: string\n          minLength: 1\n          description: Field which contains a unique Identifier.\n        sync_users:\n          type: boolean\n        sync_users_password:\n          type: boolean\n          description: When a user changes their password, sync it back to LDAP. This\n            can only be enabled on a single LDAP source.\n        sync_groups:\n          type: boolean\n        sync_parent_group:\n          type: string\n          format: uuid\n          nullable: true\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        property_mappings_group:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Property mappings used for group creation/updating.\n      required:\n      - base_dn\n      - name\n      - server_uri\n      - slug\n    Link:\n      type: object\n      description: Returns a single link\n      properties:\n        link:\n          type: string\n      required:\n      - link\n    LoginChallengeTypes:\n      oneOf:\n      - $ref: '#/components/schemas/RedirectChallenge'\n      - $ref: '#/components/schemas/PlexAuthenticationChallenge'\n      - $ref: '#/components/schemas/AppleLoginChallenge'\n      discriminator:\n        propertyName: component\n        mapping:\n          xak-flow-redirect: '#/components/schemas/RedirectChallenge'\n          ak-flow-sources-plex: '#/components/schemas/PlexAuthenticationChallenge'\n          ak-flow-sources-oauth-apple: '#/components/schemas/AppleLoginChallenge'\n    LoginMetrics:\n      type: object\n      description: Login Metrics per 1h\n      properties:\n        logins_per_1h:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coordinate'\n          readOnly: true\n        logins_failed_per_1h:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coordinate'\n          readOnly: true\n      required:\n      - logins_failed_per_1h\n      - logins_per_1h\n    LoginSource:\n      type: object\n      description: Serializer for Login buttons of sources\n      properties:\n        name:\n          type: string\n        icon_url:\n          type: string\n          nullable: true\n        challenge:\n          $ref: '#/components/schemas/LoginChallengeTypes'\n      required:\n      - challenge\n      - name\n    NameIdPolicyEnum:\n      enum:\n      - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n      - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n      - urn:oasis:names:tc:SAML:2.0:nameid-format:X509SubjectName\n      - urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName\n      - urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n      type: string\n    NotConfiguredActionEnum:\n      enum:\n      - skip\n      - deny\n      - configure\n      type: string\n    Notification:\n      type: object\n      description: Notification Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Uuid\n        severity:\n          allOf:\n          - $ref: '#/components/schemas/SeverityEnum'\n          readOnly: true\n        body:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        event:\n          $ref: '#/components/schemas/Event'\n        seen:\n          type: boolean\n      required:\n      - body\n      - created\n      - pk\n      - severity\n    NotificationRequest:\n      type: object\n      description: Notification Serializer\n      properties:\n        event:\n          $ref: '#/components/schemas/EventRequest'\n        seen:\n          type: boolean\n    NotificationRule:\n      type: object\n      description: NotificationRule Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pbm uuid\n        name:\n          type: string\n        transports:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Select which transports should be used to notify the user.\n            If none are selected, the notification will only be shown in the authentik\n            UI.\n        severity:\n          allOf:\n          - $ref: '#/components/schemas/SeverityEnum'\n          description: Controls which severity level the created notifications will\n            have.\n        group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Define which group of users this notification should be sent\n            and shown to. If left empty, Notification won't ben sent.\n        group_obj:\n          allOf:\n          - $ref: '#/components/schemas/Group'\n          readOnly: true\n      required:\n      - group_obj\n      - name\n      - pk\n      - transports\n    NotificationRuleRequest:\n      type: object\n      description: NotificationRule Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        transports:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Select which transports should be used to notify the user.\n            If none are selected, the notification will only be shown in the authentik\n            UI.\n        severity:\n          allOf:\n          - $ref: '#/components/schemas/SeverityEnum'\n          description: Controls which severity level the created notifications will\n            have.\n        group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Define which group of users this notification should be sent\n            and shown to. If left empty, Notification won't ben sent.\n      required:\n      - name\n      - transports\n    NotificationTransport:\n      type: object\n      description: NotificationTransport Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Uuid\n        name:\n          type: string\n        mode:\n          $ref: '#/components/schemas/NotificationTransportModeEnum'\n        mode_verbose:\n          type: string\n          readOnly: true\n        webhook_url:\n          type: string\n          format: uri\n        webhook_mapping:\n          type: string\n          format: uuid\n          nullable: true\n        send_once:\n          type: boolean\n          description: Only send notification once, for example when sending a webhook\n            into a chat channel.\n      required:\n      - mode\n      - mode_verbose\n      - name\n      - pk\n    NotificationTransportModeEnum:\n      enum:\n      - webhook\n      - webhook_slack\n      - email\n      type: string\n    NotificationTransportRequest:\n      type: object\n      description: NotificationTransport Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        mode:\n          $ref: '#/components/schemas/NotificationTransportModeEnum'\n        webhook_url:\n          type: string\n          format: uri\n        webhook_mapping:\n          type: string\n          format: uuid\n          nullable: true\n        send_once:\n          type: boolean\n          description: Only send notification once, for example when sending a webhook\n            into a chat channel.\n      required:\n      - mode\n      - name\n    NotificationTransportTest:\n      type: object\n      description: Notification test serializer\n      properties:\n        messages:\n          type: array\n          items:\n            type: string\n      required:\n      - messages\n    NotificationWebhookMapping:\n      type: object\n      description: NotificationWebhookMapping Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pm uuid\n        name:\n          type: string\n        expression:\n          type: string\n      required:\n      - expression\n      - name\n      - pk\n    NotificationWebhookMappingRequest:\n      type: object\n      description: NotificationWebhookMapping Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n      required:\n      - expression\n      - name\n    OAuth2Provider:\n      type: object\n      description: OAuth2Provider Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        component:\n          type: string\n          readOnly: true\n        assigned_application_slug:\n          type: string\n          description: Internal application name, used in URLs.\n          readOnly: true\n        assigned_application_name:\n          type: string\n          description: Application's display Name.\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        client_type:\n          allOf:\n          - $ref: '#/components/schemas/ClientTypeEnum'\n          description: |-\n            Confidential clients are capable of maintaining the confidentiality\n                of their credentials. Public clients are incapable.\n        client_id:\n          type: string\n          maxLength: 255\n        client_secret:\n          type: string\n          maxLength: 255\n        access_code_validity:\n          type: string\n          description: 'Access codes not valid on or after current time + this value\n            (Format: hours=1;minutes=2;seconds=3).'\n        token_validity:\n          type: string\n          description: 'Tokens not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n        include_claims_in_id_token:\n          type: boolean\n          description: Include User claims from scopes in the id_token, for applications\n            that don't access the userinfo endpoint.\n        signing_key:\n          type: string\n          format: uuid\n          nullable: true\n          title: RSA Key\n          description: Key used to sign the tokens. Only required when JWT Algorithm\n            is set to RS256.\n        redirect_uris:\n          type: string\n          description: Enter each URI on a new line.\n        sub_mode:\n          allOf:\n          - $ref: '#/components/schemas/SubModeEnum'\n          description: Configure what data should be used as unique User Identifier.\n            For most cases, the default should be fine.\n        issuer_mode:\n          allOf:\n          - $ref: '#/components/schemas/IssuerModeEnum'\n          description: Configure how the issuer field of the ID Token should be filled.\n      required:\n      - assigned_application_name\n      - assigned_application_slug\n      - authorization_flow\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    OAuth2ProviderRequest:\n      type: object\n      description: OAuth2Provider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        client_type:\n          allOf:\n          - $ref: '#/components/schemas/ClientTypeEnum'\n          description: |-\n            Confidential clients are capable of maintaining the confidentiality\n                of their credentials. Public clients are incapable.\n        client_id:\n          type: string\n          minLength: 1\n          maxLength: 255\n        client_secret:\n          type: string\n          maxLength: 255\n        access_code_validity:\n          type: string\n          minLength: 1\n          description: 'Access codes not valid on or after current time + this value\n            (Format: hours=1;minutes=2;seconds=3).'\n        token_validity:\n          type: string\n          minLength: 1\n          description: 'Tokens not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n        include_claims_in_id_token:\n          type: boolean\n          description: Include User claims from scopes in the id_token, for applications\n            that don't access the userinfo endpoint.\n        signing_key:\n          type: string\n          format: uuid\n          nullable: true\n          title: RSA Key\n          description: Key used to sign the tokens. Only required when JWT Algorithm\n            is set to RS256.\n        redirect_uris:\n          type: string\n          description: Enter each URI on a new line.\n        sub_mode:\n          allOf:\n          - $ref: '#/components/schemas/SubModeEnum'\n          description: Configure what data should be used as unique User Identifier.\n            For most cases, the default should be fine.\n        issuer_mode:\n          allOf:\n          - $ref: '#/components/schemas/IssuerModeEnum'\n          description: Configure how the issuer field of the ID Token should be filled.\n      required:\n      - authorization_flow\n      - name\n    OAuth2ProviderSetupURLs:\n      type: object\n      description: OAuth2 Provider Metadata serializer\n      properties:\n        issuer:\n          type: string\n          readOnly: true\n        authorize:\n          type: string\n          readOnly: true\n        token:\n          type: string\n          readOnly: true\n        user_info:\n          type: string\n          readOnly: true\n        provider_info:\n          type: string\n          readOnly: true\n        logout:\n          type: string\n          readOnly: true\n      required:\n      - authorize\n      - issuer\n      - logout\n      - provider_info\n      - token\n      - user_info\n    OAuthSource:\n      type: object\n      description: OAuth Source Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pbm uuid\n        name:\n          type: string\n          description: Source's display Name.\n        slug:\n          type: string\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        provider_type:\n          $ref: '#/components/schemas/ProviderTypeEnum'\n        request_token_url:\n          type: string\n          nullable: true\n          description: URL used to request the initial token. This URL is only required\n            for OAuth 1.\n          maxLength: 255\n        authorization_url:\n          type: string\n          nullable: true\n          description: URL the user is redirect to to conest the flow.\n          maxLength: 255\n        access_token_url:\n          type: string\n          nullable: true\n          description: URL used by authentik to retrieve tokens.\n          maxLength: 255\n        profile_url:\n          type: string\n          nullable: true\n          description: URL used by authentik to get user information.\n          maxLength: 255\n        consumer_key:\n          type: string\n        callback_url:\n          type: string\n          readOnly: true\n        additional_scopes:\n          type: string\n        type:\n          allOf:\n          - $ref: '#/components/schemas/SourceType'\n          readOnly: true\n      required:\n      - callback_url\n      - component\n      - consumer_key\n      - meta_model_name\n      - name\n      - pk\n      - provider_type\n      - slug\n      - type\n      - verbose_name\n      - verbose_name_plural\n    OAuthSourceRequest:\n      type: object\n      description: OAuth Source Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        provider_type:\n          $ref: '#/components/schemas/ProviderTypeEnum'\n        request_token_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL used to request the initial token. This URL is only required\n            for OAuth 1.\n          maxLength: 255\n        authorization_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL the user is redirect to to conest the flow.\n          maxLength: 255\n        access_token_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL used by authentik to retrieve tokens.\n          maxLength: 255\n        profile_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL used by authentik to get user information.\n          maxLength: 255\n        consumer_key:\n          type: string\n          minLength: 1\n        consumer_secret:\n          type: string\n          writeOnly: true\n          minLength: 1\n        additional_scopes:\n          type: string\n      required:\n      - consumer_key\n      - consumer_secret\n      - name\n      - provider_type\n      - slug\n    OpenIDConnectConfiguration:\n      type: object\n      description: rest_framework Serializer for OIDC Configuration\n      properties:\n        issuer:\n          type: string\n        authorization_endpoint:\n          type: string\n        token_endpoint:\n          type: string\n        userinfo_endpoint:\n          type: string\n        end_session_endpoint:\n          type: string\n        introspection_endpoint:\n          type: string\n        jwks_uri:\n          type: string\n        response_types_supported:\n          type: array\n          items:\n            type: string\n        id_token_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n        subject_types_supported:\n          type: array\n          items:\n            type: string\n        token_endpoint_auth_methods_supported:\n          type: array\n          items:\n            type: string\n      required:\n      - authorization_endpoint\n      - end_session_endpoint\n      - id_token_signing_alg_values_supported\n      - introspection_endpoint\n      - issuer\n      - jwks_uri\n      - response_types_supported\n      - subject_types_supported\n      - token_endpoint\n      - token_endpoint_auth_methods_supported\n      - userinfo_endpoint\n    Outpost:\n      type: object\n      description: Outpost Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Uuid\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/OutpostTypeEnum'\n        providers:\n          type: array\n          items:\n            type: integer\n        providers_obj:\n          type: array\n          items:\n            $ref: '#/components/schemas/Provider'\n          readOnly: true\n        service_connection:\n          type: string\n          format: uuid\n          nullable: true\n          description: Select Service-Connection authentik should use to manage this\n            outpost. Leave empty if authentik should not handle the deployment.\n        service_connection_obj:\n          allOf:\n          - $ref: '#/components/schemas/ServiceConnection'\n          readOnly: true\n        token_identifier:\n          type: string\n          readOnly: true\n        config:\n          type: object\n          additionalProperties: {}\n        managed:\n          type: string\n          nullable: true\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n      required:\n      - config\n      - name\n      - pk\n      - providers\n      - providers_obj\n      - service_connection_obj\n      - token_identifier\n      - type\n    OutpostDefaultConfig:\n      type: object\n      description: Global default outpost config\n      properties:\n        config:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n      required:\n      - config\n    OutpostHealth:\n      type: object\n      description: Outpost health status\n      properties:\n        last_seen:\n          type: string\n          format: date-time\n          readOnly: true\n        version:\n          type: string\n          readOnly: true\n        version_should:\n          type: string\n          readOnly: true\n        version_outdated:\n          type: boolean\n          readOnly: true\n        build_hash:\n          type: string\n          readOnly: true\n        build_hash_should:\n          type: string\n          readOnly: true\n      required:\n      - build_hash\n      - build_hash_should\n      - last_seen\n      - version\n      - version_outdated\n      - version_should\n    OutpostRequest:\n      type: object\n      description: Outpost Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        type:\n          $ref: '#/components/schemas/OutpostTypeEnum'\n        providers:\n          type: array\n          items:\n            type: integer\n        service_connection:\n          type: string\n          format: uuid\n          nullable: true\n          description: Select Service-Connection authentik should use to manage this\n            outpost. Leave empty if authentik should not handle the deployment.\n        config:\n          type: object\n          additionalProperties: {}\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n      required:\n      - config\n      - name\n      - providers\n      - type\n    OutpostTypeEnum:\n      enum:\n      - proxy\n      - ldap\n      type: string\n    PaginatedApplicationList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Application'\n      required:\n      - pagination\n      - results\n    PaginatedAuthenticateWebAuthnStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticateWebAuthnStage'\n      required:\n      - pagination\n      - results\n    PaginatedAuthenticatedSessionList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticatedSession'\n      required:\n      - pagination\n      - results\n    PaginatedAuthenticatorDuoStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticatorDuoStage'\n      required:\n      - pagination\n      - results\n    PaginatedAuthenticatorSMSStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticatorSMSStage'\n      required:\n      - pagination\n      - results\n    PaginatedAuthenticatorStaticStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticatorStaticStage'\n      required:\n      - pagination\n      - results\n    PaginatedAuthenticatorTOTPStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticatorTOTPStage'\n      required:\n      - pagination\n      - results\n    PaginatedAuthenticatorValidateStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticatorValidateStage'\n      required:\n      - pagination\n      - results\n    PaginatedCaptchaStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/CaptchaStage'\n      required:\n      - pagination\n      - results\n    PaginatedCertificateKeyPairList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/CertificateKeyPair'\n      required:\n      - pagination\n      - results\n    PaginatedConsentStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentStage'\n      required:\n      - pagination\n      - results\n    PaginatedDenyStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DenyStage'\n      required:\n      - pagination\n      - results\n    PaginatedDockerServiceConnectionList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DockerServiceConnection'\n      required:\n      - pagination\n      - results\n    PaginatedDummyPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DummyPolicy'\n      required:\n      - pagination\n      - results\n    PaginatedDummyStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DummyStage'\n      required:\n      - pagination\n      - results\n    PaginatedDuoDeviceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DuoDevice'\n      required:\n      - pagination\n      - results\n    PaginatedEmailStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailStage'\n      required:\n      - pagination\n      - results\n    PaginatedEventList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n      required:\n      - pagination\n      - results\n    PaginatedEventMatcherPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventMatcherPolicy'\n      required:\n      - pagination\n      - results\n    PaginatedExpiringBaseGrantModelList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpiringBaseGrantModel'\n      required:\n      - pagination\n      - results\n    PaginatedExpressionPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpressionPolicy'\n      required:\n      - pagination\n      - results\n    PaginatedFlowList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n      required:\n      - pagination\n      - results\n    PaginatedFlowStageBindingList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowStageBinding'\n      required:\n      - pagination\n      - results\n    PaginatedGroupList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Group'\n      required:\n      - pagination\n      - results\n    PaginatedHaveIBeenPwendPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/HaveIBeenPwendPolicy'\n      required:\n      - pagination\n      - results\n    PaginatedIdentificationStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentificationStage'\n      required:\n      - pagination\n      - results\n    PaginatedInvitationList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Invitation'\n      required:\n      - pagination\n      - results\n    PaginatedInvitationStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvitationStage'\n      required:\n      - pagination\n      - results\n    PaginatedKubernetesServiceConnectionList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/KubernetesServiceConnection'\n      required:\n      - pagination\n      - results\n    PaginatedLDAPOutpostConfigList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/LDAPOutpostConfig'\n      required:\n      - pagination\n      - results\n    PaginatedLDAPPropertyMappingList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/LDAPPropertyMapping'\n      required:\n      - pagination\n      - results\n    PaginatedLDAPProviderList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/LDAPProvider'\n      required:\n      - pagination\n      - results\n    PaginatedLDAPSourceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/LDAPSource'\n      required:\n      - pagination\n      - results\n    PaginatedNotificationList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Notification'\n      required:\n      - pagination\n      - results\n    PaginatedNotificationRuleList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/NotificationRule'\n      required:\n      - pagination\n      - results\n    PaginatedNotificationTransportList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/NotificationTransport'\n      required:\n      - pagination\n      - results\n    PaginatedNotificationWebhookMappingList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/NotificationWebhookMapping'\n      required:\n      - pagination\n      - results\n    PaginatedOAuth2ProviderList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/OAuth2Provider'\n      required:\n      - pagination\n      - results\n    PaginatedOAuthSourceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/OAuthSource'\n      required:\n      - pagination\n      - results\n    PaginatedOutpostList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Outpost'\n      required:\n      - pagination\n      - results\n    PaginatedPasswordExpiryPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PasswordExpiryPolicy'\n      required:\n      - pagination\n      - results\n    PaginatedPasswordPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PasswordPolicy'\n      required:\n      - pagination\n      - results\n    PaginatedPasswordStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PasswordStage'\n      required:\n      - pagination\n      - results\n    PaginatedPlexSourceConnectionList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlexSourceConnection'\n      required:\n      - pagination\n      - results\n    PaginatedPlexSourceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlexSource'\n      required:\n      - pagination\n      - results\n    PaginatedPolicyBindingList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PolicyBinding'\n      required:\n      - pagination\n      - results\n    PaginatedPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Policy'\n      required:\n      - pagination\n      - results\n    PaginatedPromptList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prompt'\n      required:\n      - pagination\n      - results\n    PaginatedPromptStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PromptStage'\n      required:\n      - pagination\n      - results\n    PaginatedPropertyMappingList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PropertyMapping'\n      required:\n      - pagination\n      - results\n    PaginatedProviderList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Provider'\n      required:\n      - pagination\n      - results\n    PaginatedProxyOutpostConfigList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProxyOutpostConfig'\n      required:\n      - pagination\n      - results\n    PaginatedProxyProviderList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProxyProvider'\n      required:\n      - pagination\n      - results\n    PaginatedRefreshTokenModelList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/RefreshTokenModel'\n      required:\n      - pagination\n      - results\n    PaginatedReputationList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reputation'\n      required:\n      - pagination\n      - results\n    PaginatedReputationPolicyList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReputationPolicy'\n      required:\n      - pagination\n      - results\n    PaginatedSAMLPropertyMappingList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SAMLPropertyMapping'\n      required:\n      - pagination\n      - results\n    PaginatedSAMLProviderList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SAMLProvider'\n      required:\n      - pagination\n      - results\n    PaginatedSAMLSourceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SAMLSource'\n      required:\n      - pagination\n      - results\n    PaginatedSMSDeviceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SMSDevice'\n      required:\n      - pagination\n      - results\n    PaginatedScopeMappingList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ScopeMapping'\n      required:\n      - pagination\n      - results\n    PaginatedServiceConnectionList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceConnection'\n      required:\n      - pagination\n      - results\n    PaginatedSourceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Source'\n      required:\n      - pagination\n      - results\n    PaginatedStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Stage'\n      required:\n      - pagination\n      - results\n    PaginatedStaticDeviceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/StaticDevice'\n      required:\n      - pagination\n      - results\n    PaginatedTOTPDeviceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TOTPDevice'\n      required:\n      - pagination\n      - results\n    PaginatedTenantList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tenant'\n      required:\n      - pagination\n      - results\n    PaginatedTokenList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Token'\n      required:\n      - pagination\n      - results\n    PaginatedUserConsentList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserConsent'\n      required:\n      - pagination\n      - results\n    PaginatedUserDeleteStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserDeleteStage'\n      required:\n      - pagination\n      - results\n    PaginatedUserList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n      required:\n      - pagination\n      - results\n    PaginatedUserLoginStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserLoginStage'\n      required:\n      - pagination\n      - results\n    PaginatedUserLogoutStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserLogoutStage'\n      required:\n      - pagination\n      - results\n    PaginatedUserOAuthSourceConnectionList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserOAuthSourceConnection'\n      required:\n      - pagination\n      - results\n    PaginatedUserSourceConnectionList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSourceConnection'\n      required:\n      - pagination\n      - results\n    PaginatedUserWriteStageList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserWriteStage'\n      required:\n      - pagination\n      - results\n    PaginatedWebAuthnDeviceList:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            next:\n              type: number\n            previous:\n              type: number\n            count:\n              type: number\n            current:\n              type: number\n            total_pages:\n              type: number\n            start_index:\n              type: number\n            end_index:\n              type: number\n          required:\n          - next\n          - previous\n          - count\n          - current\n          - total_pages\n          - start_index\n          - end_index\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/WebAuthnDevice'\n      required:\n      - pagination\n      - results\n    PasswordChallenge:\n      type: object\n      description: Password challenge UI fields\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-password\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        pending_user:\n          type: string\n        pending_user_avatar:\n          type: string\n        recovery_url:\n          type: string\n      required:\n      - pending_user\n      - pending_user_avatar\n      - type\n    PasswordChallengeResponseRequest:\n      type: object\n      description: Password challenge response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-password\n        password:\n          type: string\n          minLength: 1\n      required:\n      - password\n    PasswordExpiryPolicy:\n      type: object\n      description: Password Expiry Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n        days:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        deny_only:\n          type: boolean\n      required:\n      - bound_to\n      - component\n      - days\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    PasswordExpiryPolicyRequest:\n      type: object\n      description: Password Expiry Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        days:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        deny_only:\n          type: boolean\n      required:\n      - days\n    PasswordPolicy:\n      type: object\n      description: Password Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n        password_field:\n          type: string\n          description: Field key to check, field keys defined in Prompt stages are\n            available.\n        amount_digits:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_uppercase:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_lowercase:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_symbols:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        length_min:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        symbol_charset:\n          type: string\n        error_message:\n          type: string\n      required:\n      - bound_to\n      - component\n      - error_message\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    PasswordPolicyRequest:\n      type: object\n      description: Password Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        password_field:\n          type: string\n          minLength: 1\n          description: Field key to check, field keys defined in Prompt stages are\n            available.\n        amount_digits:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_uppercase:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_lowercase:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_symbols:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        length_min:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        symbol_charset:\n          type: string\n          minLength: 1\n        error_message:\n          type: string\n          minLength: 1\n      required:\n      - error_message\n    PasswordStage:\n      type: object\n      description: PasswordStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        backends:\n          type: array\n          items:\n            $ref: '#/components/schemas/BackendsEnum'\n          description: Selection of backends to test the password against.\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        failed_attempts_before_cancel:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: How many attempts a user has before the flow is canceled. To\n            lock the user out, use a reputation policy and a user_write stage.\n      required:\n      - backends\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    PasswordStageRequest:\n      type: object\n      description: PasswordStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        backends:\n          type: array\n          items:\n            $ref: '#/components/schemas/BackendsEnum'\n          description: Selection of backends to test the password against.\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        failed_attempts_before_cancel:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: How many attempts a user has before the flow is canceled. To\n            lock the user out, use a reputation policy and a user_write stage.\n      required:\n      - backends\n      - name\n    PatchedApplicationRequest:\n      type: object\n      description: Application Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Application's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal application name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        provider:\n          type: integer\n          nullable: true\n        provider_obj:\n          $ref: '#/components/schemas/ProviderRequest'\n        meta_launch_url:\n          type: string\n          format: uri\n        meta_description:\n          type: string\n        meta_publisher:\n          type: string\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n    PatchedAuthenticateWebAuthnStageRequest:\n      type: object\n      description: AuthenticateWebAuthnStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        user_verification:\n          $ref: '#/components/schemas/UserVerificationEnum'\n        authenticator_attachment:\n          allOf:\n          - $ref: '#/components/schemas/AuthenticatorAttachmentEnum'\n          nullable: true\n        resident_key_requirement:\n          $ref: '#/components/schemas/ResidentKeyRequirementEnum'\n    PatchedAuthenticatorDuoStageRequest:\n      type: object\n      description: AuthenticatorDuoStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        client_id:\n          type: string\n          minLength: 1\n        client_secret:\n          type: string\n          writeOnly: true\n          minLength: 1\n        api_hostname:\n          type: string\n          minLength: 1\n    PatchedAuthenticatorSMSStageRequest:\n      type: object\n      description: AuthenticatorSMSStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        provider:\n          $ref: '#/components/schemas/ProviderEnum'\n        from_number:\n          type: string\n          minLength: 1\n        account_sid:\n          type: string\n          minLength: 1\n        auth:\n          type: string\n          minLength: 1\n        auth_password:\n          type: string\n        auth_type:\n          $ref: '#/components/schemas/AuthTypeEnum'\n    PatchedAuthenticatorStaticStageRequest:\n      type: object\n      description: AuthenticatorStaticStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        token_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n    PatchedAuthenticatorTOTPStageRequest:\n      type: object\n      description: AuthenticatorTOTPStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        digits:\n          allOf:\n          - $ref: '#/components/schemas/DigitsEnum'\n          minimum: -2147483648\n          maximum: 2147483647\n    PatchedAuthenticatorValidateStageRequest:\n      type: object\n      description: AuthenticatorValidateStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        not_configured_action:\n          $ref: '#/components/schemas/NotConfiguredActionEnum'\n        device_classes:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceClassesEnum'\n          description: Device classes which can be used to authenticate\n        configuration_stages:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Stages used to configure Authenticator when user doesn't have\n            any compatible devices. After this configuration Stage passes, the user\n            is not prompted again.\n    PatchedCaptchaStageRequest:\n      type: object\n      description: CaptchaStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        public_key:\n          type: string\n          minLength: 1\n          description: Public key, acquired from https://www.google.com/recaptcha/intro/v3.html\n        private_key:\n          type: string\n          writeOnly: true\n          minLength: 1\n          description: Private key, acquired from https://www.google.com/recaptcha/intro/v3.html\n    PatchedCertificateKeyPairRequest:\n      type: object\n      description: CertificateKeyPair Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        certificate_data:\n          type: string\n          writeOnly: true\n          minLength: 1\n          description: PEM-encoded Certificate data\n        key_data:\n          type: string\n          writeOnly: true\n          description: Optional Private Key. If this is set, you can use this keypair\n            for encryption.\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n    PatchedConsentStageRequest:\n      type: object\n      description: ConsentStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        mode:\n          $ref: '#/components/schemas/ConsentStageModeEnum'\n        consent_expire_in:\n          type: string\n          minLength: 1\n          title: Consent expires in\n          description: 'Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3).'\n    PatchedDenyStageRequest:\n      type: object\n      description: DenyStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n    PatchedDockerServiceConnectionRequest:\n      type: object\n      description: DockerServiceConnection Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n        url:\n          type: string\n          minLength: 1\n          description: Can be in the format of 'unix://\u003cpath\u003e' when connecting to\n            a local docker daemon, or 'https://\u003chostname\u003e:2376' when connecting to\n            a remote system.\n        tls_verification:\n          type: string\n          format: uuid\n          nullable: true\n          description: CA which the endpoint's Certificate is verified against. Can\n            be left empty for no validation.\n        tls_authentication:\n          type: string\n          format: uuid\n          nullable: true\n          description: Certificate/Key used for authentication. Can be left empty\n            for no authentication.\n    PatchedDummyPolicyRequest:\n      type: object\n      description: Dummy Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        result:\n          type: boolean\n        wait_min:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        wait_max:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n    PatchedDummyStageRequest:\n      type: object\n      description: DummyStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n    PatchedDuoDeviceRequest:\n      type: object\n      description: Serializer for Duo authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n    PatchedEmailStageRequest:\n      type: object\n      description: EmailStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        use_global_settings:\n          type: boolean\n          description: When enabled, global Email connection settings will be used\n            and connection settings below will be ignored.\n        host:\n          type: string\n          minLength: 1\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        username:\n          type: string\n        password:\n          type: string\n          writeOnly: true\n        use_tls:\n          type: boolean\n        use_ssl:\n          type: boolean\n        timeout:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        from_address:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        token_expiry:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Time in minutes the token sent is valid.\n        subject:\n          type: string\n          minLength: 1\n        template:\n          type: string\n          minLength: 1\n        activate_user_on_success:\n          type: boolean\n          description: Activate users upon completion of stage.\n    PatchedEventMatcherPolicyRequest:\n      type: object\n      description: Event Matcher Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        action:\n          allOf:\n          - $ref: '#/components/schemas/EventActions'\n          description: Match created events with this action type. When left empty,\n            all action types will be matched.\n        client_ip:\n          type: string\n          description: Matches Event's Client IP (strict matching, for network matching\n            use an Expression Policy)\n        app:\n          allOf:\n          - $ref: '#/components/schemas/AppEnum'\n          description: Match events created by selected application. When left empty,\n            all applications are matched.\n    PatchedEventRequest:\n      type: object\n      description: Event Serializer\n      properties:\n        user:\n          type: object\n          additionalProperties: {}\n        action:\n          $ref: '#/components/schemas/EventActions'\n        app:\n          type: string\n          minLength: 1\n        context:\n          type: object\n          additionalProperties: {}\n        client_ip:\n          type: string\n          nullable: true\n          minLength: 1\n        expires:\n          type: string\n          format: date-time\n        tenant:\n          type: object\n          additionalProperties: {}\n    PatchedExpressionPolicyRequest:\n      type: object\n      description: Group Membership Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        expression:\n          type: string\n          minLength: 1\n    PatchedFlowRequest:\n      type: object\n      description: Flow Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        slug:\n          type: string\n          minLength: 1\n          description: Visible in the URL.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        title:\n          type: string\n          minLength: 1\n          description: Shown as the Title in Flow pages.\n        designation:\n          allOf:\n          - $ref: '#/components/schemas/FlowDesignationEnum'\n          description: Decides what this Flow is used for. For example, the Authentication\n            flow is redirect to when an un-authenticated user visits authentik.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        compatibility_mode:\n          type: boolean\n          description: Enable compatibility mode, increases compatibility with password\n            managers on mobile devices.\n    PatchedFlowStageBindingRequest:\n      type: object\n      description: FlowStageBinding Serializer\n      properties:\n        target:\n          type: string\n          format: uuid\n        stage:\n          type: string\n          format: uuid\n        evaluate_on_plan:\n          type: boolean\n          description: Evaluate policies during the Flow planning process. Disable\n            this for input-based policies.\n        re_evaluate_policies:\n          type: boolean\n          description: Evaluate policies when the Stage is present to the user.\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        invalid_response_action:\n          allOf:\n          - $ref: '#/components/schemas/InvalidResponseActionEnum'\n          description: Configure how the flow executor should handle an invalid response\n            to a challenge. RETRY returns the error message and a similar challenge\n            to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT\n            restarts the flow while keeping the current context.\n    PatchedGroupRequest:\n      type: object\n      description: Group Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 80\n        is_superuser:\n          type: boolean\n          description: Users added to this group will be superusers.\n        parent:\n          type: string\n          format: uuid\n          nullable: true\n        users:\n          type: array\n          items:\n            type: integer\n        attributes:\n          type: object\n          additionalProperties: {}\n    PatchedHaveIBeenPwendPolicyRequest:\n      type: object\n      description: Have I Been Pwned Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        password_field:\n          type: string\n          minLength: 1\n          description: Field key to check, field keys defined in Prompt stages are\n            available.\n        allowed_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n    PatchedIdentificationStageRequest:\n      type: object\n      description: IdentificationStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        user_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserFieldsEnum'\n          description: Fields of the user object to match against. (Hold shift to\n            select multiple options)\n        password_stage:\n          type: string\n          format: uuid\n          nullable: true\n          description: When set, shows a password field, instead of showing the password\n            field as seaprate step.\n        case_insensitive_matching:\n          type: boolean\n          description: When enabled, user fields are matched regardless of their casing.\n        show_matched_user:\n          type: boolean\n          description: When a valid username/email has been entered, and this option\n            is enabled, the user's username and avatar will be shown. Otherwise, the\n            text that the user entered will be shown\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional enrollment flow, which is linked at the bottom of\n            the page.\n        recovery_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional recovery flow, which is linked at the bottom of the\n            page.\n        passwordless_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optional passwordless flow, which is linked at the bottom of\n            the page.\n        sources:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Specify which sources should be shown.\n        show_source_labels:\n          type: boolean\n    PatchedInvitationRequest:\n      type: object\n      description: Invitation Serializer\n      properties:\n        expires:\n          type: string\n          format: date-time\n        fixed_data:\n          type: object\n          additionalProperties: {}\n        single_use:\n          type: boolean\n          description: When enabled, the invitation will be deleted after usage.\n    PatchedInvitationStageRequest:\n      type: object\n      description: InvitationStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        continue_flow_without_invitation:\n          type: boolean\n          description: If this flag is set, this Stage will jump to the next Stage\n            when no Invitation is given. By default this Stage will cancel the Flow\n            when no invitation is given.\n    PatchedKubernetesServiceConnectionRequest:\n      type: object\n      description: KubernetesServiceConnection Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n        kubeconfig:\n          type: object\n          additionalProperties: {}\n          description: Paste your kubeconfig here. authentik will automatically use\n            the currently selected context.\n    PatchedLDAPPropertyMappingRequest:\n      type: object\n      description: LDAP PropertyMapping Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n        object_field:\n          type: string\n          minLength: 1\n    PatchedLDAPProviderRequest:\n      type: object\n      description: LDAPProvider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        base_dn:\n          type: string\n          minLength: 1\n          description: DN under which objects are accessible.\n        search_group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Users in this group can do search queries. If not set, every\n            user can execute search queries.\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        tls_server_name:\n          type: string\n        uid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for uidNumbers, this number is added to the user.Pk\n            to make sure that the numbers aren't too low for POSIX users. Default\n            is 2000 to ensure that we don't collide with local users uidNumber\n        gid_start_number:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: The start for gidNumbers, this number is added to a number\n            generated from the group.Pk to make sure that the numbers aren't too low\n            for POSIX groups. Default is 4000 to ensure that we don't collide with\n            local groups or users primary groups gidNumber\n        search_mode:\n          $ref: '#/components/schemas/SearchModeEnum'\n    PatchedLDAPSourceRequest:\n      type: object\n      description: LDAP Source Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        server_uri:\n          type: string\n          minLength: 1\n          format: uri\n        peer_certificate:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optionally verify the LDAP Server's Certificate against the\n            CA Chain in this keypair.\n        bind_cn:\n          type: string\n        bind_password:\n          type: string\n          writeOnly: true\n        start_tls:\n          type: boolean\n          title: Enable Start TLS\n        base_dn:\n          type: string\n          minLength: 1\n        additional_user_dn:\n          type: string\n          title: Addition User DN\n          description: Prepended to Base DN for User-queries.\n        additional_group_dn:\n          type: string\n          title: Addition Group DN\n          description: Prepended to Base DN for Group-queries.\n        user_object_filter:\n          type: string\n          minLength: 1\n          description: Consider Objects matching this filter to be Users.\n        group_object_filter:\n          type: string\n          minLength: 1\n          description: Consider Objects matching this filter to be Groups.\n        group_membership_field:\n          type: string\n          minLength: 1\n          description: Field which contains members of a group.\n        object_uniqueness_field:\n          type: string\n          minLength: 1\n          description: Field which contains a unique Identifier.\n        sync_users:\n          type: boolean\n        sync_users_password:\n          type: boolean\n          description: When a user changes their password, sync it back to LDAP. This\n            can only be enabled on a single LDAP source.\n        sync_groups:\n          type: boolean\n        sync_parent_group:\n          type: string\n          format: uuid\n          nullable: true\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        property_mappings_group:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Property mappings used for group creation/updating.\n    PatchedNotificationRequest:\n      type: object\n      description: Notification Serializer\n      properties:\n        event:\n          $ref: '#/components/schemas/EventRequest'\n        seen:\n          type: boolean\n    PatchedNotificationRuleRequest:\n      type: object\n      description: NotificationRule Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        transports:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Select which transports should be used to notify the user.\n            If none are selected, the notification will only be shown in the authentik\n            UI.\n        severity:\n          allOf:\n          - $ref: '#/components/schemas/SeverityEnum'\n          description: Controls which severity level the created notifications will\n            have.\n        group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Define which group of users this notification should be sent\n            and shown to. If left empty, Notification won't ben sent.\n    PatchedNotificationTransportRequest:\n      type: object\n      description: NotificationTransport Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        mode:\n          $ref: '#/components/schemas/NotificationTransportModeEnum'\n        webhook_url:\n          type: string\n          format: uri\n        webhook_mapping:\n          type: string\n          format: uuid\n          nullable: true\n        send_once:\n          type: boolean\n          description: Only send notification once, for example when sending a webhook\n            into a chat channel.\n    PatchedNotificationWebhookMappingRequest:\n      type: object\n      description: NotificationWebhookMapping Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n    PatchedOAuth2ProviderRequest:\n      type: object\n      description: OAuth2Provider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        client_type:\n          allOf:\n          - $ref: '#/components/schemas/ClientTypeEnum'\n          description: |-\n            Confidential clients are capable of maintaining the confidentiality\n                of their credentials. Public clients are incapable.\n        client_id:\n          type: string\n          minLength: 1\n          maxLength: 255\n        client_secret:\n          type: string\n          maxLength: 255\n        access_code_validity:\n          type: string\n          minLength: 1\n          description: 'Access codes not valid on or after current time + this value\n            (Format: hours=1;minutes=2;seconds=3).'\n        token_validity:\n          type: string\n          minLength: 1\n          description: 'Tokens not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n        include_claims_in_id_token:\n          type: boolean\n          description: Include User claims from scopes in the id_token, for applications\n            that don't access the userinfo endpoint.\n        signing_key:\n          type: string\n          format: uuid\n          nullable: true\n          title: RSA Key\n          description: Key used to sign the tokens. Only required when JWT Algorithm\n            is set to RS256.\n        redirect_uris:\n          type: string\n          description: Enter each URI on a new line.\n        sub_mode:\n          allOf:\n          - $ref: '#/components/schemas/SubModeEnum'\n          description: Configure what data should be used as unique User Identifier.\n            For most cases, the default should be fine.\n        issuer_mode:\n          allOf:\n          - $ref: '#/components/schemas/IssuerModeEnum'\n          description: Configure how the issuer field of the ID Token should be filled.\n    PatchedOAuthSourceRequest:\n      type: object\n      description: OAuth Source Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        provider_type:\n          $ref: '#/components/schemas/ProviderTypeEnum'\n        request_token_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL used to request the initial token. This URL is only required\n            for OAuth 1.\n          maxLength: 255\n        authorization_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL the user is redirect to to conest the flow.\n          maxLength: 255\n        access_token_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL used by authentik to retrieve tokens.\n          maxLength: 255\n        profile_url:\n          type: string\n          nullable: true\n          minLength: 1\n          description: URL used by authentik to get user information.\n          maxLength: 255\n        consumer_key:\n          type: string\n          minLength: 1\n        consumer_secret:\n          type: string\n          writeOnly: true\n          minLength: 1\n        additional_scopes:\n          type: string\n    PatchedOutpostRequest:\n      type: object\n      description: Outpost Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        type:\n          $ref: '#/components/schemas/OutpostTypeEnum'\n        providers:\n          type: array\n          items:\n            type: integer\n        service_connection:\n          type: string\n          format: uuid\n          nullable: true\n          description: Select Service-Connection authentik should use to manage this\n            outpost. Leave empty if authentik should not handle the deployment.\n        config:\n          type: object\n          additionalProperties: {}\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n    PatchedPasswordExpiryPolicyRequest:\n      type: object\n      description: Password Expiry Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        days:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        deny_only:\n          type: boolean\n    PatchedPasswordPolicyRequest:\n      type: object\n      description: Password Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        password_field:\n          type: string\n          minLength: 1\n          description: Field key to check, field keys defined in Prompt stages are\n            available.\n        amount_digits:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_uppercase:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_lowercase:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        amount_symbols:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        length_min:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        symbol_charset:\n          type: string\n          minLength: 1\n        error_message:\n          type: string\n          minLength: 1\n    PatchedPasswordStageRequest:\n      type: object\n      description: PasswordStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        backends:\n          type: array\n          items:\n            $ref: '#/components/schemas/BackendsEnum'\n          description: Selection of backends to test the password against.\n        configure_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow used by an authenticated user to configure this Stage.\n            If empty, user will not be able to configure this stage.\n        failed_attempts_before_cancel:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: How many attempts a user has before the flow is canceled. To\n            lock the user out, use a reputation policy and a user_write stage.\n    PatchedPlexSourceConnectionRequest:\n      type: object\n      description: Plex Source connection Serializer\n      properties:\n        source:\n          type: string\n          format: uuid\n        identifier:\n          type: string\n          minLength: 1\n        plex_token:\n          type: string\n          minLength: 1\n    PatchedPlexSourceRequest:\n      type: object\n      description: Plex Source Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        client_id:\n          type: string\n          minLength: 1\n          description: Client identifier used to talk to Plex.\n        allowed_servers:\n          type: array\n          items:\n            type: string\n            minLength: 1\n          description: Which servers a user has to be a member of to be granted access.\n            Empty list allows every server.\n        allow_friends:\n          type: boolean\n          description: Allow friends to authenticate, even if you don't share a server.\n        plex_token:\n          type: string\n          minLength: 1\n          description: Plex token used to check friends\n    PatchedPolicyBindingRequest:\n      type: object\n      description: PolicyBinding Serializer\n      properties:\n        policy:\n          type: string\n          format: uuid\n          nullable: true\n        group:\n          type: string\n          format: uuid\n          nullable: true\n        user:\n          type: integer\n          nullable: true\n        target:\n          type: string\n          format: uuid\n        negate:\n          type: boolean\n          description: Negates the outcome of the policy. Messages are unaffected.\n        enabled:\n          type: boolean\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        timeout:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Timeout after which Policy execution is terminated.\n    PatchedPromptRequest:\n      type: object\n      description: Prompt Serializer\n      properties:\n        field_key:\n          type: string\n          minLength: 1\n          description: Name of the form field, also used to store the value\n        label:\n          type: string\n          minLength: 1\n        type:\n          $ref: '#/components/schemas/PromptTypeEnum'\n        required:\n          type: boolean\n        placeholder:\n          type: string\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        promptstage_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/StageRequest'\n        sub_text:\n          type: string\n    PatchedPromptStageRequest:\n      type: object\n      description: PromptStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        fields:\n          type: array\n          items:\n            type: string\n            format: uuid\n        validation_policies:\n          type: array\n          items:\n            type: string\n            format: uuid\n    PatchedProxyProviderRequest:\n      type: object\n      description: ProxyProvider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        internal_host:\n          type: string\n          format: uri\n        external_host:\n          type: string\n          minLength: 1\n          format: uri\n        internal_host_ssl_validation:\n          type: boolean\n          description: Validate SSL Certificates of upstream servers\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        skip_path_regex:\n          type: string\n          description: Regular expressions for which authentication is not required.\n            Each new line is interpreted as a new Regular Expression.\n        basic_auth_enabled:\n          type: boolean\n          title: Set HTTP-Basic Authentication\n          description: Set a custom HTTP-Basic Authentication header based on values\n            from authentik.\n        basic_auth_password_attribute:\n          type: string\n          title: HTTP-Basic Password Key\n          description: User/Group Attribute used for the password part of the HTTP-Basic\n            Header.\n        basic_auth_user_attribute:\n          type: string\n          title: HTTP-Basic Username Key\n          description: User/Group Attribute used for the user part of the HTTP-Basic\n            Header. If not set, the user's Email address is used.\n        mode:\n          allOf:\n          - $ref: '#/components/schemas/ProxyMode'\n          description: Enable support for forwardAuth in traefik and nginx auth_request.\n            Exclusive with internal_host.\n        cookie_domain:\n          type: string\n        token_validity:\n          type: string\n          minLength: 1\n          description: 'Tokens not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n    PatchedReputationPolicyRequest:\n      type: object\n      description: Reputation Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        check_ip:\n          type: boolean\n        check_username:\n          type: boolean\n        threshold:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n    PatchedSAMLPropertyMappingRequest:\n      type: object\n      description: SAMLPropertyMapping Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n        saml_name:\n          type: string\n          minLength: 1\n        friendly_name:\n          type: string\n          nullable: true\n    PatchedSAMLProviderRequest:\n      type: object\n      description: SAMLProvider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        acs_url:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 200\n        audience:\n          type: string\n          description: Value of the audience restriction field of the assertion. When\n            left empty, no audience restriction will be added.\n        issuer:\n          type: string\n          minLength: 1\n          description: Also known as EntityID\n        assertion_valid_not_before:\n          type: string\n          minLength: 1\n          description: 'Assertion valid not before current time + this value (Format:\n            hours=-1;minutes=-2;seconds=-3).'\n        assertion_valid_not_on_or_after:\n          type: string\n          minLength: 1\n          description: 'Assertion not valid on or after current time + this value\n            (Format: hours=1;minutes=2;seconds=3).'\n        session_valid_not_on_or_after:\n          type: string\n          minLength: 1\n          description: 'Session not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n        name_id_mapping:\n          type: string\n          format: uuid\n          nullable: true\n          title: NameID Property Mapping\n          description: Configure how the NameID value will be created. When left empty,\n            the NameIDPolicy of the incoming request will be considered\n        digest_algorithm:\n          $ref: '#/components/schemas/DigestAlgorithmEnum'\n        signature_algorithm:\n          $ref: '#/components/schemas/SignatureAlgorithmEnum'\n        signing_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Signing Keypair\n          description: Keypair used to sign outgoing Responses going to the Service\n            Provider.\n        verification_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Verification Certificate\n          description: When selected, incoming assertion's Signatures will be validated\n            against this certificate. To allow unsigned Requests, leave on default.\n        sp_binding:\n          allOf:\n          - $ref: '#/components/schemas/SpBindingEnum'\n          title: Service Provider Binding\n          description: This determines how authentik sends the response back to the\n            Service Provider.\n    PatchedSAMLSourceRequest:\n      type: object\n      description: SAMLSource Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        pre_authentication_flow:\n          type: string\n          format: uuid\n          description: Flow used before authentication.\n        issuer:\n          type: string\n          description: Also known as Entity ID. Defaults the Metadata URL.\n        sso_url:\n          type: string\n          format: uri\n          minLength: 1\n          description: URL that the initial Login request is sent to.\n          maxLength: 200\n        slo_url:\n          type: string\n          format: uri\n          nullable: true\n          description: Optional URL if your IDP supports Single-Logout.\n          maxLength: 200\n        allow_idp_initiated:\n          type: boolean\n          description: Allows authentication flows initiated by the IdP. This can\n            be a security risk, as no validation of the request ID is done.\n        name_id_policy:\n          allOf:\n          - $ref: '#/components/schemas/NameIdPolicyEnum'\n          description: NameID Policy sent to the IdP. Can be unset, in which case\n            no Policy is sent.\n        binding_type:\n          $ref: '#/components/schemas/BindingTypeEnum'\n        signing_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Signing Keypair\n          description: Keypair which is used to sign outgoing requests. Leave empty\n            to disable signing.\n        digest_algorithm:\n          $ref: '#/components/schemas/DigestAlgorithmEnum'\n        signature_algorithm:\n          $ref: '#/components/schemas/SignatureAlgorithmEnum'\n        temporary_user_delete_after:\n          type: string\n          minLength: 1\n          title: Delete temporary users after\n          description: 'Time offset when temporary users should be deleted. This only\n            applies if your IDP uses the NameID Format ''transient'', and the user\n            doesn''t log out manually. (Format: hours=1;minutes=2;seconds=3).'\n    PatchedSMSDeviceRequest:\n      type: object\n      description: Serializer for sms authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n    PatchedScopeMappingRequest:\n      type: object\n      description: ScopeMapping Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n        scope_name:\n          type: string\n          minLength: 1\n          description: Scope used by the client\n        description:\n          type: string\n          description: Description shown to the user when consenting. If left empty,\n            the user won't be informed.\n    PatchedStaticDeviceRequest:\n      type: object\n      description: Serializer for static authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n    PatchedTOTPDeviceRequest:\n      type: object\n      description: Serializer for totp authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n    PatchedTenantRequest:\n      type: object\n      description: Tenant Serializer\n      properties:\n        domain:\n          type: string\n          minLength: 1\n          description: Domain that activates this tenant. Can be a superset, i.e.\n            `a.b` for `aa.b` and `ba.b`\n        default:\n          type: boolean\n        branding_title:\n          type: string\n          minLength: 1\n        branding_logo:\n          type: string\n          minLength: 1\n        branding_favicon:\n          type: string\n          minLength: 1\n        flow_authentication:\n          type: string\n          format: uuid\n          nullable: true\n        flow_invalidation:\n          type: string\n          format: uuid\n          nullable: true\n        flow_recovery:\n          type: string\n          format: uuid\n          nullable: true\n        flow_unenrollment:\n          type: string\n          format: uuid\n          nullable: true\n        event_retention:\n          type: string\n          minLength: 1\n          description: 'Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2).'\n        web_certificate:\n          type: string\n          format: uuid\n          nullable: true\n          description: Web Certificate used by the authentik Core webserver.\n    PatchedTokenRequest:\n      type: object\n      description: Token Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        identifier:\n          type: string\n          minLength: 1\n          maxLength: 255\n          pattern: ^[-a-zA-Z0-9_]+$\n        intent:\n          $ref: '#/components/schemas/IntentEnum'\n        user:\n          type: integer\n        user_obj:\n          $ref: '#/components/schemas/UserRequest'\n        description:\n          type: string\n        expires:\n          type: string\n          format: date-time\n        expiring:\n          type: boolean\n    PatchedUserDeleteStageRequest:\n      type: object\n      description: UserDeleteStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n    PatchedUserLoginStageRequest:\n      type: object\n      description: UserLoginStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        session_duration:\n          type: string\n          minLength: 1\n          description: 'Determines how long a session lasts. Default of 0 means that\n            the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)'\n    PatchedUserLogoutStageRequest:\n      type: object\n      description: UserLogoutStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n    PatchedUserOAuthSourceConnectionRequest:\n      type: object\n      description: OAuth Source Serializer\n      properties:\n        user:\n          type: integer\n        source:\n          type: string\n          format: uuid\n        identifier:\n          type: string\n          minLength: 1\n          maxLength: 255\n        access_token:\n          type: string\n          writeOnly: true\n          nullable: true\n    PatchedUserRequest:\n      type: object\n      description: User Serializer\n      properties:\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        name:\n          type: string\n          description: User's display name.\n        is_active:\n          type: boolean\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        last_login:\n          type: string\n          format: date-time\n          nullable: true\n        groups:\n          type: array\n          items:\n            type: string\n            format: uuid\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        attributes:\n          type: object\n          additionalProperties: {}\n    PatchedUserWriteStageRequest:\n      type: object\n      description: UserWriteStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        create_users_as_inactive:\n          type: boolean\n          description: When set, newly created users are inactive and cannot login.\n        create_users_group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optionally add newly created users to this group.\n    PatchedWebAuthnDeviceRequest:\n      type: object\n      description: Serializer for WebAuthn authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 200\n    Permission:\n      type: object\n      description: Permission used for consent\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n      required:\n      - id\n      - name\n    PlexAuthenticationChallenge:\n      type: object\n      description: Challenge shown to the user in identification stage\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-flow-sources-plex\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        client_id:\n          type: string\n        slug:\n          type: string\n      required:\n      - client_id\n      - slug\n      - type\n    PlexAuthenticationChallengeResponseRequest:\n      type: object\n      description: Pseudo class for plex response\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-flow-sources-plex\n    PlexSource:\n      type: object\n      description: Plex Source Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pbm uuid\n        name:\n          type: string\n          description: Source's display Name.\n        slug:\n          type: string\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        client_id:\n          type: string\n          description: Client identifier used to talk to Plex.\n        allowed_servers:\n          type: array\n          items:\n            type: string\n          description: Which servers a user has to be a member of to be granted access.\n            Empty list allows every server.\n        allow_friends:\n          type: boolean\n          description: Allow friends to authenticate, even if you don't share a server.\n        plex_token:\n          type: string\n          description: Plex token used to check friends\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - plex_token\n      - slug\n      - verbose_name\n      - verbose_name_plural\n    PlexSourceConnection:\n      type: object\n      description: Plex Source connection Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        user:\n          type: integer\n          readOnly: true\n        source:\n          type: string\n          format: uuid\n        identifier:\n          type: string\n        plex_token:\n          type: string\n      required:\n      - identifier\n      - pk\n      - plex_token\n      - source\n      - user\n    PlexSourceConnectionRequest:\n      type: object\n      description: Plex Source connection Serializer\n      properties:\n        source:\n          type: string\n          format: uuid\n        identifier:\n          type: string\n          minLength: 1\n        plex_token:\n          type: string\n          minLength: 1\n      required:\n      - identifier\n      - plex_token\n      - source\n    PlexSourceRequest:\n      type: object\n      description: Plex Source Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        client_id:\n          type: string\n          minLength: 1\n          description: Client identifier used to talk to Plex.\n        allowed_servers:\n          type: array\n          items:\n            type: string\n            minLength: 1\n          description: Which servers a user has to be a member of to be granted access.\n            Empty list allows every server.\n        allow_friends:\n          type: boolean\n          description: Allow friends to authenticate, even if you don't share a server.\n        plex_token:\n          type: string\n          minLength: 1\n          description: Plex token used to check friends\n      required:\n      - name\n      - plex_token\n      - slug\n    PlexTokenRedeemRequest:\n      type: object\n      description: Serializer to redeem a plex token\n      properties:\n        plex_token:\n          type: string\n          minLength: 1\n      required:\n      - plex_token\n    Policy:\n      type: object\n      description: Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n      required:\n      - bound_to\n      - component\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    PolicyBinding:\n      type: object\n      description: PolicyBinding Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy binding uuid\n        policy:\n          type: string\n          format: uuid\n          nullable: true\n        group:\n          type: string\n          format: uuid\n          nullable: true\n        user:\n          type: integer\n          nullable: true\n        policy_obj:\n          allOf:\n          - $ref: '#/components/schemas/Policy'\n          readOnly: true\n        group_obj:\n          allOf:\n          - $ref: '#/components/schemas/Group'\n          readOnly: true\n        user_obj:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n        target:\n          type: string\n          format: uuid\n        negate:\n          type: boolean\n          description: Negates the outcome of the policy. Messages are unaffected.\n        enabled:\n          type: boolean\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        timeout:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Timeout after which Policy execution is terminated.\n      required:\n      - group_obj\n      - order\n      - pk\n      - policy_obj\n      - target\n      - user_obj\n    PolicyBindingRequest:\n      type: object\n      description: PolicyBinding Serializer\n      properties:\n        policy:\n          type: string\n          format: uuid\n          nullable: true\n        group:\n          type: string\n          format: uuid\n          nullable: true\n        user:\n          type: integer\n          nullable: true\n        target:\n          type: string\n          format: uuid\n        negate:\n          type: boolean\n          description: Negates the outcome of the policy. Messages are unaffected.\n        enabled:\n          type: boolean\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        timeout:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Timeout after which Policy execution is terminated.\n      required:\n      - order\n      - target\n    PolicyEngineMode:\n      enum:\n      - all\n      - any\n      type: string\n    PolicyRequest:\n      type: object\n      description: Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n    PolicyTestRequest:\n      type: object\n      description: Test policy execution for a user with context\n      properties:\n        user:\n          type: integer\n        context:\n          type: object\n          additionalProperties: {}\n      required:\n      - user\n    PolicyTestResult:\n      type: object\n      description: result of a policy test\n      properties:\n        passing:\n          type: boolean\n        messages:\n          type: array\n          items:\n            type: string\n          readOnly: true\n      required:\n      - messages\n      - passing\n    Prompt:\n      type: object\n      description: Prompt Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Prompt uuid\n        field_key:\n          type: string\n          description: Name of the form field, also used to store the value\n        label:\n          type: string\n        type:\n          $ref: '#/components/schemas/PromptTypeEnum'\n        required:\n          type: boolean\n        placeholder:\n          type: string\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        promptstage_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Stage'\n        sub_text:\n          type: string\n      required:\n      - field_key\n      - label\n      - pk\n      - type\n    PromptChallenge:\n      type: object\n      description: Initial challenge being sent, define fields\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: ak-stage-prompt\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/StagePrompt'\n      required:\n      - fields\n      - type\n    PromptChallengeResponseRequest:\n      type: object\n      description: |-\n        Validate response, fields are dynamically created based\n        on the stage\n      properties:\n        component:\n          type: string\n          minLength: 1\n          default: ak-stage-prompt\n      additionalProperties: {}\n    PromptRequest:\n      type: object\n      description: Prompt Serializer\n      properties:\n        field_key:\n          type: string\n          minLength: 1\n          description: Name of the form field, also used to store the value\n        label:\n          type: string\n          minLength: 1\n        type:\n          $ref: '#/components/schemas/PromptTypeEnum'\n        required:\n          type: boolean\n        placeholder:\n          type: string\n        order:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        promptstage_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/StageRequest'\n        sub_text:\n          type: string\n      required:\n      - field_key\n      - label\n      - type\n    PromptStage:\n      type: object\n      description: PromptStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        fields:\n          type: array\n          items:\n            type: string\n            format: uuid\n        validation_policies:\n          type: array\n          items:\n            type: string\n            format: uuid\n      required:\n      - component\n      - fields\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    PromptStageRequest:\n      type: object\n      description: PromptStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        fields:\n          type: array\n          items:\n            type: string\n            format: uuid\n        validation_policies:\n          type: array\n          items:\n            type: string\n            format: uuid\n      required:\n      - fields\n      - name\n    PromptTypeEnum:\n      enum:\n      - text\n      - text_read_only\n      - username\n      - email\n      - password\n      - number\n      - checkbox\n      - date\n      - date-time\n      - separator\n      - hidden\n      - static\n      type: string\n    PropertyMapping:\n      type: object\n      description: PropertyMapping Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pm uuid\n        managed:\n          type: string\n          nullable: true\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n        expression:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n      required:\n      - component\n      - expression\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    PropertyMappingTestResult:\n      type: object\n      description: Result of a Property-mapping test\n      properties:\n        result:\n          type: string\n          readOnly: true\n        successful:\n          type: boolean\n          readOnly: true\n      required:\n      - result\n      - successful\n    Provider:\n      type: object\n      description: Provider Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        component:\n          type: string\n          readOnly: true\n        assigned_application_slug:\n          type: string\n          description: Internal application name, used in URLs.\n          readOnly: true\n        assigned_application_name:\n          type: string\n          description: Application's display Name.\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n      required:\n      - assigned_application_name\n      - assigned_application_slug\n      - authorization_flow\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    ProviderEnum:\n      enum:\n      - twilio\n      - generic\n      type: string\n    ProviderRequest:\n      type: object\n      description: Provider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n      required:\n      - authorization_flow\n      - name\n    ProviderTypeEnum:\n      enum:\n      - apple\n      - azuread\n      - discord\n      - facebook\n      - github\n      - google\n      - openidconnect\n      - okta\n      - reddit\n      - twitter\n      type: string\n    ProxyMode:\n      enum:\n      - proxy\n      - forward_single\n      - forward_domain\n      type: string\n    ProxyOutpostConfig:\n      type: object\n      description: Proxy provider serializer for outposts\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n        internal_host:\n          type: string\n          format: uri\n        external_host:\n          type: string\n          format: uri\n        internal_host_ssl_validation:\n          type: boolean\n          description: Validate SSL Certificates of upstream servers\n        client_id:\n          type: string\n          maxLength: 255\n        client_secret:\n          type: string\n          maxLength: 255\n        oidc_configuration:\n          allOf:\n          - $ref: '#/components/schemas/OpenIDConnectConfiguration'\n          readOnly: true\n        cookie_secret:\n          type: string\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        skip_path_regex:\n          type: string\n          description: Regular expressions for which authentication is not required.\n            Each new line is interpreted as a new Regular Expression.\n        basic_auth_enabled:\n          type: boolean\n          title: Set HTTP-Basic Authentication\n          description: Set a custom HTTP-Basic Authentication header based on values\n            from authentik.\n        basic_auth_password_attribute:\n          type: string\n          title: HTTP-Basic Password Key\n          description: User/Group Attribute used for the password part of the HTTP-Basic\n            Header.\n        basic_auth_user_attribute:\n          type: string\n          title: HTTP-Basic Username Key\n          description: User/Group Attribute used for the user part of the HTTP-Basic\n            Header. If not set, the user's Email address is used.\n        mode:\n          allOf:\n          - $ref: '#/components/schemas/ProxyMode'\n          description: Enable support for forwardAuth in traefik and nginx auth_request.\n            Exclusive with internal_host.\n        cookie_domain:\n          type: string\n        token_validity:\n          type: number\n          format: float\n          nullable: true\n          readOnly: true\n        scopes_to_request:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        assigned_application_slug:\n          type: string\n          description: Internal application name, used in URLs.\n          readOnly: true\n        assigned_application_name:\n          type: string\n          description: Application's display Name.\n          readOnly: true\n      required:\n      - assigned_application_name\n      - assigned_application_slug\n      - external_host\n      - name\n      - oidc_configuration\n      - pk\n      - scopes_to_request\n      - token_validity\n    ProxyProvider:\n      type: object\n      description: ProxyProvider Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        component:\n          type: string\n          readOnly: true\n        assigned_application_slug:\n          type: string\n          description: Internal application name, used in URLs.\n          readOnly: true\n        assigned_application_name:\n          type: string\n          description: Application's display Name.\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        internal_host:\n          type: string\n          format: uri\n        external_host:\n          type: string\n          format: uri\n        internal_host_ssl_validation:\n          type: boolean\n          description: Validate SSL Certificates of upstream servers\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        skip_path_regex:\n          type: string\n          description: Regular expressions for which authentication is not required.\n            Each new line is interpreted as a new Regular Expression.\n        basic_auth_enabled:\n          type: boolean\n          title: Set HTTP-Basic Authentication\n          description: Set a custom HTTP-Basic Authentication header based on values\n            from authentik.\n        basic_auth_password_attribute:\n          type: string\n          title: HTTP-Basic Password Key\n          description: User/Group Attribute used for the password part of the HTTP-Basic\n            Header.\n        basic_auth_user_attribute:\n          type: string\n          title: HTTP-Basic Username Key\n          description: User/Group Attribute used for the user part of the HTTP-Basic\n            Header. If not set, the user's Email address is used.\n        mode:\n          allOf:\n          - $ref: '#/components/schemas/ProxyMode'\n          description: Enable support for forwardAuth in traefik and nginx auth_request.\n            Exclusive with internal_host.\n        redirect_uris:\n          type: string\n          readOnly: true\n        cookie_domain:\n          type: string\n        token_validity:\n          type: string\n          description: 'Tokens not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n        outpost_set:\n          type: array\n          items:\n            type: string\n          readOnly: true\n      required:\n      - assigned_application_name\n      - assigned_application_slug\n      - authorization_flow\n      - component\n      - external_host\n      - meta_model_name\n      - name\n      - outpost_set\n      - pk\n      - redirect_uris\n      - verbose_name\n      - verbose_name_plural\n    ProxyProviderRequest:\n      type: object\n      description: ProxyProvider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        internal_host:\n          type: string\n          format: uri\n        external_host:\n          type: string\n          minLength: 1\n          format: uri\n        internal_host_ssl_validation:\n          type: boolean\n          description: Validate SSL Certificates of upstream servers\n        certificate:\n          type: string\n          format: uuid\n          nullable: true\n        skip_path_regex:\n          type: string\n          description: Regular expressions for which authentication is not required.\n            Each new line is interpreted as a new Regular Expression.\n        basic_auth_enabled:\n          type: boolean\n          title: Set HTTP-Basic Authentication\n          description: Set a custom HTTP-Basic Authentication header based on values\n            from authentik.\n        basic_auth_password_attribute:\n          type: string\n          title: HTTP-Basic Password Key\n          description: User/Group Attribute used for the password part of the HTTP-Basic\n            Header.\n        basic_auth_user_attribute:\n          type: string\n          title: HTTP-Basic Username Key\n          description: User/Group Attribute used for the user part of the HTTP-Basic\n            Header. If not set, the user's Email address is used.\n        mode:\n          allOf:\n          - $ref: '#/components/schemas/ProxyMode'\n          description: Enable support for forwardAuth in traefik and nginx auth_request.\n            Exclusive with internal_host.\n        cookie_domain:\n          type: string\n        token_validity:\n          type: string\n          minLength: 1\n          description: 'Tokens not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n      required:\n      - authorization_flow\n      - external_host\n      - name\n    RedirectChallenge:\n      type: object\n      description: Challenge type to redirect the client\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: xak-flow-redirect\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        to:\n          type: string\n      required:\n      - to\n      - type\n    RefreshTokenModel:\n      type: object\n      description: Serializer for BaseGrantModel and RefreshToken\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        provider:\n          $ref: '#/components/schemas/OAuth2Provider'\n        user:\n          $ref: '#/components/schemas/User'\n        is_expired:\n          type: boolean\n          readOnly: true\n        expires:\n          type: string\n          format: date-time\n        scope:\n          type: array\n          items:\n            type: string\n        id_token:\n          type: string\n          readOnly: true\n        revoked:\n          type: boolean\n      required:\n      - id_token\n      - is_expired\n      - pk\n      - provider\n      - scope\n      - user\n    Reputation:\n      type: object\n      description: Reputation Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          title: Reputation uuid\n        identifier:\n          type: string\n        ip:\n          type: string\n        ip_geo_data:\n          type: object\n          additionalProperties: {}\n        score:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        updated:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - identifier\n      - ip\n      - updated\n    ReputationPolicy:\n      type: object\n      description: Reputation Policy Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Policy uuid\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        bound_to:\n          type: integer\n          readOnly: true\n        check_ip:\n          type: boolean\n        check_username:\n          type: boolean\n        threshold:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n      required:\n      - bound_to\n      - component\n      - meta_model_name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    ReputationPolicyRequest:\n      type: object\n      description: Reputation Policy Serializer\n      properties:\n        name:\n          type: string\n          nullable: true\n        execution_logging:\n          type: boolean\n          description: When this option is enabled, all executions of this policy\n            will be logged. By default, only execution errors are logged.\n        check_ip:\n          type: boolean\n        check_username:\n          type: boolean\n        threshold:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n    ResidentKeyRequirementEnum:\n      enum:\n      - discouraged\n      - preferred\n      - required\n      type: string\n    SAMLMetadata:\n      type: object\n      description: SAML Provider Metadata serializer\n      properties:\n        metadata:\n          type: string\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n      required:\n      - download_url\n      - metadata\n    SAMLPropertyMapping:\n      type: object\n      description: SAMLPropertyMapping Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pm uuid\n        managed:\n          type: string\n          nullable: true\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n        expression:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        saml_name:\n          type: string\n        friendly_name:\n          type: string\n          nullable: true\n      required:\n      - component\n      - expression\n      - meta_model_name\n      - name\n      - pk\n      - saml_name\n      - verbose_name\n      - verbose_name_plural\n    SAMLPropertyMappingRequest:\n      type: object\n      description: SAMLPropertyMapping Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n        saml_name:\n          type: string\n          minLength: 1\n        friendly_name:\n          type: string\n          nullable: true\n      required:\n      - expression\n      - name\n      - saml_name\n    SAMLProvider:\n      type: object\n      description: SAMLProvider Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        component:\n          type: string\n          readOnly: true\n        assigned_application_slug:\n          type: string\n          description: Internal application name, used in URLs.\n          readOnly: true\n        assigned_application_name:\n          type: string\n          description: Application's display Name.\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        acs_url:\n          type: string\n          format: uri\n          maxLength: 200\n        audience:\n          type: string\n          description: Value of the audience restriction field of the assertion. When\n            left empty, no audience restriction will be added.\n        issuer:\n          type: string\n          description: Also known as EntityID\n        assertion_valid_not_before:\n          type: string\n          description: 'Assertion valid not before current time + this value (Format:\n            hours=-1;minutes=-2;seconds=-3).'\n        assertion_valid_not_on_or_after:\n          type: string\n          description: 'Assertion not valid on or after current time + this value\n            (Format: hours=1;minutes=2;seconds=3).'\n        session_valid_not_on_or_after:\n          type: string\n          description: 'Session not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n        name_id_mapping:\n          type: string\n          format: uuid\n          nullable: true\n          title: NameID Property Mapping\n          description: Configure how the NameID value will be created. When left empty,\n            the NameIDPolicy of the incoming request will be considered\n        digest_algorithm:\n          $ref: '#/components/schemas/DigestAlgorithmEnum'\n        signature_algorithm:\n          $ref: '#/components/schemas/SignatureAlgorithmEnum'\n        signing_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Signing Keypair\n          description: Keypair used to sign outgoing Responses going to the Service\n            Provider.\n        verification_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Verification Certificate\n          description: When selected, incoming assertion's Signatures will be validated\n            against this certificate. To allow unsigned Requests, leave on default.\n        sp_binding:\n          allOf:\n          - $ref: '#/components/schemas/SpBindingEnum'\n          title: Service Provider Binding\n          description: This determines how authentik sends the response back to the\n            Service Provider.\n        metadata_download_url:\n          type: string\n          readOnly: true\n      required:\n      - acs_url\n      - assigned_application_name\n      - assigned_application_slug\n      - authorization_flow\n      - component\n      - meta_model_name\n      - metadata_download_url\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    SAMLProviderImportRequest:\n      type: object\n      description: Import saml provider from XML Metadata\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n        file:\n          type: string\n          format: binary\n      required:\n      - authorization_flow\n      - file\n      - name\n    SAMLProviderRequest:\n      type: object\n      description: SAMLProvider Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        authorization_flow:\n          type: string\n          format: uuid\n          description: Flow used when authorizing this provider.\n        property_mappings:\n          type: array\n          items:\n            type: string\n            format: uuid\n        acs_url:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 200\n        audience:\n          type: string\n          description: Value of the audience restriction field of the assertion. When\n            left empty, no audience restriction will be added.\n        issuer:\n          type: string\n          minLength: 1\n          description: Also known as EntityID\n        assertion_valid_not_before:\n          type: string\n          minLength: 1\n          description: 'Assertion valid not before current time + this value (Format:\n            hours=-1;minutes=-2;seconds=-3).'\n        assertion_valid_not_on_or_after:\n          type: string\n          minLength: 1\n          description: 'Assertion not valid on or after current time + this value\n            (Format: hours=1;minutes=2;seconds=3).'\n        session_valid_not_on_or_after:\n          type: string\n          minLength: 1\n          description: 'Session not valid on or after current time + this value (Format:\n            hours=1;minutes=2;seconds=3).'\n        name_id_mapping:\n          type: string\n          format: uuid\n          nullable: true\n          title: NameID Property Mapping\n          description: Configure how the NameID value will be created. When left empty,\n            the NameIDPolicy of the incoming request will be considered\n        digest_algorithm:\n          $ref: '#/components/schemas/DigestAlgorithmEnum'\n        signature_algorithm:\n          $ref: '#/components/schemas/SignatureAlgorithmEnum'\n        signing_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Signing Keypair\n          description: Keypair used to sign outgoing Responses going to the Service\n            Provider.\n        verification_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Verification Certificate\n          description: When selected, incoming assertion's Signatures will be validated\n            against this certificate. To allow unsigned Requests, leave on default.\n        sp_binding:\n          allOf:\n          - $ref: '#/components/schemas/SpBindingEnum'\n          title: Service Provider Binding\n          description: This determines how authentik sends the response back to the\n            Service Provider.\n      required:\n      - acs_url\n      - authorization_flow\n      - name\n    SAMLSource:\n      type: object\n      description: SAMLSource Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pbm uuid\n        name:\n          type: string\n          description: Source's display Name.\n        slug:\n          type: string\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        pre_authentication_flow:\n          type: string\n          format: uuid\n          description: Flow used before authentication.\n        issuer:\n          type: string\n          description: Also known as Entity ID. Defaults the Metadata URL.\n        sso_url:\n          type: string\n          format: uri\n          description: URL that the initial Login request is sent to.\n          maxLength: 200\n        slo_url:\n          type: string\n          format: uri\n          nullable: true\n          description: Optional URL if your IDP supports Single-Logout.\n          maxLength: 200\n        allow_idp_initiated:\n          type: boolean\n          description: Allows authentication flows initiated by the IdP. This can\n            be a security risk, as no validation of the request ID is done.\n        name_id_policy:\n          allOf:\n          - $ref: '#/components/schemas/NameIdPolicyEnum'\n          description: NameID Policy sent to the IdP. Can be unset, in which case\n            no Policy is sent.\n        binding_type:\n          $ref: '#/components/schemas/BindingTypeEnum'\n        signing_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Signing Keypair\n          description: Keypair which is used to sign outgoing requests. Leave empty\n            to disable signing.\n        digest_algorithm:\n          $ref: '#/components/schemas/DigestAlgorithmEnum'\n        signature_algorithm:\n          $ref: '#/components/schemas/SignatureAlgorithmEnum'\n        temporary_user_delete_after:\n          type: string\n          title: Delete temporary users after\n          description: 'Time offset when temporary users should be deleted. This only\n            applies if your IDP uses the NameID Format ''transient'', and the user\n            doesn''t log out manually. (Format: hours=1;minutes=2;seconds=3).'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - pre_authentication_flow\n      - slug\n      - sso_url\n      - verbose_name\n      - verbose_name_plural\n    SAMLSourceRequest:\n      type: object\n      description: SAMLSource Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n        pre_authentication_flow:\n          type: string\n          format: uuid\n          description: Flow used before authentication.\n        issuer:\n          type: string\n          description: Also known as Entity ID. Defaults the Metadata URL.\n        sso_url:\n          type: string\n          format: uri\n          minLength: 1\n          description: URL that the initial Login request is sent to.\n          maxLength: 200\n        slo_url:\n          type: string\n          format: uri\n          nullable: true\n          description: Optional URL if your IDP supports Single-Logout.\n          maxLength: 200\n        allow_idp_initiated:\n          type: boolean\n          description: Allows authentication flows initiated by the IdP. This can\n            be a security risk, as no validation of the request ID is done.\n        name_id_policy:\n          allOf:\n          - $ref: '#/components/schemas/NameIdPolicyEnum'\n          description: NameID Policy sent to the IdP. Can be unset, in which case\n            no Policy is sent.\n        binding_type:\n          $ref: '#/components/schemas/BindingTypeEnum'\n        signing_kp:\n          type: string\n          format: uuid\n          nullable: true\n          title: Signing Keypair\n          description: Keypair which is used to sign outgoing requests. Leave empty\n            to disable signing.\n        digest_algorithm:\n          $ref: '#/components/schemas/DigestAlgorithmEnum'\n        signature_algorithm:\n          $ref: '#/components/schemas/SignatureAlgorithmEnum'\n        temporary_user_delete_after:\n          type: string\n          minLength: 1\n          title: Delete temporary users after\n          description: 'Time offset when temporary users should be deleted. This only\n            applies if your IDP uses the NameID Format ''transient'', and the user\n            doesn''t log out manually. (Format: hours=1;minutes=2;seconds=3).'\n      required:\n      - name\n      - pre_authentication_flow\n      - slug\n      - sso_url\n    SMSDevice:\n      type: object\n      description: Serializer for sms authenticator devices\n      properties:\n        name:\n          type: string\n          description: The human-readable name of this device.\n          maxLength: 64\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        phone_number:\n          type: string\n          readOnly: true\n      required:\n      - name\n      - phone_number\n      - pk\n    SMSDeviceRequest:\n      type: object\n      description: Serializer for sms authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n      required:\n      - name\n    ScopeMapping:\n      type: object\n      description: ScopeMapping Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pm uuid\n        managed:\n          type: string\n          nullable: true\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n        expression:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        scope_name:\n          type: string\n          description: Scope used by the client\n        description:\n          type: string\n          description: Description shown to the user when consenting. If left empty,\n            the user won't be informed.\n      required:\n      - component\n      - expression\n      - meta_model_name\n      - name\n      - pk\n      - scope_name\n      - verbose_name\n      - verbose_name_plural\n    ScopeMappingRequest:\n      type: object\n      description: ScopeMapping Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        name:\n          type: string\n          minLength: 1\n        expression:\n          type: string\n          minLength: 1\n        scope_name:\n          type: string\n          minLength: 1\n          description: Scope used by the client\n        description:\n          type: string\n          description: Description shown to the user when consenting. If left empty,\n            the user won't be informed.\n      required:\n      - expression\n      - name\n      - scope_name\n    SearchModeEnum:\n      enum:\n      - direct\n      - cached\n      type: string\n    SelectableStage:\n      type: object\n      description: Serializer for stages which can be selected by users\n      properties:\n        pk:\n          type: string\n          format: uuid\n        name:\n          type: string\n        verbose_name:\n          type: string\n        meta_model_name:\n          type: string\n      required:\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n    ServiceConnection:\n      type: object\n      description: ServiceConnection Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Uuid\n        name:\n          type: string\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    ServiceConnectionRequest:\n      type: object\n      description: ServiceConnection Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        local:\n          type: boolean\n          description: If enabled, use the local connection. Required Docker socket/Kubernetes\n            Integration\n      required:\n      - name\n    ServiceConnectionState:\n      type: object\n      description: Serializer for Service connection state\n      properties:\n        healthy:\n          type: boolean\n          readOnly: true\n        version:\n          type: string\n          readOnly: true\n      required:\n      - healthy\n      - version\n    SessionUser:\n      type: object\n      description: |-\n        Response for the /user/me endpoint, returns the currently active user (as `user` property)\n        and, if this user is being impersonated, the original user in the `original` property.\n      properties:\n        user:\n          $ref: '#/components/schemas/UserSelf'\n        original:\n          $ref: '#/components/schemas/UserSelf'\n      required:\n      - user\n    SeverityEnum:\n      enum:\n      - notice\n      - warning\n      - alert\n      type: string\n    ShellChallenge:\n      type: object\n      description: challenge type to render HTML as-is\n      properties:\n        type:\n          $ref: '#/components/schemas/ChallengeChoices'\n        flow_info:\n          $ref: '#/components/schemas/ContextualFlowInfo'\n        component:\n          type: string\n          default: xak-flow-shell\n        response_errors:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ErrorDetail'\n        body:\n          type: string\n      required:\n      - body\n      - type\n    SignatureAlgorithmEnum:\n      enum:\n      - http://www.w3.org/2000/09/xmldsig#rsa-sha1\n      - http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\n      - http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\n      - http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\n      - http://www.w3.org/2000/09/xmldsig#dsa-sha1\n      type: string\n    Source:\n      type: object\n      description: Source Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Pbm uuid\n        name:\n          type: string\n          description: Source's display Name.\n        slug:\n          type: string\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - slug\n      - verbose_name\n      - verbose_name_plural\n    SourceRequest:\n      type: object\n      description: Source Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Source's display Name.\n        slug:\n          type: string\n          minLength: 1\n          description: Internal source name, used in URLs.\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        enabled:\n          type: boolean\n        authentication_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when authenticating existing users.\n        enrollment_flow:\n          type: string\n          format: uuid\n          nullable: true\n          description: Flow to use when enrolling new users.\n        policy_engine_mode:\n          $ref: '#/components/schemas/PolicyEngineMode'\n        user_matching_mode:\n          allOf:\n          - $ref: '#/components/schemas/UserMatchingModeEnum'\n          description: How the source determines if an existing user should be authenticated\n            or a new user enrolled.\n      required:\n      - name\n      - slug\n    SourceType:\n      type: object\n      description: Serializer for SourceType\n      properties:\n        name:\n          type: string\n        slug:\n          type: string\n        urls_customizable:\n          type: boolean\n        request_token_url:\n          type: string\n          readOnly: true\n          nullable: true\n        authorization_url:\n          type: string\n          readOnly: true\n          nullable: true\n        access_token_url:\n          type: string\n          readOnly: true\n          nullable: true\n        profile_url:\n          type: string\n          readOnly: true\n          nullable: true\n      required:\n      - access_token_url\n      - authorization_url\n      - name\n      - profile_url\n      - request_token_url\n      - slug\n      - urls_customizable\n    SpBindingEnum:\n      enum:\n      - redirect\n      - post\n      type: string\n    Stage:\n      type: object\n      description: Stage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    StagePrompt:\n      type: object\n      description: Serializer for a single Prompt field\n      properties:\n        field_key:\n          type: string\n        label:\n          type: string\n        type:\n          $ref: '#/components/schemas/PromptTypeEnum'\n        required:\n          type: boolean\n        placeholder:\n          type: string\n        order:\n          type: integer\n        sub_text:\n          type: string\n      required:\n      - field_key\n      - label\n      - order\n      - placeholder\n      - required\n      - sub_text\n      - type\n    StageRequest:\n      type: object\n      description: Stage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n      required:\n      - name\n    StaticDevice:\n      type: object\n      description: Serializer for static authenticator devices\n      properties:\n        name:\n          type: string\n          description: The human-readable name of this device.\n          maxLength: 64\n        token_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/StaticDeviceToken'\n          readOnly: true\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n      required:\n      - name\n      - pk\n      - token_set\n    StaticDeviceRequest:\n      type: object\n      description: Serializer for static authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n      required:\n      - name\n    StaticDeviceToken:\n      type: object\n      description: Serializer for static device's tokens\n      properties:\n        token:\n          type: string\n          maxLength: 16\n      required:\n      - token\n    StaticDeviceTokenRequest:\n      type: object\n      description: Serializer for static device's tokens\n      properties:\n        token:\n          type: string\n          minLength: 1\n          maxLength: 16\n      required:\n      - token\n    StatusEnum:\n      enum:\n      - SUCCESSFUL\n      - WARNING\n      - ERROR\n      - UNKNOWN\n      type: string\n    SubModeEnum:\n      enum:\n      - hashed_user_id\n      - user_username\n      - user_email\n      - user_upn\n      type: string\n    System:\n      type: object\n      description: Get system information.\n      properties:\n        env:\n          type: object\n          additionalProperties:\n            type: string\n          readOnly: true\n        http_headers:\n          type: object\n          additionalProperties:\n            type: string\n          readOnly: true\n        http_host:\n          type: string\n          readOnly: true\n        http_is_secure:\n          type: boolean\n          readOnly: true\n        runtime:\n          type: object\n          properties:\n            python_version:\n              type: string\n            gunicorn_version:\n              type: string\n            environment:\n              type: string\n            architecture:\n              type: string\n            platform:\n              type: string\n            uname:\n              type: string\n          readOnly: true\n        tenant:\n          type: string\n          readOnly: true\n        server_time:\n          type: string\n          format: date-time\n          readOnly: true\n        embedded_outpost_host:\n          type: string\n          readOnly: true\n      required:\n      - embedded_outpost_host\n      - env\n      - http_headers\n      - http_host\n      - http_is_secure\n      - runtime\n      - server_time\n      - tenant\n    TOTPDevice:\n      type: object\n      description: Serializer for totp authenticator devices\n      properties:\n        name:\n          type: string\n          description: The human-readable name of this device.\n          maxLength: 64\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n      required:\n      - name\n      - pk\n    TOTPDeviceRequest:\n      type: object\n      description: Serializer for totp authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: The human-readable name of this device.\n          maxLength: 64\n      required:\n      - name\n    Task:\n      type: object\n      description: Serialize TaskInfo and TaskResult\n      properties:\n        task_name:\n          type: string\n        task_description:\n          type: string\n        task_finish_timestamp:\n          type: string\n          format: date-time\n        status:\n          $ref: '#/components/schemas/StatusEnum'\n        messages:\n          type: array\n          items: {}\n      required:\n      - messages\n      - status\n      - task_description\n      - task_finish_timestamp\n      - task_name\n    Tenant:\n      type: object\n      description: Tenant Serializer\n      properties:\n        tenant_uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        domain:\n          type: string\n          description: Domain that activates this tenant. Can be a superset, i.e.\n            `a.b` for `aa.b` and `ba.b`\n        default:\n          type: boolean\n        branding_title:\n          type: string\n        branding_logo:\n          type: string\n        branding_favicon:\n          type: string\n        flow_authentication:\n          type: string\n          format: uuid\n          nullable: true\n        flow_invalidation:\n          type: string\n          format: uuid\n          nullable: true\n        flow_recovery:\n          type: string\n          format: uuid\n          nullable: true\n        flow_unenrollment:\n          type: string\n          format: uuid\n          nullable: true\n        event_retention:\n          type: string\n          description: 'Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2).'\n        web_certificate:\n          type: string\n          format: uuid\n          nullable: true\n          description: Web Certificate used by the authentik Core webserver.\n      required:\n      - domain\n      - tenant_uuid\n    TenantRequest:\n      type: object\n      description: Tenant Serializer\n      properties:\n        domain:\n          type: string\n          minLength: 1\n          description: Domain that activates this tenant. Can be a superset, i.e.\n            `a.b` for `aa.b` and `ba.b`\n        default:\n          type: boolean\n        branding_title:\n          type: string\n          minLength: 1\n        branding_logo:\n          type: string\n          minLength: 1\n        branding_favicon:\n          type: string\n          minLength: 1\n        flow_authentication:\n          type: string\n          format: uuid\n          nullable: true\n        flow_invalidation:\n          type: string\n          format: uuid\n          nullable: true\n        flow_recovery:\n          type: string\n          format: uuid\n          nullable: true\n        flow_unenrollment:\n          type: string\n          format: uuid\n          nullable: true\n        event_retention:\n          type: string\n          minLength: 1\n          description: 'Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2).'\n        web_certificate:\n          type: string\n          format: uuid\n          nullable: true\n          description: Web Certificate used by the authentik Core webserver.\n      required:\n      - domain\n    Token:\n      type: object\n      description: Token Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Token uuid\n        managed:\n          type: string\n          nullable: true\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        identifier:\n          type: string\n          maxLength: 255\n          pattern: ^[-a-zA-Z0-9_]+$\n        intent:\n          $ref: '#/components/schemas/IntentEnum'\n        user:\n          type: integer\n        user_obj:\n          $ref: '#/components/schemas/User'\n        description:\n          type: string\n        expires:\n          type: string\n          format: date-time\n        expiring:\n          type: boolean\n      required:\n      - identifier\n      - pk\n    TokenRequest:\n      type: object\n      description: Token Serializer\n      properties:\n        managed:\n          type: string\n          nullable: true\n          minLength: 1\n          title: Managed by authentik\n          description: Objects which are managed by authentik. These objects are created\n            and updated automatically. This is flag only indicates that an object\n            can be overwritten by migrations. You can still modify the objects via\n            the API, but expect changes to be overwritten in a later update.\n        identifier:\n          type: string\n          minLength: 1\n          maxLength: 255\n          pattern: ^[-a-zA-Z0-9_]+$\n        intent:\n          $ref: '#/components/schemas/IntentEnum'\n        user:\n          type: integer\n        user_obj:\n          $ref: '#/components/schemas/UserRequest'\n        description:\n          type: string\n        expires:\n          type: string\n          format: date-time\n        expiring:\n          type: boolean\n      required:\n      - identifier\n    TokenView:\n      type: object\n      description: Show token's current key\n      properties:\n        key:\n          type: string\n          readOnly: true\n      required:\n      - key\n    TypeCreate:\n      type: object\n      description: Types of an object that can be created\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        component:\n          type: string\n        model_name:\n          type: string\n      required:\n      - component\n      - description\n      - model_name\n      - name\n    UsedBy:\n      type: object\n      description: A list of all objects referencing the queried object\n      properties:\n        app:\n          type: string\n        model_name:\n          type: string\n        pk:\n          type: string\n        name:\n          type: string\n        action:\n          $ref: '#/components/schemas/UsedByActionEnum'\n      required:\n      - action\n      - app\n      - model_name\n      - name\n      - pk\n    UsedByActionEnum:\n      enum:\n      - CASCADE\n      - CASCADE_MANY\n      - SET_NULL\n      - SET_DEFAULT\n      type: string\n    User:\n      type: object\n      description: User Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        name:\n          type: string\n          description: User's display name.\n        is_active:\n          type: boolean\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        last_login:\n          type: string\n          format: date-time\n          nullable: true\n        is_superuser:\n          type: boolean\n          readOnly: true\n        groups:\n          type: array\n          items:\n            type: string\n            format: uuid\n        groups_obj:\n          type: array\n          items:\n            $ref: '#/components/schemas/Group'\n          readOnly: true\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        avatar:\n          type: string\n          readOnly: true\n        attributes:\n          type: object\n          additionalProperties: {}\n        uid:\n          type: string\n          readOnly: true\n      required:\n      - avatar\n      - groups\n      - groups_obj\n      - is_superuser\n      - name\n      - pk\n      - uid\n      - username\n    UserConsent:\n      type: object\n      description: UserConsent Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        expires:\n          type: string\n          format: date-time\n        user:\n          $ref: '#/components/schemas/User'\n        application:\n          $ref: '#/components/schemas/Application'\n      required:\n      - application\n      - pk\n      - user\n    UserDeleteStage:\n      type: object\n      description: UserDeleteStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    UserDeleteStageRequest:\n      type: object\n      description: UserDeleteStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n      required:\n      - name\n    UserFieldsEnum:\n      enum:\n      - email\n      - username\n      - upn\n      type: string\n    UserLoginStage:\n      type: object\n      description: UserLoginStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        session_duration:\n          type: string\n          description: 'Determines how long a session lasts. Default of 0 means that\n            the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    UserLoginStageRequest:\n      type: object\n      description: UserLoginStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        session_duration:\n          type: string\n          minLength: 1\n          description: 'Determines how long a session lasts. Default of 0 means that\n            the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)'\n      required:\n      - name\n    UserLogoutStage:\n      type: object\n      description: UserLogoutStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    UserLogoutStageRequest:\n      type: object\n      description: UserLogoutStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n      required:\n      - name\n    UserMatchingModeEnum:\n      enum:\n      - identifier\n      - email_link\n      - email_deny\n      - username_link\n      - username_deny\n      type: string\n    UserMetrics:\n      type: object\n      description: User Metrics\n      properties:\n        logins_per_1h:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coordinate'\n          readOnly: true\n        logins_failed_per_1h:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coordinate'\n          readOnly: true\n        authorizations_per_1h:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coordinate'\n          readOnly: true\n      required:\n      - authorizations_per_1h\n      - logins_failed_per_1h\n      - logins_per_1h\n    UserOAuthSourceConnection:\n      type: object\n      description: OAuth Source Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        user:\n          type: integer\n        source:\n          type: string\n          format: uuid\n        identifier:\n          type: string\n          maxLength: 255\n      required:\n      - identifier\n      - pk\n      - source\n      - user\n    UserOAuthSourceConnectionRequest:\n      type: object\n      description: OAuth Source Serializer\n      properties:\n        user:\n          type: integer\n        source:\n          type: string\n          format: uuid\n        identifier:\n          type: string\n          minLength: 1\n          maxLength: 255\n        access_token:\n          type: string\n          writeOnly: true\n          nullable: true\n      required:\n      - identifier\n      - source\n      - user\n    UserPasswordSetRequest:\n      type: object\n      properties:\n        password:\n          type: string\n          minLength: 1\n      required:\n      - password\n    UserRequest:\n      type: object\n      description: User Serializer\n      properties:\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        name:\n          type: string\n          description: User's display name.\n        is_active:\n          type: boolean\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        last_login:\n          type: string\n          format: date-time\n          nullable: true\n        groups:\n          type: array\n          items:\n            type: string\n            format: uuid\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        attributes:\n          type: object\n          additionalProperties: {}\n      required:\n      - groups\n      - name\n      - username\n    UserSelf:\n      type: object\n      description: |-\n        User Serializer for information a user can retrieve about themselves and\n        update about themselves\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        name:\n          type: string\n          description: User's display name.\n        is_active:\n          type: boolean\n          readOnly: true\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        is_superuser:\n          type: boolean\n          readOnly: true\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserSelfGroups'\n          readOnly: true\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        avatar:\n          type: string\n          readOnly: true\n        uid:\n          type: string\n          readOnly: true\n        settings:\n          type: object\n          additionalProperties: {}\n      required:\n      - avatar\n      - groups\n      - is_active\n      - is_superuser\n      - name\n      - pk\n      - uid\n      - username\n    UserSelfGroups:\n      type: object\n      properties:\n        name:\n          type: string\n          readOnly: true\n        pk:\n          type: string\n          readOnly: true\n      required:\n      - name\n      - pk\n    UserSelfRequest:\n      type: object\n      description: |-\n        User Serializer for information a user can retrieve about themselves and\n        update about themselves\n      properties:\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        name:\n          type: string\n          description: User's display name.\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        settings:\n          type: object\n          additionalProperties: {}\n      required:\n      - name\n      - username\n    UserServiceAccountRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          minLength: 1\n        create_group:\n          type: boolean\n          default: false\n      required:\n      - name\n    UserServiceAccountResponse:\n      type: object\n      properties:\n        username:\n          type: string\n        token:\n          type: string\n      required:\n      - token\n      - username\n    UserSetting:\n      type: object\n      description: Serializer for User settings for stages and sources\n      properties:\n        object_uid:\n          type: string\n        component:\n          type: string\n        title:\n          type: string\n        configure_url:\n          type: string\n        icon_url:\n          type: string\n      required:\n      - component\n      - icon_url\n      - object_uid\n      - title\n    UserSourceConnection:\n      type: object\n      description: OAuth Source Serializer\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        user:\n          type: integer\n          readOnly: true\n        source:\n          allOf:\n          - $ref: '#/components/schemas/Source'\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created\n      - pk\n      - source\n      - user\n    UserVerificationEnum:\n      enum:\n      - required\n      - preferred\n      - discouraged\n      type: string\n    UserWriteStage:\n      type: object\n      description: UserWriteStage Serializer\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n          title: Stage uuid\n        name:\n          type: string\n        component:\n          type: string\n          readOnly: true\n        verbose_name:\n          type: string\n          readOnly: true\n        verbose_name_plural:\n          type: string\n          readOnly: true\n        meta_model_name:\n          type: string\n          readOnly: true\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        create_users_as_inactive:\n          type: boolean\n          description: When set, newly created users are inactive and cannot login.\n        create_users_group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optionally add newly created users to this group.\n      required:\n      - component\n      - meta_model_name\n      - name\n      - pk\n      - verbose_name\n      - verbose_name_plural\n    UserWriteStageRequest:\n      type: object\n      description: UserWriteStage Serializer\n      properties:\n        name:\n          type: string\n          minLength: 1\n        flow_set:\n          type: array\n          items:\n            $ref: '#/components/schemas/FlowRequest'\n        create_users_as_inactive:\n          type: boolean\n          description: When set, newly created users are inactive and cannot login.\n        create_users_group:\n          type: string\n          format: uuid\n          nullable: true\n          description: Optionally add newly created users to this group.\n      required:\n      - name\n    ValidationError:\n      type: object\n      description: Validation Error\n      properties:\n        non_field_errors:\n          type: array\n          items:\n            type: string\n        code:\n          type: string\n      additionalProperties: {}\n    Version:\n      type: object\n      description: Get running and latest version.\n      properties:\n        version_current:\n          type: string\n          readOnly: true\n        version_latest:\n          type: string\n          readOnly: true\n        build_hash:\n          type: string\n          readOnly: true\n        outdated:\n          type: boolean\n          readOnly: true\n      required:\n      - build_hash\n      - outdated\n      - version_current\n      - version_latest\n    WebAuthnDevice:\n      type: object\n      description: Serializer for WebAuthn authenticator devices\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n          maxLength: 200\n        created_on:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_on\n      - name\n      - pk\n    WebAuthnDeviceRequest:\n      type: object\n      description: Serializer for WebAuthn authenticator devices\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 200\n      required:\n      - name\n    Workers:\n      type: object\n      properties:\n        count:\n          type: integer\n      required:\n      - count\n  securitySchemes:\n    authentik:\n      type: apiKey\n      in: header\n      name: Authorization\nservers:\n- url: /api/v3/\n"
		}
	},
	"Error": "parse: paths: /core/applications/{slug}/: get: core_applications_retrieve: responses: 400: resolve \"#/components/schemas/ValidationError\" reference: invalid response reference: \"#/components/schemas/ValidationError\""
}