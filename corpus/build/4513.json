{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/rds/2013-01-10/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2013-01-10'\n  x-release: v4\n  title: Amazon Relational Database Service\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: rds\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2013-01-10.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: false\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/rds/'\nservers:\n  - url: 'http://rds.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon RDS multi-region endpoint\n  - url: 'https://rds.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon RDS multi-region endpoint\n  - url: 'http://rds.amazonaws.com'\n    variables: {}\n    description: The general Amazon RDS multi-region endpoint\n  - url: 'https://rds.amazonaws.com'\n    variables: {}\n    description: The general Amazon RDS multi-region endpoint\n  - url: 'http://rds.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://rds.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#Action=AddSourceIdentifierToSubscription:\n    get:\n      x-aws-operation-name: AddSourceIdentifierToSubscription\n      operationId: GET_AddSourceIdentifierToSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '481':\n          description: SourceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SourceNotFoundFault'\n      parameters:\n        - name: SubscriptionName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SourceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddSourceIdentifierToSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: AddSourceIdentifierToSubscription\n      operationId: POST_AddSourceIdentifierToSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '481':\n          description: SourceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SourceNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddSourceIdentifierToSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=AddTagsToResource:\n    get:\n      x-aws-operation-name: AddTagsToResource\n      operationId: GET_AddTagsToResource\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      parameters:\n        - name: ResourceName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Tags\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/Tag'\n                - xml:\n                    name: Tag\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddTagsToResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: AddTagsToResource\n      operationId: POST_AddTagsToResource\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/AddTagsToResourceMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddTagsToResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=AuthorizeDBSecurityGroupIngress:\n    get:\n      x-aws-operation-name: AuthorizeDBSecurityGroupIngress\n      operationId: GET_AuthorizeDBSecurityGroupIngress\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressResult'\n        '480':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '481':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n        '482':\n          description: AuthorizationAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'\n        '483':\n          description: AuthorizationQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'\n      parameters:\n        - name: DBSecurityGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: CIDRIP\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EC2SecurityGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EC2SecurityGroupId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EC2SecurityGroupOwnerId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AuthorizeDBSecurityGroupIngress\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: AuthorizeDBSecurityGroupIngress\n      operationId: POST_AuthorizeDBSecurityGroupIngress\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressResult'\n        '480':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '481':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n        '482':\n          description: AuthorizationAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'\n        '483':\n          description: AuthorizationQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AuthorizeDBSecurityGroupIngress\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CopyDBSnapshot:\n    get:\n      x-aws-operation-name: CopyDBSnapshot\n      operationId: GET_CopyDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CopyDBSnapshotResult'\n        '480':\n          description: DBSnapshotAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n        '482':\n          description: InvalidDBSnapshotStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'\n        '483':\n          description: SnapshotQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n      parameters:\n        - name: SourceDBSnapshotIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: TargetDBSnapshotIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CopyDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CopyDBSnapshot\n      operationId: POST_CopyDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CopyDBSnapshotResult'\n        '480':\n          description: DBSnapshotAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n        '482':\n          description: InvalidDBSnapshotStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'\n        '483':\n          description: SnapshotQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CopyDBSnapshotMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CopyDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateDBInstance:\n    get:\n      x-aws-operation-name: CreateDBInstance\n      operationId: GET_CreateDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBInstanceResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '482':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '483':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '484':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '485':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '486':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '487':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '488':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '489':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '490':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '491':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      parameters:\n        - name: DBName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: AllocatedStorage\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: integer\n        - name: DBInstanceClass\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Engine\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: MasterUsername\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: MasterUserPassword\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBSecurityGroups\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: DBSecurityGroupName\n        - name: VpcSecurityGroupIds\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: VpcSecurityGroupId\n        - name: AvailabilityZone\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBSubnetGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: PreferredMaintenanceWindow\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBParameterGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: BackupRetentionPeriod\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: PreferredBackupWindow\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Port\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: MultiAZ\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: EngineVersion\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: AutoMinorVersionUpgrade\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: LicenseModel\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Iops\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: OptionGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: CharacterSetName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: PubliclyAccessible\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateDBInstance\n      operationId: POST_CreateDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBInstanceResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '482':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '483':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '484':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '485':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '486':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '487':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '488':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '489':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '490':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '491':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateDBInstanceMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateDBInstanceReadReplica:\n    get:\n      x-aws-operation-name: CreateDBInstanceReadReplica\n      operationId: GET_CreateDBInstanceReadReplica\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBInstanceReadReplicaResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '482':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '483':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '484':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '485':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '486':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '487':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '488':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '489':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '490':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '491':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '492':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '493':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SourceDBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceClass\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: AvailabilityZone\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Port\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: AutoMinorVersionUpgrade\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Iops\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: OptionGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: PubliclyAccessible\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBInstanceReadReplica\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateDBInstanceReadReplica\n      operationId: POST_CreateDBInstanceReadReplica\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBInstanceReadReplicaResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '482':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '483':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '484':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '485':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '486':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '487':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '488':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '489':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '490':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '491':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '492':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '493':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateDBInstanceReadReplicaMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBInstanceReadReplica\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateDBParameterGroup:\n    get:\n      x-aws-operation-name: CreateDBParameterGroup\n      operationId: GET_CreateDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBParameterGroupResult'\n        '480':\n          description: DBParameterGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'\n        '481':\n          description: DBParameterGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'\n      parameters:\n        - name: DBParameterGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBParameterGroupFamily\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Description\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateDBParameterGroup\n      operationId: POST_CreateDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBParameterGroupResult'\n        '480':\n          description: DBParameterGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'\n        '481':\n          description: DBParameterGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateDBParameterGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateDBSecurityGroup:\n    get:\n      x-aws-operation-name: CreateDBSecurityGroup\n      operationId: GET_CreateDBSecurityGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBSecurityGroupResult'\n        '480':\n          description: DBSecurityGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupAlreadyExistsFault'\n        '481':\n          description: DBSecurityGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupQuotaExceededFault'\n        '482':\n          description: DBSecurityGroupNotSupportedFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotSupportedFault'\n      parameters:\n        - name: DBSecurityGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBSecurityGroupDescription\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBSecurityGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateDBSecurityGroup\n      operationId: POST_CreateDBSecurityGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBSecurityGroupResult'\n        '480':\n          description: DBSecurityGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupAlreadyExistsFault'\n        '481':\n          description: DBSecurityGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupQuotaExceededFault'\n        '482':\n          description: DBSecurityGroupNotSupportedFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotSupportedFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateDBSecurityGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBSecurityGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateDBSnapshot:\n    get:\n      x-aws-operation-name: CreateDBSnapshot\n      operationId: GET_CreateDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBSnapshotResult'\n        '480':\n          description: DBSnapshotAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'\n        '481':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '482':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '483':\n          description: SnapshotQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n      parameters:\n        - name: DBSnapshotIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateDBSnapshot\n      operationId: POST_CreateDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBSnapshotResult'\n        '480':\n          description: DBSnapshotAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'\n        '481':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '482':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '483':\n          description: SnapshotQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateDBSnapshotMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateDBSubnetGroup:\n    get:\n      x-aws-operation-name: CreateDBSubnetGroup\n      operationId: GET_CreateDBSubnetGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBSubnetGroupResult'\n        '480':\n          description: DBSubnetGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'\n        '481':\n          description: DBSubnetGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'\n        '482':\n          description: DBSubnetQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'\n        '483':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '484':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n      parameters:\n        - name: DBSubnetGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBSubnetGroupDescription\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SubnetIds\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: SubnetIdentifier\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBSubnetGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateDBSubnetGroup\n      operationId: POST_CreateDBSubnetGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateDBSubnetGroupResult'\n        '480':\n          description: DBSubnetGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'\n        '481':\n          description: DBSubnetGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'\n        '482':\n          description: DBSubnetQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'\n        '483':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '484':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateDBSubnetGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateDBSubnetGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateEventSubscription:\n    get:\n      x-aws-operation-name: CreateEventSubscription\n      operationId: GET_CreateEventSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateEventSubscriptionResult'\n        '480':\n          description: EventSubscriptionQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'\n        '481':\n          description: SubscriptionAlreadyExistFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'\n        '482':\n          description: SNSInvalidTopicFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSInvalidTopicFault'\n        '483':\n          description: SNSNoAuthorizationFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSNoAuthorizationFault'\n        '484':\n          description: SNSTopicArnNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'\n        '485':\n          description: SubscriptionCategoryNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'\n        '486':\n          description: SourceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SourceNotFoundFault'\n      parameters:\n        - name: SubscriptionName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SnsTopicArn\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SourceType\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EventCategories\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: EventCategory\n        - name: SourceIds\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: SourceId\n        - name: Enabled\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateEventSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateEventSubscription\n      operationId: POST_CreateEventSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateEventSubscriptionResult'\n        '480':\n          description: EventSubscriptionQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'\n        '481':\n          description: SubscriptionAlreadyExistFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'\n        '482':\n          description: SNSInvalidTopicFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSInvalidTopicFault'\n        '483':\n          description: SNSNoAuthorizationFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSNoAuthorizationFault'\n        '484':\n          description: SNSTopicArnNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'\n        '485':\n          description: SubscriptionCategoryNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'\n        '486':\n          description: SourceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SourceNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateEventSubscriptionMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateEventSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=CreateOptionGroup:\n    get:\n      x-aws-operation-name: CreateOptionGroup\n      operationId: GET_CreateOptionGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateOptionGroupResult'\n        '480':\n          description: OptionGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupAlreadyExistsFault'\n        '481':\n          description: OptionGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupQuotaExceededFault'\n      parameters:\n        - name: OptionGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: EngineName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: MajorEngineVersion\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: OptionGroupDescription\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateOptionGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateOptionGroup\n      operationId: POST_CreateOptionGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateOptionGroupResult'\n        '480':\n          description: OptionGroupAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupAlreadyExistsFault'\n        '481':\n          description: OptionGroupQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupQuotaExceededFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateOptionGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateOptionGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DeleteDBInstance:\n    get:\n      x-aws-operation-name: DeleteDBInstance\n      operationId: GET_DeleteDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteDBInstanceResult'\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '482':\n          description: DBSnapshotAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'\n        '483':\n          description: SnapshotQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SkipFinalSnapshot\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: FinalDBSnapshotIdentifier\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteDBInstance\n      operationId: POST_DeleteDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteDBInstanceResult'\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '482':\n          description: DBSnapshotAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'\n        '483':\n          description: SnapshotQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteDBInstanceMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DeleteDBParameterGroup:\n    get:\n      x-aws-operation-name: DeleteDBParameterGroup\n      operationId: GET_DeleteDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidDBParameterGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'\n        '481':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      parameters:\n        - name: DBParameterGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteDBParameterGroup\n      operationId: POST_DeleteDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidDBParameterGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'\n        '481':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteDBParameterGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DeleteDBSecurityGroup:\n    get:\n      x-aws-operation-name: DeleteDBSecurityGroup\n      operationId: GET_DeleteDBSecurityGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n        '481':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n      parameters:\n        - name: DBSecurityGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBSecurityGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteDBSecurityGroup\n      operationId: POST_DeleteDBSecurityGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n        '481':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteDBSecurityGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBSecurityGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DeleteDBSnapshot:\n    get:\n      x-aws-operation-name: DeleteDBSnapshot\n      operationId: GET_DeleteDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteDBSnapshotResult'\n        '480':\n          description: InvalidDBSnapshotStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      parameters:\n        - name: DBSnapshotIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteDBSnapshot\n      operationId: POST_DeleteDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteDBSnapshotResult'\n        '480':\n          description: InvalidDBSnapshotStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteDBSnapshotMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DeleteDBSubnetGroup:\n    get:\n      x-aws-operation-name: DeleteDBSubnetGroup\n      operationId: GET_DeleteDBSubnetGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidDBSubnetGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'\n        '481':\n          description: InvalidDBSubnetStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSubnetStateFault'\n        '482':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n      parameters:\n        - name: DBSubnetGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBSubnetGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteDBSubnetGroup\n      operationId: POST_DeleteDBSubnetGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidDBSubnetGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'\n        '481':\n          description: InvalidDBSubnetStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSubnetStateFault'\n        '482':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteDBSubnetGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteDBSubnetGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DeleteEventSubscription:\n    get:\n      x-aws-operation-name: DeleteEventSubscription\n      operationId: GET_DeleteEventSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteEventSubscriptionResult'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '481':\n          description: InvalidEventSubscriptionStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'\n      parameters:\n        - name: SubscriptionName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteEventSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteEventSubscription\n      operationId: POST_DeleteEventSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteEventSubscriptionResult'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '481':\n          description: InvalidEventSubscriptionStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteEventSubscriptionMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteEventSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DeleteOptionGroup:\n    get:\n      x-aws-operation-name: DeleteOptionGroup\n      operationId: GET_DeleteOptionGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n        '481':\n          description: InvalidOptionGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidOptionGroupStateFault'\n      parameters:\n        - name: OptionGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteOptionGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteOptionGroup\n      operationId: POST_DeleteOptionGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n        '481':\n          description: InvalidOptionGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidOptionGroupStateFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteOptionGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteOptionGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeDBEngineVersions:\n    get:\n      x-aws-operation-name: DescribeDBEngineVersions\n      operationId: GET_DescribeDBEngineVersions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBEngineVersionMessage'\n      parameters:\n        - name: Engine\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EngineVersion\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBParameterGroupFamily\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DefaultOnly\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: ListSupportedCharacterSets\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBEngineVersions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeDBEngineVersions\n      operationId: POST_DescribeDBEngineVersions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBEngineVersionMessage'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeDBEngineVersionsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBEngineVersions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeDBInstances:\n    get:\n      x-aws-operation-name: DescribeDBInstances\n      operationId: GET_DescribeDBInstances\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceMessage'\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBInstances\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeDBInstances\n      operationId: POST_DescribeDBInstances\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceMessage'\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeDBInstancesMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBInstances\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeDBParameterGroups:\n    get:\n      x-aws-operation-name: DescribeDBParameterGroups\n      operationId: GET_DescribeDBParameterGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupsMessage'\n        '480':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      parameters:\n        - name: DBParameterGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBParameterGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeDBParameterGroups\n      operationId: POST_DescribeDBParameterGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupsMessage'\n        '480':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeDBParameterGroupsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBParameterGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeDBParameters:\n    get:\n      x-aws-operation-name: DescribeDBParameters\n      operationId: GET_DescribeDBParameters\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupDetails'\n        '480':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      parameters:\n        - name: DBParameterGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Source\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBParameters\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeDBParameters\n      operationId: POST_DescribeDBParameters\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupDetails'\n        '480':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeDBParametersMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBParameters\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeDBSecurityGroups:\n    get:\n      x-aws-operation-name: DescribeDBSecurityGroups\n      operationId: GET_DescribeDBSecurityGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupMessage'\n        '480':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n      parameters:\n        - name: DBSecurityGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBSecurityGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeDBSecurityGroups\n      operationId: POST_DescribeDBSecurityGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupMessage'\n        '480':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeDBSecurityGroupsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBSecurityGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeDBSnapshots:\n    get:\n      x-aws-operation-name: DescribeDBSnapshots\n      operationId: GET_DescribeDBSnapshots\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotMessage'\n        '480':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBSnapshotIdentifier\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: SnapshotType\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBSnapshots\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeDBSnapshots\n      operationId: POST_DescribeDBSnapshots\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotMessage'\n        '480':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeDBSnapshotsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBSnapshots\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeDBSubnetGroups:\n    get:\n      x-aws-operation-name: DescribeDBSubnetGroups\n      operationId: GET_DescribeDBSubnetGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupMessage'\n        '480':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n      parameters:\n        - name: DBSubnetGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBSubnetGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeDBSubnetGroups\n      operationId: POST_DescribeDBSubnetGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupMessage'\n        '480':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeDBSubnetGroupsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeDBSubnetGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeEngineDefaultParameters:\n    get:\n      x-aws-operation-name: DescribeEngineDefaultParameters\n      operationId: GET_DescribeEngineDefaultParameters\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'\n      parameters:\n        - name: DBParameterGroupFamily\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEngineDefaultParameters\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeEngineDefaultParameters\n      operationId: POST_DescribeEngineDefaultParameters\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeEngineDefaultParametersMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEngineDefaultParameters\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeEventCategories:\n    get:\n      x-aws-operation-name: DescribeEventCategories\n      operationId: GET_DescribeEventCategories\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventCategoriesMessage'\n      parameters:\n        - name: SourceType\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEventCategories\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeEventCategories\n      operationId: POST_DescribeEventCategories\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventCategoriesMessage'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeEventCategoriesMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEventCategories\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeEventSubscriptions:\n    get:\n      x-aws-operation-name: DescribeEventSubscriptions\n      operationId: GET_DescribeEventSubscriptions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventSubscriptionsMessage'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n      parameters:\n        - name: SubscriptionName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEventSubscriptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeEventSubscriptions\n      operationId: POST_DescribeEventSubscriptions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventSubscriptionsMessage'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeEventSubscriptionsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEventSubscriptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeEvents:\n    get:\n      x-aws-operation-name: DescribeEvents\n      operationId: GET_DescribeEvents\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventsMessage'\n      parameters:\n        - name: SourceIdentifier\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: SourceType\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n            enum:\n              - db-instance\n              - db-parameter-group\n              - db-security-group\n              - db-snapshot\n        - name: StartTime\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n            format: date-time\n        - name: EndTime\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n            format: date-time\n        - name: Duration\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: EventCategories\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: EventCategory\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEvents\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeEvents\n      operationId: POST_DescribeEvents\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventsMessage'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeEventsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeEvents\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeOptionGroupOptions:\n    get:\n      x-aws-operation-name: DescribeOptionGroupOptions\n      operationId: GET_DescribeOptionGroupOptions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupOptionsMessage'\n      parameters:\n        - name: EngineName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: MajorEngineVersion\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeOptionGroupOptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeOptionGroupOptions\n      operationId: POST_DescribeOptionGroupOptions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupOptionsMessage'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeOptionGroupOptionsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeOptionGroupOptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeOptionGroups:\n    get:\n      x-aws-operation-name: DescribeOptionGroups\n      operationId: GET_DescribeOptionGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroups'\n        '480':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      parameters:\n        - name: OptionGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: EngineName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MajorEngineVersion\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeOptionGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeOptionGroups\n      operationId: POST_DescribeOptionGroups\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroups'\n        '480':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeOptionGroupsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeOptionGroups\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeOrderableDBInstanceOptions:\n    get:\n      x-aws-operation-name: DescribeOrderableDBInstanceOptions\n      operationId: GET_DescribeOrderableDBInstanceOptions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'\n      parameters:\n        - name: Engine\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: EngineVersion\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceClass\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: LicenseModel\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Vpc\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeOrderableDBInstanceOptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeOrderableDBInstanceOptions\n      operationId: POST_DescribeOrderableDBInstanceOptions\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeOrderableDBInstanceOptionsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeOrderableDBInstanceOptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeReservedDBInstances:\n    get:\n      x-aws-operation-name: DescribeReservedDBInstances\n      operationId: GET_DescribeReservedDBInstances\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceMessage'\n        '480':\n          description: ReservedDBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceNotFoundFault'\n      parameters:\n        - name: ReservedDBInstanceId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: ReservedDBInstancesOfferingId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceClass\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Duration\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: ProductDescription\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: OfferingType\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MultiAZ\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeReservedDBInstances\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeReservedDBInstances\n      operationId: POST_DescribeReservedDBInstances\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceMessage'\n        '480':\n          description: ReservedDBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeReservedDBInstancesMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeReservedDBInstances\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=DescribeReservedDBInstancesOfferings:\n    get:\n      x-aws-operation-name: DescribeReservedDBInstancesOfferings\n      operationId: GET_DescribeReservedDBInstancesOfferings\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstancesOfferingMessage'\n        '480':\n          description: ReservedDBInstancesOfferingNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'\n      parameters:\n        - name: ReservedDBInstancesOfferingId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceClass\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Duration\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: ProductDescription\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: OfferingType\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MultiAZ\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: MaxRecords\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Marker\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeReservedDBInstancesOfferings\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DescribeReservedDBInstancesOfferings\n      operationId: POST_DescribeReservedDBInstancesOfferings\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstancesOfferingMessage'\n        '480':\n          description: ReservedDBInstancesOfferingNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DescribeReservedDBInstancesOfferingsMessage'\n      parameters:\n        - name: MaxRecords\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: Marker\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DescribeReservedDBInstancesOfferings\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=ListTagsForResource:\n    get:\n      x-aws-operation-name: ListTagsForResource\n      operationId: GET_ListTagsForResource\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagListMessage'\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      parameters:\n        - name: ResourceName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListTagsForResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListTagsForResource\n      operationId: POST_ListTagsForResource\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagListMessage'\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListTagsForResourceMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListTagsForResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=ModifyDBInstance:\n    get:\n      x-aws-operation-name: ModifyDBInstance\n      operationId: GET_ModifyDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyDBInstanceResult'\n        '480':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '481':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n        '482':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '483':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '484':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '485':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '486':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '487':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '488':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '489':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '490':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n        '491':\n          description: DBUpgradeDependencyFailureFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: AllocatedStorage\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: DBInstanceClass\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBSecurityGroups\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: DBSecurityGroupName\n        - name: VpcSecurityGroupIds\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: VpcSecurityGroupId\n        - name: ApplyImmediately\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: MasterUserPassword\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBParameterGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: BackupRetentionPeriod\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: PreferredBackupWindow\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: PreferredMaintenanceWindow\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MultiAZ\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: EngineVersion\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: AllowMajorVersionUpgrade\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: AutoMinorVersionUpgrade\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Iops\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: OptionGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: NewDBInstanceIdentifier\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ModifyDBInstance\n      operationId: POST_ModifyDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyDBInstanceResult'\n        '480':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '481':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n        '482':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '483':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '484':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '485':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '486':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '487':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '488':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '489':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '490':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n        '491':\n          description: DBUpgradeDependencyFailureFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ModifyDBInstanceMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=ModifyDBParameterGroup:\n    get:\n      x-aws-operation-name: ModifyDBParameterGroup\n      operationId: GET_ModifyDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNameMessage'\n        '480':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '481':\n          description: InvalidDBParameterGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'\n      parameters:\n        - name: DBParameterGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Parameters\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/Parameter'\n                - xml:\n                    name: Parameter\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ModifyDBParameterGroup\n      operationId: POST_ModifyDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNameMessage'\n        '480':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n        '481':\n          description: InvalidDBParameterGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ModifyDBParameterGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=ModifyDBSubnetGroup:\n    get:\n      x-aws-operation-name: ModifyDBSubnetGroup\n      operationId: GET_ModifyDBSubnetGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'\n        '480':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '481':\n          description: DBSubnetQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'\n        '482':\n          description: SubnetAlreadyInUse\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubnetAlreadyInUse'\n        '483':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '484':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n      parameters:\n        - name: DBSubnetGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBSubnetGroupDescription\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: SubnetIds\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: SubnetIdentifier\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyDBSubnetGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ModifyDBSubnetGroup\n      operationId: POST_ModifyDBSubnetGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'\n        '480':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '481':\n          description: DBSubnetQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'\n        '482':\n          description: SubnetAlreadyInUse\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubnetAlreadyInUse'\n        '483':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '484':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ModifyDBSubnetGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyDBSubnetGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=ModifyEventSubscription:\n    get:\n      x-aws-operation-name: ModifyEventSubscription\n      operationId: GET_ModifyEventSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyEventSubscriptionResult'\n        '480':\n          description: EventSubscriptionQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'\n        '481':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '482':\n          description: SNSInvalidTopicFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSInvalidTopicFault'\n        '483':\n          description: SNSNoAuthorizationFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSNoAuthorizationFault'\n        '484':\n          description: SNSTopicArnNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'\n        '485':\n          description: SubscriptionCategoryNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'\n      parameters:\n        - name: SubscriptionName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SnsTopicArn\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: SourceType\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EventCategories\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/String'\n                - xml:\n                    name: EventCategory\n        - name: Enabled\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyEventSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ModifyEventSubscription\n      operationId: POST_ModifyEventSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyEventSubscriptionResult'\n        '480':\n          description: EventSubscriptionQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'\n        '481':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '482':\n          description: SNSInvalidTopicFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSInvalidTopicFault'\n        '483':\n          description: SNSNoAuthorizationFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSNoAuthorizationFault'\n        '484':\n          description: SNSTopicArnNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'\n        '485':\n          description: SubscriptionCategoryNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ModifyEventSubscriptionMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyEventSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=ModifyOptionGroup:\n    get:\n      x-aws-operation-name: ModifyOptionGroup\n      operationId: GET_ModifyOptionGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyOptionGroupResult'\n        '480':\n          description: InvalidOptionGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidOptionGroupStateFault'\n        '481':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      parameters:\n        - name: OptionGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: OptionsToInclude\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/OptionConfiguration'\n                - xml:\n                    name: OptionConfiguration\n        - name: OptionsToRemove\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/String'\n        - name: ApplyImmediately\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyOptionGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ModifyOptionGroup\n      operationId: POST_ModifyOptionGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ModifyOptionGroupResult'\n        '480':\n          description: InvalidOptionGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidOptionGroupStateFault'\n        '481':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ModifyOptionGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ModifyOptionGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=PromoteReadReplica:\n    get:\n      x-aws-operation-name: PromoteReadReplica\n      operationId: GET_PromoteReadReplica\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PromoteReadReplicaResult'\n        '480':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '481':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: BackupRetentionPeriod\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: PreferredBackupWindow\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - PromoteReadReplica\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: PromoteReadReplica\n      operationId: POST_PromoteReadReplica\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PromoteReadReplicaResult'\n        '480':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '481':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/PromoteReadReplicaMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - PromoteReadReplica\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=PurchaseReservedDBInstancesOffering:\n    get:\n      x-aws-operation-name: PurchaseReservedDBInstancesOffering\n      operationId: GET_PurchaseReservedDBInstancesOffering\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingResult'\n        '480':\n          description: ReservedDBInstancesOfferingNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'\n        '481':\n          description: ReservedDBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceAlreadyExistsFault'\n        '482':\n          description: ReservedDBInstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceQuotaExceededFault'\n      parameters:\n        - name: ReservedDBInstancesOfferingId\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: ReservedDBInstanceId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceCount\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - PurchaseReservedDBInstancesOffering\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: PurchaseReservedDBInstancesOffering\n      operationId: POST_PurchaseReservedDBInstancesOffering\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingResult'\n        '480':\n          description: ReservedDBInstancesOfferingNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'\n        '481':\n          description: ReservedDBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceAlreadyExistsFault'\n        '482':\n          description: ReservedDBInstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReservedDBInstanceQuotaExceededFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - PurchaseReservedDBInstancesOffering\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=RebootDBInstance:\n    get:\n      x-aws-operation-name: RebootDBInstance\n      operationId: GET_RebootDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RebootDBInstanceResult'\n        '480':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '481':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: ForceFailover\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RebootDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: RebootDBInstance\n      operationId: POST_RebootDBInstance\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RebootDBInstanceResult'\n        '480':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '481':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/RebootDBInstanceMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RebootDBInstance\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=RemoveSourceIdentifierFromSubscription:\n    get:\n      x-aws-operation-name: RemoveSourceIdentifierFromSubscription\n      operationId: GET_RemoveSourceIdentifierFromSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '481':\n          description: SourceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SourceNotFoundFault'\n      parameters:\n        - name: SubscriptionName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: SourceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemoveSourceIdentifierFromSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: RemoveSourceIdentifierFromSubscription\n      operationId: POST_RemoveSourceIdentifierFromSubscription\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'\n        '480':\n          description: SubscriptionNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionNotFoundFault'\n        '481':\n          description: SourceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SourceNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemoveSourceIdentifierFromSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=RemoveTagsFromResource:\n    get:\n      x-aws-operation-name: RemoveTagsFromResource\n      operationId: GET_RemoveTagsFromResource\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      parameters:\n        - name: ResourceName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: TagKeys\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/String'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemoveTagsFromResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: RemoveTagsFromResource\n      operationId: POST_RemoveTagsFromResource\n      description: ''\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/RemoveTagsFromResourceMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemoveTagsFromResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=ResetDBParameterGroup:\n    get:\n      x-aws-operation-name: ResetDBParameterGroup\n      operationId: GET_ResetDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNameMessage'\n        '480':\n          description: InvalidDBParameterGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'\n        '481':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      parameters:\n        - name: DBParameterGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: ResetAllParameters\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: Parameters\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: array\n            items:\n              allOf:\n                - $ref: '#/components/schemas/Parameter'\n                - xml:\n                    name: Parameter\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ResetDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ResetDBParameterGroup\n      operationId: POST_ResetDBParameterGroup\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNameMessage'\n        '480':\n          description: InvalidDBParameterGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'\n        '481':\n          description: DBParameterGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ResetDBParameterGroupMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ResetDBParameterGroup\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=RestoreDBInstanceFromDBSnapshot:\n    get:\n      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot\n      operationId: GET_RestoreDBInstanceFromDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n        '482':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '483':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '484':\n          description: InvalidDBSnapshotStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'\n        '485':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '486':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '487':\n          description: InvalidRestoreFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidRestoreFault'\n        '488':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '489':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '490':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '491':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '492':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      parameters:\n        - name: DBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBSnapshotIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: DBInstanceClass\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Port\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: AvailabilityZone\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBSubnetGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MultiAZ\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: PubliclyAccessible\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: AutoMinorVersionUpgrade\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: LicenseModel\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Engine\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Iops\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: OptionGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RestoreDBInstanceFromDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot\n      operationId: POST_RestoreDBInstanceFromDBSnapshot\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: DBSnapshotNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSnapshotNotFoundFault'\n        '482':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '483':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '484':\n          description: InvalidDBSnapshotStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'\n        '485':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '486':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '487':\n          description: InvalidRestoreFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidRestoreFault'\n        '488':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '489':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '490':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '491':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '492':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RestoreDBInstanceFromDBSnapshot\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=RestoreDBInstanceToPointInTime:\n    get:\n      x-aws-operation-name: RestoreDBInstanceToPointInTime\n      operationId: GET_RestoreDBInstanceToPointInTime\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '482':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '483':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '484':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '485':\n          description: PointInTimeRestoreNotEnabledFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PointInTimeRestoreNotEnabledFault'\n        '486':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '487':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '488':\n          description: InvalidRestoreFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidRestoreFault'\n        '489':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '490':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '491':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '492':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '493':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      parameters:\n        - name: SourceDBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: TargetDBInstanceIdentifier\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: RestoreTime\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n            format: date-time\n        - name: UseLatestRestorableTime\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: DBInstanceClass\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Port\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: AvailabilityZone\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBSubnetGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: MultiAZ\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: PubliclyAccessible\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: AutoMinorVersionUpgrade\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: boolean\n        - name: LicenseModel\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: DBName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Engine\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Iops\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: OptionGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RestoreDBInstanceToPointInTime\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: RestoreDBInstanceToPointInTime\n      operationId: POST_RestoreDBInstanceToPointInTime\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeResult'\n        '480':\n          description: DBInstanceAlreadyExistsFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'\n        '481':\n          description: DBInstanceNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBInstanceNotFoundFault'\n        '482':\n          description: InstanceQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InstanceQuotaExceededFault'\n        '483':\n          description: InsufficientDBInstanceCapacityFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'\n        '484':\n          description: InvalidDBInstanceStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBInstanceStateFault'\n        '485':\n          description: PointInTimeRestoreNotEnabledFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PointInTimeRestoreNotEnabledFault'\n        '486':\n          description: StorageQuotaExceededFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StorageQuotaExceededFault'\n        '487':\n          description: InvalidVPCNetworkStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '488':\n          description: InvalidRestoreFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidRestoreFault'\n        '489':\n          description: DBSubnetGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'\n        '490':\n          description: DBSubnetGroupDoesNotCoverEnoughAZs\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'\n        '491':\n          description: InvalidSubnet\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '492':\n          description: ProvisionedIopsNotAvailableInAZFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'\n        '493':\n          description: OptionGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptionGroupNotFoundFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RestoreDBInstanceToPointInTime\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n  /#Action=RevokeDBSecurityGroupIngress:\n    get:\n      x-aws-operation-name: RevokeDBSecurityGroupIngress\n      operationId: GET_RevokeDBSecurityGroupIngress\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RevokeDBSecurityGroupIngressResult'\n        '480':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '481':\n          description: AuthorizationNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationNotFoundFault'\n        '482':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n      parameters:\n        - name: DBSecurityGroupName\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n        - name: CIDRIP\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EC2SecurityGroupName\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EC2SecurityGroupId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: EC2SecurityGroupOwnerId\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RevokeDBSecurityGroupIngress\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: RevokeDBSecurityGroupIngress\n      operationId: POST_RevokeDBSecurityGroupIngress\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/RevokeDBSecurityGroupIngressResult'\n        '480':\n          description: DBSecurityGroupNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'\n        '481':\n          description: AuthorizationNotFoundFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationNotFoundFault'\n        '482':\n          description: InvalidDBSecurityGroupStateFault\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/RevokeDBSecurityGroupIngressMessage'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RevokeDBSecurityGroupIngress\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2013-01-10'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddSourceIdentifierToSubscriptionResult:\n      type: object\n      properties:\n        EventSubscription:\n          $ref: '#/components/schemas/EventSubscription'\n    SubscriptionNotFoundFault: {}\n    SourceNotFoundFault: {}\n    Tag:\n      type: object\n      properties:\n        Key:\n          $ref: '#/components/schemas/String'\n        Value:\n          $ref: '#/components/schemas/String'\n    DBInstanceNotFoundFault: {}\n    DBSnapshotNotFoundFault: {}\n    AuthorizeDBSecurityGroupIngressResult:\n      type: object\n      properties:\n        DBSecurityGroup:\n          $ref: '#/components/schemas/DBSecurityGroup'\n    DBSecurityGroupNotFoundFault: {}\n    InvalidDBSecurityGroupStateFault: {}\n    AuthorizationAlreadyExistsFault: {}\n    AuthorizationQuotaExceededFault: {}\n    CopyDBSnapshotResult:\n      type: object\n      properties:\n        DBSnapshot:\n          $ref: '#/components/schemas/DBSnapshot'\n    DBSnapshotAlreadyExistsFault: {}\n    InvalidDBSnapshotStateFault: {}\n    SnapshotQuotaExceededFault: {}\n    CreateDBInstanceResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    String:\n      type: string\n    DBInstanceAlreadyExistsFault: {}\n    InsufficientDBInstanceCapacityFault: {}\n    DBParameterGroupNotFoundFault: {}\n    InstanceQuotaExceededFault: {}\n    StorageQuotaExceededFault: {}\n    DBSubnetGroupNotFoundFault: {}\n    DBSubnetGroupDoesNotCoverEnoughAZs: {}\n    InvalidSubnet: {}\n    InvalidVPCNetworkStateFault: {}\n    ProvisionedIopsNotAvailableInAZFault: {}\n    OptionGroupNotFoundFault: {}\n    CreateDBInstanceReadReplicaResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    InvalidDBInstanceStateFault: {}\n    CreateDBParameterGroupResult:\n      type: object\n      properties:\n        DBParameterGroup:\n          $ref: '#/components/schemas/DBParameterGroup'\n    DBParameterGroupQuotaExceededFault: {}\n    DBParameterGroupAlreadyExistsFault: {}\n    CreateDBSecurityGroupResult:\n      type: object\n      properties:\n        DBSecurityGroup:\n          $ref: '#/components/schemas/DBSecurityGroup'\n    DBSecurityGroupAlreadyExistsFault: {}\n    DBSecurityGroupQuotaExceededFault: {}\n    DBSecurityGroupNotSupportedFault: {}\n    CreateDBSnapshotResult:\n      type: object\n      properties:\n        DBSnapshot:\n          $ref: '#/components/schemas/DBSnapshot'\n    CreateDBSubnetGroupResult:\n      type: object\n      properties:\n        DBSubnetGroup:\n          $ref: '#/components/schemas/DBSubnetGroup'\n    DBSubnetGroupAlreadyExistsFault: {}\n    DBSubnetGroupQuotaExceededFault: {}\n    DBSubnetQuotaExceededFault: {}\n    CreateEventSubscriptionResult:\n      type: object\n      properties:\n        EventSubscription:\n          $ref: '#/components/schemas/EventSubscription'\n    EventSubscriptionQuotaExceededFault: {}\n    SubscriptionAlreadyExistFault: {}\n    SNSInvalidTopicFault: {}\n    SNSNoAuthorizationFault: {}\n    SNSTopicArnNotFoundFault: {}\n    SubscriptionCategoryNotFoundFault: {}\n    CreateOptionGroupResult:\n      type: object\n      properties:\n        OptionGroup:\n          $ref: '#/components/schemas/OptionGroup'\n    OptionGroupAlreadyExistsFault: {}\n    OptionGroupQuotaExceededFault: {}\n    DeleteDBInstanceResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    InvalidDBParameterGroupStateFault: {}\n    DeleteDBSnapshotResult:\n      type: object\n      properties:\n        DBSnapshot:\n          $ref: '#/components/schemas/DBSnapshot'\n    InvalidDBSubnetGroupStateFault: {}\n    InvalidDBSubnetStateFault: {}\n    DeleteEventSubscriptionResult:\n      type: object\n      properties:\n        EventSubscription:\n          $ref: '#/components/schemas/EventSubscription'\n    InvalidEventSubscriptionStateFault: {}\n    InvalidOptionGroupStateFault: {}\n    DBEngineVersionMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        DBEngineVersions:\n          $ref: '#/components/schemas/DBEngineVersionList'\n    DBInstanceMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        DBInstances:\n          $ref: '#/components/schemas/DBInstanceList'\n    DBParameterGroupsMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        DBParameterGroups:\n          $ref: '#/components/schemas/DBParameterGroupList'\n    DBParameterGroupDetails:\n      type: object\n      properties:\n        Parameters:\n          $ref: '#/components/schemas/ParametersList'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DBSecurityGroupMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        DBSecurityGroups:\n          $ref: '#/components/schemas/DBSecurityGroups'\n    DBSnapshotMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        DBSnapshots:\n          $ref: '#/components/schemas/DBSnapshotList'\n    DBSubnetGroupMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroups:\n          $ref: '#/components/schemas/DBSubnetGroups'\n    DescribeEngineDefaultParametersResult:\n      type: object\n      properties:\n        EngineDefaults:\n          $ref: '#/components/schemas/EngineDefaults'\n    EventCategoriesMessage:\n      type: object\n      properties:\n        EventCategoriesMapList:\n          $ref: '#/components/schemas/EventCategoriesMapList'\n    EventSubscriptionsMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        EventSubscriptionsList:\n          $ref: '#/components/schemas/EventSubscriptionsList'\n    EventsMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        Events:\n          $ref: '#/components/schemas/EventList'\n    OptionGroupOptionsMessage:\n      type: object\n      properties:\n        OptionGroupOptions:\n          $ref: '#/components/schemas/OptionGroupOptionsList'\n        Marker:\n          $ref: '#/components/schemas/String'\n    OptionGroups:\n      type: object\n      properties:\n        OptionGroupsList:\n          $ref: '#/components/schemas/OptionGroupsList'\n        Marker:\n          $ref: '#/components/schemas/String'\n    OrderableDBInstanceOptionsMessage:\n      type: object\n      properties:\n        OrderableDBInstanceOptions:\n          $ref: '#/components/schemas/OrderableDBInstanceOptionsList'\n        Marker:\n          $ref: '#/components/schemas/String'\n    ReservedDBInstanceMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        ReservedDBInstances:\n          $ref: '#/components/schemas/ReservedDBInstanceList'\n    ReservedDBInstanceNotFoundFault: {}\n    ReservedDBInstancesOfferingMessage:\n      type: object\n      properties:\n        Marker:\n          $ref: '#/components/schemas/String'\n        ReservedDBInstancesOfferings:\n          $ref: '#/components/schemas/ReservedDBInstancesOfferingList'\n    ReservedDBInstancesOfferingNotFoundFault: {}\n    TagListMessage:\n      type: object\n      properties:\n        TagList:\n          $ref: '#/components/schemas/TagList'\n    ModifyDBInstanceResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    DBUpgradeDependencyFailureFault: {}\n    DBParameterGroupNameMessage:\n      type: object\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n    Parameter:\n      type: object\n      properties:\n        ParameterName:\n          $ref: '#/components/schemas/String'\n        ParameterValue:\n          $ref: '#/components/schemas/String'\n        Description:\n          $ref: '#/components/schemas/String'\n        Source:\n          $ref: '#/components/schemas/String'\n        ApplyType:\n          $ref: '#/components/schemas/String'\n        DataType:\n          $ref: '#/components/schemas/String'\n        AllowedValues:\n          $ref: '#/components/schemas/String'\n        IsModifiable:\n          $ref: '#/components/schemas/Boolean'\n        MinimumEngineVersion:\n          $ref: '#/components/schemas/String'\n        ApplyMethod:\n          $ref: '#/components/schemas/ApplyMethod'\n    ModifyDBSubnetGroupResult:\n      type: object\n      properties:\n        DBSubnetGroup:\n          $ref: '#/components/schemas/DBSubnetGroup'\n    SubnetAlreadyInUse: {}\n    ModifyEventSubscriptionResult:\n      type: object\n      properties:\n        EventSubscription:\n          $ref: '#/components/schemas/EventSubscription'\n    ModifyOptionGroupResult:\n      type: object\n      properties:\n        OptionGroup:\n          $ref: '#/components/schemas/OptionGroup'\n    OptionConfiguration:\n      type: object\n      required:\n        - OptionName\n      properties:\n        OptionName:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/IntegerOptional'\n        DBSecurityGroupMemberships:\n          $ref: '#/components/schemas/DBSecurityGroupNameList'\n        VpcSecurityGroupMemberships:\n          $ref: '#/components/schemas/VpcSecurityGroupIdList'\n    PromoteReadReplicaResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    PurchaseReservedDBInstancesOfferingResult:\n      type: object\n      properties:\n        ReservedDBInstance:\n          $ref: '#/components/schemas/ReservedDBInstance'\n    ReservedDBInstanceAlreadyExistsFault: {}\n    ReservedDBInstanceQuotaExceededFault: {}\n    RebootDBInstanceResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    RemoveSourceIdentifierFromSubscriptionResult:\n      type: object\n      properties:\n        EventSubscription:\n          $ref: '#/components/schemas/EventSubscription'\n    RestoreDBInstanceFromDBSnapshotResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    InvalidRestoreFault: {}\n    RestoreDBInstanceToPointInTimeResult:\n      type: object\n      properties:\n        DBInstance:\n          $ref: '#/components/schemas/DBInstance'\n    PointInTimeRestoreNotEnabledFault: {}\n    RevokeDBSecurityGroupIngressResult:\n      type: object\n      properties:\n        DBSecurityGroup:\n          $ref: '#/components/schemas/DBSecurityGroup'\n    AuthorizationNotFoundFault: {}\n    AddSourceIdentifierToSubscriptionMessage:\n      type: object\n      required:\n        - SubscriptionName\n        - SourceIdentifier\n      title: AddSourceIdentifierToSubscriptionMessage\n      properties:\n        SubscriptionName:\n          $ref: '#/components/schemas/String'\n        SourceIdentifier:\n          $ref: '#/components/schemas/String'\n    EventSubscription:\n      type: object\n      properties:\n        Id:\n          $ref: '#/components/schemas/String'\n        CustomerAwsId:\n          $ref: '#/components/schemas/String'\n        CustSubscriptionId:\n          $ref: '#/components/schemas/String'\n        SnsTopicArn:\n          $ref: '#/components/schemas/String'\n        Status:\n          $ref: '#/components/schemas/String'\n        SubscriptionCreationTime:\n          $ref: '#/components/schemas/String'\n        SourceType:\n          $ref: '#/components/schemas/String'\n        SourceIdsList:\n          $ref: '#/components/schemas/SourceIdsList'\n        EventCategoriesList:\n          $ref: '#/components/schemas/EventCategoriesList'\n        Enabled:\n          $ref: '#/components/schemas/Boolean'\n    TagList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/Tag'\n          - xml:\n              name: Tag\n    AddTagsToResourceMessage:\n      type: object\n      required:\n        - ResourceName\n        - Tags\n      title: AddTagsToResourceMessage\n      properties:\n        ResourceName:\n          $ref: '#/components/schemas/String'\n        Tags:\n          $ref: '#/components/schemas/TagList'\n    ApplyMethod:\n      type: string\n      enum:\n        - immediate\n        - pending-reboot\n    AuthorizeDBSecurityGroupIngressMessage:\n      type: object\n      required:\n        - DBSecurityGroupName\n      title: AuthorizeDBSecurityGroupIngressMessage\n      properties:\n        DBSecurityGroupName:\n          $ref: '#/components/schemas/String'\n        CIDRIP:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupName:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupId:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupOwnerId:\n          $ref: '#/components/schemas/String'\n    DBSecurityGroup:\n      type: object\n      properties:\n        OwnerId:\n          $ref: '#/components/schemas/String'\n        DBSecurityGroupName:\n          $ref: '#/components/schemas/String'\n        DBSecurityGroupDescription:\n          $ref: '#/components/schemas/String'\n        VpcId:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroups:\n          $ref: '#/components/schemas/EC2SecurityGroupList'\n        IPRanges:\n          $ref: '#/components/schemas/IPRangeList'\n    Boolean:\n      type: boolean\n    AvailabilityZone:\n      type: object\n      properties:\n        Name:\n          $ref: '#/components/schemas/String'\n        ProvisionedIopsCapable:\n          $ref: '#/components/schemas/Boolean'\n    AvailabilityZoneList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/AvailabilityZone'\n          - xml:\n              name: AvailabilityZone\n    BooleanOptional:\n      type: boolean\n    CharacterSet:\n      type: object\n      properties:\n        CharacterSetName:\n          $ref: '#/components/schemas/String'\n        CharacterSetDescription:\n          $ref: '#/components/schemas/String'\n    CopyDBSnapshotMessage:\n      type: object\n      required:\n        - SourceDBSnapshotIdentifier\n        - TargetDBSnapshotIdentifier\n      title: CopyDBSnapshotMessage\n      properties:\n        SourceDBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n        TargetDBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n    DBSnapshot:\n      type: object\n      properties:\n        DBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        SnapshotCreateTime:\n          $ref: '#/components/schemas/TStamp'\n        Engine:\n          $ref: '#/components/schemas/String'\n        AllocatedStorage:\n          $ref: '#/components/schemas/Integer'\n        Status:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/Integer'\n        AvailabilityZone:\n          $ref: '#/components/schemas/String'\n        VpcId:\n          $ref: '#/components/schemas/String'\n        InstanceCreateTime:\n          $ref: '#/components/schemas/TStamp'\n        MasterUsername:\n          $ref: '#/components/schemas/String'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        LicenseModel:\n          $ref: '#/components/schemas/String'\n        SnapshotType:\n          $ref: '#/components/schemas/String'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n    IntegerOptional:\n      type: integer\n    DBSecurityGroupNameList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/String'\n          - xml:\n              name: DBSecurityGroupName\n    VpcSecurityGroupIdList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/String'\n          - xml:\n              name: VpcSecurityGroupId\n    CreateDBInstanceMessage:\n      type: object\n      required:\n        - DBInstanceIdentifier\n        - AllocatedStorage\n        - DBInstanceClass\n        - Engine\n        - MasterUsername\n        - MasterUserPassword\n      title: CreateDBInstanceMessage\n      properties:\n        DBName:\n          $ref: '#/components/schemas/String'\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        AllocatedStorage:\n          $ref: '#/components/schemas/IntegerOptional'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        Engine:\n          $ref: '#/components/schemas/String'\n        MasterUsername:\n          $ref: '#/components/schemas/String'\n        MasterUserPassword:\n          $ref: '#/components/schemas/String'\n        DBSecurityGroups:\n          $ref: '#/components/schemas/DBSecurityGroupNameList'\n        VpcSecurityGroupIds:\n          $ref: '#/components/schemas/VpcSecurityGroupIdList'\n        AvailabilityZone:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n        PreferredMaintenanceWindow:\n          $ref: '#/components/schemas/String'\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        BackupRetentionPeriod:\n          $ref: '#/components/schemas/IntegerOptional'\n        PreferredBackupWindow:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/IntegerOptional'\n        MultiAZ:\n          $ref: '#/components/schemas/BooleanOptional'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        AutoMinorVersionUpgrade:\n          $ref: '#/components/schemas/BooleanOptional'\n        LicenseModel:\n          $ref: '#/components/schemas/String'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        CharacterSetName:\n          $ref: '#/components/schemas/String'\n        PubliclyAccessible:\n          $ref: '#/components/schemas/BooleanOptional'\n    CreateDBInstanceReadReplicaMessage:\n      type: object\n      required:\n        - DBInstanceIdentifier\n        - SourceDBInstanceIdentifier\n      title: CreateDBInstanceReadReplicaMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        SourceDBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        AvailabilityZone:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/IntegerOptional'\n        AutoMinorVersionUpgrade:\n          $ref: '#/components/schemas/BooleanOptional'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        PubliclyAccessible:\n          $ref: '#/components/schemas/BooleanOptional'\n    DBInstance:\n      type: object\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        Engine:\n          $ref: '#/components/schemas/String'\n        DBInstanceStatus:\n          $ref: '#/components/schemas/String'\n        MasterUsername:\n          $ref: '#/components/schemas/String'\n        DBName:\n          $ref: '#/components/schemas/String'\n        Endpoint:\n          $ref: '#/components/schemas/Endpoint'\n        AllocatedStorage:\n          $ref: '#/components/schemas/Integer'\n        InstanceCreateTime:\n          $ref: '#/components/schemas/TStamp'\n        PreferredBackupWindow:\n          $ref: '#/components/schemas/String'\n        BackupRetentionPeriod:\n          $ref: '#/components/schemas/Integer'\n        DBSecurityGroups:\n          $ref: '#/components/schemas/DBSecurityGroupMembershipList'\n        VpcSecurityGroups:\n          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'\n        DBParameterGroups:\n          $ref: '#/components/schemas/DBParameterGroupStatusList'\n        AvailabilityZone:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroup:\n          $ref: '#/components/schemas/DBSubnetGroup'\n        PreferredMaintenanceWindow:\n          $ref: '#/components/schemas/String'\n        PendingModifiedValues:\n          $ref: '#/components/schemas/PendingModifiedValues'\n        LatestRestorableTime:\n          $ref: '#/components/schemas/TStamp'\n        MultiAZ:\n          $ref: '#/components/schemas/Boolean'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        AutoMinorVersionUpgrade:\n          $ref: '#/components/schemas/Boolean'\n        ReadReplicaSourceDBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        ReadReplicaDBInstanceIdentifiers:\n          $ref: '#/components/schemas/ReadReplicaDBInstanceIdentifierList'\n        LicenseModel:\n          $ref: '#/components/schemas/String'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n        OptionGroupMembership:\n          $ref: '#/components/schemas/OptionGroupMembership'\n        CharacterSetName:\n          $ref: '#/components/schemas/String'\n        SecondaryAvailabilityZone:\n          $ref: '#/components/schemas/String'\n        PubliclyAccessible:\n          $ref: '#/components/schemas/Boolean'\n    CreateDBParameterGroupMessage:\n      type: object\n      required:\n        - DBParameterGroupName\n        - DBParameterGroupFamily\n        - Description\n      title: CreateDBParameterGroupMessage\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        DBParameterGroupFamily:\n          $ref: '#/components/schemas/String'\n        Description:\n          $ref: '#/components/schemas/String'\n    DBParameterGroup:\n      type: object\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        DBParameterGroupFamily:\n          $ref: '#/components/schemas/String'\n        Description:\n          $ref: '#/components/schemas/String'\n    CreateDBSecurityGroupMessage:\n      type: object\n      required:\n        - DBSecurityGroupName\n        - DBSecurityGroupDescription\n      title: CreateDBSecurityGroupMessage\n      properties:\n        DBSecurityGroupName:\n          $ref: '#/components/schemas/String'\n        DBSecurityGroupDescription:\n          $ref: '#/components/schemas/String'\n    CreateDBSnapshotMessage:\n      type: object\n      required:\n        - DBSnapshotIdentifier\n        - DBInstanceIdentifier\n      title: CreateDBSnapshotMessage\n      properties:\n        DBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n    SubnetIdentifierList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/String'\n          - xml:\n              name: SubnetIdentifier\n    CreateDBSubnetGroupMessage:\n      type: object\n      required:\n        - DBSubnetGroupName\n        - DBSubnetGroupDescription\n        - SubnetIds\n      title: CreateDBSubnetGroupMessage\n      properties:\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroupDescription:\n          $ref: '#/components/schemas/String'\n        SubnetIds:\n          $ref: '#/components/schemas/SubnetIdentifierList'\n    DBSubnetGroup:\n      type: object\n      properties:\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroupDescription:\n          $ref: '#/components/schemas/String'\n        VpcId:\n          $ref: '#/components/schemas/String'\n        SubnetGroupStatus:\n          $ref: '#/components/schemas/String'\n        Subnets:\n          $ref: '#/components/schemas/SubnetList'\n    EventCategoriesList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/String'\n          - xml:\n              name: EventCategory\n    SourceIdsList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/String'\n          - xml:\n              name: SourceId\n    CreateEventSubscriptionMessage:\n      type: object\n      required:\n        - SubscriptionName\n        - SnsTopicArn\n      title: CreateEventSubscriptionMessage\n      properties:\n        SubscriptionName:\n          $ref: '#/components/schemas/String'\n        SnsTopicArn:\n          $ref: '#/components/schemas/String'\n        SourceType:\n          $ref: '#/components/schemas/String'\n        EventCategories:\n          $ref: '#/components/schemas/EventCategoriesList'\n        SourceIds:\n          $ref: '#/components/schemas/SourceIdsList'\n        Enabled:\n          $ref: '#/components/schemas/BooleanOptional'\n    CreateOptionGroupMessage:\n      type: object\n      required:\n        - OptionGroupName\n        - EngineName\n        - MajorEngineVersion\n        - OptionGroupDescription\n      title: CreateOptionGroupMessage\n      properties:\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        EngineName:\n          $ref: '#/components/schemas/String'\n        MajorEngineVersion:\n          $ref: '#/components/schemas/String'\n        OptionGroupDescription:\n          $ref: '#/components/schemas/String'\n    OptionGroup:\n      type: object\n      properties:\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        OptionGroupDescription:\n          $ref: '#/components/schemas/String'\n        EngineName:\n          $ref: '#/components/schemas/String'\n        MajorEngineVersion:\n          $ref: '#/components/schemas/String'\n        Options:\n          $ref: '#/components/schemas/OptionsList'\n        AllowsVpcAndNonVpcInstanceMemberships:\n          $ref: '#/components/schemas/Boolean'\n        VpcId:\n          $ref: '#/components/schemas/String'\n    SupportedCharacterSetsList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/CharacterSet'\n          - xml:\n              name: CharacterSet\n    DBEngineVersion:\n      type: object\n      properties:\n        Engine:\n          $ref: '#/components/schemas/String'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        DBParameterGroupFamily:\n          $ref: '#/components/schemas/String'\n        DBEngineDescription:\n          $ref: '#/components/schemas/String'\n        DBEngineVersionDescription:\n          $ref: '#/components/schemas/String'\n        DefaultCharacterSet:\n          $ref: '#/components/schemas/CharacterSet'\n        SupportedCharacterSets:\n          $ref: '#/components/schemas/SupportedCharacterSetsList'\n    DBEngineVersionList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBEngineVersion'\n          - xml:\n              name: DBEngineVersion\n    Endpoint:\n      type: object\n      properties:\n        Address:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/Integer'\n    Integer:\n      type: integer\n    TStamp:\n      type: string\n      format: date-time\n    DBSecurityGroupMembershipList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBSecurityGroupMembership'\n          - xml:\n              name: DBSecurityGroup\n    VpcSecurityGroupMembershipList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/VpcSecurityGroupMembership'\n          - xml:\n              name: VpcSecurityGroupMembership\n    DBParameterGroupStatusList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBParameterGroupStatus'\n          - xml:\n              name: DBParameterGroup\n    PendingModifiedValues:\n      type: object\n      properties:\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        AllocatedStorage:\n          $ref: '#/components/schemas/IntegerOptional'\n        MasterUserPassword:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/IntegerOptional'\n        BackupRetentionPeriod:\n          $ref: '#/components/schemas/IntegerOptional'\n        MultiAZ:\n          $ref: '#/components/schemas/BooleanOptional'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n    ReadReplicaDBInstanceIdentifierList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/String'\n          - xml:\n              name: ReadReplicaDBInstanceIdentifier\n    OptionGroupMembership:\n      type: object\n      properties:\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        Status:\n          $ref: '#/components/schemas/String'\n    DBInstanceList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBInstance'\n          - xml:\n              name: DBInstance\n    ParametersList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/Parameter'\n          - xml:\n              name: Parameter\n    DBParameterGroupList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBParameterGroup'\n          - xml:\n              name: DBParameterGroup\n    DBParameterGroupStatus:\n      type: object\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        ParameterApplyStatus:\n          $ref: '#/components/schemas/String'\n    EC2SecurityGroupList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/EC2SecurityGroup'\n          - xml:\n              name: EC2SecurityGroup\n    IPRangeList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/IPRange'\n          - xml:\n              name: IPRange\n    DBSecurityGroupMembership:\n      type: object\n      properties:\n        DBSecurityGroupName:\n          $ref: '#/components/schemas/String'\n        Status:\n          $ref: '#/components/schemas/String'\n    DBSecurityGroups:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBSecurityGroup'\n          - xml:\n              name: DBSecurityGroup\n    DBSnapshotList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBSnapshot'\n          - xml:\n              name: DBSnapshot\n    SubnetList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/Subnet'\n          - xml:\n              name: Subnet\n    DBSubnetGroups:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/DBSubnetGroup'\n          - xml:\n              name: DBSubnetGroup\n    DeleteDBInstanceMessage:\n      type: object\n      required:\n        - DBInstanceIdentifier\n      title: DeleteDBInstanceMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        SkipFinalSnapshot:\n          $ref: '#/components/schemas/Boolean'\n        FinalDBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n    DeleteDBParameterGroupMessage:\n      type: object\n      required:\n        - DBParameterGroupName\n      title: DeleteDBParameterGroupMessage\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n    DeleteDBSecurityGroupMessage:\n      type: object\n      required:\n        - DBSecurityGroupName\n      title: DeleteDBSecurityGroupMessage\n      properties:\n        DBSecurityGroupName:\n          $ref: '#/components/schemas/String'\n    DeleteDBSnapshotMessage:\n      type: object\n      required:\n        - DBSnapshotIdentifier\n      title: DeleteDBSnapshotMessage\n      properties:\n        DBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n    DeleteDBSubnetGroupMessage:\n      type: object\n      required:\n        - DBSubnetGroupName\n      title: DeleteDBSubnetGroupMessage\n      properties:\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n    DeleteEventSubscriptionMessage:\n      type: object\n      required:\n        - SubscriptionName\n      title: DeleteEventSubscriptionMessage\n      properties:\n        SubscriptionName:\n          $ref: '#/components/schemas/String'\n    DeleteOptionGroupMessage:\n      type: object\n      required:\n        - OptionGroupName\n      title: DeleteOptionGroupMessage\n      properties:\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n    DescribeDBEngineVersionsMessage:\n      type: object\n      title: DescribeDBEngineVersionsMessage\n      properties:\n        Engine:\n          $ref: '#/components/schemas/String'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        DBParameterGroupFamily:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n        DefaultOnly:\n          $ref: '#/components/schemas/Boolean'\n        ListSupportedCharacterSets:\n          $ref: '#/components/schemas/BooleanOptional'\n    DescribeDBInstancesMessage:\n      type: object\n      title: DescribeDBInstancesMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeDBParameterGroupsMessage:\n      type: object\n      title: DescribeDBParameterGroupsMessage\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeDBParametersMessage:\n      type: object\n      required:\n        - DBParameterGroupName\n      title: DescribeDBParametersMessage\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        Source:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeDBSecurityGroupsMessage:\n      type: object\n      title: DescribeDBSecurityGroupsMessage\n      properties:\n        DBSecurityGroupName:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeDBSnapshotsMessage:\n      type: object\n      title: DescribeDBSnapshotsMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        DBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n        SnapshotType:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeDBSubnetGroupsMessage:\n      type: object\n      title: DescribeDBSubnetGroupsMessage\n      properties:\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeEngineDefaultParametersMessage:\n      type: object\n      required:\n        - DBParameterGroupFamily\n      title: DescribeEngineDefaultParametersMessage\n      properties:\n        DBParameterGroupFamily:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    EngineDefaults:\n      type: object\n      properties:\n        DBParameterGroupFamily:\n          $ref: '#/components/schemas/String'\n        Marker:\n          $ref: '#/components/schemas/String'\n        Parameters:\n          $ref: '#/components/schemas/ParametersList'\n    DescribeEventCategoriesMessage:\n      type: object\n      title: DescribeEventCategoriesMessage\n      properties:\n        SourceType:\n          $ref: '#/components/schemas/String'\n    DescribeEventSubscriptionsMessage:\n      type: object\n      title: DescribeEventSubscriptionsMessage\n      properties:\n        SubscriptionName:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    SourceType:\n      type: string\n      enum:\n        - db-instance\n        - db-parameter-group\n        - db-security-group\n        - db-snapshot\n    DescribeEventsMessage:\n      type: object\n      title: DescribeEventsMessage\n      properties:\n        SourceIdentifier:\n          $ref: '#/components/schemas/String'\n        SourceType:\n          $ref: '#/components/schemas/SourceType'\n        StartTime:\n          $ref: '#/components/schemas/TStamp'\n        EndTime:\n          $ref: '#/components/schemas/TStamp'\n        Duration:\n          $ref: '#/components/schemas/IntegerOptional'\n        EventCategories:\n          $ref: '#/components/schemas/EventCategoriesList'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeOptionGroupOptionsMessage:\n      type: object\n      required:\n        - EngineName\n      title: DescribeOptionGroupOptionsMessage\n      properties:\n        EngineName:\n          $ref: '#/components/schemas/String'\n        MajorEngineVersion:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeOptionGroupsMessage:\n      type: object\n      title: DescribeOptionGroupsMessage\n      properties:\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        Marker:\n          $ref: '#/components/schemas/String'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        EngineName:\n          $ref: '#/components/schemas/String'\n        MajorEngineVersion:\n          $ref: '#/components/schemas/String'\n    DescribeOrderableDBInstanceOptionsMessage:\n      type: object\n      required:\n        - Engine\n      title: DescribeOrderableDBInstanceOptionsMessage\n      properties:\n        Engine:\n          $ref: '#/components/schemas/String'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        LicenseModel:\n          $ref: '#/components/schemas/String'\n        Vpc:\n          $ref: '#/components/schemas/BooleanOptional'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeReservedDBInstancesMessage:\n      type: object\n      title: DescribeReservedDBInstancesMessage\n      properties:\n        ReservedDBInstanceId:\n          $ref: '#/components/schemas/String'\n        ReservedDBInstancesOfferingId:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        Duration:\n          $ref: '#/components/schemas/String'\n        ProductDescription:\n          $ref: '#/components/schemas/String'\n        OfferingType:\n          $ref: '#/components/schemas/String'\n        MultiAZ:\n          $ref: '#/components/schemas/BooleanOptional'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    DescribeReservedDBInstancesOfferingsMessage:\n      type: object\n      title: DescribeReservedDBInstancesOfferingsMessage\n      properties:\n        ReservedDBInstancesOfferingId:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        Duration:\n          $ref: '#/components/schemas/String'\n        ProductDescription:\n          $ref: '#/components/schemas/String'\n        OfferingType:\n          $ref: '#/components/schemas/String'\n        MultiAZ:\n          $ref: '#/components/schemas/BooleanOptional'\n        MaxRecords:\n          $ref: '#/components/schemas/IntegerOptional'\n        Marker:\n          $ref: '#/components/schemas/String'\n    Double:\n      type: number\n      format: double\n    EC2SecurityGroup:\n      type: object\n      properties:\n        Status:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupName:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupId:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupOwnerId:\n          $ref: '#/components/schemas/String'\n    Event:\n      type: object\n      properties:\n        SourceIdentifier:\n          $ref: '#/components/schemas/String'\n        SourceType:\n          $ref: '#/components/schemas/SourceType'\n        Message:\n          $ref: '#/components/schemas/String'\n        EventCategories:\n          $ref: '#/components/schemas/EventCategoriesList'\n        Date:\n          $ref: '#/components/schemas/TStamp'\n    EventCategoriesMap:\n      type: object\n      properties:\n        SourceType:\n          $ref: '#/components/schemas/String'\n        EventCategories:\n          $ref: '#/components/schemas/EventCategoriesList'\n    EventCategoriesMapList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/EventCategoriesMap'\n          - xml:\n              name: EventCategoriesMap\n    EventList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/Event'\n          - xml:\n              name: Event\n    EventSubscriptionsList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/EventSubscription'\n          - xml:\n              name: EventSubscription\n    IPRange:\n      type: object\n      properties:\n        Status:\n          $ref: '#/components/schemas/String'\n        CIDRIP:\n          $ref: '#/components/schemas/String'\n    KeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    ListTagsForResourceMessage:\n      type: object\n      required:\n        - ResourceName\n      title: ListTagsForResourceMessage\n      properties:\n        ResourceName:\n          $ref: '#/components/schemas/String'\n    ModifyDBInstanceMessage:\n      type: object\n      required:\n        - DBInstanceIdentifier\n      title: ModifyDBInstanceMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        AllocatedStorage:\n          $ref: '#/components/schemas/IntegerOptional'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        DBSecurityGroups:\n          $ref: '#/components/schemas/DBSecurityGroupNameList'\n        VpcSecurityGroupIds:\n          $ref: '#/components/schemas/VpcSecurityGroupIdList'\n        ApplyImmediately:\n          $ref: '#/components/schemas/Boolean'\n        MasterUserPassword:\n          $ref: '#/components/schemas/String'\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        BackupRetentionPeriod:\n          $ref: '#/components/schemas/IntegerOptional'\n        PreferredBackupWindow:\n          $ref: '#/components/schemas/String'\n        PreferredMaintenanceWindow:\n          $ref: '#/components/schemas/String'\n        MultiAZ:\n          $ref: '#/components/schemas/BooleanOptional'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        AllowMajorVersionUpgrade:\n          $ref: '#/components/schemas/Boolean'\n        AutoMinorVersionUpgrade:\n          $ref: '#/components/schemas/BooleanOptional'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        NewDBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n    ModifyDBParameterGroupMessage:\n      type: object\n      required:\n        - DBParameterGroupName\n        - Parameters\n      title: ModifyDBParameterGroupMessage\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        Parameters:\n          $ref: '#/components/schemas/ParametersList'\n    ModifyDBSubnetGroupMessage:\n      type: object\n      required:\n        - DBSubnetGroupName\n        - SubnetIds\n      title: ModifyDBSubnetGroupMessage\n      properties:\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroupDescription:\n          $ref: '#/components/schemas/String'\n        SubnetIds:\n          $ref: '#/components/schemas/SubnetIdentifierList'\n    ModifyEventSubscriptionMessage:\n      type: object\n      required:\n        - SubscriptionName\n      title: ModifyEventSubscriptionMessage\n      properties:\n        SubscriptionName:\n          $ref: '#/components/schemas/String'\n        SnsTopicArn:\n          $ref: '#/components/schemas/String'\n        SourceType:\n          $ref: '#/components/schemas/String'\n        EventCategories:\n          $ref: '#/components/schemas/EventCategoriesList'\n        Enabled:\n          $ref: '#/components/schemas/BooleanOptional'\n    OptionConfigurationList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/OptionConfiguration'\n          - xml:\n              name: OptionConfiguration\n    OptionNamesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    ModifyOptionGroupMessage:\n      type: object\n      required:\n        - OptionGroupName\n      title: ModifyOptionGroupMessage\n      properties:\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n        OptionsToInclude:\n          $ref: '#/components/schemas/OptionConfigurationList'\n        OptionsToRemove:\n          $ref: '#/components/schemas/OptionNamesList'\n        ApplyImmediately:\n          $ref: '#/components/schemas/Boolean'\n    Option:\n      type: object\n      properties:\n        OptionName:\n          $ref: '#/components/schemas/String'\n        OptionDescription:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/IntegerOptional'\n        DBSecurityGroupMemberships:\n          $ref: '#/components/schemas/DBSecurityGroupMembershipList'\n        VpcSecurityGroupMemberships:\n          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'\n    OptionsList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/Option'\n          - xml:\n              name: Option\n    OptionsDependedOn:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/String'\n          - xml:\n              name: OptionName\n    OptionGroupOption:\n      type: object\n      properties:\n        Name:\n          $ref: '#/components/schemas/String'\n        Description:\n          $ref: '#/components/schemas/String'\n        EngineName:\n          $ref: '#/components/schemas/String'\n        MajorEngineVersion:\n          $ref: '#/components/schemas/String'\n        MinimumRequiredMinorEngineVersion:\n          $ref: '#/components/schemas/String'\n        PortRequired:\n          $ref: '#/components/schemas/Boolean'\n        DefaultPort:\n          $ref: '#/components/schemas/IntegerOptional'\n        OptionsDependedOn:\n          $ref: '#/components/schemas/OptionsDependedOn'\n    OptionGroupOptionsList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/OptionGroupOption'\n          - xml:\n              name: OptionGroupOption\n    OptionGroupsList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/OptionGroup'\n          - xml:\n              name: OptionGroup\n    OrderableDBInstanceOption:\n      type: object\n      properties:\n        Engine:\n          $ref: '#/components/schemas/String'\n        EngineVersion:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        LicenseModel:\n          $ref: '#/components/schemas/String'\n        AvailabilityZones:\n          $ref: '#/components/schemas/AvailabilityZoneList'\n        MultiAZCapable:\n          $ref: '#/components/schemas/Boolean'\n        ReadReplicaCapable:\n          $ref: '#/components/schemas/Boolean'\n        Vpc:\n          $ref: '#/components/schemas/Boolean'\n    OrderableDBInstanceOptionsList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/OrderableDBInstanceOption'\n          - xml:\n              name: OrderableDBInstanceOption\n    PromoteReadReplicaMessage:\n      type: object\n      required:\n        - DBInstanceIdentifier\n      title: PromoteReadReplicaMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        BackupRetentionPeriod:\n          $ref: '#/components/schemas/IntegerOptional'\n        PreferredBackupWindow:\n          $ref: '#/components/schemas/String'\n    PurchaseReservedDBInstancesOfferingMessage:\n      type: object\n      required:\n        - ReservedDBInstancesOfferingId\n      title: PurchaseReservedDBInstancesOfferingMessage\n      properties:\n        ReservedDBInstancesOfferingId:\n          $ref: '#/components/schemas/String'\n        ReservedDBInstanceId:\n          $ref: '#/components/schemas/String'\n        DBInstanceCount:\n          $ref: '#/components/schemas/IntegerOptional'\n    ReservedDBInstance:\n      type: object\n      properties:\n        ReservedDBInstanceId:\n          $ref: '#/components/schemas/String'\n        ReservedDBInstancesOfferingId:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        StartTime:\n          $ref: '#/components/schemas/TStamp'\n        Duration:\n          $ref: '#/components/schemas/Integer'\n        FixedPrice:\n          $ref: '#/components/schemas/Double'\n        UsagePrice:\n          $ref: '#/components/schemas/Double'\n        CurrencyCode:\n          $ref: '#/components/schemas/String'\n        DBInstanceCount:\n          $ref: '#/components/schemas/Integer'\n        ProductDescription:\n          $ref: '#/components/schemas/String'\n        OfferingType:\n          $ref: '#/components/schemas/String'\n        MultiAZ:\n          $ref: '#/components/schemas/Boolean'\n        State:\n          $ref: '#/components/schemas/String'\n        RecurringCharges:\n          $ref: '#/components/schemas/RecurringChargeList'\n    RebootDBInstanceMessage:\n      type: object\n      required:\n        - DBInstanceIdentifier\n      title: RebootDBInstanceMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        ForceFailover:\n          $ref: '#/components/schemas/BooleanOptional'\n    RecurringCharge:\n      type: object\n      properties:\n        RecurringChargeAmount:\n          $ref: '#/components/schemas/Double'\n        RecurringChargeFrequency:\n          $ref: '#/components/schemas/String'\n    RecurringChargeList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/RecurringCharge'\n          - xml:\n              name: RecurringCharge\n    RemoveSourceIdentifierFromSubscriptionMessage:\n      type: object\n      required:\n        - SubscriptionName\n        - SourceIdentifier\n      title: RemoveSourceIdentifierFromSubscriptionMessage\n      properties:\n        SubscriptionName:\n          $ref: '#/components/schemas/String'\n        SourceIdentifier:\n          $ref: '#/components/schemas/String'\n    RemoveTagsFromResourceMessage:\n      type: object\n      required:\n        - ResourceName\n        - TagKeys\n      title: RemoveTagsFromResourceMessage\n      properties:\n        ResourceName:\n          $ref: '#/components/schemas/String'\n        TagKeys:\n          $ref: '#/components/schemas/KeyList'\n    ReservedDBInstanceList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/ReservedDBInstance'\n          - xml:\n              name: ReservedDBInstance\n    ReservedDBInstancesOffering:\n      type: object\n      properties:\n        ReservedDBInstancesOfferingId:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        Duration:\n          $ref: '#/components/schemas/Integer'\n        FixedPrice:\n          $ref: '#/components/schemas/Double'\n        UsagePrice:\n          $ref: '#/components/schemas/Double'\n        CurrencyCode:\n          $ref: '#/components/schemas/String'\n        ProductDescription:\n          $ref: '#/components/schemas/String'\n        OfferingType:\n          $ref: '#/components/schemas/String'\n        MultiAZ:\n          $ref: '#/components/schemas/Boolean'\n        RecurringCharges:\n          $ref: '#/components/schemas/RecurringChargeList'\n    ReservedDBInstancesOfferingList:\n      type: array\n      items:\n        allOf:\n          - $ref: '#/components/schemas/ReservedDBInstancesOffering'\n          - xml:\n              name: ReservedDBInstancesOffering\n    ResetDBParameterGroupMessage:\n      type: object\n      required:\n        - DBParameterGroupName\n      title: ResetDBParameterGroupMessage\n      properties:\n        DBParameterGroupName:\n          $ref: '#/components/schemas/String'\n        ResetAllParameters:\n          $ref: '#/components/schemas/Boolean'\n        Parameters:\n          $ref: '#/components/schemas/ParametersList'\n    RestoreDBInstanceFromDBSnapshotMessage:\n      type: object\n      required:\n        - DBInstanceIdentifier\n        - DBSnapshotIdentifier\n      title: RestoreDBInstanceFromDBSnapshotMessage\n      properties:\n        DBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        DBSnapshotIdentifier:\n          $ref: '#/components/schemas/String'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/IntegerOptional'\n        AvailabilityZone:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n        MultiAZ:\n          $ref: '#/components/schemas/BooleanOptional'\n        PubliclyAccessible:\n          $ref: '#/components/schemas/BooleanOptional'\n        AutoMinorVersionUpgrade:\n          $ref: '#/components/schemas/BooleanOptional'\n        LicenseModel:\n          $ref: '#/components/schemas/String'\n        DBName:\n          $ref: '#/components/schemas/String'\n        Engine:\n          $ref: '#/components/schemas/String'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n    RestoreDBInstanceToPointInTimeMessage:\n      type: object\n      required:\n        - SourceDBInstanceIdentifier\n        - TargetDBInstanceIdentifier\n      title: RestoreDBInstanceToPointInTimeMessage\n      properties:\n        SourceDBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        TargetDBInstanceIdentifier:\n          $ref: '#/components/schemas/String'\n        RestoreTime:\n          $ref: '#/components/schemas/TStamp'\n        UseLatestRestorableTime:\n          $ref: '#/components/schemas/Boolean'\n        DBInstanceClass:\n          $ref: '#/components/schemas/String'\n        Port:\n          $ref: '#/components/schemas/IntegerOptional'\n        AvailabilityZone:\n          $ref: '#/components/schemas/String'\n        DBSubnetGroupName:\n          $ref: '#/components/schemas/String'\n        MultiAZ:\n          $ref: '#/components/schemas/BooleanOptional'\n        PubliclyAccessible:\n          $ref: '#/components/schemas/BooleanOptional'\n        AutoMinorVersionUpgrade:\n          $ref: '#/components/schemas/BooleanOptional'\n        LicenseModel:\n          $ref: '#/components/schemas/String'\n        DBName:\n          $ref: '#/components/schemas/String'\n        Engine:\n          $ref: '#/components/schemas/String'\n        Iops:\n          $ref: '#/components/schemas/IntegerOptional'\n        OptionGroupName:\n          $ref: '#/components/schemas/String'\n    RevokeDBSecurityGroupIngressMessage:\n      type: object\n      required:\n        - DBSecurityGroupName\n      title: RevokeDBSecurityGroupIngressMessage\n      properties:\n        DBSecurityGroupName:\n          $ref: '#/components/schemas/String'\n        CIDRIP:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupName:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupId:\n          $ref: '#/components/schemas/String'\n        EC2SecurityGroupOwnerId:\n          $ref: '#/components/schemas/String'\n    Subnet:\n      type: object\n      properties:\n        SubnetIdentifier:\n          $ref: '#/components/schemas/String'\n        SubnetAvailabilityZone:\n          $ref: '#/components/schemas/AvailabilityZone'\n        SubnetStatus:\n          $ref: '#/components/schemas/String'\n    VpcSecurityGroupMembership:\n      type: object\n      properties:\n        VpcSecurityGroupId:\n          $ref: '#/components/schemas/String'\n        Status:\n          $ref: '#/components/schemas/String'\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /#Action=CreateDBInstance: get: GET_CreateDBInstance: responses: 482: unknown status code: 482"
}