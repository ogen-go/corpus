{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/input-output-hk/cardano-wallet"
		},
		"file": {
			"name": "swagger.yaml",
			"path": "specifications/api/swagger.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Cardano Wallet Backend API\n  version: v2022-01-18\n  license:\n    name: Apache-2.0\n    url: https://raw.githubusercontent.com/input-output-hk/cardano-wallet/master/LICENSE\n  description: |\n    \u003cp align=\"right\"\u003e\u003cimg style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"\u003e\u003c/img\u003e\u003c/p\u003e\nexternalDocs:\n  description: Need more? Click here to access our API guide and walkthrough.\n  url: https://input-output-hk.github.io/cardano-wallet/\n\nservers:\n  - url: https://localhost:8090/v2/\n\n#############################################################################\n#                                                                           #\n#                                 FIELDS                                    #\n#                                                                           #\n#############################################################################\n\nx-date: \u0026date\n  type: string\n  format: iso-8601-date-and-time\n  example: 2019-02-27T14:46:45Z\n\nx-slotNumber: \u0026slotNumber\n  type: integer\n  description: The zero-based slot index within an epoch.\n  minimum: 0\n  example: 1337\n\nx-stakePoolsNumber: \u0026stakePoolsNumber\n  type: integer\n  minimum: 0\n  example: 100\n\nx-numberOfSeconds: \u0026numberOfSeconds\n  type: object\n  required:\n    - quantity\n    - unit\n  properties:\n    quantity:\n      type: number\n      minimum: 0.0\n      example: 10.0\n    unit:\n      type: string\n      enum: [\"second\"]\n\nx-epochNumber: \u0026epochNumber\n  type: integer\n  description: An epoch is a time period which is divided into slots.\n  minimum: 0\n  example: 14\n\nx-epochInfo: \u0026epochInfo\n  type: object\n  required:\n    - epoch_number\n    - epoch_start_time\n  properties:\n    epoch_number: *epochNumber\n    epoch_start_time: *date\n\nx-blockId: \u0026blockId\n  description: The hash of genesis block\n  type: string\n  format: hex\n  maxLength: 64\n  minLength: 64\n  example: 3c07030e36bfffe67e2e2ec09e5293d384637cd2f004356ef320f3fe6c52041a\n\nx-absoluteSlot: \u0026absoluteSlot\n  type: integer\n  description: The 0-based slot index starting from genesis of the blockchain.\n  minimum: 0\n  example: 8086\n\nx-numberOfSlots: \u0026numberOfSlots\n  type: object\n  required:\n    - quantity\n    - unit\n  properties:\n    quantity:\n      type: integer\n      minimum: 0\n      example: 42000\n    unit:\n      type: string\n      enum: [\"slot\"]\n\nx-numberOfBlocks: \u0026numberOfBlocks\n  type: object\n  required:\n    - quantity\n    - unit\n  properties:\n    quantity:\n      type: integer\n      minimum: 0\n      example: 1337\n    unit:\n      type: string\n      enum:\n        - block\n      example: \"block\"\n\nx-blockReference: \u0026blockReference\n  description: A reference to a particular time slot, and the block height at that point.\n  type: object\n  required:\n    - absolute_slot_number\n    - slot_number\n    - epoch_number\n    - time\n    - height\n  properties:\n    absolute_slot_number: *absoluteSlot\n    slot_number: *slotNumber\n    epoch_number: *epochNumber\n    time: *date\n    height: *numberOfBlocks\n\nx-slotId: \u0026slotId\n  description: A slot identifier, given by epoch number and local slot index.\n  type: object\n  required:\n    - epoch_number\n    - slot_number\n  properties:\n    epoch_number: *epochNumber\n    slot_number: *slotNumber\n\nx-slotReference: \u0026slotReference\n  description: A reference to a particular time slot.\n  type: object\n  required:\n    - absolute_slot_number\n    - slot_number\n    - epoch_number\n    - time\n  properties:\n    absolute_slot_number: *absoluteSlot\n    epoch_number: *epochNumber\n    slot_number: *slotNumber\n    time: *date\n\nx-genesisBlock: \u0026genesisBlock\n  description: A reference to a particular block.\n  type: object\n  required:\n    - slot_number\n    - epoch_number\n  properties:\n    slot_number:\n      \u003c\u003c: *slotNumber\n      maximum: 0\n      example: 0\n    epoch_number:\n      \u003c\u003c: *epochNumber\n      maximum: 0\n      example: 0\n\nx-percentage: \u0026percentage\n  type: object\n  required:\n    - quantity\n    - unit\n  properties:\n    quantity:\n      type: number\n      minimum: 0\n      maximum: 100\n      example: 42\n    unit:\n      type: string\n      enum:\n        - percent\n\nx-microseconds: \u0026microseconds\n  type: object\n  required:\n    - quantity\n    - unit\n  properties:\n    quantity:\n      type: number\n      example: 42\n    unit:\n      type: string\n      enum:\n        - microsecond\n\nx-syncProgress: \u0026syncProgress\n  type: object\n  required:\n    - status\n  properties:\n    status:\n      type: string\n      enum:\n        - ready\n        - syncing\n        - not_responding\n    progress:\n      \u003c\u003c: *percentage\n      description: |\n        \u003cspan style=\"position: relative; left: 35px; top: -21px; vertical-align: middle; background-color: rgba(142, 142, 220, 0.05); color: rgba(50, 50, 159, 0.9); margin: 0 5px; padding: 0 5px; border: 1px solid rgba(50, 50, 159, 0.1); line-height: 20px; font-size: 13px; border-radius: 2px;\"\u003e\n        \u003cstrong\u003eif:\u003c/strong\u003e status == syncing\n        \u003c/span\u003e\u003cbr/\u003e\n  example:\n    status: ready\n\nx-syncClockProgress: \u0026syncClockProgress\n  type: object\n  required:\n    - status\n  properties:\n    status:\n      type: string\n      enum:\n        - unavailable\n        - pending\n        - available\n    offset:\n      \u003c\u003c: *microseconds\n      description: |\n        \u003cspan style=\"position: relative; left: 35px; top: -21px; vertical-align: middle; background-color: rgba(142, 142, 220, 0.05); color: rgba(50, 50, 159, 0.9); margin: 0 5px; padding: 0 5px; border: 1px solid rgba(50, 50, 159, 0.1); line-height: 20px; font-size: 13px; border-radius: 2px;\"\u003e\n        \u003cstrong\u003eif:\u003c/strong\u003e status == available\n        \u003c/span\u003e\u003cbr/\u003e\n  example:\n    status: pending\n\nx-amount: \u0026amount\n  description: Coins, in Lovelace. Only relates to 'Ada'. Refer to `assets` for multi-assets wallets instead.\n  type: object\n  required:\n    - quantity\n    - unit\n  properties:\n    quantity:\n      type: integer\n      minimum: 0\n      example: 42000000\n    unit:\n      type: string\n      enum:\n        - lovelace\n\nx-stakeAddress: \u0026stakeAddress\n  type: string\n  format: bech32\n  example: stake1sjck9mdmfyhzvjhydcjllgj9vjvl522w0573ncustrrr2rg7h9azg4cyqd36yyd48t5ut72hgld0fg2x\n\nx-addressId: \u0026addressId\n  type: string\n  format: base58|bech32\n  example: addr1sjck9mdmfyhzvjhydcjllgj9vjvl522w0573ncustrrr2rg7h9azg4cyqd36yyd48t5ut72hgld0fg2xfvz82xgwh7wal6g2xt8n996s3xvu5g\n  description: |\n    A sequence of characters that encodes (in Base58 or Bech32) a sequence of bytes\n    which represents an address on the Cardano blockchain.\n    Sequences in Base58 encoding are expected to be legacy Byron addresses,\n    whereas sequences in Bech32 encoding correspond to current Shelley addresses.\n\n    For more details, see\n    [CIP-0019 — Cardano addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019)\n    .\n\nx-addressState: \u0026addressState\n  type: string\n  enum:\n    - used\n    - unused\n\nx-txType: \u0026txType\n  type: string\n  pattern: \"^Tx AlonzoEra$\"\n\nx-txDescription: \u0026txDescription\n  description: A description of transaction\n  type: string\n  minLength: 0\n  maxLength: 256\n  example: \"Asset minting transaction\"\n\nx-txInNode: \u0026txInNode\n  type: string\n  pattern: \"^[0-9abcdef]+#[0-9]+$\"\n  minLength: 66\n  maxLength: 68\n  example: 2f8cd2ef706e5500307636b8477198ee2f204c4181b53c507f46d195140493cb#1\n\nx-dataHash: \u0026dataHash\n  type: string\n  format: hex\n  minLength: 64\n  maxLength: 64\n  example: ca54c8836c475a77c6914b4fd598080acadb0f0067778773484d2c12ae7dc756\n\nx-stakePoolMetadataUrl: \u0026stakePoolMetadataUrl\n  description: |\n    A URL to the stake pool's website.\n  type: string\n  format: uri\n  pattern: \"^https://.+\"\n  maxLength: 250\n\nx-stakePoolMetadataHash: \u0026stakePoolMetadataHash\n  type: string\n  format: hex\n  minLength: 64\n  maxLength: 64\n  example: ca54c8836c475a77c6914b4fd598080acadb0f0067778773484d2c12ae7dc756\n\nx-stakePoolOwner: \u0026stakePoolOwner\n  type: string\n  format: bech32\n  pattern: \"^(ed25519_pk)1[0-9a-z]*$\"\n\nx-adaQuantity: \u0026adaQuantity\n  type: integer\n  minimum: 0\n  maximum: 45000000000000000\n\nx-assetQuantity: \u0026assetQuantity\n  type: integer\n  description: |\n    Number of assets for the given `policy_id` and `asset_name`.\n  minimum: 0\n\nx-assetValueNode: \u0026assetValueNode\n  description:\n     Map of asset values along with their quantities.\n     assetName in field name is expected (max lenght 64-character hex-encoded text)\n  type: object\n  additionalProperties: *assetQuantity\n  # Note: propertyNames pattern not supported in current OpenAPI version.\n  # propertyNames:\n  #   pattern: '^(assetName)$'\n  example:\n    - {\"asset1\": 12, \"asset2\": 33}\n\nx-valueNode: \u0026valueNode\n  nullable: false\n  oneOf:\n    - \u003c\u003c: *adaQuantity\n      title: ada coin\n    - \u003c\u003c: *assetValueNode\n      title: asset value\n\nx-valueNodes: \u0026valueNodes\n  description:\n     Map of values along with their quantities. Can be lovelace or asset.\n     In the former case 'lovelace' name is expected.\n     In the latter case assetPolicyId name is expected (56-character hex-encoded text)\n  type: object\n  additionalProperties: *valueNode\n  # Note: propertyNames pattern not supported in current OpenAPI version.\n  # propertyNames:\n  #   pattern: '^(lovelace)|(assetPolicyId)$'\n  example:\n    - {\"lovelace\": 1423}\n    - {\"lovelace\": 1423, \"7191ae0e1286891fe5c027a5dc041b7401689938e18e14ec83cf74fb\": {\"asset1\": 12, \"asset2\": 33}}\n\nx-stakePoolId: \u0026stakePoolId\n  type: string\n  format: hex|bech32\n  example: pool1wqaz0q0zhtxlgn0ewssevn2mrtm30fgh2g7hr7z9rj5856457mm\n  description: A unique identifier for the pool.\n\nx-walletAccountXPubkey: \u0026walletAccountXPubkey\n  description: An extended account public key (public key + chain code)\n  type: string\n  format: hex\n  minLength: 128\n  maxLength: 128\n  example: 1423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db11423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db1\n\nx-cosigner: \u0026cosigner\n  type: string\n  pattern: \"^(cosigner#)[0-9]+$\"\n\nx-cosigners: \u0026cosigners\n  description: Map of cosigners and their account public keys. Use key as in \u0026cosigner, eg. \"cosigner#\"\n  type: object\n  additionalProperties: *walletAccountXPubkey\n  # Note: propertyNames pattern not supported in current OpenAPI version.\n  # propertyNames:\n  #   pattern: '^(cosigner#)[0-9]+$'\n  example:\n    - {\"cosigner#0\": \"1423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db11423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db1\"}\n\nx-self: \u0026self\n  type: string\n  enum:\n    - self\n\nx-accountPubkeyOrSelf: \u0026accountPubkeyOrSelf\n  nullable: false\n  oneOf:\n    - \u003c\u003c: *walletAccountXPubkey\n      title: public key\n    - \u003c\u003c: *self\n      title: self\n\nx-cosignersEntry: \u0026cosignersEntry\n  description: Map of cosigners and their account public keys. Use key as in \u0026cosigner, eg. \"cosigner#\"or 'self'\n  type: object\n  additionalProperties: *accountPubkeyOrSelf\n  # Note: propertyNames pattern not supported in current OpenAPI version.\n  # propertyNames:\n  #   pattern: '^(cosigner#)[0-9]+$'\n  example:\n    - {\"cosigner#0\": \"1423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db11423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db1\"}\n    - {\"cosigner#0\": \"self\"}\n\nx-walletId: \u0026walletId\n  description: A unique identifier for the wallet\n  type: string\n  format: hex\n  maxLength: 40\n  minLength: 40\n  example: 2512a00e9653fe49a44a5886202e24d77eeb998f\n\nx-walletDiscovery: \u0026walletDiscovery\n  description: Mechanism used for discovering addresses.\n  type: string\n  enum:\n    - random\n    - sequential\n  example: sequential\n\nx-walletName: \u0026walletName\n  type: string\n  maxLength: 255\n  minLength: 1\n  example: Alan's Wallet\n\nx-poolMetadataSource: \u0026poolMetadataSource\n  description: |\n    Pool metadata source. This sets the metadata fetching strategy.\n\n    Possible values are\n      * none -\u003e no fetching\n      * direct -\u003e direct fetching\n      * uri -\u003e use SMASH server\n  type: string\n  pattern: '^(none|direct|https?:\\/\\/[a-zA-Z0-9-_~.]+(:[0-9]+)?/?)$'\n  example: https://smash.cardano-mainnet.iohk.io/\n\nx-credentialPubKey: \u0026credentialPubKey\n  description: A public key (public key without chain code) for credential - 32 bytes\n  type: string\n  format: bech32\n  pattern: \"^((addr_vk)|(stake_vk))1[0-9a-z]*$\"\n  example:\n    - stake_vk16apaenn9ut6s40lcw3l8v68xawlrlq20z2966uzcx8jmv2q9uy7qau558d\n    - addr_vk16apaenn9ut6s40lcw3l8v68xawlrlq20z2966uzcx8jmv2q9uy7q3yvuv2\n\nx-validationLevel: \u0026validationLevel\n  description: |\n    Script validation level. Required validation sifts off scripts that would not\n    be accepted by the ledger. Recommended level filters out scripts that do not pass\n    required validation and additionally when:\n      * 'all' is non-empty\n      * there are redundant timelocks in a given level\n      * there are no duplicated verification keys in a given level\n      * 'at_least' coeffcient is positive\n      * 'all', 'any' are non-empty and `'at_least' has no less elements in the list\n         than the coeffcient after timelocks are filtered out.\n\n  type: string\n  enum:\n    - required\n    - recommended\n\nx-anyAddress: \u0026anyAddress\n  description: A Shelley address representing either enterprise, reward account or delegating address\n  type: string\n  format: bech32\n  pattern: \"^((addr)|(stake)|(addr_test)|(stake_test))1[0-9a-z]*$\"\n  example:\n    - stake17xt2z3pa7etaxp7jurdg0m8jhsmtp4r2z56pd3a5q3jhxycdxzmx9\n    - addr1wy5np0m5x03tax3kcdh6e2cet98qcfs80wtv4cyvl5taclc6dnd8e\n    - addr1xy5np0m5x03tax3kcdh6e2cet98qcfs80wtv4cyvl5tacluk59zrmajh6vra9cx6slk090pkkr2x59f5zmrmgpr9wvfs37hjk4\n\nx-ScriptValue: \u0026ScriptValue\n  oneOf:\n    - title: Key Hash\n      description: Leaf value for a script designating a required verification key hash.\n      type: string\n      format: bech32\n      pattern: \"^((addr_shared_vkh)|(stake_shared_vkh))1[0-9a-z]*$\"\n\n    - title: All\n      type: object\n      required:\n        - all\n      properties:\n        all:\n          description: Script primitive for which all signing keys corresponding to all list elements' verification keys are expected to make the script valid.\n          type: array\n          minItems: 1\n          items:\n            $ref: \"#/components/schemas/ScriptValue\"\n\n    - title: Any\n      type: object\n      required:\n        - any\n      properties:\n        any:\n          description: Script primitive for which a signing key corresponding to any of the list elements' verification keys is expected to make the script valid. It is equivalent to `some` with `\"at_least\"=1`.\n          type: array\n          minItems: 1\n          items:\n            $ref: \"#/components/schemas/ScriptValue\"\n\n    - title: Some\n      type: object\n      required:\n        - some\n      properties:\n        some:\n          description: Script primitive for which at least a given number of signing keys corresponding to the list elements' verification keys are expected to make the script valid.\n          type: object\n          required:\n            - at_least\n            - from\n          properties:\n            at_least:\n              type: integer\n              minimum: 1\n              maximum: 255\n            from:\n              type: array\n              minItems: 1\n              items:\n                $ref: \"#/components/schemas/ScriptValue\"\n\n    - title: Active from slot\n      type: object\n      required:\n        - active_from\n      properties:\n        active_from:\n          description: Transaction is only valid starting at the specified slot number (`≥ active_from`).\n          type: integer\n          minimum: 0\n\n    - title: Active until slot\n      type: object\n      required:\n        - active_until\n      properties:\n        active_until:\n          description: Transaction is only valid before the specified slot number (`\u003c active_until`).\n          type: integer\n          minimum: 0\n\nx-script: \u0026script\n  \u003c\u003c: *ScriptValue\n\nx-ScriptTemplateValue: \u0026ScriptTemplateValue\n  oneOf:\n    - title: Cosigner\n      description: Leaf value for a script designating a cosigner co-sharing the script.\n      type: string\n      pattern: \"^(cosigner#)[0-9]*$\"\n\n    - title: All\n      type: object\n      required:\n        - all\n      properties:\n        all:\n          description: Script primitive for which all signing keys corresponding to all list cosigners' verification keys are expected to make the script valid.\n          type: array\n          minItems: 1\n          items:\n            $ref: \"#/components/schemas/ScriptTemplateValue\"\n\n    - title: Any\n      type: object\n      required:\n        - any\n      properties:\n        any:\n          description: Script primitive for which a signing key corresponding to any of the list cosigners' verification keys is expected to make the script valid. It is equivalent to `some` with `\"at_least\"=1`.\n          type: array\n          minItems: 1\n          items:\n            $ref: \"#/components/schemas/ScriptTemplateValue\"\n\n    - title: Some\n      type: object\n      required:\n        - some\n      properties:\n        some:\n          description: Script primitive for which at least a given number of signing keys corresponding to the list cosigners' verification keys are expected to make the script valid.\n          type: object\n          required:\n            - at_least\n            - from\n          properties:\n            at_least:\n              type: integer\n              minimum: 1\n              maximum: 255\n            from:\n              type: array\n              minItems: 1\n              items:\n                $ref: \"#/components/schemas/ScriptTemplateValue\"\n\n    - title: Active from slot\n      type: object\n      required:\n        - active_from\n      properties:\n        active_from:\n          description: Transaction is only valid starting at the specified slot number (`≥ active_from`).\n          type: integer\n          minimum: 0\n\n    - title: Active until slot\n      type: object\n      required:\n        - active_until\n      properties:\n        active_until:\n          description: Transaction is only valid before the specified slot number (`\u003c active_until`).\n          type: integer\n          minimum: 0\n\nx-scriptTemplate: \u0026scriptTemplate\n  type: object\n  required:\n    - cosigners\n    - template\n  properties:\n    cosigners: *cosigners\n    template: *ScriptTemplateValue\n\nx-scriptTemplateEntry: \u0026scriptTemplateEntry\n  type: object\n  required:\n    - cosigners\n    - template\n  properties:\n    cosigners: *cosignersEntry\n    template: *ScriptTemplateValue\n\nx-CredentialValue: \u0026CredentialValue\n  nullable: false\n  oneOf:\n    - \u003c\u003c: *credentialPubKey\n      title: public key\n    - \u003c\u003c: *script\n      title: script\n  example:\n    any:\n    - addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq\n\n    - stake_shared_vkh1nqc00hvlc6cq0sfhretk0rmzw8dywmusp8retuqnnxzajtzhjg5\n\n    - all:\n      - addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq\n      - addr_shared_vkh1y3zl4nqgm96ankt96dsdhc86vd5geny0wr7hu8cpzdfcqskq2cp\n\n    - any:\n      - addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq\n      - all:\n        - addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq\n        - addr_shared_vkh1y3zl4nqgm96ankt96dsdhc86vd5geny0wr7hu8cpzdfcqskq2cp\n\n    - some:\n        at_least: 2\n        from:\n        - addr_shared_vkh1zxt0uvrza94h3hv4jpv0ttddgnwkvdgeyq8jf9w30mcs6y8w3nq\n        - addr_shared_vkh1y3zl4nqgm96ankt96dsdhc86vd5geny0wr7hu8cpzdfcqskq2cp\n\nx-settings: \u0026settings\n  description: Settings\n  type: object\n  required:\n    - pool_metadata_source\n  properties:\n    pool_metadata_source:\n      \u003c\u003c: *poolMetadataSource\n      description: |\n        Select stake pool metadata fetching strategy:\n          - `none` - metadata is not fetched at all,\n          - `direct` - metadata is fetched directly URLs registered on chain,\n          - `uri` - metadata is fetched from an external Stake-Pool Metadata Aggregation Server (SMASH)\n\n        After update existing metadata will be dropped forcing it to re-sync automatically with the new setting.\n\nx-assetName: \u0026assetName\n  type: string\n  description: |\n    The asset on-chain type which acts as a sub-identifier within a\n    policy. Although we call it \"asset name\", the value needn't be\n    text, and it could even be empty.\n\n    For policies with a single fungible asset item, asset name is\n    typically an empty string.\n\n    This value can be up to 32 bytes of arbitrary data (which is 64\n    hexadecimal digits).\n  format: hex\n  maxLength: 64\n  example: \"\"\n\nx-assetPolicyId: \u0026assetPolicyId\n  type: string\n  description: |\n    A unique identifier of the asset's monetary policy. The policy\n    controls how assets of this kind are created and destroyed.\n\n    The contents are the blake2b-224 hash of the monetary policy\n    script, encoded in hexadecimal.\n  format: hex\n  minLength: 56\n  maxLength: 56\n  example: 65ab82542b0ca20391caaf66a4d4d7897d281f9c136cd3513136945b\n\nx-assetFingerprint: \u0026assetFingerprint\n  type: string\n  description: |\n    A user-facing short fingerprint which combines the `policy_id` and `asset_name`\n    to allow for an easier human comparison of assets. Note that it is generally\n    **not okay** to use this fingerprint as a unique identifier for it is not collision\n    resistant. Yet within the context of a single wallet, it makes for a (rather)\n    short user-facing comparison mean.\n  pattern: \"^(asset)1[0-9a-z]*$\"\n  maxLength: 44\n  minLength: 44\n  example: asset1rjklcrnsdzqp65wjgrg55sy9723kw09mlgvlc3\n\nx-assetMetadataName: \u0026assetMetadataName\n  type: string\n  maxLength: 50\n  minLength: 1\n  description: |\n    A human-readable name for the asset, intended for display in user\n    interfaces.\n  example: SwaggerCoin\n\nx-assetMetadataTicker: \u0026assetMetadataTicker\n  type: string\n  maxLength: 5\n  minLength: 2\n  description: |\n    An optional human-readable very short name or acronym for the\n    asset, intended for display in user interfaces. If `ticker` is not\n    present, then `name` will be used, but it might be truncated to\n    fit within the available space.\n  example: SWAG\n\nx-assetMetadataDescription: \u0026assetMetadataDescription\n  description: |\n    A human-readable description for the asset. Good for display in\n    user interfaces.\n  type: string\n  maxLength: 500\n\nx-assetMetadataDecimals: \u0026assetMetadataDecimals\n  type: integer\n  description: |\n    Defines a scaling factor for the asset of 10\u003csup\u003e-n\u003c/sup\u003e. The\n    decimals value _n_ is therefore the number of digits after the\n    decimal point for quantities of this token.\n\n    It is up to API clients to use this metadata field to decimalize\n    asset quantities before displaying to users. The wallet backend\n    will always return unscaled token quantities as whole numbers.\n  minimum: 0\n  maximum: 255\n  example: 2\n\nx-assetMetadataUrl: \u0026assetMetadataUrl\n  description: |\n    A URL to the policy's owner(s) or the entity website in charge of the asset.\n  type: string\n  format: uri\n  pattern: \"^https://.+\"\n  maxLength: 250\n\nx-assetMetadataLogo: \u0026assetMetadataLogo\n  description: |\n    A base64-encoded `image/png` for displaying the asset. The end image can be expected\n    to be smaller than 64KB.\n  type: string\n  format: base64\n  maxLength: 87400\n\nx-assetMetadata: \u0026assetMetadata\n  title: Native Assets Metadata\n  description: |\n    In the Mary era of Cardano, UTxO may contain native assets. These\n    assets are represented on-chain by opaque identifiers which are\n    meaningless to end-users. Therefore, user-facing metadata\n    regarding each token must be stored off-chain, in a metadata\n    registry.\n\n    Token creators may publish metadata into the registry and client\n    applications can consume these metadata for display to end\n    users. This will work in a similar way to how it is done for stake\n    pool metadata.\n  type: object\n  additionalProperties: false\n  required:\n    - name\n    - description\n  properties:\n    name: *assetMetadataName\n    description: *assetMetadataDescription\n    ticker: *assetMetadataTicker\n    decimals: *assetMetadataDecimals\n    url: *assetMetadataUrl\n    logo: *assetMetadataLogo\n\nx-walletMnemonicSentence: \u0026walletMnemonicSentence\n  description: A list of mnemonic words\n  type: array\n  minItems: 15\n  maxItems: 24\n  items:\n    type: string\n    format: bip-0039-mnemonic-word{english}\n  example: [\"squirrel\", \"material\", \"silly\", \"twice\", \"direct\", \"slush\", \"pistol\", \"razor\", \"become\", \"junk\", \"kingdom\", \"flee\", \"squirrel\", \"silly\", \"twice\"]\n\nx-walletSecondFactor: \u0026walletSecondFactor\n  description: An optional passphrase used to encrypt the mnemonic sentence.\n  type: array\n  minItems: 9\n  maxItems: 12\n  items:\n    type: string\n    format: bip-0039-mnemonic-word{english}\n  example: [\"squirrel\", \"material\", \"silly\", \"twice\", \"direct\", \"slush\", \"pistol\", \"razor\", \"become\"]\n\nx-walletPassphrase: \u0026walletPassphrase\n  description: A master passphrase to lock and protect the wallet for sensitive operation (e.g. sending funds)\n  type: string\n  minLength: 10\n  maxLength: 255\n  example: Secure Passphrase\n\nx-keyExtended: \u0026keyExtended\n  description: Determines whether extended (with chain code) or normal (without chain code) key is requested\n  type: string\n  enum:\n    - extended\n    - non_extended\n\nx-lenientPassphrase: \u0026lenientPassphrase\n  description: A master passphrase to lock and protect the wallet for sensitive operation (e.g. sending funds)\n  type: string\n  minLength: 0\n  maxLength: 255\n  example: Secure Passphrase\n\nx-walletPassphraseHash: \u0026walletPassphraseHash\n  description: |\n    A hash of master passphrase. The hash should be an output of a Scrypt function with the following parameters:\n    - logN = 14\n    - r = 8\n    - p = 1\n  type: string\n  format: hex\n  example: 31347c387c317c574342652b796362417576356c2b4258676a344a314c6343675375414c2f5653393661364e576a2b7550766655513d3d7c2f376738486c59723174734e394f6e4e753253302b6a65515a6b5437316b45414941366a515867386539493d\n\nx-walletEncryptedRootPrivateKey: \u0026walletEncryptedRootPrivateKey\n  description: |\n    A root private key, encrypted using a given passphrase. The underlying key should contain:\n    - A private key\n    - A chain code\n    - A public key\n  type: string\n  format: hex\n  minLength: 256\n  maxLength: 256\n\nx-walletAddressPoolGap: \u0026walletAddressPoolGap\n  description: |\n    Number of consecutive unused addresses allowed.\n\n    **IMPORTANT DISCLAIMER:** Using values other than `20` automatically makes your wallet invalid with regards to BIP-44 address discovery. It means that you **will not** be able to fully restore\n    your wallet in a different software which is strictly following BIP-44.\n\n    Beside, using large gaps is **not recommended** as it may induce important performance degradations. Use at your own risks.\n\n    **IMPORTANT DISCLAIMER 2:** There is no way to `import` addresses generated outside (e.g. using cardano-addresses) into the wallet.\n    Wallet only discovers transactions on its used and unused addresses that are within its currently seen `address_pool_gap`.\n    Transactions on addresses that \"belong\" to the wallet but happen to be beyond its `address_pool_gap` will not be visible to the wallet.\n    This is a technical limitation of the industry standard [BIP-44](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki). See also [CIP-1852](https://github.com/cardano-foundation/CIPs/blob/master/CIP-1852/CIP-1852.md).\n\n  type: integer\n  minimum: 10\n  maximum: 100000\n  example: 20\n  default: 20\n\nx-walletState: \u0026walletState\n  \u003c\u003c: *syncProgress\n  description: Whether a wallet is ready to use or still syncing\n\nx-walletBalance: \u0026walletBalance\n  description: Wallet current Ada balance(s).\n  type: object\n  required:\n    - available\n    - reward\n    - total\n  properties:\n    available:\n      \u003c\u003c: *amount\n      description: Available Ada UTxO balance (funds that can be spent without condition).\n    reward:\n      \u003c\u003c: *amount\n      description: The Ada balance of the reward account for this wallet.\n    total:\n      \u003c\u003c: *amount\n      description: Total Ada balance (available balance plus pending change and reward balance).\n\nx-walletAsset: \u0026walletAsset\n  description: |\n    An asset on the Cardano blockchain. An asset is uniquely identified by\n    its `policy_id` and `asset_name` (together, these form the _asset id_).\n\n    Two assets with the same `asset_name` and `policy_id` are\n    interchangeable. Yet, different assets with a same `policy_id` but\n    different `asset_name` are treated as separate assets, as are two\n    assets with the same `asset_name` but different `policy_id`.\n  type: object\n  required:\n    - policy_id\n    - asset_name\n    - quantity\n  properties:\n    policy_id: *assetPolicyId\n    asset_name: *assetName\n    quantity: *assetQuantity\n\nx-walletAssets: \u0026walletAssets\n  description: A flat list of assets (possibly empty).\n  type: array\n  items: *walletAsset\n\nx-assetMint: \u0026assetMint\n  type: object\n  required:\n    - policy_id\n    - asset_name\n    - quantity\n  properties:\n    policy_id: *assetPolicyId\n    asset_name: *assetName\n    fingerprint: *assetFingerprint\n    quantity:\n      type: integer\n      description: |\n        Positive values mean creation and negative values mean\n        destruction.\n\nx-assetMintedBurned: \u0026assetMintedBurned\n  type: object\n  required:\n    - policy_id\n    - asset_name\n    - quantity\n  properties:\n    policy_id: *assetPolicyId\n    asset_name: *assetName\n    quantity:\n      type: integer\n      minimum: 0\n\nx-walletAssetsBalance: \u0026walletAssetsBalance\n  description: |\n    Current non-Ada asset holdings of the wallet.\n\n    The amount of assets available to spend may be less than the total\n    unspent assets due to transaction change amounts which are yet to\n    be fully confirmed (pending).\n  type: object\n  required:\n    - available\n    - total\n  properties:\n    available:\n      \u003c\u003c: *walletAssets\n      description: |\n        Available UTxO asset balances (funds that can be spent without\n        condition).\n    total:\n      \u003c\u003c: *walletAssets\n      description: |\n        Total asset balances (available balances plus pending change balances).\n\nx-byronWalletBalance: \u0026byronWalletBalance\n  description: Byron wallet's current balance(s)\n  type: object\n  required:\n    - available\n    - total\n  properties:\n    available:\n      \u003c\u003c: *amount\n      description: Available balance (funds that can be spent)\n    total:\n      \u003c\u003c: *amount\n      description: Total balance (available balance plus pending change)\n\nx-walletPassphraseInfo :: \u0026walletPassphraseInfo\n  description: Information about the wallet's passphrase\n  type: object\n  required:\n    - last_updated_at\n  properties:\n    last_updated_at: *date\n\nx-transactionId: \u0026transactionId\n  description: A unique identifier for this transaction\n  type: string\n  format: hex\n  maxLength: 64\n  minLength: 64\n  example: 1423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db1\n\nx-datum: \u0026datum\n  description: A datum hash.\n  type: string\n  format: hex\n  maxLength: 64\n  minLength: 64\n  example: 16f30f4e8d665d53eb4ab6028bd0ac971809d514c92d423856bc91c49e928faf\n\nx-transactionInsertedAt: \u0026transactionInsertedAt\n  description: |\n    \u003cspan style=\"position: relative; left: 35px; top: -21px; vertical-align: middle; background-color: rgba(142, 142, 220, 0.05); color: rgba(50, 50, 159, 0.9); margin: 0 5px; padding: 0 5px; border: 1px solid rgba(50, 50, 159, 0.1); line-height: 20px; font-size: 13px; border-radius: 2px;\"\u003e\n    \u003cstrong\u003eif:\u003c/strong\u003e status == in_ledger\n    \u003c/span\u003e\u003cbr/\u003e\n    Absolute time at which the transaction was inserted in a block.\n  \u003c\u003c: *blockReference\n\nx-transactionExpiresAt: \u0026transactionExpiresAt\n  description: |\n    \u003cspan style=\"position: relative; left: 35px; top: -21px; vertical-align: middle; background-color: rgba(142, 142, 220, 0.05); color: rgba(50, 50, 159, 0.9); margin: 0 5px; padding: 0 5px; border: 1px solid rgba(50, 50, 159, 0.1); line-height: 20px; font-size: 13px; border-radius: 2px;\"\u003e\n    \u003cstrong\u003eif:\u003c/strong\u003e status == pending OR status == expired\n    \u003c/span\u003e\u003cbr/\u003e\n    Absolute time and slot at which the pending transaction TTL (time to live) will lapse.\n  \u003c\u003c: *slotReference\n\nx-transactionPendingSince: \u0026transactionPendingSince\n  description: |\n    \u003cspan style=\"position: relative; left: 35px; top: -21px; vertical-align: middle; background-color: rgba(142, 142, 220, 0.05); color: rgba(50, 50, 159, 0.9); margin: 0 5px; padding: 0 5px; border: 1px solid rgba(50, 50, 159, 0.1); line-height: 20px; font-size: 13px; border-radius: 2px;\"\u003e\n    \u003cstrong\u003eif:\u003c/strong\u003e status == pending\n    \u003c/span\u003e\u003cbr/\u003e\n    The point in time at which a transaction became pending.\n  \u003c\u003c: *blockReference\n\nx-transactionDepth: \u0026transactionDepth\n  description: |\n    \u003cspan style=\"position: relative; left: 35px; top: -21px; vertical-align: middle; background-color: rgba(142, 142, 220, 0.05); color: rgba(50, 50, 159, 0.9); margin: 0 5px; padding: 0 5px; border: 1px solid rgba(50, 50, 159, 0.1); line-height: 20px; font-size: 13px; border-radius: 2px;\"\u003e\n    \u003cstrong\u003eif:\u003c/strong\u003e status == in_ledger\n    \u003c/span\u003e\u003cbr/\u003e\n    Current depth of the transaction in the local chain\n  \u003c\u003c: *numberOfBlocks\n\nx-transactionDirection: \u0026transactionDirection\n  type: string\n  enum:\n    - outgoing\n    - incoming\n\nx-addresses: \u0026addresses\n  description: A list of addresses\n  type: array\n  minItems: 1\n  items: *addressId\n\nx-transactionInputs: \u0026transactionInputs\n  description: |\n    A list of transaction inputs.\n\n    `assets` and `address` are always present for `outgoing`\n    transactions but generally absent for `incoming`\n    transactions. This information is present on the Cardano explorer,\n    but is not tracked by the wallet.\n  type: array\n  minItems: 0\n  items:\n    type: object\n    required:\n      - id\n      - index\n    properties:\n      address: *addressId\n      amount: *amount\n      assets: *walletAssets\n      id: *transactionId\n      index:\n        type: integer\n        minimum: 0\n\nx-transactionCollateral: \u0026transactionCollateral\n  description: |\n    A list of transaction inputs used for collateral.\n  type: array\n  minItems: 0\n  items:\n    type: object\n    required:\n      - id\n      - index\n    properties:\n      address: *addressId\n      amount: *amount\n      id: *transactionId\n      index:\n        type: integer\n        minimum: 0\n\nx-derivationSegment: \u0026derivationSegment\n  description: |\n    An individual segment within a derivation path.\n\n    The `H` suffix indicates a _Hardened_ child private key, which\n    means that children of this key cannot be derived from the public\n    key. Indices without a `H` suffix are called _Soft_.\n  type: string\n  example: 1852H\n\nx-derivationPath: \u0026derivationPath\n  description: A path for deriving a child key from a parent key.\n  type: array\n  minItems: 1\n  items: *derivationSegment\n\nx-transactionOutputs: \u0026transactionOutputs\n  description: A list of target outputs with amount specified\n  type: array\n  minItems: 0\n  items:\n    type: object\n    required:\n      - address\n      - amount\n    properties:\n      address: *addressId\n      amount: *amount\n      assets: *walletAssets\n\nx-transactionNoAmountOutputs: \u0026transactionNoAmountOutputs\n  description: A list of target outputs without amounts specified\n  type: array\n  minItems: 0\n  items:\n    type: string\n    \u003c\u003c: *addressId\n\nx-delegationAction: \u0026delegationAction\n  description: |\n    A delegation action.\n\n    Pool id is only required for \"join\".\n  type: object\n  required:\n    - action\n  properties:\n    action:\n      type: string\n      enum: [\"quit\", \"join\"]\n    pool: *stakePoolId\n\nx-delegationTarget: \u0026delegationTarget\n  \u003c\u003c: *stakePoolId\n  description: A unique Stake-Pool identifier (present only if status = `delegating`)\n\nx-rewardAccountPath: \u0026rewardAccountPath\n  type: array\n  minItems: 5\n  maxItems: 5\n  items:\n    type: string\n\nx-certificate: \u0026certificate\n  description: |\n    A delegation certificate belonging to wallet\n\n    Only for 'join_pool' the 'pool' property is required.\n  type: object\n  required:\n    - certificate_type\n    - reward_account_path\n  properties:\n    certificate_type:\n      type: string\n      enum: [\"join_pool\", \"quit_pool\", \"register_reward_account\"]\n    pool:\n      \u003c\u003c: *stakePoolId\n    reward_account_path:\n      \u003c\u003c: *rewardAccountPath\n\nx-certificateNotOurs: \u0026certificateNotOurs\n  description: |\n    A delegation certificate not belonging to wallet\n\n    Only for 'join_pool' the 'pool' property is required.\n  type: object\n  required:\n    - certificate_type\n    - reward_account\n  properties:\n    certificate_type:\n      type: string\n      enum: [\"join_pool_external\", \"quit_pool_external\", \"register_reward_account_external\"]\n    pool:\n      \u003c\u003c: *stakePoolId\n    reward_account:\n      \u003c\u003c: *stakeAddress\n\nx-otherCertificate: \u0026otherCertificate\n  type: object\n  required:\n    - certificate_type\n  properties:\n    certificate_type:\n      type: string\n      enum: [\"mir\", \"genesis\"]\n\nx-transactionRedemptionRequest: \u0026transactionRedemptionRequest\n  \u003c\u003c: *walletMnemonicSentence\n  description: |\n    When provided, attempts to withdraw rewards from the default stake address corresponding to the given mnemonic.\n\n    Should the rewards be null or too small to be worth withdrawing (i.e. the cost of adding them into the transaction\n    is more than their own intrinsic value), the server will reject the request with a `withdrawal_not_worth` error.\n\n    withdrawal field    | reward balance | result\n    ---                 | ---            | ---\n    any recovery phrase | too small      | x Error 403 `withdrawal_not_worth`\n    any recovery phrase | big enough     | ✓ withdrawal generated\n\nx-transactionWithdrawalRequestSelf: \u0026transactionWithdrawalRequestSelf\n  type: string\n  enum: [\"self\"]\n  description: |\n    When provided, instruments the server to automatically withdraw rewards from the source wallet when they are deemed\n    sufficient (i.e. they contribute to the balance for at least as much as they cost).\n\n    As a consequence, the resulting transaction may or may not have a withdrawal object. Summarizing:\n\n    withdrawal field | reward balance | result\n    ---              | ---            | ---\n    `null`           | too small      | ✓ no withdrawals generated\n    `null`           | big enough     | ✓ no withdrawals generated\n    `\"self\"`         | too small      | ✓ no withdrawals generated\n    `\"self\"`         | big enough     | ✓ withdrawal generated\n\nx-transactionWithdrawals: \u0026transactionWithdrawals\n  description: A list of withdrawals from stake addresses.\n  type: array\n  minItems: 0\n  items:\n    type: object\n    additionalProperties: false\n    required:\n      - stake_address\n      - amount\n    properties:\n      stake_address: *stakeAddress\n      amount: *amount\n\nx-ours: \u0026ours\n  type: string\n  enum: [\"ours\"]\n  description: |\n    Used when withdrawal or output is ours.\n\nx-transactionWithdrawalsGeneral: \u0026transactionWithdrawalsGeneral\n  description: |\n     A list of withdrawals from stake addresses. Withdrawal belonging to the wallet\n     is underlined.\n  type: array\n  minItems: 0\n  items:\n    type: object\n    additionalProperties: false\n    required:\n      - stake_address\n      - amount\n    properties:\n      stake_address: *stakeAddress\n      amount: *amount\n      context: *ours\n\nx-softIndex: \u0026softIndex\n  type: integer\n  minimum: 0\n  maximum: 2147483647\n  description: A soft derivation index.\n\nx-multiDelegationAction: \u0026multiDelegationAction\n  description: |\n    A delegation action for a given stake key denoted by its soft index.\n    Pool id is only required for \"join\".\n    Stake key index are required for both actions.\n  oneOf:\n    - type: object\n      required:\n        - join\n      properties:\n        join:\n          type: object\n          required:\n            - pool\n            - stake_key_index\n          properties:\n            pool: *stakePoolId\n            stake_key_index: *derivationSegment\n    - type: object\n      required:\n        - quit\n      properties:\n        quit:\n          type: object\n          required:\n            - stake_key_index\n          properties:\n            stake_key_index: *derivationSegment\n\nx-transactionDelegations: \u0026transactionDelegations\n  description: |\n    \u003cp\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n    A list of staking actions (joining, rejoining or leaving from stake pools).\n    Using '0H' stake key index is supported at this moment. This will change with\n    multi-account support.\n    Only one delegation action can be used.\n  type: array\n  minItems: 0\n  items:\n    \u003c\u003c: *multiDelegationAction\n\nx-transactionMint: \u0026transactionMint\n  description: |\n    \u003cp\u003estatus: \u003cstrong\u003e⚠ under development\u003c/strong\u003e\u003c/p\u003e\n\n    _This field is not implemented yet, and will always be empty._\n\n    Assets minted (created) or unminted (destroyed)\n\n    This amount contributes to the total transaction value.\n\n    Positive values denote creation of assets and negative values\n    denote the reverse.\n  type: array\n  minItems: 0\n  items: *assetMint\n\nx-transactionChange: \u0026transactionChange\n  description: A list of transaction change outputs.\n  type: array\n  minItems: 0\n  items:\n    type: object\n    required:\n      - address\n      - amount\n      - derivation_path\n    properties:\n      address: *addressId\n      amount: *amount\n      assets: *walletAssets\n      derivation_path: *derivationPath\n\nx-transactionResolvedInputs: \u0026transactionResolvedInputs\n  description: A list of transaction inputs\n  type: array\n  items:\n    type: object\n    required:\n      - id\n      - index\n      - address\n      - amount\n      - derivation_path\n    properties:\n      address: *addressId\n      amount: *amount\n      assets: *walletAssets\n      id: *transactionId\n      derivation_path: *derivationPath\n      index:\n        type: integer\n        minimum: 0\n\nx-transactionInputsOutsideWallet: \u0026transactionInputsOutsideWallet\n  description: |\n    A transaction input not belonging to a given wallet.\n  type: object\n  required:\n    - id\n    - index\n  properties:\n    id: *transactionId\n    index:\n      type: integer\n      minimum: 0\n\nx-transactionInputsInsideWallet: \u0026transactionInputsInsideWallet\n  description: |\n    A transaction input belonging to a given wallet.\n  type: object\n  required:\n    - id\n    - index\n    - address\n    - amount\n    - derivation_path\n  properties:\n    address: *addressId\n    amount: *amount\n    assets: *walletAssets\n    id: *transactionId\n    derivation_path: *derivationPath\n    index:\n      type: integer\n      minimum: 0\n\nx-transactionInputsGeneral: \u0026transactionInputsGeneral\n  type: array\n  minItems: 0\n  items:\n    oneOf:\n      - \u003c\u003c: *transactionInputsOutsideWallet\n        title: tx inputs without source not belonging to a given wallet\n      - \u003c\u003c: *transactionInputsInsideWallet\n        title: tx inputs belonging to a given wallet\n\nx-transactionOutputsOutsideWallet: \u0026transactionOutputsOutsideWallet\n  description: |\n     A transaction output not belonging to the wallet\n  type: object\n  required:\n    - address\n    - amount\n  properties:\n    address: *addressId\n    amount: *amount\n    assets: *walletAssets\n\nx-transactionOutputsInsideWallet: \u0026transactionOutputsInsideWallet\n  description: |\n     A transaction output not belonging to the wallet\n  type: object\n  required:\n    - address\n    - amount\n    - derivation_path\n  properties:\n    address: *addressId\n    amount: *amount\n    assets: *walletAssets\n    derivation_path: *derivationPath\n\nx-transactionOutputsGeneral: \u0026transactionOutputsGeneral\n  type: array\n  minItems: 0\n  items:\n    oneOf:\n      - \u003c\u003c: *transactionOutputsOutsideWallet\n        title: tx outputs not belonging to a given wallet\n      - \u003c\u003c: *transactionOutputsInsideWallet\n        title: tx outputs belonging to a given wallet\n\nx-transactionResolvedCollateral: \u0026transactionResolvedCollateral\n  description: A list of transaction inputs used for collateral\n  type: array\n  items:\n    type: object\n    required:\n      - id\n      - index\n      - address\n      - amount\n      - derivation_path\n    properties:\n      address: *addressId\n      amount: *amount\n      id: *transactionId\n      derivation_path: *derivationPath\n      index:\n        type: integer\n        minimum: 0\n\nx-transactionResolvedWithdrawals: \u0026transactionResolvedWithdrawals\n  description: A list of withdrawals from stake addresses.\n  type: array\n  minItems: 0\n  items:\n    type: object\n    additionalProperties: false\n    required:\n      - stake_address\n      - derivation_path\n      - amount\n    properties:\n      stake_address: *stakeAddress\n      derivation_path: *derivationPath\n      amount: *amount\n\nx-serialisedTransactionBase64: \u0026serialisedTransactionBase64\n  description: |\n    The CBOR-encoded transaction, represented in base64 encoding.\n    This always includes the transaction body and the witness set, even if the\n    latter is empty.\n  type: string\n  format: base64\n\nx-serialisedTransactionHex: \u0026serialisedTransactionHex\n  description: |\n    The CBOR-encoded transaction, represented in hexadecimal encoding (base-16).\n    This always includes the transaction body and the witness set, even if the\n    latter is empty.\n  type: string\n  format: hex\n\nx-serialisedTransactionEncoded: \u0026serialisedTransactionEncoded\n  description: |\n    The CBOR-encoded transaction, represented in either hex or base64 encoding.\n    This always includes the transaction body and the witness set, even if the\n    latter is empty.\n  type: string\n  format: \"base64|base16\"\n\nx-signedTransactionBlob: \u0026signedTransactionBlob\n  description: Signed transaction message binary blob.\n  type: string\n  format: binary\n\nx-transactionBodyBlob: \u0026transactionBodyBlob\n  description: CBOR-encoded transaction body\n  type: string\n  format: binary\n\nx-transactionStatus: \u0026transactionStatus\n  description: |\n    Current transaction status.\n\n      ```\n           *-----------*\n      ---\u003e |  PENDING  |----------------*\n           *-----------*                |\n                 |                      |\n                 V                      V\n           *-----------*          *-----------*\n           |           |----------\u003e  EXPIRED  |\n           |           |  (ttl)   *-----------*\n           | SUBMITTED |\n           |           \u003c----------------*\n           |           |                |\n           *-----------*           (rollback)\n                  |                     |\n             (in ledger)          *-----------*\n                  |               |           |\n                  *---------------\u003e IN_LEDGER |\n                                  |           |\n                                  *-----------*\n      ```\n  type: string\n  enum:\n    - pending\n    - submitted\n    - in_ledger\n    - expired\n\nx-transactionSerializedMetadata: \u0026transactionSerializedMetadata\n  type: string\n  format: base64\n  description: Transaction metadata, serialized according to the expected on-chain binary format, base64-encoded.\n\nx-transactionMetadata: \u0026transactionMetadata\n  description: |\n    **⚠️ WARNING ⚠️**\n\n    _Please note that metadata provided in a transaction will be\n    stored on the blockchain forever. Make sure not to include any sensitive data,\n    in particular personally identifiable information (PII)._\n\n    Extra application data attached to the transaction.\n\n    Cardano allows users and developers to embed their own\n    authenticated metadata when submitting transactions. Metadata can\n    be expressed as a JSON object with some restrictions:\n\n    1. All top-level keys must be integers between `0` and `2^64 - 1`.\n\n    2. Each metadata value is tagged with its type.\n\n    3. Strings must be at most 64 bytes when UTF-8 encoded.\n\n    4. Bytestrings are hex-encoded, with a maximum length of 64 bytes.\n\n    Metadata aren't stored as JSON on the Cardano blockchain but are\n    instead stored using a compact binary encoding (CBOR).\n\n    The binary encoding of metadata values supports three simple types:\n\n    * Integers in the range `-(2^64 - 1)` to `2^64 - 1`\n    * Strings (UTF-8 encoded)\n    * Bytestrings\n\n    And two compound types:\n\n    * Lists of metadata values\n    * Mappings from metadata values to metadata values\n\n    It is possible to transform any JSON object into this schema.\n\n    However, if your application uses floating point values, they will\n    need to be converted somehow, according to your\n    requirements. Likewise for `null` or `bool` values. When reading\n    metadata from chain, be aware that integers may exceed the\n    javascript numeric range, and may need special \"bigint\" parsing.\n\n  type: object\n  nullable: true\n  additionalProperties:\n    $ref: \"#/components/schemas/TransactionMetadataValue\"\n  # Note: propertyNames pattern not supported in current OpenAPI version.\n  # propertyNames:\n  #   pattern: '^[0-9]+$'\n  example:\n    0: { \"string\": \"cardano\" }\n    1: { \"int\": 14 }\n    2: { \"bytes\": \"2512a00e9653fe49a44a5886202e24d77eeb998f\" }\n    3: { \"list\": [ { \"int\": 14 }, { \"int\": 42 }, { \"string\": \"1337\" } ] }\n    4: { \"map\": [{ \"k\": { \"string\": \"key\" }, \"v\": { \"string\": \"value\" }}, { \"k\": { \"int\": 14 }, \"v\": { \"int\": 42 } }] }\n\nx-transactionTTL: \u0026transactionTTL\n  description: |\n    The TTL (time to live) is the time period in which the transaction\n    will be accepted into node mempools.\n\n    After the TTL has lapsed, the transaction is considered\n    expired. At this point, nodes will give up on broadcasting the\n    transaction, and the wallet will release the funds allocated to\n    the transaction so they can be used for other payments.\n\n    The TTL should be long enough that the transaction has time to be\n    propagated through the network and confirmed, but short enough so\n    that - in the event of failures - UTxO are returned to the wallet\n    in a timely manner.\n\n    The TTL value is given in seconds. It will be converted to a slot\n    number internally.\n\n    If the TTL is not provided for a payment, a reasonable default\n    value will be used.\n\n  \u003c\u003c: *numberOfSeconds\n\nx-unspecified: \u0026unspecified\n  type: string\n  enum:\n    - unspecified\n\nx-validityBound: \u0026validityBound\n  oneOf:\n    - \u003c\u003c: *numberOfSeconds\n      title: number of seconds\n    - \u003c\u003c: *numberOfSlots\n      title: number of slots\n    - \u003c\u003c: *unspecified\n      title: unspecified\n\nx-stakePoolApparentPerformance: \u0026stakePoolApparentPerformance\n  description: |\n    Apparent performance of the stake pool over past epochs. This indicator is computed\n    using data available to the server. In particular, the server can't reliably know the\n    stake distribution of past epochs without being during those epochs. The performance\n    are therefore an average measure that is more accurate for servers that are online\n    often.\n\n    The performance is a float with double-precision which is _typically_ within `0` and `1`:\n\n      - `0` means that a pool is not performing well.\n      - `1` means that a pool is performing _as expected_.\n      - above `1` means the pool is performing beyond expectations.\n\n    Pools that are lucky enough to win most of their slots early in the epoch will tend to look\n    like they're over-performing for a while. Having a wallet regularly connected to the network\n    would harmonize the performance and give better results.\n\n  type: number\n  minimum: 0\n  example: 0.5053763440860215\n\nx-stakePoolMetadata: \u0026stakePoolMetadata\n  description: |\n    Information about the stake pool.\n  type: object\n  required:\n    - ticker\n    - name\n    - homepage\n  additionalProperties: false\n  properties:\n    ticker:\n      type: string\n      minLength: 3\n      maxLength: 5\n      example: IOHK\n    name:\n      type: string\n      minLength: 1\n      maxLength: 50\n    description:\n      type: string\n      maxLength: 255\n    homepage:\n      type: string\n      format: uri\n      example: https://iohk.io\n\nx-stakePoolRetirement: \u0026stakePoolRetirement\n  \u003c\u003c: *epochInfo\n  description: |\n      The epoch in which a stake pool retires.\n\n      May be omitted if the wallet hasn't yet found a retirement certificate\n      for this stake pool.\n\nx-stakePoolPledge: \u0026stakePoolPledge\n  \u003c\u003c: *amount\n  description: |\n      Minimal stake amount that a stake pool is willing to honor.\n\n      May be omitted if the wallet hasn't found the pool's registration cerificate yet.\n\nx-stakePoolCost: \u0026stakePoolCost\n  \u003c\u003c: *amount\n  description: |\n      Estimated cost set by the pool operator when registering his pool.\n      This fixed cost is taken from each reward earned by the pool before splitting rewards between stakeholders.\n\n      May be omitted if the wallet hasn't found the pool's registration cerificate yet.\n\nx-stakePoolMargin: \u0026stakePoolMargin\n  \u003c\u003c: *percentage\n  description: |\n      Variable margin on the total reward given to an operator before splitting rewards between stakeholders.\n\n      May be omitted if the wallet hasn't found the pool's registration cerificate yet.\n\nx-stakePoolSaturation: \u0026stakePoolSaturation\n  type: number\n  minimum: 0\n  description: |\n    Saturation-level of the pool based on the desired number of pools aimed by the network.\n    A value above `1` indicates that the pool is saturated.\n\n    The `non_myopic_member_rewards` take oversaturation into account, as specified by the [specs](https://hydra.iohk.io/job/Cardano/cardano-ledger-specs/delegationDesignSpec/latest/download-by-type/doc-pdf/delegation_design_spec).\n\n    The saturation is based on the live `relative_stake`. The saturation at the end of epoch e,\n    will affect the rewards paid out at the end of epoch e+3.\n\n  example: 0.74\n\nx-non-myopic-member-rewards: \u0026nonMyopicMemberRewards\n  \u003c\u003c: *amount\n  description: |\n    The rewards the wallet can expect to receive at the end of an epoch, in the long term, if delegating to\n    this pool.\n\n    For more details, see the\n    [Design Specification for Delegation and Incentives in Cardano](https://hydra.iohk.io/job/Cardano/cardano-ledger-specs/delegationDesignSpec/latest/download-by-type/doc-pdf/delegation_design_spec)\n    document.\n\nx-stakePoolMetrics: \u0026stakePoolMetrics\n  type: object\n  required:\n    - relative_stake\n    - non_myopic_member_rewards\n    - produced_blocks\n    - saturation\n  properties:\n    non_myopic_member_rewards: *nonMyopicMemberRewards\n    relative_stake:\n      \u003c\u003c: *percentage\n      description: |\n        The live pool stake relative to the *total* stake.\n\n        For more details, see the section \"Relative Stake: Active vs Total\" in\n        [Design Specification for Delegation and Incentives in Cardano](https://hydra.iohk.io/job/Cardano/cardano-ledger-specs/delegationDesignSpec/latest/download-by-type/doc-pdf/delegation_design_spec).\n    saturation: *stakePoolSaturation\n    produced_blocks:\n      \u003c\u003c: *numberOfBlocks\n      description: Number of blocks produced by a given stake pool in its lifetime.\n\nx-stakePoolFlag: \u0026stakePoolFlag\n  type: string\n  enum:\n  - delisted\n\nx-stakePoolFlags: \u0026stakePoolFlags\n  type: array\n  description: |\n    Various flags applicable to stake pools. Possible flags:\n\n    | flag     | description                                                                                                      |\n    | ---      | ---                                                                                                              |\n    | delisted | The pool is marked as delisted on a configured SMASH server; metadata for this pool have therefore been dropped. |\n  items: *stakePoolFlag\n\nx-networkInformationSyncProgress: \u0026networkInformationSyncProgress\n  \u003c\u003c: *syncProgress\n  description: |\n    Estimated synchronization progress of the node with the underlying network. Note that this may\n    change quite arbitrarily as the node may switch to shorter or longer chain forks.\n\nx-networkClockSyncProgress: \u0026networkClockSyncProgress\n  \u003c\u003c: *syncClockProgress\n  description: |\n    The status progress of syncing local ntp client aiming to get ntp offset.\n\nx-networkInformationNtpStatus: \u0026networkInformationNtpStatus\n  type: object\n  description: |\n    [Network Time Protocol](https://en.wikipedia.org/wiki/Network_Time_Protocol) information of the server.\n\n    **Important:** This piece of information only makes sense when the server runs on the same host machine as the node.\n  required:\n    - status\n  properties:\n    status:\n      type: string\n      enum:\n        - available\n        - unavailable\n        - pending\n    offset:\n      type: object\n      description: |\n        \u003cspan style=\"position: relative; left: 35px; top: -21px; vertical-align: middle; background-color: rgba(142, 142, 220, 0.05); color: rgba(50, 50, 159, 0.9); margin: 0 5px; padding: 0 5px; border: 1px solid rgba(50, 50, 159, 0.1); line-height: 20px; font-size: 13px; border-radius: 2px;\"\u003e\n        \u003cstrong\u003eif:\u003c/strong\u003e status == available\n        \u003c/span\u003e\u003cbr/\u003e\n        Drift offset of the local clock.\n      required:\n        - quantity\n        - unit\n      properties:\n        quantity:\n          type: integer\n          example: 14\n        unit:\n          type: string\n          enum:\n            - microsecond\n\nx-networkInformationNodeTip: \u0026networkInformationNodeTip\n  \u003c\u003c: *blockReference\n  description: Underlying node's tip\n\nx-networkInformationProtocolUpdate: \u0026networkInformationProtocolUpdate\n  type: string\n  description: |\n    Whether protocol updates have been submitted and accepted by the network.\n  enum:\n    - up_to_date\n    - update_available\n\nx-delegationStatus: \u0026delegationStatus\n  type: string\n  enum:\n    - not_delegating\n    - delegating\n\nx-addressIndex: \u0026addressIndex\n  type: number\n  minimum: 0\n  # 2 ^ 32 - 1, whole range (soft and hard) for random addresses:\n  maximum: 4294967295\n  description: |\n    An address derivation index.\n\nx-gCStatus :: \u0026gCStatus\n\nx-deposits: \u0026deposits\n  description: A list of deposits associated with a transaction.\n  type: array\n  minItems: 0\n  items: *amount\n\nx-minimumCoins: \u0026minimumCoins\n  description: |\n    A list of minimum coin values that each output in a payment must satisfy. The values themselves depends on two things:\n\n      - (a) Some updatable protocol parameters fixed by the network.\n      - (b) The nature of the outputs (i.e. the kind of assets it includes).\n\n    The list is a direct 1:1 mapping of the requested outputs. Said differently, it has the **same number of items** and **items\n    are ordered in the same way** as **requested outputs** are ordered. In the case where there's no explicitly requested outputs (e.g.\n    when calculating fee for delegation), this list is empty.\n\n    For example, an output containing only `Ada` may require to be of at least `1 Ada`. An output containing only an hypothetical `AppleCoin`\n    may require to also carry a minimum of `1.2 Ada`. Note that no matter what, a minimum coin value is always given in Lovelace / Ada.\n\n    \u003e ℹ️ This mechanism is used by the protocol to protect against flooding of the network with worthless assets. By requiring a minimum coin value to every\n    UTxO, they are given an intrinsic value indexed itself on the value of Ada.\n  type: array\n  minItems: 0\n  items: *amount\n\nx-collateralInputCount: \u0026collateralInputCount\n  type: integer\n  minimum: 0\n  example: 3\n\nx-collateralPercentage: \u0026collateralPercentage\n  type: integer\n  minimum: 0\n\nx-maximumTokenBundleSize: \u0026maximumTokenBundleSize\n  type: object\n  description: |\n    The maximum size of a serialized `TokenBundle`. The concept was added in Mary where\n    it was hard-coded to 4000 bytes. In Alonzo it was made an updateable protocol parameter (`_maxValSize`).\n  required:\n    - quantity\n    - unit\n  properties:\n    quantity:\n      type: number\n      minimum: 0\n      example: 4000\n    unit:\n      type: string\n      enum:\n        - byte\n\nx-txScriptValidity: \u0026txScriptValidity\n  description: |\n    Indicates whether the phase-2 monetary policy script (e.g. Plutus script)\n    used in the transaction validated or not. Validity may be null if this\n    transaction was from an era that doesn't support phase-2 monetary policy\n    scripts, or is a pending transaction (we don't know if validation passed or\n    failed until the transaction hits the ledger).\n  nullable: true\n  type: string\n  enum:\n    - valid\n    - invalid\n\nx-rationalAsPair: \u0026rationalAsPair\n  type: object\n  required:\n    - denominator\n    - numerator\n  properties:\n    denominator:\n      type: integer\n      minimum: 0\n    numerator:\n      type: integer\n      minimum: 0\n\nx-rationalAsNumber: \u0026rationalAsNumber\n  type: integer\n  minimum: 0\n\nx-rational: \u0026rational\n  nullable: false\n  oneOf:\n    - \u003c\u003c: *rationalAsNumber\n      title: rational as number\n    - \u003c\u003c: *rationalAsPair\n      title: rational as denominator and numerator\n\nx-executionUnitPrices: \u0026executionUnitPrices\n  type: object\n  description: |\n    The price of time unit and memory unit used for calculating a fee of a script execution.\n  required:\n    - step_price\n    - memory_unit_price\n  properties:\n    step_price: *rational\n    memory_unit_price: *rational\n\n#############################################################################\n#                                                                           #\n#                              DEFINITIONS                                  #\n#                                                                           #\n#############################################################################\n\ncomponents:\n  schemas:\n    ApiAddress: \u0026ApiAddress\n      type: object\n      required:\n        - id\n        - state\n        - derivation_path\n      properties:\n        id: *addressId\n        state: *addressState\n        derivation_path: *derivationPath\n\n    ApiAddressInspect: \u0026ApiAddressInspect\n        type: object\n        required:\n        - address_style\n        - stake_reference\n        properties:\n          address_style:\n            type: string\n            enum:\n            - Shelley\n            - Icarus\n            - Byron\n          stake_reference:\n            type: string\n            enum:\n            - none\n            - by value\n            - by pointer\n          network_tag:\n            description: Can be null for 'Icarus' and 'Byron' styles.\n            type: integer\n            minimum: 0\n          spending_key_hash:\n            type: string\n            format: base16\n            minLength: 56\n            maxLength: 56\n          spending_key_bech32:\n            type: string\n            format: bech32\n          stake_key_hash:\n            type: string\n            format: base16\n            minLength: 56\n            maxLength: 56\n          stake_key_bech32:\n            type: string\n            format: bech32\n          script_hash:\n            type: string\n            format: base16\n            minLength: 64\n            maxLength: 64\n          script_hash_bech32:\n            type: string\n            format: bech32\n          pointer:\n            type: object\n            additionalProperties: false\n            required:\n            - slot_num\n            - transaction_index\n            - output_index\n            properties:\n              slot_num:\n                type: integer\n                minimum: 0\n              transaction_index:\n                type: integer\n                minimum: 0\n              output_index:\n                type: integer\n                minimum: 0\n          address_root:\n            description: Only for 'Icarus' and 'Byron' styles.\n            type: string\n            format: base16\n          derivation_path:\n            description: Only for 'Byron' style.\n            type: string\n            format: base16\n          address_type:\n            description: |\n              The raw type field of the address.\n\n              Details about possible address types are following (refer also to [cddl](https://github.com/input-output-hk/cardano-ledger/blob/master/eras/alonzo/test-suite/cddl-files/alonzo.cddl)).\n\n              | address_type | binary prefix  |   Meaning                                                |\n              | ------------ |:--------------:|:--------------------------------------------------------:|\n              |      0       |  0000          |   base address: keyhash28,keyhash28                      |\n              |      1       |  0001          |   base address: scripthash28,keyhash28                   |\n              |      2       |  0010          |   base address: keyhash28,scripthash28                   |\n              |      3       |  0011          |   base address: scripthash28,scripthash28                |\n              |      4       |  0100          |   pointer address: keyhash28, 3 variable length uint     |\n              |      5       |  0101          |   pointer address: scripthash28, 3 variable length uint  |\n              |      6       |  0110          |   enterprise address: keyhash28                          |\n              |      7       |  0111          |   enterprise address: scripthash28                       |\n              |      8       |  1000          |   byron/icarus                                           |\n              |      14      |  1110          |   reward account: keyhash28                              |\n              |      15      |  1111          |   reward account: scripthash28                           |\n            type: integer\n            minimum: 0\n            maximum: 15\n\n    ApiNetworkTip: \u0026ApiNetworkTip\n      \u003c\u003c: *slotReference\n      description: The time slot corresponding the network tip.\n\n    ApiEra: \u0026ApiEra\n      type: string\n      enum:\n        - byron\n        - shelley\n        - allegra\n        - mary\n        - alonzo\n\n    ApiNetworkInformation: \u0026ApiNetworkInformation\n      type: object\n      required:\n        - sync_progress\n        - node_tip\n        - node_era\n      properties:\n        sync_progress: *networkInformationSyncProgress\n        node_tip: *networkInformationNodeTip\n        network_tip: *ApiNetworkTip\n        next_epoch: *epochInfo\n        node_era: *ApiEra\n\n    ApiNetworkClock: \u0026ApiNetworkClock\n      \u003c\u003c: *networkInformationNtpStatus\n\n    nullableEpochInfo: \u0026nullableEpochInfo\n      \u003c\u003c: *epochInfo\n      nullable: True\n\n    ApiEraInfo: \u0026ApiEraInfo\n      type: object\n      properties:\n        byron: *nullableEpochInfo\n        shelley: *nullableEpochInfo\n        allegra: *nullableEpochInfo\n        mary: *nullableEpochInfo\n        alonzo: *nullableEpochInfo\n      description: |\n\n        If and when each era started or will start.\n\n        The object is keyed by era names. The values either describe the epoch boundary\n        when the era starts (can be in the future or in the past), or are null if not yet\n        confirmed on-chain.\n\n        If you need to know the current era, see the `node_era` field of\n        `GET /network/information`.\n\n        \u003e Due to complications with our current tooling, we cannot mark the era names\n        \u003e as required, but the keys are in fact always present.\n\n    ApiNetworkParameters: \u0026ApiNetworkParameters\n      type: object\n      required:\n        - genesis_block_hash\n        - blockchain_start_time\n        - slot_length\n        - epoch_length\n        - security_parameter\n        - active_slot_coefficient\n        - decentralization_level\n        - desired_pool_number\n        - minimum_utxo_value\n        - eras\n        - maximum_collateral_input_count\n        - maximum_token_bundle_size\n      properties:\n        genesis_block_hash: *blockId\n        blockchain_start_time: *date\n        slot_length: *numberOfSeconds\n        epoch_length: *numberOfSlots\n        security_parameter: *numberOfBlocks\n        active_slot_coefficient: *percentage\n        decentralization_level: *percentage\n        desired_pool_number: *stakePoolsNumber\n        minimum_utxo_value:\n          \u003c\u003c: *amount\n          description: |\n            The minimum ada / Lovelace quantity required for new transaction outputs.\n\n            It is only applicable for pure-ada outputs. If outputs contain other assets\n            or a datum hash, the true minimum will be higher than this value.\n\n            With Alonzo, `minimum_utxo_value` is not a real protocol parameter, but rather\n            derived from from the Alonzo genesis `adaPerUTxOWord`.\n        eras: *ApiEraInfo\n        maximum_collateral_input_count:\n          \u003c\u003c: *collateralInputCount\n          description: |\n            The maximum number of collateral inputs that can be used in a single\n            transaction.\n        minimum_collateral_percentage:\n          \u003c\u003c: *collateralPercentage\n          description: |\n            The minimum required amount of collateral as a percentage of the\n            total transaction fee.\n        maximum_token_bundle_size:\n          \u003c\u003c: *maximumTokenBundleSize\n        execution_unit_prices:\n          \u003c\u003c: *executionUnitPrices\n\n    ApiSelectCoinsPayments: \u0026ApiSelectCoinsPayments\n      type: object\n      required:\n        - payments\n      properties:\n        payments: *transactionOutputs\n        withdrawal: *transactionWithdrawalRequestSelf\n        metadata: *transactionMetadata\n\n    ApiSelectCoinsRedemption: \u0026ApiSelectCoinsRedemption\n      type: object\n      required:\n        - payments\n        - withdrawal\n      properties:\n        payments: *transactionOutputs\n        withdrawal: *transactionRedemptionRequest\n        metadata: *transactionMetadata\n\n    ApiSelectCoinsAction: \u0026ApiSelectCoinsAction\n      type: object\n      required:\n        - delegation_action\n      properties:\n        delegation_action: *delegationAction\n\n    ApiSelectCoinsData: \u0026ApiSelectCoinsData\n      type: object\n      oneOf:\n        - title: Normal payment\n          \u003c\u003c: *ApiSelectCoinsPayments\n        - title: Delegation\n          \u003c\u003c: *ApiSelectCoinsAction\n        - title: Reward redemption\n          \u003c\u003c: *ApiSelectCoinsRedemption\n\n    ApiByronSelectCoinsData: \u0026ApiByronSelectCoinsData\n      type: object\n      required:\n        - payments\n      properties:\n        payments: *transactionOutputs\n\n    ApiCoinSelection: \u0026ApiCoinSelection\n      type: object\n      required:\n        - inputs\n        - outputs\n        - change\n      properties:\n        inputs: *transactionResolvedInputs\n        outputs: *transactionOutputs\n        change: *transactionChange\n        collateral: *transactionResolvedCollateral\n        withdrawals: *transactionResolvedWithdrawals\n        certificates:\n          type: array\n          items: *certificate\n        deposits_taken: *deposits\n        deposits_returned: *deposits\n        metadata: *transactionSerializedMetadata\n\n    ApiGCStatus: \u0026ApiGCStatus\n      type: object\n      description: |\n        Gives an indication if metadata GC checking for delisted pools\n        has run and if so, when.\n\n        Possible values are:\n          - not_applicable -\u003e we're currently not querying a SMASH server for metadata\n          - not_started -\u003e the GC hasn't started yet, try again in a short while\n          - restarting -\u003e the GC thread is currently restarting, try again in short while\n          - has_run -\u003e the GC has run successfully\n\n        When 'status' is 'restarting' or 'has_run' then the field 'last_run'\n        is set to the last GC time in UTC.\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - not_applicable\n            - not_started\n            - restarting\n            - has_run\n        last_run: *date\n\n    ApiMaintenanceActionPostData: \u0026ApiMaintenanceActionPostData\n      type: object\n      required:\n        - maintenance_action\n      description: |\n        The maintenance action to carry out, current values are\n          - gc_stake_pools -\u003e trigger looking up delisted pools from the remote SMASH server\n      properties:\n        maintenance_action:\n          type: string\n          enum: ['gc_stake_pools']\n\n    ApiMaintenanceAction: \u0026ApiMaintenanceAction\n      type: object\n      required:\n      - gc_stake_pools\n      properties:\n        gc_stake_pools: *ApiGCStatus\n\n    ApiStakePool: \u0026ApiStakePool\n      type: object\n      required:\n        - id\n        - metrics\n        - cost\n        - margin\n        - pledge\n        - flags\n      properties:\n        id: *stakePoolId\n        metrics: *stakePoolMetrics\n        cost: *stakePoolCost\n        margin: *stakePoolMargin\n        pledge: *stakePoolPledge\n        metadata: *stakePoolMetadata\n        retirement: *stakePoolRetirement\n        flags: *stakePoolFlags\n\n    ApiFee: \u0026ApiFee\n      type: object\n      required:\n        - estimated_min\n        - estimated_max\n        - minimum_coins\n        - deposit\n      properties:\n        estimated_min: *amount\n        estimated_max: *amount\n        minimum_coins: *minimumCoins\n        deposit: *amount\n\n    ApiPutAddressesData: \u0026ApiPutAddressesData\n      type: object\n      required:\n        - addresses\n      properties:\n        addresses:\n          \u003c\u003c: *addresses\n          description: The imported addresses.\n\n    ApiVerificationKeyShelley: \u0026ApiVerificationKeyShelley\n      type: string\n      format: bech32\n      pattern: \"^((addr_vk)|(stake_vk)|(addr_vkh)|(stake_vkh))1[0-9a-z]*$\"\n\n    ApiVerificationKeyShared: \u0026ApiVerificationKeyShared\n      type: string\n      format: bech32\n      pattern: \"^((addr_shared_vk)|(stake_shared_vk)|(addr_shared_vkh)|(stake_shared_vkh))1[0-9a-z]*$\"\n\n    ApiAccountKey: \u0026ApiAccountKey\n      type: string\n      format: bech32\n      pattern: \"^((acct_xvk)|(acct_vk)|(acct_shared_xvk)|(acct_shared_vk))1[0-9a-z]*$\"\n\n    ApiAccountKeyShared: \u0026ApiAccountKeyShared\n      type: string\n      format: bech32\n      pattern: \"^((acct_shared_xvk)|(acct_shared_vk))1[0-9a-z]*$\"\n\n    ApiTxId: \u0026ApiTxId\n      type: object\n      required:\n        - id\n      properties:\n        id: *transactionId\n\n    ApiSerialisedTransaction: \u0026ApiSerialisedTransaction\n      description: |\n        An encoded transaction.\n      required:\n        - transaction\n      properties:\n        transaction: *serialisedTransactionBase64\n\n    ApiSerialisedTransactionEncoded: \u0026ApiSerialisedTransactionEncoded\n      description: |\n        An encoded transaction.\n      required:\n        - transaction\n      properties:\n        transaction: *serialisedTransactionEncoded\n\n    ApiConstructTransaction: \u0026ApiConstructTransaction\n      type: object\n      required:\n        - transaction\n        - coin_selection\n        - fee\n      properties:\n        transaction: *serialisedTransactionBase64\n        coin_selection: *ApiCoinSelection\n        fee: *amount\n\n    ApiTransaction: \u0026ApiTransaction\n      type: object\n      required:\n        - id\n        - amount\n        - fee\n        - deposit_taken\n        - deposit_returned\n        - direction\n        - inputs\n        - outputs\n        - withdrawals\n        - mint\n        - status\n      properties:\n        id: *transactionId\n        amount:\n          \u003c\u003c: *amount\n          description: |\n            An amount of Ada spent or received, from the perspective of the wallet.\n\n            That is, for outgoing transaction, it represents the amount of Ada consumed\n            as inputs, minus the amount of Ada spent as fees, as deposits or to addresses\n            which do not belong to the wallet.\n\n            For incoming transaction, it represents the total amount of Ada received to\n            addresses that belong to the wallet.\n        fee: *amount\n        deposit_taken: *amount\n        deposit_returned: *amount\n        inserted_at: *transactionInsertedAt\n        expires_at: *transactionExpiresAt\n        pending_since: *transactionPendingSince\n        depth: *transactionDepth\n        direction: *transactionDirection\n        inputs: *transactionInputs\n        outputs: *transactionOutputs\n        collateral: *transactionCollateral\n        withdrawals: *transactionWithdrawals\n        mint: *transactionMint\n        status: *transactionStatus\n        metadata: *transactionMetadata\n        script_validity: *txScriptValidity\n\n    ApiInputsGeneral: \u0026ApiInputsGeneral\n      \u003c\u003c: *transactionInputsGeneral\n      description: |\n        Inputs that could be external or belong to the wallet.\n\n    ApiOutputsGeneral: \u0026ApiOutputsGeneral\n      \u003c\u003c: *transactionOutputsGeneral\n      description: |\n        Outputs that could be external or belong to the wallet.\n\n    ApiWithdrawalsGeneral: \u0026ApiWithdrawalsGeneral\n      \u003c\u003c: *transactionWithdrawalsGeneral\n      description: |\n        Withdrawals that could be external or belong to the wallet.\n\n    ApiMintedAssets: \u0026ApiMintedAssets\n      description: |\n        Assets minted (created).\n        The act of minting assets provides value to a transaction.\n      type: array\n      minItems: 0\n      items: *assetMintedBurned\n\n    ApiBurnedAssets: \u0026ApiBurnedAssets\n      description: |\n        Assets burned (destroyed).\n        The act of burning assets consumes value from a transaction.\n      type: array\n      minItems: 0\n      items: *assetMintedBurned\n\n    ApiStakePoolMetadata: \u0026ApiStakePoolMetadata\n      type: object\n      required:\n        - url\n        - hash\n      properties:\n        url: *stakePoolMetadataUrl\n        hash: *stakePoolMetadataHash\n\n    ApiRegisterPool: \u0026ApiRegisterPool\n      type: object\n      required:\n        - certificate_type\n        - pool_id\n        - pool_owners\n        - pool_margin\n        - pool_cost\n        - pool_pledge\n      properties:\n        certificate_type:\n          type: string\n          enum: [\"register_pool\"]\n        pool_id: *stakePoolId\n        pool_owners:\n          type: array\n          minItems: 0\n          items: *stakePoolOwner\n        pool_margin: *stakePoolMargin\n        pool_cost: *stakePoolCost\n        pool_pledge: *stakePoolPledge\n        pool_metadata: *ApiStakePoolMetadata\n\n    ApiDeregisterPool: \u0026ApiDeregisterPool\n      type: object\n      required:\n        - certificate_type\n        - pool_id\n        - retirement_epoch\n      properties:\n        certificate_type:\n          type: string\n          enum: [\"deregister_pool\"]\n        pool_id: *stakePoolId\n        retirement_epoch: *epochNumber\n\n    ApiCertificate: \u0026ApiCertificate\n      description: |\n        Any certificate that could occur in an arbitrary transaction:\n        might be related to delegation, pool activities, genesis or MIR.\n      oneOf:\n        - \u003c\u003c: *certificate\n          title: delegation certificate belonging to the wallet\n        - \u003c\u003c: *certificateNotOurs\n          title: delegation certificate not belonging to the wallet\n        - \u003c\u003c: *ApiRegisterPool\n          title: pool registration certificate\n        - \u003c\u003c: *ApiDeregisterPool\n          title: pool deregistration certificate\n        - \u003c\u003c: *otherCertificate\n          title: genesis or MIR certificate\n\n    ApiDecodedTransaction: \u0026ApiDecodedTransaction\n      type: object\n      required:\n        - id\n        - fee\n        - inputs\n        - outputs\n        - withdrawals\n        - assets_minted\n        - assets_burned\n        - certificates\n      properties:\n        id: *transactionId\n        fee: *amount\n        inputs: *ApiInputsGeneral\n        outputs: *ApiOutputsGeneral\n        collateral: *ApiInputsGeneral\n        withdrawals: *ApiWithdrawalsGeneral\n        assets_minted: *ApiMintedAssets\n        assets_burned: *ApiBurnedAssets\n        certificates:\n          type: array\n          minItems: 0\n          items: *ApiCertificate\n        metadata: *transactionMetadata\n        deposits_taken: *deposits\n        deposits_returned: *deposits\n        script_validity: *txScriptValidity\n\n    x-txBody: \u0026txBody\n      oneOf:\n        - \u003c\u003c: *serialisedTransactionBase64\n          title: Serialized transaction body\n\n    x-txWits: \u0026txWitnesses\n      type: array\n      items: *serialisedTransactionBase64\n      title: Serialized transaction witnesses\n\n    ApiSignedTransaction: \u0026ApiSignedTransaction\n      \u003c\u003c: *ApiSerialisedTransaction\n      description: |\n        The result of signing a transaction (serialized and encoded).\n\n    ApiSignedTransactionEncoded: \u0026ApiSignedTransactionEncoded\n      \u003c\u003c: *ApiSerialisedTransactionEncoded\n      description: |\n        The result of signing a transaction (serialized and encoded).\n\n    ApiWalletDelegationNext: \u0026ApiWalletDelegationNext\n      type: object\n      description: Next delegation status becomes active at the start of the second epoch after the corresponding delegation certificate was discovered. The exact moment is specified by changes_at\n      required:\n        - status\n        - changes_at\n      properties:\n        status: *delegationStatus\n        target: *delegationTarget\n        changes_at: *epochInfo\n      example:\n        status: not_delegating\n        changes_at:\n          epoch_number: 14\n          epoch_start_time: 2020-01-22T10:06:39.037Z\n\n    ApiWalletDelegation: \u0026ApiWalletDelegation\n      description: Delegation settings\n      type: object\n      required:\n        - active\n        - next\n      properties:\n        active:\n          type: object\n          description: Currently active delegation status.\n          required:\n            - status\n          properties:\n            status: *delegationStatus\n            target: *delegationTarget\n          example:\n            status: delegating\n            target: 1423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db1\n        next:\n          type: array\n          items: *ApiWalletDelegationNext\n\n    ApiWallet: \u0026ApiWallet\n      type: object\n      required:\n        - id\n        - address_pool_gap\n        - balance\n        - assets\n        - delegation\n        - name\n        - state\n        - tip\n      properties:\n        id: *walletId\n        address_pool_gap: *walletAddressPoolGap\n        balance: *walletBalance\n        assets: *walletAssetsBalance\n        delegation: *ApiWalletDelegation\n        name: *walletName\n        passphrase: *walletPassphraseInfo\n        state: *walletState\n        tip: *blockReference\n\n    ApiByronWallet: \u0026ApiByronWallet\n      type: object\n      required:\n        - id\n        - balance\n        - assets\n        - discovery\n        - name\n        - state\n        - tip\n      properties:\n        id: *walletId\n        balance: *byronWalletBalance\n        assets: *walletAssetsBalance\n        discovery: *walletDiscovery\n        name: *walletName\n        passphrase: *walletPassphraseInfo\n        state: *walletState\n        tip: *blockReference\n\n    ApiWalletPostData: \u0026ApiWalletPostData\n      type: object\n      description: Restore from root private key\n      required:\n        - name\n        - mnemonic_sentence\n        - passphrase\n      properties:\n        name: *walletName\n        mnemonic_sentence: *walletMnemonicSentence\n        mnemonic_second_factor: *walletSecondFactor\n        passphrase: *walletPassphrase\n        address_pool_gap: *walletAddressPoolGap\n\n    ApiAccountPostData: \u0026ApiAccountPostData\n      type: object\n      description: Restore from account public key\n      required:\n        - name\n        - account_public_key\n      properties:\n        name: *walletName\n        account_public_key: *walletAccountXPubkey\n        address_pool_gap: *walletAddressPoolGap\n\n    ApiWalletOrAccountPostData: \u0026ApiWalletOrAccountPostData\n      type: object\n      oneOf:\n        - \u003c\u003c: *ApiWalletPostData\n          title: shelley\n        - \u003c\u003c: *ApiAccountPostData\n          title: shelley (from xpub)\n\n    ApiActiveSharedWallet: \u0026ApiActiveSharedWallet\n      type: object\n      required:\n        - id\n        - name\n        - account_index\n        - address_pool_gap\n        - payment_script_template\n        - balance\n        - assets\n        - delegation\n        - state\n        - tip\n      properties:\n        id: *walletId\n        name: *walletName\n        account_index: *derivationSegment\n        address_pool_gap: *walletAddressPoolGap\n        passphrase: *walletPassphraseInfo\n        payment_script_template: *scriptTemplate\n        delegation_script_template: *scriptTemplate\n        balance: *walletBalance\n        assets: *walletAssetsBalance\n        delegation: *ApiWalletDelegation\n        state: *walletState\n        tip: *blockReference\n\n    ApiPendingSharedWallet: \u0026ApiPendingSharedWallet\n      type: object\n      required:\n        - id\n        - name\n        - account_index\n        - address_pool_gap\n        - payment_script_template\n        - state\n      properties:\n        id: *walletId\n        name: *walletName\n        account_index: *derivationSegment\n        address_pool_gap: *walletAddressPoolGap\n        payment_script_template: *scriptTemplate\n        delegation_script_template: *scriptTemplate\n        state:\n          type: object\n          required:\n            - status\n          properties:\n            status:\n              description: |\n                A pending shared wallet does not have a complete set\n                of keys, so the only possible status is `incomplete`.\n              type: string\n              enum:\n                - incomplete\n\n    ApiSharedWallet: \u0026ApiSharedWallet\n      type: object\n      oneOf:\n        - title: Pending shared wallet (collecting account public keys for each co-signer)\n          \u003c\u003c: *ApiPendingSharedWallet\n        - title: Active shared wallet (account public keys for each co-signers is collected)\n          \u003c\u003c: *ApiActiveSharedWallet\n\n    ApiSharedWalletPostDataFromMnemonics: \u0026ApiSharedWalletPostDataFromMnemonics\n      type: object\n      required:\n        - name\n        - mnemonic_sentence\n        - passphrase\n        - account_index\n        - payment_script_template\n      properties:\n        name: *walletName\n        mnemonic_sentence: *walletMnemonicSentence\n        mnemonic_second_factor: *walletSecondFactor\n        passphrase: *walletPassphrase\n        account_index: *derivationSegment\n        payment_script_template: *scriptTemplateEntry\n        delegation_script_template: *scriptTemplateEntry\n        script_validation: *validationLevel\n\n    ApiSharedWalletPostDataFromAccountPubX: \u0026ApiSharedWalletPostDataFromAccountPubX\n      type: object\n      required:\n        - name\n        - account_public_key\n        - account_index\n        - payment_script_template\n      properties:\n        name: *walletName\n        account_public_key: *walletAccountXPubkey\n        account_index: *derivationSegment\n        payment_script_template: *scriptTemplateEntry\n        delegation_script_template: *scriptTemplateEntry\n        script_validation: *validationLevel\n\n    ApiSharedWalletPostData: \u0026ApiSharedWalletPostData\n      type: object\n      oneOf:\n        - title: Create shared wallet from mnemonics\n          \u003c\u003c: *ApiSharedWalletPostDataFromMnemonics\n        - title: Create shared wallet from account public key\n          \u003c\u003c: *ApiSharedWalletPostDataFromAccountPubX\n\n    ApiSharedWalletPatchData: \u0026ApiSharedWalletPatchData\n      \u003c\u003c: *cosigners\n\n    ApiAsset: \u0026ApiAsset\n      type: object\n      required:\n        - policy_id\n        - fingerprint\n        - asset_name\n      properties:\n        policy_id: *assetPolicyId\n        asset_name: *assetName\n        fingerprint: *assetFingerprint\n        metadata: *assetMetadata\n        metadata_error:\n          type: string\n          description: |\n            If there was an error fetching metadata from the server,\n            this will be set to one of `fetch` or `parse`, to indicate\n            the kind of error.\n          enum:\n            - fetch\n            - parse\n\n    ApiWalletMigrationBalance: \u0026ApiWalletMigrationBalance\n      type: object\n      required:\n        - ada\n        - assets\n      properties:\n        ada: *amount\n        assets: *walletAssets\n\n    ApiWalletMigrationPlan: \u0026ApiWalletMigrationPlan\n      type: object\n      required:\n        - selections\n        - total_fee\n        - balance_leftover\n        - balance_selected\n      properties:\n        selections:\n          type: array\n          items: *ApiCoinSelection\n          description: |\n            The complete set of selections required for a migration.\n\n            Each selection is the basis for a single transaction.\n\n            The ordering of selections within the list is not significant.\n            After conversion into transactions, the transactions can be\n            broadcast to the network in any order to perform the migration.\n        total_fee:\n          \u003c\u003c: *amount\n          description: |\n            The total amount to be paid in fees for a migration.\n\n            This is the total sum of the fees of the individual selections.\n        balance_leftover:\n          \u003c\u003c: *ApiWalletMigrationBalance\n          description: |\n            The total balance of assets that **cannot** be migrated.\n\n            The **ada** component of this balance is the total sum of all dust\n            ada entries in the UTxO set. An ada entry is considered to be dust\n            if its value is not large enough to pay for the marginal cost of\n            including it in a transaction.\n\n            The **assets** component of this balance is the total sum of all\n            non-ada assets that cannot currently be migrated. Tokens of a\n            non-ada asset cannot be migrated if there is insufficient ada\n            available to pay for their inclusion in a transaction.\n        balance_selected:\n          \u003c\u003c: *ApiWalletMigrationBalance\n          description: |\n            The total balance of assets that **can** be migrated.\n\n    ApiWalletPassphrase: \u0026ApiWalletPassphrase\n      type: object\n      required:\n        - passphrase\n      properties:\n        passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The source wallet's master passphrase.\n\n    ApiWalletMigrationPlanPostData: \u0026ApiWalletMigrationPlanPostData\n      type: object\n      required:\n        - addresses\n      properties:\n        addresses:\n          \u003c\u003c: *addresses\n          description: The recipient addresses.\n\n    ApiByronWalletMigrationPostData: \u0026ApiByronWalletMigrationPostData\n      type: object\n      required:\n        - passphrase\n        - addresses\n      properties:\n        passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The wallet's master passphrase.\n        addresses:\n          \u003c\u003c: *addresses\n          description: The recipient addresses.\n\n    ApiShelleyWalletMigrationPostData: \u0026ApiShelleyWalletMigrationPostData\n      type: object\n      required:\n        - passphrase\n        - addresses\n      properties:\n        passphrase:\n          \u003c\u003c: *walletPassphrase\n          description: The wallet's master passphrase.\n        addresses:\n          \u003c\u003c: *addresses\n          description: The recipient addresses.\n\n    ApiWalletUtxoSnapshotEntry: \u0026ApiWalletUtxoSnapshotEntry\n      type: object\n      required:\n        - ada\n        - ada_minimum\n        - assets\n      properties:\n        ada:\n          \u003c\u003c: *amount\n          description: |\n            The ada quantity associated with this UTxO entry.\n        ada_minimum:\n          \u003c\u003c: *amount\n          description: |\n            The minimum ada quantity permitted by the ledger for this UTxO\n            entry.\n        assets:\n          \u003c\u003c: *walletAssets\n          description: |\n            The set of non-ada assets associated with this UTxO entry.\n\n    ApiWalletUtxoSnapshot: \u0026ApiWalletUtxoSnapshot\n      type: object\n      required:\n        - entries\n      properties:\n        entries:\n          type: array\n          items: *ApiWalletUtxoSnapshotEntry\n          minItems: 0\n          description: |\n            The complete set of UTxO entries associated with a wallet.\n\n    ApiWalletUTxOsStatistics: \u0026ApiWalletUTxOsStatistics\n      type: object\n      required:\n        - total\n        - scale\n        - distribution\n      properties:\n        total: *amount\n        scale:\n          type: string\n          enum:\n            - log10\n        distribution:\n          type: object\n          additionalProperties:\n            type: integer\n      example:\n        total:\n          quantity: 42000000\n          unit: lovelace\n        scale: log10\n        distribution:\n          10: 1\n          100: 0\n          1000: 8\n          10000: 14\n          100000: 32\n          1000000: 3\n          10000000: 0\n          100000000: 12\n          1000000000: 0\n          10000000000: 0\n          100000000000: 0\n          1000000000000: 0\n          10000000000000: 0\n          100000000000000: 0\n          1000000000000000: 0\n          10000000000000000: 0\n          45000000000000000: 0\n\n    ApiWalletSignData: \u0026ApiWalletSignData\n        type: object\n        required:\n          - passphrase\n          - metadata\n        properties:\n          passphrase: *lenientPassphrase\n          metadata: *transactionMetadata\n\n    ApiScript: \u0026ApiScript\n      \u003c\u003c: *script\n\n    ApiPubKey: \u0026ApiPubKey\n      \u003c\u003c: *credentialPubKey\n\n    AnyAddress: \u0026AnyAddress\n      type: object\n      required:\n        - address\n      properties:\n        address: *anyAddress\n\n    ApiCredential: \u0026ApiCredential\n      \u003c\u003c: *CredentialValue\n\n    ApiAddressData: \u0026ApiAddressData\n      type: object\n      nullable: false\n      properties:\n        payment: *ApiCredential\n        stake:\n          \u003c\u003c: *ApiCredential\n          example: stake_vk16apaenn9ut6s40lcw3l8v68xawlrlq20z2966uzcx8jmv2q9uy7qau558d\n        validation: *validationLevel\n\n    ApiByronWalletRandomPostData: \u0026ApiByronWalletRandomPostData\n      type: object\n      required:\n        - name\n        - mnemonic_sentence\n        - passphrase\n      properties:\n        style:\n          type: string\n          enum: [\"random\"]\n        name: *walletName\n        passphrase: *walletPassphrase\n        mnemonic_sentence:\n          \u003c\u003c: *walletMnemonicSentence\n          minItems: 12\n          maxItems: 24\n\n    ApiByronWalletRandomXPrvPostData: \u0026ApiByronWalletRandomXPrvPostData\n      type: object\n      description: patate\n      required:\n        - name\n        - encrypted_root_private_key\n        - passphrase_hash\n      properties:\n        style:\n          type: string\n          enum: [\"random\"]\n        name: *walletName\n        encrypted_root_private_key:\n          \u003c\u003c: *walletEncryptedRootPrivateKey\n          deprecated: true\n\n        passphrase_hash:\n          \u003c\u003c: *walletPassphraseHash\n          deprecated: true\n\n    ApiByronWalletIcarusPostData: \u0026ApiByronWalletIcarusPostData\n      type: object\n      required:\n        - name\n        - mnemonic_sentence\n        - passphrase\n      properties:\n        style:\n          type: string\n          enum: [\"icarus\"]\n        name: *walletName\n        passphrase: *walletPassphrase\n        mnemonic_sentence:\n          \u003c\u003c: *walletMnemonicSentence\n          minItems: 12\n          maxItems: 24\n\n    ApiByronWalletTrezorPostData: \u0026ApiByronWalletTrezorPostData\n      type: object\n      required:\n        - name\n        - mnemonic_sentence\n        - passphrase\n      properties:\n        style:\n          type: string\n          enum: [\"trezor\"]\n        name: *walletName\n        passphrase: *walletPassphrase\n        mnemonic_sentence:\n          \u003c\u003c: *walletMnemonicSentence\n          minItems: 12\n          maxItems: 24\n\n    ApiByronWalletLedgerPostData: \u0026ApiByronWalletLedgerPostData\n      type: object\n      required:\n        - name\n        - mnemonic_sentence\n        - passphrase\n      properties:\n        style:\n          type: string\n          enum: [\"ledger\"]\n        name: *walletName\n        passphrase: *walletPassphrase\n        mnemonic_sentence:\n          \u003c\u003c: *walletMnemonicSentence\n          minItems: 12\n          maxItems: 24\n\n    ApiWalletPutData: \u0026ApiWalletPutData\n      type: object\n      properties:\n        name: *walletName\n\n    ApiPostAccountKeyData: \u0026ApiPostAccountKeyData\n      type: object\n      required:\n        - passphrase\n        - format\n      properties:\n        passphrase: *walletPassphrase\n        format: *keyExtended\n\n    ApiPostAccountKeyDataWithPurpose: \u0026ApiPostAccountKeyDataWithPurpose\n      type: object\n      required:\n        - passphrase\n        - format\n      properties:\n        passphrase: *walletPassphrase\n        format: *keyExtended\n        purpose: *derivationSegment\n\n    ApiSettingsPutData: \u0026ApiSettingsPutData\n      type: object\n      properties:\n        settings: *settings\n\n    ApiSmashServer: \u0026ApiSmashServer\n      type: string\n      pattern: '^https?:\\/\\/[a-zA-Z0-9-_~.]+(:[0-9]+)?/?$'\n      example: https://smash.cardano-mainnet.iohk.io/\n      description: A base SMASH uri without endpoint path.\n\n    ApiHealthCheck: \u0026ApiHealthCheck\n      type: object\n      required:\n        - health\n      properties:\n        health:\n          type: string\n          enum: [\"available\", \"unavailable\", \"unreachable\", \"no_smash_configured\"]\n      description: |\n        The status of the SMASH server. Possible values are:\n\n        health                  | description\n        ---                     | ---\n        `\"available\"`           | server is awaiting your requests\n        `\"unavailable\"`         | server is running, but currently unavailable, try again in a short time\n        `\"unreachable\"`         | server could not be reached or didn't return a health status\n        `\"no_smash_configured\"` | SMASH is currently not configured, adjust the Settings first\n\n    ApiWalletPutPassphraseData: \u0026ApiWalletPutPassphraseData\n      type: object\n      required:\n        - old_passphrase\n        - new_passphrase\n      properties:\n        old_passphrase:\n          \u003c\u003c: *walletPassphrase\n          description: The current passphrase.\n        new_passphrase:\n          \u003c\u003c: *walletPassphrase\n          description: A master passphrase to lock and protect the wallet for sensitive operation (e.g. sending funds).\n\n    ApiByronWalletPutPassphraseData: \u0026ApiByronWalletPutPassphraseData\n      type: object\n      required:\n        - new_passphrase\n      properties:\n        old_passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The current passphrase if present.\n        new_passphrase:\n          \u003c\u003c: *walletPassphrase\n          description: A master passphrase to lock and protect the wallet for sensitive operation (e.g. sending funds).\n\n    ApiSignTransactionPostData: \u0026ApiSignTransactionPostData\n      type: object\n      required:\n        - passphrase\n        - transaction\n      properties:\n        passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The wallet's master passphrase.\n        transaction: *serialisedTransactionEncoded\n\n    # ADP-908 Deprecated\n    ApiPostTransactionDataByron: \u0026ApiPostTransactionDataByron\n      type: object\n      required:\n        - payments\n        - passphrase\n      properties:\n        payments: *transactionOutputs\n        passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The wallet's master passphrase.\n\n    # ADP-908 Deprecated\n    ApiPostTransactionData: \u0026ApiPostTransactionData\n      type: object\n      required:\n        - payments\n        - passphrase\n      properties:\n        passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The wallet's master passphrase.\n        payments: *transactionOutputs\n        withdrawal: *transactionWithdrawalRequestSelf\n        metadata: *transactionMetadata\n        time_to_live: *transactionTTL\n\n    # ADP-908 Deprecated\n    ApiPostRedemptionData: \u0026ApiPostRedemptionData\n      type: object\n      required:\n        - payments\n        - passphrase\n        - withdrawal\n      properties:\n        passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The wallet's master passphrase.\n        payments: *transactionOutputs\n        withdrawal: *transactionRedemptionRequest\n\n    # ADP-910 Deprecated\n    ApiPostTransactionFeeDataByron: \u0026ApiPostTransactionFeeDataByron\n      type: object\n      required:\n        - payments\n      properties:\n        payments: *transactionOutputs\n\n    # ADP-910 Deprecated\n    ApiPostTransactionFeeData: \u0026ApiPostTransactionFeeData\n      type: object\n      required:\n        - payments\n      properties:\n        payments: *transactionOutputs\n        withdrawal: *transactionWithdrawalRequestSelf\n        metadata: *transactionMetadata\n        time_to_live: *transactionTTL\n\n    # ADP-910 Deprecated\n    ApiPostRedemptionFeeData: \u0026ApiPostRedemptionFeeData\n      type: object\n      required:\n        - payments\n        - withdrawal\n      properties:\n        payments: *transactionOutputs\n        withdrawal: *transactionRedemptionRequest\n\n    ApiPostRandomAddressData: \u0026ApiPostRandomAddressData\n      type: object\n      required:\n        - passphrase\n      properties:\n        passphrase: *lenientPassphrase\n        address_index: *addressIndex\n\n    ApiValidityInterval: \u0026ApiValidityInterval\n      description: |\n        \u003cp\u003estatus: \u003cstrong\u003e⚠ under development\u003c/strong\u003e\u003c/p\u003e\n      type: object\n      required:\n        - invalid_before\n        - invalid_hereafter\n      properties:\n        invalid_before: *validityBound\n        invalid_hereafter: *validityBound\n\n    ApiPaymentDestination: \u0026ApiPaymentDestination\n      oneOf:\n        - title: outputs with specified amounts\n          \u003c\u003c: *transactionOutputs\n        - title: outputs without amounts\n          \u003c\u003c: *transactionNoAmountOutputs\n\n    ApiConstructTransactionData: \u0026ApiConstructTransactionData\n      description: At least one field needs to be choosen\n      type: object\n      properties:\n        payments: *ApiPaymentDestination\n        withdrawal: *transactionWithdrawalRequestSelf\n        metadata: *transactionMetadata\n        mint: *transactionMint\n        delegations: *transactionDelegations\n        validity_interval: *ApiValidityInterval\n\n    CredentialValue: *CredentialValue\n\n    ScriptValue: *ScriptValue\n\n    ScriptTemplateValue: *ScriptTemplateValue\n\n    # https://github.com/input-output-hk/cardano-ledger/blob/8d836e61bb88bda4a6a5c00694735928390067a1/shelley/chain-and-ledger/executable-spec/src/Shelley/Spec/Ledger/MetaData.hs#L48-L65\n    TransactionMetadataValue: \u0026TransactionMetadataValue\n      oneOf:\n        - title: String\n          type: object\n          required:\n            - string\n          properties:\n            string:\n              type: string\n              maxLength: 64\n\n        - title: Int\n          type: object\n          required:\n            - int\n          properties:\n            int:\n              type: integer\n\n        - title: ByteString\n          type: object\n          required:\n            - bytes\n          properties:\n            bytes:\n              type: string\n              pattern: \"^[0-9a-fA-F]*$\"\n              maxLength: 128\n\n        - title: List\n          type: object\n          required:\n            - list\n          properties:\n            list:\n              type: array\n              items:\n                $ref: \"#/components/schemas/TransactionMetadataValue\"\n\n        - title: Map\n          type: object\n          required:\n            - map\n          properties:\n            map:\n              type: array\n              items:\n                type: object\n                properties:\n                  k:\n                    $ref: \"#/components/schemas/TransactionMetadataValue\"\n                  v:\n                    $ref: \"#/components/schemas/TransactionMetadataValue\"\n\n    ApiGetSettings: \u0026ApiGetSettings\n      type: object\n      required:\n        - pool_metadata_source\n      properties:\n        pool_metadata_source: *poolMetadataSource\n\n    SomeByronWalletPostData: \u0026SomeByronWalletPostData\n      oneOf:\n        - \u003c\u003c: *ApiByronWalletRandomPostData\n          title: random\n        - \u003c\u003c: *ApiByronWalletIcarusPostData\n          title: icarus\n        - \u003c\u003c: *ApiByronWalletTrezorPostData\n          title: trezor\n        - \u003c\u003c: *ApiByronWalletLedgerPostData\n          title: ledger\n        - \u003c\u003c: *ApiAccountPostData\n          title: icarus/trezor/ledger (from xpub)\n        - \u003c\u003c: *ApiByronWalletRandomXPrvPostData\n          title: random (from xprv)\n\n    ApiOurStakeKey: \u0026ApiOurStakeKey\n      type: object\n      required:\n        - index\n        - key\n        - stake\n        - reward_balance\n        - delegation\n      properties:\n        index: *softIndex\n        key: *stakeAddress\n        stake: *amount\n        reward_balance: *amount\n        delegation: *ApiWalletDelegation\n\n    ApiForeignStakeKey: \u0026ApiForeignStakeKey\n      type: object\n      required:\n        - key\n        - stake\n        - reward_balance\n      properties:\n        key: *stakeAddress\n        stake: *amount\n        reward_balance: *amount\n    ApiNullStakeKey: \u0026ApiNullStakeKey\n      type: object\n      required:\n        - stake\n      properties:\n        stake: *amount\n      description: |\n        The absence of a stake key. The `stake` field shows how much of the wallet funds\n        are not associated with an identifiable stake key.\n\n        Most likely, these funds are associated with enterprise addresses lacking staking rights.\n        But they /could/ also be associate with more rare types of addreses like pointer addresses.\n    ApiStakeKeys: \u0026ApiStakeKeys\n      type: object\n      required:\n        - ours\n        - foreign\n        - \"none\"\n      properties:\n        ours:\n          type: array\n          items: *ApiOurStakeKey\n          description: |\n            Stake keys belonging to the wallet.\n        foreign:\n          type: array\n          items: *ApiForeignStakeKey\n          description: |\n            Stake keys found in the wallet's UTxO, but does not belong to the wallet.\n\n        \"none\": *ApiNullStakeKey\n\n    ApiMintedBurnedInfo: \u0026ApiMintedBurnedInfo\n      type: object\n      required:\n        - monetary_policy_index\n        - policy_id\n        - asset_name\n        - subject\n        - script\n      properties:\n        monetary_policy_index: *derivationSegment\n        policy_id: *assetPolicyId\n        asset_name: *assetName\n        subject: *assetFingerprint\n        script:\n          \u003c\u003c: *ScriptValue\n          description: The script under which this asset was minted or burned.\n\n    ApiMintedBurnedTransaction: \u0026ApiMintedBurnedTransaction\n      type: object\n      required:\n        - transaction\n        - minted_burned\n      properties:\n        transaction:\n          \u003c\u003c: *ApiTransaction\n          description: Information about the mint/burn transaction submitted.\n        minted_burned:\n          type: array\n          items: *ApiMintedBurnedInfo\n          minItems: 1\n          description: An entry for each unique asset minted and/or burned, containing helpful information.\n\n    ApiAssetQuantity: \u0026ApiAssetQuantity\n      type: object\n      required:\n        - quantity\n        - unit\n      properties:\n        quantity:\n          type: integer\n          example: 14\n        unit:\n          type: string\n          enum:\n            - assets\n\n    ApiMintData: \u0026ApiMintData\n      type: object\n      required:\n        - receiving_address\n        - amount\n      properties:\n        receiving_address: *addressId\n        amount: *ApiAssetQuantity\n\n    ApiBurnData: \u0026ApiBurnData\n      allOf:\n        - *ApiAssetQuantity\n\n    ApiMintBurnOperation: \u0026ApiMintBurnOperation\n      type: object\n      oneOf:\n        - title: \"mint\"\n          properties:\n            mint: *ApiMintData\n        - title: \"burn\"\n          properties:\n            burn: *ApiBurnData\n\n    ApiMintBurnData: \u0026ApiMintBurnData\n      type: object\n      required:\n        - asset_name\n        - operation\n      properties:\n        monetary_policy_index:\n          allOf:\n            - *derivationSegment\n            - type: string\n              default: 0\n        asset_name: *assetName\n        operation: *ApiMintBurnOperation\n\n    ApiPostMintBurnAssetData: \u0026ApiPostMintBurnAssetData\n      type: object\n      required:\n        - mint_burn\n        - passphrase\n      properties:\n        mint_burn:\n          type: array\n          items: *ApiMintBurnData\n          minItems: 1\n        passphrase:\n          \u003c\u003c: *lenientPassphrase\n          description: The wallet's master passphrase.\n        metadata: *transactionMetadata\n        time_to_live: *transactionTTL\n\n    ApiRedeemerSpending: \u0026ApiRedeemerSpending\n      type: object\n      required:\n        - purpose\n        - data\n        - input\n      properties:\n        purpose:\n          type: string\n          enum: [\"spending\"]\n        data:\n          type: string\n          format: base16\n        input:\n          type: object\n          required:\n            - id\n            - index\n          properties:\n            id: *transactionId\n            index:\n              type: integer\n              minimum: 0\n\n    ApiRedeemerMinting: \u0026ApiRedeemerMinting\n      type: object\n      required:\n        - purpose\n        - data\n        - policy_id\n      properties:\n        purpose:\n          type: string\n          enum: [\"minting\"]\n        data:\n          type: string\n          format: base16\n        policy_id:\n          type: string\n          format: hex\n          maxLength: 56\n\n    ApiRedeemerRewarding: \u0026ApiRedeemerRewarding\n      type: object\n      required:\n        - purpose\n        - data\n        - stake_address\n      properties:\n        purpose:\n          type: string\n          enum: [\"rewarding\"]\n        data:\n          type: string\n          format: base16\n        stake_address: *stakeAddress\n\n    ApiRedeemer: \u0026ApiRedeemer\n      oneOf:\n        - title: spending\n          \u003c\u003c: *ApiRedeemerSpending\n\n        - title: minting\n          \u003c\u003c: *ApiRedeemerMinting\n\n        - title: rewarding\n          \u003c\u003c: *ApiRedeemerRewarding\n\n    ApiBalanceTransactionPostData: \u0026ApiBalanceTransactionPostData\n      type: object\n      required:\n        - transaction\n      properties:\n        transaction: *serialisedTransactionEncoded\n        inputs:\n            description: A list of additional transaction inputs foreign to the wallet.\n            type: array\n            items:\n              type: object\n              required:\n                - id\n                - index\n                - address\n                - amount\n                - assets\n              properties:\n                id: *transactionId\n                index:\n                  type: integer\n                  minimum: 0\n                address: *addressId\n                amount: *amount\n                datum: *datum\n                assets: *walletAssets\n        redeemers:\n            description: A list of redeemers data with their purpose.\n            type: array\n            items: *ApiRedeemer\n\n\n#############################################################################\n#                                                                           #\n#                               PARAMETERS                                  #\n#                                                                           #\n#############################################################################\n\nx-parametersWalletId: \u0026parametersWalletId\n  in: path\n  name: walletId\n  required: true\n  schema:\n    type: string\n    format: hex\n    maxLength: 40\n    minLength: 40\n\nx-parametersIntendedStakeAmount: \u0026parametersIntendedStakeAmount\n  in: query\n  name: stake\n  required: true\n  schema:\n    type: integer\n    minimum: 0\n    maximum: 45_000_000_000_000_000 # 45 B ada (in Lovelace)\n  description: |\n    The stake the user intends to delegate in Lovelace. Required.\n\nx-parametersTransactionId: \u0026parametersTransactionId\n  in: path\n  name: transactionId\n  required: true\n  schema:\n    type: string\n    format: hex\n    maxLength: 64\n    minLength: 64\n\nx-parametersStakePoolId: \u0026parametersStakePoolId\n  in: path\n  name: stakePoolId\n  required: true\n  schema:\n    type: string\n    format: hex|bech32\n\nx-parametersAddressId:  \u0026parametersAddressId\n  in: path\n  name: addressId\n  required: true\n  schema:\n    type: string\n    format: base58\n    example: DdzFFzCqrhtCNjPk5Lei7E1FxnoqMoAYtJ8VjAWbFmDb614nNBWBwv3kt6QHJa59cGezzf6piMWsbK7sWRB5sv325QqWdRuusMqqLdMt\n\nx-parametersRole: \u0026parametersRole\n  in: path\n  name: role\n  required: true\n  schema:\n    type: string\n    enum:\n    - utxo_external\n    - utxo_internal\n    - mutable_account\n\nx-parametersDerivationSegment: \u0026parametersDerivationSegment\n  in: path\n  name: index\n  required: true\n  schema: *derivationSegment\n\nx-parametersDerivationHash: \u0026parametersDerivationHash\n  in: query\n  name: hash\n  schema:\n    type: boolean\n    default: false\n  description: |\n    Whether to return the key hash instead of the key.\n\nx-parametersStartDate: \u0026parametersStartDate\n  in: query\n  name: start\n  description: |\n    An optional start time in ISO 8601 date-and-time format. Basic and\n    extended formats are both accepted. Times can be local (with a\n    timezone offset) or UTC.\n\n    If both a start time and an end time are specified, then the start\n    time must not be later than the end time.\n\n    Example: `2008-08-08T08:08:08Z`\n  schema:\n    type: string\n    format: ISO 8601\n\nx-parametersEndDate: \u0026parametersEndDate\n  in: query\n  name: end\n  description: |\n    An optional end time in ISO 8601 date-and-time format. Basic and\n    extended formats are both accepted. Times can be local (with a\n    timezone offset) or UTC.\n\n    If both a start time and an end time are specified, then the start\n    time must not be later than the end time.\n\n    Example: `2008-08-08T08:08:08Z`\n  schema:\n    type: string\n    format: ISO 8601\n\nx-parametersSortOrder: \u0026parametersSortOrder\n  in: query\n  name: order\n  description: An optional sort order.\n  schema:\n    type: string\n    enum:\n      - ascending\n      - descending\n    default: descending\n\nx-parametersAddressState: \u0026parametersAddressState\n  in: query\n  name: state\n  description: An optional filter on the address state.\n  schema:\n    type: string\n    enum:\n      - used\n      - unused\n\nx-parametersForceNtpCheck: \u0026parametersForceNtpCheck\n  in: query\n  name: forceNtpCheck\n  allowEmptyValue: true\n  description: |\n    NTP checks are cached for short duration to avoid sending too many queries to the central NTP servers. In some cases however, a client may want to force a new check.\n\n    When this flag is set, the request **will block** until NTP server responds or will timeout after a while without any answer from the NTP server.\n  schema:\n    type: boolean\n\nx-parametersMinWithdrawal: \u0026parametersMinWithdrawal\n  in: query\n  name: minWithdrawal\n  description: |\n    Returns only transactions that have at least one withdrawal above the given amount.\n    This is particularly useful when set to `1` in order to list the withdrawal history of a wallet.\n  schema:\n    type: integer\n    minimum: 1\n\nx-parametersPolicyId: \u0026parametersPolicyId\n  in: path\n  name: policyId\n  required: true\n  schema:\n    type: string\n    format: hex\n    maxLength: 56\n    minLength: 56\n\nx-parametersAssetName: \u0026parametersAssetName\n  in: path\n  name: assetName\n  required: true\n  schema:\n    type: string\n    format: hex\n    maxLength: 64\n\n#############################################################################\n#                                                                           #\n#                                RESPONSES                                  #\n#                                                                           #\n#############################################################################\n\nx-responsesErr: \u0026responsesErr\n  type: object\n  required:\n    - message\n    - code\n  properties:\n    message:\n      type: string\n      description: A descriptive error message.\n    code:\n      type: string\n      description: A specific error code for this error, more precise than HTTP ones.\n      example: an_error_code\n\nx-errNotFound: \u0026errNotFound\n  \u003c\u003c: *responsesErr\n  title: not_found\n  properties:\n    message:\n      type: string\n      description: A descriptive error message.\n    code:\n      type: string\n      enum: ['not_found']\n\nx-errSoftDerivationRequired: \u0026errSoftDerivationRequired\n  \u003c\u003c: *responsesErr\n  title: not_found\n  properties:\n    message:\n      type: string\n      description: A descriptive error message.\n    code:\n      type: string\n      enum: ['soft_derivation_required']\n\nx-errHardenedDerivationRequired: \u0026errHardenedDerivationRequired\n  \u003c\u003c: *responsesErr\n  title: not_found\n  properties:\n    message:\n      type: string\n      description:\n        Occurs when hardened derivation is required and soft index is used\n        (without suffix 'H').\n    code:\n      type: string\n      enum: ['hardened_derivation_required']\n\nx-errNoSuchWallet: \u0026errNoSuchWallet\n  \u003c\u003c: *responsesErr\n  title: no_such_wallet\n  properties:\n    message:\n      type: string\n      description: |\n        May occur when a given walletId does not match with any known\n        wallets (because it has been deleted, or has never existed).\n    code:\n      type: string\n      enum: ['no_such_wallet']\n\nx-errNoSuchTransaction: \u0026errNoSuchTransaction\n  \u003c\u003c: *responsesErr\n  title: no_such_transaction\n  properties:\n    message:\n      type: string\n      description: May occur when a given transactionId does not match with any known transactions.\n    code:\n      type: string\n      enum: ['no_such_transaction']\n\nx-errTransactionAlreadyInLedger: \u0026errTransactionAlreadyInLedger\n  \u003c\u003c: *responsesErr\n  title: transaction_already_in_ledger\n  properties:\n    message:\n      type: string\n      description: Occurs when attempting to delete a transaction which is neither pending nor expired.\n    code:\n      type: string\n      enum: ['transaction_already_in_ledger']\n\nx-errWalletAlreadyExists: \u0026errWalletAlreadyExists\n  \u003c\u003c: *responsesErr\n  title: wallet_already_exists\n  properties:\n    message:\n      type: string\n      description: May occur when a otherwise valid request would yield a wallet that already exists.\n    code:\n      type: string\n      enum: ['wallet_already_exists']\n\nx-errNoRootKey: \u0026errNoRootKey\n  \u003c\u003c: *responsesErr\n  title: no_root_key\n  properties:\n    message:\n      type: string\n      description: May occur when an action require a signing key but the wallet has only access to verification keys.\n    code:\n      type: string\n      enum: ['no_root_key']\n\nx-errWrongEncryptionPassphrase: \u0026errWrongEncryptionPassphrase\n  \u003c\u003c: *responsesErr\n  title: wrong_encryption_passphrase\n  properties:\n    message:\n      type: string\n      description: May occur when the given spending passphrase is wrong.\n    code:\n      type: string\n      enum: ['wrong_encryption_passphrase']\n\nx-errMalformedTxPayload: \u0026errMalformedTxPayload\n  \u003c\u003c: *responsesErr\n  title: malformed_tx_payload\n  properties:\n    message:\n      type: string\n      description: May occur when submitting a malformed serialized transaction.\n    code:\n      type: string\n      enum: ['malformed_tx_payload']\n\nx-errTokensMintedButNotSpentOrBurned: \u0026errTokensMintedButNotSpentOrBurned\n  \u003c\u003c: *responsesErr\n  title: tokens_minted_but_not_spent_or_burned\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user mints funds but does not spend or burn them all.\n    code:\n      type: string\n      enum: ['tokens_minted_but_not_spent_or_burned']\n\n# TODO: Map this error to the place it belongs.\nx-errKeyNotFoundForAddress: \u0026errKeyNotFoundForAddress\n  \u003c\u003c: *responsesErr\n  title: key_not_found_for_address\n  properties:\n    message:\n      type: string\n      description: Should never happen unless the server screwed up and has lost track of previously known addresses.\n    code:\n      type: string\n      enum: ['key_not_found_for_address']\n\nx-errNotEnoughMoney: \u0026errNotEnoughMoney\n  \u003c\u003c: *responsesErr\n  title: not_enough_money\n  properties:\n    message:\n      type: string\n      description: May occur when there's not enough money in the wallet to cover a requested payment.\n    code:\n      type: string\n      enum: ['not_enough_money']\n\nx-errInsufficientCollateral: \u0026errInsufficientCollateral\n  \u003c\u003c: *responsesErr\n  title: insufficient_collateral\n  properties:\n    message:\n      type: string\n      description: |\n        May occur when the total balance of pure ada UTxOs in the wallet is\n        insufficient to cover the minimum collateral amount required for a\n        transaction requiring collateral.\n    code:\n      type: string\n      enum: ['insufficient_collateral']\n\nx-errTransactionIsTooBig: \u0026errTransactionIsTooBig\n  \u003c\u003c: *responsesErr\n  title: transaction_is_too_big\n  properties:\n    message:\n      type: string\n      description: May occur when the wallet can't cover for all requested outputs without making the transaction too large.\n    code:\n      type: string\n      enum: ['transaction_is_too_big']\n\nx-errCreatedMultidelegationTransaction: \u0026errCreatedMultidelegationTransaction\n  \u003c\u003c: *responsesErr\n  title: created_multidelegation_transaction\n  properties:\n    message:\n      type: string\n      description: Occurs when more than 1 delegation action is included in a transaction.\n    code:\n      type: string\n      enum: ['created_multidelegation_transaction']\n\nx-errCreatedMultiaccountTransaction: \u0026errCreatedMultiaccountTransaction\n  \u003c\u003c: *responsesErr\n  title: created_multiaccount_transaction\n  properties:\n    message:\n      type: string\n      description: Occurs when a delegation action does not use '0H' account.\n    code:\n      type: string\n      enum: ['created_multiaccount_transaction']\n\nx-errInputsDepleted: \u0026errInputsDepleted\n  \u003c\u003c: *responsesErr\n  title: inputs_depleted\n  properties:\n    message:\n      type: string\n      description: May occur when there's enough money to pay for a payment, but not enough UTxO to allow for paying each output independently.\n    code:\n      type: string\n      enum: ['inputs_depleted']\n\nx-errCannotCoverFee: \u0026errCannotCoverFee\n  \u003c\u003c: *responsesErr\n  title: cannot_cover_fee\n  properties:\n    message:\n      type: string\n      description: May occur when a transaction can't be balanced for fees.\n    code:\n      type: string\n      enum: ['cannot_cover_fee']\n\nx-errInvalidCoinSelection: \u0026errInvalidCoinSelection\n  \u003c\u003c: *responsesErr\n  title: invalid_coin_selection\n  properties:\n    message:\n      type: string\n      description: Should never happen unless the server screwed up with the creation of a coin selection.\n    code:\n      type: string\n      enum: ['invalid_coin_selection']\n\nx-errOutputTokenBundleSizeExceedsLimit: \u0026errOutputTokenBundleSizeExceedsLimit\n  \u003c\u003c: *responsesErr\n  title: output_token_bundle_size_exceeds_limit\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user-specified transaction output contains a token\n        bundle whose serialized length exceeds the limit supported by the\n        protocol.\n    code:\n      type: string\n      enum: ['output_token_bundle_size_exceeds_limit']\n\nx-errOutputTokenQuantityExceedsLimit: \u0026errOutputTokenQuantityExceedsLimit\n  \u003c\u003c: *responsesErr\n  title: output_token_quantity_exceeds_limit\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user-specified transaction output contains, for some\n        asset, a token quantity that exceeds the limit supported by the\n        protocol.\n    code:\n      type: string\n      enum: ['output_token_quantity_exceeds_limit']\n\nx-errSharedWalletNotPending: \u0026errSharedWalletNotPending\n  \u003c\u003c: *responsesErr\n  title: shared_wallet_not_pending\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user tries to add cosigner key to a shared wallet\n        that is active, not pending anymore.\n    code:\n      type: string\n      enum: ['shared_wallet_not_pending']\n\nx-errSharedWalletNoDelegationTemplate: \u0026errSharedWalletNoDelegationTemplate\n  \u003c\u003c: *responsesErr\n  title: shared_wallet_no_delegation_template\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user tries to add cosigner key to a shared wallet\n        for delegation, but the shared wallet misses the delegation template.\n    code:\n      type: string\n      enum: ['shared_wallet_no_delegation_template']\n\nx-errSharedWalletKeyAlreadyExists: \u0026errSharedWalletKeyAlreadyExists\n  \u003c\u003c: *responsesErr\n  title: shared_wallet_key_already_exists\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user tries to add cosigner key to a shared wallet\n        but the same key is already present in a given template.\n    code:\n      type: string\n      enum: ['shared_wallet_key_already_exists']\n\nx-errSharedWalletNoSuchCosigner: \u0026errSharedWalletNoSuchCosigner\n  \u003c\u003c: *responsesErr\n  title: shared_wallet_no_such_cosigner\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user tries to add cosigner key to a shared wallet\n        in script template that misses the cosigner.\n    code:\n      type: string\n      enum: ['shared_wallet_no_such_cosigner']\n\nx-errSharedWalletCannotUpdateKey: \u0026errSharedWalletCannotUpdateKey\n  \u003c\u003c: *responsesErr\n  title: shared_wallet_cannot_update_key\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user tries to update cosigner key that contains a key of a shared wallet.\n        Only other cosigner keys can be updated.\n    code:\n      type: string\n      enum: ['shared_wallet_cannot_update_key']\n\nx-errSharedWalletScriptTemplateInvalid: \u0026errSharedWalletScriptTemplateInvalid\n  \u003c\u003c: *responsesErr\n  title: shared_wallet_script_template_invalid\n  properties:\n    message:\n      type: string\n      description: |\n        Returned when a user tries to create a shared wallet with script template\n        that does not pass validation.\n    code:\n      type: string\n      enum: ['shared_wallet_script_template_invalid']\n\n# TODO: Map this error to the place it belongs.\nx-errNetworkUnreachable: \u0026errNetworkUnreachable\n  \u003c\u003c: *responsesErr\n  title: network_unreachable\n  properties:\n    message:\n      type: string\n      description: May occur when the connection with the node is lost or not responding.\n    code:\n      type: string\n      enum: ['network_unreachable']\n\n# TODO: Map this error to the place it belongs.\nx-errNetworkMisconfigured: \u0026errNetworkMisconfigured\n  \u003c\u003c: *responsesErr\n  title: network_misconfigured\n  properties:\n    message:\n      type: string\n      description: May occur when trying to connect to a wrong network (e.g. testnet instead of mainnet).\n    code:\n      type: string\n      enum: ['network_misconfigured']\n\n# TODO: Map this error to the place it belongs.\nx-errNetworkQueryFailed: \u0026errNetworkQueryFailed\n  \u003c\u003c: *responsesErr\n  title: network_query_failed\n  properties:\n    message:\n      type: string\n      description: Occurs when a ledger query fails in an unexpected manner.\n    code:\n      type: string\n      enum: ['network_query_failed']\n\nx-errCreatedInvalidTransaction: \u0026errCreatedInvalidTransaction\n  \u003c\u003c: *responsesErr\n  title: created_invalid_transaction\n  properties:\n    message:\n      type: string\n      description: Should never happen unless the server screwed up with the creation of transaction.\n    code:\n      type: string\n      enum: ['created_invalid_transaction']\n\nx-errForeignTransaction: \u0026errForeignTransaction\n  \u003c\u003c: *responsesErr\n  title: foreign_transaction\n  properties:\n    message:\n      type: string\n      description: Occurs when a transaction to be submitted does have neither input, output nor withdrawal belonging to a given wallet.\n    code:\n      type: string\n      enum: ['foreign_transaction']\n\nx-errMissingWitnessesInTransaction: \u0026errMissingWitnessesInTransaction\n  \u003c\u003c: *responsesErr\n  title: missing_witnesses_in_transaction\n  properties:\n    message:\n      type: string\n      description: Occurs when a transaction to be submitted is not fully signed.\n    code:\n      type: string\n      enum: ['missing_witnesses_in_transaction']\n\nx-errRejectedByCoreNode: \u0026errRejectedByCoreNode\n  \u003c\u003c: *responsesErr\n  title: rejected_by_core_node\n  properties:\n    message:\n      type: string\n      description: Should never happen unless the server screwed up with the creation of transaction.\n    code:\n      type: string\n      enum: ['rejected_by_core_node']\n\nx-errBadRequest: \u0026errBadRequest\n  \u003c\u003c: *responsesErr\n  title: bad_request\n  properties:\n    message:\n      type: string\n      description: |\n        May occur when a request is not well-formed; that is, it fails to parse\n        successfully. This could be the case when some required parameters\n        are missing or, when malformed values are provided.\n    code:\n      type: string\n      enum: ['bad_request']\n\nx-errMethodNotAllowed: \u0026errMethodNotAllowed\n  \u003c\u003c: *responsesErr\n  title: method_not_allowed\n  properties:\n    message:\n      type: string\n      description: May occur when sending a request on a wrong endpoint.\n    code:\n      type: string\n      enum: ['method_not_allowed']\n\nx-errNotAcceptable: \u0026errNotAcceptable\n  \u003c\u003c: *responsesErr\n  title: not_acceptable\n  properties:\n    message:\n      type: string\n      description: May occur when providing an invalid 'Accept' header.\n    code:\n      type: string\n      enum: ['not_acceptable']\n\nx-errUnsupportedMediaType: \u0026errUnsupportedMediaType\n  \u003c\u003c: *responsesErr\n  title: unsupported_media_type\n  properties:\n    message:\n      type: string\n      description: May occur when providing an invalid 'Content-Type' header.\n    code:\n      type: string\n      enum: ['unsupported_media_type']\n\n# TODO: Map this error to the place it belongs.\nx-errUnexpectedError: \u0026errUnexpectedError\n  \u003c\u003c: *responsesErr\n  title: unexpected_error\n  properties:\n    message:\n      type: string\n      description: Should never occur, unless the server screwed up badly.\n    code:\n      type: string\n      enum: ['unexpected_error']\n\nx-errStartTimeLaterThanEndTime: \u0026errStartTimeLaterThanEndTime\n  \u003c\u003c: *responsesErr\n  title: start_time_later_than_end_time\n  properties:\n    message:\n      type: string\n      description: May occur when a provided time-range is unsound.\n    code:\n      type: string\n      enum: ['start_time_later_than_end_time']\n\n# TODO: Map this error to the place it belongs.\nx-errUnableToDetermineCurrentEpoch: \u0026errUnableToDetermineCurrentEpoch\n  \u003c\u003c: *responsesErr\n  title: unable_to_determine_current_epoch\n  properties:\n    message:\n      type: string\n      description: May occur under rare circumstances if the underlying node isn't enough synced with the network.\n    code:\n      type: string\n      enum: ['unable_to_determine_current_epoch']\n\n# TODO: Map this error to the place it belongs.\nx-errNotSynced: \u0026errNotSynced\n  \u003c\u003c: *responsesErr\n  title: not_synced\n  properties:\n    message:\n      type: string\n      description: May occur under rare circumstances if the underlying node isn't enough synced with the network.\n    code:\n      type: string\n      enum: ['not_synced']\n\n# TODO: Map this error to the place it belongs.\nx-errNothingToMigrate: \u0026errNothingToMigrate\n  \u003c\u003c: *responsesErr\n  title: nothing_to_migrate\n  properties:\n    message:\n      type: string\n      description: May occur when trying to migrate a wallet that is empty or full of dust.\n    code:\n      type: string\n      enum: ['nothing_to_migrate']\n\nx-errNoSuchPool: \u0026errNoSuchPool\n  \u003c\u003c: *responsesErr\n  title: no_such_pool\n  properties:\n    message:\n      type: string\n      description: May occur when a given poolId does not match any known pool.\n    code:\n      type: string\n      enum: ['no_such_pool']\n\nx-errPoolAlreadyJoined: \u0026errPoolAlreadyJoined\n  \u003c\u003c: *responsesErr\n  title: pool_already_joined\n  properties:\n    message:\n      type: string\n      description: May occur when a given poolId matches the current delegation preferences of the wallet's account.\n    code:\n      type: string\n      enum: ['pool_already_joined']\n\nx-errNotDelegatingTo: \u0026errNotDelegatingTo\n  \u003c\u003c: *responsesErr\n  title: not_delegating_to\n  properties:\n    message:\n      type: string\n      description: May occur when trying to quit a pool on an account that isn't delegating.\n    code:\n      type: string\n      enum: ['not_delegating_to']\n\n# TODO: Map this error to the place it belongs.\nx-errNotImplemented: \u0026errNotImplemented\n  \u003c\u003c: *responsesErr\n  title: not_implemented\n  properties:\n    message:\n      type: string\n      description: May occur when reaching an endpoint under construction.\n    code:\n      type: string\n      enum: ['not_implemented']\n\n# TODO: Map this error to the place it belongs.\nx-errWalletNotResponding: \u0026errWalletNotResponding\n  \u003c\u003c: *responsesErr\n  title: wallet_not_responding\n  properties:\n    message:\n      type: string\n      description: Should never occur unless something really wrong happened causing a background worker to die.\n    code:\n      type: string\n      enum: ['wallet_not_responding']\n\n# TODO: Map this error to the place it belongs.\nx-errAddressAlreadyExists: \u0026errAddressAlreadyExists\n  \u003c\u003c: *responsesErr\n  title: address_already_exists\n  properties:\n    message:\n      type: string\n      description: May occur when trying to import an address that is already known of the wallet's account.\n    code:\n      type: string\n      enum: ['address_already_exists']\n\nx-errInvalidWalletType: \u0026errInvalidWalletType\n  \u003c\u003c: *responsesErr\n  title: invalid_wallet_type\n  properties:\n    message:\n      type: string\n      description: May occur when trying to perform an operation not supported by this type of wallet.\n    code:\n      type: string\n      enum: ['invalid_wallet_type']\n\nx-errQueryParamMissing: \u0026errQueryParamMissing\n  \u003c\u003c: *responsesErr\n  title: query_param_missing\n  properties:\n    message:\n      type: string\n      description: May occur when an endpoint requires the presence of a query parameter that is missing.\n    code:\n      type: string\n      enum: ['query_param_missing']\n\nx-errNonNullRewards: \u0026errNonNullRewards\n  \u003c\u003c: *responsesErr\n  title: non_null_rewards\n  properties:\n    message:\n      type: string\n      description: May occur when trying to unregister a stake key that still has rewards attached to it.\n    code:\n      type: string\n      enum: ['non_null_rewards']\n\nx-errUtxoTooSmall: \u0026errUtxoTooSmall\n  \u003c\u003c: *responsesErr\n  title: utxo_too_small\n  properties:\n    message:\n      type: string\n      description: May occur when a requested output is below the minimum utxo value.\n    code:\n      type: string\n      enum: ['utxo_too_small']\n\nx-errMinWithdrawalWrong: \u0026errMinWithdrawalWrong\n  \u003c\u003c: *responsesErr\n  title: min_withdrawal_wrong\n  properties:\n    message:\n      type: string\n      description: May occur when trying to withdraw less than the minimal UTxO value.\n    code:\n      type: string\n      enum: ['min_withdrawal_wrong']\n\nx-errAlreadyWithdrawing: \u0026errAlreadyWithdrawing\n  \u003c\u003c: *responsesErr\n  title: already_withdrawing\n  properties:\n    message:\n      type: string\n      description: May occur when submitting a withdrawal while another withdrawal is pending.\n    code:\n      type: string\n      enum: ['already_withdrawing']\n\n# TODO: Map this error to the place it belongs.\nx-errWithdrawalNotWorth: \u0026errWithdrawalNotWorth\n  \u003c\u003c: *responsesErr\n  title: withdrawal_not_worth\n  properties:\n    message:\n      type: string\n      description: May occur when withdrawing an amount would cost more than the withdrawn value.\n    code:\n      type: string\n      enum: ['withdrawal_not_worth']\n\n# TODO: Map this error to the place it belongs.\nx-errPastHorizon: \u0026errPastHorizon\n  \u003c\u003c: *responsesErr\n  title: past_horizon\n  properties:\n    message:\n      type: string\n      description: May occur in rare cases when converting slot to time can't be done, typically near hard-forks.\n    code:\n      type: string\n      enum: ['past_horizon']\n\n# TODO: Map this error to the place it belongs.\nx-errUnableToAssignInputOutput: \u0026errUnableToAssignInputOutput\n  \u003c\u003c: *responsesErr\n  title: unable_to_assign_input_output\n  properties:\n    message:\n      type: string\n      description: Should never occur unless the server screwed up with a coin selection.\n    code:\n      type: string\n      enum: ['unable_to_assign_input_output']\n\nx-errAssetNotPresent: \u0026errAssetNotPresent\n  \u003c\u003c: *responsesErr\n  title: asset_not_present\n  properties:\n    message:\n      type: string\n      description: |\n        Occurs when requesting information about an asset which is not\n        involved in any transaction related to the wallet.\n    code:\n      type: string\n      enum: ['asset_not_present']\n\nx-errTransactionAlreadyBalanced: \u0026errTransactionAlreadyBalanced\n  \u003c\u003c: *responsesErr\n  title: transaction_already_balanced\n  properties:\n    message:\n      type: string\n      description: |\n        Occurs when a transaction is already balanced.\n    code:\n      type: string\n      enum: ['transaction_already_balanced']\n\nx-errRedeemerScriptFailure: \u0026errRedeemerScriptFailure\n  \u003c\u003c: *responsesErr\n  title: redeemer_script_failure\n  properties:\n    message:\n      type: string\n      description: |\n        Occurs when balancing transaction with failing scripts.\n    code:\n      type: string\n      enum: ['redeemer_script_failure']\n\nx-errRedeemerTargetNotFound: \u0026errRedeemerTargetNotFound\n  \u003c\u003c: *responsesErr\n  title: redeemer_target_not_found\n  properties:\n    message:\n      type: string\n      description: |\n        Occurs when balancing transaction with reedemers that point to unknown entities.\n    code:\n      type: string\n      enum: ['redeemer_target_not_found']\n\nx-errUnresolvedInputs: \u0026errUnresolvedInputs\n  \u003c\u003c: *responsesErr\n  title: unresolved_inputs\n  properties:\n    message:\n      type: string\n      description: |\n        The transaction contains foreign inputs which cannot be resolved.\n    code:\n      type: string\n      enum: ['unknown_inputs']\n\nx-errRedeemerInvalidData: \u0026errRedeemerInvalidData\n  \u003c\u003c: *responsesErr\n  title: redeemer_invalid_data\n  properties:\n    message:\n      type: string\n      description: |\n        Occurs when data in provided redeemers do not decode to valid Plutus data.\n    code:\n      type: string\n      enum: ['redeemer_invalid_data']\n\nx-errExistingKeyWitnesses: \u0026errExistingKeyWitnesses\n  \u003c\u003c: *responsesErr\n  title: existing_key_witnesses\n  properties:\n    message:\n      type: string\n      description: |\n        Occurs when trying to balance a transaction that already has key witnesses.\n    code:\n      type: string\n      enum: ['existing_key_witnesses']\n\nx-responsesErr400: \u0026responsesErr400\n  400:\n    description: Bad Request\n    content:\n      application/json:\n        schema: *errBadRequest\n\nx-responsesErr403: \u0026responsesErr403\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema: *responsesErr\n\nx-responsesErr404: \u0026responsesErr404\n  404:\n    description: Not Found\n    content:\n      application/json:\n        schema: *responsesErr\n\nx-responsesErr406: \u0026responsesErr406\n  406:\n    description: Not Acceptable\n    content:\n      application/json:\n        schema: *errNotAcceptable\n\nx-responsesErr409: \u0026responsesErr409\n  409:\n    description: Conflict\n    content:\n      application/json:\n        schema: *responsesErr\n\nx-responsesErr410: \u0026responsesErr410\n  410:\n    description: Gone\n    content:\n      application/json:\n    schema: *responsesErr\n\nx-responsesErr415: \u0026responsesErr415\n  415:\n    description: Unsupported Media Type\n    content:\n      application/json:\n        schema: *responsesErr\n\nx-responsesErr423: \u0026responsesErr423\n  423:\n    description: Locked\n    content:\n      application/json:\n        schema: *responsesErr\n\nx-responsesErr404WalletNotFound: \u0026responsesErr404WalletNotFound\n  404:\n    description: Not Found\n    content:\n      application/json:\n        schema: *errNoSuchWallet\n\nx-responsesErr409WalletAlreadyExists: \u0026responsesErr409WalletAlreadyExists\n  409:\n    description: Conflict\n    content:\n      application/json:\n        schema: *errWalletAlreadyExists\n\nx-responsesErr415UnsupportedMediaType: \u0026responsesErr415UnsupportedMediaType\n  415:\n    description: Unsupported Media Type\n    content:\n      application/json:\n        schema: *errUnsupportedMediaType\n\nx-responsesListWallets: \u0026responsesListWallets\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiWallet\n\nx-responsesListSharedWallets: \u0026responsesListSharedWallets\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiSharedWallet\n\nx-responsesErr404AssetNotPresent: \u0026responsesErr404AssetNotPresent\n  404:\n    description: Not Found\n    content:\n      application/json:\n        schema: *errAssetNotPresent\n\nx-responsesListAssets: \u0026responsesListAssets\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiAsset\n\nx-responsesGetAsset: \u0026responsesGetAsset\n  \u003c\u003c: *responsesErr404AssetNotPresent\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiAsset\n\nx-responsesListByronWallets: \u0026responsesListByronWallets\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiByronWallet\n\nx-responsesGetUTxOsStatistics: \u0026responsesGetUTxOsStatistics\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiWalletUTxOsStatistics\n\nx-responsesGetWalletUtxoSnapshot: \u0026responsesGetWalletUtxoSnapshot\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiWalletUtxoSnapshot\n\nx-responsesPostWallet: \u0026responsesPostWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr409WalletAlreadyExists\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  201:\n    description: Created\n    content:\n      application/json:\n        schema: *ApiWallet\n\nx-responsesPostSharedWallet: \u0026responsesPostSharedWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr409WalletAlreadyExists\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errSharedWalletScriptTemplateInvalid\n  201:\n    description: Created\n    content:\n      application/json:\n        schema: *ApiSharedWallet\n\nx-responsesMintToken: \u0026responsesMintToken\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errInvalidWalletType\n            - \u003c\u003c: *errAlreadyWithdrawing\n            - \u003c\u003c: *errUtxoTooSmall\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errNotEnoughMoney\n            - \u003c\u003c: *errTransactionIsTooBig\n            - \u003c\u003c: *errNoRootKey\n            - \u003c\u003c: *errWrongEncryptionPassphrase\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiMintedBurnedTransaction\n\nx-responsesPostByronWallet: \u0026responsesPostByronWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr409\n  \u003c\u003c: *responsesErr415\n  201:\n    description: Created\n    content:\n      application/json:\n        schema: *ApiByronWallet\n\nx-responsesGetWallet: \u0026responsesGetWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiWallet\n\nx-responsesGetByronWallet: \u0026responsesGetByronWallet\n  \u003c\u003c: *responsesErr404\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiByronWallet\n\nx-responsesGetSharedWallet: \u0026responsesGetSharedWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiSharedWallet\n\nx-responsesPatchSharedWallet: \u0026responsesPatchSharedWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errSharedWalletKeyAlreadyExists\n            - \u003c\u003c: *errSharedWalletNoDelegationTemplate\n            - \u003c\u003c: *errSharedWalletNotPending\n            - \u003c\u003c: *errSharedWalletNoSuchCosigner\n            - \u003c\u003c: *errSharedWalletCannotUpdateKey\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiSharedWallet\n\nx-responsesCreateWalletMigrationPlan: \u0026responsesCreateWalletMigrationPlan\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema: *errNothingToMigrate\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiWalletMigrationPlan\n\nx-responsesMigrateWallet: \u0026responsesMigrateWallet\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errNothingToMigrate\n            - \u003c\u003c: *errNoRootKey\n            - \u003c\u003c: *errWrongEncryptionPassphrase\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiTransaction\n          minItems: 1\n\nx-responsesDeleteWallet: \u0026responsesDeleteWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  204:\n    description: No Content\n\nx-responsesForceResyncWallet: \u0026responsesForceResyncWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr403\n  \u003c\u003c: *responsesErr404\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415\n  204:\n    description: No Content\n\nx-responsesPutWallet: \u0026responsesPutWallet\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiWallet\n\nx-responsesPutWalletPassphrase: \u0026responsesPutWalletPassphrase\n  \u003c\u003c: *responsesErr400\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errNoRootKey\n            - \u003c\u003c: *errWrongEncryptionPassphrase\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  204:\n    description: No Content\n\nx-responsesSelectCoins: \u0026responsesSelectCoins\n  \u003c\u003c: *responsesErr400\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errAlreadyWithdrawing\n            - \u003c\u003c: *errUtxoTooSmall\n            - \u003c\u003c: *errNotEnoughMoney\n            - \u003c\u003c: *errInsufficientCollateral\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errInputsDepleted\n            - \u003c\u003c: *errInvalidCoinSelection\n            - \u003c\u003c: *errOutputTokenQuantityExceedsLimit\n            - \u003c\u003c: *errOutputTokenBundleSizeExceedsLimit\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  200:\n    description: OK\n    content:\n      application/json:\n        schema: *ApiCoinSelection\n\nx-responsesDeleteTransaction: \u0026responsesDeleteTransaction\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema: *errTransactionAlreadyInLedger\n  404:\n    description: Not Found\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errNoSuchWallet\n            - \u003c\u003c: *errNoSuchTransaction\n  \u003c\u003c: *responsesErr406\n  204:\n    description: No Content\n\nx-responsesListTransactions: \u0026responsesListTransactions\n  400:\n    description: Bad Request\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errMinWithdrawalWrong\n            - \u003c\u003c: *errStartTimeLaterThanEndTime\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    headers:\n      Content-Range:\n        schema:\n          type: string\n          format: inserted-at {range-start}-{range-end}/{total}\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiTransaction\n\nx-responsesGetTransaction: \u0026responsesGetTransaction\n  404:\n    description: Not Found\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errNoSuchWallet\n            - \u003c\u003c: *errNoSuchTransaction\n  \u003c\u003c: *responsesErr406\n  200:\n    description: OK\n    content:\n      application/json:\n        schema: *ApiTransaction\n\n# ADP-908 Deprecated\nx-responsesPostTransaction: \u0026responsesPostTransaction\n  \u003c\u003c: *responsesErr400\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errInvalidWalletType\n            - \u003c\u003c: *errAlreadyWithdrawing\n            - \u003c\u003c: *errUtxoTooSmall\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errNotEnoughMoney\n            - \u003c\u003c: *errInsufficientCollateral\n            - \u003c\u003c: *errTransactionIsTooBig\n            - \u003c\u003c: *errNoRootKey\n            - \u003c\u003c: *errWrongEncryptionPassphrase\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiTransaction\n\nx-responsesConstructTransaction: \u0026responsesConstructTransaction\n  400:\n    description: Bad Request\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errBadRequest\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errInvalidWalletType\n            - \u003c\u003c: *errAlreadyWithdrawing\n            - \u003c\u003c: *errUtxoTooSmall\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errNotEnoughMoney\n            - \u003c\u003c: *errInsufficientCollateral\n            - \u003c\u003c: *errTransactionIsTooBig\n            - \u003c\u003c: *errCreatedMultidelegationTransaction\n            - \u003c\u003c: *errCreatedMultiaccountTransaction\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiConstructTransaction\n\nx-responsesSignTransaction: \u0026responsesSignTransaction\n  \u003c\u003c: *responsesErr400\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errNoRootKey\n            - \u003c\u003c: *errWrongEncryptionPassphrase\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiSignedTransaction\n\nx-responsesDecodedTransaction: \u0026responsesDecodedTransaction\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiDecodedTransaction\n\nx-responsesSubmitTransaction: \u0026responsesSubmitTransaction\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiTxId\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errForeignTransaction\n            - \u003c\u003c: *errMissingWitnessesInTransaction\n            - \u003c\u003c: *errCreatedMultidelegationTransaction\n\nx-responsesPostExternalTransaction: \u0026responsesPostExternalTransaction\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiTxId\n\nx-responsesPostAnyAddress: \u0026responsesPostAnyAddress\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *AnyAddress\n\nx-responsesPostTransactionFee: \u0026responsesPostTransactionFee\n  400:\n    description: Bad Request\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errBadRequest\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errInvalidWalletType\n            - \u003c\u003c: *errAlreadyWithdrawing\n            - \u003c\u003c: *errUtxoTooSmall\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errNotEnoughMoney\n            - \u003c\u003c: *errInsufficientCollateral\n            - \u003c\u003c: *errInputsDepleted\n            - \u003c\u003c: *errInvalidCoinSelection\n            - \u003c\u003c: *errOutputTokenQuantityExceedsLimit\n            - \u003c\u003c: *errOutputTokenBundleSizeExceedsLimit\n            - \u003c\u003c: *errTransactionIsTooBig\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiFee\n\nx-responsesGetDelegationFee: \u0026responsesGetDelegationFee\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema: *errCannotCoverFee\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiFee\n\nx-responsesListAddresses: \u0026responsesListAddresses\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiAddress\n\nx-responsesGetShelleyKey: \u0026responsesGetShelleyKey\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiVerificationKeyShelley\n\nx-responsesGetSharedKey: \u0026responsesGetSharedKey\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiVerificationKeyShared\n\nx-responsesGetAccountSharedKey: \u0026responsesGetAccountSharedKey\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiAccountKeyShared\n\nx-responsesPostAccountKey: \u0026responsesPostAccountKey\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiAccountKey\n\nx-responsesGetAccountKey: \u0026responsesGetAccountKey\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr404\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiAccountKey\n\nx-responsesPostAccountKeyShared: \u0026responsesPostAccountKeyShared\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiAccountKeyShared\n\nx-responsesListStakePools: \u0026responsesListStakePools\n  400:\n    description: Bad Request\n    content:\n      application/json:\n        schema: *errQueryParamMissing\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema:\n          type: array\n          items: *ApiStakePool\n\nx-responsesListStakeKeys: \u0026responsesListStakeKeys\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiStakeKeys\n\nx-responsesPostMaintenanceAction: \u0026responsesPostMaintenanceAction\n  \u003c\u003c: *responsesErr404\n  204:\n    description: No Content\n\nx-responsesGetMaintenanceAction: \u0026responsesGetMaintenanceAction\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema:\n          \u003c\u003c: *ApiMaintenanceAction\n\nx-responsesJoinStakePool: \u0026responsesJoinStakePool\n  \u003c\u003c: *responsesErr400\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errNoRootKey\n            - \u003c\u003c: *errWrongEncryptionPassphrase\n            - \u003c\u003c: *errPoolAlreadyJoined\n  404:\n    description: Not Found\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errNoSuchWallet\n            - \u003c\u003c: *errNoSuchPool\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiTransaction\n\nx-responsesQuitStakePool: \u0026responsesQuitStakePool\n  \u003c\u003c: *responsesErr400\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errNoRootKey\n            - \u003c\u003c: *errWrongEncryptionPassphrase\n            - \u003c\u003c: *errNotDelegatingTo\n            - \u003c\u003c: *errNonNullRewards\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiTransaction\n\nx-responsesGetNetworkInformation: \u0026responsesGetNetworkInformation\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiNetworkInformation\n\nx-responsesGetNetworkClock: \u0026responsesGetNetworkClock\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiNetworkClock\n\nx-responsesGetNetworkParameters: \u0026responsesGetNetworkParameters\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiNetworkParameters\n\nx-responsesPostRandomAddress: \u0026responsesPostRandomAddress\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr403\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415\n  201:\n    description: Created\n    content:\n      application/json:\n        schema: *ApiAddress\n\nx-responsesPutRandomAddress: \u0026responsesPutRandomAddress\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr403\n  204:\n    description: No Content\n\nx-responsesPutRandomAddresses: \u0026responsesPutRandomAddresses\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr403\n  204:\n    description: No Content\n\nx-responsesInspectAddress: \u0026responsesInspectAddress\n  \u003c\u003c: *responsesErr400\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiAddressInspect\n\nx-responsesPutSettings: \u0026responsesPutSettings\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  204:\n    description: No Content\n\nx-responsesGetSettings: \u0026responsesGetSettings\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiGetSettings\n\nx-responsesPostSignatures: \u0026responsesPostSignatures\n    \u003c\u003c: *responsesErr400\n    \u003c\u003c: *responsesErr406\n    \u003c\u003c: *responsesErr415\n    200:\n      description: OK\n      content:\n        application/octet-stream:\n          schema:\n            type: string\n            format: binary\n\nx-responsesGetSmashHealth: \u0026responsesGetSmashHealth\n  \u003c\u003c: *responsesErr400\n  \u003c\u003c: *responsesErr406\n  200:\n    description: Ok\n    content:\n      application/json:\n        schema: *ApiHealthCheck\n\nx-responsesBalanceTransaction: \u0026responsesBalanceTransaction\n  400:\n    description: Bad Request\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errBadRequest\n            - \u003c\u003c: *errRedeemerScriptFailure\n            - \u003c\u003c: *errRedeemerTargetNotFound\n            - \u003c\u003c: *errRedeemerInvalidData\n            - \u003c\u003c: *errUnresolvedInputs\n  403:\n    description: Forbidden\n    content:\n      application/json:\n        schema:\n          oneOf:\n            - \u003c\u003c: *errInvalidWalletType\n            - \u003c\u003c: *errAlreadyWithdrawing\n            - \u003c\u003c: *errUtxoTooSmall\n            - \u003c\u003c: *errCannotCoverFee\n            - \u003c\u003c: *errNotEnoughMoney\n            - \u003c\u003c: *errInsufficientCollateral\n            - \u003c\u003c: *errTransactionIsTooBig\n            - \u003c\u003c: *errTransactionAlreadyBalanced\n            - \u003c\u003c: *errExistingKeyWitnesses\n  \u003c\u003c: *responsesErr404WalletNotFound\n  \u003c\u003c: *responsesErr406\n  \u003c\u003c: *responsesErr415UnsupportedMediaType\n  202:\n    description: Accepted\n    content:\n      application/json:\n        schema: *ApiSerialisedTransaction\n\n#############################################################################\n#                                                                           #\n#                                  PATHS                                    #\n#                                                                           #\n#############################################################################\n\nx-tagGroups:\n  - name: Shelley (Sequential)\n    tags:\n    - Wallets\n    - Assets\n    - Addresses\n    - Coin Selections\n    - Transactions\n    - Transactions New\n    - Migrations\n    - Stake Pools\n    - Keys\n\n  - name: Shelley (Shared Wallets)\n    tags:\n    - Shared Wallets\n    - Shared Keys\n    - Shared Addresses\n\n  - name: Byron (Random)\n    tags:\n    - Byron Wallets\n    - Byron Assets\n    - Byron Addresses\n    - Byron Coin Selections\n    - Byron Transactions\n    - Byron Migrations\n\n  - name: Miscellaneous\n    tags:\n    - Utils\n    - Network\n    - Proxy\n    - Settings\n    - Experimental\n\npaths:\n  /wallets/{walletId}/signatures/{role}/{index}:\n      post:\n        operationId: signMetadata\n        tags: [\"Experimental\"]\n        summary: Sign Metadata\n        description: |\n          \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eexperimental\u003c/strong\u003e\u003c/p\u003e\n\n          **⚠️ WARNING ⚠️**\n\n          This endpoint is experimental and for internal use in the Catalyst project. This\n          functionality will be refined in the forthcoming future and the interface is likely\n          to change in **NON-BACKWARD COMPATIBLE WAYS**.\n\n          \u003cb\u003eNote:\u003c/b\u003e Only `Soft` indexes are supported by this endpoint.\n        parameters:\n          - *parametersWalletId\n          - *parametersRole\n          - *parametersDerivationSegment\n        requestBody:\n          required: true\n          content:\n            application/json:\n              schema: *ApiWalletSignData\n        responses: *responsesPostSignatures\n\n  /wallets:\n    post:\n      operationId: postWallet\n      tags: [\"Wallets\"]\n      summary: Create / Restore\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Create and restore a wallet from a mnemonic sentence or account public key.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletOrAccountPostData\n      responses: *responsesPostWallet\n\n    get:\n      operationId: listWallets\n      tags: [\"Wallets\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return a list of known wallets, ordered from oldest to newest.\n      responses: *responsesListWallets\n\n  /wallets/{walletId}/assets:\n    get:\n      operationId: listAssets\n      tags: [\"Assets\"]\n      summary: List Assets\n      description: |\n        List all assets associated with the wallet, and their metadata\n        if known.\n\n        An asset is _associated_ with a wallet if it is involved in a\n        transaction of the wallet.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesListAssets\n\n    post:\n      operationId: mintBurnAssets\n      tags: [\"Assets\"]\n      summary: Mint/Burn\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eunder development\u003c/strong\u003e\u003c/p\u003e\n\n        Mint and burn assets from the wallet.\n\n        We only support the simplest of scripts: those which require a signature\n        from a single key (known as the policy key). The policy key is generated\n        from the HD wallet according to to draft CIP-1855\n        (https://github.com/cardano-foundation/CIPs/blob/b2e9d02cb9a71ba9e754a432c78197428abf7e4c/CIP-1855/CIP-1855.md).\n\n        Once the policy key is generated, cardano-wallet creates a script from\n        that key, which we then mint or burn assets under.\n\n        **⚠️ WARNING ⚠️**\n\n        Please note that due to the fact that there is no physical access to\n        policy keys under which assets are minted from the wallet it is\n        currently not possible to add metadata of such assets into [Cardano Token Registry](https://github.com/cardano-foundation/cardano-token-registry).\n\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \u003c\u003c: *ApiPostMintBurnAssetData\n      responses: *responsesMintToken\n\n  /wallets/{walletId}/assets/{policyId}/{assetName}:\n    get:\n      operationId: getAsset\n      tags: [\"Assets\"]\n      summary: Get Asset\n      description: |\n        Fetch a single asset from its `policy_id` and `asset_name`,\n        with its metadata if any.\n\n        The asset must be associated with the wallet.\n      parameters:\n        - *parametersWalletId\n        - *parametersPolicyId\n        - *parametersAssetName\n      responses: *responsesGetAsset\n\n  /wallets/{walletId}/assets/{policyId}:\n    get:\n      operationId: getAssetDefault\n      tags: [\"Assets\"]\n      summary: Get Asset (empty name)\n      description: |\n        Fetch the asset from `policy_id` with an empty name.\n\n        The asset must be associated with the wallet.\n      parameters:\n        - *parametersWalletId\n        - *parametersPolicyId\n      responses: *responsesGetAsset\n\n  /wallets/{walletId}/statistics/utxos:\n    get:\n      operationId: getUTxOsStatistics\n      tags: [\"Wallets\"]\n      summary: UTxO Statistics\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return the UTxOs distribution across the whole wallet, in the form of a histogram.\n\n        ```\n             │\n         100 ─\n             │\n             │                                 ┌───┐\n          10 ─                         ┌───┐   │   │                   ┌───┐\n             │                 ┌───┐   │   │   │   │                   │   │\n             │                 │   │   │   │   │   │   ┌───┐           │   │\n           1 ─ ┌───┐           │   │   │   │   │   │   │   │           │   │\n             │ │   │           │   │   │   │   │   │   │   │           │   │\n             │ │   │ │       │ │   │ │ │   │ ╷ │   │ ╷ │   │ ╷       ╷ │   │\n             └─┘   └─│───────│─┘   └─│─┘   └─│─┘   └─│─┘   └─│───────│─┘   └────\n                   10μ₳    100μ₳   1000μ₳   0.1₳    1₳      10₳     100₳\n        ```\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetUTxOsStatistics\n\n  /wallets/{walletId}/utxo:\n    get:\n      operationId: getWalletUtxoSnapshot\n      tags: [\"Wallets\"]\n      summary: A snapshot of the wallet's UTxO set\n      description: |\n        Generate a snapshot of the wallet's UTxO set.\n\n        This endpoint is intended for debugging purposes.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetWalletUtxoSnapshot\n\n  /wallets/{walletId}:\n    get:\n      operationId: getWallet\n      tags: [\"Wallets\"]\n      summary: Get\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetWallet\n\n    delete:\n      operationId: deleteWallet\n      tags: [\"Wallets\"]\n      summary: Delete\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - *parametersWalletId\n      responses: *responsesDeleteWallet\n\n    put:\n      operationId: putWallet\n      tags: [\"Wallets\"]\n      summary: Update Metadata\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletPutData\n      responses: *responsesPutWallet\n\n  /wallets/{walletId}/passphrase:\n    put:\n      operationId: putWalletPassphrase\n      tags: [\"Wallets\"]\n      summary: Update Passphrase\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletPutPassphraseData\n      responses: *responsesPutWalletPassphrase\n\n  /wallets/{walletId}/payment-fees:\n    post:\n      operationId: postTransactionFee\n      tags: [\"Transactions\"]\n      summary: Estimate Fee\n      # ADP-908 - Deprecated soon\n      deprecated: false\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Estimate fee for the transaction. The estimate is made by\n        assembling multiple transactions and analyzing the\n        distribution of their fees. The estimated_max is the highest\n        fee observed, and the estimated_min is the fee which is lower\n        than at least 90% of the fees observed.\n\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - \u003c\u003c: *ApiPostTransactionFeeData\n                  title: \"payment\"\n                - \u003c\u003c: *ApiPostRedemptionFeeData\n                  title: \"redemption\"\n      responses: *responsesPostTransactionFee\n\n  /wallets/{walletId}/transactions:\n    post:\n      operationId: postTransaction\n      tags: [\"Transactions\"]\n      summary: Create\n      # ADP-908 - Deprecated soon\n      deprecated: false\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Create and send transaction from the wallet.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - \u003c\u003c: *ApiPostTransactionData\n                  title: \"payment\"\n                - \u003c\u003c: *ApiPostRedemptionData\n                  title: \"redemption\"\n      responses: *responsesPostTransaction\n\n    get:\n      operationId: listTransactions\n      tags: [\"Transactions\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Lists all incoming and outgoing wallet's transactions.\n      parameters:\n        - *parametersWalletId\n        - *parametersStartDate\n        - *parametersEndDate\n        - *parametersSortOrder\n        - *parametersMinWithdrawal\n      responses: *responsesListTransactions\n\n  /wallets/{walletId}/transactions/{transactionId}:\n    get:\n      operationId: getTransaction\n      tags: [\"Transactions\"]\n      summary: Get\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Get transaction by id.\n      parameters:\n        - *parametersWalletId\n        - *parametersTransactionId\n      responses: *responsesGetTransaction\n\n    delete:\n      operationId: deleteTransaction\n      tags: [\"Transactions\"]\n      summary: Forget\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Forget pending transaction. Importantly, a transaction, when sent,\n        cannot be cancelled. One can only request forgetting about it\n        in order to try spending (concurrently) the same UTxO in another\n        transaction. But, the transaction may still show up later in a block\n        and therefore, appear in the wallet.\n      parameters:\n        - *parametersWalletId\n        - *parametersTransactionId\n      responses: *responsesDeleteTransaction\n\n  /wallets/{walletId}/transactions-construct:\n    post:\n      operationId: constructTransaction\n      tags: [\"Transactions New\"]\n      summary: Construct\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eunder development\u003c/strong\u003e\u003c/p\u003e\n\n        Create a transaction to be signed from the wallet.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiConstructTransactionData\n      responses: *responsesConstructTransaction\n\n  /wallets/{walletId}/transactions-sign:\n    post:\n      operationId: signTransaction\n      tags: [\"Transactions New\"]\n      summary: Sign\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eunder development\u003c/strong\u003e\u003c/p\u003e\n\n        Signs a serialised transaction, returning the modified\n        transaction.\n\n        This endpoint will add new witnesses using the keys available\n        to this wallet. Any existing witnesses will remain in the\n        witness set.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSignTransactionPostData\n      responses: *responsesSignTransaction\n\n  /wallets/{walletId}/transactions-decode:\n    post:\n      operationId: decodeTransaction\n      tags: [\"Transactions New\"]\n      summary: Decode\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eunstable\u003c/strong\u003e\u003c/p\u003e\n\n        Decode a serialized transaction.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSerialisedTransactionEncoded\n      responses: *responsesDecodedTransaction\n\n  /wallets/{walletId}/transactions-submit:\n    post:\n      operationId: submitTransaction\n      tags: [\"Transactions New\"]\n      summary: Submit\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n        Submit a transaction that was already created and signed.\n        Fails for foreign transactions that is transactions which lack\n        the wallet's inputs and withdrawals.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSignedTransactionEncoded\n      responses: *responsesPostExternalTransaction\n\n  /wallets/{walletId}/addresses:\n    get:\n      operationId: listAddresses\n      tags: [\"Addresses\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return a list of known addresses, ordered from newest to oldest\n      parameters:\n        - *parametersWalletId\n        - *parametersAddressState\n      responses: *responsesListAddresses\n\n  /wallets/{walletId}/keys/{index}:\n    post:\n      operationId: postAccountKey\n      tags: [\"Keys\"]\n      summary: Create Account Public Key\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n        Derive an account public key for any account index. For this key derivation to be possible,\n        the wallet must have been created from mnemonic.\n\n        It is possible to use the optional `purpose` field to override that branch of the derivation path\n        with different hardened derivation index. If that field is omitted, the default purpose\n        for Cardano wallets (`1852H`) will be used.\n\n        \u003cb\u003eNote:\u003c/b\u003e Only _Hardened_ indexes are supported by this endpoint.\n      parameters:\n        - *parametersWalletId\n        - *parametersDerivationSegment\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiPostAccountKeyDataWithPurpose\n      responses: *responsesPostAccountKey\n\n  /wallets/{walletId}/keys:\n    get:\n      operationId: getAccountKey\n      tags: [\"Keys\"]\n      summary: Get Account Public Key\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n        Retrieve the account public key of this wallet.\n\n        To get an extended public key, instead of the public key,\n        use query parameter `format=extended`. For non-extended public key\n        use `format=non_extended` or omit query parameter.\n\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetAccountKey\n\n  /wallets/{walletId}/keys/{role}/{index}:\n    get:\n      operationId: getWalletKey\n      tags: [\"Keys\"]\n      summary: Get Public Key\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n        Return a public key for a given role and derivation index.\n\n        To get a hash of the public key, instead of the public key,\n        use query parameter `hash=true`.\n\n        \u003cb\u003eNote:\u003c/b\u003e Only `Soft` indexes are supported by this endpoint.\n      parameters:\n        - *parametersWalletId\n        - *parametersRole\n        - *parametersDerivationSegment\n      responses: *responsesGetShelleyKey\n\n  /wallets/{walletId}/stake-keys:\n    get:\n      operationId: listStakeKeys\n      tags: [\"Stake Pools\"]\n      summary: List Stake Keys\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eExperimental\u003c/strong\u003e\u003c/p\u003e\n\n        List stake-keys relevant to the wallet, and how much ada is associated with each.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesListStakeKeys\n\n  /stake-pools:\n    get:\n      operationId: listStakePools\n      tags: [\"Stake Pools\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        List all known stake pools ordered by descending `non_myopic_member_rewards`.\n        The `non_myopic_member_rewards` — and thus the ordering — depends on the `?stake` query\n        parameter.\n\n        Some pools _may_ also have metadata attached to them.\n      parameters:\n        - *parametersIntendedStakeAmount\n      responses: *responsesListStakePools\n\n  /stake-pools/maintenance-actions:\n    get:\n      operationId: getMaintenanceActions\n      tags: [\"Stake Pools\"]\n      summary: View Maintenance Actions\n      description: |\n        Returns the current status of the stake pools maintenance actions.\n      responses: *responsesGetMaintenanceAction\n\n    post:\n      operationId: postMaintenanceAction\n      tags: [\"Stake Pools\"]\n      summary: Trigger Maintenance Actions\n      description: |\n        Performs maintenance actions on stake pools, such\n        as triggering metadata garbage collection.\n\n        Actions may not be instantaneous.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiMaintenanceActionPostData\n      responses: *responsesPostMaintenanceAction\n\n  /wallets/{walletId}/delegation-fees:\n    get:\n      operationId: getDelegationFee\n      tags: [\"Stake Pools\"]\n      summary: Estimate Fee\n      # ADP-908 - Deprecated soon\n      deprecated: false\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Estimate fee for joining or leaving a stake pool. Note that it is an\n        estimation because a delegation induces a transaction for which coins\n        have to be selected randomly within the wallet. Because of this randomness,\n        fees can only be estimated.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetDelegationFee\n\n  /stake-pools/*/wallets/{walletId}:\n    delete:\n      operationId: quitStakePool\n      tags: [\"Stake Pools\"]\n      summary: Quit\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Stop delegating completely. The wallet's stake will become inactive.\n\n        Any current rewards will automatically withdrawn.\n\n        \u003e ⚠️  Disclaimer ⚠️\n        \u003e\n        \u003e This endpoint historically use to take a stake pool id as a path parameter.\n        \u003e However, retiring from delegation is ubiquitous and not tied to a particular\n        \u003e stake pool. For backward-compatibility reasons, sending stake pool ids as path\n        \u003e parameter will still be accepted by the server but new integrations are\n        \u003e encouraged to provide a placeholder asterisk `*` instead.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletPassphrase\n      responses: *responsesQuitStakePool\n\n  /stake-pools/{stakePoolId}/wallets/{walletId}:\n    put:\n      operationId: joinStakePool\n      tags: [\"Stake Pools\"]\n      summary: Join\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Delegate all (current and future) addresses from the given wallet to the given stake pool.\n\n        \u003cstrong\u003eNote:\u003c/strong\u003e Bech32-encoded stake pool identifiers can vary in length.\n\n      parameters:\n        - *parametersStakePoolId\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletPassphrase\n      responses: *responsesJoinStakePool\n\n  /wallets/{walletId}/coin-selections/random:\n    post:\n      operationId: selectCoins\n      tags: [\"Coin Selections\"]\n      summary: Random\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Select coins to cover the given set of payments.\n\n        Uses the \u003ca href=\"https://iohk.io/blog/self-organisation-in-coin-selection/\"\u003e\n        Random-Improve coin selection algorithm\u003c/a\u003e.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSelectCoinsData\n      responses: *responsesSelectCoins\n\n  /wallets/{walletId}/migrations:\n    post:\n      operationId: migrateShelleyWallet\n      tags: [\"Migrations\"]\n      summary: Migrate\n      description: |\n        Migrate the UTxO balance of this wallet to the given set of addresses.\n\n        This operation will attempt to transfer as much of the wallet's balance\n        as possible to the given set of addresses, by creating and submitting\n        as many transactions as may be necessary to migrate the entire balance.\n\n        In order to minimize the total transaction fee required, UTxO entries\n        are coalesced together to the greatest extent possible in the resulting\n        transactions. No attempt is made to preserve the wallet's UTxO\n        distribution.\n\n        This operation is performed on a best-effort basis. If there is\n        insufficient ada available to pay for the entire UTxO set to be\n        migrated, then only a subset of the wallet's UTxO set will be migrated.\n\n        A typical use of this operation would be to move all funds from an old\n        wallet to a new wallet, by providing addresses that belong to the new\n        wallet.\n      parameters:\n        - \u003c\u003c: *parametersWalletId\n          name: walletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiShelleyWalletMigrationPostData\n      responses: *responsesMigrateWallet\n\n  /wallets/{walletId}/migrations/plan:\n    post:\n      operationId: createShelleyWalletMigrationPlan\n      tags: [\"Migrations\"]\n      summary: Create a migration plan\n      description: |\n        Generate a plan for migrating the UTxO balance of this wallet to\n        another wallet, without executing the plan.\n\n        This operation generates a plan that transfers as much of the wallet's\n        balance as possible, by creating as many selections as may be necessary\n        to migrate the entire balance.  Each selection created is the basis for\n        a transaction.\n\n        In order to minimize the total transaction fee required, UTxO entries\n        are coalesced together to the greatest extent possible in the resulting\n        selections. No attempt is made to preserve the wallet's UTxO\n        distribution.\n\n        The plan is generated on a best-effort basis. If there is insufficient\n        ada available to pay for the entire UTxO set to be migrated, then only\n        a subset of the wallet's UTxO set will be included in the resultant\n        plan.\n      parameters:\n        - \u003c\u003c: *parametersWalletId\n          name: walletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletMigrationPlanPostData\n      responses: *responsesCreateWalletMigrationPlan\n\n  /wallets/{walletId}/transactions-balance:\n    post:\n      operationId: balanceTransaction\n      tags: [\"Transactions New\"]\n      summary: Balance\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eunder development\u003c/strong\u003e\u003c/p\u003e\n        Balance a transaction body of a given transaction, add needed inputs/outputs,\n        so as the transaction can be signed from the wallet.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiBalanceTransactionPostData\n      responses: *responsesBalanceTransaction\n\n  /byron-wallets:\n    post:\n      operationId: postByronWallet\n      tags: [\"Byron Wallets\"]\n      summary: Restore\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Restore a Byron wallet from a mnemonic sentence or encrypted root private key (deprecated).\n\n          **⚠️ WARNING ⚠️**\n\n          The construction of random wallet in itself is **deprecated**, in particular the restoration from an encrypted root private key.\n          These endpoints exist to ease migrations from legacy software such as `cardano-sl` but should be avoided by new applications.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *SomeByronWalletPostData\n      responses: *responsesPostByronWallet\n\n    get:\n      operationId: listByronWallets\n      tags: [\"Byron Wallets\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return a list of known Byron wallets, ordered from oldest to newest.\n      responses: *responsesListByronWallets\n\n  /byron-wallets/{walletId}/assets:\n    get:\n      operationId: listByronAssets\n      tags: [\"Byron Assets\"]\n      summary: List Assets\n      description: |\n        List all assets associated with the wallet, and their metadata\n        if known.\n\n        An asset is _associated_ with a wallet if it is involved in a\n        transaction of the wallet.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesListAssets\n\n  /byron-wallets/{walletId}/assets/{policyId}/{assetName}:\n    get:\n      operationId: getByronAsset\n      tags: [\"Byron Assets\"]\n      summary: Get Asset\n      description: |\n        Fetch a single asset from its `policy_id` and `asset_name`,\n        with its metadata if any.\n\n        The asset must be associated with the wallet.\n      parameters:\n        - *parametersWalletId\n        - *parametersPolicyId\n        - *parametersAssetName\n      responses: *responsesGetAsset\n\n  /byron-wallets/{walletId}/assets/{policyId}:\n    get:\n      operationId: getByronAssetDefault\n      tags: [\"Byron Assets\"]\n      summary: Get Asset (empty name)\n      description: |\n        Fetch the asset from `policy_id` with an empty name.\n\n        The asset must be associated with the wallet.\n      parameters:\n        - *parametersWalletId\n        - *parametersPolicyId\n      responses: *responsesGetAsset\n\n  /byron-wallets/{walletId}/statistics/utxos:\n    get:\n      operationId: getByronUTxOsStatistics\n      tags: [\"Byron Wallets\"]\n      summary: UTxO Statistics\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return the UTxOs distribution across the whole wallet, in the form of a histogram.\n\n        ```\n             │\n         100 ─\n             │\n             │                                 ┌───┐\n          10 ─                         ┌───┐   │   │                   ┌───┐\n             │                 ┌───┐   │   │   │   │                   │   │\n             │                 │   │   │   │   │   │   ┌───┐           │   │\n           1 ─ ┌───┐           │   │   │   │   │   │   │   │           │   │\n             │ │   │           │   │   │   │   │   │   │   │           │   │\n             │ │   │ │       │ │   │ │ │   │ ╷ │   │ ╷ │   │ ╷       ╷ │   │\n             └─┘   └─│───────│─┘   └─│─┘   └─│─┘   └─│─┘   └─│───────│─┘   └────\n                   10μ₳    100μ₳   1000μ₳   0.1₳    1₳      10₳     100₳\n        ```\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetUTxOsStatistics\n\n  /byron-wallets/{walletId}/utxo:\n    get:\n      operationId: getByronWalletUtxoSnapshot\n      tags: [\"Byron Wallets\"]\n      summary: A snapshot of the wallet's UTxO set\n      description: |\n        Generate a snapshot of the wallet's UTxO set.\n\n        This endpoint is intended for debugging purposes.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetWalletUtxoSnapshot\n\n  /byron-wallets/{walletId}:\n    get:\n      operationId: getByronWallet\n      tags: [\"Byron Wallets\"]\n      summary: Get\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return information about a Byron wallet.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetByronWallet\n\n    delete:\n      operationId: deleteByronWallet\n      tags: [\"Byron Wallets\"]\n      summary: Delete\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Delete a Byron wallet.\n      parameters:\n        - *parametersWalletId\n      responses: *responsesDeleteWallet\n\n    put:\n      operationId: putByronWallet\n      tags: [\"Byron Wallets\"]\n      summary: Update Metadata\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletPutData\n      responses: *responsesPutWallet\n\n  /byron-wallets/{walletId}/passphrase:\n    put:\n      operationId: putByronWalletPassphrase\n      tags: [\"Byron Wallets\"]\n      summary: Update Passphrase\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiByronWalletPutPassphraseData\n      responses: *responsesPutWalletPassphrase\n\n  /byron-wallets/{walletId}/addresses:\n      post:\n        operationId: createAddress\n        tags: [\"Byron Addresses\"]\n        summary: Create Address\n        description: |\n          \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n          ⚠️  This endpoint is available for `random` wallets only. Any\n          attempt to call this endpoint on another type of wallet will result in\n          a `403 Forbidden` error from the server.\n        parameters:\n          - *parametersWalletId\n        requestBody:\n          required: true\n          content:\n            application/json:\n              schema: *ApiPostRandomAddressData\n        responses: *responsesPostRandomAddress\n\n      get:\n        operationId: listByronAddresses\n        tags: [\"Byron Addresses\"]\n        summary: List\n        description: |\n          \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n          Return a list of known addresses, ordered from newest to oldest for sequential wallets.\n          Arbitrarily ordered for random wallets.\n        parameters:\n          - *parametersWalletId\n          - *parametersAddressState\n        responses: *responsesListAddresses\n\n      put:\n        operationId: importAddresses\n        tags: [\"Byron Addresses\"]\n        summary: Import Addresses\n        description: |\n          \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n          ⚠️  This endpoint is available for `random` wallets only. Any\n          attempt to call this endpoint on another type of wallet will result in\n          a `403 Forbidden` error from the server.\n        parameters:\n          - *parametersWalletId\n        requestBody:\n          required: true\n          content:\n            application/json:\n              schema: *ApiPutAddressesData\n        responses: *responsesPutRandomAddresses\n\n  /byron-wallets/{walletId}/addresses/{addressId}:\n      put:\n        operationId: importAddress\n        tags: [\"Byron Addresses\"]\n        summary: Import Address\n        description: |\n          \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n          ⚠️  This endpoint is available for `random` wallets only. Any\n          attempt to call this endpoint on another type of wallet will result in\n          a `403 Forbidden` error from the server.\n        parameters:\n          - *parametersWalletId\n          - *parametersAddressId\n        responses: *responsesPutRandomAddress\n\n  /byron-wallets/{walletId}/transactions-construct:\n    post:\n      operationId: constructByronTransaction\n      tags: [\"Byron Transactions New\"]\n      summary: Construct\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eunstable\u003c/strong\u003e\u003c/p\u003e\n\n        Create a transaction to be signed from the wallet.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiConstructTransactionData\n      responses: *responsesConstructTransaction\n\n  /byron-wallets/{walletId}/transactions-sign:\n    post:\n      operationId: signByronTransaction\n      tags: [\"Byron Transactions New\"]\n      summary: Sign\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003eunder development\u003c/strong\u003e\u003c/p\u003e\n\n        Signs a serialised transaction, returning the modified\n        transaction.\n\n        This endpoint will add new witnesses using the keys available\n        to this wallet. Any existing witnesses will remain in the\n        witness set.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSignTransactionPostData\n      responses: *responsesSignTransaction\n\n  /byron-wallets/{walletId}/payment-fees:\n    post:\n      operationId: postByronTransactionFee\n      tags: [\"Byron Transactions\"]\n      summary: Estimate Fee\n      # ADP-908 - Deprecated soon\n      deprecated: false\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Estimate fee for the transaction.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiPostTransactionFeeDataByron\n      responses: *responsesPostTransactionFee\n\n  /byron-wallets/{walletId}/transactions:\n    post:\n      operationId: postByronTransaction\n      tags: [\"Byron Transactions\"]\n      summary: Create\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Create and send transaction from the wallet.\n      parameters:\n        - *parametersWalletId\n      requestBody:\n          required: true\n          content:\n            application/json:\n              schema: *ApiPostTransactionDataByron\n      responses: *responsesPostTransaction\n\n    get:\n      operationId: listByronTransactions\n      tags: [\"Byron Transactions\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        List all incoming and outgoing transactions for the given wallet.\n      parameters:\n        - *parametersWalletId\n        - *parametersStartDate\n        - *parametersEndDate\n        - *parametersSortOrder\n      responses: *responsesListTransactions\n\n  /byron-wallets/{walletId}/transactions/{transactionId}:\n    get:\n      operationId: getByronTransaction\n      tags: [\"Byron Transactions\"]\n      summary: Get\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Get transaction by id.\n      parameters:\n        - *parametersWalletId\n        - *parametersTransactionId\n      responses: *responsesGetTransaction\n\n    delete:\n      operationId: deleteByronTransaction\n      tags: [\"Byron Transactions\"]\n      summary: Forget\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Forget pending Byron transaction. Importantly, a transaction, when sent,\n        cannot be cancelled. One can only request forgetting about it\n        in order to try spending (concurrently) the same UTxO in another\n        transaction. But, the transaction may still show up later in a block\n        and therefore, appear in the wallet.\n      parameters:\n        - *parametersWalletId\n        - *parametersTransactionId\n      responses: *responsesDeleteTransaction\n\n  /byron-wallets/{walletId}/coin-selections/random:\n    post:\n      operationId: byronSelectCoins\n      tags: [\"Byron Coin Selections\"]\n      summary: Random\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Select coins to cover the given set of payments.\n\n        Uses the \u003ca href=\"https://iohk.io/blog/self-organisation-in-coin-selection/\"\u003e\n        Random-Improve coin selection algorithm\u003c/a\u003e.\n\n        \u003cb\u003eNote: \u003c/b\u003e Not supported for Byron random wallets.\n\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiByronSelectCoinsData\n      responses: *responsesSelectCoins\n\n  /byron-wallets/{walletId}/migrations:\n    post:\n      operationId: migrateByronWallet\n      tags: [\"Byron Migrations\"]\n      summary: Migrate\n      description: |\n        Migrate the UTxO balance of this wallet to the given set of addresses.\n\n        This operation will attempt to transfer as much of the wallet's balance\n        as possible to the given set of addresses, by creating and submitting\n        as many transactions as may be necessary to migrate the entire balance.\n\n        In order to minimize the total transaction fee required, UTxO entries\n        are coalesced together to the greatest extent possible in the resulting\n        transactions. No attempt is made to preserve the wallet's UTxO\n        distribution.\n\n        This operation is performed on a best-effort basis. If there is\n        insufficient ada available to pay for the entire UTxO set to be\n        migrated, then only a subset of the wallet's UTxO set will be migrated.\n\n        A typical use of this operation would be to move all funds from an old\n        wallet to a new wallet, by providing addresses that belong to the new\n        wallet.\n      parameters:\n        - \u003c\u003c: *parametersWalletId\n          name: walletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiByronWalletMigrationPostData\n      responses: *responsesMigrateWallet\n\n  /byron-wallets/{walletId}/migrations/plan:\n    post:\n      operationId: createByronWalletMigrationPlan\n      tags: [\"Byron Migrations\"]\n      summary: Create a migration plan\n      description: |\n        Generate a plan for migrating the UTxO balance of this wallet to\n        another wallet, without executing the plan.\n\n        This operation generates a plan that transfers as much of the wallet's\n        balance as possible, by creating as many selections as may be necessary\n        to migrate the entire balance.  Each selection created is the basis for\n        a transaction.\n\n        In order to minimize the total transaction fee required, UTxO entries\n        are coalesced together to the greatest extent possible in the resulting\n        selections. No attempt is made to preserve the wallet's UTxO\n        distribution.\n\n        The plan is generated on a best-effort basis. If there is insufficient\n        ada available to pay for the entire UTxO set to be migrated, then only\n        a subset of the wallet's UTxO set will be included in the resultant\n        plan.\n      parameters:\n        - \u003c\u003c: *parametersWalletId\n          name: walletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiWalletMigrationPlanPostData\n      responses: *responsesCreateWalletMigrationPlan\n\n  /network/information:\n    get:\n      operationId: getNetworkInformation\n      tags: [\"Network\"]\n      summary: Information\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      responses: *responsesGetNetworkInformation\n\n  /network/clock:\n    get:\n      operationId: getNetworkClock\n      tags: [\"Network\"]\n      summary: Clock\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - \u003c\u003c: *parametersForceNtpCheck\n          name: forceNtpCheck\n      responses: *responsesGetNetworkClock\n\n  /network/parameters:\n    get:\n      operationId: getNetworkParameters\n      tags: [\"Network\"]\n      summary: Parameters\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Returns the set of network parameters for the current epoch.\n      responses: *responsesGetNetworkParameters\n\n  /proxy/transactions:\n    post:\n      operationId: postExternalTransaction\n      tags: [\"Proxy\"]\n      summary: Submit External Transaction\n      # ADP-908 - deprecated soon\n      deprecated: false\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Submits a transaction that was created and signed outside of cardano-wallet.\n\n        NOTE: Unlike the `submitTransaction` endpoint, there are no\n        guarantees that a transaction accepted by this endpoint will\n        actually be included in the chain. It's up to the caller to\n        retry submission until the transaction is confirmed.\n      requestBody:\n        content:\n          application/octet-stream:\n            schema: *signedTransactionBlob\n      responses: *responsesPostExternalTransaction\n\n  /addresses/{addressId}:\n    get:\n      operationId: inspectAddress\n      tags: [\"Addresses\"]\n      summary: Inspect Address\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Give useful information about the structure of a given address.\n      parameters:\n        - *parametersAddressId\n      responses: *responsesInspectAddress\n\n  /addresses:\n    post:\n      operationId: postAnyAddress\n      tags: [\"Addresses\"]\n      summary: Construct Address\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Construct any address by specyfying credential for payment or delegation.\n\n        In Cardano, Addresses are made of three parts:\n\n        ```\n        *---------*---------*-----------*\n        | NETWORK | PAYMENT | DELEGATION |\n        *---------*---------*-----------*\n        ```\n\n        The `NETWORK` part allows for distinguishing addresses between different networks like the mainnet or the testnet. It is implicitly\n        handled by the server without you having to worry about it. The `PAYMENT` and `DELEGATION` parts however can be constructed similarly, using\n        either:\n\n        - A public key\n        - A script\n\n        The script itself is either constructed out of a public key, one of two timelocks, or one of the three following primitives:\n\n        - all\n        - any\n        - some\n\n        The timelock can determine validity as respect to the slot. `active_from slot` means the script is valid from the specified slot\n        and onward. `active_until slot` means the script is valid until (not included) the specified slot.\n\n        Each of which contains one or more script(s) that can be either keys or primitives, and so on. Schematically:\n\n        ```\n                                           ┏─────────┓\n        SCRIPT = ──┬───────────────────────┤ pub key ├─────────────────────┬──\n                   │                       ┗─────────┛                     │\n                   │                       ┏──────────────────┓            │\n                   ├───────────────────────┤ ACTIVE_FROM slot ├──── ───────┤\n                   │                       ┗──────────────────┛            │\n                   │                       ┏───────────────────┓           │\n                   ├───────────────────────┤ ACTIVE_UNTIL slot ├───────────┤\n                   │                       ┗───────────────────┛           │\n                   │                                                       │\n                   │  ╭─────╮   ╭────────╮                                 │\n                   ├──┤ ALL ├───┤ SCRIPT ├─┬───────────────────────────────┤\n                   │  ╰─────╯ ^ ╰────────╯ │                               │\n                   │          │   ╭───╮    │                               │\n                   │          └───┤ , ├────┘                               │\n                   │              ╰───╯                                    │\n                   │  ╭─────╮   ╭────────╮                                 │\n                   ├──┤ ANY ├───┤ SCRIPT ├─┬───────────────────────────────┤\n                   │  ╰─────╯ ^ ╰────────╯ │                               │\n                   │          │   ╭───╮    │                               │\n                   │          └───┤ , ├────┘                               │\n                   │              ╰───╯                                    │\n                   │  ╭──────╮ ╭──────────╮ ┏───┓ ╭──────╮   ╭────────╮    │\n                   └──┤ SOME ├─┤ AT_LEAST ├─┤ n ├─┤ FROM ├───┤ SCRIPT ├─┬──┘\n                      ╰──────╯ ╰──────────╯ ┗───┛ ╰──────╯ ^ ╰────────╯ │\n                                                           │   ╭───╮    │\n                                                           └───┤ , ├────┘\n                                                               ╰───╯\n        ```\n\n      requestBody:\n        content:\n          application/json:\n            schema: *ApiAddressData\n      responses: *responsesPostAnyAddress\n\n  /settings:\n    put:\n      operationId: putSettings\n      tags: [\"Settings\"]\n      summary: Update settings\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Overwrite current settings.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSettingsPutData\n      responses: *responsesPutSettings\n\n    get:\n      operationId: getSettings\n      tags: [\"Settings\"]\n      summary: Get settings\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return the current settings.\n      responses: *responsesGetSettings\n\n  /smash/health:\n    get:\n      operationId: getCurrentSmashHealth\n      tags: [\"Utils\"]\n      summary: Current SMASH health\n      description: |\n        Get health status of the currently active SMASH server.\n      parameters:\n        - in: query\n          name: url\n          schema: *ApiSmashServer\n          required: false\n          description: check this url for health instead of the currently configured one\n      responses: *responsesGetSmashHealth\n\n  /shared-wallets:\n    post:\n      operationId: postSharedWallet\n      tags: [\"Shared Wallets\"]\n      summary: Create\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003e⚠ under development\u003c/strong\u003e\u003c/p\u003e\n        Create a shared wallet from either an account public key and script\n        templates or mnemonic and script templates.\n\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSharedWalletPostData\n      responses: *responsesPostSharedWallet\n\n    get:\n      operationId: listSharedWallets\n      tags: [\"Shared Wallets\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003e⚠ under development\u003c/strong\u003e\u003c/p\u003e\n\n        Return a list of known shared wallets, ordered from oldest to newest.\n      responses: *responsesListSharedWallets\n\n  /shared-wallets/{walletId}:\n    get:\n      operationId: getSharedWallet\n      tags: [\"Shared Wallets\"]\n      summary: Get\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003e⚠ under development\u003c/strong\u003e\u003c/p\u003e\n        Get a shared wallet for a given wallet id.\n\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetSharedWallet\n\n    delete:\n      operationId: deleteSharedWallet\n      tags: [\"Shared Wallets\"]\n      summary: Delete\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n      parameters:\n        - *parametersWalletId\n      responses: *responsesDeleteWallet\n\n  /shared-wallets/{walletId}/payment-script-template:\n    patch:\n      operationId: patchSharedWalletInPayment\n      tags: [\"Shared Wallets\"]\n      summary: Update Payment\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003e⚠ under development\u003c/strong\u003e\u003c/p\u003e\n        Update payment script template for a given shared wallet by\n        updating/adding account public key for cosigner. Updating the\n        shared wallet account key results in an error. Also updating is\n        enabled only for pending shared wallet, ie., the wallet that has\n        a missing account public key for any cosigner.\n\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSharedWalletPatchData\n      responses: *responsesPatchSharedWallet\n\n  /shared-wallets/{walletId}/delegation-script-template:\n    patch:\n      operationId: patchSharedWalletInDelegation\n      tags: [\"Shared Wallets\"]\n      summary: Update Delegation\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003e⚠ under development\u003c/strong\u003e\u003c/p\u003e\n        Update delegation script template for a given shared wallet by\n        updating/adding account public key for cosigner. Updating the\n        shared wallet account key results in an error. Also updating is\n        enabled only for pending shared wallet, ie., the wallet that has\n        a missing account public key for any cosigner.\n\n      parameters:\n        - *parametersWalletId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiSharedWalletPatchData\n      responses: *responsesPatchSharedWallet\n\n  /shared-wallets/{walletId}/keys/{index}:\n    post:\n      operationId: postAccountKeyShared\n      tags: [\"Shared Keys\"]\n      summary: Create Account Public Key\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n        Derive an account public key for any account index. For this key derivation to be possible,\n        the wallet must have been created from mnemonic.\n\n        \u003cb\u003eNote:\u003c/b\u003e Only _Hardened_ indexes are supported by this endpoint.\n      parameters:\n        - *parametersWalletId\n        - *parametersDerivationSegment\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: *ApiPostAccountKeyData\n      responses: *responsesPostAccountKeyShared\n\n  /shared-wallets/{walletId}/keys:\n    get:\n      operationId: getAccountKeyShared\n      tags: [\"Shared Keys\"]\n      summary: Get Account Public Key\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n        Retrieve the account public key of this shared wallet.\n\n        To get an extended public key, instead of the public key,\n        use query parameter `format=extended`. For non-extended public key\n        use `format=non_extended` or omit query parameter.\n\n      parameters:\n        - *parametersWalletId\n      responses: *responsesGetAccountSharedKey\n\n  /shared-wallets/{walletId}/keys/{role}/{index}:\n    get:\n      operationId: getSharedWalletKey\n      tags: [\"Shared Keys\"]\n      summary: Get Public Key\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n        Return a public key for a given role and derivation index for\n        a shared wallet.\n\n        To get a hash of the public key, instead of the public key,\n        use query parameter `hash=true`.\n\n        \u003cb\u003eNote:\u003c/b\u003e Only `Soft` indexes are supported by this endpoint.\n      parameters:\n        - *parametersWalletId\n        - *parametersRole\n        - *parametersDerivationSegment\n        - *parametersDerivationHash\n      responses: *responsesGetSharedKey\n\n  /shared-wallets/{walletId}/addresses:\n    get:\n      operationId: listSharedAddresses\n      tags: [\"Shared Addresses\"]\n      summary: List\n      description: |\n        \u003cp align=\"right\"\u003estatus: \u003cstrong\u003estable\u003c/strong\u003e\u003c/p\u003e\n\n        Return a list of known addresses, ordered from newest to oldest\n      parameters:\n        - *parametersWalletId\n        - *parametersAddressState\n      responses: *responsesListAddresses\n"
		}
	},
	"Error": "parse: paths: /shared-wallets/{walletId}/delegation-script-template: patch: operation \"patchSharedWalletInDelegation\": responses: 200: content: \"application/json\": schema: parse schema: oneOf: [0]: parse schema: delegation_script_template: parse schema: template: parse schema: oneOf: [1]: parse schema: all: parse schema: item: parse schema: reference \"#/components/schemas/ScriptTemplateValue\": parse schema: oneOf: [1]: parse schema: all: parse schema: item: parse schema: reference \"#/components/schemas/ScriptTemplateValue\": infinite recursion: \"#/components/schemas/ScriptTemplateValue\""
}