{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/api-specs"
		},
		"file": {
			"name": "news-oas3.yaml",
			"path": "news/news-oas3.yaml",
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://news.api.gov.bc.ca/'\ninfo:\n  version: '1.0'\n  title: BC Gov News API Service 1.0\n  description: News API\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\npaths:\n  /api/FacebookPosts/ByUri:\n    get:\n      tags:\n        - FacebookPosts\n      summary: Get a Facebook post based on a Uri\n      operationId: FacebookPosts_GetByUri\n      parameters:\n        - name: uri\n          in: query\n          description: ''\n          required: false\n          schema:\n            type: string\n            default: ''\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FacebookPost'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FacebookPost'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FacebookPost'\n  /api/Home:\n    get:\n      tags:\n        - Home\n      summary: Returns the top level content for the home page\n      operationId: Home_Get\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Home'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Home'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Home'\n  /api/Ministries:\n    get:\n      tags:\n        - Ministries\n      summary: Get all ministries\n      operationId: Ministries_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Ministry'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Ministry'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Ministry'\n  '/api/Ministries/{key}':\n    get:\n      tags:\n        - Ministries\n      summary: Get the Ministry associated with the ministry key\n      operationId: Ministries_GetOne\n      parameters:\n        - name: key\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Ministry'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ministry'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Ministry'\n  '/api/Ministries/{key}/Minister':\n    get:\n      tags:\n        - Ministries\n      summary: Get the Minister associated with the ministry key\n      operationId: Ministries_GetMinister\n      parameters:\n        - name: key\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Minister'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Minister'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Minister'\n  /api/Newsletters:\n    get:\n      tags:\n        - Newsletters\n      summary: Get all newsletters\n      operationId: Newsletters_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Newsletter'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Newsletter'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Newsletter'\n  '/api/Newsletters/{newsletterKey}':\n    get:\n      tags:\n        - Newsletters\n      summary: Get a specific newsletter\n      operationId: Newsletters_GetOne\n      parameters:\n        - name: newsletterKey\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Newsletter'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Newsletter'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Newsletter'\n  '/api/Newsletters/{newsletterKey}/Editions/{editionKey}':\n    get:\n      tags:\n        - Newsletters\n      summary: Returns a specific edition of a newsletter\n      operationId: Newsletters_GetEdition\n      parameters:\n        - name: newsletterKey\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: editionKey\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Edition'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Edition'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Edition'\n  '/api/Newsletters/{newsletterKey}/Editions/{editionKey}/Articles/{articleKey}':\n    get:\n      tags:\n        - Newsletters\n      summary: Get an article belonging to a Newsletter edition\n      operationId: Newsletters_GetArticle\n      parameters:\n        - name: newsletterKey\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: editionKey\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: articleKey\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Article'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Article'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Article'\n  '/api/Newsletters/Images/{guid}':\n    get:\n      tags:\n        - Newsletters\n      summary: \u003e-\n        Get the image object reference by of a Newsletter Edition associated\n        with the image guid\n      operationId: Newsletters_GetImage\n      parameters:\n        - name: guid\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/EditionImage'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditionImage'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/EditionImage'\n  '/api/Posts/{key}':\n    get:\n      tags:\n        - Posts\n      summary: Get the post associated with the key\n      operationId: Posts_GetOne\n      parameters:\n        - name: key\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Post'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n  /api/Posts:\n    get:\n      tags:\n        - Posts\n      summary: Get the posts associated with the keys in the list passed in.\n      operationId: Posts_Get\n      parameters:\n        - name: postKeys\n          in: query\n          description: ''\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n            default: ''\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n  '/api/Posts/Latest/{indexKind}/{indexKey}':\n    get:\n      tags:\n        - Posts\n      summary: \u003e-\n        Get the latest posts of postKind for the specified index (default or\n        category)\n      operationId: Posts_GetLatest\n      parameters:\n        - name: indexKind\n          in: path\n          description: home or one of categories\n          required: true\n          schema:\n            type: string\n        - name: indexKey\n          in: path\n          description: \u003e-\n            default or one key of the categories (ministries, sectors, services,\n            tags, themes)\n          required: true\n          schema:\n            type: string\n        - name: postKind\n          in: query\n          description: \u003e-\n            One of: releases, stories, factsheets, updates or default\n            (releases+stories except top/feature)\n          required: false\n          schema:\n            type: string\n            default: ''\n        - name: count\n          in: query\n          description: number of posts to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: ''\n        - name: skip\n          in: query\n          description: number of posts to skip\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: ''\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n  '/api/Posts/Keys/{indexKind}/{indexKey}':\n    get:\n      tags:\n        - Posts\n      summary: Get all keys for the specified index (newsroom or category)\n      operationId: Posts_GetAllKeys\n      parameters:\n        - name: indexKind\n          in: path\n          description: home or one of categories\n          required: true\n          schema:\n            type: string\n        - name: indexKey\n          in: path\n          description: \u003e-\n            default or one key of the categories (ministries, sectors, services,\n            tags, themes)\n          required: true\n          schema:\n            type: string\n        - name: postKind\n          in: query\n          description: \u003e-\n            One of: releases, stories, factsheets, updates or default\n            (releases+stories+factsheets)\n          required: false\n          schema:\n            type: string\n            default: ''\n        - name: count\n          in: query\n          description: number of posts to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: ''\n        - name: skip\n          in: query\n          description: number of posts to skip\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: ''\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/KeyValuePair_2'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/KeyValuePair_2'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/KeyValuePair_2'\n  '/api/Posts/Keys/{reference}':\n    get:\n      tags:\n        - Posts\n      summary: Get the post key associated with the reference.\n      operationId: Posts_GetKeyFromReference\n      parameters:\n        - name: reference\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/KeyValuePair_2'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyValuePair_2'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/KeyValuePair_2'\n  '/api/Posts/LatestMediaUri/{mediaType}':\n    get:\n      tags:\n        - Posts\n      summary: Gets the latest Social Media post for the social media type passed in.\n      operationId: Posts_GetLatestMediaUri\n      parameters:\n        - name: mediaType\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n  /api/ResourceLinks:\n    get:\n      tags:\n        - ResourceLinks\n      summary: Get all resource links\n      operationId: ResourceLinks_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ResourceLink'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ResourceLink'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ResourceLink'\n  /api/Sectors:\n    get:\n      tags:\n        - Sectors\n      summary: Get all Sectors\n      operationId: Sectors_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Sector'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Sector'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Sector'\n  '/api/Sectors/{key}':\n    get:\n      tags:\n        - Sectors\n      summary: Get the sector associated with the key\n      operationId: Sectors_GetOne\n      parameters:\n        - name: key\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Sector'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sector'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Sector'\n  /api/Services:\n    get:\n      tags:\n        - Services\n      summary: Get all Services\n      operationId: Services_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Service'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Service'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Service'\n  '/api/Services/{key}':\n    get:\n      tags:\n        - Services\n      summary: Get the service associated with the passed key\n      operationId: Services_GetOne\n      parameters:\n        - name: key\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Service'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n  '/api/Slides/{id}':\n    get:\n      tags:\n        - Slides\n      summary: Get the slide associated to the id\n      operationId: Slides_GetOne\n      parameters:\n        - name: id\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Slide'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Slide'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Slide'\n  /api/Slides:\n    get:\n      tags:\n        - Slides\n      summary: Get all Slides\n      operationId: Slides_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Slide'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Slide'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Slide'\n  /api/Tags:\n    get:\n      tags:\n        - Tags\n      summary: Get all Tags\n      operationId: Tags_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n  '/api/Tags/{key}':\n    get:\n      tags:\n        - Tags\n      summary: Get the Tag associated with the key\n      operationId: Tags_GetOne\n      parameters:\n        - name: key\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Tag'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n  /api/Themes:\n    get:\n      tags:\n        - Themes\n      summary: Get all Themes\n      operationId: Themes_GetAll\n      parameters:\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Theme'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Theme'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Theme'\n  '/api/Themes/{key}':\n    get:\n      tags:\n        - Themes\n      summary: Get the Theme associated with the key\n      operationId: Themes_GetOne\n      parameters:\n        - name: key\n          in: path\n          description: ''\n          required: true\n          schema:\n            type: string\n        - name: api-version\n          in: query\n          description: The requested API version\n          required: true\n          schema:\n            type: string\n            default: '1.0'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Theme'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Theme'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Theme'\ncomponents:\n  schemas:\n    FacebookPost:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        poster:\n          type: string\n        posterLogo:\n          type: string\n        posterSubtitle:\n          type: string\n        posterLikes:\n          format: int32\n          type: integer\n        content:\n          type: string\n        postLikes:\n          format: int32\n          type: integer\n        postComments:\n          format: int32\n          type: integer\n        postShares:\n          format: int32\n          type: integer\n        facebookObjectId:\n          format: int32\n          type: integer\n        type:\n          type: string\n        pictureUri:\n          type: string\n    DataModel:\n      type: object\n      properties:\n        key:\n          type: string\n        timestamp:\n          format: date-time\n          type: string\n    Home:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataIndex'\n      properties:\n        liveWebcastFlashMediaManifestUrl:\n          type: string\n        liveWebcastM3uPlaylist:\n          type: string\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    DataIndex:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        kind:\n          type: string\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    Ministry:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        childMinistryKey:\n          type: string\n        parentMinistryKey:\n          type: string\n        ministryUrl:\n          type: string\n        displayAdditionalName:\n          type: string\n        topicLinks:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceLink'\n        serviceLinks:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceLink'\n        newsletterLinks:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceLink'\n        ministerName:\n          type: string\n        contactUser:\n          $ref: '#/components/schemas/Contact'\n        secondContactUser:\n          $ref: '#/components/schemas/Contact'\n        weekendContactNumber:\n          type: string\n        twitterFeedUsername:\n          type: string\n        flickrUri:\n          type: string\n        youtubeUri:\n          type: string\n        audioUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    ResourceLink:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        uri:\n          type: string\n    Contact:\n      type: object\n      properties:\n        fullName:\n          type: string\n        phoneNumber:\n          type: string\n        mobileNumber:\n          type: string\n        emailAddress:\n          type: string\n    Category:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataIndex'\n      properties:\n        twitterFeedUsername:\n          type: string\n        flickrUri:\n          type: string\n        youtubeUri:\n          type: string\n        audioUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    Minister:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        headline:\n          type: string\n        summary:\n          type: string\n        details:\n          type: string\n        emailHtml:\n          type: string\n        photo:\n          type: string\n        post:\n          type: string\n    Newsletter:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        name:\n          type: string\n        ministryName:\n          type: string\n        description:\n          type: string\n        editions:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValuePair_2'\n    Edition:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        name:\n          type: string\n        htmlBody:\n          type: string\n    Article:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        editionName:\n          type: string\n        htmlBody:\n          type: string\n    EditionImage:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        fileName:\n          type: string\n        imageBytes:\n          format: byte\n          type: string\n        imageType:\n          type: string\n    Post:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        kind:\n          type: string\n        atomId:\n          type: string\n        summary:\n          type: string\n        socialMediaSummary:\n          type: string\n        socialMediaHeadline:\n          type: string\n        keywords:\n          type: string\n        publishDate:\n          format: date-time\n          type: string\n        leadMinistryKey:\n          type: string\n        hasMediaAssets:\n          type: boolean\n        isNewsOnDemand:\n          type: boolean\n        assetUrl:\n          type: string\n        location:\n          type: string\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Document'\n        reference:\n          type: string\n        redirectUri:\n          type: string\n        ministryKeys:\n          type: array\n          items:\n            type: string\n        sectorKeys:\n          type: array\n          items:\n            type: string\n        serviceKeys:\n          type: array\n          items:\n            type: string\n        facebookPictureUri:\n          type: string\n        azureAssets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Asset'\n    Document:\n      type: object\n      properties:\n        pageTitle:\n          type: string\n        languageId:\n          format: int32\n          type: integer\n        headline:\n          type: string\n        subheadline:\n          type: string\n        detailsHtml:\n          type: string\n        byline:\n          type: string\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentContact'\n    DocumentContact:\n      type: object\n      properties:\n        title:\n          type: string\n        details:\n          type: string\n    Asset:\n      type: object\n      properties:\n        key:\n          type: string\n        label:\n          type: string\n        length:\n          format: int64\n          type: integer\n    Sector:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        twitterFeedUsername:\n          type: string\n        flickrUri:\n          type: string\n        youtubeUri:\n          type: string\n        audioUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    Service:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        twitterFeedUsername:\n          type: string\n        flickrUri:\n          type: string\n        youtubeUri:\n          type: string\n        audioUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    Slide:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        slideId:\n          format: uuid\n          type: string\n        headline:\n          type: string\n        summary:\n          type: string\n        actionLabel:\n          type: string\n        actionUri:\n          type: string\n        image:\n          format: byte\n          type: string\n        facebookPostUri:\n          type: string\n        justify:\n          type: string\n        imageType:\n          type: string\n          readOnly: true\n    Tag:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        twitterFeedUsername:\n          type: string\n        flickrUri:\n          type: string\n        youtubeUri:\n          type: string\n        audioUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    Theme:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        twitterFeedUsername:\n          type: string\n        flickrUri:\n          type: string\n        youtubeUri:\n          type: string\n        audioUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        featurePostKey:\n          type: string\n    KeyValuePair_2:\n      type: object\n      properties:\n        key:\n          type: string\n          readOnly: true\n        value:\n          type: string\n          readOnly: true\n"
		}
	},
	"Error": "parse: paths: /api/Posts: get: operation \"Posts_Get\": parameters: parse parameter \"postKeys\": schema: parse default: expected type \"array\", got \"string\""
}