{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/elierotenberg/directus-typescript-gen"
		},
		"file": {
			"name": "directus.spec.json",
			"path": "src/__tests__/fixtures/directus.spec.json",
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Dynamic API Specification\",\n    \"description\": \"This is a dynamically generated API specification for all endpoints existing on the current project.\",\n    \"version\": \"9.0.0-rc.62\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/\",\n      \"description\": \"Your current Directus instance.\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Assets\",\n      \"description\": \"Image typed files can be dynamically resized and transformed to fit any need.\"\n    },\n    {\n      \"name\": \"Authentication\",\n      \"description\": \"All events that happen within Directus are tracked and stored in the activities collection. This gives you full accountability over everything that happens.\"\n    },\n    {\n      \"name\": \"Extensions\",\n      \"description\": \"Directus can easily be extended through the addition of several types of extensions, including layouts, interfaces, and modules.\"\n    },\n    {\n      \"name\": \"Server\",\n      \"description\": \"Access to where Directus runs. Allows you to make sure your server has everything needed to run the platform, and check what kind of latency we're dealing with.\"\n    },\n    {\n      \"name\": \"Utilities\",\n      \"description\": \"Directus comes with various utility endpoints you can use to simplify your development flow.\"\n    },\n    {\n      \"name\": \"ItemsArticle\",\n      \"x-collection\": \"article\"\n    },\n    {\n      \"name\": \"ItemsArticleAuthor\",\n      \"x-collection\": \"article_author\"\n    },\n    {\n      \"name\": \"ItemsAuthor\",\n      \"x-collection\": \"author\"\n    },\n    {\n      \"name\": \"Activity\",\n      \"description\": \"All events that happen within Directus are tracked and stored in the activities collection. This gives you full accountability over everything that happens.\",\n      \"x-collection\": \"directus_activity\"\n    },\n    {\n      \"name\": \"Collections\",\n      \"description\": \"Collections are the individual collections of items, similar to tables in a database. Changes to collections will alter the schema of the database.\",\n      \"x-collection\": \"directus_collections\"\n    },\n    {\n      \"name\": \"Fields\",\n      \"description\": \"Fields are individual pieces of content within an item. They are mapped to columns in the database.\",\n      \"x-collection\": \"directus_fields\"\n    },\n    {\n      \"name\": \"Files\",\n      \"description\": \"Files can be saved in any given location. Directus has a powerful assets endpoint that can be used to generate thumbnails for images on the fly.\",\n      \"x-collection\": \"directus_files\"\n    },\n    {\n      \"name\": \"Folders\",\n      \"description\": \"Group files by virtual folders.\",\n      \"x-collection\": \"directus_folders\"\n    },\n    {\n      \"name\": \"Permissions\",\n      \"description\": \"Permissions control who has access to what and when.\",\n      \"x-collection\": \"directus_permissions\"\n    },\n    {\n      \"name\": \"Presets\",\n      \"description\": \"Presets hold the preferences of individual users of the platform. This allows Directus to show and maintain custom item listings for users of the app.\",\n      \"x-collection\": \"directus_presets\"\n    },\n    {\n      \"name\": \"Relations\",\n      \"description\": \"What data is linked to what other data. Allows you to assign authors to articles, products to sales, and whatever other structures you can think of.\",\n      \"x-collection\": \"directus_relations\"\n    },\n    {\n      \"name\": \"Revisions\",\n      \"description\": \"Revisions are individual changes to items made. Directus keeps track of changes made, so you're able to revert to a previous state at will.\",\n      \"x-collection\": \"directus_revisions\"\n    },\n    {\n      \"name\": \"Roles\",\n      \"description\": \"Roles are groups of users that share permissions.\",\n      \"x-collection\": \"directus_roles\"\n    },\n    {\n      \"name\": \"Settings\",\n      \"description\": \"Settings control the way the platform works and acts.\",\n      \"x-collection\": \"directus_settings\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"Users are what gives you access to the data.\",\n      \"x-collection\": \"directus_users\"\n    },\n    {\n      \"name\": \"Webhooks\",\n      \"description\": \"Webhooks.\",\n      \"x-collection\": \"directus_webhooks\"\n    }\n  ],\n  \"paths\": {\n    \"/assets/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Assets\"\n        ],\n        \"operationId\": \"getAsset\",\n        \"summary\": \"Get an Asset\",\n        \"description\": \"Image typed files can be dynamically resized and transformed to fit any need.\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The id of the file.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"The key of the asset size configured in settings.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"width\",\n            \"in\": \"query\",\n            \"description\": \"Width of the file in pixels.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"height\",\n            \"in\": \"query\",\n            \"description\": \"Height of the file in pixels.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"fit\",\n            \"in\": \"query\",\n            \"description\": \"Fit of the file\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"crop\",\n                \"contain\",\n                \"inside\",\n                \"outside\"\n              ]\n            }\n          },\n          {\n            \"name\": \"withoutEnlargement\",\n            \"in\": \"query\",\n            \"description\": \"No image upscale.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"quality\",\n            \"in\": \"query\",\n            \"description\": \"Quality of compression.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"minimum\": 1,\n              \"maximum\": 100\n            }\n          },\n          {\n            \"name\": \"download\",\n            \"in\": \"query\",\n            \"description\": \"Download the asset to your computer\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      }\n    },\n    \"/auth/login\": {\n      \"post\": {\n        \"summary\": \"Retrieve a Temporary Access Token\",\n        \"description\": \"Retrieve a Temporary Access Token\",\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"operationId\": \"login\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\",\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"example\": \"admin@example.com\",\n                    \"description\": \"Email address of the user you're retrieving the access token for.\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"description\": \"Password of the user.\",\n                    \"format\": \"password\",\n                    \"example\": \"password\"\n                  },\n                  \"mode\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"json\",\n                      \"cookie\"\n                    ],\n                    \"default\": \"json\",\n                    \"description\": \"Choose between retrieving the token as a string, or setting it as a cookie.\"\n                  },\n                  \"otp\": {\n                    \"type\": \"string\",\n                    \"description\": \"If 2FA is enabled, you need to pass the one time password.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful authentification\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"access_token\": {\n                          \"type\": \"string\",\n                          \"example\": \"eyJhbGciOiJI...\"\n                        },\n                        \"expires\": {\n                          \"type\": \"integer\",\n                          \"example\": 900\n                        },\n                        \"refresh_token\": {\n                          \"type\": \"string\",\n                          \"example\": \"yuOJkjdPXMd...\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/refresh\": {\n      \"post\": {\n        \"summary\": \"Refresh Token\",\n        \"description\": \"Refresh a Temporary Access Token.\",\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"operationId\": \"refresh\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"token\"\n                ],\n                \"properties\": {\n                  \"refresh_token\": {\n                    \"type\": \"string\",\n                    \"example\": \"eyJ0eXAiOiJKV...\",\n                    \"description\": \"JWT access token you want to refresh. This token can't be expired.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"access_token\": {\n                          \"type\": \"string\",\n                          \"example\": \"eyJhbGciOiJI...\"\n                        },\n                        \"expires\": {\n                          \"type\": \"integer\",\n                          \"example\": 900\n                        },\n                        \"refresh_token\": {\n                          \"type\": \"string\",\n                          \"example\": \"Gy-caJMpmGTA...\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/auth/logout\": {\n      \"post\": {\n        \"summary\": \"Log Out\",\n        \"description\": \"Log Out\",\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"operationId\": \"logout\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"token\"\n                ],\n                \"properties\": {\n                  \"refresh_token\": {\n                    \"type\": \"string\",\n                    \"example\": \"eyJ0eXAiOiJKV...\",\n                    \"description\": \"JWT access token you want to logout.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Request successful\"\n          }\n        }\n      }\n    },\n    \"/auth/password/request\": {\n      \"post\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"operationId\": \"passwordRequest\",\n        \"summary\": \"Request a Password Reset\",\n        \"description\": \"Request a reset password email to be send.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"example\": \"admin@example.com\",\n                    \"description\": \"Email address of the user you're requesting a reset for.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/auth/password/reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"operationId\": \"passwordReset\",\n        \"summary\": \"Reset a Password\",\n        \"description\": \"The request a password reset endpoint sends an email with a link to the admin app which in turn uses this endpoint to allow the user to reset their password.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"token\",\n                  \"password\"\n                ],\n                \"properties\": {\n                  \"token\": {\n                    \"type\": \"string\",\n                    \"example\": \"eyJ0eXAiOiJKV1Qi...\",\n                    \"description\": \"One-time use JWT token that is used to verify the user.\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"example\": \"password\",\n                    \"format\": \"password\",\n                    \"description\": \"New password for the user.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/auth/oauth\": {\n      \"get\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"operationId\": \"oauth\",\n        \"summary\": \"List OAuth Providers\",\n        \"description\": \"List configured OAuth providers.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"public\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"example\": [\n                        \"github\",\n                        \"facebook\"\n                      ],\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/auth/oauth/{provider}\": {\n      \"get\": {\n        \"summary\": \"Authenticated using an OAuth provider\",\n        \"description\": \"Start OAuth flow using the specified provider\",\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"operationId\": \"oauthProvider\",\n        \"parameters\": [\n          {\n            \"name\": \"provider\",\n            \"in\": \"path\",\n            \"description\": \"Key of the activated OAuth provider.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"redirect\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Where to redirect on successful login.\u003cbr/\u003eIf set the authentication details are set inside cookies otherwise a JSON is returned.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"public\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"token\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/extensions/interfaces\": {\n      \"get\": {\n        \"summary\": \"List Interfaces\",\n        \"description\": \"List all installed custom interfaces.\",\n        \"operationId\": \"getInterfaces\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Extensions\"\n        ]\n      }\n    },\n    \"/extensions/layouts\": {\n      \"get\": {\n        \"summary\": \"List Layouts\",\n        \"description\": \"List all installed custom layouts.\",\n        \"operationId\": \"getLayouts\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Extensions\"\n        ]\n      }\n    },\n    \"/extensions/displays\": {\n      \"get\": {\n        \"summary\": \"List Displays\",\n        \"description\": \"List all installed custom displays.\",\n        \"operationId\": \"getDisplays\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Extensions\"\n        ]\n      }\n    },\n    \"/extensions/modules\": {\n      \"get\": {\n        \"summary\": \"List Modules\",\n        \"description\": \"List all installed custom modules.\",\n        \"operationId\": \"getModules\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Extensions\"\n        ]\n      }\n    },\n    \"/server/info\": {\n      \"get\": {\n        \"summary\": \"System Info\",\n        \"description\": \"Perform a system status check and return the options.\",\n        \"operationId\": \"serverInfo\",\n        \"parameters\": [\n          {\n            \"description\": \"The first time you create a project, the provided token will be saved and required for subsequent project installs. It can also be found and configured in `/config/__api.json` on your server.\",\n            \"in\": \"query\",\n            \"name\": \"super_admin_token\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Server\"\n        ]\n      }\n    },\n    \"/server/ping\": {\n      \"get\": {\n        \"summary\": \"Ping\",\n        \"description\": \"Ping, pong. Ping.. pong.\",\n        \"operationId\": \"ping\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/text\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"pattern\": \"pong\",\n                  \"example\": \"pong\"\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          }\n        },\n        \"tags\": [\n          \"Server\"\n        ]\n      }\n    },\n    \"/utils/random/string\": {\n      \"get\": {\n        \"summary\": \"Get a Random String\",\n        \"description\": \"Returns a random string of given length.\",\n        \"operationId\": \"random\",\n        \"parameters\": [\n          {\n            \"description\": \"Length of the random string.\",\n            \"in\": \"query\",\n            \"name\": \"length\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"string\",\n                      \"example\": \"1\u003eM3+4oh.S\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          }\n        },\n        \"tags\": [\n          \"Utilities\"\n        ]\n      }\n    },\n    \"/utils/sort/{collection}\": {\n      \"post\": {\n        \"summary\": \"Sort Items\",\n        \"description\": \"Re-sort items in collection based on start and to value of item\",\n        \"operationId\": \"sort\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"item\": {\n                    \"description\": \"Primary key of item to move\",\n                    \"type\": \"number\"\n                  },\n                  \"to\": {\n                    \"description\": \"Primary key of item where to move the current item to\",\n                    \"type\": \"number\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          }\n        },\n        \"tags\": [\n          \"Utilities\"\n        ]\n      }\n    },\n    \"/items/article\": {\n      \"post\": {\n        \"summary\": \"Create an Item\",\n        \"description\": \"Create a new article item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticle\"\n        ],\n        \"operationId\": \"createItemsArticle\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/ItemsArticle\"\n                    }\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/ItemsArticle\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsArticle\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"List Items\",\n        \"description\": \"List the article items.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticle\"\n        ],\n        \"operationId\": \"readItemsArticle\",\n        \"security\": [\n          {\n            \"Auth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"$ref\": \"#/components/schemas/ItemsArticle\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/items/article/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve an Item\",\n        \"description\": \"Retrieve a single article item by unique identifier.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticle\"\n        ],\n        \"operationId\": \"readSingleItemsArticle\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsArticle\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\": \"Update an Item\",\n        \"description\": \"Update an existing article item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticle\"\n        ],\n        \"operationId\": \"updateSingleItemsArticle\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"$ref\": \"#/components/schemas/ItemsArticle\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsArticle\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete an Item\",\n        \"description\": \"Delete an existing article item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticle\"\n        ],\n        \"operationId\": \"deleteSingleItemsArticle\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      }\n    },\n    \"/items/article_author\": {\n      \"post\": {\n        \"summary\": \"Create an Item\",\n        \"description\": \"Create a new article_author item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticleAuthor\"\n        ],\n        \"operationId\": \"createItemsArticleAuthor\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/ItemsArticleAuthor\"\n                    }\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/ItemsArticleAuthor\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsArticleAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"List Items\",\n        \"description\": \"List the article_author items.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticleAuthor\"\n        ],\n        \"operationId\": \"readItemsArticleAuthor\",\n        \"security\": [\n          {\n            \"Auth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"$ref\": \"#/components/schemas/ItemsArticleAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/items/article_author/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve an Item\",\n        \"description\": \"Retrieve a single article_author item by unique identifier.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticleAuthor\"\n        ],\n        \"operationId\": \"readSingleItemsArticleAuthor\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsArticleAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\": \"Update an Item\",\n        \"description\": \"Update an existing article_author item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticleAuthor\"\n        ],\n        \"operationId\": \"updateSingleItemsArticleAuthor\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"$ref\": \"#/components/schemas/ItemsArticleAuthor\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsArticleAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete an Item\",\n        \"description\": \"Delete an existing article_author item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsArticleAuthor\"\n        ],\n        \"operationId\": \"deleteSingleItemsArticleAuthor\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      }\n    },\n    \"/items/author\": {\n      \"post\": {\n        \"summary\": \"Create an Item\",\n        \"description\": \"Create a new author item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsAuthor\"\n        ],\n        \"operationId\": \"createItemsAuthor\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/ItemsAuthor\"\n                    }\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/ItemsAuthor\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"List Items\",\n        \"description\": \"List the author items.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsAuthor\"\n        ],\n        \"operationId\": \"readItemsAuthor\",\n        \"security\": [\n          {\n            \"Auth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"$ref\": \"#/components/schemas/ItemsAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/items/author/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve an Item\",\n        \"description\": \"Retrieve a single author item by unique identifier.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsAuthor\"\n        ],\n        \"operationId\": \"readSingleItemsAuthor\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\": \"Update an Item\",\n        \"description\": \"Update an existing author item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsAuthor\"\n        ],\n        \"operationId\": \"updateSingleItemsAuthor\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"$ref\": \"#/components/schemas/ItemsAuthor\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ItemsAuthor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete an Item\",\n        \"description\": \"Delete an existing author item.\",\n        \"tags\": [\n          \"Items\",\n          \"ItemsAuthor\"\n        ],\n        \"operationId\": \"deleteSingleItemsAuthor\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        }\n      }\n    },\n    \"/activity\": {\n      \"get\": {\n        \"operationId\": \"getActivities\",\n        \"summary\": \"List Activity Actions\",\n        \"description\": \"Returns a list of activity actions.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Activity\"\n        ]\n      }\n    },\n    \"/activity/comment\": {\n      \"post\": {\n        \"summary\": \"Create a Comment\",\n        \"description\": \"Creates a new comment.\",\n        \"operationId\": \"createComment\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"collection\",\n                  \"item\",\n                  \"comment\"\n                ],\n                \"properties\": {\n                  \"collection\": {\n                    \"type\": \"string\",\n                    \"example\": \"projects\"\n                  },\n                  \"item\": {\n                    \"type\": \"integer\",\n                    \"example\": 1\n                  },\n                  \"comment\": {\n                    \"type\": \"string\",\n                    \"example\": \"A new comment\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Activity\"\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Activity\"\n        ]\n      }\n    },\n    \"/activity/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve an Activity Action\",\n        \"description\": \"Retrieves the details of an existing activity action. Provide the primary key of the activity action and Directus will return the corresponding information.\",\n        \"operationId\": \"getActivity\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Id\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Activity\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Activity\"\n        ]\n      }\n    },\n    \"/activity/comment/{id}\": {\n      \"patch\": {\n        \"summary\": \"Update a Comment\",\n        \"description\": \"Update the content of an existing comment.\",\n        \"operationId\": \"updateComment\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Id\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"comment\": {\n                    \"type\": \"string\",\n                    \"example\": \"My updated comment\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Activity\"\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Activity\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Comment\",\n        \"description\": \"Delete an existing comment. Deleted comments can not be retrieved.\",\n        \"operationId\": \"deleteComment\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Id\"\n          }\n        ],\n        \"responses\": {\n          \"203\": {\n            \"description\": \"Deleted succsessfully\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Activity\"\n        ]\n      }\n    },\n    \"/collections\": {\n      \"get\": {\n        \"summary\": \"List Collections\",\n        \"description\": \"Returns a list of the collections available in the project.\",\n        \"operationId\": \"getCollections\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Collections\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Collections\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a Collection\",\n        \"description\": \"Create a new collection in Directus.\",\n        \"operationId\": \"createCollection\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"collection\",\n                  \"fields\"\n                ],\n                \"properties\": {\n                  \"collection\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique name of the collection.\",\n                    \"example\": \"my_collection\"\n                  },\n                  \"fields\": {\n                    \"type\": \"array\",\n                    \"description\": \"The fields contained in this collection. See the fields reference for more information. Each individual field requires field, type, and interface to be provided.\",\n                    \"items\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"icon\": {\n                    \"description\": \"Name of a Google Material Design Icon that's assigned to this collection.\",\n                    \"type\": \"string\",\n                    \"example\": \"people\",\n                    \"nullable\": true\n                  },\n                  \"note\": {\n                    \"description\": \"A note describing the collection.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  },\n                  \"display_template\": {\n                    \"description\": \"Text representation of how items from this collection are shown across the system.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  },\n                  \"hidden\": {\n                    \"description\": \"Whether or not the collection is hidden from the navigation in the admin app.\",\n                    \"type\": \"boolean\",\n                    \"example\": false\n                  },\n                  \"singleton\": {\n                    \"description\": \"Whether or not the collection is treated as a single object.\",\n                    \"type\": \"boolean\",\n                    \"example\": false\n                  },\n                  \"translation\": {\n                    \"description\": \"Key value pairs of how to show this collection's name in different languages in the admin app.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  },\n                  \"archive_field\": {\n                    \"description\": \"What field holds the archive value.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  },\n                  \"archive_app_filter\": {\n                    \"description\": \"What value to use for \\\"archived\\\" items.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  },\n                  \"archive_value\": {\n                    \"description\": \"What value to use to \\\"unarchive\\\" items.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  },\n                  \"unarchive_value\": {\n                    \"description\": \"Whether or not to show the \\\"archived\\\" filter.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  },\n                  \"sort_field\": {\n                    \"description\": \"The sort field in the collection.\",\n                    \"type\": \"string\",\n                    \"example\": null,\n                    \"nullable\": true\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Collections\"\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Collections\"\n        ]\n      }\n    },\n    \"/collections/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Collection\",\n        \"description\": \"Retrieves the details of a single collection.\",\n        \"operationId\": \"getCollection\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Collections\"\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Collections\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a Collection\",\n        \"description\": \"Update an existing collection.\",\n        \"operationId\": \"updateCollection\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"meta\": {\n                    \"description\": \"Metadata of the collection.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"icon\": {\n                        \"description\": \"Name of a Google Material Design Icon that's assigned to this collection.\",\n                        \"type\": \"string\",\n                        \"example\": \"people\",\n                        \"nullable\": true\n                      },\n                      \"note\": {\n                        \"description\": \"A note describing the collection.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      },\n                      \"display_template\": {\n                        \"description\": \"Text representation of how items from this collection are shown across the system.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      },\n                      \"hidden\": {\n                        \"description\": \"Whether or not the collection is hidden from the navigation in the admin app.\",\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"singleton\": {\n                        \"description\": \"Whether or not the collection is treated as a single object.\",\n                        \"type\": \"boolean\",\n                        \"example\": false\n                      },\n                      \"translation\": {\n                        \"description\": \"Key value pairs of how to show this collection's name in different languages in the admin app.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      },\n                      \"archive_field\": {\n                        \"description\": \"What field holds the archive value.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      },\n                      \"archive_app_filter\": {\n                        \"description\": \"What value to use for \\\"archived\\\" items.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      },\n                      \"archive_value\": {\n                        \"description\": \"What value to use to \\\"unarchive\\\" items.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      },\n                      \"unarchive_value\": {\n                        \"description\": \"Whether or not to show the \\\"archived\\\" filter.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      },\n                      \"sort_field\": {\n                        \"description\": \"The sort field in the collection.\",\n                        \"type\": \"string\",\n                        \"example\": null,\n                        \"nullable\": true\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Collections\"\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Collections\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Collection\",\n        \"description\": \"Delete an existing collection. Warning: This will delete the whole collection, including the items within. Proceed with caution.\",\n        \"operationId\": \"deleteCollection\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Collections\"\n        ]\n      }\n    },\n    \"/fields\": {\n      \"get\": {\n        \"summary\": \"List All Fields\",\n        \"description\": \"Returns a list of the fields available in the project.\",\n        \"operationId\": \"getFields\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Fields\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Fields\"\n        ]\n      }\n    },\n    \"/fields/{collection}\": {\n      \"get\": {\n        \"summary\": \"List Fields in Collection\",\n        \"description\": \"Returns a list of the fields available in the given collection.\",\n        \"operationId\": \"getCollectionFields\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Fields\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Fields\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create Field in Collection\",\n        \"description\": \"Create a new field in a given collection.\",\n        \"operationId\": \"createField\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"required\": [\n                  \"field\",\n                  \"datatype\",\n                  \"type\",\n                  \"length\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"field\": {\n                    \"description\": \"Unique name of the field. Field name is unique within the collection.\",\n                    \"example\": \"id\",\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"description\": \"Directus specific data type. Used to cast values in the API.\",\n                    \"example\": \"integer\",\n                    \"type\": \"string\"\n                  },\n                  \"schema\": {\n                    \"description\": \"The schema info.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"description\": \"The name of the field.\",\n                        \"example\": \"title\",\n                        \"type\": \"string\"\n                      },\n                      \"table\": {\n                        \"description\": \"The collection of the field.\",\n                        \"example\": \"posts\",\n                        \"type\": \"string\"\n                      },\n                      \"type\": {\n                        \"description\": \"The type of the field.\",\n                        \"example\": \"string\",\n                        \"type\": \"string\"\n                      },\n                      \"default_value\": {\n                        \"description\": \"The default value of the field.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"max_length\": {\n                        \"description\": \"The max length of the field.\",\n                        \"example\": null,\n                        \"type\": \"integer\",\n                        \"nullable\": true\n                      },\n                      \"is_nullable\": {\n                        \"description\": \"If the field is nullable.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"is_primary_key\": {\n                        \"description\": \"If the field is primary key.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"has_auto_increment\": {\n                        \"description\": \"If the field has auto increment.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"foreign_key_column\": {\n                        \"description\": \"Related column from the foreign key constraint.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"foreign_key_table\": {\n                        \"description\": \"Related table from the foreign key constraint.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"comment\": {\n                        \"description\": \"Comment as saved in the database.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"schema\": {\n                        \"description\": \"Database schema (pg only).\",\n                        \"example\": \"public\",\n                        \"type\": \"string\"\n                      },\n                      \"foreign_key_schema\": {\n                        \"description\": \"Related schema from the foreign key constraint (pg only).\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      }\n                    }\n                  },\n                  \"meta\": {\n                    \"description\": \"The meta info.\",\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"properties\": {\n                      \"id\": {\n                        \"description\": \"Unique identifier for the field in the `directus_fields` collection.\",\n                        \"example\": 3,\n                        \"type\": \"integer\"\n                      },\n                      \"collection\": {\n                        \"description\": \"Unique name of the collection this field is in.\",\n                        \"example\": \"posts\",\n                        \"type\": \"string\"\n                      },\n                      \"field\": {\n                        \"description\": \"Unique name of the field. Field name is unique within the collection.\",\n                        \"example\": \"title\",\n                        \"type\": \"string\"\n                      },\n                      \"special\": {\n                        \"description\": \"Transformation flag for field\",\n                        \"example\": null,\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"nullable\": true\n                      },\n                      \"interface\": {\n                        \"description\": \"What interface is used in the admin app to edit the value for this field.\",\n                        \"example\": \"primary-key\",\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"options\": {\n                        \"description\": \"Options for the interface that's used. This format is based on the individual interface.\",\n                        \"example\": null,\n                        \"type\": \"object\",\n                        \"nullable\": true\n                      },\n                      \"display\": {\n                        \"description\": \"What display is used in the admin app to display the value for this field.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"display_options\": {\n                        \"description\": \"Options for the display that's used. This format is based on the individual display.\",\n                        \"example\": null,\n                        \"type\": \"object\",\n                        \"nullable\": true\n                      },\n                      \"locked\": {\n                        \"description\": \"If the field can be altered by the end user. Directus system fields have this value set to `true`.\",\n                        \"example\": true,\n                        \"type\": \"boolean\"\n                      },\n                      \"readonly\": {\n                        \"description\": \"Prevents the user from editing the value in the field.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"hidden\": {\n                        \"description\": \"If this field should be hidden.\",\n                        \"example\": true,\n                        \"type\": \"boolean\"\n                      },\n                      \"sort\": {\n                        \"description\": \"Sort order of this field on the edit page of the admin app.\",\n                        \"example\": 1,\n                        \"type\": \"integer\",\n                        \"nullable\": true\n                      },\n                      \"width\": {\n                        \"description\": \"Width of the field on the edit form.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"enum\": [\n                          \"half\",\n                          \"half-left\",\n                          \"half-right\",\n                          \"full\",\n                          \"fill\",\n                          null\n                        ]\n                      },\n                      \"group\": {\n                        \"description\": \"What field group this field is part of.\",\n                        \"example\": null,\n                        \"type\": \"integer\",\n                        \"nullable\": true\n                      },\n                      \"translation\": {\n                        \"description\": \"Key value pair of `\u003clanguage\u003e: \u003ctranslation\u003e` that allows the user to change the displayed name of the field in the admin app.\",\n                        \"example\": null,\n                        \"type\": \"object\",\n                        \"nullable\": true\n                      },\n                      \"note\": {\n                        \"description\": \"A user provided note for the field. Will be rendered alongside the interface on the edit page.\",\n                        \"example\": \"\",\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Fields\"\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Fields\"\n        ]\n      }\n    },\n    \"/fields/{collection}/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Field\",\n        \"description\": \"Retrieves the details of a single field in a given collection.\",\n        \"operationId\": \"getCollectionField\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Fields\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Fields\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a Field\",\n        \"description\": \"Update an existing field.\",\n        \"operationId\": \"updateField\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"field\": {\n                    \"description\": \"Unique name of the field. Field name is unique within the collection.\",\n                    \"example\": \"id\",\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"description\": \"Directus specific data type. Used to cast values in the API.\",\n                    \"example\": \"integer\",\n                    \"type\": \"string\"\n                  },\n                  \"schema\": {\n                    \"description\": \"The schema info.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"description\": \"The name of the field.\",\n                        \"example\": \"title\",\n                        \"type\": \"string\"\n                      },\n                      \"table\": {\n                        \"description\": \"The collection of the field.\",\n                        \"example\": \"posts\",\n                        \"type\": \"string\"\n                      },\n                      \"type\": {\n                        \"description\": \"The type of the field.\",\n                        \"example\": \"string\",\n                        \"type\": \"string\"\n                      },\n                      \"default_value\": {\n                        \"description\": \"The default value of the field.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"max_length\": {\n                        \"description\": \"The max length of the field.\",\n                        \"example\": null,\n                        \"type\": \"integer\",\n                        \"nullable\": true\n                      },\n                      \"is_nullable\": {\n                        \"description\": \"If the field is nullable.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"is_primary_key\": {\n                        \"description\": \"If the field is primary key.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"has_auto_increment\": {\n                        \"description\": \"If the field has auto increment.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"foreign_key_column\": {\n                        \"description\": \"Related column from the foreign key constraint.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"foreign_key_table\": {\n                        \"description\": \"Related table from the foreign key constraint.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"comment\": {\n                        \"description\": \"Comment as saved in the database.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"schema\": {\n                        \"description\": \"Database schema (pg only).\",\n                        \"example\": \"public\",\n                        \"type\": \"string\"\n                      },\n                      \"foreign_key_schema\": {\n                        \"description\": \"Related schema from the foreign key constraint (pg only).\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      }\n                    }\n                  },\n                  \"meta\": {\n                    \"description\": \"The meta info.\",\n                    \"type\": \"object\",\n                    \"nullable\": true,\n                    \"properties\": {\n                      \"id\": {\n                        \"description\": \"Unique identifier for the field in the `directus_fields` collection.\",\n                        \"example\": 3,\n                        \"type\": \"integer\"\n                      },\n                      \"collection\": {\n                        \"description\": \"Unique name of the collection this field is in.\",\n                        \"example\": \"posts\",\n                        \"type\": \"string\"\n                      },\n                      \"field\": {\n                        \"description\": \"Unique name of the field. Field name is unique within the collection.\",\n                        \"example\": \"title\",\n                        \"type\": \"string\"\n                      },\n                      \"special\": {\n                        \"description\": \"Transformation flag for field\",\n                        \"example\": null,\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"nullable\": true\n                      },\n                      \"interface\": {\n                        \"description\": \"What interface is used in the admin app to edit the value for this field.\",\n                        \"example\": \"primary-key\",\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"options\": {\n                        \"description\": \"Options for the interface that's used. This format is based on the individual interface.\",\n                        \"example\": null,\n                        \"type\": \"object\",\n                        \"nullable\": true\n                      },\n                      \"display\": {\n                        \"description\": \"What display is used in the admin app to display the value for this field.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      },\n                      \"display_options\": {\n                        \"description\": \"Options for the display that's used. This format is based on the individual display.\",\n                        \"example\": null,\n                        \"type\": \"object\",\n                        \"nullable\": true\n                      },\n                      \"locked\": {\n                        \"description\": \"If the field can be altered by the end user. Directus system fields have this value set to `true`.\",\n                        \"example\": true,\n                        \"type\": \"boolean\"\n                      },\n                      \"readonly\": {\n                        \"description\": \"Prevents the user from editing the value in the field.\",\n                        \"example\": false,\n                        \"type\": \"boolean\"\n                      },\n                      \"hidden\": {\n                        \"description\": \"If this field should be hidden.\",\n                        \"example\": true,\n                        \"type\": \"boolean\"\n                      },\n                      \"sort\": {\n                        \"description\": \"Sort order of this field on the edit page of the admin app.\",\n                        \"example\": 1,\n                        \"type\": \"integer\",\n                        \"nullable\": true\n                      },\n                      \"width\": {\n                        \"description\": \"Width of the field on the edit form.\",\n                        \"example\": null,\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"enum\": [\n                          \"half\",\n                          \"half-left\",\n                          \"half-right\",\n                          \"full\",\n                          \"fill\",\n                          null\n                        ]\n                      },\n                      \"group\": {\n                        \"description\": \"What field group this field is part of.\",\n                        \"example\": null,\n                        \"type\": \"integer\",\n                        \"nullable\": true\n                      },\n                      \"translation\": {\n                        \"description\": \"Key value pair of `\u003clanguage\u003e: \u003ctranslation\u003e` that allows the user to change the displayed name of the field in the admin app.\",\n                        \"example\": null,\n                        \"type\": \"object\",\n                        \"nullable\": true\n                      },\n                      \"note\": {\n                        \"description\": \"A user provided note for the field. Will be rendered alongside the interface on the edit page.\",\n                        \"example\": \"\",\n                        \"type\": \"string\",\n                        \"nullable\": true\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Fields\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Fields\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Field\",\n        \"description\": \"Delete an existing field.\",\n        \"operationId\": \"deleteField\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Fields\"\n        ]\n      }\n    },\n    \"/files\": {\n      \"get\": {\n        \"summary\": \"List Files\",\n        \"description\": \"List the files.\",\n        \"tags\": [\n          \"Files\"\n        ],\n        \"operationId\": \"getFiles\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Files\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a File\",\n        \"description\": \"Create a new file\",\n        \"tags\": [\n          \"Files\"\n        ],\n        \"operationId\": \"createFile\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Files\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/files/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Files\",\n        \"description\": \"Retrieve a single file by unique identifier.\",\n        \"tags\": [\n          \"Files\"\n        ],\n        \"operationId\": \"getFile\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Files\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\": \"Update a File\",\n        \"description\": \"Update an existing file.\",\n        \"tags\": [\n          \"Files\"\n        ],\n        \"operationId\": \"updateFile\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Files\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a File\",\n        \"description\": \"Delete an existing file.\",\n        \"tags\": [\n          \"Files\"\n        ],\n        \"operationId\": \"deleteFile\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/folders\": {\n      \"get\": {\n        \"summary\": \"List Folders\",\n        \"description\": \"List the folders.\",\n        \"operationId\": \"getFolders\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Folders\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Folders\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a Folder\",\n        \"description\": \"Create a new folder.\",\n        \"operationId\": \"createFolder\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Amsterdam\",\n                    \"description\": \"Name of the folder.\"\n                  },\n                  \"parent\": {\n                    \"description\": \"Unique identifier of the parent folder. This allows for nested folders.\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Folders\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/folders/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Folder\",\n        \"description\": \"Retrieve a single folder by unique identifier.\",\n        \"operationId\": \"getFolder\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Folders\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Folders\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a Folder\",\n        \"description\": \"Update an existing folder\",\n        \"operationId\": \"updateFolder\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the folder. Can't be null or empty.\"\n                  },\n                  \"parent\": {\n                    \"type\": \"integer\",\n                    \"example\": 3,\n                    \"description\": \"Unique identifier of the parent folder. This allows for nested folders.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Folders\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Folders\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Folder\",\n        \"description\": \"Delete an existing folder\",\n        \"operationId\": \"deleteFolder\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Folders\"\n        ]\n      }\n    },\n    \"/permissions\": {\n      \"get\": {\n        \"summary\": \"List Permissions\",\n        \"description\": \"List all permissions.\",\n        \"operationId\": \"getPermissions\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Page\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Permissions\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Permissions\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a Permission\",\n        \"description\": \"Create a new permission.\",\n        \"operationId\": \"createPermission\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"collection\": {\n                    \"description\": \"What collection this permission applies to.\",\n                    \"type\": \"string\",\n                    \"example\": \"customers\"\n                  },\n                  \"comment\": {\n                    \"description\": \"If the user can post comments.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"create\",\n                      \"update\",\n                      \"full\"\n                    ]\n                  },\n                  \"create\": {\n                    \"description\": \"If the user can create items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"full\"\n                    ]\n                  },\n                  \"delete\": {\n                    \"description\": \"If the user can update items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"mine\",\n                      \"role\",\n                      \"full\"\n                    ]\n                  },\n                  \"explain\": {\n                    \"description\": \"If the user is required to leave a comment explaining what was changed.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"create\",\n                      \"update\",\n                      \"always\"\n                    ]\n                  },\n                  \"read\": {\n                    \"description\": \"If the user can read items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"mine\",\n                      \"role\",\n                      \"full\"\n                    ]\n                  },\n                  \"role\": {\n                    \"description\": \"Unique identifier of the role this permission applies to.\",\n                    \"type\": \"integer\",\n                    \"example\": 3\n                  },\n                  \"read_field_blacklist\": {\n                    \"description\": \"Explicitly denies read access for specific fields.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    },\n                    \"example\": [\n                      \"featured_image\"\n                    ]\n                  },\n                  \"status\": {\n                    \"description\": \"What status this permission applies to.\",\n                    \"type\": \"string\"\n                  },\n                  \"status_blacklist\": {\n                    \"description\": \"Explicitly denies specific statuses to be used.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"update\": {\n                    \"description\": \"If the user can update items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"mine\",\n                      \"role\",\n                      \"full\"\n                    ]\n                  },\n                  \"write_field_blacklist\": {\n                    \"description\": \"Explicitly denies write access for specific fields.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Permissions\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/permissions/me\": {\n      \"get\": {\n        \"summary\": \"List My Permissions\",\n        \"description\": \"List the permissions that apply to the current user.\",\n        \"operationId\": \"getMyPermissions\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Permissions\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/permissions/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Permission\",\n        \"description\": \"Retrieve a single permissions object by unique identifier.\",\n        \"operationId\": \"getPermission\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Permissions\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Permissions\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a Permission\",\n        \"description\": \"Update an existing permission\",\n        \"operationId\": \"updatePermission\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"collection\": {\n                    \"description\": \"What collection this permission applies to.\",\n                    \"type\": \"object\"\n                  },\n                  \"comment\": {\n                    \"description\": \"If the user can post comments. `full`.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"create\",\n                      \"update\"\n                    ]\n                  },\n                  \"create\": {\n                    \"description\": \"If the user can create items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"full\"\n                    ]\n                  },\n                  \"delete\": {\n                    \"description\": \"If the user can update items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"mine\",\n                      \"role\",\n                      \"full\"\n                    ]\n                  },\n                  \"explain\": {\n                    \"description\": \"If the user is required to leave a comment explaining what was changed.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"create\",\n                      \"update\",\n                      \"always\"\n                    ]\n                  },\n                  \"read\": {\n                    \"description\": \"If the user can read items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"mine\",\n                      \"role\",\n                      \"full\"\n                    ]\n                  },\n                  \"read_field_blacklist\": {\n                    \"description\": \"Explicitly denies read access for specific fields.\",\n                    \"type\": \"object\"\n                  },\n                  \"role\": {\n                    \"description\": \"Unique identifier of the role this permission applies to.\",\n                    \"type\": \"object\"\n                  },\n                  \"status\": {\n                    \"description\": \"What status this permission applies to.\",\n                    \"type\": \"object\"\n                  },\n                  \"status_blacklist\": {\n                    \"description\": \"Explicitly denies specific statuses to be used.\",\n                    \"type\": \"object\"\n                  },\n                  \"update\": {\n                    \"description\": \"If the user can update items.\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"none\",\n                      \"mine\",\n                      \"role\",\n                      \"full\"\n                    ]\n                  },\n                  \"write_field_blacklist\": {\n                    \"description\": \"Explicitly denies write access for specific fields.\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Permissions\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Permissions\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Permission\",\n        \"description\": \"Delete an existing permission\",\n        \"operationId\": \"deletePermission\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Permissions\"\n        ]\n      }\n    },\n    \"/presets\": {\n      \"get\": {\n        \"tags\": [\n          \"Presets\"\n        ],\n        \"operationId\": \"getPresets\",\n        \"summary\": \"List Presets\",\n        \"description\": \"List the presets.\",\n        \"security\": [\n          {\n            \"Auth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Page\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Presets\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Presets\"\n        ],\n        \"operationId\": \"createPreset\",\n        \"summary\": \"Create a Preset\",\n        \"description\": \"Create a new preset.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"collection\"\n                ],\n                \"properties\": {\n                  \"collection\": {\n                    \"type\": \"string\",\n                    \"description\": \"What collection this collection preset is used for.\",\n                    \"example\": \"articles\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name for the bookmark. If this is set, the collection preset will be considered to be a bookmark.\",\n                    \"example\": \"Highly rated articles\"\n                  },\n                  \"role\": {\n                    \"type\": \"string\",\n                    \"description\": \"The unique identifier of a role in the platform. If user is null, this will be used to apply the collection preset or bookmark for all users in the role.\",\n                    \"example\": null\n                  },\n                  \"search\": {\n                    \"type\": \"string\",\n                    \"description\": \"What the user searched for in search/filter in the header bar.\"\n                  },\n                  \"filters\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"key\": {\n                          \"type\": \"string\",\n                          \"example\": \"aHKLAakdVghzD\"\n                        },\n                        \"field\": {\n                          \"type\": \"string\",\n                          \"example\": \"rating\"\n                        },\n                        \"operator\": {\n                          \"type\": \"string\",\n                          \"example\": \"gte\"\n                        },\n                        \"value\": {\n                          \"type\": \"integer\",\n                          \"example\": 4.5\n                        }\n                      }\n                    }\n                  },\n                  \"layout\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the view type that is used.\"\n                  },\n                  \"layout_query\": {\n                    \"type\": \"string\",\n                    \"description\": \"Layout query that's saved per layout type. Controls what data is fetched on load. These follow the same format as the JS SDK parameters.\"\n                  },\n                  \"layout_options\": {\n                    \"type\": \"string\",\n                    \"description\": \"Options of the views. The properties in here are controlled by the layout.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Presets\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/presets/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Presets\"\n        ],\n        \"operationId\": \"getPreset\",\n        \"summary\": \"Retrieve a Preset\",\n        \"description\": \"Retrieve a single preset by unique identifier.\",\n        \"security\": [\n          {\n            \"Auth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Presets\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Presets\"\n        ],\n        \"operationId\": \"updatePreset\",\n        \"summary\": \"Update a Preset\",\n        \"description\": \"Update an existing preset.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"collection\"\n                ],\n                \"properties\": {\n                  \"collection\": {\n                    \"type\": \"string\",\n                    \"description\": \"What collection this collection preset is used for.\",\n                    \"example\": \"articles\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name for the bookmark. If this is set, the collection preset will be considered to be a bookmark.\",\n                    \"example\": \"Highly rated articles\"\n                  },\n                  \"role\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The unique identifier of a role in the platform. If user is null, this will be used to apply the collection preset or bookmark for all users in the role.\"\n                  },\n                  \"search_query\": {\n                    \"type\": \"string\",\n                    \"description\": \"What the user searched for in search/filter in the header bar.\"\n                  },\n                  \"filters\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"field\": {\n                          \"type\": \"string\",\n                          \"example\": \"rating\"\n                        },\n                        \"operator\": {\n                          \"type\": \"string\",\n                          \"example\": \"gte\"\n                        },\n                        \"value\": {\n                          \"type\": \"integer\",\n                          \"example\": 4.5\n                        }\n                      }\n                    }\n                  },\n                  \"view_type\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the view type that is used. Defaults to tabular.\"\n                  },\n                  \"view_query\": {\n                    \"type\": \"string\",\n                    \"description\": \"View query that's saved per view type. Controls what data is fetched on load. These follow the same format as the JS SDK parameters.\"\n                  },\n                  \"view_options\": {\n                    \"type\": \"string\",\n                    \"description\": \"Options of the views. The properties in here are controlled by the layout.\"\n                  },\n                  \"translation\": {\n                    \"type\": \"object\",\n                    \"description\": \"Key value pair of language-translation. Can be used to translate the bookmark title in multiple languages.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Presets\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Presets\"\n        ],\n        \"operationId\": \"deletePreset\",\n        \"summary\": \"Delete a Preset\",\n        \"description\": \"Delete an existing preset.\",\n        \"security\": [\n          {\n            \"Auth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/relations\": {\n      \"get\": {\n        \"summary\": \"List Relations\",\n        \"description\": \"List the relations.\",\n        \"operationId\": \"getRelations\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Page\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Relations\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Relations\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a Relation\",\n        \"description\": \"Create a new relation.\",\n        \"operationId\": \"createRelation\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"collection_many\": {\n                    \"description\": \"Collection that has the field that holds the foreign key.\",\n                    \"type\": \"string\",\n                    \"example\": \"articles\"\n                  },\n                  \"collection_one\": {\n                    \"description\": \"Collection on the _one_ side of the relationship.\",\n                    \"type\": \"string\",\n                    \"example\": \"authors\"\n                  },\n                  \"field_many\": {\n                    \"description\": \"Foreign key. Field that holds the primary key of the related collection.\",\n                    \"type\": \"string\",\n                    \"example\": \"author\"\n                  },\n                  \"field_one\": {\n                    \"description\": \"Alias column that serves as the _one_ side of the relationship.\",\n                    \"type\": \"string\",\n                    \"example\": \"books\"\n                  },\n                  \"junction_field\": {\n                    \"description\": \"Field on the junction table that holds the primary key of the related collection.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Relations\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Relations\"\n        ]\n      }\n    },\n    \"/relations/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Relation\",\n        \"description\": \"Retrieve a single relation by unique identifier.\",\n        \"operationId\": \"getRelation\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Relations\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Relations\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a Relation\",\n        \"description\": \"Update an existing relation\",\n        \"operationId\": \"updateRelation\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"collection_many\": {\n                    \"description\": \"Collection that has the field that holds the foreign key.\",\n                    \"type\": \"string\"\n                  },\n                  \"collection_one\": {\n                    \"description\": \"Collection on the _one_ side of the relationship.\",\n                    \"type\": \"string\"\n                  },\n                  \"field_many\": {\n                    \"description\": \"Foreign key. Field that holds the primary key of the related collection.\",\n                    \"type\": \"string\"\n                  },\n                  \"field_one\": {\n                    \"description\": \"Alias column that serves as the _one_ side of the relationship.\",\n                    \"type\": \"string\",\n                    \"example\": \"books\"\n                  },\n                  \"junction_field\": {\n                    \"description\": \"Field on the junction table that holds the primary key of the related collection.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Relations\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Relations\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Relation\",\n        \"description\": \"Delete an existing relation.\",\n        \"operationId\": \"deleteRelation\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Relations\"\n        ]\n      }\n    },\n    \"/revisions\": {\n      \"get\": {\n        \"summary\": \"List Revisions\",\n        \"description\": \"List the revisions.\",\n        \"operationId\": \"getRevisions\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Page\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Revisions\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Revisions\"\n        ]\n      }\n    },\n    \"/revisions/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Revision\",\n        \"description\": \"Retrieve a single revision by unique identifier.\",\n        \"operationId\": \"getRevision\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Id\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Revisions\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Revisions\"\n        ]\n      }\n    },\n    \"/roles\": {\n      \"get\": {\n        \"summary\": \"List Roles\",\n        \"description\": \"List the roles.\",\n        \"operationId\": \"getRoles\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Page\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Roles\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Roles\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a Role\",\n        \"description\": \"Create a new role.\",\n        \"operationId\": \"createRole\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"collection_listing\": {\n                    \"description\": \"Custom override for the admin app collection navigation.\",\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"description\": \"Description of the role.\",\n                    \"type\": \"string\"\n                  },\n                  \"enforce_2fa\": {\n                    \"description\": \"Whether or not this role enforces the use of 2FA.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"external_id\": {\n                    \"description\": \"ID used with external services in SCIM.\",\n                    \"type\": \"string\"\n                  },\n                  \"ip_whitelist\": {\n                    \"description\": \"Array of IP addresses that are allowed to connect to the API as a user of this role.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"module_listing\": {\n                    \"description\": \"Custom override for the admin app module bar navigation.\",\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"description\": \"Name of the role.\",\n                    \"type\": \"string\",\n                    \"example\": \"Interns\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Roles\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Roles\"\n        ]\n      }\n    },\n    \"/roles/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Role\",\n        \"description\": \"Retrieve a single role by unique identifier.\",\n        \"operationId\": \"getRole\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Roles\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Roles\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a Role\",\n        \"description\": \"Update an existing role\",\n        \"operationId\": \"updateRole\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"collection_listing\": {\n                    \"description\": \"Custom override for the admin app collection navigation.\",\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"description\": \"Description of the role.\",\n                    \"type\": \"string\"\n                  },\n                  \"enforce_2fa\": {\n                    \"description\": \"Whether or not this role enforces the use of 2FA.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"external_id\": {\n                    \"description\": \"ID used with external services in SCIM.\",\n                    \"type\": \"string\"\n                  },\n                  \"ip_whitelist\": {\n                    \"description\": \"Array of IP addresses that are allowed to connect to the API as a user of this role.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"module_listing\": {\n                    \"description\": \"Custom override for the admin app module bar navigation.\",\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"description\": \"Name of the role.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Roles\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Roles\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Role\",\n        \"description\": \"Delete an existing role\",\n        \"operationId\": \"deleteRole\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Roles\"\n        ]\n      }\n    },\n    \"/settings\": {\n      \"get\": {\n        \"summary\": \"Retrieve Settings\",\n        \"description\": \"List the settings.\",\n        \"operationId\": \"getSettings\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Page\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Settings\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Settings\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update Settings\",\n        \"description\": \"Update the settings\",\n        \"operationId\": \"updateSetting\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Settings\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Settings\"\n        ]\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"summary\": \"List Users\",\n        \"description\": \"List the users.\",\n        \"operationId\": \"getUsers\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Limit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Offset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Single\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Sort\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Filter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Users\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a User\",\n        \"description\": \"Create a new user.\",\n        \"operationId\": \"createUser\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Users\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Users\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a User\",\n        \"description\": \"Retrieve a single user by unique identifier.\",\n        \"operationId\": \"getUser\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Users\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a User\",\n        \"description\": \"Update an existing user\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Users\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a User\",\n        \"description\": \"Delete an existing user\",\n        \"operationId\": \"deleteUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/invite\": {\n      \"post\": {\n        \"summary\": \"Invite User(s)\",\n        \"description\": \"Invites one or more users to this project. It creates a user with an invited status, and then sends an email to the user with instructions on how to activate their account.\",\n        \"operationId\": \"invite\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"description\": \"Email address or array of email addresses of the to-be-invited user(s).\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Users\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/invite/accept\": {\n      \"post\": {\n        \"summary\": \"Accept User Invite\",\n        \"description\": \"Accepts and enables an invited user using a JWT invitation token.\",\n        \"operationId\": \"acceptInvite\",\n        \"parameters\": [\n          {\n            \"description\": \"JWT token that was sent in the email.\",\n            \"in\": \"path\",\n            \"name\": \"token\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Users\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/me\": {\n      \"get\": {\n        \"summary\": \"Retrieve Current User\",\n        \"description\": \"Retrieve the currently authenticated user.\",\n        \"operationId\": \"me\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Users\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update Current User\",\n        \"description\": \"Update the currently authenticated user.\",\n        \"operationId\": \"me\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Users\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/me/track/page\": {\n      \"patch\": {\n        \"summary\": \"Update Last Page\",\n        \"description\": \"Updates the last used page field of the currently authenticated user. This is used internally to be able to open the Directus admin app from the last page you used.\",\n        \"operationId\": \"updateLastUsedPageMe\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"last_page\": {\n                    \"description\": \"Path of the page you used last.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/me/tfa/enable\": {\n      \"post\": {\n        \"summary\": \"Enable 2FA\",\n        \"description\": \"Enables two-factor authentication for the currently authenticated user.\",\n        \"operationId\": \"meTfaEnable\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/me/tfa/disable\": {\n      \"post\": {\n        \"summary\": \"Disable 2FA\",\n        \"description\": \"Disables two-factor authentication for the currently authenticated user.\",\n        \"operationId\": \"meTfaDisable\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/webhooks\": {\n      \"get\": {\n        \"summary\": \"List Webhooks\",\n        \"description\": \"Get all webhooks.\",\n        \"operationId\": \"getWebhooks\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Webhooks\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Webhooks\"\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a Webhook\",\n        \"description\": \"Create a new webhook.\",\n        \"operationId\": \"createWebhook\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"description\": \"The name of the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": \"create articles\"\n                  },\n                  \"method\": {\n                    \"description\": \"Method used in the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": \"POST\"\n                  },\n                  \"url\": {\n                    \"description\": \"The url of the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": null\n                  },\n                  \"status\": {\n                    \"description\": \"The status of the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": \"active\"\n                  },\n                  \"data\": {\n                    \"description\": \"If yes, send the content of what was done\",\n                    \"type\": \"boolean\",\n                    \"example\": true\n                  },\n                  \"actions\": {\n                    \"description\": \"The actions that triggers this webhook.\",\n                    \"example\": null\n                  },\n                  \"collections\": {\n                    \"description\": \"The collections that triggers this webhook.\",\n                    \"example\": null\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Roles\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Webhooks\"\n        ]\n      }\n    },\n    \"/webhooks/{id}\": {\n      \"get\": {\n        \"summary\": \"Retrieve a Webhook\",\n        \"description\": \"Retrieve a single webhook by unique identifier.\",\n        \"operationId\": \"getWebhook\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Webhooks\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Webhooks\"\n        ]\n      },\n      \"patch\": {\n        \"summary\": \"Update a Webhook\",\n        \"description\": \"Update an existing webhook\",\n        \"operationId\": \"updateWebhook\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/Fields\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/Meta\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"description\": \"The name of the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": \"create articles\"\n                  },\n                  \"method\": {\n                    \"description\": \"Method used in the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": \"POST\"\n                  },\n                  \"url\": {\n                    \"description\": \"The url of the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": null\n                  },\n                  \"status\": {\n                    \"description\": \"The status of the webhook.\",\n                    \"type\": \"string\",\n                    \"example\": \"active\"\n                  },\n                  \"data\": {\n                    \"description\": \"If yes, send the content of what was done\",\n                    \"type\": \"boolean\",\n                    \"example\": true\n                  },\n                  \"actions\": {\n                    \"description\": \"The actions that triggers this webhook.\",\n                    \"example\": null\n                  },\n                  \"collections\": {\n                    \"description\": \"The collections that triggers this webhook.\",\n                    \"example\": null\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Roles\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Webhooks\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Webhook\",\n        \"description\": \"Delete an existing webhook\",\n        \"operationId\": \"deleteWebhook\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful request\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFoundError\"\n          }\n        },\n        \"tags\": [\n          \"Webhooks\"\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ItemsArticle\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"article_id\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          },\n          \"publish_date\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"format\": \"timestamp\"\n          }\n        },\n        \"x-collection\": \"article\"\n      },\n      \"ItemsArticleAuthor\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"article_id\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          },\n          \"author_email\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          },\n          \"article_author_id\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          }\n        },\n        \"x-collection\": \"article_author\"\n      },\n      \"ItemsAuthor\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          },\n          \"first_name\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"nullable\": false,\n            \"type\": \"string\"\n          }\n        },\n        \"x-collection\": \"author\"\n      },\n      \"Activity\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_activity\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the object.\",\n            \"example\": 2,\n            \"type\": \"integer\"\n          },\n          \"action\": {\n            \"description\": \"Action that was performed.\",\n            \"example\": \"update\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"create\",\n              \"update\",\n              \"delete\",\n              \"authenticate\"\n            ]\n          },\n          \"user\": {\n            \"description\": \"The user who performed this action.\",\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Users\"\n              }\n            ],\n            \"nullable\": true\n          },\n          \"timestamp\": {\n            \"description\": \"When the action happened.\",\n            \"example\": \"2019-12-05T22:52:09Z\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"ip\": {\n            \"description\": \"The IP address of the user at the time the action took place.\",\n            \"example\": \"127.0.0.1\",\n            \"oneOf\": [\n              {\n                \"type\": \"string\",\n                \"format\": \"ipv4\"\n              }\n            ]\n          },\n          \"user_agent\": {\n            \"description\": \"User agent string of the browser the user used when the action took place.\",\n            \"example\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML,like Gecko) Chrome/78.0.3904.108 Safari/537.36\",\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"description\": \"Collection identifier in which the item resides.\",\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Collections\"\n              }\n            ]\n          },\n          \"item\": {\n            \"description\": \"Unique identifier for the item the action applied to. This is always a string, even for integer primary keys.\",\n            \"example\": \"328\",\n            \"type\": \"string\"\n          },\n          \"comment\": {\n            \"description\": \"User comment. This will store the comments that show up in the right sidebar of the item edit page in the admin app.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"revisions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"integer\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Revisions\"\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"Collections\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_collections\",\n        \"properties\": {\n          \"collection\": {\n            \"description\": \"The collection key.\",\n            \"example\": \"customers\",\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"note\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"display_template\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"hidden\": {\n            \"nullable\": false,\n            \"type\": \"boolean\"\n          },\n          \"singleton\": {\n            \"nullable\": false,\n            \"type\": \"boolean\"\n          },\n          \"translations\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"archive_field\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"archive_app_filter\": {\n            \"nullable\": false,\n            \"type\": \"boolean\"\n          },\n          \"archive_value\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"unarchive_value\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sort_field\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"accountability\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"collection_divider\": {},\n          \"archive_divider\": {},\n          \"sort_divider\": {},\n          \"accountability_divider\": {}\n        }\n      },\n      \"Fields\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_fields\",\n        \"properties\": {\n          \"id\": {\n            \"nullable\": false,\n            \"type\": \"integer\"\n          },\n          \"collection\": {\n            \"description\": \"Unique name of the collection this field is in.\",\n            \"example\": \"about_us\",\n            \"type\": \"string\"\n          },\n          \"field\": {\n            \"description\": \"Unique name of the field. Field name is unique within the collection.\",\n            \"example\": \"id\",\n            \"type\": \"string\"\n          },\n          \"special\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"interface\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"display\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"display_options\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"readonly\": {\n            \"nullable\": false,\n            \"type\": \"boolean\"\n          },\n          \"hidden\": {\n            \"nullable\": false,\n            \"type\": \"boolean\"\n          },\n          \"sort\": {\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"width\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"group\": {\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"translations\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"note\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Files\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_files\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the file.\",\n            \"example\": \"8cbb43fe-4cdf-4991-8352-c461779cec02\",\n            \"type\": \"string\"\n          },\n          \"storage\": {\n            \"description\": \"Where the file is stored. Either `local` for the local filesystem or the name of the storage adapter (for example `s3`).\",\n            \"example\": \"local\",\n            \"type\": \"string\"\n          },\n          \"filename_disk\": {\n            \"description\": \"Name of the file on disk. By default, Directus uses a random hash for the filename.\",\n            \"example\": \"a88c3b72-ac58-5436-a4ec-b2858531333a.jpg\",\n            \"type\": \"string\"\n          },\n          \"filename_download\": {\n            \"description\": \"How you want to the file to be named when it's being downloaded.\",\n            \"example\": \"avatar.jpg\",\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"description\": \"Title for the file. Is extracted from the filename on upload, but can be edited by the user.\",\n            \"example\": \"User Avatar\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"MIME type of the file.\",\n            \"example\": \"image/jpeg\",\n            \"type\": \"string\"\n          },\n          \"folder\": {\n            \"description\": \"Virtual folder where this file resides in.\",\n            \"example\": null,\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Folders\"\n              }\n            ],\n            \"nullable\": true\n          },\n          \"uploaded_by\": {\n            \"description\": \"Who uploaded the file.\",\n            \"example\": \"63716273-0f29-4648-8a2a-2af2948f6f78\",\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Users\"\n              }\n            ]\n          },\n          \"uploaded_on\": {\n            \"description\": \"When the file was uploaded.\",\n            \"example\": \"2019-12-03T00:10:15+00:00\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modified_by\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"modified_on\": {\n            \"nullable\": false,\n            \"type\": \"string\",\n            \"format\": \"timestamp\"\n          },\n          \"charset\": {\n            \"description\": \"Character set of the file.\",\n            \"example\": \"binary\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"filesize\": {\n            \"description\": \"Size of the file in bytes.\",\n            \"example\": 137862,\n            \"type\": \"integer\"\n          },\n          \"width\": {\n            \"description\": \"Width of the file in pixels. Only applies to images.\",\n            \"example\": 800,\n            \"type\": \"integer\",\n            \"nullable\": true\n          },\n          \"height\": {\n            \"description\": \"Height of the file in pixels. Only applies to images.\",\n            \"example\": 838,\n            \"type\": \"integer\",\n            \"nullable\": true\n          },\n          \"duration\": {\n            \"description\": \"Duration of the file in seconds. Only applies to audio and video.\",\n            \"example\": 0,\n            \"type\": \"integer\",\n            \"nullable\": true\n          },\n          \"embed\": {\n            \"description\": \"Where the file was embedded from.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"description\": {\n            \"description\": \"Description for the file.\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"location\": {\n            \"description\": \"Where the file was created. Is automatically populated based on EXIF data for images.\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"description\": \"Tags for the file. Is automatically populated based on EXIF data for images.\",\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"metadata\": {\n            \"description\": \"IPTC, EXIF, and ICC metadata extracted from file\",\n            \"type\": \"object\",\n            \"nullable\": true\n          },\n          \"storage_divider\": {}\n        }\n      },\n      \"Folders\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_files\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the folder.\",\n            \"example\": \"0cf0e03d-4364-45df-b77b-ca61f61869d2\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Name of the folder.\",\n            \"example\": \"New York\",\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"description\": \"Unique identifier of the parent folder. This allows for nested folders.\",\n            \"example\": null,\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Folders\"\n              }\n            ],\n            \"nullable\": true\n          }\n        }\n      },\n      \"Permissions\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_permissions\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the permission.\",\n            \"example\": 1,\n            \"type\": \"integer\"\n          },\n          \"role\": {\n            \"description\": \"Unique identifier of the role this permission applies to.\",\n            \"example\": \"2f24211d-d928-469a-aea3-3c8f53d4e426\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collection\": {\n            \"description\": \"What collection this permission applies to.\",\n            \"example\": \"customers\",\n            \"type\": \"string\"\n          },\n          \"action\": {\n            \"description\": \"What action this permission applies to.\",\n            \"example\": \"create\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"create\",\n              \"read\",\n              \"update\",\n              \"delete\"\n            ]\n          },\n          \"permissions\": {\n            \"description\": \"JSON structure containing the permissions checks for this permission.\",\n            \"type\": \"object\",\n            \"nullable\": true\n          },\n          \"validation\": {\n            \"description\": \"JSON structure containing the validation checks for this permission.\",\n            \"type\": \"object\",\n            \"nullable\": true\n          },\n          \"presets\": {\n            \"description\": \"JSON structure containing the preset value for created/updated items.\",\n            \"type\": \"object\",\n            \"nullable\": true\n          },\n          \"fields\": {\n            \"description\": \"CSV of fields that the user is allowed to interact with.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          },\n          \"limit\": {\n            \"description\": \"Maximum amount of items the user can interact with at a time.\",\n            \"type\": \"number\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Presets\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_presets\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for this single collection preset.\",\n            \"example\": 155,\n            \"type\": \"integer\"\n          },\n          \"bookmark\": {\n            \"description\": \"Name for the bookmark. If this is set, the preset will be considered a bookmark.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"description\": \"The unique identifier of the user to whom this collection preset applies.\",\n            \"example\": \"63716273-0f29-4648-8a2a-2af2948f6f78\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Users\"\n              }\n            ]\n          },\n          \"role\": {\n            \"description\": \"The unique identifier of a role in the platform. If `user` is null, this will be used to apply the collection preset or bookmark for all users in the role.\",\n            \"example\": \"50419801-0f30-8644-2b3c-9bc2d980d0a0\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Roles\"\n              }\n            ]\n          },\n          \"collection\": {\n            \"description\": \"What collection this collection preset is used for.\",\n            \"example\": \"articles\",\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Collections\"\n              }\n            ]\n          },\n          \"search\": {\n            \"description\": \"Search query.\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"filters\": {\n            \"description\": \"The filters that the user applied.\",\n            \"example\": [\n              {\n                \"key\": \"7RwVrquB5dPmfbrI1rcWy\",\n                \"field\": \"title\",\n                \"operator\": \"contains\",\n                \"value\": \"Hello\"\n              }\n            ],\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"layout\": {\n            \"description\": \"Key of the layout that is used.\",\n            \"type\": \"string\",\n            \"example\": null\n          },\n          \"layout_query\": {\n            \"description\": \"Layout query that's saved per layout type. Controls what data is fetched on load. These follow the same format as the JS SDK parameters.\",\n            \"example\": {\n              \"cards\": {\n                \"sort\": \"-published_on\"\n              }\n            },\n            \"nullable\": true\n          },\n          \"layout_options\": {\n            \"description\": \"Options of the views. The properties in here are controlled by the layout.\",\n            \"example\": {\n              \"cards\": {\n                \"icon\": \"account_circle\",\n                \"title\": \"{{ first_name }} {{ last_name }}\",\n                \"subtitle\": \"{{ title }}\",\n                \"size\": 3\n              }\n            },\n            \"nullable\": true\n          },\n          \"refresh_interval\": {\n            \"nullable\": true,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"Relations\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_relations\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the relation.\",\n            \"example\": 1,\n            \"type\": \"integer\"\n          },\n          \"many_collection\": {\n            \"description\": \"Collection that has the field that holds the foreign key.\",\n            \"example\": \"directus_activity\",\n            \"type\": \"string\"\n          },\n          \"many_field\": {\n            \"description\": \"Foreign key. Field that holds the primary key of the related collection.\",\n            \"example\": \"user\",\n            \"type\": \"string\"\n          },\n          \"many_primary\": {\n            \"description\": \"The primary key field of the current collection.\",\n            \"example\": \"id\",\n            \"type\": \"string\"\n          },\n          \"one_collection\": {\n            \"description\": \"Collection on the _one_ side of the relationship.\",\n            \"example\": \"directus_users\",\n            \"type\": \"string\"\n          },\n          \"one_field\": {\n            \"description\": \"Alias column that serves as the _one_ side of the relationship.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"one_primary\": {\n            \"description\": \"The primary key field of the related collection.\",\n            \"example\": \"id\",\n            \"type\": \"string\"\n          },\n          \"one_collection_field\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"one_allowed_collections\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"junction_field\": {\n            \"description\": \"Field on the junction table that holds the many field of the related relation.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sort_field\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Revisions\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_revisions\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the revision.\",\n            \"example\": 1,\n            \"type\": \"integer\"\n          },\n          \"activity\": {\n            \"description\": \"Unique identifier for the activity record.\",\n            \"example\": 2,\n            \"oneOf\": [\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Activity\"\n              }\n            ]\n          },\n          \"collection\": {\n            \"description\": \"Collection of the updated item.\",\n            \"example\": \"articles\",\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Collections\"\n              }\n            ]\n          },\n          \"item\": {\n            \"description\": \"Primary key of updated item.\",\n            \"example\": \"168\",\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"description\": \"Copy of item state at time of update.\",\n            \"example\": {\n              \"author\": 1,\n              \"body\": \"This is my first post\",\n              \"featured_image\": 15,\n              \"id\": \"168\",\n              \"title\": \"Hello, World!\"\n            },\n            \"type\": \"object\",\n            \"nullable\": true\n          },\n          \"delta\": {\n            \"description\": \"Changes between the previous and the current revision.\",\n            \"example\": {\n              \"title\": \"Hello, World!\"\n            },\n            \"type\": \"object\"\n          },\n          \"parent\": {\n            \"description\": \"If the current item was updated relationally, this is the id of the parent revision record\",\n            \"example\": null,\n            \"type\": \"integer\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Roles\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_roles\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the role.\",\n            \"example\": \"2f24211d-d928-469a-aea3-3c8f53d4e426\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Name of the role.\",\n            \"example\": \"Administrator\",\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"description\": \"The role's icon.\",\n            \"example\": \"verified_user\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"Description of the role.\",\n            \"example\": \"Admins have access to all managed data within the system by default\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"ip_access\": {\n            \"description\": \"Array of IP addresses that are allowed to connect to the API as a user of this role.\",\n            \"example\": [],\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"enforce_tfa\": {\n            \"description\": \"Whether or not this role enforces the use of 2FA.\",\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"module_list\": {\n            \"description\": \"Custom override for the admin app module bar navigation.\",\n            \"example\": null,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"nullable\": true\n          },\n          \"collection_list\": {\n            \"description\": \"Custom override for the admin app collection navigation.\",\n            \"example\": null,\n            \"type\": \"object\",\n            \"nullable\": true\n          },\n          \"admin_access\": {\n            \"description\": \"Admin role. If true, skips all permission checks.\",\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"app_access\": {\n            \"description\": \"The users in the role are allowed to use the app.\",\n            \"example\": true,\n            \"type\": \"boolean\"\n          },\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\",\n                  \"format\": \"uuid\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Users\"\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"Settings\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_settings\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the setting.\",\n            \"type\": \"integer\",\n            \"example\": 1\n          },\n          \"project_name\": {\n            \"description\": \"The name of the project.\",\n            \"type\": \"string\",\n            \"example\": \"Directus\"\n          },\n          \"project_url\": {\n            \"description\": \"The url of the project.\",\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"project_color\": {\n            \"description\": \"The brand color of the project.\",\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"project_logo\": {\n            \"description\": \"The logo of the project.\",\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"public_foreground\": {\n            \"description\": \"The foreground of the project.\",\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"public_background\": {\n            \"description\": \"The background of the project.\",\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"public_note\": {\n            \"description\": \"Note rendered on the public pages of the app.\",\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"auth_login_attempts\": {\n            \"description\": \"Allowed authentication login attempts before the user's status is set to blocked.\",\n            \"type\": \"integer\",\n            \"example\": 25\n          },\n          \"auth_password_policy\": {\n            \"description\": \"Authentication password policy.\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"storage_asset_transform\": {\n            \"description\": \"What transformations are allowed in the assets endpoint.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"all\",\n              \"none\",\n              \"presets\"\n            ],\n            \"example\": \"all\",\n            \"nullable\": true\n          },\n          \"storage_asset_presets\": {\n            \"description\": \"Array of allowed\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"description\": \"Key for the asset. Used in the assets endpoint.\",\n                  \"type\": \"string\"\n                },\n                \"fit\": {\n                  \"description\": \"Whether to crop the thumbnail to match the size, or maintain the aspect ratio.\",\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"cover\",\n                    \"contain\",\n                    \"inside\",\n                    \"outside\"\n                  ]\n                },\n                \"width\": {\n                  \"description\": \"Width of the thumbnail.\",\n                  \"type\": \"integer\"\n                },\n                \"height\": {\n                  \"description\": \"Height of the thumbnail.\",\n                  \"type\": \"integer\"\n                },\n                \"withoutEnlargement\": {\n                  \"description\": \"No image upscale\",\n                  \"type\": \"boolean\"\n                },\n                \"quality\": {\n                  \"description\": \"Quality of the compression used.\",\n                  \"type\": \"integer\"\n                }\n              }\n            },\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"custom_css\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"public_divider\": {},\n          \"security_divider\": {},\n          \"files_divider\": {},\n          \"overrides_divider\": {}\n        }\n      },\n      \"Users\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_users\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Unique identifier for the user.\",\n            \"example\": \"63716273-0f29-4648-8a2a-2af2948f6f78\",\n            \"type\": \"string\"\n          },\n          \"first_name\": {\n            \"description\": \"First name of the user.\",\n            \"example\": \"Admin\",\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"description\": \"Last name of the user.\",\n            \"example\": \"User\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"description\": \"Unique email address for the user.\",\n            \"example\": \"admin@example.com\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"password\": {\n            \"description\": \"Password of the user.\",\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"description\": \"The user's location.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"description\": \"The user's title.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"description\": {\n            \"description\": \"The user's description.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"description\": \"The user's tags.\",\n            \"example\": null,\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"avatar\": {\n            \"description\": \"The user's avatar.\",\n            \"example\": null,\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Files\"\n              }\n            ],\n            \"nullable\": true\n          },\n          \"language\": {\n            \"description\": \"The user's language used in Directus.\",\n            \"example\": \"en-US\",\n            \"type\": \"string\"\n          },\n          \"theme\": {\n            \"description\": \"What theme the user is using.\",\n            \"example\": \"auto\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"light\",\n              \"dark\",\n              \"auto\"\n            ]\n          },\n          \"tfa_secret\": {\n            \"description\": \"The 2FA secret string that's used to generate one time passwords.\",\n            \"example\": null,\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"status\": {\n            \"description\": \"Status of the user.\",\n            \"example\": \"active\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"active\",\n              \"invited\",\n              \"draft\",\n              \"suspended\",\n              \"deleted\"\n            ]\n          },\n          \"role\": {\n            \"description\": \"Unique identifier of the role of this user.\",\n            \"example\": \"2f24211d-d928-469a-aea3-3c8f53d4e426\",\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Roles\"\n              }\n            ]\n          },\n          \"token\": {\n            \"description\": \"Static token for the user.\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"last_access\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"format\": \"timestamp\"\n          },\n          \"last_page\": {\n            \"description\": \"Last page that the user was on.\",\n            \"example\": \"/my-project/settings/collections/a\",\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"preferences_divider\": {},\n          \"admin_divider\": {}\n        }\n      },\n      \"Webhooks\": {\n        \"type\": \"object\",\n        \"x-collection\": \"directus_webhooks\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"The index of the webhook.\",\n            \"type\": \"integer\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"description\": \"The name of the webhook.\",\n            \"type\": \"string\",\n            \"example\": \"create articles\"\n          },\n          \"method\": {\n            \"description\": \"Method used in the webhook.\",\n            \"type\": \"string\",\n            \"example\": \"POST\"\n          },\n          \"url\": {\n            \"description\": \"The url of the webhook.\",\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"status\": {\n            \"description\": \"The status of the webhook.\",\n            \"type\": \"string\",\n            \"example\": \"inactive\"\n          },\n          \"data\": {\n            \"description\": \"If yes, send the content of what was done\",\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"actions\": {\n            \"description\": \"The actions that triggers this webhook.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"collections\": {\n            \"description\": \"The collections that triggers this webhook.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": null,\n            \"nullable\": true\n          },\n          \"triggers_divider\": {}\n        }\n      }\n    },\n    \"parameters\": {\n      \"Id\": {\n        \"description\": \"Index\",\n        \"name\": \"id\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"UUId\": {\n        \"description\": \"Unique identifier for the object.\",\n        \"name\": \"id\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": {\n          \"example\": \"8cbb43fe-4cdf-4991-8352-c461779cec02\",\n          \"type\": \"string\"\n        }\n      },\n      \"Collection\": {\n        \"description\": \"Collection of which you want to retrieve the items from.\",\n        \"name\": \"collection\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"Search\": {\n        \"description\": \"Filter by items that contain the given search query in one of their fields.\",\n        \"in\": \"query\",\n        \"name\": \"search\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"Page\": {\n        \"description\": \"Cursor for use in pagination. Often used in combination with limit.\",\n        \"in\": \"query\",\n        \"name\": \"page\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"Offset\": {\n        \"description\": \"How many items to skip when fetching data.\",\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"Single\": {\n        \"description\": \"Return the result as if it was a single item. Useful for selecting a single item based on filters and search queries.\",\n        \"in\": \"query\",\n        \"name\": \"single\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"Sort\": {\n        \"description\": \"How to sort the returned items. `sort` is a CSV of fields used to sort the fetched items. Sorting defaults to ascending (ASC) order but a minus sign (` - `) can be used to reverse this to descending (DESC) order. Fields are prioritized by their order in the CSV. You can also use a ` ? ` to sort randomly.\\n\",\n        \"in\": \"query\",\n        \"name\": \"sort\",\n        \"required\": false,\n        \"explode\": false,\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Meta\": {\n        \"description\": \"What metadata to return in the response.\",\n        \"in\": \"query\",\n        \"name\": \"meta\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"Limit\": {\n        \"description\": \"A limit on the number of objects that are returned.\",\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"Filter\": {\n        \"description\": \"Select items in collection by given conditions.\",\n        \"in\": \"query\",\n        \"name\": \"filter\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"pattern\": \"^(\\\\[[^\\\\[\\\\]]*?\\\\]){1}(\\\\[(_eq|_neq|_lt|_lte|_gt|_gte|_in|_nin|_null|_nnull|_contains|_ncontains|_between|_nbetween|_empty|_nempty)\\\\])?=.*?$\"\n          }\n        }\n      },\n      \"Fields\": {\n        \"description\": \"Control what fields are being returned in the object.\",\n        \"in\": \"query\",\n        \"name\": \"fields\",\n        \"required\": false,\n        \"explode\": false,\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Mode\": {\n        \"description\": \"Controls if the API sets a cookie or returns a JWT on successful login.\",\n        \"in\": \"query\",\n        \"name\": \"mode\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"jwt\",\n            \"cookie\"\n          ]\n        }\n      }\n    },\n    \"responses\": {\n      \"NotFoundError\": {\n        \"description\": \"Error: Not found.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"error\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"UnauthorizedError\": {\n        \"description\": \"Error: Unauthorized request\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"error\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"KeyAuth\": {\n        \"type\": \"apiKey\",\n        \"in\": \"query\",\n        \"name\": \"access_token\"\n      },\n      \"Auth\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"Authorization\"\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: paths: /files/{id}: get: getFile: parse path: path parameter not specified: \"id\""
}