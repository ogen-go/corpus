{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/outposts/2019-12-03/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2019-12-03'\n  x-release: v4\n  title: AWS Outposts\n  description: 'AWS Outposts is a fully managed service that extends AWS infrastructure, APIs, and tools to customer premises. By providing local access to AWS managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: outposts\n  x-aws-signingName: outposts\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/outposts-2019-12-03.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/outposts/'\nservers:\n  - url: 'http://outposts.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Outposts multi-region endpoint\n  - url: 'https://outposts.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Outposts multi-region endpoint\n  - url: 'http://outposts.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Outposts endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://outposts.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Outposts endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /orders:\n    post:\n      operationId: CreateOrder\n      description: Creates an order for an Outpost.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateOrderOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - OutpostIdentifier\n                - LineItems\n                - PaymentOption\n              properties:\n                OutpostIdentifier:\n                  description: ' The ID or the Amazon Resource Name (ARN) of the Outpost. '\n                  type: string\n                  pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$'\n                  minLength: 1\n                  maxLength: 180\n                LineItems:\n                  description: The line items that make up the order.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/LineItemRequest'\n                  minItems: 1\n                  maxItems: 20\n                PaymentOption:\n                  description: The payment option for the order.\n                  type: string\n                  enum:\n                    - ALL_UPFRONT\n                    - NO_UPFRONT\n                    - PARTIAL_UPFRONT\n                PaymentTerm:\n                  description: The payment terms for the order.\n                  type: string\n                  enum:\n                    - THREE_YEARS\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /outposts:\n    post:\n      operationId: CreateOutpost\n      description: \u003cp\u003eCreates an Outpost.\u003c/p\u003e \u003cp\u003eYou can specify \u003ccode\u003eAvailabilityZone\u003c/code\u003e or \u003ccode\u003eAvailabilityZoneId\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateOutpostOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - SiteId\n              properties:\n                Name:\n                  description: The name of the Outpost.\n                  type: string\n                  pattern: '^[\\S ]+$'\n                  minLength: 1\n                  maxLength: 255\n                Description:\n                  description: The description of the Outpost.\n                  type: string\n                  pattern: '^[\\S ]*$'\n                  minLength: 0\n                  maxLength: 1000\n                SiteId:\n                  description: The ID of the site.\n                  type: string\n                  pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:site/)?(os-[a-f0-9]{17})$'\n                  minLength: 1\n                  maxLength: 255\n                AvailabilityZone:\n                  description: The Availability Zone.\n                  type: string\n                  pattern: '^([a-zA-Z]+-){1,3}([a-zA-Z]+)?(\\d+[a-zA-Z]?)?$'\n                  minLength: 1\n                  maxLength: 1000\n                AvailabilityZoneId:\n                  description: The ID of the Availability Zone.\n                  type: string\n                  pattern: '^[a-zA-Z]+\\d-[a-zA-Z]+\\d$'\n                  minLength: 1\n                  maxLength: 255\n                Tags:\n                  description: The tags to apply to the Outpost.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListOutposts\n      description: '\u003cp\u003eCreate a list of the Outposts for your AWS account. Add filters to your request to return a more specific list of results. Use filters to match an Outpost lifecycle status, Availibility Zone (\u003ccode\u003eus-east-1a\u003c/code\u003e), and AZ ID (\u003ccode\u003euse1-az1\u003c/code\u003e). \u003c/p\u003e \u003cp\u003eIf you specify multiple filters, the filters are joined with an \u003ccode\u003eAND\u003c/code\u003e, and the request returns only results that match all of the specified filters.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOutpostsOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: NextToken\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n            pattern: ^(\\d+)##(\\S+)$\n            description: The pagination token.\n            minLength: 1\n            maxLength: 1005\n        - name: MaxResults\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n            description: The maximum page size.\n            minimum: 1\n            maximum: 1000\n        - name: LifeCycleStatusFilter\n          in: query\n          required: false\n          description: '\u003cp\u003e A filter for the lifecycle status of the Outpost. \u003c/p\u003e \u003cp\u003e Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an \u003ccode\u003eOR\u003c/code\u003e, and the request returns all results that match any of the specified values. \u003c/p\u003e'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/LifeCycleStatus'\n            minItems: 1\n            maxItems: 5\n        - name: AvailabilityZoneFilter\n          in: query\n          required: false\n          description: '\u003cp\u003e A filter for the Availibility Zone (\u003ccode\u003eus-east-1a\u003c/code\u003e) of the Outpost. \u003c/p\u003e \u003cp\u003e Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an \u003ccode\u003eOR\u003c/code\u003e, and the request returns all results that match any of the specified values. \u003c/p\u003e'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/AvailabilityZone'\n            minItems: 1\n            maxItems: 5\n        - name: AvailabilityZoneIdFilter\n          in: query\n          required: false\n          description: '\u003cp\u003e A filter for the AZ IDs (\u003ccode\u003euse1-az1\u003c/code\u003e) of the Outpost. \u003c/p\u003e \u003cp\u003e Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an \u003ccode\u003eOR\u003c/code\u003e, and the request returns all results that match any of the specified values. \u003c/p\u003e'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/AvailabilityZoneId'\n            minItems: 1\n            maxItems: 5\n  '/outposts/{OutpostId}':\n    delete:\n      operationId: DeleteOutpost\n      description: Deletes the Outpost.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteOutpostOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: OutpostId\n          in: path\n          required: true\n          description: ' The ID of the Outpost. '\n          schema:\n            type: string\n            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$'\n            minLength: 1\n            maxLength: 180\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetOutpost\n      description: Gets information about the specified Outpost.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOutpostOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: OutpostId\n          in: path\n          required: true\n          description: ' The ID of the Outpost. '\n          schema:\n            type: string\n            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$'\n            minLength: 1\n            maxLength: 180\n  '/sites/{SiteId}':\n    delete:\n      operationId: DeleteSite\n      description: Deletes the site.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSiteOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: SiteId\n          in: path\n          required: true\n          description: ''\n          schema:\n            type: string\n            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:site/)?(os-[a-f0-9]{17})$'\n            description: The ID of the site.\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/outposts/{OutpostId}/instanceTypes':\n    get:\n      operationId: GetOutpostInstanceTypes\n      description: Lists the instance types for the specified Outpost.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOutpostInstanceTypesOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: OutpostId\n          in: path\n          required: true\n          description: ' The ID of the Outpost. '\n          schema:\n            type: string\n            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$'\n            minLength: 1\n            maxLength: 180\n        - name: NextToken\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n            pattern: ^(\\d+)##(\\S+)$\n            description: The pagination token.\n            minLength: 1\n            maxLength: 1005\n        - name: MaxResults\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n            description: The maximum page size.\n            minimum: 1\n            maximum: 1000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /sites:\n    get:\n      operationId: ListSites\n      description: Lists the sites for the specified AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSitesOutput'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: NextToken\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: string\n            pattern: ^(\\d+)##(\\S+)$\n            description: The pagination token.\n            minLength: 1\n            maxLength: 1005\n        - name: MaxResults\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n            description: The maximum page size.\n            minimum: 1\n            maximum: 1000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{ResourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags for the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'\n            maxLength: 1011\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Adds tags to the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'\n            maxLength: 1011\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: The tags to add to the resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/tags/{ResourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes tags from the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'\n            maxLength: 1011\n        - name: tagKeys\n          in: query\n          required: true\n          description: The tag keys.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateOrderOutput:\n      type: object\n      properties:\n        Order:\n          allOf:\n            - $ref: '#/components/schemas/Order'\n            - description: Information about this order.\n    LineItemRequest:\n      type: object\n      properties:\n        CatalogItemId:\n          allOf:\n            - $ref: '#/components/schemas/SkuCode'\n            - description: The ID of the catalog item.\n        Quantity:\n          allOf:\n            - $ref: '#/components/schemas/LineItemQuantity'\n            - description: The quantity of a line item request.\n      description: Information about a line item request.\n    ValidationException: {}\n    ConflictException: {}\n    AccessDeniedException: {}\n    NotFoundException: {}\n    InternalServerException: {}\n    ServiceQuotaExceededException: {}\n    CreateOutpostOutput:\n      type: object\n      properties:\n        Outpost:\n          $ref: '#/components/schemas/Outpost'\n    TagValue:\n      type: string\n      pattern: '^[\\S \\n]+$'\n      maxLength: 256\n    DeleteOutpostOutput:\n      type: object\n      properties: {}\n    DeleteSiteOutput:\n      type: object\n      properties: {}\n    GetOutpostOutput:\n      type: object\n      properties:\n        Outpost:\n          $ref: '#/components/schemas/Outpost'\n    GetOutpostInstanceTypesOutput:\n      type: object\n      properties:\n        InstanceTypes:\n          $ref: '#/components/schemas/InstanceTypeListDefinition'\n        NextToken:\n          $ref: '#/components/schemas/Token'\n        OutpostId:\n          allOf:\n            - $ref: '#/components/schemas/OutpostId'\n            - description: ' The ID of the Outpost. '\n        OutpostArn:\n          $ref: '#/components/schemas/OutpostArn'\n    ListOutpostsOutput:\n      type: object\n      properties:\n        Outposts:\n          $ref: '#/components/schemas/outpostListDefinition'\n        NextToken:\n          $ref: '#/components/schemas/Token'\n    LifeCycleStatus:\n      type: string\n      pattern: '^[ A-Za-z]+$'\n      description: The life cycle status.\n      minLength: 1\n      maxLength: 20\n    AvailabilityZone:\n      type: string\n      pattern: '^([a-zA-Z]+-){1,3}([a-zA-Z]+)?(\\d+[a-zA-Z]?)?$'\n      description: The Availability Zone.\n      minLength: 1\n      maxLength: 1000\n    AvailabilityZoneId:\n      type: string\n      pattern: '^[a-zA-Z]+\\d-[a-zA-Z]+\\d$'\n      description: The ID of the Availability Zone.\n      minLength: 1\n      maxLength: 255\n    ListSitesOutput:\n      type: object\n      properties:\n        Sites:\n          $ref: '#/components/schemas/siteListDefinition'\n        NextToken:\n          $ref: '#/components/schemas/Token'\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The resource tags.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'\n      minLength: 1\n      maxLength: 128\n    AccountId:\n      type: string\n      pattern: '\\d{12}'\n      description: The ID of the AWS account.\n      minLength: 12\n      maxLength: 12\n    Arn:\n      type: string\n      pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$'\n      maxLength: 1011\n    AvailabilityZoneIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AvailabilityZoneId'\n      minItems: 1\n      maxItems: 5\n    AvailabilityZoneList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AvailabilityZone'\n      minItems: 1\n      maxItems: 5\n    OutpostIdentifier:\n      type: string\n      pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$'\n      minLength: 1\n      maxLength: 180\n    LineItemRequestListDefinition:\n      type: array\n      items:\n        $ref: '#/components/schemas/LineItemRequest'\n      minItems: 1\n      maxItems: 20\n    PaymentOption:\n      type: string\n      enum:\n        - ALL_UPFRONT\n        - NO_UPFRONT\n        - PARTIAL_UPFRONT\n    PaymentTerm:\n      type: string\n      enum:\n        - THREE_YEARS\n    CreateOrderInput:\n      type: object\n      required:\n        - OutpostIdentifier\n        - LineItems\n        - PaymentOption\n      title: CreateOrderInput\n      properties:\n        OutpostIdentifier:\n          allOf:\n            - $ref: '#/components/schemas/OutpostIdentifier'\n            - description: ' The ID or the Amazon Resource Name (ARN) of the Outpost. '\n        LineItems:\n          allOf:\n            - $ref: '#/components/schemas/LineItemRequestListDefinition'\n            - description: The line items that make up the order.\n        PaymentOption:\n          allOf:\n            - $ref: '#/components/schemas/PaymentOption'\n            - description: The payment option for the order.\n        PaymentTerm:\n          allOf:\n            - $ref: '#/components/schemas/PaymentTerm'\n            - description: The payment terms for the order.\n    Order:\n      type: object\n      properties:\n        OutpostId:\n          allOf:\n            - $ref: '#/components/schemas/OutpostIdOnly'\n            - description: ' The ID of the Outpost. '\n        OrderId:\n          allOf:\n            - $ref: '#/components/schemas/OrderId'\n            - description: The ID of the order.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/OrderStatus'\n            - description: The status of the order\n        LineItems:\n          allOf:\n            - $ref: '#/components/schemas/LineItemListDefinition'\n            - description: The line items for the order\n        PaymentOption:\n          allOf:\n            - $ref: '#/components/schemas/PaymentOption'\n            - description: The payment option for the order.\n        OrderSubmissionDate:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601Timestamp'\n            - description: The submission date for the order.\n        OrderFulfilledDate:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601Timestamp'\n            - description: The fulfillment date of the order.\n      description: Information about an order.\n    OutpostName:\n      type: string\n      pattern: '^[\\S ]+$'\n      description: The name of the Outpost.\n      minLength: 1\n      maxLength: 255\n    OutpostDescription:\n      type: string\n      pattern: '^[\\S ]*$'\n      description: The description of the Outpost.\n      minLength: 0\n      maxLength: 1000\n    SiteId:\n      type: string\n      pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:site/)?(os-[a-f0-9]{17})$'\n      description: The ID of the site.\n      minLength: 1\n      maxLength: 255\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CreateOutpostInput:\n      type: object\n      required:\n        - Name\n        - SiteId\n      title: CreateOutpostInput\n      properties:\n        Name:\n          $ref: '#/components/schemas/OutpostName'\n        Description:\n          $ref: '#/components/schemas/OutpostDescription'\n        SiteId:\n          $ref: '#/components/schemas/SiteId'\n        AvailabilityZone:\n          $ref: '#/components/schemas/AvailabilityZone'\n        AvailabilityZoneId:\n          $ref: '#/components/schemas/AvailabilityZoneId'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to apply to the Outpost.\n    Outpost:\n      type: object\n      properties:\n        OutpostId:\n          allOf:\n            - $ref: '#/components/schemas/OutpostId'\n            - description: ' The ID of the Outpost. '\n        OwnerId:\n          $ref: '#/components/schemas/OwnerId'\n        OutpostArn:\n          $ref: '#/components/schemas/OutpostArn'\n        SiteId:\n          $ref: '#/components/schemas/SiteId'\n        Name:\n          $ref: '#/components/schemas/OutpostName'\n        Description:\n          $ref: '#/components/schemas/OutpostDescription'\n        LifeCycleStatus:\n          $ref: '#/components/schemas/LifeCycleStatus'\n        AvailabilityZone:\n          $ref: '#/components/schemas/AvailabilityZone'\n        AvailabilityZoneId:\n          $ref: '#/components/schemas/AvailabilityZoneId'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The Outpost tags.\n        SiteArn:\n          $ref: '#/components/schemas/SiteArn'\n      description: Information about an Outpost.\n    OutpostId:\n      type: string\n      pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$'\n      minLength: 1\n      maxLength: 180\n    DeleteOutpostInput:\n      type: object\n      title: DeleteOutpostInput\n      properties: {}\n    DeleteSiteInput:\n      type: object\n      title: DeleteSiteInput\n      properties: {}\n    GetOutpostInput:\n      type: object\n      title: GetOutpostInput\n      properties: {}\n    Token:\n      type: string\n      pattern: ^(\\d+)##(\\S+)$\n      description: The pagination token.\n      minLength: 1\n      maxLength: 1005\n    MaxResults1000:\n      type: integer\n      description: The maximum page size.\n      minimum: 1\n      maximum: 1000\n    GetOutpostInstanceTypesInput:\n      type: object\n      title: GetOutpostInstanceTypesInput\n      properties: {}\n    InstanceTypeListDefinition:\n      type: array\n      description: Information about the instance types.\n      items:\n        $ref: '#/components/schemas/InstanceTypeItem'\n    OutpostArn:\n      type: string\n      pattern: '^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/op-[a-f0-9]{17}$'\n      description: The Amazon Resource Name (ARN) of the Outpost.\n      minLength: 1\n      maxLength: 255\n    ISO8601Timestamp:\n      type: string\n      format: date-time\n    InstanceType:\n      type: string\n      description: The instance type.\n    InstanceTypeItem:\n      type: object\n      properties:\n        InstanceType:\n          $ref: '#/components/schemas/InstanceType'\n      description: Information about an instance type.\n    LifeCycleStatusList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LifeCycleStatus'\n      minItems: 1\n      maxItems: 5\n    SkuCode:\n      type: string\n      pattern: 'OR-[A-Z0-9]{7}'\n      minLength: 1\n      maxLength: 10\n    LineItemId:\n      type: string\n      pattern: 'ooi-[a-f0-9]{17}'\n    LineItemQuantity:\n      type: integer\n      minimum: 1\n      maximum: 20\n    Status:\n      type: string\n      pattern: '^[\\S ]+$'\n      minLength: 1\n      maxLength: 1000\n    LineItem:\n      type: object\n      properties:\n        CatalogItemId:\n          allOf:\n            - $ref: '#/components/schemas/SkuCode'\n            - description: ' The ID of the catalog item. '\n        LineItemId:\n          allOf:\n            - $ref: '#/components/schemas/LineItemId'\n            - description: The ID of the line item.\n        Quantity:\n          allOf:\n            - $ref: '#/components/schemas/LineItemQuantity'\n            - description: The quantity of the line item.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/Status'\n            - description: The status of the line item.\n      description: Information about a line item.\n    LineItemListDefinition:\n      type: array\n      items:\n        $ref: '#/components/schemas/LineItem'\n    ListOutpostsInput:\n      type: object\n      title: ListOutpostsInput\n      properties: {}\n    outpostListDefinition:\n      type: array\n      description: Information about the Outposts.\n      items:\n        $ref: '#/components/schemas/Outpost'\n    ListSitesInput:\n      type: object\n      title: ListSitesInput\n      properties: {}\n    siteListDefinition:\n      type: array\n      description: Information about the sites.\n      items:\n        $ref: '#/components/schemas/Site'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    OutpostIdOnly:\n      type: string\n      pattern: '^op-[a-f0-9]{17}$'\n      minLength: 1\n      maxLength: 20\n    OrderId:\n      type: string\n      pattern: 'oo-[a-f0-9]{17}$'\n      minLength: 1\n      maxLength: 20\n    OrderStatus:\n      type: string\n      enum:\n        - RECEIVED\n        - PENDING\n        - PROCESSING\n        - INSTALLING\n        - FULFILLED\n        - CANCELLED\n    OwnerId:\n      type: string\n      pattern: '\\d{12}'\n      description: The AWS account ID of the Outpost owner.\n      minLength: 12\n      maxLength: 12\n    SiteArn:\n      type: string\n      pattern: '^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:site/(os-[a-f0-9]{17})$'\n      description: The Amazon Resource Name (ARN) of the site.\n      minLength: 1\n      maxLength: 255\n    SiteName:\n      type: string\n      pattern: '^[\\S ]+$'\n      description: The name of the site.\n      minLength: 1\n      maxLength: 1000\n    SiteDescription:\n      type: string\n      pattern: '^[\\S ]+$'\n      description: The description of the site.\n      minLength: 1\n      maxLength: 1001\n    Site:\n      type: object\n      properties:\n        SiteId:\n          $ref: '#/components/schemas/SiteId'\n        AccountId:\n          $ref: '#/components/schemas/AccountId'\n        Name:\n          $ref: '#/components/schemas/SiteName'\n        Description:\n          $ref: '#/components/schemas/SiteDescription'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The site tags.\n        SiteArn:\n          $ref: '#/components/schemas/SiteArn'\n      description: Information about a site.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to add to the resource.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /outposts/{OutpostId}: get: GetOutpost: responses: 480: unknown status code: 480"
}