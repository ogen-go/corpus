{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/listennotes.com/2.0/openapi.yaml",
			"content": "openapi: 3.0.1\nservers:\n  - description: API Production Server\n    url: https://listen-api.listennotes.com/api/v2\ninfo:\n  contact:\n    email: hello@listennotes.com\n    name: Listen Notes\n    url: https://www.listennotes.com/api/\n    x-twitter: listennotes\n  description: |\n    Simple \u0026 no-nonsense podcast search \u0026 directory API. Search all podcasts and episodes by people, places, or topics.\n  termsOfService: https://www.listennotes.com/api/terms/\n  title: \"Listen API: Podcast Search \u0026 Directory API\"\n  version: \"2.0\"\n  x-apisguru-categories:\n    - entertainment\n  x-logo:\n    url: https://twitter.com/listennotes/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/mermade/oas-kit\n        version: 7.0.4\n      format: openapi\n      url: https://listen-api.listennotes.com/api/v2/openapi.yaml\n      version: \"3.0\"\n  x-providerName: listennotes.com\ntags:\n  - description: Endpoints to search podcasts\n    name: Search API\n  - description: Endpoints to fetch podcasts data\n    name: Directory API\n  - description: Endpoints to improve the podcast database\n    name: Podcaster API\npaths:\n  /best_podcasts:\n    get:\n      description: |\n        Get a list of curated best podcasts by genre,\n        which are curated by Listen Notes staffs based on various signals from the Internet, e.g.,\n        top charts on other podcast platforms, recommendations from mainstream media,\n        user activities on listennotes.com...\n        You can get the genre ids from `GET /genres` endpoint.\n        This endpoint returns same data as https://www.listennotes.com/best-podcasts/\n      operationId: getBestPodcasts\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: You can get the id from `GET /genres`. If not specified, it'll be the overall best podcasts, which can be considered as a special genre.\n          explode: true\n          in: query\n          name: genre_id\n          required: false\n          schema:\n            example: \"93\"\n            type: string\n          style: form\n        - description: Page number of those podcasts in this genre.\n          explode: true\n          in: query\n          name: page\n          required: false\n          schema:\n            example: 2\n            type: integer\n          style: form\n        - description: |\n            Filter best podcasts by country/region.\n            Please note that podcasts that are \"best\" in a country/region may not be produced in that country/region.\n            For example, a podcast from the US may be very popular in Canada.\n            You can get the supported country codes (e.g., us, jp, gb...) from `GET /regions`.\n            If not specified, you'll get \"best podcasts\" in United States.\n          explode: true\n          in: query\n          name: region\n          required: false\n          schema:\n            default: us\n            example: us\n            type: string\n          style: form\n        - description: |\n            Filter best podcasts by the publisher's country/region.\n            This is to narrow down the results to include \"best podcasts\" produced in a specific country/region.\n            You can get the supported country codes (e.g., us, jp, gb...) from `GET /regions`.\n            If not specified, you'll get \"best podcasts\" produced in any country/region.\n            If you want to get a country/region's \"best podcasts\" that are also produced in that country/region,\n            then you need to specify both **region** and **publisher_region**,\n            e.g., `region=jp` and `publisher_region=jp`.\n          explode: true\n          in: query\n          name: publisher_region\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: |\n            Filter best podcasts by language.\n            You can get a list of supported languages (e.g., English, Chinese, Japanese...) from `GET /languages`.\n            If not specified, you'll get \"best podcasts\" in any language.\n          explode: true\n          in: query\n          name: language\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: Whether or not to exclude podcasts with explicit language. 1 is yes, and 0 is no.\n          explode: true\n          in: query\n          name: safe_mode\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 0\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BestPodcastsResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n          links:\n            paginate:\n              description: Pagination through podcasts.\n              operationId: getBestPodcasts\n              parameters:\n                page: $response.body#/next_page_number\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a list of best podcasts by genre\n      tags:\n        - Directory API\n  /curated_podcasts:\n    get:\n      description: |\n        A bunch of curated lists from online media. For each list, you'll get basic info of up to 5 podcasts. To get detailed meta data of all podcasts in a specific list, you need to use `GET /curated_podcasts/{id}`. We add new curated lists to the database on a daily basis.\n      operationId: getCuratedPodcasts\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Page number of curated lists.\n          example: 2\n          explode: true\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCuratedPodcastsResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n          links:\n            paginate:\n              description: Pagination through curated lists.\n              operationId: getCuratedPodcasts\n              parameters:\n                page: $response.body#/next_page_number\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch curated lists of podcasts\n      tags:\n        - Directory API\n  \"/curated_podcasts/{id}\":\n    get:\n      description: |\n        Get detailed meta data of all podcasts in a specific curated list.\n        This endpoint returns same data as https://www.listennotes.com/curated-podcasts/\n      operationId: getCuratedPodcastById\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            id for a specific curated list of podcasts. You can get the id from the response of `GET /search?type=curated` or `GET /curated_podcasts`.\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            example: SDFKduyJ47r\n            type: string\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CuratedListFull\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a curated list of podcasts by id\n      tags:\n        - Directory API\n  /episodes:\n    post:\n      description: |\n        Batch fetch basic meta data for up to 10 episodes. This endpoint could be used to implement custom playlists for individual episodes. For detailed meta data of an individual episode, you need to use `GET /episodes/{id}`. This endpoint is available only in the PRO/ENTERPRISE plan.\n      operationId: getEpisodesInBatch\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/GetEpisodesInBatchForm\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetEpisodesInBatchResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Batch fetch basic meta data for episodes\n      tags:\n        - Directory API\n  \"/episodes/{id}\":\n    get:\n      description: Fetch detailed meta data for a specific episode.\n      operationId: getEpisodeById\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: id for a specific episode. You can get episode id from using other endpoints, e.g., `GET /search`...\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            example: 6b6d65930c5a4f71b254465871fed370\n            type: string\n          style: simple\n        - description: To include the transcript of this episode or not? If it is 1, then include the transcript in the **transcript** field. The default value is 0 - we don't include transcript by default, because 1) it would make the response data very big, thus slow response time; 2) less than 1% of episodes have transcripts. The transcript field is available only in the PRO/ENTERPRISE plan.\n          explode: false\n          in: query\n          name: show_transcript\n          required: false\n          schema:\n            default: 0\n            example: 1\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EpisodeFull\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch detailed meta data for an episode by id\n      tags:\n        - Directory API\n  \"/episodes/{id}/recommendations\":\n    get:\n      description: Fetch up to 8 episode recommendations based on the given episode id.\n      operationId: getEpisodeRecommendations\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Episode id.\n          example: 254444fa6cf64a43a95292a70eb6869b\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Whether or not to exclude podcasts with explicit language. 1 is yes, and 0 is no.\n          explode: true\n          in: query\n          name: safe_mode\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 0\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetEpisodeRecommendationsResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch recommendations for an episode\n      tags:\n        - Directory API\n  /genres:\n    get:\n      description: |\n        Get a list of podcast genres that are supported in Listen Notes.\n        The genre id can be passed to other endpoints as a parameter to get podcasts in a specific genre,\n        e.g., `GET /best_podcasts`, `GET /search`...\n        You may want to cache the list of genres on the client side.\n      operationId: getGenres\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            Just show top level genres? If 1, yes, just show top level genres. If 0, no, show all genres.\n          explode: true\n          in: query\n          name: top_level_only\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 1\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetGenresResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a list of podcast genres\n      tags:\n        - Directory API\n  /just_listen:\n    get:\n      description: Recently published episodes are more likely to be fetched. Good luck!\n      operationId: justListen\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EpisodeSimple\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a random podcast episode\n      tags:\n        - Directory API\n  /languages:\n    get:\n      description: |\n        Get a list of languages that are supported in Listen Notes database. You can use the language string as query parameter in `GET /search`.\n      operationId: getLanguages\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetLanguagesResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a list of supported languages for podcasts\n      tags:\n        - Directory API\n  /playlists:\n    get:\n      description: |\n        This endpoint returns same data as listennotes.com/listen under your account.\n        You can use the **page** parameter to do pagination and fetch more playlists.\n      operationId: getPlaylists\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            How do you want to sort playlists?\n          explode: true\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: recent_added_first\n            enum:\n              - recent_added_first\n              - oldest_added_first\n              - name_a_to_z\n              - name_z_to_a\n            example: recent_added_first\n            type: string\n          style: form\n        - description: |\n            Page number of playlists.\n          explode: true\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            example: 1\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaylistsResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n          links:\n            paginate:\n              description: Pagination through playlists.\n              operationId: getPlaylists\n              parameters:\n                page: $response.body#/page\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a list of your playlists.\n      tags:\n        - Playlist API\n  \"/playlists/{id}\":\n    get:\n      description: |\n        A playlist can be an episode list (i.e., all items are episodes) or a podcast list (i.e., all items are podcasts),\n        which is essentially the same as those created via listennotes.com/listen/.\n        This endpoint fetches a list of items (i.e., episodes or podcasts) in the playlist.\n        You can use the **last_pub_date_ms** parameter to do pagination and fetch more items.\n        A playlist can be **public** (discoverable on ListenNotes.com),\n        **unlisted** (accessible to anyone who knows the playlist id),\n        or **private** (accessible to its owner).\n        You can fetch all playlists created by you, and **public** / **unlisted** playlists created by others.\n      operationId: getPlaylistById\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            Playlist id (always 11 characters, e.g., m1pe7z60bsw).\n            You can get the podcast id from the url of a playlist, e.g.,\n            m1pe7z60bsw is the playlist id of listennotes.com/listen/podcasts-about-podcasting-m1pe7z60bsw\n          example: m1pe7z60bsw\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            The type of this playlist, which should be either **episode_list** or **podcast_list**.\n          explode: true\n          in: query\n          name: type\n          required: false\n          schema:\n            default: episode_list\n            enum:\n              - episode_list\n              - podcast_list\n            example: episode_list\n            type: string\n          style: form\n        - description: |\n            For playlist items pagination.\n            It's the value of **last_timestamp_ms** from the response of last request.\n            If it's 0 or not specified, just return the latest or the oldest 20 items,\n            depending on the value of the **sort** parameter.\n          explode: true\n          in: query\n          name: last_timestamp_ms\n          required: false\n          schema:\n            default: 0\n            example: 0\n            type: integer\n          style: form\n        - description: |\n            How do you want to sort playlist items?\n          explode: true\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: recent_added_first\n            enum:\n              - recent_added_first\n              - oldest_added_first\n              - recent_published_first\n              - oldest_published_first\n            example: recent_added_first\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaylistResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n          links:\n            paginate:\n              description: Pagination through playlist items.\n              operationId: getPlaylistById\n              parameters:\n                last_timestamp_ms: $response.body#/last_timestamp_ms\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a playlist's info and items (i.e., episodes or podcasts).\n      tags:\n        - Playlist API\n  /podcasts:\n    post:\n      description: |\n        Batch fetch basic meta data for up to 10 podcasts.\n        This endpoint could be used to build something like OPML import,\n        allowing users to import a bunch of podcasts via rss urls.\n        For detailed meta data (including episodes) of an individual podcast, you need to use `GET /podcasts/{id}`. This endpoint is available only in the PRO/ENTERPRISE plan.\n      operationId: getPodcastsInBatch\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/GetPodcastsInBatchForm\"\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetPodcastsInBatchResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n          links:\n            paginate:\n              description: Pagination through latest episodes.\n              operationId: getPodcastsInBatch\n              parameters:\n                next_episode_pub_date: $response.body#/next_episode_pub_date\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Batch fetch basic meta data for podcasts\n      tags:\n        - Directory API\n  /podcasts/submit:\n    post:\n      description: |\n        Podcast hosting services can use this endpoint to help your users directly submit a new podcast to Listen Notes database. If the podcast doesn't exist in the database, \"status\" in the response will be \"in review\", and we'll review it within 12 hours. If the podcast exists, \"status\" in the response will be \"found\". You can use `POST /podcasts` to check if multiple podcasts exist in the database. If you want to get a notification once the podcast is accepted, you can either specify the \"email\" parameter or configure a webhook url in the dashboard: listennotes.com/api/dashboard/#webhooks\n      operationId: submitPodcast\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/SubmitPodcastForm\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubmitPodcastResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"400\":\n          description: Something wrong on your end (Client side errors), e.g., missing required parameters.\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Submit a podcast to Listen Notes database\n      tags:\n        - Podcaster API\n  \"/podcasts/{id}\":\n    delete:\n      description: |\n        Podcast hosting services can use this endpoint to streamline the process of podcast deletion on behave of their users (podcasters). We will review the deletion request within 12 hours. If the podcast is already deleted, the \"status\" field in the response will be \"deleted\". Otherwise, the status field will be \"in review\". If you want to get a notification once the podcast is deleted, you can configure a webhook url in the dashboard: listennotes.com/api/dashboard/#webhooks\n      operationId: deletePodcastById\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Podcast id. You can get podcast id from using other endpoints, e.g., `GET /search`, `GET /best_podcasts`...\n          example: 4d3fe717742d4963a85562e9f84d8c79\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: The reason why this podcast should be deleted, e.g., copyright violation, the podcaster wants to delete it... You can put \"testing\" here to indicate that you are testing this endpoint, so we will not actually delete the podcast.\n          example: the podcaster wants to delete it\n          explode: true\n          in: query\n          name: reason\n          required: false\n          schema:\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletePodcastResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Request to delete a podcast\n      tags:\n        - Podcaster API\n    get:\n      description: |\n        Fetch detailed meta data and episodes for a specific podcast (up to 10 episodes each time).\n        You can use the **next_episode_pub_date** parameter to do pagination and fetch more episodes.\n      operationId: getPodcastById\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Podcast id. You can get podcast id from using other endpoints, e.g., `GET /search`, `GET /best_podcasts`...\n          example: 4d3fe717742d4963a85562e9f84d8c79\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            For episodes pagination. It's the value of **next_episode_pub_date** from the response of last request. If not specified, just return latest 10 episodes or oldest 10 episodes, depending on the value of the **sort** parameter.\n          example: 1479154463000\n          explode: true\n          in: query\n          name: next_episode_pub_date\n          required: false\n          schema:\n            type: integer\n          style: form\n        - description: |\n            How do you want to sort the episodes of this podcast?\n          example: recent_first\n          explode: true\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: recent_first\n            enum:\n              - recent_first\n              - oldest_first\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastFull\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n          links:\n            paginate:\n              description: Pagination through episodes.\n              operationId: getPodcastById\n              parameters:\n                next_episode_pub_date: $response.body#/next_episode_pub_date\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch detailed meta data and episodes for a podcast by id\n      tags:\n        - Directory API\n  \"/podcasts/{id}/recommendations\":\n    get:\n      description: Fetch up to 8 podcast recommendations based on the given podcast id.\n      operationId: getPodcastRecommendations\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Podcast id.\n          example: 25212ac3c53240a880dd5032e547047b\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Whether or not to exclude podcasts with explicit language. 1 is yes, and 0 is no.\n          explode: true\n          in: query\n          name: safe_mode\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 0\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetPodcastRecommendationsResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"404\":\n          description: Endpoint not exist, or podcast / episode not exist.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch recommendations for a podcast\n      tags:\n        - Directory API\n  /regions:\n    get:\n      description: |\n        It returns a dictionary of country codes (e.g., us, gb...) \u0026 country names (United States, United Kingdom...). The country code is used in the query parameter **region** of `GET /best_podcasts`.\n      operationId: getRegions\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRegionsResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Fetch a list of supported countries/regions for best podcasts\n      tags:\n        - Directory API\n  /search:\n    get:\n      description: |\n        Full-text search on episodes, podcasts, or curated lists of podcasts.\n        Use the `offset` parameter to paginate through search results.\n        The FREE plan allows to see up to 30 search results (or `offset` \u003c 30) per query.\n        The PRO plan allows to see up to 300 search results (or `offset` \u003c 300) per query.\n        The ENTERPRISE plan allows to see up to 10,000 search results (or `offset` \u003c 10000) per query.\n      operationId: search\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            Search term, e.g., person, place, topic... You can use double quotes to do verbatim match, e.g., \"game of thrones\". Otherwise, it's fuzzy search.\n          explode: true\n          in: query\n          name: q\n          required: true\n          schema:\n            example: star wars\n            type: string\n          style: form\n        - description: |\n            Sort by date or not? If 0, then sort by relevance. If 1, then sort by date.\n          explode: true\n          in: query\n          name: sort_by_date\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 0\n            type: integer\n          style: form\n        - description: |\n            What type of contents do you want to search for? \n          explode: true\n          in: query\n          name: type\n          required: false\n          schema:\n            default: episode\n            enum:\n              - episode\n              - podcast\n              - curated\n            example: episode\n            type: string\n          style: form\n        - description: |\n            Offset for search results, for pagination. You'll use **next_offset** from response for this parameter.\n          explode: true\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            example: 0\n            type: integer\n          style: form\n        - description: |\n            Minimum audio length in minutes. Applicable only when type parameter is **episode**.\n          explode: true\n          in: query\n          name: len_min\n          required: false\n          schema:\n            default: 0\n            example: 10\n            type: integer\n          style: form\n        - description: |\n            Maximum audio length in minutes. Applicable only when type parameter is **episode**.\n          explode: true\n          in: query\n          name: len_max\n          required: false\n          schema:\n            example: 30\n            type: integer\n          style: form\n        - description: |\n            Minimum number of episodes. Applicable only when type parameter is **podcast**.\n          explode: true\n          in: query\n          name: episode_count_min\n          required: false\n          schema:\n            type: integer\n          style: form\n        - description: |\n            Maximum number of episodes. Applicable only when type parameter is **podcast**.\n          explode: true\n          in: query\n          name: episode_count_max\n          required: false\n          schema:\n            type: integer\n          style: form\n        - description: |\n            A comma-delimited string of a list of genre ids. If not specified, then all genres are included. You can find the id and the name of all genres from `GET /genres`. It works only when **type** is *episode* or *podcast*.\n          explode: true\n          in: query\n          name: genre_ids\n          required: false\n          schema:\n            example: 68,82\n            type: string\n          style: form\n        - description: |\n            Only show episodes/podcasts/curated lists published before this timestamp (in milliseconds). If **published_before** \u0026 **published_after** are used at the same time, **published_before** should be bigger than **published_after**.\n          explode: true\n          in: query\n          name: published_before\n          required: false\n          schema:\n            example: 1580172454000\n            type: integer\n          style: form\n        - description: |\n            Only show episodes/podcasts/curated lists published after this timestamp (in milliseconds). If **published_before** \u0026 **published_after** are used at the same time, **published_before** should be bigger than **published_after**.\n          explode: true\n          in: query\n          name: published_after\n          required: false\n          schema:\n            default: 0\n            example: 0\n            type: integer\n          style: form\n        - description: |\n            A comma-delimited string to search only in specific fields. Allowed values are title, description, author, and audio. If not specified, then search every fields.\n          explode: true\n          in: query\n          name: only_in\n          required: false\n          schema:\n            default: title,description,author,audio\n            example: title,description\n            type: string\n          style: form\n        - description: |\n            Limit search results to a specific language. If not specified, it'll be any language. You can get a list of supported languages from `GET /languages`. It works only when **type** is *episode* or *podcast*.\n          explode: true\n          in: query\n          name: language\n          required: false\n          schema:\n            example: English\n            type: string\n          style: form\n        - description: |\n            Limit search results to a specific region (e.g., us, gb, in...). If not specified, it'll be any region. You can get the supported country codes from `GET /regions`. It works only when **type** is *episode* or *podcast*.\n          explode: true\n          in: query\n          name: region\n          required: false\n          schema:\n            example: \"\"\n            type: string\n          style: form\n        - description: |\n            A comma-delimited string of podcast ids (up to 5 podcasts) - you can get a podcast id from the **podcast_id** field in response. This parameter is to limit search results from only a few specific podcasts. It works only when **type** is *episode*.\n          explode: true\n          in: query\n          name: ocid\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: |\n            A comma-delimited string of podcast ids (up to 5 podcasts) - you can get a podcast id from the **podcast_id** field in response. This parameter is to exclude search results of a few specific podcasts. It works only when **type** is *episode*.\n          explode: true\n          in: query\n          name: ncid\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: |\n            Whether or not to exclude podcasts/episodes with explicit language. 1 is yes and 0 is no. It works only when **type** is *episode* or *podcast*.\n          explode: true\n          in: query\n          name: safe_mode\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 0\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n          links:\n            paginate:\n              description: Pagination through search results.\n              operationId: search\n              parameters:\n                offset: $response.body#/next_offset\n        \"400\":\n          description: Something wrong on your end (Client side errors), e.g., missing required parameters.\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Full-text search\n      tags:\n        - Search API\n  /typeahead:\n    get:\n      description: Suggest search terms, podcast genres, and podcasts.\n      operationId: typeahead\n      parameters:\n        - description: Get API Key on listennotes.com/api\n          explode: false\n          in: header\n          name: X-ListenAPI-Key\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: |\n            Search term, e.g., person, place, topic... You can use double quotes to do verbatim match, e.g., \"game of thrones\". Otherwise, it's fuzzy search.\n          explode: true\n          in: query\n          name: q\n          required: true\n          schema:\n            example: star wars\n            type: string\n          style: form\n        - description: |\n            Autosuggest podcasts. This only searches podcast title and publisher and returns very limited info of 5 podcasts. 1 is yes, 0 is no. It's a bit slow to autosuggest podcasts, so we turn it off by default. If show_podcasts=1, you can also pass iTunes id (e.g., 474722933) to the q parameter to fetch podcast meta data.\n          explode: true\n          in: query\n          name: show_podcasts\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 1\n            type: integer\n          style: form\n        - description: |\n            Whether or not to autosuggest genres. 1 is yes, 0 is no.\n          explode: true\n          in: query\n          name: show_genres\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 1\n            type: integer\n          style: form\n        - description: |\n            Whether or not to exclude podcasts/episodes with explicit language. 1 is yes and 0 is no. It works only when **show_podcasts** is *1*.\n          explode: true\n          in: query\n          name: safe_mode\n          required: false\n          schema:\n            default: 0\n            enum:\n              - 0\n              - 1\n            example: 0\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TypeaheadResponse\"\n          description: OK\n          headers:\n            X-ListenAPI-FreeQuota:\n              $ref: \"#/components/headers/X-ListenAPI-FreeQuota\"\n            X-ListenAPI-NextBillingDate:\n              $ref: \"#/components/headers/X-ListenAPI-NextBillingDate\"\n            X-ListenAPI-Usage:\n              $ref: \"#/components/headers/X-ListenAPI-Usage\"\n            X-listenAPI-Latency-Seconds:\n              $ref: \"#/components/headers/X-listenAPI-Latency-Seconds\"\n        \"400\":\n          description: Something wrong on your end (Client side errors), e.g., missing required parameters.\n        \"401\":\n          description: Wrong api key or your account is suspended.\n        \"429\":\n          description: You are using FREE plan and you exceed the quota limit.\n        5XX:\n          description: Something wrong on our end (Unexpected server errors).\n      summary: Typeahead search\n      tags:\n        - Search API\ncomponents:\n  headers:\n    X-ListenAPI-FreeQuota:\n      description: Free quotas of API requests included in your api plan.\n      explode: false\n      schema:\n        example: 25000\n        type: integer\n      style: simple\n    X-ListenAPI-NextBillingDate:\n      description: The timestamp for the start of next billing cycle. In ISO 8601 format.\n      explode: false\n      schema:\n        example: 2020-04-26T17:27:33.110641Z\n        format: date-time\n        type: string\n      style: simple\n    X-ListenAPI-Usage:\n      description: The number of API requests that you've used in current billing cycle.\n      explode: false\n      schema:\n        example: 19231\n        type: integer\n      style: simple\n    X-listenAPI-Latency-Seconds:\n      description: Latency for this api call, in seconds.\n      explode: false\n      schema:\n        example: 0.056\n        type: number\n      style: simple\n  parameters:\n    apiKeyParam:\n      description: Get API Key on listennotes.com/api\n      explode: false\n      in: header\n      name: X-ListenAPI-Key\n      required: true\n      schema:\n        type: string\n      style: simple\n    genreIdParam:\n      description: You can get the id from `GET /genres`. If not specified, it'll be the overall best podcasts, which can be considered as a special genre.\n      explode: true\n      in: query\n      name: genre_id\n      required: false\n      schema:\n        example: \"93\"\n        type: string\n      style: form\n    queryParam:\n      description: |\n        Search term, e.g., person, place, topic... You can use double quotes to do verbatim match, e.g., \"game of thrones\". Otherwise, it's fuzzy search.\n      explode: true\n      in: query\n      name: q\n      required: true\n      schema:\n        example: star wars\n        type: string\n      style: form\n    safeModeParam:\n      description: Whether or not to exclude podcasts with explicit language. 1 is yes, and 0 is no.\n      explode: true\n      in: query\n      name: safe_mode\n      required: false\n      schema:\n        default: 0\n        enum:\n          - 0\n          - 1\n        example: 0\n        type: integer\n      style: form\n  responses:\n    BadRequest:\n      description: Something wrong on your end (Client side errors), e.g., missing required parameters.\n    NotFound:\n      description: Endpoint not exist, or podcast / episode not exist.\n    ServerError:\n      description: Something wrong on our end (Unexpected server errors).\n    TooManyRequests:\n      description: You are using FREE plan and you exceed the quota limit.\n    Unauthorized:\n      description: Wrong api key or your account is suspended.\n  schemas:\n    AudioField:\n      description: Audio url of this episode, which can be played directly.\n      example: https://www.listennotes.com/e/p/11b34041e804491b9704d11f283c74de/\n      type: string\n    AudioLengthSecField:\n      description: Audio length of this episode. In seconds.\n      example: 567\n      type: integer\n    BestPodcastsLNUrlField:\n      description: Url of the list of best podcasts on [ListenNotes.com](https://www.ListenNotes.com).\n      example: https://www.listennotes.com/best-business-news-podcasts-95/\n      type: string\n    BestPodcastsResponse:\n      properties:\n        has_next:\n          example: true\n          type: boolean\n        has_previous:\n          type: boolean\n        id:\n          description: The id of this genre\n          example: 95\n          type: integer\n        listennotes_url:\n          $ref: \"#/components/schemas/BestPodcastsLNUrlField\"\n        name:\n          description: This genre's name.\n          example: Business News\n          type: string\n        next_page_number:\n          example: 3\n          type: integer\n        page_number:\n          example: 2\n          type: integer\n        parent_id:\n          description: The id of parent genre.\n          example: 93\n          type: integer\n        podcasts:\n          items:\n            $ref: \"#/components/schemas/PodcastSimple\"\n          type: array\n        previous_page_number:\n          example: 1\n          type: integer\n        total:\n          example: 325\n          type: integer\n      required:\n        - has_next\n        - has_previous\n        - id\n        - listennotes_url\n        - name\n        - next_page_number\n        - page_number\n        - parent_id\n        - podcasts\n        - previous_page_number\n        - total\n      type: object\n    CountryField:\n      description: The country where this podcast is produced.\n      example: United States\n      type: string\n    CuratedDescriptionField:\n      description: This curated list's description.\n      example: Commuting to work is always better when you have a great new podcast to listen to, and this year, we have discovered some of our favorite podcasts yet for readers and book-lovers. These podcasts for readers entertain us and provide no shortage of new book recommendations too.\n      type: string\n    CuratedIdField:\n      description: Curated list id.\n      example: Vb017Sx3l8F\n      type: string\n    CuratedLNUrlField:\n      description: The url of this curated list on [ListenNotes.com](https://www.ListenNotes.com).\n      example: https://www.listennotes.com/curated-podcasts/7-bookish-podcasts-for-avid-readers-on-H2r-TCWai8K/\n      type: string\n    CuratedListFull:\n      properties:\n        description:\n          $ref: \"#/components/schemas/CuratedDescriptionField\"\n        id:\n          $ref: \"#/components/schemas/CuratedIdField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/CuratedLNUrlField\"\n        podcasts:\n          description: Complete meta data of all podcasts in this curated list.\n          items:\n            $ref: \"#/components/schemas/PodcastSimple\"\n          type: array\n        pub_date_ms:\n          $ref: \"#/components/schemas/CuratedPubDateMsField\"\n        source_domain:\n          $ref: \"#/components/schemas/CuratedSourceDomainField\"\n        source_url:\n          $ref: \"#/components/schemas/CuratedSourceUrlField\"\n        title:\n          $ref: \"#/components/schemas/CuratedNameField\"\n        total:\n          $ref: \"#/components/schemas/CuratedTotalPodcastsField\"\n      type: object\n    CuratedListSearchResult:\n      description: When **type** is *curated*.\n      properties:\n        description_highlighted:\n          description: Highlighted segment of this curated list's description\n          example: ...\u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e fans in Reddit shared their favorite podcasts.\n          type: string\n        description_original:\n          description: Plain text of this curated list's description\n          example: Star Wars fans in Reddit shared their favorite podcasts.\n          type: string\n        id:\n          $ref: \"#/components/schemas/CuratedIdField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/CuratedLNUrlField\"\n        podcasts:\n          description: Up to 5 podcasts in this curated list.\n          items:\n            $ref: \"#/components/schemas/PodcastMinimum\"\n          type: array\n        pub_date_ms:\n          $ref: \"#/components/schemas/CuratedPubDateMsField\"\n        source_domain:\n          $ref: \"#/components/schemas/CuratedSourceDomainField\"\n        source_url:\n          $ref: \"#/components/schemas/CuratedSourceUrlField\"\n        title_highlighted:\n          description: Highlighted segment of this curated list's title\n          example: |\n            What are some good \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e Podcast to listen to?\n          type: string\n        title_original:\n          description: Plain text of this curated list's title\n          example: What are some good Star Wars Podcast to listen to?\n          type: string\n        total:\n          $ref: \"#/components/schemas/CuratedTotalPodcastsField\"\n      type: object\n    CuratedListSimple:\n      properties:\n        description:\n          $ref: \"#/components/schemas/CuratedDescriptionField\"\n        id:\n          $ref: \"#/components/schemas/CuratedIdField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/CuratedLNUrlField\"\n        podcasts:\n          description: Minimum meta data of up to 5 podcasts in this curated list.\n          items:\n            $ref: \"#/components/schemas/PodcastMinimum\"\n          type: array\n        pub_date_ms:\n          $ref: \"#/components/schemas/CuratedPubDateMsField\"\n        source_domain:\n          $ref: \"#/components/schemas/CuratedSourceDomainField\"\n        source_url:\n          $ref: \"#/components/schemas/CuratedSourceUrlField\"\n        title:\n          $ref: \"#/components/schemas/CuratedNameField\"\n        total:\n          $ref: \"#/components/schemas/CuratedTotalPodcastsField\"\n      type: object\n    CuratedNameField:\n      description: Curated list name.\n      example: 7 Bookish Podcasts for Avid Readers On the Go\n      type: string\n    CuratedPubDateMsField:\n      description: Published date of this curated list. In milliseconds.\n      example: 1556843484301\n      type: integer\n    CuratedSourceDomainField:\n      description: The domain name of the source of this curated list.\n      example: parade.com\n      type: string\n    CuratedSourceUrlField:\n      description: Url of the source of this curated list.\n      example: https://parade.com/718913/ashley_johnson/7-bookish-podcasts-for-avid-readers-on-the-go/\n      type: string\n    CuratedTotalPodcastsField:\n      description: The total number of podcasts in this curated list.\n      example: 25\n      type: integer\n    CustomAudio:\n      description: A custom audio in a playlist, which is a type of playlist item.\n      properties:\n        audio:\n          description: Audio url, which can be played directly.\n          example: https://example.com/audio.mp3\n          type: string\n        audio_length_sec:\n          description: Audio length in seconds.\n          example: 253\n          type: integer\n        image:\n          description: High resolution image url of this custom audio.\n          example: https://cdn-images-1.listennotes.com/playlist/image/6907e8ff6b6c45df94cc059753f369cc.JPEG\n          type: string\n        pub_date_ms:\n          description: |\n            Published date (in milliseconds) of this custom audio.\n            For now, it's the same as **added_at_ms** of this playlist item.\n          example: 1595567028133\n          type: integer\n        thumbnail:\n          description: Low resolution image url of this custom audio.\n          example: https://d3sv2eduhewoas.cloudfront.net/playlist/image/48477deae02649d7ab9d3f1b3966af38.JPEG\n          type: string\n        title:\n          description: Custom audio title.\n          example: An awesome audio to listen.\n          type: string\n      type: object\n    DeletePodcastResponse:\n      properties:\n        status:\n          description: The status of this podcast deletion request.\n          enum:\n            - deleted\n            - in review\n          example: deleted\n          type: string\n      required:\n        - status\n      type: object\n    DeletedItem:\n      description: |\n        A deleted episode or podcast.\n        An episode or a podcast could be deleted from our podcast database.\n        Possible reasons: 1) Podcast producers sometimes delete their old episodes. 2) Copyright issues.\n      properties:\n        error:\n          description: Why this episode or podcast is deleted?\n          example: This episode is deleted from the podcast database, because...\n          type: string\n        id:\n          description: Episode id or podcast id.\n          example: 96fc400171364e32897b25d84a8ed8ec\n          type: string\n        status:\n          description: The status of this episode or podcast. For now, the only possible value is **deleted**.\n          example: deleted\n          type: string\n        title:\n          description: Episode title or podcast title.\n          example: This is a test episode\n          type: string\n      type: object\n    EarliestPubDateMsField:\n      description: The published date of the oldest episode of this podcast. In milliseconds\n      example: 1470667902000\n      type: integer\n    EmailField:\n      description: The email of this podcast's producer. This field is available only in the PRO/ENTERPRISE plan.\n      example: hello@example.com\n      type: string\n    EpisodeDescriptionField:\n      description: Html of this episode's full description\n      example: |\n        \u003cp\u003eDisney chief Bob Iger shared news about Star Wars movies in 2020 and beyond, but some media outlets gave conflicting reports about it. Here's the real scoop. Punch it!\u003c/p\u003e \u003cp\u003e***We’re listener supported! Go to http://Patreon.com/sw7x7 to donate to the Star Wars 7x7 podcast, and you’ll get some fabulous rewards for your pledge.*** \u003c/p\u003e \u003cp\u003eCheck out SW7x7.com for full Star Wars 7x7 show notes and links, and to comment on any of the content of this episode! If you like what you've heard, please leave us a rating or review on iTunes or Stitcher, which will also help more people discover this Star Wars podcast.\u003c/p\u003e \u003cp\u003eDon't forget to join the Star Wars 7x7 fun on Facebook at Facebook.com/SW7x7, and follow the breaking news Twitter feed at Twitter.com/SW7x7Podcast. We're also on Pinterest and Instagram as \"SW7x7\" too, and we'd love to connect with you there!\u003c/p\u003e\n      type: string\n    EpisodeFull:\n      properties:\n        audio:\n          $ref: \"#/components/schemas/AudioField\"\n        audio_length_sec:\n          $ref: \"#/components/schemas/AudioLengthSecField\"\n        description:\n          $ref: \"#/components/schemas/EpisodeDescriptionField\"\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        id:\n          $ref: \"#/components/schemas/EpisodeIdField\"\n        image:\n          $ref: \"#/components/schemas/EpisodeImageField\"\n        link:\n          $ref: \"#/components/schemas/LinkField\"\n        listennotes_edit_url:\n          $ref: \"#/components/schemas/EpisodeLNEditUrlField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/EpisodeLNUrlField\"\n        maybe_audio_invalid:\n          $ref: \"#/components/schemas/MaybeAudioInvalidField\"\n        podcast:\n          $ref: \"#/components/schemas/PodcastSimple\"\n        pub_date_ms:\n          $ref: \"#/components/schemas/EpisodePubDateMsField\"\n        thumbnail:\n          $ref: \"#/components/schemas/EpisodeThumbnailField\"\n        title:\n          $ref: \"#/components/schemas/EpisodeNameField\"\n        transcript:\n          $ref: \"#/components/schemas/TranscriptField\"\n      type: object\n    EpisodeIdField:\n      description: Episode id.\n      example: 4d82e50314174754a3b603912448e812\n      type: string\n    EpisodeImageField:\n      description: |\n        Image url for this episode.\n        If an episode doesn't have its own image, then this field would be the url of the podcast artwork image.\n        If you are using PRO/ENTERPRISE plan, then it's\n        a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**,\n        low resolution image (300x300).\n      example: https://cdn-images-1.listennotes.com/podcasts/exponent-ben-thompson-james-allworth-OaJSjb4xQv3.1400x1400.jpg\n      type: string\n    EpisodeLNEditUrlField:\n      description: Edit url of this episode where you can update the audio url if you find the audio is broken.\n      example: https://www.listennotes.com/e/11b34041e804491b9704d11f283c74de/#edit\n      type: string\n    EpisodeLNUrlField:\n      description: The url of this episode on [ListenNotes.com](https://www.ListenNotes.com).\n      example: https://www.listennotes.com/e/4d82e50314174754a3b603912448e812/\n      type: string\n    EpisodeMinimum:\n      properties:\n        audio:\n          $ref: \"#/components/schemas/AudioField\"\n        audio_length_sec:\n          $ref: \"#/components/schemas/AudioLengthSecField\"\n        description:\n          $ref: \"#/components/schemas/EpisodeDescriptionField\"\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        id:\n          $ref: \"#/components/schemas/EpisodeIdField\"\n        image:\n          $ref: \"#/components/schemas/ImageField\"\n        link:\n          $ref: \"#/components/schemas/LinkField\"\n        listennotes_edit_url:\n          $ref: \"#/components/schemas/EpisodeLNEditUrlField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/EpisodeLNUrlField\"\n        maybe_audio_invalid:\n          $ref: \"#/components/schemas/MaybeAudioInvalidField\"\n        pub_date_ms:\n          $ref: \"#/components/schemas/EpisodePubDateMsField\"\n        thumbnail:\n          $ref: \"#/components/schemas/ThumbnailField\"\n        title:\n          $ref: \"#/components/schemas/EpisodeNameField\"\n      type: object\n    EpisodeNameField:\n      description: Episode name.\n      example: \"Celebration Recap, Jason Fry and Christian Blauvelt Interviews – SWBW #101\"\n      type: string\n    EpisodePubDateMsField:\n      description: Published date for this episode. In millisecond.\n      example: 1474873200000\n      type: integer\n    EpisodeSearchResult:\n      description: When **type** is *episode*.\n      properties:\n        audio:\n          $ref: \"#/components/schemas/AudioField\"\n        audio_length_sec:\n          $ref: \"#/components/schemas/AudioLengthSecField\"\n        description_highlighted:\n          description: Highlighted segment of this episode's description\n          example: |\n            ...Go to http://Patreon.com/sw7x7 to donate to the \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e 7x7 podcast, and you'll get some fabulous rewards for your pledge.***  Check out SW7x7.com for full \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e 7x7 show notes and links, and to\n          type: string\n        description_original:\n          description: Plain text of this episode's description\n          example: |\n            Yeah, Star Wars Celebration Orlando is 32 days away, but what's the scoop on Celebration 2018? Plus, Rebels Day is Saturday, and much more in our update. Punch it! ***We're listener supported! Go to http://Patreon.com/sw7x7 to donate to the Star Wars 7x7 podcast, and youâ€™ll get some fabulous rewards for your pledge.***  Check out SW7x7.com for full Star Wars 7x7 show notes and links, and to comment on any of the content of this episode! If you like what you've heard, please leave us a rating or review on iTunes or Stitcher, which will also help more people discover this Star Wars podcast. Don't forget to join the Star Wars 7x7 fun on Facebook at Facebook.com/SW7x7, and follow the breaking news Twitter feed at Twitter.com/SW7x7Podcast. We're also on Pinterest and Instagram as \"SW7x7\" too, and we'd love to connect with you there!\n          type: string\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        id:\n          $ref: \"#/components/schemas/EpisodeIdField\"\n        image:\n          $ref: \"#/components/schemas/EpisodeImageField\"\n        itunes_id:\n          $ref: \"#/components/schemas/iTunesIdField\"\n        link:\n          $ref: \"#/components/schemas/LinkField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/EpisodeLNUrlField\"\n        podcast:\n          $ref: \"#/components/schemas/EpisodeSearchResult_podcast\"\n        pub_date_ms:\n          $ref: \"#/components/schemas/EpisodePubDateMsField\"\n        rss:\n          $ref: \"#/components/schemas/RssField\"\n        thumbnail:\n          $ref: \"#/components/schemas/EpisodeThumbnailField\"\n        title_highlighted:\n          description: Highlighted segment of this episode's title\n          example: '815: \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e 2020 Movie and Beyond!'\n          type: string\n        title_original:\n          description: Plain text of this episode' title\n          example: \"815: Star Wars 2020 Movie and Beyond!\"\n          type: string\n        transcripts_highlighted:\n          description: Up to 2 highlighted segments of the audio transcript of this episode.\n          items:\n            example: |\n              00:21:27  when Disney bought the \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e franchise from George Lucas they had a plan lots of \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e movies new \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e movies every month another one was just released while I was talking\n            type: string\n          type: array\n      type: object\n    EpisodeSearchResult_podcast:\n      description: The podcast that this episode belongs to.\n      properties:\n        genre_ids:\n          $ref: \"#/components/schemas/GenreIdsField\"\n        id:\n          $ref: \"#/components/schemas/PodcastIdField\"\n        image:\n          $ref: \"#/components/schemas/ImageField\"\n        listen_score:\n          $ref: \"#/components/schemas/ListenScoreField\"\n        listen_score_global_rank:\n          $ref: \"#/components/schemas/ListenScoreGlobalRankField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/PodcastLNUrlField\"\n        publisher_highlighted:\n          $ref: \"#/components/schemas/PublisherHighlightedField\"\n        publisher_original:\n          $ref: \"#/components/schemas/PublisherOriginalField\"\n        thumbnail:\n          $ref: \"#/components/schemas/ThumbnailField\"\n        title_highlighted:\n          $ref: \"#/components/schemas/PodcastTitleHighlightedField\"\n        title_original:\n          $ref: \"#/components/schemas/PodcastTitleOriginalField\"\n      type: object\n    EpisodeSimple:\n      properties:\n        audio:\n          $ref: \"#/components/schemas/AudioField\"\n        audio_length_sec:\n          $ref: \"#/components/schemas/AudioLengthSecField\"\n        description:\n          $ref: \"#/components/schemas/EpisodeDescriptionField\"\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        id:\n          $ref: \"#/components/schemas/EpisodeIdField\"\n        image:\n          $ref: \"#/components/schemas/EpisodeImageField\"\n        link:\n          $ref: \"#/components/schemas/LinkField\"\n        listennotes_edit_url:\n          $ref: \"#/components/schemas/EpisodeLNEditUrlField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/EpisodeLNUrlField\"\n        maybe_audio_invalid:\n          $ref: \"#/components/schemas/MaybeAudioInvalidField\"\n        podcast:\n          $ref: \"#/components/schemas/PodcastMinimum\"\n        pub_date_ms:\n          $ref: \"#/components/schemas/EpisodePubDateMsField\"\n        thumbnail:\n          $ref: \"#/components/schemas/EpisodeThumbnailField\"\n        title:\n          $ref: \"#/components/schemas/EpisodeNameField\"\n      type: object\n    EpisodeThumbnailField:\n      description: |\n        Thumbnail image (300x300) url for this episode.\n        If an episode doesn't have its own image, then this field would be the url of the podcast artwork thumbnail image.\n      example: https://cdn-images-1.listennotes.com/podcasts/exponent-ben-thompson-james-allworth-OaJSjb4xQv3.300x300.jpg\n      type: string\n    ExplicitField:\n      description: Whether this podcast contains explicit language.\n      example: false\n      type: boolean\n    Genre:\n      example:\n        id: 140\n        name: Web Design\n        parent_id: 127\n      properties:\n        id:\n          description: Genre id\n          example: 93\n          type: integer\n        name:\n          description: Genre name.\n          example: Business\n          type: string\n        parent_id:\n          description: Parent genre id.\n          example: 95\n          type: integer\n      type: object\n    GenreIdsField:\n      example:\n        - 138\n        - 86\n        - 160\n        - 68\n        - 82\n        - 100\n        - 101\n      items:\n        description: Genre ids.\n        type: integer\n      type: array\n    GetCuratedPodcastsResponse:\n      properties:\n        curated_lists:\n          items:\n            $ref: \"#/components/schemas/CuratedListSimple\"\n          type: array\n        has_next:\n          example: true\n          type: boolean\n        has_previous:\n          example: true\n          type: boolean\n        next_page_number:\n          example: 3\n          type: integer\n        page_number:\n          example: 2\n          type: integer\n        previous_page_number:\n          example: 1\n          type: integer\n        total:\n          example: 25\n          type: integer\n      required:\n        - curated_lists\n        - has_next\n        - has_previous\n        - next_page_number\n        - page_number\n        - previous_page_number\n        - total\n      type: object\n    GetEpisodeRecommendationsResponse:\n      properties:\n        recommendations:\n          items:\n            $ref: \"#/components/schemas/EpisodeSimple\"\n          type: array\n      required:\n        - recommendations\n      type: object\n    GetEpisodesInBatchForm:\n      properties:\n        ids:\n          description: Comma-separated list of episode ids.\n          example: c577d55b2b2b483c969fae3ceb58e362,0f34a9099579490993eec9e8c8cebb82\n          type: string\n      required:\n        - ids\n      type: object\n    GetEpisodesInBatchResponse:\n      properties:\n        episodes:\n          items:\n            $ref: \"#/components/schemas/EpisodeSimple\"\n          type: array\n      required:\n        - episodes\n      type: object\n    GetGenresResponse:\n      properties:\n        genres:\n          items:\n            $ref: \"#/components/schemas/Genre\"\n          type: array\n      required:\n        - genres\n      type: object\n    GetLanguagesResponse:\n      properties:\n        languages:\n          example:\n            - Any language\n            - Afar\n            - Abkhazian\n            - Afrikaans\n            - Akan\n            - Albanian\n            - Arabic\n            - Azerbaijani\n            - Bambara\n            - Bashkir\n            - Basque\n            - Belarusian\n            - Bulgarian\n            - Catalan\n            - Chamorro\n            - Chinese\n            - Croatian\n            - Czech\n            - Danish\n            - Dutch\n            - English\n            - Estonian\n            - Faeroese\n            - Finnish\n            - French\n            - Gaelic\n            - Galician\n            - German\n            - Greek\n          items:\n            type: string\n          type: array\n      required:\n        - languages\n      type: object\n    GetPodcastRecommendationsResponse:\n      properties:\n        recommendations:\n          items:\n            $ref: \"#/components/schemas/PodcastSimple\"\n          type: array\n      required:\n        - recommendations\n      type: object\n    GetPodcastsInBatchForm:\n      properties:\n        ids:\n          description: Comma-separated list of podcast ids.\n          example: 3302bc71139541baa46ecb27dbf6071a,68faf62be97149c280ebcc25178aa731,37589a3e121e40debe4cef3d9638932a,9cf19c590ff0484d97b18b329fed0c6a\n          type: string\n        itunes_ids:\n          description: Comma-separated itunes ids.\n          example: 1457514703,1386234384,659155419\n          type: string\n        next_episode_pub_date:\n          description: |\n            For latest episodes pagination. It's the value of **next_episode_pub_date** from the response of last request. If not specified, just return latest 10 episodes.\n          example: 1557394247000\n          type: integer\n        rsses:\n          description: Comma-separated rss urls.\n          example: https://rss.art19.com/recode-decode,https://rss.art19.com/the-daily,https://www.npr.org/rss/podcast.php?id=510331,https://www.npr.org/rss/podcast.php?id=510331\n          type: string\n        show_latest_episodes:\n          default: 0\n          description: |\n            Whether or not to fetch up to 10 latest episodes from these podcasts, sorted by pub_date. 1 is yes, and 0 is no.\n          enum:\n            - 0\n            - 1\n          example: 1\n          type: integer\n      type: object\n    GetPodcastsInBatchResponse:\n      properties:\n        latest_episodes:\n          description: |\n            Up to 10 latest episodes from these podcasts, sorted by **pub_date**. This field shows up only when **show_latest_episodes** is 1.\n          items:\n            $ref: \"#/components/schemas/EpisodeSimple\"\n          type: array\n        podcasts:\n          items:\n            $ref: \"#/components/schemas/PodcastSimple\"\n          type: array\n      required:\n        - podcasts\n      type: object\n    GetRegionsResponse:\n      properties:\n        regions:\n          example:\n            au: Australia\n            de: Germany\n            ua: Ukraine\n            us: United States\n          type: object\n      required:\n        - regions\n      type: object\n    ImageField:\n      description: |\n        Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's\n        a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**,\n        low resolution image (300x300).\n      example: https://cdn-images-1.listennotes.com/podcasts/exponent-ben-thompson-james-allworth-OaJSjb4xQv3.1400x1400.jpg\n      type: string\n    IsClaimedField:\n      description: Whether this podcast is claimed by its producer on [ListenNotes.com](https://www.ListenNotes.com).\n      example: true\n      type: boolean\n    LanguageField:\n      description: The language of this podcast. You can get all supported languages from `GET /languages`.\n      example: English\n      type: string\n    LatestPubDateMsField:\n      description: The published date of the latest episode of this podcast. In milliseconds\n      example: 1557499770000\n      type: integer\n    LinkField:\n      description: Web link of this episode.\n      example: https://www.npr.org/2020/01/22/798532179/soleimanis-iran\n      type: string\n    ListenScoreField:\n      description: |\n        The estimated popularity score of a podcast compared to all other rss-based public podcasts in the world on a scale from 0 to 100.\n        If the score is not available, it'll be null. Learn more at listennotes.com/listen-score\n      example: 81\n      type: integer\n    ListenScoreGlobalRankField:\n      description: |\n        The estimated popularity ranking of a podcast compared to all other rss-based public podcasts in the world.\n        For example, if the value is 0.5%, then this podcast is one of the top 0.5% most popular shows out of all podcasts globally, ranked by Listen Score.\n        If the ranking is not available, it'll be null. Learn more at listennotes.com/listen-score\n      example: 0.5%\n      type: string\n    MaybeAudioInvalidField:\n      description: Whether or not this episode's audio is invalid. Podcasters may delete the original audio.\n      example: false\n      type: boolean\n    NextEpisodePubDateField:\n      description: Passed to the **next_episode_pub_date** parameter of `GET /podcasts/{id}` to paginate through episodes of that podcast.\n      example: 1470667902000\n      type: integer\n    PlaylistDescriptionField:\n      description: Playlist description.\n      example: A curated playlist of podcasts about podcasting.\n      type: string\n    PlaylistIdField:\n      description: A 11-character playlist id.\n      example: m1pe7z60bsw\n      type: string\n    PlaylistImageField:\n      description: High resolution image url of the playlist.\n      example: https://cdn-images-1.listennotes.com/playlist/image/6907e8ff6b6c45df94cc059753f369cc.JPEG\n      type: string\n    PlaylistItem:\n      description: An item in a playlist\n      properties:\n        added_at_ms:\n          description: Timestamp (in milliseconds) when this item is added.\n          example: 1595567004958\n          type: integer\n        data:\n          oneOf:\n            - $ref: \"#/components/schemas/EpisodeSimple\"\n            - $ref: \"#/components/schemas/PodcastSimple\"\n            - $ref: \"#/components/schemas/CustomAudio\"\n            - $ref: \"#/components/schemas/DeletedItem\"\n        id:\n          description: Playlist item id.\n          example: 23\n          type: integer\n        notes:\n          description: Notes for this item.\n          example: This is a good episode.\n          type: string\n        type:\n          description: |\n            The type of this playlist item.\n            If a playlist is **episode_list**, then an item could be either **episode** or **custom_audio**.\n            If it's **podcast_list**, then an item can only be **podcast**.\n          enum:\n            - episode\n            - custom_audio\n            - podcast\n          example: episode\n          type: string\n      type: object\n    PlaylistLastTimestampMsField:\n      description: |\n        Passed to the **last_timestamp_ms** parameter of `GET /playlists/{id}` to paginate through items of that playlist.\n      example: 1595641092907\n      type: integer\n    PlaylistListennotesUrlField:\n      description: The url of this playlist on ListenNotes.com.\n      example: https://www.listennotes.com/listen/podcasts-about-podcasting-m1pe7z60bsw/?display=episode\n      type: string\n    PlaylistNameField:\n      description: Playlist name.\n      example: My podcast playlist\n      type: string\n    PlaylistResponse:\n      properties:\n        description:\n          $ref: \"#/components/schemas/PlaylistDescriptionField\"\n        id:\n          $ref: \"#/components/schemas/PlaylistIdField\"\n        image:\n          $ref: \"#/components/schemas/PlaylistImageField\"\n        items:\n          description: A list of playlist items.\n          items:\n            $ref: \"#/components/schemas/PlaylistItem\"\n          type: array\n        last_timestamp_ms:\n          $ref: \"#/components/schemas/PlaylistLastTimestampMsField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/PlaylistListennotesUrlField\"\n        name:\n          $ref: \"#/components/schemas/PlaylistNameField\"\n        thumbnail:\n          $ref: \"#/components/schemas/PlaylistThumbnailField\"\n        total:\n          description: Total number of items in this playlist.\n          example: 325\n          type: integer\n        type:\n          description: |\n            The type of this playlist, which should be either **episode_list** or **podcast_list**.\n          enum:\n            - episode_list\n            - podcast_list\n          example: episode_list\n          type: string\n        visibility:\n          $ref: \"#/components/schemas/PlaylistVisibilityField\"\n      type: object\n    PlaylistThumbnailField:\n      description: Low resolution image url of the playlist.\n      example: https://d3sv2eduhewoas.cloudfront.net/playlist/image/48477deae02649d7ab9d3f1b3966af38.JPEG\n      type: string\n    PlaylistVisibilityField:\n      description: Visibility of this playlist.\n      enum:\n        - public\n        - unlisted\n        - private\n      example: public\n      type: string\n    PlaylistsResponse:\n      properties:\n        has_next:\n          example: true\n          type: boolean\n        has_previous:\n          example: true\n          type: boolean\n        next_page_number:\n          example: 3\n          type: integer\n        page_number:\n          example: 2\n          type: integer\n        playlists:\n          items:\n            $ref: \"#/components/schemas/PlaylistsResponse_playlists\"\n          type: array\n        previous_page_number:\n          example: 1\n          type: integer\n        total:\n          example: 325\n          type: integer\n      type: object\n    PlaylistsResponse_playlists:\n      description: A playlist\n      properties:\n        description:\n          $ref: \"#/components/schemas/PlaylistDescriptionField\"\n        episode_count:\n          description: The number of episodes (including custom audio) in this playlist.\n          example: 23\n          type: integer\n        id:\n          $ref: \"#/components/schemas/PlaylistIdField\"\n        image:\n          $ref: \"#/components/schemas/PlaylistImageField\"\n        last_timestamp_ms:\n          $ref: \"#/components/schemas/PlaylistLastTimestampMsField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/PlaylistListennotesUrlField\"\n        name:\n          $ref: \"#/components/schemas/PlaylistNameField\"\n        podcast_count:\n          description: The number of podcasts in this playlist.\n          example: 10\n          type: integer\n        thumbnail:\n          $ref: \"#/components/schemas/PlaylistThumbnailField\"\n        visibility:\n          $ref: \"#/components/schemas/PlaylistVisibilityField\"\n      type: object\n    PodcastDescriptionField:\n      description: Html of this episode's full description\n      example: \u003cp\u003eThe Star Wars 7x7 Podcast is Rebel-rousing fun for everyday Jedi, between 7 and 14 minutes a day, 7 days a week. Join host Allen Voivod for Star Wars news, history, interviews, trivia, and deep dives into the Star Wars story as told in movies, books, comics, games, cartoons, and more. Subscribe now for your daily dose of Star Wars joy. It's destiny unleashed!\u003c/p\u003e\n      type: string\n    PodcastExtraField:\n      properties:\n        facebook_handle:\n          description: Facebook username affiliated with this podcast\n          example: sw7x7\n          type: string\n        google_url:\n          description: Google Podcasts url for this podcast\n          example: https://play.google.com/music/listen?u=0#/ps/I7gdcrqcmvhfnhh2cyqkcg32tkq\n          type: string\n        instagram_handle:\n          description: Instagram username affiliated with this podcast\n          example: sw7x7\n          type: string\n        linkedin_url:\n          description: LinkedIn url affiliated with this podcast\n          type: string\n        patreon_handle:\n          description: Patreon username affiliated with this podcast\n          example: sw7x7\n          type: string\n        spotify_url:\n          description: Spotify url for this podcast\n          example: https://open.spotify.com/show/2rQJUP9Y3HxemiW3JHt9WV\n          type: string\n        twitter_handle:\n          description: Twitter username affiliated with this podcast\n          example: SW7x7podcast\n          type: string\n        url1:\n          description: Url affiliated with this podcast\n          type: string\n        url2:\n          description: Url affiliated with this podcast\n          type: string\n        url3:\n          description: Url affiliated with this podcast\n          type: string\n        wechat_handle:\n          description: WeChat username affiliated with this podcast\n          type: string\n        youtube_url:\n          description: YouTube url affiliated with this podcast\n          example: https://www.youtube.com/sw7x7\n          type: string\n      type: object\n    PodcastFull:\n      properties:\n        country:\n          $ref: \"#/components/schemas/CountryField\"\n        description:\n          $ref: \"#/components/schemas/PodcastDescriptionField\"\n        earliest_pub_date_ms:\n          $ref: \"#/components/schemas/EarliestPubDateMsField\"\n        email:\n          $ref: \"#/components/schemas/EmailField\"\n        episodes:\n          items:\n            $ref: \"#/components/schemas/EpisodeMinimum\"\n          type: array\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        extra:\n          $ref: \"#/components/schemas/PodcastExtraField\"\n        genre_ids:\n          $ref: \"#/components/schemas/GenreIdsField\"\n        id:\n          $ref: \"#/components/schemas/PodcastIdField\"\n        image:\n          $ref: \"#/components/schemas/ImageField\"\n        is_claimed:\n          $ref: \"#/components/schemas/IsClaimedField\"\n        itunes_id:\n          $ref: \"#/components/schemas/iTunesIdField\"\n        language:\n          $ref: \"#/components/schemas/LanguageField\"\n        latest_pub_date_ms:\n          $ref: \"#/components/schemas/LatestPubDateMsField\"\n        listen_score:\n          $ref: \"#/components/schemas/ListenScoreField\"\n        listen_score_global_rank:\n          $ref: \"#/components/schemas/ListenScoreGlobalRankField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/PodcastLNUrlField\"\n        looking_for:\n          $ref: \"#/components/schemas/PodcastLookingForField\"\n        next_episode_pub_date:\n          $ref: \"#/components/schemas/NextEpisodePubDateField\"\n        publisher:\n          $ref: \"#/components/schemas/PublisherField\"\n        rss:\n          $ref: \"#/components/schemas/RssField\"\n        thumbnail:\n          $ref: \"#/components/schemas/ThumbnailField\"\n        title:\n          $ref: \"#/components/schemas/PodcastNameField\"\n        total_episodes:\n          $ref: \"#/components/schemas/TotalEpisodesField\"\n        type:\n          $ref: \"#/components/schemas/PodcastTypeField\"\n        website:\n          $ref: \"#/components/schemas/WebsiteField\"\n      type: object\n    PodcastIdField:\n      description: Podcast id.\n      example: 4d3fe717742d4963a85562e9f84d8c79\n      type: string\n    PodcastLNUrlField:\n      description: The url of this podcast on [ListenNotes.com](https://www.ListenNotes.com).\n      example: https://www.listennotes.com/c/4d3fe717742d4963a85562e9f84d8c79/\n      type: string\n    PodcastLookingForField:\n      properties:\n        cohosts:\n          description: Whether this podcast is looking for cohosts.\n          example: true\n          type: boolean\n        cross_promotion:\n          description: Whether this podcast is looking for cross promotion opportunities with other podcasts.\n          example: true\n          type: boolean\n        guests:\n          description: Whether this podcast is looking for guests.\n          example: true\n          type: boolean\n        sponsors:\n          description: Whether this podcast is looking for sponsors.\n          example: true\n          type: boolean\n      type: object\n    PodcastMinimum:\n      properties:\n        id:\n          $ref: \"#/components/schemas/PodcastIdField\"\n        image:\n          $ref: \"#/components/schemas/ImageField\"\n        listen_score:\n          $ref: \"#/components/schemas/ListenScoreField\"\n        listen_score_global_rank:\n          $ref: \"#/components/schemas/ListenScoreGlobalRankField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/PodcastLNUrlField\"\n        publisher:\n          $ref: \"#/components/schemas/PublisherField\"\n        thumbnail:\n          $ref: \"#/components/schemas/ThumbnailField\"\n        title:\n          $ref: \"#/components/schemas/PodcastNameField\"\n      type: object\n    PodcastNameField:\n      description: Podcast name.\n      example: Star Wars 7x7 | Star Wars News, Interviews, and More!\n      type: string\n    PodcastSearchResult:\n      description: When **type** is *podcast*.\n      properties:\n        description_highlighted:\n          description: Highlighted segment of podcast description\n          example: |\n            ...Join host Allen Voivod for \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e news, history, interviews, trivia, and deep dives into the \u003cspan class=\"ln-search-highlight\"\u003eStar\u003c/span\u003e \u003cspan class=\"ln-search-highlight\"\u003eWars\u003c/span\u003e story as told in movies, books, comics, games, cartoons, and more.\n          type: string\n        description_original:\n          description: Plain text of podcast description\n          example: |\n            The Star Wars 7x7 Podcast is Rebel-rousing fun for everyday Jedi, between 7 and 14 minutes a day, 7 days a week. Join host Allen Voivod for Star Wars news, history, interviews, trivia, and deep dives into the Star Wars story as told in movies, books, comics, games, cartoons, and more. Subscribe now for your daily dose of Star Wars joy. It's destiny unleashed! #SW7x7\n          type: string\n        earliest_pub_date_ms:\n          $ref: \"#/components/schemas/EarliestPubDateMsField\"\n        email:\n          $ref: \"#/components/schemas/EmailField\"\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        genre_ids:\n          $ref: \"#/components/schemas/GenreIdsField\"\n        id:\n          $ref: \"#/components/schemas/PodcastIdField\"\n        image:\n          $ref: \"#/components/schemas/ImageField\"\n        itunes_id:\n          $ref: \"#/components/schemas/iTunesIdField\"\n        latest_pub_date_ms:\n          $ref: \"#/components/schemas/LatestPubDateMsField\"\n        listen_score:\n          $ref: \"#/components/schemas/ListenScoreField\"\n        listen_score_global_rank:\n          $ref: \"#/components/schemas/ListenScoreGlobalRankField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/PodcastLNUrlField\"\n        publisher_highlighted:\n          $ref: \"#/components/schemas/PublisherHighlightedField\"\n        publisher_original:\n          $ref: \"#/components/schemas/PublisherOriginalField\"\n        rss:\n          $ref: \"#/components/schemas/RssField\"\n        thumbnail:\n          $ref: \"#/components/schemas/ThumbnailField\"\n        title_highlighted:\n          $ref: \"#/components/schemas/PodcastTitleHighlightedField\"\n        title_original:\n          $ref: \"#/components/schemas/PodcastTitleOriginalField\"\n        total_episodes:\n          $ref: \"#/components/schemas/TotalEpisodesField\"\n        website:\n          $ref: \"#/components/schemas/WebsiteField\"\n      type: object\n    PodcastSimple:\n      properties:\n        country:\n          $ref: \"#/components/schemas/CountryField\"\n        description:\n          $ref: \"#/components/schemas/PodcastDescriptionField\"\n        earliest_pub_date_ms:\n          $ref: \"#/components/schemas/EarliestPubDateMsField\"\n        email:\n          $ref: \"#/components/schemas/EmailField\"\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        extra:\n          $ref: \"#/components/schemas/PodcastExtraField\"\n        genre_ids:\n          $ref: \"#/components/schemas/GenreIdsField\"\n        id:\n          $ref: \"#/components/schemas/PodcastIdField\"\n        image:\n          $ref: \"#/components/schemas/ImageField\"\n        is_claimed:\n          $ref: \"#/components/schemas/IsClaimedField\"\n        itunes_id:\n          $ref: \"#/components/schemas/iTunesIdField\"\n        language:\n          $ref: \"#/components/schemas/LanguageField\"\n        latest_pub_date_ms:\n          $ref: \"#/components/schemas/LatestPubDateMsField\"\n        listen_score:\n          $ref: \"#/components/schemas/ListenScoreField\"\n        listen_score_global_rank:\n          $ref: \"#/components/schemas/ListenScoreGlobalRankField\"\n        listennotes_url:\n          $ref: \"#/components/schemas/PodcastLNUrlField\"\n        looking_for:\n          $ref: \"#/components/schemas/PodcastLookingForField\"\n        publisher:\n          $ref: \"#/components/schemas/PublisherField\"\n        rss:\n          $ref: \"#/components/schemas/RssField\"\n        thumbnail:\n          $ref: \"#/components/schemas/ThumbnailField\"\n        title:\n          $ref: \"#/components/schemas/PodcastNameField\"\n        total_episodes:\n          $ref: \"#/components/schemas/TotalEpisodesField\"\n        type:\n          $ref: \"#/components/schemas/PodcastTypeField\"\n        website:\n          $ref: \"#/components/schemas/WebsiteField\"\n      type: object\n    PodcastTitleHighlightedField:\n      description: Highlighted segment of podcast name.\n      example: \u003cspan class=\\\"ln-search-highlight\\\"\u003eStar\u003c/span\u003e \u003cspan class=\\\"ln-search-highlight\\\"\u003eWars\u003c/span\u003e 7x7 | \u003cspan class=\\\"ln-search-highlight\\\"\u003eStar\u003c/span\u003e \u003cspan class=\\\"ln-search-highlight\\\"\u003eWars\u003c/span\u003e News, Interviews, and More!\n      type: string\n    PodcastTitleOriginalField:\n      description: Plain text of podcast name.\n      example: Star Wars 7x7 | Star Wars News, Interviews, and More!\n      type: string\n    PodcastTypeField:\n      description: The type of this podcast - episodic or serial.\n      enum:\n        - episodic\n        - serial\n      example: episodic\n      type: string\n    PodcastTypeaheadResult:\n      properties:\n        explicit_content:\n          $ref: \"#/components/schemas/ExplicitField\"\n        id:\n          $ref: \"#/components/schemas/PodcastIdField\"\n        image:\n          $ref: \"#/components/schemas/ImageField\"\n        publisher_highlighted:\n          $ref: \"#/components/schemas/PublisherHighlightedField\"\n        publisher_original:\n          $ref: \"#/components/schemas/PublisherOriginalField\"\n        thumbnail:\n          $ref: \"#/components/schemas/ThumbnailField\"\n        title_highlighted:\n          $ref: \"#/components/schemas/PodcastTitleHighlightedField\"\n        title_original:\n          $ref: \"#/components/schemas/PodcastTitleOriginalField\"\n      type: object\n    PublisherField:\n      description: Podcast publisher name.\n      example: Planet Broadcasting\n      type: string\n    PublisherHighlightedField:\n      description: Highlighted segment of this podcast's publisher name.\n      example: \u003cspan class=\\\"ln-search-highlight\\\"\u003eStar\u003c/span\u003e \u003cspan class=\\\"ln-search-highlight\\\"\u003eWars\u003c/span\u003e Daily, by Allen Voivod\n      type: string\n    PublisherOriginalField:\n      description: Plain text of this podcast's publisher name.\n      example: Star Wars Daily, by Allen Voivod\n      type: string\n    RssField:\n      description: RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan.\n      example: https://sw7x7.libsyn.com/rss\n      type: string\n    SearchResponse:\n      properties:\n        count:\n          description: The number of search results in this page.\n          example: 10\n          type: integer\n        next_offset:\n          description: Pass this value to the **offset** parameter to do pagination of search results.\n          example: 10\n          type: integer\n        results:\n          description: A list of search results.\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/EpisodeSearchResult\"\n              - $ref: \"#/components/schemas/PodcastSearchResult\"\n              - $ref: \"#/components/schemas/CuratedListSearchResult\"\n          type: array\n        took:\n          description: The time it took to fetch these search results. In seconds.\n          example: 0.093\n          type: number\n        total:\n          description: The total number of search results.\n          example: 1989\n          type: integer\n      type: object\n    SubmitPodcastForm:\n      properties:\n        email:\n          description: A valid email address. If **email** is specified, then we'll notify this email address once the podcast is accepted.\n          example: hello@example.com\n          type: string\n        rss:\n          description: A valid podcast rss url.\n          example: https://feeds.megaphone.fm/committed\n          type: string\n      required:\n        - rss\n      type: object\n    SubmitPodcastResponse:\n      properties:\n        podcast:\n          $ref: \"#/components/schemas/PodcastMinimum\"\n        status:\n          description: The status of this submission.\n          enum:\n            - found\n            - in review\n          example: found\n          type: string\n      required:\n        - podcast\n        - status\n      type: object\n    ThumbnailField:\n      description: Thumbnail image url for this podcast's artwork (300x300).\n      example: https://cdn-images-1.listennotes.com/podcasts/exponent-ben-thompson-james-allworth-OaJSjb4xQv3.300x300.jpg\n      type: string\n    TotalEpisodesField:\n      description: Total number of episodes in this podcast.\n      example: 324\n      type: integer\n    TranscriptField:\n      description: The transcript of this episode, in plain text (with the newline character \\n). If there's not transcript, it is null. This field is available only in the PRO/ENTERPRISE plan.\n      example: |\n        00:00:07 Welcome to this podcast...\n      type: string\n    TypeaheadResponse:\n      properties:\n        genres:\n          description: Genre suggestions. It'll show up when the **show_genres** parameter is *1*.\n          items:\n            $ref: \"#/components/schemas/Genre\"\n          type: array\n        podcasts:\n          description: Podcast suggestions. It'll show up when the **show_podcasts** parameter is 1.\n          items:\n            $ref: \"#/components/schemas/PodcastTypeaheadResult\"\n          type: array\n        terms:\n          description: Search term suggestions.\n          example:\n            - startup sales\n            - startup\n            - startups\n            - star wars\n          items:\n            type: string\n          type: array\n      required:\n        - terms\n      type: object\n    WebsiteField:\n      description: Website url of this podcast.\n      example: http://sw7x7.com/\n      type: string\n    iTunesIdField:\n      description: iTunes id for this podcast.\n      example: 896354638\n      type: integer\n"
		}
	},
	"Error": "make ir: path \"/curated_podcasts/{id}\": get: responses: parse response status code: strconv.Atoi: parsing \"5XX\": invalid syntax"
}