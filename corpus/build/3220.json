{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "splunk_sdk/search/v2beta1/openapi.yaml",
			"content": "components:\n  parameters:\n    AuthorizationHeader:\n      description: |\n        Access token provided by the user (obtained from a known identity provider).\n      in: header\n      name: Authorization\n      required: true\n      schema:\n        pattern: ^Bearer .+\n        type: string\n    Count:\n      description: |\n        The maximum number of jobs that you want to return the status entries for.\n      in: query\n      name: count\n      schema:\n        default: 1000\n        type: integer\n    Earliest:\n      description: |\n        The earliest time filter, in absolute time. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2019-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored.\n      in: query\n      name: earliest\n      schema:\n        type: string\n    Field:\n      description: |\n        A field to return for the result set. You can specify multiple fields of comma-separated values if multiple fields are required.\n      in: query\n      name: field\n      schema:\n        type: string\n    Latest:\n      description: |\n        The latest time filter in absolute time. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2019-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored. Latest time must be after Earliest time.\n      in: query\n      name: latest\n      schema:\n        type: string\n    SidFilter:\n      description: |\n        Filter the list of jobs by sid. Valid format is  `sid IN ({comma separated list of SIDs in quotes})`. A maximum of 30 SIDs can be specified in one query.\n      in: query\n      name: filter\n      schema:\n        type: string\n    StatusFilter:\n      description: |\n        Filter the list of jobs by status. Valid status values are 'running', 'done', 'canceled', or 'failed'.\n      in: query\n      name: status\n      schema:\n        $ref: '#/components/schemas/SearchStatus'\n    count:\n      description: |\n        The maximum number of entries to return. Set to 0 to return all available entries.\n      in: query\n      name: count\n      schema:\n        default: 30\n        type: integer\n    filename:\n      description: |\n        The export results filename. Default: exportResults\n      in: query\n      name: filename\n      schema:\n        type: string\n    offset:\n      description: Index of first item to return.\n      in: query\n      name: offset\n      schema:\n        default: 0\n        type: integer\n    outputMode:\n      description: |\n        Specifies the format for the returned output.\n      in: query\n      name: outputMode\n      schema:\n        enum:\n        - csv\n        - json\n        type: string\n    sid:\n      description: The search ID.\n      in: path\n      name: sid\n      required: true\n      schema:\n        type: string\n    tenant:\n      description: The system tenant ID.\n      in: path\n      name: tenant\n      required: true\n      schema:\n        type: string\n  schemas:\n    DeleteSearchJob:\n      description: A fully-constructed delete search job, including read-only fields.\n      properties:\n        allowSideEffects:\n          default: true\n          description: |\n            Specifies that the delete search job will contain side effects, with possible security risks.\n          readOnly: true\n          type: boolean\n        collectEventSummary:\n          default: false\n          description: |\n            This field does not apply to delete search jobs and is defaulted to false.\n          readOnly: true\n          type: boolean\n        collectFieldSummary:\n          default: false\n          description: |\n            This field does not apply to delete search jobs and is defaulted to false.\n          readOnly: true\n          type: boolean\n        collectTimeBuckets:\n          default: false\n          description: |\n            This field does not apply to delete search jobs and is defaulted to false.\n          readOnly: true\n          type: boolean\n        completionTime:\n          description: |\n            The time, in GMT, that the search job is finished. Empty if the search job has not completed.\n          readOnly: true\n          type: string\n        dispatchTime:\n          description: |\n            The time, in GMT, that the search job is dispatched.\n          readOnly: true\n          type: string\n        enablePreview:\n          default: false\n          description: |\n            This field does not apply to delete search jobs and is defaulted to false.\n          readOnly: true\n          type: boolean\n        extractAllFields:\n          default: false\n          description: |\n            Specifies whether the Search service should extract all of the available fields in the data, including fields not mentioned in the SPL for the search job. Set to 'false' for better search performance. The 'extractAllFields' parameter is deprecated as of version v3alpha1. Although this parameter continues to function, it might be removed in a future version. Use the 'extractFields' parameter instead.\n          type: boolean\n        extractFields:\n          default: \"\"\n          description: |\n            Specifies how the Search service should extract fields. Valid values include 'all', 'none', or 'indexed'. 'all' will extract all fields, 'indexed' will extract only indexed fields, and 'none' will extract only the default fields. This parameter overwrites the value of the 'extractAllFields' parameter. Set to 'none' for better search performance.\n          type: string\n        index:\n          description: The index to delete events from.\n          type: string\n        maxTime:\n          default: 3600\n          description: |\n            The amount of time, in seconds, to run the delete search job before finalizing the search. The maximum value is 3600 seconds (1 hour).\n          maximum: 3600\n          minimum: 1\n          type: integer\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        module:\n          description: The module to run the delete search job in. The default module\n            is used if module field is empty.\n          type: string\n        name:\n          description: The name of the created search job.\n          maxLength: 100\n          readOnly: true\n          type: string\n        percentComplete:\n          default: 0\n          description: An estimate of the percent of time remaining before the delete\n            search job completes.\n          readOnly: true\n          type: integer\n        predicate:\n          description: The predicate expression that identifies the events to delete\n            from the index. This expression must return true or false. To delete all\n            events from the index, specify \"true\" instead of an expression.\n          type: string\n        previewAvailable:\n          default: false\n          description: This field does not apply to delete search jobs and is defaulted\n            to false.\n          readOnly: true\n          type: string\n        query:\n          description: The SPL search string that is generated based on index, module\n            and predicate that are specified.\n          readOnly: true\n          type: string\n        queryParameters:\n          allOf:\n          - $ref: '#/components/schemas/QueryParameters'\n          description: Represents parameters on the search job such as 'earliest'\n            and 'latest'.\n        requiredFreshness:\n          default: 0\n          description: |\n            This field does not apply to delete search jobs and is set to 0.\n          readOnly: true\n          type: integer\n        resolvedEarliest:\n          description: |\n            The earliest time speciifed as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resolvedLatest:\n          description: |\n            The latest time specified as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resultsAvailable:\n          default: 0\n          description: The number of results produced so far by the delete search\n            job that are going to be deleted.\n          readOnly: true\n          type: integer\n        resultsPreviewAvailable:\n          default: 0\n          description: This field does not apply to delete search jobs and is defaulted\n            to 0.\n          readOnly: true\n          type: integer\n        sid:\n          description: The ID assigned to the delete search job.\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/SearchStatus'\n      required:\n      - index\n      - module\n      - predicate\n      type: object\n    Error:\n      properties:\n        code:\n          type: string\n        details:\n          items:\n            type: object\n          type: array\n        message:\n          type: string\n      type: object\n    FieldsSummary:\n      description: Fields statistics summary model of the events to-date, for search\n        ID (sid).\n      properties:\n        duration:\n          description: The amount of time, in seconds, that a time bucket spans from\n            the earliest to the latest time.\n          format: double\n          type: number\n        earliestTime:\n          description: If specified, the earliest timestamp, in UTC format, of the\n            events to process.\n          type: string\n        eventCount:\n          description: The total number of events for all fields returned in the time\n            range (earliestTime and latestTime) specified.\n          type: integer\n        fields:\n          additionalProperties:\n            $ref: '#/components/schemas/SingleFieldSummary'\n          description: A map of the fields in the time range specified.\n          type: object\n        latestTime:\n          description: If specified, the latest timestamp, in UTC format, of the events\n            to process.\n          type: string\n      type: object\n    ListPreviewResultsResponse:\n      description: The structure of the response body for the preview search results\n        that is returned for the job with the specified search ID (SID). When search\n        is running, it might return incomplete or truncated search results. The isPreviewStable\n        property indicates whether the returned preview results stucture is stable\n        or not. Truncated preview results occur because the number of requested results\n        exceeds the page limit. Follow the 'nextLink' URL to retrieve the next page\n        of results.\n      properties:\n        fields:\n          items:\n            properties:\n              dataSource:\n                type: string\n              groupbyRank:\n                type: string\n              name:\n                type: string\n              splitField:\n                type: string\n              splitValue:\n                type: string\n              splitbySpecial:\n                type: string\n              typeSpecial:\n                type: string\n            required:\n            - name\n            type: object\n          type: array\n        isPreviewStable:\n          type: boolean\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        nextLink:\n          type: string\n        results:\n          items:\n            type: object\n          type: array\n        wait:\n          type: string\n      required:\n      - results\n      - isPreviewStable\n      type: object\n    ListSearchResultsResponse:\n      description: |\n        The structure of the  search results or events metadata that is returned for the job with the specified search ID (SID). When search is running, it might return incomplete or truncated search results. Incomplete search results occur when a search has not completed. Wait until search completes for full result set. Truncated search results occur because the number of requested results exceeds the page limit. Use the 'nextLink' URL to retrieve the next page of results.\n      properties:\n        fields:\n          items:\n            properties:\n              dataSource:\n                type: string\n              groupbyRank:\n                type: string\n              name:\n                type: string\n              splitField:\n                type: string\n              splitValue:\n                type: string\n              splitbySpecial:\n                type: string\n              typeSpecial:\n                type: string\n            required:\n            - name\n            type: object\n          type: array\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        nextLink:\n          type: string\n        results:\n          items:\n            type: object\n          type: array\n        wait:\n          type: string\n      required:\n      - results\n      type: object\n    Message:\n      description: The message field in search results or search jobs. The types of\n        messages are INFO, DEBUG, FATAL, and ERROR.\n      properties:\n        text:\n          type: string\n        type:\n          enum:\n          - INFO\n          - DEBUG\n          - FATAL\n          - ERROR\n          type: string\n    QueryParameters:\n      description: Represents parameters on the search job such as 'earliest' and\n        'latest'.\n      properties:\n        earliest:\n          default: -24h@h\n          description: |\n            The earliest time, in absolute or relative format, to retrieve events. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2019-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored.\n          type: string\n        latest:\n          default: now\n          description: |\n            The latest time, in absolute or relative format, to retrieve events. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2019-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored.\n          type: string\n        relativeTimeAnchor:\n          default: The system time when the search job is created.\n          description: |\n            Relative values for the 'earliest' and 'latest' parameters snap to the unit that you specify. For example, if 'earliest' is set to -d@d, the unit is day. If the 'relativeTimeAnchor' is is set to '2020-10-05T13:15:30Z' then 'resolvedEarliest' is snapped to '2020-10-05T00:00:00Z', which is the day. Hours, minutes, and seconds are dropped. If no 'relativeTimeAnchor' is specified, the default value is set to the time the search job was created.\n          format: date-time\n          type: string\n        timezone:\n          description: |\n            The timezone that relative time specifiers are based off of. Timezone only applies to relative time literals for 'earliest' and 'latest'. If UNIX time or UTC format is used for 'earliest' and 'latest', this field is ignored. For the list of supported timezone formats, see https://docs.splunk.com/Documentation/Splunk/latest/Data/Applytimezoneoffsetstotimestamps#zoneinfo_.28TZ.29_database type: string default: \"GMT\"\n      type: object\n    SearchJob:\n      description: A fully-constructed search job, including read-only fields.\n      properties:\n        allowSideEffects:\n          default: false\n          description: |\n            Specifies whether a search that contains commands with side effects (with possible security risks) is allowed to run.\n          type: boolean\n        collectEventSummary:\n          default: false\n          description: |\n            Specified whether a search is allowed to collect events summary during the run time.\n          type: boolean\n        collectFieldSummary:\n          default: false\n          description: |\n            Specified whether a search is allowed to collect Fields summary during the run time.\n          type: boolean\n        collectTimeBuckets:\n          default: false\n          description: |\n            Specified whether a search is allowed to collect Timeline Buckets summary during the run time.\n          type: boolean\n        completionTime:\n          description: |\n            The time, in GMT, that the search job is finished. Empty if the search job has not completed.\n          readOnly: true\n          type: string\n        dispatchTime:\n          description: |\n            The time, in GMT, that the search job is dispatched.\n          readOnly: true\n          type: string\n        enablePreview:\n          default: false\n          description: |\n            Specified whether a search is allowed to collect preview results during the run time.\n          type: boolean\n        extractAllFields:\n          default: false\n          description: |\n            Specifies whether the Search service should extract all of the available fields in the data, including fields not mentioned in the SPL for the search job. Set to 'false' for better search performance. The 'extractAllFields' parameter is deprecated as of version v3alpha1. Although this parameter continues to function, it might be removed in a future version. Use the 'extractFields' parameter instead.\n          type: boolean\n        extractFields:\n          default: \"\"\n          description: |\n            Specifies how the Search service should extract fields. Valid values include 'all', 'none', or 'indexed'. 'all' will extract all fields, 'indexed' will extract only indexed fields, and 'none' will extract only the default fields. This parameter overwrites the value of the 'extractAllFields' parameter. Set to 'none' for better search performance.\n          type: string\n        maxTime:\n          default: 3600\n          description: |\n            The number of seconds to run the search before finalizing the search. The maximum value is 3600 seconds (1 hour).\n          maximum: 3600\n          minimum: 1\n          type: integer\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        module:\n          default: \"\"\n          description: The module to run the search in. The default module is used\n            if a module is not specified.\n          type: string\n        name:\n          description: The name of the created search job.\n          maxLength: 100\n          readOnly: true\n          type: string\n        percentComplete:\n          default: 0\n          description: An estimate of the percent of time remaining before the job\n            completes.\n          readOnly: true\n          type: integer\n        previewAvailable:\n          default: false\n          description: Specifies if preview results for the search job are available.\n            The valid status values are 'unknown', 'true', and 'false'.\n          readOnly: true\n          type: string\n        query:\n          description: The SPL search string.\n          format: SPL2\n          type: string\n        queryParameters:\n          allOf:\n          - $ref: '#/components/schemas/QueryParameters'\n          description: Represents parameters on the search job such as 'earliest'\n            and 'latest'.\n        requiredFreshness:\n          default: 0\n          description: |\n            Specifies a maximum time interval, in seconds, between identical existing searches. The 'requiredFreshness' parameter is used to determine if an existing search with the same query and the same time boundaries can be reused, instead of running the same search again. Freshness is applied to the resolvedEarliest and resolvedLatest parameters. If an existing search has the same exact criteria as this search and the resolvedEarliest and resolvedLatest values are within the freshness interval, the existing search metadata is returned instead of initiating a new search job. By default, the requiredFreshness parameter is set to 0 which means that the platform does not attempt to use an existing search.\n          maximum: 259200\n          minimum: 0\n          type: integer\n        resolvedEarliest:\n          description: |\n            The earliest time speciifed as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resolvedLatest:\n          description: |\n            The latest time specified as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resultsAvailable:\n          default: 0\n          description: The number of results produced so far for the search job.\n          readOnly: true\n          type: integer\n        resultsPreviewAvailable:\n          default: 0\n          description: The number of the preview search results for the job with the\n            specified search ID (SID)\n          readOnly: true\n          type: integer\n        sid:\n          description: The ID assigned to the search job.\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/SearchStatus'\n      required:\n      - query\n      type: object\n    SearchStatus:\n      description: |\n        The current status of the search job. The valid status values are 'running', 'done', 'canceled', 'finalized' and 'failed'.\n      enum:\n      - running\n      - done\n      - canceled\n      - failed\n      - finalized\n      type: string\n    SingleFieldSummary:\n      description: Summary of each field.\n      properties:\n        count:\n          description: The total number of events that contain the field.\n          type: integer\n        distinctCount:\n          description: The total number of unique values in the field.\n          type: integer\n        isExact:\n          description: |\n            Specifies if the distinctCount is accurate. The isExact property is FALSE when the distinctCount exceeds the maximum count and an exact count is not available.\n          type: boolean\n        max:\n          description: The maximum numeric values in the field.\n          type: string\n        mean:\n          description: The mean (average) for the numeric values in the field.\n          format: double\n          type: number\n        min:\n          description: The minimum numeric values in the field.\n          type: string\n        modes:\n          description: An array of the values in the field.\n          items:\n            allOf:\n            - $ref: '#/components/schemas/SingleValueMode'\n          type: array\n        numericCount:\n          description: The count of the numeric values in the field.\n          type: integer\n        relevant:\n          description: Specifies if the field was added or changed by the search.\n          type: boolean\n        stddev:\n          description: The standard deviation for the numeric values in the field.\n          format: double\n          type: number\n      type: object\n    SingleTimeBucket:\n      description: Events summary in single time bucket.\n      properties:\n        availableCount:\n          description: Count of available events. Not all events in a bucket are retrievable.\n            Typically this count is capped at 10000.\n          type: integer\n        duration:\n          format: double\n          type: number\n        earliestTime:\n          description: The timestamp of the earliest event in the current bucket,\n            in UNIX format. This is the same time as 'earliestTimeStrfTime' in UNIX\n            format.\n          format: double\n          type: number\n        earliestTimeStrfTime:\n          description: The timestamp of the earliest event in the current bucket,\n            in UTC format with seconds. For example 2019-01-25T13:15:30Z, which follows\n            the ISO-8601 (%FT%T.%Q) format.\n          type: string\n        isFinalized:\n          description: Specifies if all of the events in the current bucket have been\n            finalized.\n          type: boolean\n        totalCount:\n          description: The total count of the events in the current bucket.\n          type: integer\n      readOnly: true\n      type: object\n    SingleValueMode:\n      description: Single value summary of the field.\n      properties:\n        count:\n          description: The number of occurences that the value appears in a field.\n          type: integer\n        isExact:\n          description: |\n            Specifies if the count is accurate. The isExact property is FALSE when the count exceeds the maximum count and an exact count is not available.\n          type: boolean\n        value:\n          description: The value in the field.\n          type: string\n      type: object\n    TimeBucketsSummary:\n      description: |\n        A timeline metadata model of the event distribution. The model shows the untransformed events that are read to date for a specific for search ID (sid).\n      properties:\n        IsTimeCursored:\n          description: Specifies if the events are returned in time order.\n          type: boolean\n        buckets:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/SingleTimeBucket'\n          type: array\n        cursorTime:\n          description: Identifies where the cursor is in processing the events. The\n            cursorTime is a timestamp specified in UNIX time.\n          type: number\n        eventCount:\n          description: The number of events processed at the cursorTime.\n          type: integer\n      type: object\n    UpdateJob:\n      description: Update a search job with a status.\n      properties:\n        status:\n          description: The status to PATCH to an existing search job. The only status\n            values you can PATCH are 'canceled' and 'finalized'. You can PATCH the\n            'canceled' status only to a search job that is running.\n          enum:\n          - canceled\n          - finalized\n          type: string\n      required:\n      - status\n      type: object\n  securitySchemes:\n    BasicAuth:\n      scheme: basic\n      type: http\ninfo:\n  description: Use the Search service in Splunk Cloud Services to dispatch, review,\n    and manage searches and search jobs. You can finalize or cancel jobs, retrieve\n    search results, and request search-related configurations from the Metadata Catalog\n    service in Splunk Cloud Services.\n  title: Splunk Search service\n  version: v2beta1.1\nopenapi: 3.0.0\npaths:\n  /{tenant}/search/v2beta1/jobs:\n    get:\n      description: Return the matching list of search jobs.\n      operationId: listJobs\n      parameters:\n      - $ref: '#/components/parameters/Count'\n      - $ref: '#/components/parameters/StatusFilter'\n      - $ref: '#/components/parameters/SidFilter'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SearchJob'\n                type: array\n          description: The list of search jobs was returned successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    post:\n      description: Creates a search job.\n      operationId: createJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchJob'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchJob'\n          description: The search job was created successfully.\n        \"400\":\n          description: The request isn’t valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"412\":\n          description: The precondition check failed. The search query contains commands,\n            thru or into, that have side effects. However, the 'allowSideEffects'\n            query parameter is set to false.\n        \"429\":\n          description: Too many requests were sent. The limit for the maximum number\n            of concurrent searches was reached.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/{sid}:\n    get:\n      description: Return the search job with the specified search ID (SID).\n      operationId: getJob\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchJob'\n          description: The search job information for the specified search ID (SID)\n            was returned successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/sid'\n    patch:\n      description: Update the search job with the specified search ID (SID) with an\n        action.\n      operationId: updateJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateJob'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchJob'\n          description: The search job status was modified successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/{sid}/export:\n    get:\n      description: Export the search results for the job with the specified search\n        ID (SID). Export the results as a csv file or json file.\n      operationId: exportResults\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/filename'\n      - $ref: '#/components/parameters/outputMode'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n            text/csv:\n              schema:\n                type: string\n          description: Export the search results in csv or json format\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/{sid}/results:\n    get:\n      description: Return the search results for the job with the specified search\n        ID (SID).\n      operationId: listResults\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/offset'\n      - $ref: '#/components/parameters/Field'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSearchResultsResponse'\n          description: The list of search results was returned successfully. Any results\n            that are ready have been returned. If there are additional results, a\n            'nextLink' URL is provided.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/{sid}/results-preview:\n    get:\n      description: Return the preview search results for the job with the specified\n        search ID (SID). Can be used when a job is running to return interim results.\n      operationId: listPreviewResults\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/offset'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPreviewResultsResponse'\n          description: The results preview was returned successfully. If there are\n            additional results, a 'nextLink' URL is provided.\n        \"204\":\n          description: The results preview was returned successfully, but there is\n            no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/{sid}/timeline-metadata/auto/events-summary:\n    get:\n      description: Return events summary, for search ID (SID) search.\n      operationId: listEventsSummary\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/offset'\n      - $ref: '#/components/parameters/Field'\n      - $ref: '#/components/parameters/Earliest'\n      - $ref: '#/components/parameters/Latest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSearchResultsResponse'\n          description: The events summary was returned successfully.\n        \"204\":\n          description: The events summary was returned successfully, but there is\n            no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/{sid}/timeline-metadata/auto/fields-summary:\n    get:\n      description: Return fields stats summary of the events to-date, for search ID\n        (SID) search.\n      operationId: listFieldsSummary\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/Earliest'\n      - $ref: '#/components/parameters/Latest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FieldsSummary'\n          description: The fields summary was returned successfully.\n        \"204\":\n          description: The fields summary was returned successfully, but there is\n            no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/{sid}/timeline-metadata/auto/time-buckets:\n    get:\n      description: Return event distribution over time of the untransformed events\n        read to-date, for search ID(SID) search.\n      operationId: listTimeBuckets\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeBucketsSummary'\n          description: The timeline buckets were returned successfully.\n        \"204\":\n          description: The timeline buckets were returned successfully, but there\n            is no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2beta1/jobs/delete:\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/tenant'\n    post:\n      description: |\n        Creates a search job that deletes events from an index. The events are deleted from the index in the specified module, based on the search criteria as specified by the predicate.\n      operationId: deleteJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSearchJob'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSearchJob'\n          description: The delete search job was created successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: search/v2beta1/openapi.yaml"
		}
	},
	"Error": "parse: paths: /{tenant}/search/v2beta1/jobs/delete: post: operation \"deleteJob\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/components/schemas/DeleteSearchJob\": parse schema: previewAvailable: parse default: expected type \"string\", got \"bool\""
}