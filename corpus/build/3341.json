{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/derekmerck/diana2"
		},
		"file": {
			"name": "diana-oapi3.yaml",
			"path": "apps/diana-rest/diana-oapi3.yaml",
			"content": "openapi: \"3.0.0\"\n\ninfo:\n  description: \"[DIANA](https://github.com/derekmerck/diana2) API spec.\"\n  version: \"1.0.0\"\n  title: \"DIANA\"\n  contact:\n    email: \"Derek_Merck@brown.edu\"\n\ntags:\n  - name: \"endpoint\"\n    description: \"Direct control of services\"\n  - name: \"daemon\"\n    description: \"Manage processing pipelines\"\n  - name: \"guid\"\n    description: \"Create sham patient ids\"\n\nservers:\n  - url: /v1.0\n    description: DIANA API version 1.0\n\npaths:\n  /endpoint:\n    get:\n      tags:\n        - \"endpoint\"\n      summary:  \"List service keys and status\"\n      operationId: \"diana-rest.endpoints\"\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n\n  /endpoint/{service_key}/dixel:\n    get:\n      tags:\n        - \"endpoint\"\n      summary: \"Retrieve a dixel by id\"\n      operationId: \"diana-rest.get\"\n      parameters:\n        - name: \"service_key\"\n          in: \"path\"\n          description: \"service key\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"id\"\n          in: \"query\"\n          description: \"dixel id\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Dixel/properties/id\"\n        - name: \"level\"\n          in: \"query\"\n          description: \"dixel level\"\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Dixel/properties/level\"\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dixel\"\n        \"400\":\n          description: \"Service endpoint failed to respond\"\n        \"405\":\n          description: \"Invalid service endpoint key\"\n\n    delete:\n      tags:\n        - endpoint\n      summary: \"Delete a dixel\"\n      operationId: \"diana-rest.delete\"\n      parameters:\n        - name: \"service_key\"\n          in: \"path\"\n          description: \"service key\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"id\"\n          in: \"query\"\n          description: \"dixel id\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Dixel/properties/id\"\n        - name: \"level\"\n          in: \"query\"\n          description: \"dixel level\"\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Dixel/properties/level\"\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n        \"400\":\n          description: \"Service endpoint failed to respond\"\n        \"405\":\n          description: \"Invalid service endpoint key\"\n\n    post:\n      tags:\n        - \"endpoint\"\n      summary: \"Find a dixel\"\n      operationId: \"diana-rest.find\"\n      parameters:\n        - name: \"service_key\"\n          in: \"path\"\n          description: \"service key\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"domain\"\n          in: \"query\"\n          description: \"proxy domain\"\n          required: false\n          schema:\n            type: \"string\"\n      requestBody:\n        description: Dictionary of query tags to match\n        content:\n          'application/json':\n            schema:\n              type: \"object\"\n      responses:\n        \"200\":\n          description: \"successful operation\"\n        \"400\":\n          description: \"service failed to respond\"\n        \"405\":\n          description: \"invalid service key\"\n\n\n  /daemons/fiup:\n    post:\n      tags:\n        - \"daemon\"\n      summary: \"Upload an indexed accession number\"\n      operationId: \"diana-rest.fiup\"\n      requestBody:\n        description: File index upload parameters\n        content:\n          'application/json':\n            schema:\n              type: object\n              properties:\n                registry:\n                  description: Redis service key\n                  type: \"string\"\n                  example: my_redis\n                path:\n                  description: Base path for registry\n                  type: \"string\"\n                  example: \"/data/my_dicom\"\n                accession_number:\n                  description: Accession number to pull\n                  type: \"string\"\n                  example: \"123456789\"\n                dest_key:\n                  description: Orthanc destination\n                  type: \"string\"\n                  example: my_orthanc\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n        \"400\":\n          description: \"Service endpoint failed to respond\"\n        \"405\":\n          description: \"Invalid service endpoint key\"\n\n  /daemons/collect:\n    post:\n      tags:\n        - \"daemon\"\n      summary: \"Pull a list of studies from source and send to a destination\"\n      operationId: \"diana-rest.collect\"\n      requestBody:\n        description: Study collection parameters\n        content:\n          'application/json':\n            schema:\n              type: object\n              properties:\n                source:\n                  description: Orthanc source service key\n                  type: \"string\"\n                  example: orthanc-source\n                domain:\n                  description: Proxy domain for rfind\n                  type: \"string\"\n                  example: \"pacs\"\n                dest:\n                  description: Orthanc destination service key\n                  type: \"string\"\n                  example: orthanc-dest\n                studies:\n                  description: Accession numbers to pull\n                  type: \"array\"\n                  items:\n                    type: string\n                  example: [\"123456789\", \"223456789\"]\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n        \"400\":\n          description: \"Service endpoint failed to respond\"\n        \"405\":\n          description: \"Invalid service endpoint key\"\n\n\n  /guid:\n    get:\n      tags:\n        - \"guid\"\n      summary: \"Generate a GUID\"\n      description: \"Generate a reproducible sham ID from input patient PHI\"\n      operationId: \"diana-rest.mint_guid\"\n      parameters:\n        - name: \"name\"\n          in: \"query\"\n          description: \"Name of patient to sham\"\n          required: true\n          schema:\n            type: \"string\"\n          example: \"John Doe\"\n        - name: \"birth_date\"\n          in: \"query\"\n          description: \"Birth date of patient to sham\"\n          required: false\n          schema:\n            type: \"string\"\n            format: \"date\"\n          example: \"01/01/2000\"\n        - name: \"age\"\n          in: \"query\"\n          description: \"Age of patient to sham (if no birthday)\"\n          required: false\n          schema:\n            type: \"string\"\n            format: int32\n        - name: \"reference_date\"\n          in: \"query\"\n          description: \"Reference date for age (guid is not reproducible with age alone)\"\n          required: false\n          schema:\n            type: \"string\"\n            format: \"date\"\n        - name: \"sex\"\n          in: \"query\"\n          description: \"Sex of patient to sham\"\n          schema:\n            type: \"string\"\n            enum:\n              - \"M\"\n              - \"F\"\n              - \"U\"\n            default: \"U\"\n            example: \"M\"\n          required: false\n      responses:\n        \"200\":\n          description: \"Successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  patient_id:\n                    type: \"string\"\n                    description: \"Sham patient ID\"\n                    example: \"ALYTELUDPN6JXZWSB6OELK6OA2G4AIQS\"\n                  patient_name:\n                    type: \"string\"\n                    description: \"Sham patient name\"\n                    example: \"ALMETER^LINCOLN^Y\"\n                  patient_birthdate:\n                    type: \"string\"\n                    format: \"date\"\n                    description: \"Sham patient DoB\"\n                    example: \"19991218\"\n                  time_offset:\n                    type: \"string\"\n                    format: \"date-time\"\n                    description: \"Time offset for shamming study times\"\n                    example: \"-15 days, 23:40:18\"\n        \"400\":\n          description: \"Invalid input values\"\n\n\ncomponents:\n  schemas:\n    Dixel:\n      type: \"object\"\n      properties:\n        id:\n          type: \"string\"\n          description: \"Dixel id (fn, oid, uid, etc.)\"\n        level:\n          type: \"string\"\n          description: \"Dixel level\"\n          enum:\n            - \"studies\"\n            - \"series\"\n            - \"instances\"\n          default: \"studies\"\n        tags:\n          type: \"object\"\n          description: \"Dictionary of DICOM tags\"\n\n\nexternalDocs:\n  description: \"DIANA documentation\"\n  url: \"https://diana.readthedocs.com\"\n"
		}
	},
	"Error": "parse: paths: /endpoint/{service_key}/dixel: get: diana-rest.get: parameters: parse parameter \"id\": schema: parse schema: reference \"#/components/schemas/Dixel/properties/id\": resolve reference \"#/components/schemas/Dixel/properties/id\": schema not found"
}