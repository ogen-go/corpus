{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/braket/2019-09-01/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2019-09-01'\n  x-release: v4\n  title: Braket\n  description: The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: braket\n  x-aws-signingName: braket\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/braket-2019-09-01.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/braket/'\nservers:\n  - url: 'http://braket.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Braket multi-region endpoint\n  - url: 'https://braket.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Braket multi-region endpoint\n  - url: 'http://braket.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Braket endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://braket.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Braket endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/quantum-task/{quantumTaskArn}/cancel':\n    put:\n      operationId: CancelQuantumTask\n      description: Cancels the specified task.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelQuantumTaskResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: quantumTaskArn\n          in: path\n          required: true\n          description: The ARN of the task to cancel.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - clientToken\n              properties:\n                clientToken:\n                  description: The client token associated with the request.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /quantum-task:\n    post:\n      operationId: CreateQuantumTask\n      description: Creates a quantum task.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateQuantumTaskResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '482':\n          description: DeviceOfflineException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceOfflineException'\n        '483':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - action\n                - clientToken\n                - deviceArn\n                - outputS3Bucket\n                - outputS3KeyPrefix\n                - shots\n              properties:\n                action:\n                  description: The action associated with the task.\n                  type: string\n                clientToken:\n                  description: The client token associated with the request.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                deviceArn:\n                  description: The ARN of the device to run the task on.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n                deviceParameters:\n                  description: The parameters for the device to run the task on.\n                  type: string\n                  minLength: 1\n                  maxLength: 48000\n                outputS3Bucket:\n                  description: The S3 bucket to store task result files in.\n                  type: string\n                  minLength: 3\n                  maxLength: 63\n                outputS3KeyPrefix:\n                  description: The key prefix for the location in the S3 bucket to store task results in.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                shots:\n                  description: The number of shots to use for the task.\n                  type: integer\n                  minimum: 0\n                tags:\n                  description: Tags to be added to the quantum task you're creating.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/device/{deviceArn}':\n    get:\n      operationId: GetDevice\n      description: Retrieves the devices available in Amazon Braket.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeviceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: DeviceOfflineException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceOfflineException'\n        '484':\n          description: DeviceRetiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceRetiredException'\n        '485':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: deviceArn\n          in: path\n          required: true\n          description: The ARN of the device to retrieve.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/quantum-task/{quantumTaskArn}':\n    get:\n      operationId: GetQuantumTask\n      description: Retrieves the specified quantum task.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetQuantumTaskResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: quantumTaskArn\n          in: path\n          required: true\n          description: the ARN of the task to retrieve.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Shows the tags associated with this resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: Specify the \u003ccode\u003eresourceArn\u003c/code\u003e for the resource whose tags to display.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Add a tag to the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: Specify the \u003ccode\u003eresourceArn\u003c/code\u003e of the resource to which a tag will be added.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: Specify the tags to add to the resource.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n  /devices:\n    post:\n      operationId: SearchDevices\n      description: Searches for devices using the specified filters.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchDevicesResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - filters\n              properties:\n                filters:\n                  description: The filter values to use to search for a device.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SearchDevicesFilter'\n                  minItems: 0\n                  maxItems: 10\n                maxResults:\n                  description: The maximum number of results to return in the response.\n                  type: integer\n                  minimum: 1\n                  maximum: 100\n                nextToken:\n                  description: A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /quantum-tasks:\n    post:\n      operationId: SearchQuantumTasks\n      description: Searches for tasks that match the specified filter values.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchQuantumTasksResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - filters\n              properties:\n                filters:\n                  description: Array of \u003ccode\u003eSearchQuantumTasksFilter\u003c/code\u003e objects.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SearchQuantumTasksFilter'\n                  minItems: 0\n                  maxItems: 10\n                maxResults:\n                  description: Maximum number of results to return in the response.\n                  type: integer\n                  minimum: 1\n                  maximum: 100\n                nextToken:\n                  description: A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Remove tags from a resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: Specify the \u003ccode\u003eresourceArn\u003c/code\u003e for the resource from which to remove the tags.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: Specify the keys for the tags to remove from the resource.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CancelQuantumTaskResponse:\n      type: object\n      required:\n        - cancellationStatus\n        - quantumTaskArn\n      properties:\n        cancellationStatus:\n          allOf:\n            - $ref: '#/components/schemas/CancellationStatus'\n            - description: The status of the cancellation request.\n        quantumTaskArn:\n          allOf:\n            - $ref: '#/components/schemas/QuantumTaskArn'\n            - description: The ARN of the task.\n    ResourceNotFoundException: {}\n    AccessDeniedException: {}\n    ConflictException: {}\n    ThrottlingException: {}\n    InternalServiceException: {}\n    ValidationException: {}\n    CreateQuantumTaskResponse:\n      type: object\n      required:\n        - quantumTaskArn\n      properties:\n        quantumTaskArn:\n          allOf:\n            - $ref: '#/components/schemas/QuantumTaskArn'\n            - description: The ARN of the task created by the request.\n    String:\n      type: string\n    DeviceOfflineException: {}\n    ServiceQuotaExceededException: {}\n    GetDeviceResponse:\n      type: object\n      required:\n        - deviceArn\n        - deviceCapabilities\n        - deviceName\n        - deviceStatus\n        - deviceType\n        - providerName\n      properties:\n        deviceArn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceArn'\n            - description: The ARN of the device.\n        deviceCapabilities:\n          allOf:\n            - $ref: '#/components/schemas/JsonValue'\n            - description: Details about the capabilities of the device.\n        deviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the device.\n        deviceStatus:\n          allOf:\n            - $ref: '#/components/schemas/DeviceStatus'\n            - description: The status of the device.\n        deviceType:\n          allOf:\n            - $ref: '#/components/schemas/DeviceType'\n            - description: The type of the device.\n        providerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the partner company for the device.\n    DeviceRetiredException: {}\n    GetQuantumTaskResponse:\n      type: object\n      required:\n        - createdAt\n        - deviceArn\n        - deviceParameters\n        - outputS3Bucket\n        - outputS3Directory\n        - quantumTaskArn\n        - shots\n        - status\n      properties:\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'\n            - description: The time at which the task was created.\n        deviceArn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceArn'\n            - description: The ARN of the device the task was run on.\n        deviceParameters:\n          allOf:\n            - $ref: '#/components/schemas/JsonValue'\n            - description: The parameters for the device on which the task ran.\n        endedAt:\n          allOf:\n            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'\n            - description: The time at which the task ended.\n        failureReason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason that a task failed.\n        outputS3Bucket:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The S3 bucket where task results are stored.\n        outputS3Directory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The folder in the S3 bucket where task results are stored.\n        quantumTaskArn:\n          allOf:\n            - $ref: '#/components/schemas/QuantumTaskArn'\n            - description: The ARN of the task.\n        shots:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The number of shots used in the task.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/QuantumTaskStatus'\n            - description: The status of the task.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: The tags that belong to this task.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: 'Displays the key, value pairs of tags associated with this resource.'\n    SearchDevicesResponse:\n      type: object\n      required:\n        - devices\n      properties:\n        devices:\n          allOf:\n            - $ref: '#/components/schemas/DeviceSummaryList'\n            - description: An array of \u003ccode\u003eDeviceSummary\u003c/code\u003e objects for devices that match the specified filter values.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A token used for pagination of results, or null if there are no additional results. Use the token value in a subsequent request to continue results where the previous request ended.'\n    SearchDevicesFilter:\n      type: object\n      required:\n        - name\n        - values\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SearchDevicesFilterNameString'\n            - description: The name to use to filter results.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/SearchDevicesFilterValuesList'\n            - description: The values to use to filter results.\n      description: The filter to use for searching devices.\n    SearchQuantumTasksResponse:\n      type: object\n      required:\n        - quantumTasks\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A token used for pagination of results, or null if there are no additional results. Use the token value in a subsequent request to continue results where the previous request ended.'\n        quantumTasks:\n          allOf:\n            - $ref: '#/components/schemas/QuantumTaskSummaryList'\n            - description: An array of \u003ccode\u003eQuantumTaskSummary\u003c/code\u003e objects for tasks that match the specified filters.\n    SearchQuantumTasksFilter:\n      type: object\n      required:\n        - name\n        - operator\n        - values\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String64'\n            - description: The name of the device used for the task.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/SearchQuantumTasksFilterOperator'\n            - description: An operator to use in the filter.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/SearchQuantumTasksFilterValuesList'\n            - description: The values to use for the filter.\n      description: A filter to use to search for tasks.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    String64:\n      type: string\n      minLength: 1\n      maxLength: 64\n    QuantumTaskArn:\n      type: string\n      minLength: 1\n      maxLength: 256\n    CancelQuantumTaskRequest:\n      type: object\n      required:\n        - clientToken\n      title: CancelQuantumTaskRequest\n      properties:\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/String64'\n            - description: The client token associated with the request.\n    CancellationStatus:\n      type: string\n      enum:\n        - CANCELLING\n        - CANCELLED\n    JsonValue:\n      type: string\n    DeviceArn:\n      type: string\n      minLength: 1\n      maxLength: 256\n    CreateQuantumTaskRequestDeviceParametersString:\n      type: string\n      minLength: 1\n      maxLength: 48000\n    CreateQuantumTaskRequestOutputS3BucketString:\n      type: string\n      minLength: 3\n      maxLength: 63\n    CreateQuantumTaskRequestOutputS3KeyPrefixString:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    CreateQuantumTaskRequestShotsLong:\n      type: integer\n      minimum: 0\n    TagsMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    CreateQuantumTaskRequest:\n      type: object\n      required:\n        - action\n        - clientToken\n        - deviceArn\n        - outputS3Bucket\n        - outputS3KeyPrefix\n        - shots\n      title: CreateQuantumTaskRequest\n      properties:\n        action:\n          allOf:\n            - $ref: '#/components/schemas/JsonValue'\n            - description: The action associated with the task.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/String64'\n            - description: The client token associated with the request.\n        deviceArn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceArn'\n            - description: The ARN of the device to run the task on.\n        deviceParameters:\n          allOf:\n            - $ref: '#/components/schemas/CreateQuantumTaskRequestDeviceParametersString'\n            - description: The parameters for the device to run the task on.\n        outputS3Bucket:\n          allOf:\n            - $ref: '#/components/schemas/CreateQuantumTaskRequestOutputS3BucketString'\n            - description: The S3 bucket to store task result files in.\n        outputS3KeyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/CreateQuantumTaskRequestOutputS3KeyPrefixString'\n            - description: The key prefix for the location in the S3 bucket to store task results in.\n        shots:\n          allOf:\n            - $ref: '#/components/schemas/CreateQuantumTaskRequestShotsLong'\n            - description: The number of shots to use for the task.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Tags to be added to the quantum task you're creating.\n    DeviceStatus:\n      type: string\n      enum:\n        - ONLINE\n        - OFFLINE\n        - RETIRED\n    DeviceType:\n      type: string\n      enum:\n        - QPU\n        - SIMULATOR\n    DeviceSummary:\n      type: object\n      required:\n        - deviceArn\n        - deviceName\n        - deviceStatus\n        - deviceType\n        - providerName\n      properties:\n        deviceArn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceArn'\n            - description: The ARN of the device.\n        deviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the device.\n        deviceStatus:\n          allOf:\n            - $ref: '#/components/schemas/DeviceStatus'\n            - description: The status of the device.\n        deviceType:\n          allOf:\n            - $ref: '#/components/schemas/DeviceType'\n            - description: The type of the device.\n        providerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The provider of the device.\n      description: Includes information about the device.\n    DeviceSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceSummary'\n    GetDeviceRequest:\n      type: object\n      title: GetDeviceRequest\n      properties: {}\n    GetQuantumTaskRequest:\n      type: object\n      title: GetQuantumTaskRequest\n      properties: {}\n    SyntheticTimestamp_date_time:\n      type: string\n      format: date-time\n    Long:\n      type: integer\n    QuantumTaskStatus:\n      type: string\n      enum:\n        - CREATED\n        - QUEUED\n        - RUNNING\n        - COMPLETED\n        - FAILED\n        - CANCELLING\n        - CANCELLED\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    QuantumTaskSummary:\n      type: object\n      required:\n        - createdAt\n        - deviceArn\n        - outputS3Bucket\n        - outputS3Directory\n        - quantumTaskArn\n        - shots\n        - status\n      properties:\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'\n            - description: The time at which the task was created.\n        deviceArn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceArn'\n            - description: The ARN of the device the task ran on.\n        endedAt:\n          allOf:\n            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'\n            - description: The time at which the task finished.\n        outputS3Bucket:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The S3 bucket where the task result file is stored..\n        outputS3Directory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The folder in the S3 bucket where the task result file is stored.\n        quantumTaskArn:\n          allOf:\n            - $ref: '#/components/schemas/QuantumTaskArn'\n            - description: The ARN of the task.\n        shots:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The shots used for the task.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/QuantumTaskStatus'\n            - description: The status of the task.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: 'Displays the key, value pairs of tags associated with this quantum task.'\n      description: Includes information about a quantum task.\n    QuantumTaskSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/QuantumTaskSummary'\n    SearchDevicesFilterNameString:\n      type: string\n      minLength: 1\n      maxLength: 64\n    SearchDevicesFilterValuesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String256'\n      minItems: 1\n      maxItems: 10\n    String256:\n      type: string\n      minLength: 1\n      maxLength: 256\n    SearchDevicesRequestFiltersList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SearchDevicesFilter'\n      minItems: 0\n      maxItems: 10\n    SearchDevicesRequestMaxResultsInteger:\n      type: integer\n      minimum: 1\n      maximum: 100\n    SearchDevicesRequest:\n      type: object\n      required:\n        - filters\n      title: SearchDevicesRequest\n      properties:\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/SearchDevicesRequestFiltersList'\n            - description: The filter values to use to search for a device.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/SearchDevicesRequestMaxResultsInteger'\n            - description: The maximum number of results to return in the response.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.\n    SearchQuantumTasksFilterOperator:\n      type: string\n      enum:\n        - LT\n        - LTE\n        - EQUAL\n        - GT\n        - GTE\n        - BETWEEN\n    SearchQuantumTasksFilterValuesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String256'\n      minItems: 1\n      maxItems: 10\n    SearchQuantumTasksRequestFiltersList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SearchQuantumTasksFilter'\n      minItems: 0\n      maxItems: 10\n    SearchQuantumTasksRequestMaxResultsInteger:\n      type: integer\n      minimum: 1\n      maximum: 100\n    SearchQuantumTasksRequest:\n      type: object\n      required:\n        - filters\n      title: SearchQuantumTasksRequest\n      properties:\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/SearchQuantumTasksRequestFiltersList'\n            - description: Array of \u003ccode\u003eSearchQuantumTasksFilter\u003c/code\u003e objects.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/SearchQuantumTasksRequestMaxResultsInteger'\n            - description: Maximum number of results to return in the response.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.\n    TagKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagsMap'\n            - description: Specify the tags to add to the resource.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /quantum-tasks: post: SearchQuantumTasks: responses: 481: unknown status code: 481"
}