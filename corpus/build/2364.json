{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Crypto-ALE/tmou-mapa"
		},
		"file": {
			"name": "Domaci-hra.v1.yaml",
			"path": "Domaci-hra.v1.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Domaci hra\n  version: '1.0'\n  description: TMOU domaci hra\n  contact:\n    name: Petr Valasek\n    url: tmou.cz\n    email: petr.valasek@volny.cz\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  '/game/{teamSecretPhrase}/info':\n    parameters:\n      - schema:\n          type: string\n        name: teamSecretPhrase\n        in: path\n        required: true\n        description: ''\n    get:\n      summary: Your GET endpoint\n      tags:\n        - teams\n        - tmou\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TeamState'\n        '404':\n          description: Not Found\n      operationId: get-teams-teamSecretPhrase\n      description: get list of points of interests\n      requestBody: {}\n  '/game/{teamSecretPhrase}/pois':\n    parameters:\n      - schema:\n          type: string\n        name: teamSecretPhrase\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Nodes'\n        '404':\n          description: Not Found\n      operationId: get-game-teamSecretPhrase-nodes\n      description: get points of interests as nodes and ways\n  '/game/{teamSecretPhrase}/grid':\n    parameters:\n      - schema:\n          type: string\n        name: teamSecretPhrase\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Grid'\n        '404':\n          description: Not Found\n      operationId: get-game-teamSecretPhrase-tiles\n      description: get addresses of map tiles for background rendering\n  '/game/{teamSecretPhrase}/action':\n    parameters:\n      - schema:\n          type: string\n        name: teamSecretPhrase\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-game-teamSecretPhrase-operation\n      responses:\n        '200':\n          description: OK\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n      description: perform an action upon node\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NodeAction'\ncomponents:\n  schemas:\n    Node:\n      title: Node\n      type: object\n      description: Single node\n      x-tags:\n        - node\n        - teams\n      properties:\n        id:\n          type: string\n        x:\n          type: number\n          format: float\n          example: 0.58\n          minimum: 0\n          maximum: 1\n          exclusiveMinimum: false\n          exclusiveMaximum: false\n          description: x pos relative to displayed map\n        'y':\n          type: number\n          format: float\n          example: 0\n          minimum: 0\n          maximum: 1\n          exclusiveMaximum: false\n          description: y pos relative to displayed map\n        type:\n          type: string\n          enum:\n            - way\n            - junction\n            - org\n            - team\n            - puzzle\n          example: way\n        data:\n          type: string\n          description: 'additional node type-specific data, e. g. url for puzzle'\n          example: Mastene Redkvicky\n      required:\n        - id\n        - x\n        - 'y'\n        - type\n    Nodes:\n      title: Nodes\n      description: List of nodes\n      x-tags:\n        - teams\n      type: array\n      items:\n        $ref: '#/components/schemas/Node'\n      x-examples:\n        example-1: {}\n    TeamState:\n      title: Info\n      type: object\n      description: ''\n      properties:\n        ranking:\n          type: integer\n          description: current ranking in the game\n        leader:\n          type: string\n          description: first on this puzzle\n        timeBehind:\n          type: string\n          format: time\n          example: '00:22:00'\n          description: time behind first on this puzzle\n        position:\n          type: string\n          description: Node ID\n      required:\n        - position\n    Tile:\n      title: Tile\n      type: object\n      description: 'map tile with relative coordinates (0..# of cols, 0..# of rows)'\n      properties:\n        url:\n          type: string\n          example: /images/1770/8955.png\n        x:\n          type: integer\n          example: 2\n          minimum: 0\n        'y':\n          type: integer\n          example: 2\n          minimum: 0\n        zoom:\n          type: integer\n          minimum: 1\n          maximum: 19\n      required:\n        - url\n        - x\n        - 'y'\n    Grid:\n      title: Grid\n      type: object\n      properties:\n        columns:\n          type: integer\n          minimum: 1\n        rows:\n          type: integer\n          minimum: 1\n        columnWidth:\n          type: integer\n          minimum: 1\n        rowHeight:\n          type: integer\n          minimum: 1\n        tiles:\n          type: array\n          items:\n            $ref: ''\n    Way:\n      title: Waz\n      type: object\n      description: ordered collection of node IDs connected into a shape. Can be closed.\n      properties:\n        nodes:\n          type: array\n          description: node IDs\n          items:\n            type: string\n        '':\n          type: string\n        closed:\n          type: boolean\n          default: 'false'\n      required:\n        - nodes\n    Ways:\n      title: Ways\n      type: array\n      description: node id\n      items:\n        $ref: '#/components/schemas/Way'\n    Pois:\n      title: Pois\n      type: object\n      properties:\n        nodes:\n          $ref: '#/components/schemas/Nodes'\n        ways:\n          $ref: '#/components/schemas/Ways'\n    NodeAction:\n      title: NodeAction\n      type: object\n      properties:\n        nodeId:\n          type: string\n        action:\n          type: string\n          enum:\n            - go\n            - discover\n            - requestChat\n            - requestVideo\n          example: go\n      required:\n        - nodeId\n        - action\n      x-examples: {}\n"
		}
	},
	"Error": "parse: paths: /game/{teamSecretPhrase}/info: get: operation \"get-teams-teamSecretPhrase\": requestBody: content must have at least on entry"
}