{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/minvws/nl-covid19-notification-app-coordination"
		},
		"file": {
			"name": "apispec.yaml",
			"path": "architecture/api/apispec.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  title: Dutch Exposure Notification API\n  description: |\n    This specification describes the interface between the Dutch exposure\n    notification app and the backend service.\n    \n    TODO: Add signatures to manifest, riskcalculationparameters and appconfig\n  contact:\n    name: Ministerie van Volksgezondheid Welzijn en Sport backend repository\n    url: https://github.com/minvws/nl-covid19-notification-app-backend\n  license:\n    name: European Union Public License v. 1.2\n    url: https://github.com/minvws/nl-covid19-notification-app-backend/blob/master/LICENSE.txt\n  version: 0.1.0\nservers:\n  - url: https://tbd.example.com/v1\ntags:\n  - name: CDN\n    description: |\n      Content retrieved via CDN. Note that the Swagger file doesn't let us specify a separate base url for the CDN content as the other calls. \n      TODO: Maybe split it into two Swagger files?\"\n  - name: Enrollment\n    description: |\n      Methods that deal with key/secret/id exchanges\n  - name: Uploading keys\n    description: |\n      Methods that deal with the upload of TEK keys\n  - name: Lab Confirmation\n    description: |\n      Methods that deal with the confirmation of a positive test by the lab/health authority\npaths:\n  /manifest:\n    get:\n      tags:\n        - CDN\n      summary: Get the manifest containing pointers/info about the other content on\n        the CDN.\n      description: |\n        The manifest file should be periodically retrieved and provides the app with details about content that can be downloaded/updated. \n        \n        The frequency of retrieving the manifest should be defined based on the value manifestFrequency in the AppConfig, with a certain randomness\n        \n        TODO: Define randomness formula for retrieving the manifest request.\n      operationId: getManifest\n      responses:\n        200:\n          description: Manifest retrieved succesfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Manifest'\n  /exposurekeyset/{id}:\n    get:\n      tags:\n        - CDN\n      summary: Get a batch of TEK keys\n      description: |\n        TEK keys are indexed by country (reserved for future use; international operatibility) and identified by a hash.  \n        The manifest provides a list of all currently relevant batch files. Clients should only download batches that  \n        they haven't already retrieved. Batches are immutable (TODO check with Key file spec by Google/Apple:  \n        are they indeed supposed to be immutable?), so a file, once retrieved, should never be retrieved again.\n      parameters:\n        - name: id\n          in: path\n          description: id from manifest ExposureKeySets\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Key batchfile retrieved succesfully\n          content:\n            application/zip:\n              schema:\n                type: object\n  /riskcalculationparameters/{id}:\n    get:\n      tags:\n        - CDN\n      summary: Get the configuration for the app\n      description: |\n        The configuration contains all configuration items relevant to the app.  \n        This resource should be fetched if the app does not have this version in its cache.\n      parameters:\n        - name: id\n          in: path\n          description: The riskCalculationParameters value from the manifest \n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: retrieved succesfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RiskCalculationParameters\"\n  /appconfig/{id}:\n    get:\n      tags:\n        - CDN\n      summary: Get the configuration for the app\n      description: |\n        The configuration contains all configuration items relevant to the app.  \n        This resource should be fetched if the app does not have this version in its cache.\n      parameters:\n        - name: id\n          in: path\n          description: The appConfig value from the manifest\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Config retrieved succesfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppConfig'\n  /resourcebundle/{id}:\n    get:\n      tags:\n        - CDN\n      summary: Get the resource bundle for dynamic content\n      description: |\n        The resource bundle contains content that can be updated from the server side. \n        This resource should be fetched if the app does not have this version in its cache.\n      parameters:\n        - name: id\n          in: path\n          description: The resourceBundle value from the manifest\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Bundle retrieved succesfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBundle'\n  /caregiverPortal/labconfirm:\n    post:\n      tags:\n        - Lab Confirmation\n      summary: Confirm a positive test result based on a LabConfirmationId\n      description: |\n        This method confirms that a specific LabConfirmationId is associated with a positive COVID19 test result.\n        \n        The method is either called by: \n          * the lab/health authority's backend system \n          * the Infection Confirmation Code system in absence of a HA backend\n        \n        Can only be called once per unique valid LabConfirmationId.\n      security:\n        - caregiverportalJwtAuth: []\n      requestBody:\n        content:\n          application/json: \n            schema: \n              $ref: '#/components/schemas/LabConfirmationRequest'\n            example:\n              labConfirmationId: \"2L245B\"\n              dateOfSymptomsOnset: \"2020-07-10T00:00:00.000Z\"\n        required: true\n      responses:\n        200:\n          description: Lab Confirmation Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabConfirmationResponse'\n              examples:\n                Success:\n                  value:\n                    valid: true\n                Invalid labConfirmationId:\n                  description: Lab Confirmation Id not found\n                  value:\n                    valid: false\n        400:\n          description: Lab Confirmation Id format validation failed\n  /register:\n    post:\n      tags:\n      - Enrollment\n      summary: Exchange a secret with the server so we can sign our keys\n      description: |\n        This method is called by a device to exchange a secret, in the fallback flow (in case a secret wasn't yet \n        exchanged in the test facility). \n        The secret is stored in an anonymous bucket on the server where later the TEK keys will be dropped.\n        The device sends a labConfirmationId in the request that will also be stored in the bucket.\n        This labConfirmationId is generated on the device and read by the device owner to the operator who submits\n        the key to the server out-of-band.\n        The method returns a confirmationKey.\n        See https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Solution%20Architecture.md#lab-result-validation-flow.\n        \n        This method implements observer protection. \n        See https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Traffic%20Analysis%20Mitigation%20With%20Decoys.md\n\n      requestBody:\n        content:\n          application/json: \n            schema: \n              $ref: '#/components/schemas/EnrollmentRequest'\n        required: true\n      responses:\n        200:\n          description: Registration processed correctly\n          content: \n            application/json: \n              schema:\n                $ref: '#/components/schemas/EnrollmentResponse'\n  /postkeys:\n    post:\n      tags:\n      - Uploading Keys\n      summary: Upload diagnosis keys (TEKs) to the server\n      description: |\n        This method is used by a device to upload one or more TEK keys to the server. \n        See https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Solution%20Architecture.md#lab-result-validation-flow.\n        \n        This method implements observer protection. \n        See https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Traffic%20Analysis%20Mitigation%20With%20Decoys.md\n\n        Notes: the phone will never know whether a test result was positive, for privacy reasons. This means that a user might upload keys using this method by using the 'I've been tested positive' flow even though there isn't a positive test result. This is OK, since without the positive test result, the keys won't be processed. It also creates a decoy in itself: seeing keys being uploaded does not consitute a sign of infection. \n      parameters:\n        - name: sig\n          in: query\n          description: The KeysRequest payload is signed with the confirmationKey using HMAC_SHA256. The resulting signature is placed in this parameter.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json: \n            schema: \n              $ref: '#/components/schemas/KeysRequest'\n        required: true\n      responses:\n        200:\n          description: Keys processed correctly\n          content:\n            application/json: \n              schema: \n                $ref: '#/components/schemas/KeysResponse'\n  /stopkeys:\n    post:\n      tags:\n      - Uploading Keys\n      summary: Upload decoy keys to the server\n      description: |\n        This method is used by a device to upload one or more decoy keys, to create decoys for real uploads. \n        The keys in the request should be fake random numbers of the same size as regular keys. \n        \n        The frequency of sending decoys should be derived from the AppConfig value decoyProbability.\n        \n        This method implements observer protection. \n        \n        NOTE: The name is a clear reference to postkeys, but these keys are stopped. \n      parameters:\n        - name: sig\n          in: query\n          description: The KeysRequest payload is signed with the confirmationKey using HMAC_SHA256. The resulting signature is placed in this parameter.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json: \n            schema: \n              $ref: '#/components/schemas/KeysRequest'\n        required: true\n      responses:\n        200:\n          description: Decoy keys processed correctly\n          content:\n            application/json: \n              schema: \n                $ref: '#/components/schemas/KeysResponse'\ncomponents:\n  securitySchemes:\n    caregiverportalJwtAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Manifest:\n      type: object\n      properties:\n        exposureKeySets:\n          type: array\n          items:\n            type: string\n            example: \"\"\n        riskCalculationParameters:\n          type: string\n          description: risk calculation parameters to fetch from endpoint /riskcalculationparameters/{id}.\n          example: bbe32fcb\n        appConfig:\n          type: string\n          description: Mobile app config to fetch from endpoint /appconfig/{id}. \n          example: aae34fcb\n        resourceBundle:\n          type: string\n          description: id of the resource bundle to fetch from the resource bundle endpoint\n          example: aae34fb    \n    RiskCalculationParameters:\n      type: object\n      properties:\n        release:\n          type: string\n          format: date-time\n        minimumRiskScore:\n          type: integer\n          format: int32\n        attenuationScores:\n          type: array\n          items:\n            type: integer\n            format: int32\n          nullable: true\n        daysSinceLastExposureScores:\n          type: array\n          items:\n            type: integer\n            format: int32\n          nullable: true\n        durationScores:\n          type: array\n          items:\n            type: integer\n            format: int32\n          nullable: true\n        transmissionRiskScores:\n          type: array\n          items:\n            type: integer\n            format: int32\n          nullable: true\n        durationAtAttenuationThresholds:\n          type: array\n          items:\n            type: integer\n            format: int32\n          nullable: true\n      additionalProperties: false\n    AppConfig:\n      type: object\n      properties:\n        androidMinimumVersion:\n          type: integer\n          description: |\n            The minimum supported version of the Android app. The app has a build version number that is increased by 1  on each app release. Whenever the app downloads the manifest, it must compare its own version number with that of the manifest. If the version number is less than the manifest value, the user will be asked to upgrade the app from the app store.  See https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Solution%20Architecture.md#lifecycle-management.  \n          format: int64\n          example: 123\n        iOSMinimumVersion:\n          type: string\n          description: |\n             the minimum supported version of the iOS app. The app has a build version number (major.minor.patch) that is increased on each app release. Whenever the app downloads the manifest, it must compare its own version number with that of the manifest. If the version number is less than the manifest value, the user will be asked to upgrade the app from the app store.  See https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Solution%20Architecture.md#lifecycle-management.  \n          example: 1.2.0\n        iOSMinimumVersionMessage: \n          type: string\n          description: If set, the app should not tell the user to upgrade, but dispplay this message to the user instead. It will help us migrate from testflight to the app store version.\n          example: \"The test is over, please download a new version from the app store.\"\n        iOSAppStoreURL:\n          type: string\n          description: If set, the upgrade dialog can link to the app store url using this link.\n          example: \"https://appsto.re/....\"\n        manifestFrequency:\n          type: integer\n          description: This defines the frequency of retrieving the manifest, in minutes. \n          example: 360\n        decoyProbability:\n          type: number\n          format: float\n          minimum: 0\n          maximum: 1\n          description: |\n            This defines the probability of sending decoys during a 24-hour period. This is configurable so we can tune the probability to server load if necessary. \n            The default value is 0.00118; see https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Traffic%20Analysis%20Mitigation%20With%20Decoys.md.\n            A value of 0.0 implies that no decoy traffic will be scheduled.\n        requestMinimumSize:\n          type: integer\n          minimum: 100\n          maximum: 100000\n          description: |\n            The minimum number of characters that the total /register, /postkeys and /stopkeys request messages should be, by filling the request´s\n            'padding' field with random charachters.\n        requestMaximumSize:\n          type: integer\n          minimum: 100\n          maximum: 100000\n          description: |\n            The maximum number of characters that the total /register, /postkeys and /stopkeys request messages should be, by filling the request´s\n            'padding' field with random charachters.\n        repeatedUploadDelay:\n          type: integer\n          minimum: 0\n          maximum: 80000\n          description: |\n            The number of seconds delay to schedule a second TEK upload during the `EnrollmentResponse.validity` period.\n            For an explanation, see https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/Traffic%20Analysis%20Mitigation%20With%20Decoys.md.\n        coronoMelderDeactivated:\n          type: string\n          nullable: true\n          description: |\n            only if value == \"deactivated\", the app stops working as described in \n            https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/architecture/App%20Termination%20Plan.md\n    ResourceBundle:\n      type: object\n      required:\n        - resources\n        - guidance\n      properties:\n        resources:\n          $ref: '#/components/schemas/ResourceBundleResources'\n        guidance:\n          $ref: '#/components/schemas/ResourceBundleGuidance'\n    ResourceBundleGuidance:\n      type: object\n      description: |\n        Defines the parameters and the structure of the treatment perspective guidance screen\n      properties:\n            quarantineDays:\n              type: integer\n              example: 10\n            layout:\n              type: array\n              items:\n                $ref: '#/components/schemas/GuidanceLayoutType'\n    ResourcesKeyValue:\n      type: object\n      additionalProperties:\n        type: string\n      example: \n        exposure_notification_title: You've been near someone with coronavirus\n    ResourceBundleResources:\n      description: |\n        Mapping of resource keys to translations.\n        The resource values can contain placeholders which will be replaced by the clients.\n        \u003cul\u003e\n        \u003cli\u003e{ExposureDate} - the date of exposure formatted in the locale of the translation\u003c/li\u003e\n        \u003cli\u003e{ExposureDaysAgo} - the number of days since exposure, formatted int he locale of the translation: \"5 days ago\"\u003c/li\u003e\n        \u003cli\u003e{StayHomeUntilDate} - the formatted date calulated from {ExposureDate} plus the amount of days to stay at home from the quarantineDays property in the guidance section of the resource bundle\n        \u003c/ul\u003e\n        Limited html markup is allowed:\n        \u003cul\u003e\n        \u003cli\u003e \u0026lt;b\u003e for bold text\u003c/li\u003e\n        \u003cli\u003e \u0026lt;i\u003e for italic text\u003c/li\u003e\n        \u003cli\u003e \u0026lt;ul\u003e and \u0026lt;li\u003e elements for lists.\n        \u003c/ul\u003e\n        All markup needs to be correct and have correct ordering and closing tags.\n      type: object\n      properties:\n        en:\n          $ref: '#/components/schemas/ResourcesKeyValue'\n      additionalProperties:\n          $ref: '#/components/schemas/ResourcesKeyValue'\n      example: \n        en: \n          exposure_notification_title: You've been near someone with coronavirus\n          exposure_notification_body: You were near someone on {ExposureDate} ({ExposureDaysAgo}) who was later found to have coronavirus. You were exposed to a higher risk of infection in this situation.\\n\\nIf you are indeed infected, you can infect other people with coronavirus. Even if you don't feel sick right now.\n        nl: \n          exposure_notification_title: Je was in de buurt van iemand met het coronavirus\n          exposure_notification_body: Op {ExposureDate} ({ExposureDaysAgo}) ben jij misschien besmet geraakt. Je was die dag minstens 15 minuten dicht bij iemand met corona.\\n\\nAls je inderdaad besmet bent, kun je het virus aan anderen doorgeven. Ook als je je nu niet ziek voelt.\n    BaseGuidanceLayoutType:\n      properties:\n        type:\n          type: string\n    GuidanceLayoutType:\n      oneOf:\n        - $ref: '#/components/schemas/GuidanceLayoutParagraph'\n      discriminator:\n        propertyName: type\n        mapping:\n          paragraph: '#/components/schemas/GuidanceLayoutParagraph'\n    GuidanceLayoutParagraph:\n      description: Represents a paragraph in the treatment perspective\n      allOf:\n        - $ref: '#/components/schemas/BaseGuidanceLayoutType'\n      type: object\n      properties:\n        title:\n          type: string\n        body:\n          type: string\n      example: \n        title: exposure_notification_title\n        body: exposure_notification_body\n        type: paragraph\n    LabConfirmationRequest:\n      type: object\n      properties:\n        labConfirmationId:\n          type: string\n          example: \"2L245B\"\n          description: The labConfirmationId identifies the result in the app ecosystem. For patients who are enrolled via the test facility (QR Scan), the labConfirmationId is known to the Lab/HA system. For patients who are enrolled directly during a result confirmation call (fallback flow), the labConfirmationId is handed out via the out of band phone conversation and entered by the operator. \n        dateOfSymptomsOnset:\n          type: string\n          format: date\n          example: \"2020-07-10T00:00:00.000Z\"\n          description: The day that the patient's symptoms started. This is usually \u003c 14 days ago. However, we impose no constraint on it.\n    LabConfirmationResponse:\n      type: object\n      properties:\n        valid:\n          type: boolean\n          description: The valid property indicates if the labConfirmationId is valid and linked to a valid bucket.\n    EnrollmentRequest:\n      type: object\n      additionalProperties: false\n      required:\n      - \"padding\"\n      properties:\n        padding:\n          type: string\n          minLength: 0\n          maxLength: 110000\n          pattern: ^[a-zA-Z0-9+/]{0,110000}={0,2}$\n          description: |\n              The client should add padding for observer protection, so that the length of a request does not reveal that this is an enrollment. \n              The size of the padding should be randomized from a negative exponential distribution so that the total request message size is between `Appconfig.requestMinimumSize` and\n              `Appconfig.requestMaximumSize`.\n    EnrollmentResponse:\n      type: object\n      required:\n      - bucketId\n      - confirmationKey\n      - labConfirmationId\n      - padding\n      properties:\n        bucketId: \n          type: string\n          description: Random generated number that will later in the upload process associate the keys with the correct signature\n        confirmationKey:\n          type: string\n          description: |\n            Base64 representation of a 256-bit key that will be used to sign TEKs upon upload. \n        labConfirmationId:\n          type: string\n          description: |\n            Confirmation code that the phone should display so the phone owner can read it to an operator. The value may include dashes to denote separators, e.g. AB8-B7F should be rendered as two sets of characters.\n        validity:\n          type: integer\n          format: int64\n          description: The returned key is valid for this number of seconds after it was retrieved. The device should re-register if this time is elapsed. Typically the validUntil will be the number of seconds until 4am the next day so it's valid long enough to be able to upload the 14th key at a random time past midnight.\n        padding:\n          type: string\n          minLength: 0\n          maxLength: 10000\n          pattern: ^[a-zA-Z0-9+/]{0,10000}={0,2}$\n          description: |\n              The server should add padding for observer protection, so that the length of a response does not reveal that this is a /register response. \n              The size of the padding should be randomized from a negative exponential distribution so that the total request message size is between system parameters `responseMinimumSize` and\n              `responseMaximumSize`.\n    KeysRequest:\n      type: object\n      additionalProperties: false\n      required:\n      - \"keys\"\n      - \"bucketId\"\n      - \"padding\"\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/TEK'\n          description: Base64 representation of a 128-bit key that will be used to sign TEKs upon upload. The device should generate this key using a secure random number generator.\n        bucketId:\n          type: string\n          description: identification of 'bucket' that contains the confirmationKey. See 'signature' field below.  \n          format: \"byte\"\n          minLength: 22\n          maxLength: 44\n          pattern: ^[a-zA-Z0-9+/]{22,43}={1,2}$\n        padding:\n          type: string\n          minLength: 0\n          maxLength: 110000\n          pattern: ^[a-zA-Z0-9+/]{0,110000}={0,2}$\n          description: |\n              The request should add padding for observer protection, so that the length of a request does not reveal that this is a /postkeys call. \n              The size of the padding should be randomized from a negative exponential distribution so that the total request message size is between \n              `Appconfig.requestMinimumSize` and `Appconfig.requestMaximumSize`.\n    KeysResponse:\n      type: object\n      additionalProperties: false\n      required:\n      - \"padding\"\n      properties:\n        padding:\n          type: string\n          minLength: 0\n          maxLength: 10000\n          pattern: ^[a-zA-Z0-9+/]{0,10000}={0,2}$\n          description: |\n              The server should add padding for observer protection, so that the length of a response does not reveal that this is a /postkeys response. \n              The size of the padding should be randomized from a negative exponential distribution so that the total request message size is between system parameters `responseMinimumSize` and\n              `responseMaximumSize`.\n    TEK:\n      type: \"object\"\n      required:\n      - \"keyData\"\n      - \"rollingStartNumber\"\n      - \"rollingPeriod\"\n      additionalProperties: false\n      properties:\n        keyData:\n          type: \"string\"\n          format: \"byte\"\n          minLength: 22\n          maxLength: 44\n          pattern: ^[a-zA-Z0-9+/]{22,43}={1,2}$\n          example: \"dGlmaWNhdGllLWFwcCBvbiBjb2RlZm9ybmwgc2xhY2s=\"\n        rollingStartNumber:\n          type: integer\n          minimum: 0\n          example: 2648160\n        rollingPeriod:\n          type: integer\n          minimum: 0\n          example: 144\n        regionsOfInterest:\n          type: array\n          items: \n            type: string\n          description: \"Reserved for future use. A traveler may want to indicate that the key from this day is relevant in certain countries. TODO: enhance/change based on interoperability requirements\"\n"
		}
	},
	"Error": "make ir: path \"/stopkeys\": post: requestBody: contents: application/json: schema: field padding: string validator: pattern: error parsing regexp: invalid repeat count: `{0,110000}`"
}