{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/osbuild/osbuild-composer"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "internal/worker/api/openapi.yml",
			"byteSize": 7467,
			"content": "openapi: 3.0.0\ninfo:\n  title: OSBuild Composer - Worker\n  version: '1'\n  description: This is an API for workers to request and handle jobs.\nservers:\n- url: https://api.openshift.com/api/image-builder-worker/v1\n  description: Main (production) server\n- url: https://api.stage.openshift.com/api/image-builder-worker/v1\n  description: Staging server\n- url: /api/image-builder-worker/v1\n- url: /api/worker/v1\n\npaths:\n  /openapi:\n    get:\n      operationId: getOpenapi\n      summary: Get the openapi spec in json format\n      responses:\n        '200':\n          description: openapi spec in json format\n        '500':\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /status:\n    get:\n      operationId: GetStatus\n      summary: status\n      description: Simple status handler which returns service status\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n        '4XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '5XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /jobs:\n    post:\n      operationId: RequestJob\n      summary: Request a job\n      description: Requests a job. This operation blocks until a job is available.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestJobRequest'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestJobResponse'\n        '204':\n          description: No job was available, try again\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectReference'\n        '4XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '5XX':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /jobs/{token}:\n    parameters:\n      - schema:\n          type: string\n        name: token\n        in: path\n        required: true\n    get:\n      operationId: GetJob\n      summary: Get running job\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetJobResponse'\n        '4XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '5XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      operationId: UpdateJob\n      summary: Update a running job\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateJobRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateJobResponse'\n        '4XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '5XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /jobs/{token}/artifacts/{name}:\n    put:\n      operationId: UploadJobArtifact\n      summary: Upload an artifact\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n      parameters:\n        - schema:\n            type: string\n          name: name\n          in: path\n          required: true\n        - schema:\n            type: string\n          name: token\n          in: path\n          required: true\n      responses:\n        '200':\n          description: OK\n        '4XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '5XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /errors/{id}:\n    get:\n      operationId: getError\n      summary: Get error description\n      description: Get an instance of the error specified by id\n      security:\n        - Bearer: []\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n            example: '13'\n          required: true\n          description: ID of the error\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '4XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '5XX':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    ObjectReference:\n      type: object\n      required:\n        - id\n        - kind\n        - href\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n        href:\n          type: string\n\n    Error:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - type: object\n        required:\n          - code\n          - reason\n          - operation_id\n          - message\n        properties:\n          code:\n            type: string\n          reason:\n            type: string\n          operation_id:\n            type: string\n          message:\n            description: Backward compatibility with workers \u003c= v33, equals reason\n            type: string\n\n    StatusResponse:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - type: object\n        required:\n          - status\n        properties:\n          status:\n            type: string\n\n    RequestJobRequest:\n      type: object\n      required:\n        - types\n        - arch\n      properties:\n        types:\n          type: array\n          items:\n            type: string\n        arch:\n          type: string\n    RequestJobResponse:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - type: object\n        required:\n          - type\n          - location\n          - artifact_location\n        properties:\n          location:\n            type: string\n          artifact_location:\n            type: string\n          type:\n            type: string\n          args:\n            x-go-type: json.RawMessage\n          dynamic_args:\n            type: array\n            items:\n              x-go-type: json.RawMessage\n\n    GetJobResponse:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - type: object\n        required:\n          - canceled\n        properties:\n          canceled:\n            type: boolean\n    UpdateJobRequest:\n      type: object\n      required:\n        - result\n      properties:\n        result:\n          x-go-type: json.RawMessage\n    UpdateJobResponse:\n      $ref: '#/components/schemas/ObjectReference'\n"
		}
	},
	"Error": "buildIR: make ir: path \"/jobs/{token}/artifacts/{name}\": put: requestBody: contents: application/octet-stream: octet stream with \"string\" schema not supported",
	"NotImplemented": [
		"HTTP code pattern"
	]
}