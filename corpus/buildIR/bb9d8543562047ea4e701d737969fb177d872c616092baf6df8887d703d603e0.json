{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cdimascio/express-openapi-validator"
		},
		"file": {
			"name": "serialized-deep-object.objects.yaml",
			"size": 0,
			"path": "test/resources/serialized-deep-object.objects.yaml",
			"byteSize": 2147,
			"content": "openapi: \"3.0.2\"\ninfo:\n  version: 1.0.0\n  title: Request Query Serialization\n  description: Request Query Serialization Test\n\nservers:\n  - url: /v1/\n\npaths:\n  /deep_object:\n    x-vendorExtension1: accounts\n    get:\n      x-vendorExtension2: accounts\n      summary: \"retrieve a deep object\"\n      operationId: getDeepObject\n      parameters:\n        - in: query\n          style: deepObject\n          name: settings\n          schema:\n            type: object\n            required:\n              - state\n            properties:\n              tag_ids:\n                type: array\n                items:\n                  type: integer\n                  minimum: 0\n                minItems: 1\n              state:\n                type: string\n                enum: [\"default\", \"validated\", \"pending\"]\n                default: \"default\"\n                description: \"Filter the tags by their validity. The default value ('default') stands for no filtering.\"\n              greeting:\n                type: string\n                default: \"hello\"\n      responses:\n        \"200\":\n          description: the object\n  /deep_object_2:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/pedestrian'\n      responses:\n        \"200\":\n          description: the object\n\ncomponents:\n  schemas:\n    Pedestrian:\n      type: object\n      properties:\n        speed:\n          type: number\n          format: double\n          minimum: 0.5\n          maximum: 2\n          default: 1\n    # Deep:\n    #   type: object\n    #   properties:\n    #     tag_ids:\n    #       type: array\n    #       items:\n    #         type: integer\n    #         minimum: 0\n    #       minItems: 1\n    #     state:\n    #       type: string\n    #       enum: [\"default\", \"validated\", \"pending\"]\n    #       default: \"default\"\n    #       description: \"Filter the tags by their validity. The default value ('default') stands for no filtering.\"\n    #     greeting:\n    #       type: string\n    #       default: \"hello\"\n          \n  parameters:\n    pedestrian:\n      name: pedestrian\n      in: query\n      style: deepObject\n      schema:\n        $ref: '#/components/schemas/Pedestrian'\n"
		}
	},
	"Error": "buildIR: make ir: path \"/deep_object\": get: parameters: field \"tag_ids\": nested arrays not allowed"
}