{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Azure/azure-sphere-samples"
		},
		"file": {
			"name": "device_rest_api.yaml",
			"size": 0,
			"path": "Manufacturing/yaml/device_rest_api.yaml",
			"byteSize": 48502,
			"content": "#\n# This is an OpenAPI Specification for the Azure Sphere Device REST API.\n# It uses v3.0.0 of the OpenAPI Specification format (OAS3).\n#\n# N.B. We use Semantic Versioning to define the version of this\n# API. It is returned as HTTP response header in all communication.\n#\n# Given the version number in the MAJOR.MINOR.PATCH format, increment:\n#     - MAJOR, when making incompatible API changes (e.g., removing an endpoint)\n#     - MINOR, when adding functionality in a backwards-compatible way.\n#     - PATCH, when fixing a bug in a backwards-compatible way.\n#\n# [Version History]\n# 1.2.0\n#         - Added support for passing component UID to /update/stage, /update/install apis.\n#         - Deprecated /app/image 1.1.0\n#         - Added a new API: GET /log\n# 2.0.0\n#         - Removed the single customer app assumption so component UIDs are now required for\n#             GET /app/status, PATCH /app/status, and DELETE /app/image\n#         - Removed PUT /app/image endpoint\n# 3.0.0\n#         - Removed \"size\" field from GET /wifi/config/networks and GET /wifi/scan response JSON\n#         - Stopped returning JSON error schema for any 200 success case, this effected:\n#             DELETE /wifi/config/networks/{id}\n#             DELETE /app/image/{component-uid}\n#             PUT /update/stage\n#             POST /update/install\n# 3.1.0\n#         - Added the following APIs.\n#             GET /abi_versions\n#             GET /device/capabilities\n#             GET \u0026 PUT /device/manufacturing_state\n#             GET /app/quota\n#             GET /telemetry\n#             GET /net/status\n#             GET /net/interfaces\n#\n# 4.0.0\n#         - Locked interface down with a capability check in the header\n#         - Removed the GeneralKey from being returned on device information\n#         - Device manufacturing state expanded, Module1Complete and DeviceComplete\n# 4.1.0\n#         - Added the following API:\n#             GET /net/firewall/rulesets\n#\n# 4.2.0\n#         - Added 415 error code for incompatible media type\n#         - Change POST /restart's conten-type from application/json to text/plain\n#\n# 4.3.0\n#         - Added the following API:\n#             PATCH /net/interfaces/\u003cnetworkInterfaceName\u003e\n#         - Introduced hardwareAddress field in GET /net/interfaces/\n#           and GET /net/interfaces/\u003cnetworkInterfaceName\u003e\n#         - Added the following API:\n#             GET /stats/memory/groups/applications\n#\n# 4.4.0\n#         - Added restartingSystem property to DELETE /app/image/{component-uid}\n#\n# 4.5.0\n#         - Added the following API:\n#             GET /osversion\n#\n# 4.6.0\n#         - Added enablePowerSavings property to PATCH /wifi/interface\n#         - Added powerSavingsState field in GET /wifi/interface\n#\n# If you make any changes to the definition of the API, please\n# check whether a change is required to the version as well.\n#\n\nopenapi: \"3.0.0\"\n\ninfo:\n  version: 4.5.0\n  title: Azure Sphere Device REST API\n  description: REST API exposed by Azure Sphere devices via the Servicing Port\n\nservers:\n  - url: https://192.168.35.2\n\ntags:\n  - name: \"app\"\n    description: \"Application management\"\n  - name: \"cert\"\n    description: \"Certificate management\"\n  - name: \"device\"\n    description: \"Device state/configuration\"\n  - name: \"diag\"\n    description: \"Error reports and diagnostic logging\"\n  - name: \"images\"\n    description: \"Image management\"\n  - name: \"net\"\n    description: \"Network configuration\"\n  - name: \"wifi\"\n    description: \"Wi-Fi configuration\"\n\nx-global:\n  x-azsphere-authorizer: IsRESTAllowed\n\npaths:\n  /abi_versions:\n    x-azsphere-authorizer: None\n    get:\n      tags: [\"images\"]\n      operationId: \"getAbiVersions\"\n      x-azsphere-handler: RestGetABIVersionNumbers\n      summary: \"Get ABI versions\"\n      responses:\n        200:\n          description: \"ABI version set\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AbiVersionSet\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /app/status/{componentId}:\n    parameters:\n      - name: componentId\n        in: path\n        required: true\n        description: \"Component ID of application\"\n        schema:\n          $ref: \"#/components/schemas/Uid\"\n    get:\n      tags: [\"app\"]\n      operationId: \"getAppStatus\"\n      x-azsphere-handler: RestAppGetStatus\n      summary: \"Get app status\"\n      responses:\n        200:\n          description: \"App status\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppStatus\"\n    patch:\n      tags: [\"app\"]\n      operationId: \"setAppStatus\"\n      x-azsphere-handler: RestAppPatchStatus\n      summary: \"Change app status\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                trigger:\n                  type: string\n                  enum: [\"start\", \"startDebug\", \"stop\"]\n      responses:\n        200:\n          description: \"Updated app status\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  realTimeCore:\n                    type: integer\n                  state:\n                    $ref: \"#/components/schemas/AppStatus\"\n                required:\n                  - state\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /app/image/{componentId}:\n    parameters:\n      - name: componentId\n        in: path\n        required: true\n        description: \"Component ID of image\"\n        schema:\n          $ref: \"#/components/schemas/Uid\"\n    delete:\n      tags: [\"app\"]\n      operationId: \"removeComponent\"\n      x-azsphere-handler: RestAppDeleteImage\n      summary: \"Delete image\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SystemRestart\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /app/quota/{componentId}:\n    parameters:\n      - name: componentId\n        in: path\n        required: true\n        description: \"Component ID of app image\"\n        schema:\n          $ref: \"#/components/schemas/Uid\"\n    get:\n      tags: [\"app\"]\n      operationId: \"getAppQuota\"\n      x-azsphere-handler: RestAppGetQuota\n      summary: \"Retrieve app quota information\"\n      responses:\n        200:\n          description: \"Quota information\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuotaInfo\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /certstore/certs:\n    get:\n      tags: [\"cert\"]\n      operationId: \"getCertIdentifiers\"\n      x-azsphere-handler: RestGetCertList\n      summary: \"Get the identifiers associated with all installed certificates\"\n      responses:\n        200:\n          description: \"Certificate identifier information\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertIdentifierList\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /certstore/certs/{identifier}:\n    parameters:\n      - name: identifier\n        in: path\n        required: true\n        description: \"Certificate identifier\"\n        schema:\n          $ref: \"#/components/schemas/CertIdentifier\"\n    get:\n      tags: [\"cert\"]\n      operationId: \"getCertInformation\"\n      x-azsphere-handler: \"\"\n      summary: \"Get the information for the specified certificate\"\n      responses:\n        200:\n          description: \"Certificate information\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertInfo\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    post:\n      tags: [\"cert\"]\n      operationId: \"addCert\"\n      x-azsphere-handler: RestInstallCertificate\n      summary: \"Install certificate\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                certType:\n                  type: string\n                  enum: [\"Client\", \"RootCA\"]\n                  example: \"Client\"\n                publicCert:\n                  type: string\n                  description: \"PEM format public certificate\"\n                  maxLength: 8192\n                privateKey:\n                  type: string\n                  description: \"PEM format private key\"\n                  maxLength: 8192\n                password:\n                  type: string\n                  description: \"Password to decrypt the private key\"\n                  format: password\n                  maxLength: 256\n                  example: \"mypassword\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    delete:\n      tags: [\"cert\"]\n      operationId: \"removeCert\"\n      x-azsphere-handler: RestDeleteCert\n      summary: \"Remove certificate\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /certstore/space:\n    get:\n      tags: [\"cert\"]\n      operationId: \"getCertAvailableSpace\"\n      x-azsphere-handler: RestGetCertAvailableSpace\n      summary: \"Retrieve available certificate space\"\n      responses:\n        200:\n          description: \"Certificate space available\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  AvailableSpace:\n                    type: string\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /device/capabilities:\n    get:\n      x-azsphere-authorizer: None\n      tags: [\"device\"]\n      operationId: \"getDeviceCapabilities\"\n      x-azsphere-handler: RestGetDeviceCapabilities\n      summary: \"Get device's capabilities\"\n      responses:\n        200:\n          description: \"Device capabilities\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  device_capabilities:\n                    type: array\n                    example: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11]\n                    items:\n                      $ref: \"#/components/schemas/DeviceCapability\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /device/security_state:\n    get:\n      x-azsphere-authorizer: None\n      tags: [\"device\"]\n      operationId: \"getDeviceSecurityState\"\n      x-azsphere-handler: RestGetDeviceSecurityState\n      summary: \"Get device's security state\"\n      responses:\n        200:\n          description: \"Security state\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  securityState:\n                    type: string\n                    enum: [\"TEST\", \"BLANK\", \"SECURE\", \"EOL\", \"UNKNOWN\"]\n                    example: \"TEST\"\n                  deviceIdentifier:\n                    type: string\n                  # deviceIdentityPublicKey is to be phased out\n                  deviceIdentityPublicKey:\n                    type: string\n                    deprecated: true\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /device/manufacturing_state:\n    get:\n      x-azsphere-authorizer: None\n      tags: [\"device\"]\n      operationId: \"getDeviceManufacturingState\"\n      x-azsphere-handler: RestGetDeviceManufacturingState\n      summary: \"Get device's manufacturing state\"\n      responses:\n        200:\n          description: \"Manufacturing state\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  manufacturingState:\n                    type: string\n                    enum: [\"Blank\", \"Module1Complete\", \"DeviceComplete\", \"Unknown\"]\n                    example: \"DeviceComplete\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    put:\n      tags: [\"device\"]\n      operationId: \"setDeviceManufacturingState\"\n      x-azsphere-handler: RestPutDeviceManufacturingState\n      summary: \"Set device's manufacturing state\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                manufacturingState:\n                  type: string\n                  enum: [\"Module1Complete\", \"DeviceComplete\"]\n                  example: \"DeviceComplete\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /images:\n    get:\n      tags: [\"images\"]\n      operationId: \"getImages\"\n      x-azsphere-handler: RestImageDetails\n      summary: \"Lists details of images on device\"\n      responses:\n        200:\n          description: \"Image list\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComponentList\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /log:\n    get:\n      tags: [\"diag\"]\n      operationId: \"getLog\"\n      x-azsphere-handler: RestLogGetLogFile\n      summary: \"Retrieves contents of diagnostic log\"\n      responses:\n        200:\n          description: \"Log contents\"\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /net/firewall/rulesets:\n    get:\n      tags: [\"net\"]\n      operationId: \"getAllNetworkFirewallRulesets\"\n      x-azsphere-handler: RestGetNetFirewallRulesets\n      summary: \"Gets all network firewall rulesets\"\n      responses:\n        200:\n          description: \"Network firewall rulesets\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  rulesets:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/NetworkFirewallRuleset\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /net/interfaces:\n    get:\n      tags: [\"net\"]\n      operationId: \"getAllNetworkInterfaceStatus\"\n      x-azsphere-handler: RestGetNetInterfaces\n      summary: \"Gets status of network interfaces\"\n      responses:\n        200:\n          description: \"Network interfaces\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  interfaces:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/NetworkInterfaceDetails\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /net/interfaces/{networkInterfaceName}:\n    parameters:\n      - name: networkInterfaceName\n        in: path\n        required: true\n        description: \"Network interface name\"\n        schema:\n          type: string\n    get:\n      tags: [\"net\"]\n      operationId: \"getNetworkInterfaceStatus\"\n      x-azsphere-handler: \"\"\n      summary: \"Gets status of named network interface\"\n      responses:\n        200:\n          description: \"Network interface\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NetworkInterfaceDetails\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    patch:\n      tags: [\"net\"]\n      operationId: \"setNetworkInterfaceAttributes\"\n      x-azsphere-handler: RestPatchNetInterface\n      summary: \"Update named network interface attributes\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                hardwareAddress:\n                  $ref: \"#/components/schemas/NetInterfaceHardwareAddress\"\n                interfaceUp:\n                  type: boolean\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /net/proxy:\n    get:\n      tags: [\"net\"]\n      operationId: \"getNetProxy\"\n      x-azsphere-handler: RestGetNetProxy\n      summary: \"Gets network proxy\"\n      responses:\n        200:\n          description: \"Network proxy\"\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/NetworkProxyAnonymous\"\n                  - $ref: \"#/components/schemas/NetworkProxyBasicNoPassword\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    post:\n      tags: [\"net\"]\n      operationId: \"configNetworkProxy\"\n      x-azsphere-handler: RestConfigNetProxy\n      summary: \"Configures a network proxy\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/NetworkProxyAnonymous\"\n                - $ref: \"#/components/schemas/NetworkProxyBasic\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    delete:\n      tags: [\"net\"]\n      operationId: \"deleteNetworkProxy\"\n      x-azsphere-handler: RestDeleteNetProxy\n      summary: \"Deletes the network proxy\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /net/status:\n    get:\n      x-azsphere-authorizer: None\n      tags: [\"net\"]\n      operationId: \"getNetworkStatus\"\n      x-azsphere-handler: RestGetNetStatus\n      summary: \"Gets network status\"\n      responses:\n        200:\n          description: \"Network status\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deviceAuthenticationIsReady:\n                    type: boolean\n                  networkTimeSync:\n                    type: string\n                    enum: [\"complete\", \"incomplete\", \"disabled\"]\n                  proxy:\n                    type: string\n                    enum: [\"disabled\", \"enabled\", \"resolvingProxyName\", \"ready\"]\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /restart:\n    post:\n      tags: [\"device\"]\n      operationId: \"restartDevice\"\n      x-azsphere-handler: RestPostRestart\n      summary: \"Restarts the device\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /status:\n    get:\n      x-azsphere-authorizer: None\n      tags: [\"device\"]\n      operationId: \"getDeviceStatus\"\n      x-azsphere-handler: RestGetStatus\n      summary: \"Gets device status\"\n      responses:\n        200:\n          description: \"Device status\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  uptime:\n                    type: integer\n                    example: 58\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /osversion:\n    get:\n      x-azsphere-authorizer: None\n      tags: [\"device\"]\n      operationId: \"getOsVersion\"\n      x-azsphere-handler: RestGetOsVersion\n      summary: \"Gets OS version\"\n      responses:\n        200:\n          description: \"OS version\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  osversion:\n                    type: string\n                    example: \"22.09\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /stats/memory/groups/applications:\n    get:\n      x-azsphere-authorizer: IsAppDevelopmentAllowed\n      tags: [\"diag\"]\n      operationId: \"getMemoryStats\"\n      x-azsphere-handler: RestGetMemory\n      summary: \"Gets memory statistics\"\n      responses:\n        200:\n          description: \"Memory statistics\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  memoryStats:\n                    $ref: \"#/components/schemas/MemoryStatsDetails\"\n                  apps:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/AppDetails\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /telemetry:\n    get:\n      tags: [\"diag\"]\n      operationId: \"getErrorReportData\"\n      x-azsphere-handler: RestTelemetryGetTelemetryFile\n      summary: \"Retrieves error report data\"\n      responses:\n        200:\n          description: \"Error report data\"\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    delete:\n      tags: [\"diag\"]\n      operationId: \"clearErrorReportData\"\n      x-azsphere-handler: RestTelemetryDeleteTelemetryFile\n      summary: \"Clears error report data\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /update/install:\n    post:\n      tags: [\"images\"]\n      operationId: \"installStagedImages\"\n      x-azsphere-handler: RestInstallUpdates\n      summary: \"Installs image(s) on the device\"\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                appControlMode:\n                  type: string\n                  enum: [\"Manual\"]\n      responses:\n        200:\n          $ref: \"#/components/responses/SystemRestart\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /update/stage:\n    put:\n      tags: [\"images\"]\n      operationId: \"stageImage\"\n      x-azsphere-handler: RestStageUpdate\n      summary: \"Stages image on the device\"\n      requestBody:\n        required: true\n        description: \"Binary contents of the image to be staged\"\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /wifi/config/networks:\n    get:\n      tags: [\"wifi\"]\n      operationId: \"getConfiguredWifiNetworks\"\n      x-azsphere-handler: RestWifiGetConfigNetworks\n      summary: \"Gets Wi-Fi network configuration\"\n      responses:\n        200:\n          description: \"Wi-Fi network details\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  values:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/WifiNetworkConfigResponse\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    post:\n      tags: [\"wifi\"]\n      operationId: \"addConfiguredWifiNetwork\"\n      x-azsphere-handler: RestWifiPostConfigNetworks\n      summary: \"Adds Wi-Fi network configuration\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/EapTlsNetworkRequest\"\n                - $ref: \"#/components/schemas/OpenNetworkRequest\"\n                - $ref: \"#/components/schemas/PskNetworkRequest\"\n      responses:\n        201:\n          description: \"Created Wi-Fi network configuration\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/WifiNetworkConfigResponse\"\n                  - type: object\n                    required:\n                      - ssid\n          links:\n            id:\n              operationId: \"getConfiguredWifiNetwork\"\n              parameters:\n                wifiNetworkId: $response.body#/id\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /wifi/config/networks/{wifiNetworkId}:\n    parameters:\n      - name: wifiNetworkId\n        in: path\n        required: true\n        description: \"Wi-Fi configured network ID\"\n        schema:\n          type: integer\n          format: int32\n    get:\n      tags: [\"wifi\"]\n      operationId: \"getConfiguredWifiNetwork\"\n      x-azsphere-handler: \"\"\n      summary: \"Get Wi-Fi network configuration\"\n      responses:\n        200:\n          description: \"Wi-Fi network details\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WifiNetworkConfigResponse\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    delete:\n      tags: [\"wifi\"]\n      operationId: \"removeConfiguredWifiNetwork\"\n      x-azsphere-handler: RestWifiDeleteConfigNetworks\n      summary: \"Delete Wi-Fi network configuration\"\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    patch:\n      tags: [\"wifi\"]\n      operationId: \"changeConfiguredWifiNetwork\"\n      x-azsphere-handler: RestWifiPatchConfigNetworks\n      summary: \"Changes Wi-Fi network configuration\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                configState:\n                  $ref: \"#/components/schemas/WifiConfigState\"\n                psk:\n                  type: string\n                  minLength: 8\n                  maxLength: 63\n      responses:\n        200:\n          description: \"Updated Wi-Fi network details\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WifiNetworkConfigResponse\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /wifi/diagnostics/networks:\n    get:\n      tags: [\"wifi\"]\n      operationId: \"getAllNetworkConnectionFailureLogs\"\n      x-azsphere-handler: RestWifiGetNetworkConnectivityLogs\n      summary: \"Get logs of failed network connection attempts\"\n      responses:\n        200:\n          description: \"Wi-Fi network failed connection logs\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  values:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/WifiNetworkFailConnectionLog\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /wifi/diagnostics/networks/{networkId}:\n    parameters:\n      - name: networkId\n        in: path\n        required: true\n        description: \"Wi-Fi configured network Id\"\n        schema:\n          type: integer\n          format: int32\n    get:\n      tags: [\"wifi\"]\n      operationId: \"getANetworksConnectionFailureLog\"\n      x-azsphere-handler: \"\"\n      summary: \"Get a log of a network's latest Wi-Fi connection failure\"\n      responses:\n        200:\n          description: \"Wi-Fi network connection failure log\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WifiNetworkFailConnectionLog\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /wifi/interface:\n    get:\n      tags: [\"wifi\"]\n      operationId: \"getWifiInterfaceState\"\n      x-azsphere-handler: RestWifiGetInterface\n      summary: \"Gets Wi-Fi interface state\"\n      responses:\n        200:\n          description: \"Wi-Fi interface state\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WifiNetworkDetails\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n    patch:\n      tags: [\"wifi\"]\n      operationId: \"changeWifiInterfaceStatus\"\n      x-azsphere-handler: RestWifiPatchInterface\n      summary: \"Changes Wi-Fi interface state\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                reloadConfig:\n                  type: boolean\n                enablePowerSavings:\n                  type: boolean\n      responses:\n        200:\n          $ref: \"#/components/responses/SuccessfulOperation\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /wifi/scan:\n    get:\n      tags: [\"wifi\"]\n      operationId: \"getWifiScanResults\"\n      x-azsphere-handler: RestWifiGetScan\n      summary: \"Gets Wi-Fi scan results\"\n      responses:\n        200:\n          description: \"Wi-Fi scan results\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WifiScanResults\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n\ncomponents:\n  responses:\n    BadRequest:\n      description: \"Bad request\"\n      x-ms-error-response: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Conflict:\n      description: \"Conflict\"\n      x-ms-error-response: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    InternalServerError:\n      description: \"Internal server error\"\n      x-ms-error-response: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFound:\n      description: \"Not found\"\n      x-ms-error-response: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    UnsupportedMediaType:\n      description: \"UnsupportedMediaType\"\n      x-ms-error-response: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    SuccessfulOperation:\n      description: \"Successful operation\"\n      content:\n        application/json:\n          schema:\n            type: object\n    SystemRestart:\n      description: \"Successful operation\"\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              restartingSystem:\n                type: boolean\n                example: true\n\n  schemas:\n    AbiVersionSet:\n      type: object\n      properties:\n        SecureWorldRuntime:\n          type: integer\n          format: int32\n          example: 2\n        OSRuntime:\n          type: integer\n          format: int32\n          example: 3\n        ApplicationRuntime:\n          type: integer\n          format: int32\n          example: 1\n    AppStatus:\n      type: string\n      enum: [\"running\", \"notPresent\", \"stopped\", \"debugging\"]\n    CertIdentifier:\n      type: string\n      maxLength: 16\n    CertIdentifierList:\n      type: object\n      properties:\n        identifiers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CertIdentifier\"\n    CertInfo:\n      type: object\n      properties:\n        id:\n          type: string\n        notBefore:\n          type: string\n        notAfter:\n          type: string\n        subjectName:\n          type: string\n        issuerName:\n          type: string\n    ClientIdentity:\n      type: string\n      maxLength: 254\n    Error:\n      type: object\n      properties:\n        error:\n          type: integer\n          format: int32\n          example: 17825802\n    ComponentDetails:\n      type: object\n      properties:\n        uid:\n          $ref: \"#/components/schemas/Uid\"\n        image_type:\n          $ref: \"#/components/schemas/ImageType\"\n        is_update_staged:\n          type: boolean\n        does_image_type_require_restart:\n          type: boolean\n        name:\n          type: string\n        images:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ImageDetails\"\n    ComponentList:\n      type: object\n      properties:\n        has_staged_updates:\n          type: boolean\n        is_ota_update_in_progress:\n          type: boolean\n        restart_required:\n          type: boolean\n        components:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ComponentDetails\"\n    WifiConfigName:\n      type: string\n      maxLength: 16\n    DeviceCapability:\n      type: integer\n      format: int32\n    EapTlsNetworkRequest:\n      allOf:\n        - $ref: \"#/components/schemas/NetworkRequestBase\"\n        - type: object\n          properties:\n            clientIdentity:\n              $ref: \"#/components/schemas/ClientIdentity\"\n            clientCertStoreIdentifier:\n              $ref: \"#/components/schemas/CertIdentifier\"\n            rootCaCertStoreIdentifier:\n              $ref: \"#/components/schemas/CertIdentifier\"\n            securityState:\n              type: string\n              enum:\n                - eaptls\n          required:\n            - securityState\n            - clientCertStoreIdentifier\n    ImageDetails:\n      type: object\n      properties:\n        uid:\n          $ref: \"#/components/schemas/Uid\"\n        length_in_bytes:\n          type: integer\n          example: 31073\n        uncompressed_length_in_bytes:\n          type: integer\n          example: 35443\n        replica_type:\n          type: integer\n          format: int32\n          example: 1\n    ImageType:\n      type: integer\n      format: int32\n      example: 2\n    IpAddressAssignment:\n      type: string\n      enum: [\"static\", \"dynamic\"]\n      example: \"dynamic\"\n    NetworkFirewallRule:\n      type: object\n      properties:\n        sourceIP:\n          type: string\n          format: ipv4\n          example: \"192.168.1.2\"\n        sourceMask:\n          type: string\n          format: ipv4\n          example: \"255.255.255.0\"\n        destinationIP:\n          type: string\n          format: ipv4\n        destinationMask:\n          type: string\n          format: ipv4\n        uid:\n          type: integer\n          minimum: 0\n          maximum: 4294967295 # 2^32 - 1 (uint32_t)\n        action:\n          type: string\n          enum: [\"drop\", \"accept\"]\n        interfaceInName:\n          type: string\n          example: \"azspheresvc\"\n        interfaceOutName:\n          type: string\n        state:\n          type: string\n          enum: [\"none\", \"established\", \"related\"]\n        tcpMask:\n          $ref: \"#/components/schemas/TcpFlags\"\n        tcpCmp:\n          $ref: \"#/components/schemas/TcpFlags\"\n        tcpInv:\n          type: boolean\n        protocol:\n          type: string\n          enum: [\"any\", \"icmp\", \"igmp\", \"tcp\", \"udp\"]\n        sourcePortRange:\n          $ref: \"#/components/schemas/NetworkPortRange\"\n        destinationPortRange:\n          $ref: \"#/components/schemas/NetworkPortRange\"\n        packets:\n          type: integer\n          minimum: 0\n          maximum: 18446744073709551615 # 2^64-1 (uint64_t)\n        bytes:\n          type: integer\n          minimum: 0\n          maximum: 18446744073709551615 # 2^64-1 (uint64_t)\n    NetInterfaceHardwareAddress:\n      type: string\n      example: \"a1:b2:c3:4d:e5:6f\"\n      minLength: 17\n      maxLength: 17\n    NetworkAddress:\n      type: string\n      maxLength: 255\n    NetworkFirewallRuleset:\n      type: object\n      properties:\n        hook:\n          type: string\n          enum: [\"PREROUTING\", \"INPUT\", \"FORWARD\", \"OUTPUT\", \"POSTROUTING\"]\n        isValid:\n          type: boolean\n        rules:\n          type: array\n          items:\n            $ref: \"#/components/schemas/NetworkFirewallRule\"\n    NetworkInterfaceDetails:\n      type: object\n      properties:\n        interfaceName:\n          type: string\n          example: \"wlan0\"\n        interfaceUp:\n          type: boolean\n        connectedToNetwork:\n          type: boolean\n        ipAssignment:\n          $ref: \"#/components/schemas/IpAddressAssignment\"\n        ipAcquired:\n          type: boolean\n        ipAddresses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/NetworkAddress\"\n        connectedToInternet:\n          type: boolean\n        hardwareAddress:\n          $ref: \"#/components/schemas/NetInterfaceHardwareAddress\"\n    NetworkPort:\n      type: integer\n      minimum: 0\n      maximum: 65535 # 2^16-1 (uint16_t)\n    NetworkPortRange:\n      type: object\n      properties:\n        min:\n          $ref: \"#/components/schemas/NetworkPort\"\n        max:\n          $ref: \"#/components/schemas/NetworkPort\"\n    NetworkProxy:\n      type: object\n      description: \"Network proxy\"\n      properties:\n        enabled:\n          type: boolean\n        address:\n          $ref: \"#/components/schemas/NetworkAddress\"\n        port:\n          $ref: \"#/components/schemas/NetworkPort\"\n        noProxyAddresses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/NetworkAddress\"\n        authenticationType:\n          type: string\n          enum:\n            - anonymous\n            - basic\n    NetworkProxyAnonymous:\n      allOf:\n        - $ref: \"#/components/schemas/NetworkProxy\"\n    NetworkProxyBasic:\n      allOf:\n        - $ref: \"#/components/schemas/NetworkProxy\"\n        - type: object\n          properties:\n            username:\n              type: string\n              description: \"Username used for proxy authentication\"\n              minLength: 1\n              maxLength: 63\n            password:\n              type: string\n              description: \"Password used for proxy authentication\"\n              minLength: 1\n              maxLength: 63\n    NetworkProxyBasicNoPassword:\n      allOf:\n        - $ref: \"#/components/schemas/NetworkProxy\"\n        - type: object\n          properties:\n            username:\n              type: string\n              description: \"Username used for proxy authentication\"\n              minLength: 1\n              maxLength: 63\n    NetworkRequestBase:\n      type: object\n      properties:\n        configName:\n          $ref: \"#/components/schemas/WifiConfigName\"\n        configState:\n          $ref: \"#/components/schemas/WifiConfigState\"\n        ssid:\n          $ref: \"#/components/schemas/Ssid\"\n          minLength: 1\n        targetedScan:\n          type: boolean\n      required:\n        - ssid\n    OpenNetworkRequest:\n      allOf:\n        - $ref: \"#/components/schemas/NetworkRequestBase\"\n        - type: object\n          properties:\n            securityState:\n              type: string\n              enum:\n                - open\n          required:\n            - securityState\n    PskNetworkRequest:\n      allOf:\n        - $ref: \"#/components/schemas/NetworkRequestBase\"\n        - type: object\n          properties:\n            psk:\n              type: string\n              minLength: 8\n              maxLength: 63\n            securityState:\n              type: string\n              enum:\n                - psk\n          required:\n            - securityState\n            - psk\n    QuotaInfo:\n      type: object\n      properties:\n        UsageKB:\n          type: integer\n        LimitKB:\n          type: integer\n          example: 64\n    Ssid:\n      type: string\n      maxLength: 32\n    TcpFlags:\n      type: array\n      items:\n        type: string\n        enum: [\"fin\", \"syn\", \"rst\", \"psh\", \"ack\", \"urg\"]\n    Uid:\n      type: string\n      pattern: \"[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}\"\n      format: uuid\n      example: \"96b15265-111a-4889-9137-2a4bd62470a0\"\n    WifiCertificateValidationErrors:\n      type: string\n      enum:\n        - \"Unspecified\"\n        - \"Untrusted\"\n        - \"Revoked\"\n        - \"NotYetValid\"\n        - \"Expired\"\n        - \"SubjectMismatch\"\n        - \"AltSubjectMismatch\"\n        - \"BadCertificate\"\n        - \"ServerChainProbeFailed\"\n        - \"DomainSuffixMismatch\"\n        - \"DomainMismatch\"\n        - \"InsufficientKeyLength\"\n        - \"CertificateNotFound\"\n        - \"InvalidRootCA\"\n        - \"InvalidClientAuth\"\n        - \"UnknownClientId\"\n    WifiConfigState:\n      type: string\n      enum: [\"unknown\", \"enabled\", \"disabled\", \"temp-disabled\"]\n    WifiConnectionState:\n      type: string\n      enum: [\"unknown\", \"disconnected\", \"connected\"]\n    WifiPowerSavingsState:\n      type: string\n      enum: [\"unknown\", \"enabled\", \"disabled\"]\n    WifiNetworkConfigResponse:\n      type: object\n      properties:\n        clientCertStoreIdentifier:\n          $ref: \"#/components/schemas/CertIdentifier\"\n        clientIdentity:\n          $ref: \"#/components/schemas/ClientIdentity\"\n        configName:\n          $ref: \"#/components/schemas/WifiConfigName\"\n        configState:\n          $ref: \"#/components/schemas/WifiConfigState\"\n        connectionState:\n          $ref: \"#/components/schemas/WifiConnectionState\"\n        id:\n          type: integer\n          format: int32\n        rootCaCertStoreIdentifier:\n          $ref: \"#/components/schemas/CertIdentifier\"\n        securityState:\n          $ref: \"#/components/schemas/WifiSecurityState\"\n        ssid:\n          $ref: \"#/components/schemas/Ssid\"\n        targetedScan:\n          type: boolean\n      required:\n        - configState\n        - connectionState\n        - id\n        - securityState\n        - targetedScan\n    WifiNetworkConnectionErrors:\n      type: string\n      enum:\n        - \"NetworkNotFound\"\n        - \"WrongKey\"\n        - \"NoPskIncluded\"\n        - \"AuthenticationFailed\"\n        - \"ConnectionFailed\"\n        - \"SecurityTypeMismatch\"\n        - \"NetworkFrequencyNotAllowed\"\n        - \"NetworkNotEssPbssMbss\"\n        - \"NetworkNotSupported\"\n        - \"NetworkNonWpa\"\n    WifiNetworkDetails:\n      type: object\n      properties:\n        address:\n          type: string\n          example: \"XX:XX:XX:XX:XX:XX\"\n          pattern: \"[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}\"\n        configName:\n          $ref: \"#/components/schemas/WifiConfigName\"\n        configState:\n          $ref: \"#/components/schemas/WifiConfigState\"\n        connectionState:\n          $ref: \"#/components/schemas/WifiConnectionState\"\n        freq:\n          type: integer\n        key_mgmt:\n          type: string\n          enum: [\"UNKNOWN\", \"NONE\", \"WPA2-PSK\", \"WPA-EAP\"]\n        mode:\n          type: string\n          enum: [\"station\"]\n        id:\n          type: integer\n          format: int32\n        ip_address:\n          type: string\n          format: ipv4\n          example: \"192.168.1.2\"\n        securityState:\n          $ref: \"#/components/schemas/WifiSecurityState\"\n        ssid:\n          $ref: \"#/components/schemas/Ssid\"\n        wpa_state:\n          type: string\n          enum:\n            - \"DISCONNECTED\"\n            - \"INTERFACE_DISABLED\"\n            - \"INACTIVE\"\n            - \"SCANNING\"\n            - \"AUTHENTICATING\"\n            - \"ASSOCIATING\"\n            - \"ASSOCIATED\"\n            - \"4WAY_HANDSHAKE\"\n            - \"GROUP_HANDSHAKE\"\n            - \"COMPLETED\"\n        powerSavingsState:\n          $ref: \"#/components/schemas/WifiPowerSavingsState\"\n    WifiNetworkFailConnectionLog:\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n        networkId:\n          type: integer\n        ssid:\n          type: string\n        configState:\n          $ref: \"#/components/schemas/WifiConfigState\"\n        connectionState:\n          $ref: \"#/components/schemas/WifiConnectionState\"\n        error:\n          $ref: \"#/components/schemas/WifiNetworkConnectionErrors\"\n        certInfo:\n          type: object\n          properties:\n            certSubject:\n              type: string\n              description: \"The subject for the certificate that failed validation\"\n            certDepth:\n              type: integer\n              description: \"The certificate's depth in the certification chain\"\n            certError:\n              $ref: \"#/components/schemas/WifiCertificateValidationErrors\"\n    WifiScanResults:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            type: object\n            properties:\n              bssid:\n                type: string\n              freq:\n                type: integer\n              securityState:\n                $ref: \"#/components/schemas/WifiSecurityState\"\n              signal_level:\n                type: integer\n              ssid:\n                type: string\n    WifiSecurityState:\n      type: string\n      enum: [\"unknown\", \"open\", \"psk\", \"eaptls\"]\n    MemoryStatsDetails:\n      type: object\n      properties:\n        currentMemoryUsageInBytes:\n          type: integer\n          example: 80452\n        userModeMemoryUsageInBytes:\n          type: integer\n          example: 32768\n        peakUserModeMemoryUsageInBytes:\n          type: integer\n          example: 94208\n    AppDetails:\n      type: object\n      properties:\n        componentId:\n          type: string\n          example: 011B3254-6B4E-4AF1-BC81-22E7F677F4BF\n        processes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProcessStats\"\n    ProcessStats:\n      type: object\n      properties:\n        pid:\n          type: integer\n          example: 29\n        heapUsageByCaller:\n          type: array\n          items:\n            $ref: \"#/components/schemas/HeapUsageCallerStats\"\n    HeapUsageCallerStats:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"curl\"\n        usageInBytes:\n          type: integer\n          example: 32768\n",
			"canonicalURL": "/github.com/Azure/azure-sphere-samples@f482ed564e058dd52336f0ac8544a463179e1eaf/-/blob/Manufacturing/yaml/device_rest_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Azure/azure-sphere-samples/blob/f482ed564e058dd52336f0ac8544a463179e1eaf/Manufacturing/yaml/device_rest_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/net/firewall/rulesets\": get: responses: code 200: contents: media: \"application/json\": generate schema: field rulesets: item: field rules: item: field packets: int validator: set maximum: 18446744073709551615 overflows"
}