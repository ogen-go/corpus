{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dlstreamer/pipeline-server"
		},
		"file": {
			"name": "dlstreamer-pipeline-server.yaml",
			"size": 0,
			"path": "vaserving/rest_api/dlstreamer-pipeline-server.yaml",
			"byteSize": 12978,
			"content": "openapi: 3.0.0\ninfo:\n  description: Intel(R) DL Streamer Pipeline Server API\n  title: Intel(R) DL Streamer Pipeline Server API\n  version: 0.0.3\nservers:\n- url: /\npaths:\n  /models:\n    get:\n      description: Return supported models\n      operationId: models_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Model'\n                type: array\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n  /pipelines:\n    get:\n      description: Return supported pipelines\n      operationId: pipelines_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Pipeline'\n                type: array\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n  /pipelines/{name}/{version}:\n    get:\n      description: Return pipeline description.\n      operationId: pipelines_name_version_get\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pipeline'\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n    post:\n      description: Start new pipeline instance.\n      operationId: pipelines_name_version_post\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelineRequest'\n        required: true\n      responses:\n        200:\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n  /pipelines/status:\n    get:\n      description: Returns all pipeline instance status.\n      operationId: pipelines_status_get_all\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PipelineInstanceStatus'\n                type: array\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n  /pipelines/{name}/{version}/{instance_id}:\n    delete:\n      description: Stop pipeline instance.\n      operationId: pipelines_name_version_instance_id_delete\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n          format: uuid\n        style: simple\n      responses:\n        200:\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n    get:\n      description: Return pipeline instance summary.\n      operationId: pipelines_name_version_instance_id_get\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n          format: uuid\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineInstanceSummary'\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n  /pipelines/{instance_id}:\n    delete:\n      description: Stop pipeline instance.\n      operationId: pipelines_instance_id_delete\n      parameters:\n      - explode: false\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n          format: uuid\n        style: simple\n      responses:\n        200:\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n    get:\n      description: Return pipeline instance summary.\n      operationId: pipelines_instance_id_get\n      parameters:\n      - explode: false\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineInstanceSummary'\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n  /pipelines/{name}/{version}/{instance_id}/status:\n    get:\n      description: Return pipeline instance status.\n      operationId: pipelines_name_version_instance_id_status_get\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineInstanceStatus'\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\n  /pipelines/status/{instance_id}:\n    get:\n      description: Return pipeline instance status.\n      operationId: pipelines_instance_id_status_get\n      parameters:\n      - explode: false\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n          format: uuid\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineInstanceStatus'\n          description: Success\n      x-openapi-router-controller: vaserving.rest_api.endpoints\ncomponents:\n  schemas:\n    AnyValue: {}\n    Pipeline:\n      example:\n        description: description\n        type: GStreamer\n        parameters:\n          key:\n            default: \"\"\n      properties:\n        type:\n          enum:\n          - GStreamer\n          - FFmpeg\n          type: string\n        description:\n          type: string\n        parameters:\n          additionalProperties:\n            $ref: '#/components/schemas/Pipeline_parameters'\n          type: object\n      required:\n      - description\n      - type\n      type: object\n    PipelineInstanceStatus:\n      example:\n        start_time: 1\n        elapsed_time: 5\n        id: 0\n        state: RUNNING\n        avg_fps: 6.027456183070403\n      properties:\n        id:\n          format: int32\n          type: integer\n        state:\n          enum:\n          - RUNNING\n          - COMPLETED\n          - ERROR\n          - ABORTED\n          type: string\n        avg_fps:\n          type: number\n        start_time:\n          description: Time in seconds since the epoch.\n          format: int32\n          type: integer\n        elapsed_time:\n          description: Elapsed time in seconds.\n          format: int32\n          type: integer\n      required:\n      - elapsed_time\n      - id\n      - start_time\n      - state\n      type: object\n    PipelineInstanceSummary:\n      example:\n        request:\n          destination: {}\n          source: {}\n          parameters: {}\n          tags: {}\n        id: 0\n        type: type\n      properties:\n        id:\n          format: int32\n          type: integer\n        request:\n          $ref: '#/components/schemas/PipelineRequest'\n        type:\n          type: string\n      required:\n      - id\n      - request\n      - type\n      type: object\n    URISource:\n      properties:\n        type:\n          enum:\n          - uri\n          type: string\n        uri:\n          format: uri\n          type: string\n        properties:\n          type: object\n        capsfilter:\n          type: string\n        postproc:\n          type: string\n      required:\n      - type\n      - uri\n      type: object\n    WebcamSource:\n      properties:\n        type:\n          enum:\n          - webcam\n          type: string\n        device:\n          type: string\n          format: path\n        properties:\n          type: object\n        capsfilter:\n          type: string\n        postproc:\n          type: string\n      required:\n      - type\n      - device\n      type: object\n    GstSource:\n      properties:\n        type:\n          enum:\n          - gst\n          type: string\n        element:\n          type: string\n        properties:\n          type: object\n        capsfilter:\n          type: string\n        postproc:\n          type: string\n      required:\n      - type\n      - element\n      type: object\n    FileDestination:\n      properties:\n        type:\n          enum:\n          - file\n          type: string\n        path:\n          format: path\n          type: string\n      required:\n      - type\n      - path\n      type: object\n    KafkaDestination:\n      properties:\n        host:\n          description: Comma seperated list of host:port to use as boostrap servers.\n          type: string\n        topic:\n          type: string\n        type:\n          enum:\n          - kafka\n          type: string\n      type: object\n    MQTTDestination:\n      properties:\n        host:\n          description: host:port to use as mqtt server.\n          type: string\n        topic:\n          type: string\n        type:\n          enum:\n          - mqtt\n          type: string\n      type: object\n    RTSPDestination:\n      properties:\n        type:\n          enum:\n          - rtsp\n          type: string\n        path:\n          type: string\n          minLength: 1\n          pattern: \"^[a-zA-Z0-9][a-zA-Z0-9_/-]*[a-zA-Z0-9]$\"\n      required:\n        - type\n        - path\n      type: object\n    FrameDestination:\n      discriminator:\n        propertyName: type\n      oneOf:\n        - $ref: '#/components/schemas/RTSPDestination'\n      type: object\n    FrameAndMetadataDestination:\n      anyOf:\n        - type: object\n          properties:\n            frame:\n              $ref: '#/components/schemas/FrameDestination'\n          required:\n            - frame\n        - type: object\n          properties:\n            metadata:\n              $ref: '#/components/schemas/MetadataDestination'\n          required:\n            - metadata\n    MetadataDestination:\n      discriminator:\n        propertyName: type\n      oneOf:\n        - $ref: '#/components/schemas/KafkaDestination'\n        - $ref: '#/components/schemas/MQTTDestination'\n        - $ref: '#/components/schemas/FileDestination'\n      type: object\n    PipelineRequest:\n      example:\n        source:\n          type: uri\n          uri: file:///root/video-examples/example.mp4\n        parameters: {}\n        tags: {}\n      properties:\n        source:\n          discriminator:\n            propertyName: type\n          oneOf:\n          - $ref: '#/components/schemas/URISource'\n          - $ref: '#/components/schemas/GstSource'\n          - $ref: '#/components/schemas/WebcamSource'\n          type: object\n        destination:\n          oneOf:\n          - $ref: '#/components/schemas/MetadataDestination'\n          - $ref: '#/components/schemas/FrameAndMetadataDestination'\n          type: object\n        tags:\n          description: Client specified values. Returned with results.\n          type: object\n        parameters:\n          description: Pipeline specific parameters.\n          type: object\n      type: object\n    Model:\n      example:\n        name: name\n        description: description\n        type: IntelDLDT\n        version: 0\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n        type:\n          enum:\n          - IntelDLDT\n          type: string\n        description:\n          type: string\n      required:\n      - name\n      - type\n      - version\n      type: object\n    Pipeline_parameters:\n      example:\n        default: {}\n      properties:\n        default: {}\n"
		}
	},
	"Error": "buildIR: make ir: path \"/pipelines\": get: responses: 200: contents: application/json: schema: save schema types: save referenced type: reference \"#/components/schemas/Pipeline_parameters\" type name conflict: \"PipelineParameters\""
}