{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nandium/RouteMaker"
		},
		"file": {
			"name": "swagger-1.2.0.json",
			"size": 0,
			"path": "docs/swagger-1.2.0.json",
			"byteSize": 46919,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"servers\": [\n    {\n      \"description\": \"SwaggerHub API Auto Mocking\",\n      \"url\": \"https://virtserver.swaggerhub.com/yolo-bouldering/routemaker/1.1.2\"\n    }\n  ],\n  \"info\": {\n    \"description\": \"This is the RouteMaker API\",\n    \"version\": \"1.2.0\",\n    \"title\": \"RouteMaker API\",\n    \"contact\": {\n      \"email\": \"yarkhinephyo@gmail.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"predict\",\n      \"description\": \"Serves Yolov4-tiny model to predict climbing holds\"\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Provides authentication and authorization via AWS Cognito\"\n    },\n    {\n      \"name\": \"route\",\n      \"description\": \"Provides functions related to gyms and climbing routes\"\n    }\n  ],\n  \"paths\": {\n    \"/v1/predict\": {\n      \"post\": {\n        \"tags\": [\n          \"predict\"\n        ],\n        \"summary\": \"Gets bounding boxes\",\n        \"description\": \"Gets bounding boxes predicted by the YOLOv4 model. The dimensions are rescaled to given `width`.\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Image\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"bounding boxes for image\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BoundingBox\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/signup\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Signs up and sends verification email\",\n        \"description\": \"Note: username has to be unique { Message: UserExistsException }.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignupRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"sign up success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SignupResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/confirm\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Confirms sign up with verification\",\n        \"description\": \"Note: Verification code expires after 24 hours { Message: ExpiredCodeException }.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Confirmation\"\n              }\n            }\n          },\n          \"description\": \"Confirmation name and code\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"confirmation success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Confirmation success\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/login\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs in and returns access token\",\n        \"description\": \"To retrieve the AccessToken for requesting authorized routes, the IdToken which contains user details, and the RefreshToken to refresh the AccessToken after 24 hours.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          },\n          \"description\": \"Confirmation name and code\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"sign in success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccessToken\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/refreshToken\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Refreshes user's access token\",\n        \"description\": \"RefreshToken itself expires after 365 days.\",\n        \"requestBody\": {\n          \"description\": \"Refresh token\",\n          \"content\": {\n            \"application/json:\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"refreshToken\": {\n                    \"format\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"refresh token success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccessTokenRefreshed\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/NotAuthorizedException\"\n          }\n        }\n      }\n    },\n    \"/v1/user/resendCode\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Resends confirmation code for email\",\n        \"description\": \"Resends email verification code to be used together with `/user/confirm`.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json:\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"format\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"resend code success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Resend code success\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/forgotPassword\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Sends password reset token to email\",\n        \"description\": \"Sends a token to reset the password together with `/user/resetPassword`.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json:\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"format\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Request password reset success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ForgotPasswordResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/resetPassword\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Resets password with token\",\n        \"description\": \"Resets the password together with a code emailed from `/user/forgotPassword`.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json:\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"password reset success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Password reset success\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/logout\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out and invalidates access token\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"sign out success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Sign out success\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/user/disable\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Disables a user as admin\",\n        \"description\": \"Disables the user if the AccessToken is authorized as an admin role.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json:\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"format\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"disable user success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Disable user success\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/report\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Report a user with reason\",\n        \"description\": \"Notifies the related support channels for the application.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json:\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ReportUserRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"report user success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Report user success\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/user/delete\": {\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Deletes cognito user\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"delete success\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/route/new\": {\n      \"post\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Create new route by saving to S3 bucket\",\n        \"description\": \"This operation is only allowed if the gym exists in the database.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateRouteRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"create route success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateRouteResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/route/details\": {\n      \"post\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Get photo, votes, grades, comments of one route\",\n        \"description\": \"Returns slightly different data depending on if authorization header is provided.\\nIncluding the Bearer Token will check if the user has voted, graded, reported the route. The default values are false.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RouteIdentifier\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"get route details success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RouteDetailsResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/route/details/toggleUpvote\": {\n      \"post\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Toggle upvote for a route\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RouteIdentifier\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"toggle upvote route success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToggleUpvoteResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/route/details/grade\": {\n      \"post\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Assign grade to route\",\n        \"description\": \"The route owner's grading and the public's grading are handled differently in the backend.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RouteGradeIdentifier\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"grade route success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GradeRouteResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/route/details/comment\": {\n      \"post\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Add a new comment\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RouteCommentIdentifier\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"comment success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddCommentResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Delete a comment\",\n        \"description\": \"Permitted for comment poster, route owner, and admins.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"description\": \"username of routeowner\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"createdAt\",\n            \"description\": \"creation datetime of route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"commentUsername\",\n            \"description\": \"username of the particular comment\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"timestamp\",\n            \"description\": \"timestamp of route in unix time\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"comment success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Delete comment success\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/route/details/report\": {\n      \"post\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Report route\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RouteIdentifier\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"report route success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Report route success\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/route/all\": {\n      \"get\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Get routes by gyms\",\n        \"description\": \"Returns slightly different data depending on if authorization header is provided. Including the Bearer Token will check if the user has voted. The default value is false.\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"gymLocation\",\n            \"description\": \"search string for gym location\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"query routes by gym success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GymRoutesQueried\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/route/user\": {\n      \"get\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Get routes by users\",\n        \"description\": \"Returns slightly different data depending on if authorization header is provided. Including the Bearer Token will check if the user has voted. The default value is false.\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"query routes by user success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserRoutesQueried\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/route/gym/country\": {\n      \"get\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Query gyms by country\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"countryCode\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"query gyms success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetGymsByCountryResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/route/gym/request\": {\n      \"post\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Request to add gym\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestGymRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"request gym success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Request gym success\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/v1/route\": {\n      \"delete\": {\n        \"tags\": [\n          \"route\"\n        ],\n        \"summary\": \"Delete a particular route\",\n        \"description\": \"Permitted for that particular route's owner as well as admins.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"createdAt\",\n            \"description\": \"creation datetime of route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"description\": \"username of route owner\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"delete route success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Message\"\n                  ],\n                  \"properties\": {\n                    \"Message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Delete route success\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Image\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"width\",\n          \"image\"\n        ],\n        \"properties\": {\n          \"width\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"description\": \"width to rescale to\"\n          },\n          \"image\": {\n            \"type\": \"string\",\n            \"format\": \"binary\",\n            \"description\": \"JPEG image\"\n          }\n        }\n      },\n      \"Box\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"x\",\n          \"y\",\n          \"w\",\n          \"h\",\n          \"confidence\",\n          \"class\"\n        ],\n        \"properties\": {\n          \"x\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 5\n          },\n          \"y\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 6\n          },\n          \"w\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 10\n          },\n          \"h\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 11\n          },\n          \"confidence\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 11\n          },\n          \"class\": {\n            \"type\": \"string\",\n            \"example\": \"hold\"\n          }\n        }\n      },\n      \"BoundingBox\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"boxes\",\n          \"height\",\n          \"width\"\n        ],\n        \"properties\": {\n          \"boxes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Box\"\n            }\n          },\n          \"width\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 10\n          },\n          \"height\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 11\n          }\n        }\n      },\n      \"SignupRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"email\",\n          \"password\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"y**@g**.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          }\n        }\n      },\n      \"SignupResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Destination\",\n          \"DeliveryMedium\",\n          \"AttributeName\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Sign up success\"\n          },\n          \"Destination\": {\n            \"type\": \"string\",\n            \"example\": \"y***@g***.com\"\n          },\n          \"DeliveryMedium\": {\n            \"type\": \"string\",\n            \"example\": \"EMAIL\"\n          },\n          \"AttributeName\": {\n            \"type\": \"string\",\n            \"example\": \"email\"\n          }\n        }\n      },\n      \"Confirmation\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"code\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"code\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LoginRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"password\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          }\n        }\n      },\n      \"ForgotPasswordResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Destination\",\n          \"DeliveryMedium\",\n          \"AttributeName\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Request password reset success\"\n          },\n          \"Destination\": {\n            \"type\": \"string\",\n            \"example\": \"y***@g***.com\"\n          },\n          \"DeliveryMedium\": {\n            \"type\": \"string\"\n          },\n          \"AttributeName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResetPasswordRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"password\",\n          \"code\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          },\n          \"code\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ReportUserRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"reason\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"reason\": {\n            \"type\": \"string\",\n            \"pattern\": \"^[a-zA-Z0-9 ]*$\",\n            \"maxLength\": 20\n          }\n        }\n      },\n      \"AccessToken\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"AccessToken\",\n          \"ExpiresIn\",\n          \"TokenType\",\n          \"RefreshToken\",\n          \"IdToken\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Sign in success\"\n          },\n          \"AccessToken\": {\n            \"type\": \"string\"\n          },\n          \"ExpiresIn\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"TokenType\": {\n            \"type\": \"string\",\n            \"example\": \"Bearer\"\n          },\n          \"RefreshToken\": {\n            \"type\": \"string\"\n          },\n          \"IdToken\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AccessTokenRefreshed\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"AccessToken\",\n          \"ExpiresIn\",\n          \"TokenType\",\n          \"IdToken\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Refresh token success\"\n          },\n          \"AccessToken\": {\n            \"type\": \"string\"\n          },\n          \"ExpiresIn\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"TokenType\": {\n            \"type\": \"string\",\n            \"example\": \"Bearer\"\n          },\n          \"IdToken\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CreateRouteRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"countryCode\",\n          \"expiredTime\",\n          \"routeName\",\n          \"gymLocation\",\n          \"ownerGrade\",\n          \"routePhoto\"\n        ],\n        \"properties\": {\n          \"countryCode\": {\n            \"type\": \"string\",\n            \"example\": \"SGP\",\n            \"maxLength\": 3\n          },\n          \"expiredTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"routeName\": {\n            \"type\": \"string\",\n            \"maxLength\": 20,\n            \"pattern\": \"^[ -~]+$\"\n          },\n          \"gymLocation\": {\n            \"type\": \"string\",\n            \"example\": \"1.314631906100423, 103.85734340244836\"\n          },\n          \"ownerGrade\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"routePhoto\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"GradeSubmission\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"email\",\n          \"grade\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"grade\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"Comment\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"comment\",\n          \"timestamp\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"yarkhinephyo\"\n          },\n          \"comment\": {\n            \"type\": \"string\",\n            \"maxLength\": 150,\n            \"pattern\": \"^[ -~]+$\"\n          },\n          \"timestamp\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 1623466053\n          }\n        }\n      },\n      \"CreateRouteItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"createdAt\",\n          \"expiredTime\",\n          \"routeName\",\n          \"gymLocation\",\n          \"countryCode\",\n          \"routeURL\",\n          \"ownerGrade\",\n          \"publicGrade\",\n          \"publicGradeSubmissions\",\n          \"upvotes\",\n          \"reports\",\n          \"commentCount\",\n          \"comments\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"example\": \"\"\n          },\n          \"expiredTime\": {\n            \"type\": \"string\"\n          },\n          \"routeName\": {\n            \"type\": \"string\"\n          },\n          \"gymLocation\": {\n            \"type\": \"string\"\n          },\n          \"countryCode\": {\n            \"type\": \"string\"\n          },\n          \"routeURL\": {\n            \"type\": \"string\"\n          },\n          \"ownerGrade\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"publicGrade\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"publicGradeSubmissions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GradeSubmission\"\n            }\n          },\n          \"upvotes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"reports\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"commentCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"comments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Comment\"\n            }\n          }\n        }\n      },\n      \"CreateRouteResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Item\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Create route success\"\n          },\n          \"Item\": {\n            \"$ref\": \"#/components/schemas/CreateRouteItem\"\n          }\n        }\n      },\n      \"RouteIdentifier\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"createdAt\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"yarkhinephyo\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"RouteItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"createdAt\",\n          \"expiredTime\",\n          \"routeName\",\n          \"gymLocation\",\n          \"countryCode\",\n          \"routeURL\",\n          \"ownerGrade\",\n          \"publicGrade\",\n          \"voteCount\",\n          \"comments\",\n          \"hasVoted\",\n          \"hasReported\",\n          \"graded\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"yarkhinephyo\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"example\": \"2021-05-01T09:00:34.516Z\"\n          },\n          \"expiredTime\": {\n            \"type\": \"string\",\n            \"example\": \"2021-05-01T09:00:34.516Z\"\n          },\n          \"routeName\": {\n            \"type\": \"string\",\n            \"example\": \"My v2 route\"\n          },\n          \"gymLocation\": {\n            \"type\": \"string\",\n            \"example\": \"1.3430693085444936, 103.77586270905111\"\n          },\n          \"countryCode\": {\n            \"type\": \"string\"\n          },\n          \"routeURL\": {\n            \"type\": \"string\"\n          },\n          \"ownerGrade\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"publicGrade\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"voteCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"comments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Comment\"\n            }\n          },\n          \"hasVoted\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          },\n          \"hasReported\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          },\n          \"graded\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          }\n        }\n      },\n      \"RouteDetailsResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Item\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Get route details success\"\n          },\n          \"Item\": {\n            \"$ref\": \"#/components/schemas/RouteItem\"\n          }\n        }\n      },\n      \"RouteGradeIdentifier\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"createdAt\",\n          \"grade\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"yarkhinephyo\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"grade\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          }\n        }\n      },\n      \"GradeItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"publicGrade\",\n          \"ownerGrade\"\n        ],\n        \"properties\": {\n          \"publicGrade\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"ownerGrade\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          }\n        }\n      },\n      \"ToggleUpvoteResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Item\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Toggle upvote route success\"\n          },\n          \"Item\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"hasVoted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      },\n      \"GradeRouteResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Item\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Grade route success\"\n          },\n          \"Item\": {\n            \"$ref\": \"#/components/schemas/GradeItem\"\n          }\n        }\n      },\n      \"RouteCommentIdentifier\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"createdAt\",\n          \"comment\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"yarkhinephyo\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"comment\": {\n            \"type\": \"string\",\n            \"maxLength\": 150,\n            \"pattern\": \"^[ -~]+$\"\n          }\n        }\n      },\n      \"AddCommentResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Item\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Comment route success\"\n          },\n          \"Item\": {\n            \"$ref\": \"#/components/schemas/Comment\"\n          }\n        }\n      },\n      \"GymRoute\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"createdAt\",\n          \"routeName\",\n          \"gymLocation\",\n          \"publicGrade\",\n          \"voteCount\",\n          \"commentCount\",\n          \"hasVoted\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"routeName\": {\n            \"type\": \"string\"\n          },\n          \"gymLocation\": {\n            \"type\": \"string\"\n          },\n          \"publicGrade\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"voteCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"commentCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"hasVoted\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          }\n        }\n      },\n      \"UserRoute\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"createdAt\",\n          \"routeName\",\n          \"gymLocation\",\n          \"countryCode\",\n          \"gymName\",\n          \"publicGrade\",\n          \"voteCount\",\n          \"commentCount\",\n          \"hasVoted\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"routeName\": {\n            \"type\": \"string\"\n          },\n          \"gymLocation\": {\n            \"type\": \"string\"\n          },\n          \"countryCode\": {\n            \"type\": \"string\"\n          },\n          \"gymName\": {\n            \"type\": \"string\"\n          },\n          \"publicGrade\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"voteCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"commentCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"hasVoted\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          }\n        }\n      },\n      \"GymRoutesQueried\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Items\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Query routes by gym success\"\n          },\n          \"Items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GymRoute\"\n            }\n          }\n        }\n      },\n      \"UserRoutesQueried\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Items\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Query routes by user success\"\n          },\n          \"Items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UserRoute\"\n            }\n          }\n        }\n      },\n      \"Gym\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"countryCode\",\n          \"gymLocation\",\n          \"gymName\"\n        ],\n        \"properties\": {\n          \"countryCode\": {\n            \"type\": \"string\",\n            \"example\": \"SGP\"\n          },\n          \"gymLocation\": {\n            \"type\": \"string\"\n          },\n          \"gymName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"GetGymsByCountryResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"Message\",\n          \"Items\"\n        ],\n        \"properties\": {\n          \"Message\": {\n            \"type\": \"string\",\n            \"example\": \"Query gyms success\"\n          },\n          \"Items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Gym\"\n            }\n          }\n        }\n      },\n      \"RequestGymRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"countryCode\",\n          \"postal\",\n          \"gymName\"\n        ],\n        \"properties\": {\n          \"countryCode\": {\n            \"type\": \"string\",\n            \"example\": \"SGP\",\n            \"maxLength\": 3\n          },\n          \"postal\": {\n            \"type\": \"string\",\n            \"maxLength\": 12,\n            \"pattern\": \"^[ -~]+$\"\n          },\n          \"gymName\": {\n            \"type\": \"string\",\n            \"maxLength\": 30,\n            \"pattern\": \"^[ -~]+$\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    },\n    \"responses\": {\n      \"UnauthorizedError\": {\n        \"description\": \"Access token is missing or invalid\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"Message\"\n              ],\n              \"properties\": {\n                \"Message\": {\n                  \"type\": \"string\",\n                  \"example\": \"Unauthorized\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"NotAuthorizedException\": {\n        \"description\": \"Refresh token is missing or invalid\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"Message\"\n              ],\n              \"properties\": {\n                \"Message\": {\n                  \"type\": \"string\",\n                  \"example\": \"NotAuthorizedException\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "buildIR: make ir: path \"/v1/user/resetPassword\": post: requestBody: contents: filter most specific: parse content type \"application/json:\": mime: unexpected content after media subtype"
}