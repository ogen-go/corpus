{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nielsboecker/HoloRepository-Core"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "HoloStorageAccessor/api/openapi.yaml",
			"byteSize": 16707,
			"content": "openapi: 3.0.2\ninfo:\n  version: \"1.1.0\"\n  title: 'HoloStorage Accessor API'\n  description: 'API to access holograms and metadata from HoloStorage'\n\npaths:\n  /patients:\n    get:\n      summary: Mass query for patients metadata in HoloStorage\n      description: |-\n        Obtain patient information stored within HoloStorage.\n\n        Multiple IDs can be passed with the syntax `/patients?pids=id1,id2,id3,...,idx`\n\n        Mass query results will return with `ID:{result}`\n        ```\n        {\n          \"id1\": {result of id1},\n          \"id2\": {result of id2},\n          \"id3\": {}\n          ...\n        }\n        ```\n\n      parameters:\n        - $ref: '#/components/parameters/PIDQuery'\n\n      responses:\n        200:\n          description: Successful pulling of patients metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Patients'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n  /patients/{pid}:\n    get:\n      summary: Get a single patient metadata in HoloStorage\n      description: Endpoint for a singular patient lookup\n      parameters:\n        - $ref: '#/components/parameters/PIDPath'\n      responses:\n        200:\n          description: Successful pulling of the patient's metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Patient'\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n    put:\n      summary: Add or update basic patient information\n      description: |-\n        This endpoint allows you to add new patient information in HoloStorage. A new Patient will be created if PID does not exist, else it will be updated.\n\n        PID in path and request body will be checked as a means to ensure that the insertion is intended.\n      parameters:\n        - $ref: '#/components/parameters/PIDPath'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Patient'\n      responses:\n        200:\n          description: Successful modification\n        201:\n          description: Successful created\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n  /holograms:\n    get:\n      summary: Mass query for hologram metadata based on hologram ids\n      description: |-\n        Obtain hologram information stored within HoloStorage.\n\n        Multiple IDs can be passed with either syntax:\n\n        `/holograms?hids=id1,id2,id3,...,idx` or `/holograms?pids=id1,id2,id3,...,idx`\n\n        **Note: You can only use either hid or pid**\n\n        Additional filtering for CreationMode can be done with `\u0026creationmode=...`\n\n        Regardless of `pid` or `hid` queries, mass query results will return a format of `ID:[{result}]`\n        ```\n        {\n          \"id1\": [{result1 of id1}, {result2 of id1}],\n          \"id2\": [{result1 of id2}],\n          \"id3\": []\n          ...\n        }\n        ```\n\n      parameters:\n        - $ref: '#/components/parameters/HIDQuery'\n        - $ref: '#/components/parameters/PIDQuery'\n        - $ref: '#/components/parameters/CreationQuery'\n\n      responses:\n        200:\n          description: Successfully found all hologram metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Holograms'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n    post:\n      summary: 'Upload hologram to HoloStorage'\n      description: 'Hologram and associated metadata to be uploaded onto HoloStorage. The UUID will be generated automatically by the accessor'\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/HologramUploadData'\n      responses:\n        201:\n          description: Successfully created hologram\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Hologram'\n        400:\n          description: Unaccepted input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n  /holograms/{hid}:\n    get:\n      summary: Get a single hologram metadata based on the hologram id\n      description: Endpoint for a single hologram lookup\n      parameters:\n        - $ref: '#/components/parameters/HIDPath'\n      responses:\n        200:\n          description: Successfully found all hologram metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Holograms'\n        400:\n          description: Unaccepted input\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n    delete:\n      summary: Delete a hologram in HoloStorage\n      description: Delete holograms based on ID\n      parameters:\n        - $ref: '#/components/parameters/HIDPath'\n      responses:\n        200:\n          description: Successful deletion of hologram\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n  /holograms/{hid}/download:\n    get:\n      summary: Download holograms models based on the hologram id\n      description: Initiates download operation for the specified hid\n      parameters:\n        - $ref: '#/components/parameters/HIDPath'\n      responses:\n        200:\n          description: Download a single hologram based on id\n          content:\n            model/gltf-binary:\n              schema:\n                type: string\n                format: binary\n                example: '[file content goes here]'\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n  /authors:\n    get:\n      summary: Mass query for author metadata in HoloStorage\n      description: |-\n        Obtain author information stored within HoloStorage.\n\n        Multiple IDs can be passed with the syntax `/authors?aids=id1,id2,id3,...,idx`\n\n        Mass query results will return with `ID:{result}`\n        ```\n        {\n          \"id1\": {result of id1},\n          \"id2\": {result of id2},\n          \"id3\": {}\n          ...\n        }\n        ```\n\n      parameters:\n        - $ref: '#/components/parameters/AIDQuery'\n\n      responses:\n        200:\n          description: Successful getting all author metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authors'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n  /authors/{aid}:\n    get:\n      summary: Get a single author metadata in HoloStorage\n      description: Endpoint for a singular author lookup\n      parameters:\n        - $ref: '#/components/parameters/AIDPath'\n      responses:\n        200:\n          description: Successful getting author metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Author'\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n    put:\n      summary: Add or update author information\n      description: |-\n        This endpoint allows you to add new author information in HoloStorage. A new author will be created if AID does not exist, else it will be updated.\n\n        AID in path and request body will be checked as a means to ensure that the insertion is intended.\n      parameters:\n        - $ref: '#/components/parameters/AIDPath'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Author'\n      responses:\n        200:\n          description: Successful modification\n        201:\n          description: Successful creation\n        500:\n          $ref: \"#/components/responses/InternalError\"\n\n\ncomponents:\n  responses:\n    NotFound:\n      description: Requested data is not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Invalid usage of message parameters\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalError:\n      description: Internal error encountered\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n  parameters:\n    PIDQuery:\n      in: query\n      name: pids\n      schema:\n        type: string\n        format: uuid\n        example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673\n      style: form\n      explode: false\n      description: The UUID assigned to a patient\n\n    PIDPath:\n      in: path\n      name: pid\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673\n      description: The UUID assigned to a patient\n\n    HIDQuery:\n      in: query\n      name: hids\n      schema:\n        type: string\n        format: uuid\n        example: 09462b7a-82d5-427e-b843-c500d342245a\n      style: form\n      explode: false\n      description: The UUID assigned to a hologram\n\n    HIDPath:\n      in: path\n      name: hid\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 09462b7a-82d5-427e-b843-c500d342245a\n      description: The UUID assigned to a hologram\n\n    CreationQuery:\n      in: query\n      name: creationmode\n      required: false\n      schema:\n        type: string\n        enum: [GENERATE_FROM_IMAGING_STUDY, UPLOAD_EXISTING_MODEL, FROM_DEPTHVISOR_RECORDING]\n        example: GENERATE_FROM_IMAGING_STUDY\n      style: form\n      explode: false\n      description: CreationMode assigned to a hologram\n\n    AIDQuery:\n      in: query\n      name: aids\n      schema:\n        type: string\n        format: uuid\n        example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673\n      style: form\n      explode: false\n      description: The UUID assigned to an author\n\n    AIDPath:\n      in: path\n      name: aid\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673\n      description: The UUID assigned to an author\n\n  schemas:\n    PersonName:\n      description: Components that make up the name of a person\n      type: object\n      properties:\n        full:\n          type: string\n          example: Marvin Portebello\n        title:\n          type: string\n          example: Mr\n        given:\n          type: string\n          example: Marvin\n        family:\n          type: string\n          example: Portebello\n\n    Patients:\n      title: Patients\n      description: An array of patient metadata\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Patient'\n\n    Patient:\n      title: Patient Info\n      description: Metadata of a single patient\n      type: object\n      properties:\n        pid:\n          type: string\n          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673\n        gender:\n          type: string\n          example: male\n          enum: [male, female, unknown, other]\n        birthDate:\n          type: string\n          format: date\n        name:\n          $ref: '#/components/schemas/PersonName'\n\n    Holograms:\n      description: An array of hologram metadata\n      type: object\n      additionalProperties:\n        type: array\n        items:\n          $ref: '#/components/schemas/Hologram'\n\n    HologramUploadData:\n      title: Hologram Upload\n      description: Data structure to upload holograms to HoloStorage\n      type: object\n      properties:\n        title:\n          type: string\n          description: Summary of the hologram\n          example: Malformed hip bones\n        description:\n          type: string\n          description: Further elaborations on the hologram with additional details\n          example: Malformed hip bones on an 8 year old child suffering from a birth defect\n        contentType:\n          type: string\n          description: The mimetype of the hologram file\n          example: model/gltf-binary\n        fileSizeInKb:\n          type: integer\n          description: The size of the hologram in KB\n          example: 5120\n        bodySite:\n          type: string\n          description: The body part the hologram represents\n          example: hips\n        dateOfImaging:\n          type: string\n          format: date-time\n          description: The date when the imaging was done\n          example: '2017-07-15T15:20:25Z'\n        creationDate:\n          type: string\n          format: date-time\n          description: The date the hologram was generated\n          example: '2017-07-21T17:32:28Z'\n        creationMode:\n          type: string\n          enum: [GENERATE_FROM_IMAGING_STUDY, UPLOAD_EXISTING_MODEL, FROM_DEPTHVISOR_RECORDING]\n          description: The way the hologram was created\n          example: GENERATE_FROM_IMAGING_STUDY\n        creationDescription:\n          type: string\n          description: The description associated with the creation method of the hologram\n          example: By bone segmentation pipeline with HU threshold 750\n        hologramFile:\n          type: string\n          format: binary\n          example: [file content goes here]\n          description: The raw binary of the hologram model\n        author:\n          $ref: '#/components/schemas/Author'\n        patient:\n          $ref: '#/components/schemas/Patient'\n\n    Hologram:\n      title: Hologram info\n      description: Metadata of a hologram\n      type: object\n      properties:\n        hid:\n          type: string\n          description: UUID of a hologram\n          example: 09462b7a-82d5-427e-b843-c500d342245a\n        title:\n          type: string\n          description: Summary of the hologram\n          example: Malformed hip bones\n        description:\n          type: string\n          description: Further elaborations on the hologram with additional details\n          example: Malformed hip bones on an 8 year old child suffering from a birth defect\n        contentType:\n          type: string\n          description: The mimetype of the hologram file\n          example: model/gltf-binary\n        fileSizeInKb:\n          type: integer\n          description: The size of the hologram in KB\n          example: 5120\n        bodySite:\n          type: string\n          description: The body part the hologram represents\n          example: hips\n        dateOfImaging:\n          type: string\n          format: date-time\n          description: The date when the imaging was done\n          example: '2017-07-15T15:20:25Z'\n        creationDate:\n          type: string\n          format: date-time\n          description: The date the hologram was generated\n          example: '2017-07-21T17:32:28Z'\n        creationMode:\n          type: string\n          enum: [GENERATE_FROM_IMAGING_STUDY, UPLOAD_EXISTING_MODEL, FROM_DEPTHVISOR_RECORDING]\n          description: The way the hologram was created\n          example: GENERATE_FROM_IMAGING_STUDY\n        creationDescription:\n          type: string\n          description: The description associated with the creation method of the hologram\n          example: By bone segmentation pipeline with HU threshold 750\n        aid:\n          type: string\n          description: The UUID of the author of this hologram\n          example: 02705d77-1de1-41bb-98fb-d8cd09f41cb6\n        pid:\n          type: string\n          description: The UUID of the patient associated with this hologram\n          example: 2321e0b8-99ea-4961-aab7-b65fbc8f9673\n\n    Authors:\n      title: Authors\n      description: An array of author metadata\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Author'\n\n    Author:\n      title: Author Info\n      description: Who authored the Hologram\n      type: object\n      properties:\n        aid:\n          type: string\n          description: The author ID\n          example: 02705d77-1de1-41bb-98fb-d8cd09f41cb6\n        name:\n          $ref: '#/components/schemas/PersonName'\n\n    Error:\n      title: Error Response\n      description: Error responses\n      type: object\n      properties:\n        errorCode:\n          type: string\n        errorMessage:\n          type: string\n",
			"canonicalURL": "/github.com/nielsboecker/HoloRepository-Core@a04ffd3983a47b24d08373d59560dbb8786ec472/-/blob/HoloStorageAccessor/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nielsboecker/HoloRepository-Core/blob/a04ffd3983a47b24d08373d59560dbb8786ec472/HoloStorageAccessor/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/holograms\": post: requestBody: contents: media: \"multipart/form-data\": form parameter \"author\": field \"Name\": nested objects not allowed"
}