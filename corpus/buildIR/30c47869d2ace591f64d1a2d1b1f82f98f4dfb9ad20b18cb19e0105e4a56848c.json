{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-provisioningservices-iotdps-2017-11-15-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-provisioningservices-iotdps-2017-11-15-swagger.yaml",
			"byteSize": 78046,
			"content": "openapi: 3.0.0\ninfo:\n  description: API for using the Azure IoT Hub Device Provisioning Service features.\n  title: iotDpsClient\n  version: 2017-11-15\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-ms-code-generation-settings:\n    host: management.azure.com\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/provisioningservices/resource-manager/Microsoft.Devices/stable/2017-11-15/iotdps.json\n      version: \"2.0\"\n  x-preferred: true\n  x-providerName: azure.com\n  x-serviceName: provisioningservices-iotdps\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths:\n  /providers/Microsoft.Devices/operations:\n    get:\n      description: Lists all of the available Microsoft.Devices REST API operations.\n      operationId: Operations_List\n      parameters:\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: OK. The request has succeeded.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationListResult\"\n              examples:\n                DPSOperations:\n                  $ref: \"#/components/examples/DPSOperations\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      tags:\n        - Operations\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkProvisioningServiceNameAvailability\":\n    post:\n      description: Check if a provisioning service name is available. This will validate if\n        the name is syntactically valid and if the name is usable\n      operationId: IotDpsResource_CheckProvisioningServiceNameAvailability\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - $ref: \"#/components/parameters/api-version\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationInputs\"\n        description: Set the name parameter in the OperationInputs structure to the name of\n          the provisioning service to check.\n        required: true\n      responses:\n        \"200\":\n          description: This is a synchronous operation. The body contains a JSON-serialized\n            response that specifies whether the provisioning service name is\n            available. If the name is not available, the body contains the\n            reason.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameAvailabilityInfo\"\n              examples:\n                DPSCheckName:\n                  $ref: \"#/components/examples/DPSCheckName\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Check if a provisioning service name is available.\n      tags:\n        - POST\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices\":\n    get:\n      description: List all the provisioning services for a given subscription id.\n      operationId: IotDpsResource_ListBySubscription\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: This is a synchronous operation. The body contains a JSON-serialized\n            array of the metadata from all the provisioning services in the\n            subscription.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningServiceDescriptionListResult\"\n              examples:\n                DPSListBySubscription:\n                  $ref: \"#/components/examples/DPSListBySubscription\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Get all the provisioning services in a subscription.\n      tags:\n        - GET\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices\":\n    get:\n      description: Get a list of all provisioning services in the given resource group.\n      operationId: IotDpsResource_ListByResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSListByResourceGroup:\n              value: myResourceGroup\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: List of provisioning services in the resource group.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningServiceDescriptionListResult\"\n              examples:\n                DPSListByResourceGroup:\n                  $ref: \"#/components/examples/DPSListByResourceGroup\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      tags:\n        - GET\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}\":\n    delete:\n      description: Deletes the Provisioning Service.\n      operationId: IotDpsResource_Delete\n      parameters:\n        - description: Name of provisioning service to delete.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSDelete:\n              value: myFirstProvisioningService\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSDelete:\n              value: myResourceGroup\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: This is returned as a response to the status polling request for the\n            delete operation. The body contains the resource representation that\n            indicates a transitional provisioning state.\n        \"202\":\n          description: The provisioning service resource provider always returns a 202\n            Accepted status code with valid Location and Retry-After headers.\n            The resource provider also sets the Azure-AsyncOperation header with\n            a URL that points to the operation resource for this operation.\n            Subsequent GET attempts on the resource after a DELETE operation\n            return a resource representation that indicates a transitional\n            provisioning state (such as Terminating). To retrieve the status of\n            the operation, a client can either poll the URL returned in the\n            Location header after the Retry-After interval, get the provisioning\n            service status directly, or query the operation resource.\n        \"204\":\n          description: Once the long running delete operation completes successfully, a 204\n            No Content status code is returned when the status polling request\n            finds the provisioning service metadata in the service and the\n            status of the delete operation is set to a completed state.\n        \"404\":\n          description: After the long running delete operation completes successfully, a\n            404 Not Found is returned when the status polling request no longer\n            finds the provisioning service metadata in the service.\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Delete the Provisioning Service\n      tags:\n        - DELETE\n      x-ms-long-running-operation: true\n    get:\n      description: Get the metadata of the provisioning service without SAS keys.\n      operationId: IotDpsResource_Get\n      parameters:\n        - description: Name of the provisioning service to retrieve.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGet:\n              value: myFirstProvisioningService\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group name.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGet:\n              value: myResourceGroup\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: Provisioning service description with no keys is included in the\n            response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningServiceDescription\"\n              examples:\n                DPSGet:\n                  $ref: \"#/components/examples/DPSGet\"\n        default:\n          description: Default error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Get the non-security related metadata of the provisioning service.\n      tags:\n        - GET\n    patch:\n      description: Update an existing provisioning service's tags. to update other fields\n        use the CreateOrUpdate method\n      operationId: IotDpsResource_Update\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSPatch:\n              value: myResourceGroup\n        - description: Name of provisioning service to create or update.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSPatch:\n              value: myFirstProvisioningService\n        - $ref: \"#/components/parameters/api-version\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagsResource\"\n        description: Updated tag information to set into the provisioning service instance.\n        required: true\n      responses:\n        \"200\":\n          description: Provisioning Service was successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningServiceDescription\"\n              examples:\n                DPSPatch:\n                  $ref: \"#/components/examples/DPSPatch\"\n      summary: Update an existing provisioning service's tags.\n      tags:\n        - PATCH\n      x-ms-long-running-operation: true\n    put:\n      description: Create or update the metadata of the provisioning service. The usual\n        pattern to modify a property is to retrieve the provisioning service\n        metadata and security metadata, and then combine them with the modified\n        values in a new body to update the provisioning service.\n      operationId: IotDpsResource_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSCreate:\n              value: myResourceGroup\n        - description: Name of provisioning service to create or update.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSCreate:\n              value: myFirstProvisioningService\n        - $ref: \"#/components/parameters/api-version\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProvisioningServiceDescription\"\n        description: Description of the provisioning service to create or update.\n        required: true\n      responses:\n        \"200\":\n          description: The body contains all the non-security properties of the\n            provisioning service. Security-related properties are set to null.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningServiceDescription\"\n              examples:\n                DPSCreate:\n                  $ref: \"#/components/examples/DPSCreate\"\n        \"201\":\n          description: This is a long running operation. The operation returns a 201 if the\n            validation is complete. The response includes an\n            Azure-AsyncOperation header that contains a status URL. Clients are\n            expected to poll the status URL for the status of the operation. If\n            successful, the operation returns HTTP status code of 201 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningServiceDescription\"\n              examples:\n                DPSCreate:\n                  $ref: \"#/components/examples/DPSCreate\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Create or update the metadata of the provisioning service.\n      tags:\n        - PUT\n      x-ms-long-running-operation: true\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates\":\n    get:\n      description: Get all the certificates tied to the provisioning service.\n      operationId: DpsCertificates_List\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Name of resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetCertificates:\n              value: myResourceGroup\n        - description: Name of provisioning service to retrieve certificates for.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetCertificates:\n              value: myFirstProvisioningService\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: List of certificate descriptions in a JSON-serialized array.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateListDescription\"\n              examples:\n                DPSGetCertificates:\n                  $ref: \"#/components/examples/DPSGetCertificates\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      tags:\n        - GET\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}\":\n    delete:\n      description: Deletes the specified certificate assosciated with the Provisioning\n        Service\n      operationId: DpsCertificate_Delete\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSDeleteCertificate:\n              value: myResourceGroup\n        - description: ETag of the certificate\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSDeleteCertificate:\n              value: AAAAAAAADGk=\n        - description: The name of the provisioning service.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSDeleteCertificate:\n              value: myFirstProvisioningService\n        - description: This is a mandatory field, and is the logical name of the\n            certificate that the provisioning service will access by.\n          in: path\n          name: certificateName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSDeleteCertificate:\n              value: cert\n        - description: This is optional, and it is the Common Name of the certificate.\n          in: query\n          name: certificate.name\n          required: false\n          schema:\n            type: string\n        - description: Raw data within the certificate.\n          in: query\n          name: certificate.rawBytes\n          required: false\n          schema:\n            type: string\n            format: byte\n        - description: Indicates if certificate has been verified by owner of the private\n            key.\n          in: query\n          name: certificate.isVerified\n          required: false\n          schema:\n            type: boolean\n        - description: A description that mentions the purpose of the certificate.\n          in: query\n          name: certificate.purpose\n          required: false\n          x-ms-enum:\n            modelAsString: true\n            name: CertificatePurpose\n          schema:\n            type: string\n            enum:\n              - clientAuthentication\n              - serverAuthentication\n        - description: Time the certificate is created.\n          in: query\n          name: certificate.created\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Time the certificate is last updated.\n          in: query\n          name: certificate.lastUpdated\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Indicates if the certificate contains a private key.\n          in: query\n          name: certificate.hasPrivateKey\n          required: false\n          schema:\n            type: boolean\n        - description: Random number generated to indicate Proof of Possession.\n          in: query\n          name: certificate.nonce\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: OK.\n        \"204\":\n          description: No content.\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Delete the Provisioning Service Certificate.\n      tags:\n        - DELETE\n    get:\n      description: Get the certificate from the provisioning service.\n      operationId: DpsCertificate_Get\n      parameters:\n        - description: Name of the certificate to retrieve.\n          in: path\n          name: certificateName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetCertificate:\n              value: cert\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetCertificate:\n              value: myResourceGroup\n        - description: Name of the provisioning service the certificate is associated with.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetCertificate:\n              value: myFirstProvisioningService\n        - description: ETag of the certificate.\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: Metadata for the specified certificate.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateResponse\"\n              examples:\n                DPSGetCertificate:\n                  $ref: \"#/components/examples/DPSGetCertificate\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      tags:\n        - GET\n    put:\n      deprecated: false\n      description: Add new certificate or update an existing certificate.\n      operationId: DpsCertificate_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/api-version\"\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSCreateOrUpdateCertificate:\n              value: myResourceGroup\n        - description: The name of the provisioning service.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSCreateOrUpdateCertificate:\n              value: myFirstProvisioningService\n        - description: The name of the certificate create or update.\n          in: path\n          name: certificateName\n          required: true\n          schema:\n            type: string\n            maxLength: 256\n          examples:\n            DPSCreateOrUpdateCertificate:\n              value: cert\n        - description: ETag of the certificate. This is required to update an existing\n            certificate, and ignored while creating a brand new certificate.\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateBodyDescription\"\n        description: The certificate body.\n        required: true\n      responses:\n        \"200\":\n          description: If certificate already exist and update was successful, the\n            operation returns HTTP status code of 201 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateResponse\"\n              examples:\n                DPSCreateOrUpdateCertificate:\n                  $ref: \"#/components/examples/DPSCreateOrUpdateCertificate\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Upload the certificate to the provisioning service.\n      tags:\n        - PUT\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/generateVerificationCode\":\n    post:\n      description: Generate verification code for Proof of Possession.\n      operationId: DpsCertificate_GenerateVerificationCode\n      parameters:\n        - description: The mandatory logical name of the certificate, that the provisioning\n            service uses to access.\n          in: path\n          name: certificateName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGenerateVerificationCode:\n              value: cert\n        - description: ETag of the certificate. This is required to update an existing\n            certificate, and ignored while creating a brand new certificate.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGenerateVerificationCode:\n              value: AAAAAAAADGk=\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: name of resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGenerateVerificationCode:\n              value: myResourceGroup\n        - description: Name of provisioning service.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGenerateVerificationCode:\n              value: myFirstProvisioningService\n        - description: Common Name for the certificate.\n          in: query\n          name: certificate.name\n          required: false\n          schema:\n            type: string\n        - description: Raw data of certificate.\n          in: query\n          name: certificate.rawBytes\n          required: false\n          schema:\n            type: string\n            format: byte\n        - description: Indicates if the certificate has been verified by owner of the\n            private key.\n          in: query\n          name: certificate.isVerified\n          required: false\n          schema:\n            type: boolean\n        - description: Description mentioning the purpose of the certificate.\n          in: query\n          name: certificate.purpose\n          required: false\n          x-ms-enum:\n            modelAsString: true\n            name: CertificatePurpose\n          schema:\n            type: string\n            enum:\n              - clientAuthentication\n              - serverAuthentication\n        - description: Certificate creation time.\n          in: query\n          name: certificate.created\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Certificate last updated time.\n          in: query\n          name: certificate.lastUpdated\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Indicates if the certificate contains private key.\n          in: query\n          name: certificate.hasPrivateKey\n          required: false\n          schema:\n            type: boolean\n        - description: Random number generated to indicate Proof of Possession.\n          in: query\n          name: certificate.nonce\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: Generated verification code for that certificate is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerificationCodeResponse\"\n              examples:\n                DPSGenerateVerificationCode:\n                  $ref: \"#/components/examples/DPSGenerateVerificationCode\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      tags:\n        - POST\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/verify\":\n    post:\n      description: Verifies the certificate's private key possession by providing the leaf\n        cert issued by the verifying pre uploaded certificate.\n      operationId: DpsCertificate_VerifyCertificate\n      parameters:\n        - description: The mandatory logical name of the certificate, that the provisioning\n            service uses to access.\n          in: path\n          name: certificateName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSVerifyCertificate:\n              value: cert\n        - description: ETag of the certificate.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSVerifyCertificate:\n              value: AAAAAAAADGk=\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group name.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSVerifyCertificate:\n              value: myResourceGroup\n        - description: Provisioning service name.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSVerifyCertificate:\n              value: myFirstProvisioningService\n        - description: Common Name for the certificate.\n          in: query\n          name: certificate.name\n          required: false\n          schema:\n            type: string\n        - description: Raw data of certificate.\n          in: query\n          name: certificate.rawBytes\n          required: false\n          schema:\n            type: string\n            format: byte\n        - description: Indicates if the certificate has been verified by owner of the\n            private key.\n          in: query\n          name: certificate.isVerified\n          required: false\n          schema:\n            type: boolean\n        - description: Describe the purpose of the certificate.\n          in: query\n          name: certificate.purpose\n          required: false\n          x-ms-enum:\n            modelAsString: true\n            name: CertificatePurpose\n          schema:\n            type: string\n            enum:\n              - clientAuthentication\n              - serverAuthentication\n        - description: Certificate creation time.\n          in: query\n          name: certificate.created\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Certificate last updated time.\n          in: query\n          name: certificate.lastUpdated\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Indicates if the certificate contains private key.\n          in: query\n          name: certificate.hasPrivateKey\n          required: false\n          schema:\n            type: boolean\n        - description: Random number generated to indicate Proof of Possession.\n          in: query\n          name: certificate.nonce\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/api-version\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerificationCodeRequest\"\n        description: The name of the certificate\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateResponse\"\n              examples:\n                DPSVerifyCertificate:\n                  $ref: \"#/components/examples/DPSVerifyCertificate\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Verify certificate's private key possession.\n      tags:\n        - POST\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/keys/{keyName}/listkeys\":\n    post:\n      description: List primary and secondary keys for a specific key name\n      operationId: IotDpsResource_ListKeysForKeyName\n      parameters:\n        - description: Name of the provisioning service.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetKey:\n              value: myFirstProvisioningService\n        - description: Logical key name to get key-values for.\n          in: path\n          name: keyName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetKey:\n              value: testKey\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: The name of the resource group that contains the provisioning\n            service.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetKey:\n              value: myResourceGroup\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: This is a synchronous operation. The body contains a JSON-serialized\n            shared access policy, including keys, that you can use to access one\n            or more provisioning service endpoints.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SharedAccessSignatureAuthorizationRule_\\\n                  AccessRightsDescription_\"\n              examples:\n                DPSGetKey:\n                  $ref: \"#/components/examples/DPSGetKey\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Get a shared access policy by name from a provisioning service.\n      tags:\n        - POST\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listkeys\":\n    post:\n      description: List the primary and secondary keys for a provisioning service.\n      operationId: IotDpsResource_ListKeys\n      parameters:\n        - description: The provisioning service name to get the shared access keys for.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSListKeys:\n              value: myFirstProvisioningService\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: resource group name\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSListKeys:\n              value: myResourceGroup\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: This is a synchronous operation. The body contains a JSON-serialized\n            array of shared access policies, including keys, that you can use to\n            access the provisioning service endpoints.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SharedAccessSignatureAuthorizationRuleL\\\n                  istResult\"\n              examples:\n                DPSListKeys:\n                  $ref: \"#/components/examples/DPSListKeys\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Get the security metadata for a provisioning service.\n      tags:\n        - POST\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/operationresults/{operationId}\":\n    get:\n      description: Gets the status of a long running operation, such as create, update or\n        delete a provisioning service.\n      operationId: IotDpsResource_GetOperationResult\n      parameters:\n        - description: Operation id corresponding to long running operation. Use this to\n            poll for the status.\n          in: path\n          name: operationId\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetOperationResult:\n              value: MTY5OTNmZDctODI5Yy00N2E2LTkxNDQtMDU1NGIyYzY1ZjRl\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Resource group identifier.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetOperationResult:\n              value: myResourceGroup\n        - description: Name of provisioning service that the operation is running on.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetOperationResult:\n              value: myFirstProvisioningService\n        - description: Async header used to poll on the status of the operation, obtained\n            while creating the long running operation.\n          in: query\n          name: asyncinfo\n          required: true\n          schema:\n            type: string\n            default: \"true\"\n          examples:\n            DPSGetOperationResult:\n              value: \"1508265712453\"\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: The status of the long running operation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AsyncOperationResult\"\n              examples:\n                DPSGetOperationResult:\n                  $ref: \"#/components/examples/DPSGetOperationResult\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      tags:\n        - GET\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/skus\":\n    get:\n      description: Gets the list of valid SKUs and tiers for a provisioning service.\n      operationId: IotDpsResource_listValidSkus\n      parameters:\n        - description: Name of provisioning service.\n          in: path\n          name: provisioningServiceName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetValidSku:\n              value: myFirstProvisioningService\n        - $ref: \"#/components/parameters/subscriptionId\"\n        - description: Name of resource group.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n          examples:\n            DPSGetValidSku:\n              value: myResourceGroup\n        - $ref: \"#/components/parameters/api-version\"\n      responses:\n        \"200\":\n          description: This is a synchronous operation. The body contains a JSON-serialized\n            array of the valid SKUs for this provisioning service.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IotDpsSkuDefinitionListResult\"\n              examples:\n                DPSGetValidSku:\n                  $ref: \"#/components/examples/DPSGetValidSku\"\n        default:\n          description: Default error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorDetails\"\n      summary: Get the list of valid SKUs for a provisioning service.\n      tags:\n        - GET\n      x-ms-pageable:\n        nextLinkName: nextLink\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    DPSOperations:\n      value:\n        value:\n          - display:\n              description: Register the subscription for the IotHub resource provider and\n                enables the creation of IotHub resources\n              operation: Register Resource Provider\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/register/action\n          - display:\n              description: Gets the diagnostic setting for the resource\n              operation: Get Diagnostic Setting\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/IotHubs/diagnosticSettings/read\n          - display:\n              description: Creates or updates the diagnostic setting for the resource\n              operation: Set Diagnostic Setting\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/IotHubs/diagnosticSettings/write\n          - display:\n              description: Gets the available metrics for the IotHub service\n              operation: Read IotHub service metric definitions\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/IotHubs/metricDefinitions/read\n          - display:\n              description: Gets the available log definitions for the IotHub Service\n              operation: Read IotHub service log definitions\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/IotHubs/logDefinitions/read\n          - display:\n              description: Get All ResourceProvider Operations\n              operation: Get All ResourceProvider Operations\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/operations/Read\n          - display:\n              description: Check If IotHub name is available\n              operation: Check If IotHub name is available\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/checkNameAvailability/Action\n          - display:\n              description: Get subscription usage details for this provider.\n              operation: Get Subscription Usages\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/usages/Read\n          - display:\n              description: Gets the IotHub resource(s)\n              operation: Get IotHub(s)\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/Read\n          - display:\n              description: Create or update IotHub Resource\n              operation: Create or update IotHub Resource\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/Write\n          - display:\n              description: Delete IotHub Resource\n              operation: Delete IotHub Resource\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/Delete\n          - display:\n              description: Get IotHub Statistics\n              operation: Get IotHub Statistics\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/iotHubStats/Read\n          - display:\n              description: Get valid IotHub Skus\n              operation: Get valid IotHub Skus\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/skus/Read\n          - display:\n              description: Get all IotHub Keys\n              operation: Get all IotHub Keys\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/listkeys/Action\n          - display:\n              description: Get IotHub Key for the given name\n              operation: Get IotHub Key for the given name\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/iotHubKeys/listkeys/Action\n          - display:\n              description: Create EventHub Consumer Group\n              operation: Create EventHub Consumer Group\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/eventHubEndpoints/consumerGroups/Write\n          - display:\n              description: Get EventHub Consumer Group(s)\n              operation: Get EventHub Consumer Group(s)\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/eventHubEndpoints/consumerGroups/Read\n          - display:\n              description: Delete EventHub Consumer Group\n              operation: Delete EventHub Consumer Group\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/eventHubEndpoints/consumerGroups/Delete\n          - display:\n              description: Export Devices\n              operation: Export Devices\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/exportDevices/Action\n          - display:\n              description: Import Devices\n              operation: Import Devices\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/importDevices/Action\n          - display:\n              description: Get Job(s) details submitted on given IotHub\n              operation: Get the Job(s) on IotHub\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/jobs/Read\n          - display:\n              description: Get Quota Metrics\n              operation: Get Quota Metrics\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/quotaMetrics/Read\n          - display:\n              description: Test a message against all existing Routes\n              operation: Routing Rule Test All\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/routing/routes/$testall/Action\n          - display:\n              description: Test a message against a provided test Route\n              operation: Routing Rule Test Route\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/routing/routes/$testnew/Action\n          - display:\n              description: Gets the health of all routing Endpoints for an IotHub\n              operation: Get Endpoint Health\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/iotHubs/routingEndpointsHealth/Read\n          - display:\n              description: Gets the diagnostic setting for the resource\n              operation: Get Diagnostic Setting\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/ProvisioningServices/diagnosticSettings/read\n          - display:\n              description: Creates or updates the diagnostic setting for the resource\n              operation: Set Diagnostic Setting\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/ProvisioningServices/diagnosticSettings/write\n          - display:\n              description: Gets the available metrics for the DPS service\n              operation: Read DPS service metric definitions\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/ProvisioningServices/metricDefinitions/read\n          - display:\n              description: Gets the available log definitions for the DPS Service\n              operation: Read DPS service log definitions\n              provider: Microsoft Devices\n              resource: IotHubs\n            name: Microsoft.Devices/ProvisioningServices/logDefinitions/read\n          - display:\n              description: Check If Provisioning Service name is available\n              operation: Check If Provisioning Service name is available\n              provider: Microsoft Devices\n              resource: ProvisioningServives\n            name: Microsoft.Devices/checkProvisioningServiceNameAvailability/Action\n          - display:\n              description: Get Provisioning Service resource\n              operation: Get Provisioning Service resource\n              provider: Microsoft Devices\n              resource: ProvisioningServices\n            name: Microsoft.Devices/provisioningServices/Read\n          - display:\n              description: Create Provisioning Service resource\n              operation: Create Provisioning Service resource\n              provider: Microsoft Devices\n              resource: ProvisioningServices\n            name: Microsoft.Devices/provisioningServices/Write\n          - display:\n              description: Delete Provisioning Service resource\n              operation: Delete Provisioning Service resource\n              provider: Microsoft Devices\n              resource: ProvisioningServices\n            name: Microsoft.Devices/provisioningServices/Delete\n          - display:\n              description: Delete Provisioning Service resource\n              operation: Delete Provisioning Service resource\n              provider: Microsoft Devices\n              resource: ProvisioningServices\n            name: Microsoft.Devices/provisioningServices/skus/Read\n          - display:\n              description: get security related metadata\n              operation: get security related metadata\n              provider: Microsoft Devices\n              resource: ProvisioningServices\n            name: Microsoft.Devices/provisioningServices/listkeys/Action\n    DPSCheckName:\n      value:\n        message: name is valid\n        nameAvailable: true\n        reason: Invalid\n    DPSListBySubscription:\n      value:\n        value:\n          - etag: AAAAAAAADGk=\n            id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServices/myFirstProvisioningService\n            location: eastus\n            name: myFirstProvisioningService\n            properties:\n              allocationPolicy: Hashed\n              deviceProvisioningHostName: global.azure-devices-provisioning.net\n              idScope: 0ne00000012\n              serviceOperationsHostName: myFirstProvisioningService.azure-devices-provisioning.net\n              state: Active\n            sku:\n              capacity: 1\n              name: S1\n              tier: Standard\n            tags: {}\n            type: Microsoft.Devices/ProvisioningServices\n          - etag: AAAAAAAADGk=\n            id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServices/mySecondProvisioningService\n            location: eastus\n            name: mySecondProvisioningService\n            properties:\n              allocationPolicy: Hashed\n              deviceProvisioningHostName: global.azure-devices-provisioning.net\n              idScope: 0ne00000012\n              serviceOperationsHostName: myFirstProvisioningService.azure-devices-provisioning.net\n              state: Active\n            sku:\n              capacity: 1\n              name: S1\n              tier: Standard\n            tags: {}\n            type: Microsoft.Devices/ProvisioningServices\n    DPSListByResourceGroup:\n      value:\n        value:\n          - etag: AAAAAAAADGk=\n            id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServices/myFirstProvisioningService\n            location: eastus\n            name: myFirstProvisioningService\n            properties:\n              allocationPolicy: Hashed\n              deviceProvisioningHostName: global.azure-devices-provisioning.net\n              idScope: 0ne00000012\n              serviceOperationsHostName: myFirstProvisioningService.azure-devices-provisioning.net\n              state: Active\n            sku:\n              capacity: 1\n              name: S1\n              tier: Standard\n            tags: {}\n            type: Microsoft.Devices/ProvisioningServices\n          - etag: AAAAAAAADGk=\n            id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServices/mySecondProvisioningService\n            location: eastus\n            name: mySecondProvisioningService\n            properties:\n              allocationPolicy: Hashed\n              deviceProvisioningHostName: global.azure-devices-provisioning.net\n              idScope: 0ne00000012\n              serviceOperationsHostName: mySecondProvisioningService.azure-devices-provisioning.net\n              state: Active\n            sku:\n              capacity: 1\n              name: S1\n              tier: Standard\n            tags: {}\n            type: Microsoft.Devices/ProvisioningServices\n    DPSGet:\n      value:\n        etag: AAAAAAAADGk=\n        id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServices/myFirstProvisioningService\n        location: eastus\n        name: myFirstProvisioningService\n        properties:\n          allocationPolicy: Hashed\n          authorizationPolicies: []\n          deviceProvisioningHostName: global.azure-devices-provisioning.net\n          idScope: 0ne00000012\n          serviceOperationsHostName: myFirstProvisioningService.azure-devices-provisioning.net\n          state: Active\n        sku:\n          capacity: 1\n          name: S1\n          tier: Standard\n        tags: {}\n        type: Microsoft.Devices/ProvisioningServices\n    DPSPatch:\n      value:\n        etag: AAAAAAAADGk=\n        id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServices/myFirstProvisioningService\n        location: eastus\n        name: myFirstProvisioningService\n        properties:\n          allocationPolicy: Hashed\n          deviceProvisioningHostName: global.azure-devices-provisioning.net\n          idScope: 0ne00000012\n          serviceOperationsHostName: myFirstProvisioningService.azure-devices-provisioning.net\n          state: Active\n        sku:\n          capacity: 1\n          name: S1\n          tier: Standard\n        tags:\n          foo: bar\n        type: Microsoft.Devices/ProvisioningServices\n    DPSCreate:\n      value:\n        etag: AAAAAAAADGk=\n        id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups//providers/Microsoft.Devices/ProvisioningServices/myFirstProvisioningService\n        location: eastus\n        name: myFirstProvisioningService\n        properties:\n          allocationPolicy: Hashed\n          authorizationPolicies: []\n          deviceProvisioningHostName: global.azure-devices-provisioning.net\n          idScope: 0ne00000012\n          serviceOperationsHostName: myFirstProvisioningService.azure-devices-provisioning.net\n          state: Active\n        sku:\n          capacity: 1\n          name: S1\n          tier: Standard\n        tags: {}\n        type: Microsoft.Devices/ProvisioningServices\n    DPSGetCertificates:\n      value:\n        value:\n          - etag: AAAAAAExpNs=\n            id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/IotHubs/andbuc-hub/certificates/cert\n            name: cert\n            properties:\n              created: Thu, 12 Oct 2017 19:23:50 GMT\n              expiry: Sat, 31 Dec 2039 23:59:59 GMT\n              isVerified: false\n              subject: CN=testdevice1\n              thumbprint: 97388663832D0393C9246CAB4FBA2C8677185A25\n              updated: Thu, 12 Oct 2017 19:23:50 GMT\n            type: Microsoft.Devices/ProvisioningServices/Certificates\n    DPSGetCertificate:\n      value:\n        etag: AAAAAAExpNs=\n        id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/IotHubs/andbuc-hub/certificates/cert\n        name: cert\n        properties:\n          created: Thu, 12 Oct 2017 19:23:50 GMT\n          expiry: Sat, 31 Dec 2039 23:59:59 GMT\n          isVerified: false\n          subject: CN=testdevice1\n          thumbprint: 97388663832D0393C9246CAB4FBA2C8677185A25\n          updated: Thu, 12 Oct 2017 19:23:50 GMT\n        type: Microsoft.Devices/ProvisioningServices/Certificates\n    DPSCreateOrUpdateCertificate:\n      value:\n        etag: AAAAAAExpNs=\n        id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServives/myFirstProvisioningService/certificates/cert\n        name: cert\n        properties:\n          created: Thu, 12 Oct 2017 19:23:50 GMT\n          expiry: Sat, 31 Dec 2039 23:59:59 GMT\n          isVerified: false\n          subject: CN=testdevice1\n          thumbprint: 97388663832D0393C9246CAB4FBA2C8677185A25\n          updated: Thu, 12 Oct 2017 19:23:50 GMT\n        type: Microsoft.Devices/ProvisioningServices/Certificates\n    DPSGenerateVerificationCode:\n      value:\n        name: cert\n        properties:\n          created: Thu, 12 Oct 2017 19:23:50 GMT\n          expiry: Sat, 31 Dec 2039 23:59:59 GMT\n          isVerified: false\n          subject: CN=andbucdevice1\n          thumbprint: \"##############################\"\n          updated: Thu, 12 Oct 2017 19:26:56 GMT\n          verificationCode: \"##################################\"\n    DPSVerifyCertificate:\n      value:\n        etag: AAAAAAExpTQ=\n        id: /subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServices/myFirstProvisioningService/certificates/cert\n        name: cert\n        properties:\n          created: Thu, 12 Oct 2017 19:23:50 GMT\n          expiry: Sat, 31 Dec 2039 23:59:59 GMT\n          isVerified: true\n          subject: CN=andbucdevice1\n          thumbprint: 97388663832D0393C9246CAB4FBA2C8677185A25\n          updated: Thu, 12 Oct 2017 19:26:56 GMT\n        type: Microsoft.Devices/ProvisioningServices/Certificates\n    DPSGetKey:\n      value:\n        keyName: testKey\n        primaryKey: \"##################################\"\n        rights: RegistrationStatusWrite\n        secondaryKey: \"################################\"\n    DPSListKeys:\n      value:\n        value:\n          - keyName: key1\n            primaryKey: \"#####################################\"\n            rights: ServiceConfig\n            secondaryKey: \"###################################\"\n          - keyName: key2\n            primaryKey: \"#######################################\"\n            rights: ServiceConfig\n            secondaryKey: \"####################################=\"\n    DPSGetOperationResult:\n      value:\n        status: Succeeded\n    DPSGetValidSku:\n      value:\n        value:\n          - name: S1\n  parameters:\n    api-version:\n      description: The version of the API.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        DPSOperations:\n          value: 2017-11-15\n        DPSCheckName:\n          value: 2017-11-15\n        DPSListBySubscription:\n          value: 2017-11-15\n        DPSListByResourceGroup:\n          value: 2017-11-15\n        DPSDelete:\n          value: 2017-11-15\n        DPSGet:\n          value: 2017-11-15\n        DPSPatch:\n          value: 2017-11-15\n        DPSCreate:\n          value: 2017-11-15\n        DPSGetCertificates:\n          value: 2017-11-15\n        DPSDeleteCertificate:\n          value: 2017-11-15\n        DPSGetCertificate:\n          value: 2017-11-15\n        DPSCreateOrUpdateCertificate:\n          value: 2017-11-15\n        DPSGenerateVerificationCode:\n          value: 2017-11-15\n        DPSVerifyCertificate:\n          value: 2017-11-15\n        DPSGetKey:\n          value: 2017-11-15\n        DPSListKeys:\n          value: 2017-11-15\n        DPSGetOperationResult:\n          value: 2017-11-15\n        DPSGetValidSku:\n          value: 2017-11-15\n    subscriptionId:\n      description: The subscription identifier.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      examples:\n        DPSCheckName:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSListBySubscription:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSListByResourceGroup:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSDelete:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSGet:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSPatch:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSCreate:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSGetCertificates:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSDeleteCertificate:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSGetCertificate:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSCreateOrUpdateCertificate:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSGenerateVerificationCode:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSVerifyCertificate:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSGetKey:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSListKeys:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSGetOperationResult:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n        DPSGetValidSku:\n          value: 91d12660-3dec-467a-be2a-213b5544ddc0\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    AsyncOperationResult:\n      description: Result of a long running operation.\n      properties:\n        error:\n          $ref: \"#/components/schemas/ErrorMesssage\"\n        status:\n          description: current status of a long running operation.\n          type: string\n      type: object\n    CertificateBodyDescription:\n      description: The JSON-serialized X509 Certificate.\n      properties:\n        certificate:\n          description: Base-64 representation of the X509 leaf certificate .cer file or\n            just .pem file content.\n          type: string\n      type: object\n    CertificateListDescription:\n      description: The JSON-serialized array of Certificate objects.\n      properties:\n        value:\n          description: The array of Certificate objects.\n          items:\n            $ref: \"#/components/schemas/CertificateResponse\"\n          type: array\n      type: object\n    CertificateProperties:\n      description: The description of an X509 CA Certificate.\n      properties:\n        created:\n          description: The certificate's creation date and time.\n          format: date-time-rfc1123\n          readOnly: true\n          type: string\n        expiry:\n          description: The certificate's expiration date and time.\n          format: date-time-rfc1123\n          readOnly: true\n          type: string\n        isVerified:\n          description: Determines whether certificate has been verified.\n          readOnly: true\n          type: boolean\n        subject:\n          description: The certificate's subject name.\n          readOnly: true\n          type: string\n        thumbprint:\n          description: The certificate's thumbprint.\n          readOnly: true\n          type: string\n        updated:\n          description: The certificate's last update date and time.\n          format: date-time-rfc1123\n          readOnly: true\n          type: string\n      type: object\n    CertificateResponse:\n      description: The X509 Certificate.\n      properties:\n        etag:\n          description: The entity tag.\n          readOnly: true\n          type: string\n        id:\n          description: The resource identifier.\n          readOnly: true\n          type: string\n        name:\n          description: The name of the certificate.\n          readOnly: true\n          type: string\n        properties:\n          $ref: \"#/components/schemas/CertificateProperties\"\n        type:\n          description: The resource type.\n          readOnly: true\n          type: string\n      type: object\n      x-ms-azure-resource: true\n    ErrorDetails:\n      description: Error details.\n      properties:\n        Code:\n          description: The error code.\n          readOnly: true\n          type: string\n        Details:\n          description: The error details.\n          readOnly: true\n          type: string\n        HttpStatusCode:\n          description: The HTTP status code.\n          readOnly: true\n          type: string\n        Message:\n          description: The error message.\n          readOnly: true\n          type: string\n      type: object\n    ErrorMesssage:\n      description: Error response containing message and code.\n      properties:\n        code:\n          description: standard error code\n          type: string\n        details:\n          description: detailed summary of error\n          type: string\n        message:\n          description: standard error description\n          type: string\n      type: object\n    IotDpsPropertiesDescription:\n      description: the service specific properties of a provisoning service, including\n        keys, linked iot hubs, current state, and system generated properties\n        such as hostname and idScope\n      properties:\n        allocationPolicy:\n          description: Allocation policy to be used by this provisioning service.\n          enum:\n            - Hashed\n            - GeoLatency\n            - Static\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: AllocationPolicy\n        authorizationPolicies:\n          description: List of authorization keys for a provisioning service.\n          items:\n            $ref: \"#/components/schemas/SharedAccessSignatureAuthorizationRule_Acce\\\n              ssRightsDescription_\"\n          type: array\n        deviceProvisioningHostName:\n          description: Device endpoint for this provisioning service.\n          readOnly: true\n          type: string\n        idScope:\n          description: Unique identifier of this provisioning service.\n          readOnly: true\n          type: string\n        iotHubs:\n          description: List of IoT hubs assosciated with this provisioning service.\n          items:\n            $ref: \"#/components/schemas/IotHubDefinitionDescription\"\n          type: array\n        provisioningState:\n          description: The ARM provisioning state of the provisioning service.\n          type: string\n        serviceOperationsHostName:\n          description: Service endpoint for provisioning service.\n          readOnly: true\n          type: string\n        state:\n          description: Current state of the provisioning service.\n          enum:\n            - Activating\n            - Active\n            - Deleting\n            - Deleted\n            - ActivationFailed\n            - DeletionFailed\n            - Transitioning\n            - Suspending\n            - Suspended\n            - Resuming\n            - FailingOver\n            - FailoverFailed\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: state\n      type: object\n    IotDpsSkuDefinition:\n      description: Available Sku's of tier and units.\n      properties:\n        name:\n          description: Sku name.\n          enum:\n            - S1\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: IotDpsSku\n      type: object\n    IotDpsSkuDefinitionListResult:\n      description: List of available SKUs.\n      properties:\n        nextLink:\n          description: The next link.\n          readOnly: true\n          type: string\n        value:\n          description: The list of SKU's\n          items:\n            $ref: \"#/components/schemas/IotDpsSkuDefinition\"\n          type: array\n      type: object\n    IotDpsSkuInfo:\n      description: List of possible provisoning service SKUs.\n      properties:\n        capacity:\n          description: The number of units to provision\n          format: int64\n          type: integer\n        name:\n          description: Sku name.\n          enum:\n            - S1\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: IotDpsSku\n        tier:\n          description: Pricing tier name of the provisioning service.\n          readOnly: true\n          type: string\n      type: object\n    IotHubDefinitionDescription:\n      description: Description of the IoT hub.\n      properties:\n        allocationWeight:\n          description: weight to apply for a given iot h.\n          format: int32\n          type: integer\n        applyAllocationPolicy:\n          description: flag for applying allocationPolicy or not for a given iot hub.\n          type: boolean\n        connectionString:\n          description: Connection string og the IoT hub.\n          type: string\n        location:\n          description: ARM region of the IoT hub.\n          type: string\n        name:\n          description: Host name of the IoT hub.\n          readOnly: true\n          type: string\n      required:\n        - connectionString\n        - location\n      type: object\n    NameAvailabilityInfo:\n      description: Description of name availability.\n      properties:\n        message:\n          description: message containing a etailed reason name is unavailable\n          type: string\n        nameAvailable:\n          description: specifies if a name is available or not\n          type: boolean\n        reason:\n          description: specifies the reason a name is unavailable\n          enum:\n            - Invalid\n            - AlreadyExists\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: NameUnavailabilityReason\n      type: object\n    Operation:\n      description: IoT Hub REST API operation.\n      properties:\n        display:\n          description: The object that represents the operation.\n          properties:\n            operation:\n              description: Name of the operation.\n              readOnly: true\n              type: string\n            provider:\n              description: \"Service provider: Microsoft Devices.\"\n              readOnly: true\n              type: string\n            resource:\n              description: \"Resource Type: ProvisioningServices.\"\n              readOnly: true\n              type: string\n        name:\n          description: \"Operation name: {provider}/{resource}/{read | write | action |\n            delete}\"\n          readOnly: true\n          type: string\n      type: object\n    OperationInputs:\n      description: Input values for operation results call.\n      properties:\n        name:\n          description: The name of the Provisioning Service to check.\n          type: string\n      required:\n        - name\n      type: object\n    OperationListResult:\n      description: Result of the request to list IoT Hub operations. It contains a list of\n        operations and a URL link to get the next set of results.\n      properties:\n        nextLink:\n          description: URL to get the next set of operation list results if there are any.\n          readOnly: true\n          type: string\n        value:\n          description: List of IoT Hub operations supported by the Microsoft.Devices\n            resource provider.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          readOnly: true\n          type: array\n    ProvisioningServiceDescription:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The description of the provisioning service.\n      properties:\n        etag:\n          description: The Etag field is *not* required. If it is provided in the response\n            body, it must also be provided as a header per the normal ETag\n            convention.\n          type: string\n        properties:\n          $ref: \"#/components/schemas/IotDpsPropertiesDescription\"\n        sku:\n          $ref: \"#/components/schemas/IotDpsSkuInfo\"\n      required:\n        - sku\n        - properties\n      type: object\n    ProvisioningServiceDescriptionListResult:\n      description: List of provisioning service descriptions.\n      properties:\n        nextLink:\n          description: the next link\n          readOnly: true\n          type: string\n        value:\n          description: List of provisioning service descriptions.\n          items:\n            $ref: \"#/components/schemas/ProvisioningServiceDescription\"\n          type: array\n      type: object\n    Resource:\n      description: The common properties of an Azure resource.\n      properties:\n        id:\n          description: The resource identifier.\n          readOnly: true\n          type: string\n        location:\n          description: The resource location.\n          type: string\n        name:\n          description: The resource name.\n          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: The resource tags.\n          type: object\n        type:\n          description: The resource type.\n          readOnly: true\n          type: string\n      required:\n        - location\n      x-ms-azure-resource: true\n    SharedAccessSignatureAuthorizationRuleListResult:\n      description: List of shared access keys.\n      properties:\n        nextLink:\n          description: The next link.\n          readOnly: true\n          type: string\n        value:\n          description: The list of shared access policies.\n          items:\n            $ref: \"#/components/schemas/SharedAccessSignatureAuthorizationRule_Acce\\\n              ssRightsDescription_\"\n          type: array\n      type: object\n    TagsResource:\n      description: A container holding only the Tags for a resource, allowing the user to\n        update the tags on a Provisioning Service instance.\n      properties:\n        tags:\n          additionalProperties:\n            type: string\n          description: Resource tags\n    VerificationCodeRequest:\n      description: The JSON-serialized leaf certificate\n      properties:\n        certificate:\n          description: base-64 representation of X509 certificate .cer file or just .pem\n            file content.\n          type: string\n      type: object\n    VerificationCodeResponse:\n      description: Description of the response of the verification code.\n      properties:\n        etag:\n          description: Request etag.\n          readOnly: true\n          type: string\n        id:\n          description: The resource identifier.\n          readOnly: true\n          type: string\n        name:\n          description: Name of certificate.\n          readOnly: true\n          type: string\n        properties:\n          properties:\n            created:\n              description: Certificate created time.\n              type: string\n            expiry:\n              description: Code expiry.\n              type: string\n            isVerified:\n              description: Indicate if the certificate is verified by owner of private key.\n              type: boolean\n            subject:\n              description: Certificate subject.\n              type: string\n            thumbprint:\n              description: Certificate thumbprint.\n              type: string\n            updated:\n              description: Certificate updated time.\n              type: string\n            verificationCode:\n              description: Verification code.\n              type: string\n          type: object\n        type:\n          description: The resource type.\n          readOnly: true\n          type: string\n      type: object\n      x-ms-azure-resource: true\n    SharedAccessSignatureAuthorizationRule_AccessRightsDescription_:\n      description: Description of the shared access key.\n      properties:\n        keyName:\n          description: Name of the key.\n          type: string\n        primaryKey:\n          description: Primary SAS key value.\n          type: string\n        rights:\n          description: Rights that this key has.\n          enum:\n            - ServiceConfig\n            - EnrollmentRead\n            - EnrollmentWrite\n            - DeviceConnect\n            - RegistrationStatusRead\n            - RegistrationStatusWrite\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: AccessRightsDescription\n        secondaryKey:\n          description: Secondary SAS key value.\n          type: string\n      required:\n        - keyName\n        - rights\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-provisioningservices-iotdps-2017-11-15-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-provisioningservices-iotdps-2017-11-15-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices\": get: responses: code 200: contents: media: \"application/json\": generate schema: field value: item: allOf: field name: string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?!`",
	"NotImplemented": [
		"oauth2 security"
	]
}