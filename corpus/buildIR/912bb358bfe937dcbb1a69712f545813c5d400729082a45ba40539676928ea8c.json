{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/mage-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "service/src/adapters/feeds/api_docs/openapi.yaml",
			"byteSize": 4452,
			"content": "openapi: 3.0.1\ninfo:\n  title: MAGE Manifold API\n  description: \u003e\n    MAGE Manifold is an add-on API to the MAGE Server for configuring external\n    data sources that can provide relevant contextual data to MAGE clients in\n    a feed and/or on the map.\n  contact:\n    name: MAGE Support\n    email: mage@nga.mil\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  version: 0.0.1\nservers: []\nx-controller: manifold\npaths:\n  /descriptor:\n    get:\n      operationId: getManifoldDescriptor\n      responses:\n        200:\n          description: \u003e\n            Success - return the descriptor of the current Manifold\n            configuration.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManifoldDescriptor'\n  /sources:\n    post:\n      operationId: createSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/SourceDescriptor'\n                - type: object\n                  required: [ adapter ]\n                # - type: object\n                #   not:\n                #     type: object\n                #     required: [ id ]\n      responses:\n        201:\n          description: \u003e\n            Success - return the descriptor of the created source.\n          headers:\n            location:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SourceDescriptor'\n  /sources/{sourceId}:\n    parameters:\n      - $ref: '#/components/parameters/sourceIdInPath'\n    get:\n      operationId: getSource\n      responses:\n        200:\n          description: \u003e\n            Success - return the source descriptor for the specified ID.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SourceDescriptor'\n  /sources/{sourceId}/api:\n    parameters:\n      - $ref: '#/components/parameters/sourceIdInPath'\n    get:\n      operationId: getSourceApi\n      responses:\n        200:\n          description: \u003e\n            Success - return the OpenAPI definition document for the speicified\n            source.  The returned document will be compliant with the\n            [OGC API - Features - Part1: Core](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html)\n            specification.\n          content:\n            application/json:\n              schema:\n                type: object\n                externalDocs:\n                  url: https://github.com/OAI/OpenAPI-Specification\ncomponents:\n  schemas:\n    AdapterDescriptor:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n    SourceDescriptor:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n        url:\n          type: string\n          format: uri\n        adapter:\n          oneOf:\n            - $ref: '#/components/schemas/AdapterDescriptor/properties/id'\n            - $ref: '#/components/schemas/AdapterDescriptor'\n        isReadable:\n          type: boolean\n        isWritable:\n          type: boolean\n    ManifoldDescriptor:\n      description: \u003e\n        The Manifold Descriptor object contains all available adapters as well\n        as configured sources.  The adapters and sources entries are each\n        objects whose keys are IDs and values are the corresponding objects.\n      type: object\n      properties:\n        adapters:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/AdapterDescriptor'\n        sources:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/SourceDescriptor'\n\n  parameters:\n    sourceIdInPath:\n      in: path\n      name: sourceId\n      required: true\n      schema:\n        $ref: '#/components/schemas/SourceDescriptor/properties/id'\n\n  responses:\n    manifoldDescriptor:\n      description: Return the current manifold descriptor.\n      headers:\n        location:\n          required: false\n          schema:\n            type: string\n            format: uri\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ManifoldDescriptor'\n",
			"canonicalURL": "/github.com/ngageoint/mage-server@bd2452960e68f11a7c829d8a9d4c7a25ac7cf98a/-/blob/service/src/adapters/feeds/api_docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ngageoint/mage-server/blob/bd2452960e68f11a7c829d8a9d4c7a25ac7cf98a/service/src/adapters/feeds/api_docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: reference type \"https://raw.githubusercontent.com/ngageoint/mage-server/bd2452960e68f11a7c829d8a9d4c7a25ac7cf98a/service/src/adapters/feeds/api_docs/openapi.yaml#/components/schemas/SourceDescriptor/properties/id\" name conflict: \"ID\""
}