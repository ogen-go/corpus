{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/veracity/veracity-documentation"
		},
		"file": {
			"name": "services-openapi.yaml",
			"size": 0,
			"path": "sections/identity/services-openapi.yaml",
			"byteSize": 142515,
			"content": "openapi: 3.0.1\ninfo:\n  title: Veracity Services API\n  description: \"The Veracity Services API provides information about the currently logged in user (`my`) and your application in general (`this`). To call these APIs you need to have an **access token** for the current user as well as a **subscription key**. The former can be retrieved once a user authenticates with your application while the latter can be found in the Veracity for Developers resource portal. Head over to [https://developer.veracity.com/projects](https://developer.veracity.com/projects) and create an Application resource there to create a subscription key for your application. You can read more about how to authenticate users from your application in the [Identity documentation](https://developer.veracity.com/docs/section/identity/identity).\n  \\n\\n ## Grouping\n  \\n The API is grouped into 4 distinct sections, each with their own intent.\n  \\n - **My**: Return information about the currently logged in used as defined by their access token.\n  \\n - **This**: Return information about your application.\n  \\n - **Options**: These endpoints are for maintenance purposes. Do not use.\n    \\n\\n As the API requires the use of an access token unique to a user many of the endpoints will include information specific to that user. E.g.: the `/my/profile` endpoint will return profile information for that user without any additional query parameters as the users is identified by their access token.\n    \\n ## Multiple root urls\n    \\n The API is versioned in order to provide a consistent contract for your application to call. You can decide yourself if you want to use one or the other. The APIs describe on this page will always be the latest version.\n    \\n\\n - `https://api.veracity.com/veracity/services/v3`\n    \\n\\n Veracity commits to actively support the latest version of the API as well as the next previous version. This currently means **v3 and v2** of the Veracity Services API.\"\n  version: '3.0'\n  contact:\n    name: Veracity for Developers\n    url: https://developer.veracity.com/docs\n    email: contact@veracity.com\nservers:\n- url: https://api.veracity.com/veracity/services/v3\npaths:\n  /my/companies:\n    get:\n      tags:\n      - My\n      summary: Current user associated companies\n      description: Get a list of every company the current user is registered with.\n      operationId: My_GetMyCompanies\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CompanyReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CompanyReference'\n            application/xml:\n              schema:\n                type: array\n                xml:\n                  name: \"CompanyInfo\" # BUG::: Must expose this for xml or parsing will fail\n                items:\n                  $ref: '#/components/schemas/CompanyReference'\n            text/xml:\n              schema:\n                type: array\n                xml:\n                  name: \"CompanyInfo\"\n                items:\n                  $ref: '#/components/schemas/CompanyReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/messages:\n    get:\n      tags:\n      - My\n      summary: Current user messages\n      description: Get a list of all unread messages sent to the current user.\n      operationId: My_GetMessagesAsync\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: all\n        in: query\n        description: If true returns both read and unread messages.\n        required: true\n        schema:\n          type: boolean\n          nullable: false\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MessageReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MessageReference'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MessageReference'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MessageReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/messages/count:\n    get:\n      tags:\n      - My\n      summary: Current users number of unread messages\n      description: Get the number of un read messages for the current user.\n      operationId: My_GetMessageCount\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: int32\n                nullable: false\n            text/json:\n              schema:\n                type: integer\n                format: int32\n                nullable: false\n            application/xml:\n              schema:\n                type: integer\n                format: int32\n                nullable: false\n            text/xml:\n              schema:\n                type: integer\n                format: int32\n                nullable: false\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/messages/{messageId}:\n    get:\n      tags:\n      - My\n      operationId: My_GetMessageAsync\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: messageId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Message'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Message'\n        400:\n          description: Bad request\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/policies/validate():\n    get:\n      tags:\n      - My\n      summary: Validates all DNV GL policies for the current user\n      description: Validates all DNV GL policies for the current user and returns a list of the policies that needs attention or an empty list if not policies need attention.\n      operationId: My_ValidatePolicies\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: returnUrl\n        in: header\n        description: The url to return the user to after policy issues have been resolved.\n        schema:\n          type: string\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        406:\n          description: Not acceptable\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/policies/{serviceId}/validate():\n    get:\n      tags:\n      - My\n      summary: Validates all DNV GL policies for the current user on the specified service\n      description: Validates all DNV GL policies for the current user that relate to the specified service id and returns a list of the policies that needs attention or an empty list if not policies need attention.\n      operationId: My_ValidatePolicy\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: serviceId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      - name: returnUrl\n        in: header\n        description: The url to return the user to after policy issues have been resolved.\n        schema:\n          type: string\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        406:\n          description: Not acceptable\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/profile:\n    get:\n      tags:\n      - My\n      summary: Current user general information\n      description: Retreives profile information for the currently logged in user. \n      operationId: My_Info\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MyUserInfo'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/MyUserInfo'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/MyUserInfo'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/MyUserInfo'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/services:\n    get:\n      tags:\n      - My\n      summary: Current user services\n      description: Returns all services the current user has a subscription for.\n      operationId: My_MyServices\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MyServiceReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MyServiceReference'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MyServiceReference'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MyServiceReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /my/widgets:\n    get:\n      tags:\n      - My\n      summary: Current user service tiles\n      description: Returns all widgets for the current user. A widget is a tile representing a service entry point with an associated link the user can follow to access the service.\n      operationId: My_GetMyWidgets\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Widget'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Widget'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Widget'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Widget'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n\n  /this/services:\n    get:\n      tags:\n      - This\n      description: 'Get all services the service principal has access to. Currently\n        not 100% accurate. Paged query: uses 0 based page index'\n      operationId: This_GetServices\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: page\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n          nullable: false\n      - name: pageSize\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n          nullable: false\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceReference'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceReference'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/services/{serviceId}/notification:\n    post:\n      tags:\n      - This\n      description: Send notification to your users through the Veracity notification\n        service\n      operationId: This_NotifyUsers\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: serviceId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      - name: channelId\n        in: header\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationMessage'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NotificationMessage'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NotificationMessage'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NotificationMessage'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NotificationMessage'\n        required: true\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/services/{serviceId}/subscribers:\n    get:\n      tags:\n      - This\n      description: 'Get all users with a subscription to this service. Paged query:\n        uses 0 based page index'\n      operationId: This_GetUsersForService\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: serviceId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      - name: page\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n          nullable: false\n      - name: pageSize\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n          nullable: false\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/services/{serviceId}/subscribers/{userId}:\n    get:\n      tags:\n      - This\n      description: 'Get all users with a subscription to this service. Paged query:\n        uses 0 based page index. Warning: returns http 300 Ambiguous if service account\n        is linked to multiple services'\n      operationId: This_GetUserForService\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: serviceId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n    put:\n      tags:\n      - This\n      description: Add a user subscription to the service with the provided id .Only\n        available for the root service for nested services\n      operationId: This_AddServiceUser\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      - name: serviceId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n        required: true\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n    delete:\n      tags:\n      - This\n      description: Remove servive subscription from the user .Only available for the\n        root service for nested services\n      operationId: This_RemoveServiceUser\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      - name: serviceId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/subscribers:\n    get:\n      tags:\n      - This\n      description: 'Get all users with a subscription to this service. Paged query:\n        uses 0 based page index .Warning: returns http 300 Ambiguous if service account\n        is linked to multiple services'\n      operationId: This_GetUsers\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: page\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n          nullable: false\n      - name: pageSize\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n          nullable: false\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n        300:\n          description: 'Multiple services registered for clientId '\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/subscribers/{userId}:\n    get:\n      tags:\n      - This\n      description: 'Get all users with a subscription to this service. Paged query:\n        uses 0 based page index. Warning: returns http 300 Ambiguous if service account\n        is linked to multiple services'\n      operationId: This_GetServiceUser\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionReference'\n        300:\n          description: 'Multiple services registered for clientId '\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n    put:\n      tags:\n      - This\n      description: 'Add a user subscription to the service. Warning: returns http\n        300 Ambiguous if service account is linked to multiple services'\n      operationId: This_AddUserAsync\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionOptions'\n        required: true\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        300:\n          description: 'Multiple services registered for clientId '\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n    delete:\n      tags:\n      - This\n      summary: 'Warning: returns http 300 Ambiguous if service account is linked to\n        multiple services'\n      description: 'Remove servive subscription from the user '\n      operationId: This_RemoveUser\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        300:\n          description: 'Multiple services registered for clientId '\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/user:\n    post:\n      tags:\n      - This\n      description: Create a user in Veracity\n      operationId: This_CreateUser\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRegistration'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UserRegistration'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UserRegistration'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UserRegistration'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserRegistration'\n        required: true\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCreationReference'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UserCreationReference'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserCreationReference'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UserCreationReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/user/resolve({email}):\n    get:\n      tags:\n      - This\n      description: Get the user id from the email address. Note that an email address\n        may be connected to more than one user account\n      operationId: This_ResolveUser\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: email\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /this/users:\n    post:\n      tags:\n      - This\n      description: Create a users in Veracity\n      operationId: This_CreateUsers\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              nullable: true\n              items:\n                $ref: '#/components/schemas/UserRegistration'\n              x-nullable: true\n          text/json:\n            schema:\n              type: array\n              nullable: true\n              items:\n                $ref: '#/components/schemas/UserRegistration'\n              x-nullable: true\n          application/xml:\n            schema:\n              type: array\n              nullable: true\n              items:\n                $ref: '#/components/schemas/UserRegistration'\n              x-nullable: true\n          text/xml:\n            schema:\n              type: array\n              nullable: true\n              items:\n                $ref: '#/components/schemas/UserRegistration'\n              x-nullable: true\n          application/x-www-form-urlencoded:\n            schema:\n              type: array\n              nullable: true\n              items:\n                $ref: '#/components/schemas/UserRegistration'\n              x-nullable: true\n        required: true\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserCreationReference'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserCreationReference'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserCreationReference'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserCreationReference'\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n\n  /cache/invalidate/{id}:\n    get:\n      tags:\n      - Options\n      description: Invalidate the cached item with the provided id\n      operationId: Options_InvalidateCache\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n          nullable: true\n      responses:\n        204:\n          description: No Content\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content: {}\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /status:\n    get:\n      tags:\n      - Options\n      description: Get the status of the service container.\n      operationId: Options_ServiceStatus\n      parameters:\n      - name: Ocp-Apim-Subscription-Key\n        in: header\n        description: Provide the API subscription key for your application. This can be found on [https://developer.veracity.com/projects](https://developer.veracity.com/projects)\n        schema:\n          type: string\n      - name: x-supportCode\n        in: header\n        description: Provide a correlation token for log lookup. This is optional.\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n                  nullable: true\n                nullable: true\n            text/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n                  nullable: true\n                nullable: true\n            application/xml:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n                  nullable: true\n                nullable: true\n            text/xml:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n                  nullable: true\n                nullable: true\n        400:\n          description: Bad request, check formatting and missing parameters\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        401:\n          description: Unauthorized\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        403:\n          description: Forbidden\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthError'\n        404:\n          description: Not found\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        500:\n          description: Unexpected error\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        502:\n          description: Dependency call failure\n          headers:\n            x-supportCode:\n              description: correlation token for log lookup.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\ncomponents:\n  schemas:\n    AcceptPlatformTermsRequest:\n      required:\n      - acceptPlatformTerms\n      - acceptServiceTerms\n      type: object\n      properties:\n        acceptPlatformTerms:\n          type: boolean\n          description: Platform terms accepted\n          nullable: false\n        acceptServiceTerms:\n          type: boolean\n          description: Service terms accepted\n          nullable: false\n        serviceId:\n          type: string\n          description: The service id of the service terms\n          nullable: true\n      description: Accept platform or service terms\n      nullable: true\n      x-nullable: true\n    ActivationRequest:\n      required:\n      - acceptPlatformTerms\n      - acceptServiceTerms\n      type: object\n      properties:\n        password:\n          type: string\n          description: The password to set on the user account\n          nullable: true\n        passwordRepeat:\n          type: string\n          description: Repeat the password\n          nullable: true\n        userId:\n          type: string\n          description: The Veracity User Id\n          nullable: true\n        userDetails:\n          $ref: '#/components/schemas/UserInfoUpdate'\n        email:\n          type: string\n          description: the users email address. This is just used for validation,\n            editing this will not change the email address of the user.\n          nullable: true\n        acceptPlatformTerms:\n          type: boolean\n          description: Platform terms accepted\n          nullable: false\n        acceptServiceTerms:\n          type: boolean\n          description: Service terms accepted\n          nullable: false\n        serviceId:\n          type: string\n          description: The service id of the service terms\n          nullable: true\n      description: \"\"\n      nullable: true\n      x-nullable: true\n    AdminInfo:\n      required:\n      - '#companies'\n      - verifiedEmail\n      type: object\n      properties:\n        roles:\n          type: array\n          nullable: true\n          items:\n            $ref: '#/components/schemas/RoleReference'\n        name:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        '#companies':\n          type: integer\n          format: int32\n          nullable: false\n        verifiedEmail:\n          type: boolean\n          nullable: false\n        language:\n          type: string\n          nullable: true\n        identity:\n          type: string\n          nullable: true\n        servicesUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        companiesUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        firstName:\n          type: string\n          nullable: true\n        lastName:\n          type: string\n          nullable: true\n        countryCode:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    AdminReference:\n      type: object\n      properties:\n        accessLevelUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        serviceId:\n          type: string\n          nullable: true\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        email:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    AuthError:\n      type: object\n      properties:\n        Message:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    ChangeAddressRequest:\n      type: object\n      properties:\n        oldAddress:\n          type: string\n          nullable: true\n        newAddress:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true    \n    ChangePasswordRequest:\n      type: object\n      properties:\n        oldPassword:\n          type: string\n          nullable: true\n        newPassword:\n          type: string\n          nullable: true\n        newPasswordRepeat:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    CompanyInfo:\n      required:\n      - '#employee'\n      - '#requests'\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        url:\n          type: string\n          nullable: true\n        usersUrl:\n          type: string\n          nullable: true\n        addressLines:\n          type: array\n          nullable: true\n          items:\n            type: string\n            nullable: true\n        id:\n          type: string\n          nullable: true\n        city:\n          type: string\n          nullable: true\n        country:\n          type: string\n          nullable: true\n        countryCode:\n          type: string\n          nullable: true\n        zipCode:\n          type: string\n          nullable: true\n        '#employee':\n          type: integer\n          format: int32\n          nullable: false\n        domains:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        '#requests':\n          type: integer\n          format: int32\n          nullable: false\n      nullable: true\n      x-nullable: true\n    CompanyReference:\n      type: object\n      properties:\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    ConfirmationRequest:\n      type: object\n      properties:\n        activationCode:\n          type: string\n          nullable: true\n        address:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    ErrorDetail:\n      required:\n      - subCode\n      type: object\n      properties:\n        message:\n          type: string\n          nullable: true\n        information:\n          type: string\n          nullable: true\n        subCode:\n          type: integer\n          format: int32\n          nullable: false\n        supportCode:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    ItemReference:\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n      nullable: true\n      x-nullable: true\n    Message:\n      required:\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        content:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        timeStamp:\n          type: string\n          nullable: true\n        channelId:\n          type: string\n          nullable: true\n        type:\n          type: integer\n          format: int32\n          nullable: false\n      nullable: true\n      x-nullable: true\n    MessageReference:\n      type: object\n      properties:\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    MyServiceReference:\n      type: object\n      properties:\n        serviceUrl:\n          type: string\n          nullable: true\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    MyUserInfo:\n      required:\n      - '#companies'\n      - verifiedEmail\n      type: object\n      properties:\n        profilePageUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        messagesUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        identity:\n          type: string\n          nullable: true\n        servicesUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        companiesUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        '#companies':\n          type: integer\n          format: int32\n          nullable: false\n        verifiedEmail:\n          type: boolean\n          nullable: false\n        language:\n          type: string\n          nullable: true\n        firstName:\n          type: string\n          nullable: true\n        lastName:\n          type: string\n          nullable: true\n        countryCode:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    NotificationMessage:\n      required:\n      - HighPriority\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/Message'\n        recipients:\n          type: array\n          nullable: true\n          items:\n            type: string\n            nullable: true\n        HighPriority:\n          type: boolean\n          nullable: false\n      nullable: true\n      x-nullable: true\n    RegistrationOptions:\n      type: object\n      properties:\n        sendMail:\n          type: boolean\n          nullable: true\n        createSubscription:\n          type: boolean\n          nullable: true\n        serviceId:\n          type: string\n          nullable: true\n        role:\n          type: string\n          nullable: true\n        returnUrl:\n          type: string\n          nullable: true\n        contactEmail:\n          type: string\n          nullable: true\n        contactName:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    RoleReference:\n      type: object\n      properties:\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        type:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    ServiceInfo:\n      required:\n      - inherited\n      - public\n      - selfSubscribe\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        shortDescription:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        apiAudience:\n          type: string\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        public:\n          type: boolean\n          nullable: false\n        id:\n          type: string\n          nullable: true\n        inherited:\n          type: boolean\n          nullable: false\n        selfSubscribe:\n          type: boolean\n          nullable: false\n        serviceOwner:\n          type: string\n          nullable: true\n        termsOfUse:\n          type: string\n          nullable: true\n        lastUpdated:\n          type: string\n          format: date-time\n          nullable: true\n        parentUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        parentId:\n          type: string\n          nullable: true\n        childrenUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        servicerUrl:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    ServiceReference:\n      type: object\n      properties:\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    SubscriptionDetails:\n      type: object\n      properties:\n        service:\n          $ref: '#/components/schemas/ServiceReference'\n        user:\n          $ref: '#/components/schemas/UserReference'\n        role:\n          $ref: '#/components/schemas/RoleReference'\n        subscriptionState:\n          $ref: '#/components/schemas/SubscriptionState'\n      nullable: true\n      x-nullable: true\n    SubscriptionOptions:\n      type: object\n      properties:\n        role:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    SubscriptionReference:\n      type: object\n      properties:\n        state:\n          type: string\n          nullable: true\n        role:\n          type: string\n          nullable: true\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        email:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    SubscriptionState:\n      required:\n      - state\n      type: object\n      properties:\n        state:\n          type: string\n          nullable: false\n          enum:\n          - subscribing\n          - pending\n          - rejected\n          - notSubscribing\n          - null\n          - error\n          x-ms-enum:\n            name: SubscriptionStateTypes\n            modelAsString: false\n      nullable: true\n      x-nullable: true\n    TokenWrapper:\n      required:\n      - expiry\n      - issued\n      type: object\n      properties:\n        expiry:\n          type: integer\n          description: The expiry time of the issued token in unix epoch\n          format: int64\n          nullable: false\n        issued:\n          type: integer\n          description: The issued time of the token in unix epoch\n          format: int64\n          nullable: false\n        authToken:\n          type: string\n          description: The auth token to be included in 'me/pending/activation' and\n            'me/activate'\n          nullable: true\n        issuedBy:\n          type: string\n          description: A unique string representing the issuer of the token\n          nullable: true\n      nullable: true\n      x-nullable: true\n    UserCreationReference:\n      type: object\n      properties:\n        confirmationUrl:\n          type: string\n          nullable: true\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        email:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    UserInfo:\n      required:\n      - '#companies'\n      - verifiedEmail\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n        '#companies':\n          type: integer\n          format: int32\n          nullable: false\n        verifiedEmail:\n          type: boolean\n          nullable: false\n        language:\n          type: string\n          nullable: true\n        identity:\n          type: string\n          nullable: true\n        servicesUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        companiesUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        firstName:\n          type: string\n          nullable: true\n        lastName:\n          type: string\n          nullable: true\n        countryCode:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    UserInfoUpdate:\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: The firstname\n          nullable: true\n        lastName:\n          type: string\n          description: The lastname\n          nullable: true\n        displayName:\n          type: string\n          description: Optional, if left empty lastName, firstName is used\n          nullable: true\n      nullable: true\n      x-nullable: true\n    UserReference:\n      type: object\n      properties:\n        identity:\n          type: string\n          nullable: true\n          readOnly: true\n        email:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n        id:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    UserRegistration:\n      type: object\n      properties:\n        firstName:\n          type: string\n          nullable: true\n        lastName:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        options:\n          $ref: '#/components/schemas/RegistrationOptions'\n      nullable: true\n      x-nullable: true\n    ValidationError:\n      required:\n      - subCode\n      type: object\n      properties:\n        url:\n          type: string\n          nullable: true\n        violatedPolicies:\n          type: array\n          nullable: true\n          items:\n            type: string\n            nullable: true\n        message:\n          type: string\n          nullable: true\n        information:\n          type: string\n          nullable: true\n        subCode:\n          type: integer\n          format: int32\n          nullable: false\n        supportCode:\n          type: string\n          nullable: true\n      nullable: true\n      x-nullable: true\n    Widget:\n      required:\n      - id\n      - sequenceNo\n      - serviceId\n      - showTitle\n      - supportsMobile\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          nullable: false\n          example: 00000000-0000-0000-0000-000000000000\n        url:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        logoUrl:\n          type: string\n          nullable: true\n        pictogramUrl:\n          type: string\n          nullable: true\n        type:\n          type: string\n          nullable: true\n        showTitle:\n          type: boolean\n          nullable: false\n        supportsMobile:\n          type: boolean\n          nullable: false\n        serviceId:\n          type: string\n          format: uuid\n          nullable: false\n          example: 00000000-0000-0000-0000-000000000000\n        sequenceNo:\n          type: integer\n          format: int32\n          nullable: false\n      nullable: true\n      x-nullable: true\n  securitySchemes:\n    vidpBearer:\n      type: http\n      scheme: bearer\n      description: Provide the access token for the user in order to make requests. OpenID Connect is used to retrieve the access token.\n      bearerFormat: JWT\n      # type: oauth2\n      # description: OpenID Connect for Veracity IDP\n      # flows:\n      #   implicit:\n      #     authorizationUrl: https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/oauth2/v2.0/authorize\n      #     scopes:\n      #       openid: performs sign-in\n      #       offline_access: Give the app access to resources on behalf of the user for an extended time\n      #       https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation: Allow the service to act on behalf of the user\nsecurity:\n  - vidpBearer:\n    - openid\n    - https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation\n",
			"canonicalURL": "/github.com/veracity/veracity-documentation@f98ffe55a88fd8a92da5eff08ff1cadac2ec6387/-/blob/sections/identity/services-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/veracity/veracity-documentation/blob/f98ffe55a88fd8a92da5eff08ff1cadac2ec6387/sections/identity/services-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/my/messages/{messageId}\": get: responses: 403: content: \"application/json\": wrap response type: schema name conflict: \"NilAuthErrorHeaders\""
}