{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "internal/kafka/internal/api/public/api/openapi.yaml",
			"byteSize": 68929,
			"content": "openapi: 3.0.0\ninfo:\n  description: Kafka Service Fleet Manager is a Rest API to manage Kafka instances.\n  title: Kafka Service Fleet Manager\n  version: 1.10.0\nservers:\n- description: Main (production) server\n  url: https://api.openshift.com\n- description: Staging server\n  url: https://api.stage.openshift.com\n- description: localhost\n  url: http://localhost:8000\n- description: current domain\n  url: /\npaths:\n  /api/kafkas_mgmt/v1:\n    get:\n      operationId: getVersionMetadata\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionMetadata'\n          description: Version metadata\n      summary: Returns the version metadata\n  /api/kafkas_mgmt/v1/errors/{id}:\n    get:\n      operationId: getErrorById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Get error by Id\n      summary: Returns the error by id\n      tags:\n      - errors\n  /api/kafkas_mgmt/v1/errors:\n    get:\n      operationId: getErrors\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorList'\n          description: List of possible errors\n      summary: Returns the list of possible API errors\n      tags:\n      - errors\n  /api/kafkas_mgmt/v1/kafkas/{id}:\n    delete:\n      operationId: deleteKafkaById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Perform the action in an asynchronous manner\n        explode: true\n        in: query\n        name: async\n        required: true\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Deleted\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400DeletionExample\":\n                  $ref: '#/components/examples/400DeletionExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404DeleteExample\":\n                  $ref: '#/components/examples/404DeleteExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Kafka request with specified ID exists\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500DeleteExample\":\n                  $ref: '#/components/examples/500DeleteExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Deletes a Kafka request by ID\n    get:\n      operationId: getKafkaById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                KafkaRequestGetResponseExample:\n                  $ref: '#/components/examples/KafkaRequestExample'\n                KafkaRequestGetResponseWithFailedCreationStatusExample:\n                  $ref: '#/components/examples/KafkaRequestFailedCreationStatusExample'\n              schema:\n                $ref: '#/components/schemas/KafkaRequest'\n          description: Kafka request found by ID\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Kafka request with specified ID exists\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a Kafka request by ID\n    patch:\n      operationId: updateKafkaById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KafkaUpdateRequest'\n        description: Update owner of kafka\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                KafkaRequestPostResponseExample:\n                  $ref: '#/components/examples/KafkaRequestExample'\n              schema:\n                $ref: '#/components/schemas/KafkaRequest'\n          description: Kafka updated by ID\n        \"400\":\n          content:\n            application/json:\n              examples:\n                MissingParameterExample:\n                  $ref: '#/components/examples/400MissingParameterExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorised to access the service\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Kafka found with the specified ID\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Update a Kafka instance by id\n  /api/kafkas_mgmt/v1/kafkas:\n    get:\n      operationId: getKafkas\n      parameters:\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the `order by` clause of an SQL statement.\n          Each query can be ordered by any of the following `kafkaRequests` fields:\n\n          * bootstrap_server_host\n          * admin_api_server_url\n          * cloud_provider\n          * cluster_id\n          * created_at\n          * href\n          * id\n          * instance_type\n          * multi_az\n          * name\n          * organisation_id\n          * owner\n          * reauthentication_enabled\n          * region\n          * status\n          * updated_at\n          * version\n\n          For example, to return all Kafka instances ordered by their name, use the following syntax:\n\n          ```sql\n          name asc\n          ```\n\n          To return all Kafka instances ordered by their name _and_ created date, use the following syntax:\n\n          ```sql\n          name asc, created_at asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          the results are ordered by name.\n        examples:\n          orderBy:\n            value: name asc\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Search criteria.\n\n          The syntax of this parameter is similar to the syntax of the `where` clause of an\n          SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `\u003c\u003e`, `=`, or `LIKE`.\n          Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.\n\n          Examples:\n\n          To return a Kafka instance with the name `my-kafka` and the region `aws`, use the following syntax:\n\n          ```\n          name = my-kafka and cloud_provider = aws\n          ```[p-]\n\n          To return a Kafka instance with a name that starts with `my`, use the following syntax:\n\n          ```\n          name like my%25\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then all the Kafka instances\n          that the user has permission to see are returned.\n\n          Note. If the query is invalid, an error is returned.\n        examples:\n          search:\n            value: name = my-kafka and cloud_provider = aws\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KafkaRequestList'\n          description: A list of Kafka requests\n        \"400\":\n          content:\n            application/json:\n              examples:\n                InvalidQueryExample:\n                  $ref: '#/components/examples/400InvalidQueryExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of Kafka requests\n    post:\n      operationId: createKafka\n      parameters:\n      - description: Perform the action in an asynchronous manner\n        explode: true\n        in: query\n        name: async\n        required: true\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            examples:\n              USRegion:\n                $ref: '#/components/examples/USRegionExample'\n              EURegion:\n                $ref: '#/components/examples/EURegionExample'\n              ExplicitSizeExample:\n                $ref: '#/components/examples/ExplicitSizeExample'\n            schema:\n              $ref: '#/components/schemas/KafkaRequestPayload'\n        description: Kafka data\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              examples:\n                KafkaRequestPostResponseExample:\n                  $ref: '#/components/examples/KafkaRequestExample'\n              schema:\n                $ref: '#/components/schemas/KafkaRequest'\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400CreationExample\":\n                  $ref: '#/components/examples/400CreationExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n                \"403MaxAllowedInstanceReachedExample\":\n                  $ref: '#/components/examples/403MaxAllowedInstanceReachedExample'\n                \"403TermsNotAcceptedExample\":\n                  $ref: '#/components/examples/403TermsNotAcceptedExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User forbidden either because the user is not authorized to\n            access the service or because the maximum number of instances that can\n            be created by this user has been reached.\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The requested resource doesn't exist\n        \"409\":\n          content:\n            application/json:\n              examples:\n                \"409NameConflictExample\":\n                  $ref: '#/components/examples/409NameConflictExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A conflict has been detected in the creation of this resource\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred while creating the Kafka request\n      security:\n      - Bearer: []\n      summary: Creates a Kafka request\n  /api/kafkas_mgmt/v1/cloud_providers:\n    get:\n      operationId: getCloudProviders\n      parameters:\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudProviderList'\n          description: Returned list of supported cloud providers\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns the list of supported cloud providers\n  /api/kafkas_mgmt/v1/cloud_providers/{id}/regions:\n    get:\n      operationId: getCloudProviderRegions\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudRegionList'\n          description: Returned list of supported cloud provider regions\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns the list of supported regions of the supported cloud provider\n  /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region}:\n    get:\n      operationId: getInstanceTypesByCloudProviderAndRegion\n      parameters:\n      - description: ID of the supported cloud provider\n        explode: false\n        in: path\n        name: cloud_provider\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Name of the supported cloud provider region\n        explode: false\n        in: path\n        name: cloud_region\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SupportedKafkaInstanceTypesList'\n          description: Returned list of supported Kafka instance types and sizes filtered\n            by cloud provider and region\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400UnsupportedRegionExample\":\n                  $ref: '#/components/examples/400UnsupportedRegionExample'\n                \"400UnsupportedProviderExample\":\n                  $ref: '#/components/examples/400UnsupportedProviderExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cloud provider or region is not supported\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns the list of supported Kafka instance types and sizes filtered\n        by cloud provider and region\n  /api/kafkas_mgmt/v1/service_accounts:\n    get:\n      operationId: getServiceAccounts\n      parameters:\n      - description: client_id of the service account to be retrieved\n        explode: true\n        in: query\n        name: client_id\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceAccountList'\n          description: Returned list of service accounts\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of service accounts\n      tags:\n      - security\n    post:\n      operationId: createServiceAccount\n      requestBody:\n        content:\n          application/json:\n            examples:\n              sa:\n                $ref: '#/components/examples/ServiceAccountRequestExample'\n            schema:\n              $ref: '#/components/schemas/ServiceAccountRequest'\n        description: Service account request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                serviceaccount:\n                  $ref: '#/components/examples/ServiceAccountExample'\n              schema:\n                $ref: '#/components/schemas/ServiceAccount'\n          description: Service account created\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: List of service accounts\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Creates a service account\n      tags:\n      - security\n  /api/kafkas_mgmt/v1/service_accounts/{id}:\n    delete:\n      operationId: deleteServiceAccountById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Deleted\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema: {}\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Deletes a service account by ID\n      tags:\n      - security\n    description: Get the service account with the given id\n    get:\n      operationId: getServiceAccountById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                sa:\n                  $ref: '#/components/examples/ServiceAccountByIdExample'\n              schema:\n                $ref: '#/components/schemas/ServiceAccount'\n          description: Returns a service account by ID\n      security:\n      - Bearer: []\n      summary: Returned service account by ID\n      tags:\n      - security\n    summary: Get service account by id\n  /api/kafkas_mgmt/v1/service_accounts/{id}/reset_credentials:\n    post:\n      operationId: resetServiceAccountCreds\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                sa-reset:\n                  $ref: '#/components/examples/ServiceAccountExample'\n              schema:\n                $ref: '#/components/schemas/ServiceAccount'\n          description: Reset credentials\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema: {}\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Resets the credentials for a service account by ID\n      tags:\n      - security\n  /api/kafkas_mgmt/v1/sso_providers:\n    get:\n      operationId: getSsoProviders\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SsoProvider'\n          description: Returned list of supported cloud providers\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      summary: Return sso provider info\n      tags:\n      - security\n  /api/kafkas_mgmt/v1/kafkas/{id}/metrics/query_range:\n    get:\n      operationId: getMetricsByRangeQuery\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The length of time in minutes for which to return the metrics\n        examples:\n          duration:\n            value: 5\n        explode: true\n        in: query\n        name: duration\n        required: true\n        schema:\n          default: 5\n          format: int64\n          maximum: 4320\n          minimum: 1\n          type: integer\n        style: form\n      - description: The interval in seconds between data points\n        examples:\n          interval:\n            value: 30\n        explode: true\n        in: query\n        name: interval\n        required: true\n        schema:\n          default: 30\n          format: int64\n          maximum: 10800\n          minimum: 1\n          type: integer\n        style: form\n      - description: List of metrics to fetch. Fetch all metrics when empty. List\n          entries are Kafka internal metric names.\n        explode: true\n        in: query\n        name: filters\n        required: false\n        schema:\n          default: []\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsRangeQueryList'\n          description: Returned JSON array of Prometheus metrics objects from observatorium\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns metrics with timeseries range query by Kafka ID\n  /api/kafkas_mgmt/v1/kafkas/{id}/metrics/query:\n    get:\n      operationId: getMetricsByInstantQuery\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: List of metrics to fetch. Fetch all metrics when empty. List\n          entries are Kafka internal metric names.\n        explode: true\n        in: query\n        name: filters\n        required: false\n        schema:\n          default: []\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsInstantQueryList'\n          description: Returned JSON array of Prometheus metrics objects from observatorium\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns metrics with instant query by Kafka ID\n  /api/kafkas_mgmt/v1/kafkas/{id}/metrics/federate:\n    get:\n      operationId: federateMetrics\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: Returned Kafka metrics in a Prometheus text format\n        \"400\":\n          content:\n            application/json:\n              examples:\n                MissingParameterExample:\n                  $ref: '#/components/examples/400MissingParameterExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Kafka id not found\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns all metrics in scrapeable format for a given kafka id\ncomponents:\n  examples:\n    USRegionExample:\n      value:\n        region: us-east-1\n        cloud_provider: aws\n        name: serviceapitest\n    EURegionExample:\n      value:\n        region: eu-west-1\n        cloud_provider: aws\n        name: serviceapitest\n    ExplicitSizeExample:\n      value:\n        region: us-east-1\n        cloud_provider: aws\n        name: test_kafka\n        plan: standard.x1\n    KafkaRequestExample:\n      value:\n        id: 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        kind: kafka\n        href: /api/kafkas_mgmt/v1/kafkas/1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        status: ready\n        cloud_provider: aws\n        multi_az: true\n        region: us-east-1\n        owner: api_kafka_service\n        name: serviceapi\n        bootstrap_server_host: serviceapi-1isy6rq3jki8q0otmjqfd3ocfrg.apps.mk-bttg0jn170hp.x5u8.s1.devshift.org\n        admin_api_server_url: https://admin-server-mk-e-e-e-e-c---{}ld{-}-n-vp--bltg.rhcloud.com\n        created_at: 2020-10-05T12:51:24.053142Z\n        updated_at: 2020-10-05T12:56:36.362208Z\n        version: 2.6.0\n        instance_type: standard\n        browser_url: https://console.redhat.com/application-services/streams/kafkas/1isy6rq3jki8q0otmjqfd3ocfrg/dashboard\n        reauthentication_enabled: true\n        size_id: x1\n        ingress_throughput_per_sec: 2Mi\n        egress_throughput_per_sec: 2Mi\n        total_max_connections: 100\n        max_partitions: 100\n        max_data_retention_period: P14D\n        max_connection_attempts_per_sec: 100\n        billing_cloud_account_id: \"123456789012\"\n        marketplace: aws\n        billing_model: marketplace\n    KafkaRequestFailedCreationStatusExample:\n      value:\n        id: 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        kind: kafka\n        href: /api/kafkas_mgmt/v1/kafkas/1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        status: failed\n        cloud_provider: aws\n        multi_az: true\n        region: us-east-1\n        owner: api_kafka_service\n        name: serviceapi\n        bootstrap_server_host: serviceapi-1isy6rq3jki8q0otmjqfd3ocfrg.apps.mk-bttg0jn170hp.x5u8.s1.devshift.org\n        admin_api_server_url: https://admin-server-mk-e-e-e-e-c---{}ld{-}-n-vp--bltg.rhcloud.com\n        created_at: 2020-10-05T12:51:24.053142Z\n        updated_at: 2020-10-05T12:56:36.362208Z\n        failed_reason: a reason the Kafka request creation failed\n        instance_type: standard\n        reauthentication_enabled: true\n    SupportedKafkaInstanceTypeListExample:\n      value:\n        id: developer\n        display_name: Trial\n        sizes:\n        - id: x1\n          display_name: \"1\"\n          ingress_throughput_per_sec:\n            bytes: 31457280\n          egress_throughput_per_sec:\n            bytes: 31457280\n          total_max_connections: 3000\n          max_data_retention_size:\n            bytes: 1073741800000\n          max_partitions: 1000\n          max_data_retention_period: P14D\n          max_connection_attempts_per_sec: 100\n          quota_consumed: 1\n          quota_type: rhosak\n          capacity_consumed: 1\n          max_message_size:\n            bytes: 1048576\n          min_in_sync_replicas: 1\n          replication_factor: 1\n          supported_az_modes:\n          - single\n          - multi\n          maturity_status: stable\n    CloudProviderExample:\n      value:\n        kind: CloudProvider\n        id: aws\n        name: aws\n        display_name: Amazon Web Services\n        enabled: true\n    CloudRegionExample:\n      value:\n        kind: CloudRegion\n        id: us-east-1\n        display_name: US East, N. Virginia\n        enabled: true\n        capacity:\n        - instance_type: standard\n          available_sizes:\n          - x1\n          - x2\n    ServiceAccountRequestExample:\n      value:\n        name: my-app-sa\n        description: service account for my app\n    ServiceAccountExample:\n      value:\n        id: \"1\"\n        kind: ServiceAccount\n        href: /api/kafkas_mgmt/v1/serviceaccounts/1\n        name: my-app-sa\n        description: service account for my app\n        client_id: SA-121212\n        client_secret: secret\n        owner: test-user\n        created_by: test-user\n        created_at: 2021-04-07T16:24:01+05:30\n    SsoProviderExample:\n      value:\n        name: mas_sso\n        base_url: https://identity.api.redhat.com\n        jwks: https://identity.api.openshift.com/auth/realms/rhoas/protocol/openid-connect/certs\n        token_url: https://identity.api.openshift.com/auth/realms/rhoas/protocol/openid-connect/token\n        valid_issuer: https://identity.api.openshift.com/auth/realms/rhoas\n    ServiceAccountByIdExample:\n      value:\n        id: \"1\"\n        kind: ServiceAccount\n        href: /api/kafkas_mgmt/v1/serviceaccounts/1\n        name: my-app-sa\n        description: service account for my app\n        client_id: SA-121212\n        owner: test-user\n        created_by: test-user\n        created_at: 2021-04-07T16:24:01+05:30\n    ServiceAccountListItemExample:\n      value:\n        id: \"1\"\n        kind: ServiceAccountListItem\n        href: /api/kafkas_mgmt/v1/serviceaccounts/1\n        name: my-app-sa\n        description: service account for my app\n        client_id: SA-121212\n        owner: test-user\n        created_by: test-user\n        created_at: 2021-04-07T16:24:01+05:30\n    MetricsRangeQueryExample:\n      value:\n        metric:\n          __name__: kafka_server_brokertopicmetrics_bytes_in_total\n          strimzi_io_cluster: kafka-service\n          topic: __consumer_offsets\n        values:\n        - timestamp: 1611670230000\n          value: 84154\n        - timestamp: 1611670260000\n          value: 85888\n        - timestamp: 1611670290000\n          value: 87622\n    MetricsInstantQueryExample:\n      value:\n        metric:\n          __name__: kafka_server_brokertopicmetrics_bytes_in_total\n          strimzi_io_cluster: kafka-service\n          topic: __consumer_offsets\n        timestamp: 1611670230000\n        value: 84154\n    \"400DeletionExample\":\n      value:\n        id: \"103\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/103\n        code: KAFKAS-MGMT-103\n        reason: Synchronous action is not supported, use async=true parameter\n        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa\n    \"400CreationExample\":\n      value:\n        id: \"103\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/103\n        code: KAFKAS-MGMT-103\n        reason: Synchronous action is not supported, use async=true parameter\n        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa\n    \"400InvalidQueryExample\":\n      value:\n        id: \"23\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/23\n        code: KAFKAS-MGMT-23\n        reason: 'Failed to parse search query: Unable to list Kafka requests for api_kafka_service:\n          KAFKAS-MGMT-23: Failed to parse search query: Unsupported column name for\n          search: ''id''. Supported column names are: region, name, cloud_provider,\n          name, status. Query invalid: id = 123'\n        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv\n    \"400UnsupportedProviderExample\":\n      value:\n        id: \"30\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/30\n        code: KAFKAS-MGMT-30\n        reason: Provider not supported\n        operation_id: c980htvgvcn9kf51d0n0\n    \"400UnsupportedRegionExample\":\n      value:\n        id: \"31\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/31\n        code: KAFKAS-MGMT-31\n        reason: Region not supported\n        operation_id: c980htvgvcn9kf51d0n0\n    \"400MissingParameterExample\":\n      value:\n        id: \"21\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/21\n        code: KAFKAS-MGMT-21\n        reason: 'missing path parameter: kafka id'\n        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv\n    \"404Example\":\n      value:\n        id: \"7\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/7\n        code: KAFKAS-MGMT-7\n        reason: The requested resource doesn't exist\n    \"404DeleteExample\":\n      value:\n        id: \"7\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/7\n        code: KAFKAS-MGMT-7\n        reason: KafkaResource with id='1iK3duVYIvv5YvLlyz1mGR3JyqN' not found\n        operation_id: 1iYO7g2g6HTdUKUa2ksH82kQD3y\n    \"401Example\":\n      value:\n        id: \"11\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/11\n        code: KAFKAS-MGMT-11\n        reason: 'Unable to verify JWT token: Required authorization token not found'\n        operation_id: 1iY3UhEhwmXBpWPfI2lNekpd4ZD\n    \"403Example\":\n      value:\n        id: \"4\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/4\n        code: KAFKAS-MGMT-4\n        reason: User 'foo-bar' is not authorized to access the service.\n        operation_id: 1lY3UiEhznXBpWPfI2lNejpd4YC\n    \"403MaxAllowedInstanceReachedExample\":\n      value:\n        id: \"5\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/5\n        code: KAFKAS-MGMT-5\n        reason: User 'foo-bar' has reached a maximum number of 6 allowed streaming\n          units.\n        operation_id: 1lY3UiEkxnXBpVPeI2oNejd3XB\n    \"403TermsNotAcceptedExample\":\n      value:\n        id: \"12\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/12\n        code: KAFKAS-MGMT-12\n        reason: Required terms have not been accepted\n        operation_id: kXCzWPeI2oXBpVPeI2LvF9jMQY\n    \"409NameConflictExample\":\n      value:\n        id: \"36\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/36\n        code: KAFKAS-MGMT-36\n        reason: Kafka cluster name is already used\n        operation_id: 6kY0UiEkzkXCzWPeI2oYehd3ED\n    \"500Example\":\n      value:\n        id: \"9\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/9\n        code: KAFKAS-MGMT-9\n        reason: Unspecified error\n        operation_id: 1ieELvF9jMQY6YghfM9gGRsHvEW\n    \"500DeleteExample\":\n      value:\n        id: \"9\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/9\n        code: KAFKAS-MGMT-9\n        reason: 'error deleting syncset: OCM-EX-9: failed to delete syncset: ext-serviceapi-1ix03lndlmq0qfc7sita5sljv8e\n          for cluster id: 1g5d88q0lrcdv4g7alb7slfgnj3dhbsj%!(EXTRA *errors.Error=identifier\n          is ''404'', code is ''CLUSTERS-MGMT-404'' and operation identifier is ''1g5or50viu07oealuehrkc26dgftj1ac'':\n          Cluster ''1g5d88q0lrcdv4g7alb7slfgnj3dhbsj'' not found)'\n        operation_id: 1iYTsWry6nsqb2sNmFj5bXpD7Ca\n  parameters:\n    id:\n      description: The ID of record\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n      style: simple\n    duration:\n      description: The length of time in minutes for which to return the metrics\n      examples:\n        duration:\n          value: 5\n      explode: true\n      in: query\n      name: duration\n      required: true\n      schema:\n        default: 5\n        format: int64\n        maximum: 4320\n        minimum: 1\n        type: integer\n      style: form\n    interval:\n      description: The interval in seconds between data points\n      examples:\n        interval:\n          value: 30\n      explode: true\n      in: query\n      name: interval\n      required: true\n      schema:\n        default: 30\n        format: int64\n        maximum: 10800\n        minimum: 1\n        type: integer\n      style: form\n    filters:\n      description: List of metrics to fetch. Fetch all metrics when empty. List entries\n        are Kafka internal metric names.\n      explode: true\n      in: query\n      name: filters\n      required: false\n      schema:\n        default: []\n        items:\n          type: string\n        type: array\n      style: form\n    page:\n      description: Page index\n      examples:\n        page:\n          value: \"1\"\n      explode: true\n      in: query\n      name: page\n      required: false\n      schema:\n        type: string\n      style: form\n    size:\n      description: Number of items in each page\n      examples:\n        size:\n          value: \"100\"\n      explode: true\n      in: query\n      name: size\n      required: false\n      schema:\n        type: string\n      style: form\n    orderBy:\n      description: |-\n        Specifies the order by criteria. The syntax of this parameter is\n        similar to the syntax of the `order by` clause of an SQL statement.\n        Each query can be ordered by any of the following `kafkaRequests` fields:\n\n        * bootstrap_server_host\n        * admin_api_server_url\n        * cloud_provider\n        * cluster_id\n        * created_at\n        * href\n        * id\n        * instance_type\n        * multi_az\n        * name\n        * organisation_id\n        * owner\n        * reauthentication_enabled\n        * region\n        * status\n        * updated_at\n        * version\n\n        For example, to return all Kafka instances ordered by their name, use the following syntax:\n\n        ```sql\n        name asc\n        ```\n\n        To return all Kafka instances ordered by their name _and_ created date, use the following syntax:\n\n        ```sql\n        name asc, created_at asc\n        ```\n\n        If the parameter isn't provided, or if the value is empty, then\n        the results are ordered by name.\n      examples:\n        orderBy:\n          value: name asc\n      explode: true\n      in: query\n      name: orderBy\n      required: false\n      schema:\n        type: string\n      style: form\n    search:\n      description: |\n        Search criteria.\n\n        The syntax of this parameter is similar to the syntax of the `where` clause of an\n        SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `\u003c\u003e`, `=`, or `LIKE`.\n        Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.\n\n        Examples:\n\n        To return a Kafka instance with the name `my-kafka` and the region `aws`, use the following syntax:\n\n        ```\n        name = my-kafka and cloud_provider = aws\n        ```[p-]\n\n        To return a Kafka instance with a name that starts with `my`, use the following syntax:\n\n        ```\n        name like my%25\n        ```\n\n        If the parameter isn't provided, or if the value is empty, then all the Kafka instances\n        that the user has permission to see are returned.\n\n        Note. If the query is invalid, an error is returned.\n      examples:\n        search:\n          value: name = my-kafka and cloud_provider = aws\n      explode: true\n      in: query\n      name: search\n      required: false\n      schema:\n        type: string\n      style: form\n  schemas:\n    ObjectReference:\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n        href:\n          type: string\n      type: object\n    List:\n      properties:\n        kind:\n          type: string\n        page:\n          type: integer\n        size:\n          type: integer\n        total:\n          type: integer\n        items:\n          items:\n            $ref: '#/components/schemas/ObjectReference'\n          type: array\n      required:\n      - items\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    Error:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Error_allOf'\n    ErrorList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/ErrorList_allOf'\n    KafkaRequest:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/KafkaRequest_allOf'\n    KafkaRequestList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/KafkaRequestList_allOf'\n    VersionMetadata:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/VersionMetadata_allOf'\n    KafkaRequestPayload:\n      description: Schema for the request body sent to /kafkas POST\n      example:\n        reauthentication_enabled: true\n        marketplace: marketplace\n        billing_model: billing_model\n        billing_cloud_account_id: billing_cloud_account_id\n        name: name\n        cloud_provider: cloud_provider\n        region: region\n        plan: plan\n      properties:\n        cloud_provider:\n          description: The cloud provider where the Kafka cluster will be created\n            in\n          type: string\n        name:\n          description: The name of the Kafka cluster. It must consist of lower-case\n            alphanumeric characters or '-', start with an alphabetic character, and\n            end with an alphanumeric character, and can not be longer than 32 characters.\n          type: string\n        region:\n          description: The region where the Kafka cluster will be created in\n          type: string\n        reauthentication_enabled:\n          description: Whether connection reauthentication is enabled or not. If set\n            to true, connection reauthentication on the Kafka instance will be required\n            every 5 minutes. The default value is true\n          nullable: true\n          type: boolean\n        plan:\n          description: kafka plan in a format of \u003cinstance_type\u003e.\u003csize_id\u003e\n          type: string\n        billing_cloud_account_id:\n          description: cloud account id used to purchase the instance\n          nullable: true\n          type: string\n        marketplace:\n          description: marketplace where the instance is purchased on\n          nullable: true\n          type: string\n        billing_model:\n          description: billing model to use\n          nullable: true\n          type: string\n      required:\n      - name\n      type: object\n    SupportedKafkaInstanceTypesList:\n      allOf:\n      - $ref: '#/components/schemas/SupportedKafkaInstanceTypesList_allOf'\n    SupportedKafkaInstanceType:\n      description: Supported Kafka instance type\n      properties:\n        id:\n          description: Unique identifier of the Kafka instance type.\n          type: string\n        display_name:\n          description: Human readable name of the supported Kafka instance type\n          type: string\n        sizes:\n          description: ' A list of Kafka instance sizes available for this instance\n            type'\n          items:\n            allOf:\n            - $ref: '#/components/schemas/SupportedKafkaSize'\n          type: array\n      type: object\n    SupportedKafkaSize:\n      description: Supported Kafka Size\n      properties:\n        id:\n          description: Unique identifier of this Kafka instance size.\n          type: string\n        display_name:\n          description: Display name of this Kafka instance size.\n          type: string\n        ingress_throughput_per_sec:\n          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'\n        egress_throughput_per_sec:\n          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'\n        total_max_connections:\n          description: Maximum amount of total connections available to this Kafka\n            instance size.\n          type: integer\n        max_data_retention_size:\n          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'\n        max_partitions:\n          description: Maximum amount of total partitions available to this Kafka\n            instance size.\n          type: integer\n        max_data_retention_period:\n          description: Maximum data retention period available to this Kafka instance\n            size.\n          type: string\n        max_connection_attempts_per_sec:\n          description: Maximium connection attempts per second available to this Kafka\n            instance size.\n          type: integer\n        max_message_size:\n          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'\n        min_in_sync_replicas:\n          description: Minimum number of in-sync replicas.\n          type: integer\n        replication_factor:\n          description: Replication factor available to this Kafka instance size.\n          type: integer\n        supported_az_modes:\n          description: List of Availability Zone modes that this Kafka instance size\n            supports. The possible values are \"single\", \"multi\".\n          items:\n            type: string\n          type: array\n        lifespan_seconds:\n          description: The limit lifespan of the kafka instance in seconds. If not\n            specified then the instance never expires.\n          nullable: true\n          type: integer\n        quota_consumed:\n          description: Quota consumed by this Kafka instance size.\n          type: integer\n        quota_type:\n          description: Quota type used by this Kafka instance size.\n          type: string\n        capacity_consumed:\n          description: Data plane cluster capacity consumed by this Kafka instance\n            size.\n          type: integer\n        maturity_status:\n          description: Maturity level of the size. Can be \"stable\" or \"preview\".\n          type: string\n      type: object\n    SupportedKafkaSizeBytesValueItem:\n      properties:\n        bytes:\n          format: int64\n          type: integer\n      type: object\n    CloudProviderList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/CloudProviderList_allOf'\n    CloudRegionList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/CloudRegionList_allOf'\n    CloudProvider:\n      description: Cloud provider.\n      properties:\n        kind:\n          description: Indicates the type of this object. Will be 'CloudProvider'\n            link.\n          type: string\n        id:\n          description: Unique identifier of the object.\n          type: string\n        display_name:\n          description: Name of the cloud provider for display purposes.\n          type: string\n        name:\n          description: Human friendly identifier of the cloud provider, for example\n            `aws`.\n          type: string\n        enabled:\n          description: Whether the cloud provider is enabled for deploying an OSD\n            cluster.\n          type: boolean\n      required:\n      - enabled\n    CloudRegion:\n      description: Description of a region of a cloud provider.\n      properties:\n        kind:\n          description: Indicates the type of this object. Will be 'CloudRegion'.\n          type: string\n        id:\n          description: Unique identifier of the object.\n          type: string\n        display_name:\n          description: Name of the region for display purposes, for example `N. Virginia`.\n          type: string\n        enabled:\n          default: false\n          description: Whether the region is enabled for deploying an OSD cluster.\n          type: boolean\n        capacity:\n          description: Indicates whether there is capacity left per instance type\n          items:\n            $ref: '#/components/schemas/RegionCapacityListItem'\n          type: array\n      required:\n      - capacity\n      - enabled\n    ServiceAccount:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/ServiceAccount_allOf'\n      description: Service Account created in MAS-SSO for the Kafka Cluster for authentication\n    ServiceAccountRequest:\n      description: Schema for the request to create a service account\n      example:\n        $ref: '#/components/examples/ServiceAccountRequestExample'\n      properties:\n        name:\n          description: The name of the service account\n          type: string\n        description:\n          description: A description for the service account\n          type: string\n      required:\n      - name\n      type: object\n    RegionCapacityListItem:\n      description: schema for a kafka instance type capacity in region\n      properties:\n        instance_type:\n          description: kafka instance type\n          type: string\n        available_sizes:\n          description: list of available Kafka instance sizes that can be created\n            in this region when taking account current capacity and regional limits\n          items:\n            type: string\n          type: array\n      required:\n      - available_sizes\n      - instance_type\n      type: object\n    ServiceAccountListItem:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/ServiceAccountListItem_allOf'\n    ServiceAccountList:\n      allOf:\n      - $ref: '#/components/schemas/ServiceAccountList_allOf'\n    SsoProvider:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/SsoProvider_allOf'\n      description: SSO Provider\n    MetricsRangeQueryList:\n      allOf:\n      - $ref: '#/components/schemas/MetricsRangeQueryList_allOf'\n    RangeQuery:\n      properties:\n        metric:\n          additionalProperties:\n            type: string\n          type: object\n        values:\n          items:\n            $ref: '#/components/schemas/values'\n          type: array\n      type: object\n    values:\n      properties:\n        timestamp:\n          format: int64\n          type: integer\n        value:\n          format: double\n          type: number\n      required:\n      - value\n      type: object\n    MetricsInstantQueryList:\n      allOf:\n      - $ref: '#/components/schemas/MetricsInstantQueryList_allOf'\n    MetricsFederationResult:\n      type: string\n    InstantQuery:\n      properties:\n        metric:\n          additionalProperties:\n            type: string\n          type: object\n        timestamp:\n          format: int64\n          type: integer\n        value:\n          format: double\n          type: number\n      required:\n      - value\n      type: object\n    KafkaUpdateRequest:\n      example:\n        owner: owner\n        reauthentication_enabled: true\n      properties:\n        owner:\n          nullable: true\n          type: string\n        reauthentication_enabled:\n          description: Whether connection reauthentication is enabled or not. If set\n            to true, connection reauthentication on the Kafka instance will be required\n            every 5 minutes.\n          nullable: true\n          type: boolean\n      type: object\n    Error_allOf:\n      properties:\n        code:\n          type: string\n        reason:\n          type: string\n        operation_id:\n          type: string\n    ErrorList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n    KafkaRequest_allOf:\n      example: '{\"$ref\":\"#/components/examples/KafkaRequestExample\"}'\n      properties:\n        status:\n          description: 'Values: [accepted, preparing, provisioning, ready, failed,\n            deprovision, deleting] '\n          type: string\n        cloud_provider:\n          description: Name of Cloud used to deploy. For example AWS\n          type: string\n        multi_az:\n          type: boolean\n        region:\n          description: 'Values will be regions of specific cloud provider. For example:\n            us-east-1 for AWS'\n          type: string\n        owner:\n          type: string\n        name:\n          type: string\n        bootstrap_server_host:\n          type: string\n        admin_api_server_url:\n          description: The kafka admin server url to perform kafka admin operations\n            e.g acl management etc. The value will be available when the Kafka has\n            been fully provisioned i.e it reaches a 'ready' state\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        expires_at:\n          format: date-time\n          nullable: true\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        failed_reason:\n          type: string\n        version:\n          type: string\n        instance_type:\n          type: string\n        instance_type_name:\n          type: string\n        reauthentication_enabled:\n          type: boolean\n        kafka_storage_size:\n          type: string\n        browser_url:\n          type: string\n        size_id:\n          type: string\n        ingress_throughput_per_sec:\n          type: string\n        egress_throughput_per_sec:\n          type: string\n        total_max_connections:\n          type: integer\n        max_partitions:\n          type: integer\n        max_data_retention_period:\n          type: string\n        max_connection_attempts_per_sec:\n          type: integer\n        billing_cloud_account_id:\n          type: string\n        marketplace:\n          type: string\n        billing_model:\n          type: string\n      required:\n      - multi_az\n      - reauthentication_enabled\n    KafkaRequestList_allOf:\n      example: '{\"kind\":\"KafkaRequestList\",\"page\":\"1\",\"size\":\"1\",\"total\":\"1\",\"item\":{\"$ref\":\"#/components/examples/KafkaRequestExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/KafkaRequest'\n          type: array\n    VersionMetadata_allOf:\n      example: '{\"kind\":\"APIVersion\",\"id\":\"v1\",\"href\":\"/api/kafkas_mgmt/v1\",\"collections\":[{\"id\":\"kafkas\",\"href\":\"/api/kafkas_mgmt/v1/kafkas\",\"kind\":\"KafkaList\"}]}'\n      properties:\n        collections:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/ObjectReference'\n          type: array\n    SupportedKafkaInstanceTypesList_allOf:\n      example: '{\"instance_types\":{\"$ref\":\"#/components/examples/SupportedKafkaInstanceTypeListExample\"}}'\n      properties:\n        instance_types:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/SupportedKafkaInstanceType'\n          type: array\n    CloudProviderList_allOf:\n      example: '{\"kind\":\"CloudProviderList\",\"page\":\"1\",\"size\":\"1\",\"total\":\"1\",\"item\":{\"$ref\":\"#/components/examples/CloudProviderExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/CloudProvider'\n          type: array\n    CloudRegionList_allOf:\n      example: '{\"kind\":\"CloudRegionList\",\"page\":\"1\",\"size\":\"1\",\"total\":\"1\",\"item\":{\"$ref\":\"#/components/examples/CloudRegionExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/CloudRegion'\n          type: array\n    ServiceAccount_allOf:\n      example: '{\"$ref\":\"#/components/examples/ServiceAccountExample\"}'\n      properties:\n        id:\n          description: server generated unique id of the service account\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        client_id:\n          type: string\n        client_secret:\n          type: string\n        owner:\n          deprecated: true\n          type: string\n        created_by:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n    ServiceAccountListItem_allOf:\n      properties:\n        id:\n          description: server generated unique id of the service account\n          type: string\n        client_id:\n          description: client id of the service account\n          type: string\n        name:\n          description: name of the service account\n          type: string\n        owner:\n          deprecated: true\n          description: owner of the service account\n          type: string\n        created_by:\n          description: service account created by the user\n          type: string\n        created_at:\n          description: service account creation timestamp\n          format: date-time\n          type: string\n        description:\n          description: description of the service account\n          type: string\n    ServiceAccountList_allOf:\n      example: '{\"kind\":\"ServiceAccountList\",\"items\":[{\"$ref\":\"#/components/examples/ServiceAccountListItemExample\"}]}'\n      properties:\n        kind:\n          type: string\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/ServiceAccountListItem'\n          type: array\n      required:\n      - items\n      - kind\n    SsoProvider_allOf:\n      example: '{\"$ref\":\"#/components/examples/SsoProviderExample\"}'\n      properties:\n        name:\n          description: name of the sso provider\n          type: string\n        base_url:\n          description: base url\n          type: string\n        token_url:\n          type: string\n        jwks:\n          type: string\n        valid_issuer:\n          type: string\n    MetricsRangeQueryList_allOf:\n      example: '{\"kind\":\"MetricsRangeQueryList\",\"id\":\"1nbpS70HduPe4l0to8jSg2CLzfu\",\"items\":{\"$ref\":\"#/components/examples/MetricsRangeQueryExample\"}}'\n      properties:\n        kind:\n          type: string\n        id:\n          type: string\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/RangeQuery'\n          type: array\n    MetricsInstantQueryList_allOf:\n      example: '{\"kind\":\"MetricsInstantQueryList\",\"id\":\"1nbpS70HduPe4l0to8jSg2CLzfu\",\"items\":{\"$ref\":\"#/components/examples/MetricsInstantQueryExample\"}}'\n      properties:\n        kind:\n          type: string\n        id:\n          type: string\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/InstantQuery'\n          type: array\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager@552271f1f81235aa585f111155c52cb2429fa941/-/blob/internal/kafka/internal/api/public/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager/blob/552271f1f81235aa585f111155c52cb2429fa941/internal/kafka/internal/api/public/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/kafkas_mgmt/v1/kafkas\": get: responses: 200: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: merge item schema: schema type mismatch:  and object"
}