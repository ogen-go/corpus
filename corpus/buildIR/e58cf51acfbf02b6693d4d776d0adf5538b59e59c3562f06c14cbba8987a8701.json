{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hirose31/connexion-tiny-petstore"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tiny_petstore/openapi/openapi.yaml",
			"byteSize": 11352,
			"content": "openapi: 3.0.2\ninfo:\n  contact:\n    email: hirose31@gmail.com\n  description: |\n    This is a yet another example pet store API server using\n    [Connexion](https://github.com/zalando/connexion) .\n\n    - [Repository](https://github.com/hirose31/connexion-tiny-petstore)\n\n    # search resource expression\n\n    ## examples\n\n\n    ```jsonc\n    // WHERE name = 'foo' AND age > 20\n    {\n        \"name\": \"foo\",\n        \"age\": {\">\": 20}\n    }\n    ```\n\n    ```jsonc\n    // WHERE addresses.email like \"%@example.org\"\n    {\n        \"addresses.email\": {\"like\": \"%@example.org\"}\n    }\n    ```\n\n    ```jsonc\n    // WHERE age >= 6 AND age <= 12\n    {\n        \"age\": [\"and\", {\">=\": 6}, {\"<=\": 12}]\n    }\n    ```\n\n    ## rules\n\n    ```\n    // FILTER\n    {\n        ATTR: EXPR,\n        ATTR: EXPR,\n        ...\n    }\n    ```\n\n    ```\n    // ATTR\n    column_name\n    joined_table.column_name\n    ```\n\n    ```\n    // EXPR\n    // comparison expr\n    { OP: VALUE }\n    { OP: [VALUE, VALUE, ...] }\n    VALUE # shorthand for { \"==\": VALUE }\n\n    // boolean expr\n    [\"or\", EXPR, EXPR, ...]\n    [\"and\", EXPR, EXPR, ...]\n    ```\n\n    ```\n    // OP\n    ==\n    !=\n    in\n    !in\n    >\n    >=\n    <\n    <=\n    like\n    !like\n    ```\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/mit-license.php\n  title: Tiny Pet Store\n  version: 3.0.0\nservers:\n- url: /v3\ntags:\n- description: Everything about your Pets\n  name: pet\n- description: Access to Pet store\n  name: store\npaths:\n  /pets:\n    get:\n      description: |\n        Returns all pets.\n      operationId: fetch_all_pets\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Pet'\n                type: array\n          description: successful operation\n      summary: Returns pets\n      tags:\n      - pet\n      x-openapi-router-controller: tiny_petstore.controllers.pet_controller\n    post:\n      operationId: create_pet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PetNew'\n        description: Pet object that needs to be added to the store\n        required: true\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n          description: successful operation\n        400:\n          description: Bad Request\n      summary: Add a new pet to the store\n      tags:\n      - pet\n      x-openapi-router-controller: tiny_petstore.controllers.pet_controller\n  /pets/{id}:\n    delete:\n      operationId: delete_pet\n      parameters:\n      - description: Pet id to delete\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          format: int64\n          type: integer\n        style: simple\n      responses:\n        204:\n          description: successful operation (No Content)\n        400:\n          description: Invalid pet value\n      summary: Deletes a pet\n      tags:\n      - pet\n      x-openapi-router-controller: tiny_petstore.controllers.pet_controller\n    get:\n      description: Returns a single pet\n      operationId: fetch_pet\n      parameters:\n      - description: ID of pet to return\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          format: int64\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n          description: successful operation\n        400:\n          description: Invalid ID supplied\n        404:\n          description: Pet not found\n      summary: Find pet by ID\n      tags:\n      - pet\n      x-openapi-router-controller: tiny_petstore.controllers.pet_controller\n    patch:\n      operationId: update_pet\n      parameters:\n      - description: ID of pet that needs to be updated\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          format: int64\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PetUpdate'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n          description: successful operation\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      summary: Updates a pet\n      tags:\n      - pet\n      x-openapi-router-controller: tiny_petstore.controllers.pet_controller\n  /search/pets:\n    post:\n      description: |\n        Returns pets which matched by search conditions.\n      operationId: search_pets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                store.name:\n                  like: '%Pet%'\n                status:\n                  in:\n                  - pending\n                  - sold\n              type: object\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Pet'\n                type: array\n          description: successful operation\n      summary: Returns pets matched search conditions\n      tags:\n      - pet\n      x-openapi-router-controller: tiny_petstore.controllers.pet_controller\n  /stores:\n    get:\n      description: |\n        Returns all stores.\n      operationId: fetch_all_stores\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Store'\n                type: array\n          description: successful operation\n      summary: Returns stores\n      tags:\n      - store\n      x-openapi-router-controller: tiny_petstore.controllers.store_controller\n    post:\n      operationId: create_store\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoreNew'\n        description: Store object that needs to be added to the store\n        required: true\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: successful operation\n        400:\n          description: Bad Request\n      summary: Add a new store to the store\n      tags:\n      - store\n      x-openapi-router-controller: tiny_petstore.controllers.store_controller\n  /stores/{id}:\n    delete:\n      operationId: delete_store\n      parameters:\n      - description: Store id to delete\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          format: int64\n          type: integer\n        style: simple\n      responses:\n        204:\n          description: successful operation (No Content)\n        400:\n          description: Invalid store value\n      summary: Deletes a store\n      tags:\n      - store\n      x-openapi-router-controller: tiny_petstore.controllers.store_controller\n    get:\n      description: Returns a single store\n      operationId: fetch_store\n      parameters:\n      - description: ID of store to return\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          format: int64\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: successful operation\n        400:\n          description: Invalid ID supplied\n        404:\n          description: Store not found\n      summary: Find store by ID\n      tags:\n      - store\n      x-openapi-router-controller: tiny_petstore.controllers.store_controller\n    patch:\n      operationId: update_store\n      parameters:\n      - description: ID of store that needs to be updated\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          format: int64\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoreUpdate'\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: successful operation\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      summary: Updates a store\n      tags:\n      - store\n      x-openapi-router-controller: tiny_petstore.controllers.store_controller\n  /search/stores:\n    post:\n      description: |\n        Returns stores which matched by search conditions.\n      operationId: search_stores\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                name:\n                  like: '%Pet%'\n                address:\n                  ==: Tokyo\n              type: object\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Store'\n                type: array\n          description: successful operation\n      summary: Returns stores matched search conditions\n      tags:\n      - store\n      x-openapi-router-controller: tiny_petstore.controllers.store_controller\ncomponents:\n  schemas:\n    PetCore:\n      properties:\n        name:\n          example: tama\n          pattern: ^[A-Za-z0-9]\n          type: string\n        status:\n          default: pending\n          description: pet status in the store\n          enum:\n          - available\n          - pending\n          - sold\n          example: available\n          type: string\n      type: object\n    PetNew:\n      allOf:\n      - $ref: '#/components/schemas/PetCore'\n      - $ref: '#/components/schemas/StoreRef'\n      - required:\n        - name\n        - store.name\n    Pet:\n      allOf:\n      - $ref: '#/components/schemas/PetCore'\n      - properties:\n          id:\n            example: 1\n            format: int64\n            type: integer\n          store:\n            $ref: '#/components/schemas/Store'\n    PetUpdate:\n      allOf:\n      - $ref: '#/components/schemas/PetCore'\n      - $ref: '#/components/schemas/StoreRef'\n    StoreCore:\n      properties:\n        name:\n          example: The Pet Mansion\n          pattern: ^[A-Za-z0-9]\n          type: string\n        address:\n          example: Tokyo\n          type: string\n      type: object\n    StoreNew:\n      allOf:\n      - $ref: '#/components/schemas/StoreCore'\n      - required:\n        - address\n        - name\n    Store:\n      allOf:\n      - $ref: '#/components/schemas/StoreCore'\n      - properties:\n          id:\n            example: 1\n            format: int64\n            type: integer\n    StoreUpdate:\n      allOf:\n      - $ref: '#/components/schemas/StoreCore'\n    StoreRef:\n      properties:\n        store.name:\n          example: The Pet Mansion\n          pattern: ^[A-Za-z0-9]\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/hirose31/connexion-tiny-petstore@1ab20240bd333163dfa71f0858a9fbcf84bd828e/-/blob/tiny_petstore/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hirose31/connexion-tiny-petstore/blob/1ab20240bd333163dfa71f0858a9fbcf84bd828e/tiny_petstore/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/stores\": post: requestBody: contents: application/json: generate schema: allOf: schema type mismatch: object and "
}