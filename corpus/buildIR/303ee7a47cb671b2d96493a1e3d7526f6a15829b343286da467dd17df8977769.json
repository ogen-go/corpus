{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "customers.v3.yml",
			"size": 0,
			"path": "reference/customers.v3.yml",
			"byteSize": 128386,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api.bigcommerce.com'\n    variables:\n      $$.env.store_hash:\n        default: store_hash\ntags:\n  - name: Customers\n    description: BigCommerce Customers API Definition.\n  - name: Customer Addresses\n  - name: Customer Attributes\n  - name: Customer Attribute Values\n  - name: Customer Form Field Values\n  - name: Customer Consent\n  - name: Customer Form Fields\n  - name: Customer Stored Instruments\n  - name: Customer Settings\n  - name: Customer Settings Channel\n  - name: Customer Validate Credentials\nx-stoplight:\n  docs:\n    includeDownloadLink: false\n    showModels: false\nsecurity:\n  - X-Auth-Client: []\n  - X-Auth-Token: []\ninfo:\n  version: ''\n  title: Customers V3\n  description: |-\n    Create and manage customers.\n\n    ## Authentication\n\n    Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:\n\n    ```http\n    GET /stores/{store_hash}/v3/customers\n    host: api.bigcommerce.com\n    Accept: application/json\n    X-Auth-Token: {access_token}\n    ```\n\n    |Header|Parameter|Description|\n    |-|-|-|\n    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n    ### OAuth Scopes\n\n    | UI Name                                      | Permission | Parameter                                     |\n    |----------------------------------------------|------------|-----------------------------------------------|\n    | Customers                                    | modify     | `store_v2_customers`                          |\n    | Customers                                    | read-only  | `store_v2_customers_read_only`                |\n    | Stored Payment Instruments                   | modify     | `store_stored_payment_instruments`            |\n    | Stored Payment Instruments                   | read-only  | `store_stored_payment_instruments_read_only`  |\n\n    For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\n\n    ## Resources\n    * [Customer and Subscribers Overview](/api-docs/customers/customers-subscribers-overview).\n  contact: {}\npaths:\n  '/stores/{store_hash}/v3/customers':\n    get:\n      description: |-\n        Returns a list of Customers. Optional filter parameters can be passed in.\n\n        **Notes**\n\n        Attribute names are not available on the customer object.\n      summary: Get All Customers\n      tags:\n        - Customers\n      operationId: CustomersGet\n      deprecated: false\n      parameters:\n        - name: page\n          in: query\n          description: Page number. `page=1`\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: Items count per page. `limit=50`\n          schema:\n            type: number\n        - name: 'id:in'\n          in: query\n          description: |-\n            Filter items by ID.\n            `id:in=4,5,6`\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: 'company:in'\n          in: query\n          description: 'Filter items by company. `company:in=bigcommerce,commongood`'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'customer_group_id:in'\n          in: query\n          description: 'Filter items by customer_group_id. `customer_group_id:in=5,6`'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: date_created\n          in: query\n          description: 'Filter items by date_created. `date_created=2018-09-05T13:43:54`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_created:max'\n          in: query\n          description: 'Filter items by maximum date_created. `date_created:max=2018-09-10`'\n          schema:\n            type: string\n        - name: 'date_created:min'\n          in: query\n          description: 'Filter items by date_created. `date_created:min=2018-09-05`'\n          schema:\n            type: string\n            format: date-time\n        - name: date_modified\n          in: query\n          description: 'Filter items by date_modified. `date_modified=2018-09-05T13:45:03`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_modified:min'\n          in: query\n          description: 'Filter items by mininum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`'\n          schema:\n            type: string\n        - name: 'date_modified:max'\n          in: query\n          description: 'Filter items by maximum date_modified `date_modified:max=2018-09-05T13:45:03` or `date_modified:max=2019-09-04`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'email:in'\n          in: query\n          description: 'Filter items by email. `email:in=janedoe@example.com`'\n          schema:\n            type: string\n        - name: 'name:in'\n          in: query\n          description: Filter items by first_name and last_name. `name=james moriarty`\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'name:like'\n          in: query\n          description: |-\n            Filter items by substring in first_name and last_name.\n            `name:like=moriarty, sherlock`\n            Concatenates the first_name and last_name fields.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'registration_ip_address:in'\n          in: query\n          description: |-\n            Filter items by registration_ip_address. If the customer was created using the API, then registration address is blank.\n            `registration_ip_address:in=12.345.6.789`\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: include\n          in: query\n          description: |-\n            Indicates whether to include customer sub-resources:\n             * `addresses` - customer addresses\n             * `storecredit` - store credit\n             * `attributes` - customer attributes and address attributes\n             * `formfields` - customer and address form fields\n\n             `include=addresses,storecredit,attributes,formfields`\n          schema:\n            type: string\n            enum:\n              - addresses\n              - storecredit\n              - attributes\n              - formfields\n        - in: query\n          name: sort\n          description: 'Sort items by date_created, date_modified, or last_name:* `date_created:asc` - date created, ascending* `date_created:desc` - date created, descending* `last_name:asc` - last name, ascending* `last_name:desc` - last name, descending * `date_modified:asc` - date modified, ascending* `date_modified:desc`- date modified, descending  Example: `sort=last_name:asc`'\n          schema:\n            type: string\n            enum:\n              - 'date_created:asc'\n              - 'date_created:desc'\n              - 'last_name:asc'\n              - 'last_name:desc'\n              - 'date_modified:asc'\n              - 'date_modified:desc'\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerCollectionResponse'\n    post:\n      description: |-\n        Creates Customers. Multiple customers can be created in one call.\n\n        **Required Fields**\n        * last_name\n        * first_name\n        * email\n\n        **Required Fields Customer Address**\n        * first_name\n        * city\n        * country_code\n        * state_or_province\n        * last_name\n        * address1\n        * postal_code\n\n        **Required Fields Attributes**\n        * Attributes must be [created](/api-reference/customer-subscribers/v3-customers-api/customer-attributes/customersattributespost) **BEFORE** creating a customer.\n        * attribute_id\n        * attribute_value -- This is input as a string, regardless of the [Type](/api-reference/customer-subscribers/v3-customers-api/models/type).\n\n        **Limits**\n        * Limit of 10 concurrent requests.\n\n        **Notes**\n\n        A customer can be created with global access or channel-specific access.\n        * **Global access:**\n          * Make sure the channel has `allow_global_logins` enabled. This is on by default only for the default storefront. Find more info at [Customer Settings \u003e Channel](/api-reference/store-management/customers-v3/customer-settings-channel/customersettingschannelget).\n          * Omit `channel_ids` field, or provide `channel_ids: null`.\n        * **Channel-specific access:**\n          * Provide a `channel_ids` array containing the channels accessible by the customer. This array cannot be empty.\n      summary: Create Customers\n      tags:\n        - Customers\n      operationId: CustomersPost\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/customer_Post'\n            examples:\n              example-1:\n                value:\n                  - email: string@example.com\n                    first_name: string\n                    last_name: string\n                    company: string\n                    phone: string\n                    notes: string\n                    tax_exempt_category: string\n                    customer_group_id: 0\n                    addresses:\n                      - address1: Addr 1\n                        address2: ''\n                        address_type: residential\n                        city: San Francisco\n                        company: History\n                        country_code: US\n                        first_name: Ronald\n                        last_name: Swimmer\n                        phone: '707070707'\n                        postal_code: '33333'\n                        state_or_province: California\n                    authentication:\n                      force_password_reset: true\n                      new_password: string123\n                    accepts_product_review_abandoned_cart_emails: true\n                    store_credit_amounts:\n                      - amount: 43.15\n                    origin_channel_id: 1\n                    channel_ids:\n                      - 1\n        required: true\n        x-examples: {}\n        description: ''\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerCollectionResponse'\n        '422':\n          description: The *Customer* was not valid. This is the result of missing required fields or trying to edit a read only field. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n              examples:\n                response:\n                  value:\n                    status: 422\n                    title: Create customers failed.\n                    type: '/api-docs/getting-started/api-status-codes'\n                    errors:\n                      .customer_create: Error creating customers\n    put:\n      description: |-\n        Updates Customers. Subresource updates are not supported. Multiple customers can be updated in one call.\n\n        **Required Fields**\n        * id -- ID of the *Customer* This must be included in the request body\n\n        **Read Only Fields**\n        * id\n        * registration_ip_address\n        * date_created\n        * date_modified\n\n\n        **Notes**\n\n        * Attributes Values can not be updated using Update a Customer. Use the Update a [Customer Attribute Values](/api-reference/customer-subscribers/v3-customers-api/customer-attribute-values/customersattributevaluesput) endpoint.\n        * channel_ids -- Updating the list of channels a customer can access may create some side effects in a multi-storefront situation. This list determines which customer account we will use to authenticate a shopper given a channel.\n      summary: Update Customers\n      tags:\n        - Customers\n      operationId: CustomersPut\n      deprecated: false\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerCollectionResponse'\n        '422':\n          description: |\n            The `Customer` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/customer_Put'\n            examples:\n              example-1:\n                value:\n                  - email: string@examples.com\n                    first_name: string\n                    last_name: string\n                    company: string\n                    phone: string\n                    registration_ip_address: string\n                    notes: string\n                    tax_exempt_category: string\n                    customer_group_id: 0\n                    id: 1\n                    authentication:\n                      force_password_reset: true\n                      new_password: string123\n                    accepts_product_review_abandoned_cart_emails: true\n                    store_credit_amounts:\n                      - amount: 43.15\n                    channel_ids:\n                      - 1\n    delete:\n      description: |-\n        Deletes Customers.\n\n        **Required Query**\n        * id:in -- ID of the customer\n\n        **Notes**\n\n        A query is required to delete customers. If not provided, a 204 is returned, with no changes to the data.\n      summary: Delete Customers\n      tags:\n        - Customers\n      operationId: CustomersDelete\n      deprecated: false\n      parameters:\n        - in: query\n          name: 'id:in'\n          description: |-\n            Filter items by ID.\n            `id:in=4,5,6`\n          required: true\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n      responses:\n        '204':\n          description: ''\n          headers: {}\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/addresses':\n    get:\n      description: Returns a list of Customer Addresses. Optional filter parameters can be passed in.\n      summary: Get All Customer Addresses\n      operationId: CustomersAddressesGet\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: page\n          in: query\n          description: Page number. `page=1`\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: Items count per page. `limit=50`\n          schema:\n            type: number\n        - name: 'company:in'\n          in: query\n          description: 'Filter items by company. `company:in=bigcommerce,commongood`'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'name:in'\n          in: query\n          description: 'Filter items by first_name and last_name. `name:in=James+Moriarty`'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: 'customer_id:in'\n          description: 'Filter by the ID of the customer. Also accepts comma-separated IDs to filter for multiple customers. `customer_id:in=23,24,55`'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: include\n          in: query\n          description: |-\n            Indicates whether to include customer address sub-resources:\n            * `formfields` - address form fields\n            `include=formfields`\n          schema:\n            type: string\n            enum:\n              - formfields\n        - name: 'id:in'\n          in: query\n          description: |-\n            Filter items by ID.\n            `id:in=4,5,6`\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/AddressCollectionResponse'\n      tags:\n        - Customer Addresses\n    post:\n      description: Creates a Customer Address. Multiple customer addresses can be created in one call.\n      summary: Create a Customer Address\n      operationId: CustomersAddressesPost\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/address_Post'\n            examples: {}\n        required: true\n        x-examples:\n          application/json:\n            - first_name: John\n              last_name: Doe\n              address1: 111 E West Street\n              address2: '654'\n              city: Akron\n              state_or_province: Ohio\n              postal_code: '44325'\n              country_code: US\n              phone: '1234567890'\n              address_type: residential\n              customer_id: 11\n      responses:\n        '200':\n          $ref: '#/components/responses/AddressCollectionResponsePostPut'\n        '422':\n          description: |\n            The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      tags:\n        - Customer Addresses\n    put:\n      description: |-\n        Updates a Customer Address. Multiple customer addresses can be updated in one call.\n\n        **Required Fields**\n        * id -- ID of the *Customer Address*\n        * customer_id -- ID of the *Customer*.\n\n        **Limits**\n        * Limit of 3 concurrent requests. \n      summary: Update a Customer Address\n      operationId: CustomersAddressesPut\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/address_Put'\n        required: true\n        x-examples:\n          application/json:\n            - first_name: John\n              last_name: Doe\n              id: 38\n              address1: 111 E West Street\n              address2: '654'\n              city: Akron\n              state_or_province: Ohio\n              postal_code: '44325'\n              country_code: US\n              phone: '1234567890'\n              address_type: residential\n              customer_id: 23\n      responses:\n        '200':\n          $ref: '#/components/responses/AddressCollectionResponsePostPut'\n        '422':\n          description: |\n            The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      tags:\n        - Customer Addresses\n    delete:\n      description: |-\n        Deletes a Customer Address.\n\n        **Required Query**\n        * id:in -- ID of the *Customer Address*\n      summary: Delete a Customer Address\n      operationId: CustomersAddressesDelete\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: query\n          name: 'id:in'\n          required: true\n          description: |-\n            Filter items by ID.\n            `id:in=4,5,6`\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n      responses:\n        '204':\n          description: ''\n          headers: {}\n      tags:\n        - Customer Addresses\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/validate-credentials':\n    post:\n      tags:\n        - Customer Validate Credentials\n      description: Validate a customer credentials - This endpoint has special rate limiting protections to protect against abuse.\n      summary: Validate a customer credentials\n      operationId: CustomerValidateCredentials\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCustomerCredentialsObject'\n            examples:\n              data:\n                value:\n                  email: foo@bar.com\n                  password: password\n                  channel_id: 1\n      responses:\n        '200':\n          description: Returns if the customer credentials provided are valid or not\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCustomerCredentialsResponseObject'\n              examples:\n                data:\n                  value:\n                    is_valid: true\n                    customer_id: 1\n        '422':\n          description: This is the result of missing required fields. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n        '429':\n          description: |\n            Allowed number of requests exceeded\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                    example: 429\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                    example: Too many requests\n                  type:\n                    type: string\n                    example: '/api-docs/getting-started/api-status-codes'\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n                    example: {}\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/settings':\n    get:\n      tags:\n        - Customer Settings\n      description: Returns the global-level customer settings.\n      summary: Get Customer Settings\n      operationId: CustomerSettingsGet\n      responses:\n        '200':\n          description: Returns customer settings values for global level\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerSettingsObject'\n              examples:\n                data:\n                  value:\n                    privacy_settings:\n                      ask_shopper_for_tracking_consent: true\n                      policy_url: 'https://bigcommmerce.com/policy'\n                    customer_group_settings:\n                      guest_customer_group_id: 1\n                      default_customer_group_id: 1\n    put:\n      tags:\n        - Customer Settings\n      description: Updates the customer settings on the global level.\n      summary: Update Customer Settings\n      operationId: CustomerSettingsPut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerSettingsObject'\n            examples:\n              example-1:\n                value:\n                  privacy_settings:\n                    ask_shopper_for_tracking_consent: true\n                    policy_url: 'https://bigcommmerce.com/policy'\n                  customer_group_settings:\n                    guest_customer_group_id: 0\n                    default_customer_group_id: 0\n        required: true\n      responses:\n        '200':\n          description: Customer settings are returned on a global level.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerSettingsObject'\n              examples:\n                data:\n                  value:\n                    privacy_settings:\n                      ask_shopper_for_tracking_consent: true\n                      policy_url: 'https://bigcommerce.com/policy'\n                      ask_shopper_for_tracking_consent_on_checkout: false\n                    customer_group_settings:\n                      guest_customer_group_id: 0\n                      default_customer_group_id: 0\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/settings/channels/{channel_id}':\n    get:\n      tags:\n        - Customer Settings Channel\n      description: |-\n        Returns the customer settings per channel.\n\n        **Notes**\n\n         * `null` indicates that there is no override per given channel and values are inherited from the global level.\n      summary: Get Customer Settings per Channel\n      operationId: CustomerSettingsChannelGet\n      parameters:\n        - in: path\n          name: channel_id\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Customer settings for this channel are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerChannelSettingsObject'\n              examples:\n                data:\n                  value:\n                    privacy_settings:\n                      ask_shopper_for_tracking_consent: true\n                      policy_url: 'https://bigcommmerce.com/policy'\n                    customer_group_settings:\n                      guest_customer_group_id: 1\n                      allow_global_logins: true\n    put:\n      tags:\n        - Customer Settings Channel\n      description: |-\n        Update the customer settings per channel\n\n        **Required Fields**\n\n        * `channel_id`: Provide a `channel_id` array containing one or more channel IDs. Customers will have access to these channels and no others. This array cannot be empty.\n\n        **Notes**\n\n        * Setting `null` will delete override per given channel, and values will be inherited from the global level. Make sure the channel has `allow_global_logins` enabled.\n      summary: Update Customer Settings per Channel\n      operationId: CustomerSettingsChannelPut\n      parameters:\n        - in: path\n          name: channel_id\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerChannelSettingsObject'\n            examples:\n              example-1:\n                value:\n                  privacy_settings:\n                    ask_shopper_for_tracking_consent: true\n                    policy_url: 'https://bigcommmerce.com/policy'\n                  customer_group_settings:\n                    guest_customer_group_id: 0\n                    default_customer_group_id: 0\n                  allow_global_logins: true\n        required: true\n      responses:\n        '200':\n          description: Customer settings are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerSettingsObject'\n              examples:\n                example:\n                  value:\n                    privacy_settings:\n                      ask_shopper_for_tracking_consent: true\n                      policy_url: 'https://bigcommmerce.com/policy'\n                      ask_shopper_for_tracking_consent_on_checkout: null\n                    customer_group_settings:\n                      guest_customer_group_id: 0\n                      default_customer_group_id: 0\n                    allow_global_logins: true\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: channel_id\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/attributes':\n    get:\n      description: Returns a list of Customer Attributes. You can pass in optional filter parameters.\n      summary: Get All Customer Attributes\n      operationId: CustomersAttributesGet\n      deprecated: false\n      parameters:\n        - name: page\n          in: query\n          description: Page number. `page=1`\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: Items count per page. `limit=50`\n          schema:\n            type: number\n        - name: name\n          in: query\n          required: false\n          description: Filter items by customer attribute name `name=Date+Joined`\n          schema:\n            type: string\n        - name: 'name:like'\n          in: query\n          required: false\n          description: 'Filter items by substring in customer attribute name. `name:like=join`'\n          schema:\n            type: string\n        - name: type\n          in: query\n          required: false\n          description: The type of the customer attribute.\n          schema:\n            type: string\n        - name: date_created\n          in: query\n          required: false\n          description: 'Filter items by `date_created`. `date_created=2021-01-07T20:28:16Z`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_created:max'\n          in: query\n          required: false\n          description: 'Filter items by maximum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_created:min'\n          in: query\n          required: false\n          description: 'Filter items by minimum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n            format: date-time\n        - name: date_modified\n          in: query\n          required: false\n          description: Filter items by `date_modified`.\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_modified:max'\n          in: query\n          required: false\n          description: 'Filter items by maximum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_modified:min'\n          in: query\n          required: false\n          description: 'Filter items by minimum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n            format: date-time\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerAttributesResponse'\n      tags:\n        - Customer Attributes\n    post:\n      description: |-\n        Creates a Customer Attribute. Multiple customer attributes can be created in one call.\n\n        **Required Fields**\n        * name\n        * type\n\n        **Limits**\n        * Limit of 3 concurrent requests.\n\n        **Notes**\n\n        Once the data type is set, it cannot be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.\n\n        Customer attributes are created separately from the customer. After the name and type are created, then the attributes can be added to the customer.\n\n        A store cannot have more than 50 customer attributes.\n      summary: Create a Customer Attribute\n      operationId: CustomersAttributesPost\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/attribute_Post'\n        required: true\n        x-examples:\n          application/json:\n            - name: Date Joined\n              type: date\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerAttributesResponse'\n        '422':\n          description: |\n            The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      tags:\n        - Customer Attributes\n    put:\n      description: |-\n        Updates a Customer Attribute. Multiple customer attributes can be updated in one call.\n\n        **Required Fields**\n        * id -- ID of the *Customer Attribute*\n\n        Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.\n\n        **Limits**\n        * Limit of 3 concurrent requests.\n      summary: Update a Customer Attribute\n      operationId: CustomersAttributesPut\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/attribute_Put'\n        required: true\n        x-examples:\n          application/json:\n            - name: Date Joined\n              id: 1\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerAttributesResponse'\n        '422':\n          description: |\n            The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      tags:\n        - Customer Attributes\n    delete:\n      description: |-\n        Deletes Customer Attributes from the store.\n\n        **Required Query**\n        * id:in -- ID of the *Customer Attribute*\n      summary: Delete Customer Attributes\n      operationId: CustomersAttributesDelete\n      deprecated: false\n      parameters:\n        - name: 'id:in'\n          in: query\n          required: true\n          description: Filter items by ID.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int32\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '204':\n          description: ''\n          headers: {}\n      tags:\n        - Customer Attributes\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/attribute-values':\n    get:\n      description: Returns a list of Customer Attribute Values. Optional filter parameters can be passed in.\n      summary: Get All Customer Attribute Values\n      operationId: CustomersAttributeValuesGet\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: page\n          in: query\n          description: Page number. `page=1`\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: Items count per page. `limit=50`\n          schema:\n            type: number\n        - in: query\n          name: 'customer_id:in'\n          description: 'Filter items by the customer ID. `customer_id:in=23,24,55`'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: 'attribute_id:in'\n          in: query\n          description: 'Filter items by the attribute ID. `attribute_id:in=1,2`'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: name\n          in: query\n          description: Filter items by the attribute name. `name=age`\n          schema:\n            type: string\n        - name: date_created\n          in: query\n          description: 'Filter items by `date_created`. `date_created=2018-09-05T13:43:54`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_created:max'\n          in: query\n          description: 'Filter items by maximum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n        - name: 'date_created:min'\n          in: query\n          description: 'Filter items by minimum `date_created`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n            format: date-time\n        - name: date_modified\n          in: query\n          description: 'Filter items by `date_modified`. `date_modified=2018-09-05T13:45:03`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_modified:max'\n          in: query\n          description: 'Filter items by maximum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n            format: date-time\n        - name: 'date_modified:min'\n          in: query\n          description: 'Filter items by mininum `date_modified`. ISO 8601 full-date is required, ISO 8601 full-time is not required. UNIX timestamp also accepted. `date_created=2021-01-07` or `date_created=1610051296000`'\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'\n      tags:\n        - Customer Attribute Values\n    put:\n      description: |-\n        Upserts Customer Attribute Values. Updates the attribute values on the Customer. Multiple customer attribute values can be updated in one call.\n\n        Upsert checks for an existing record. If there is none, it creates the record, if there is a matching record, it updates that record.\n\n        **Limits**\n        * 10 per call limit.\n      summary: Upsert Customer Attribute Values\n      operationId: CustomersAttributeValuesPut\n      deprecated: false\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/attribueValue_Base'\n            examples:\n              Example:\n                value:\n                  - attribute_id: 1\n                    value: 'No'\n                    customer_id: 2\n        required: true\n        x-examples:\n          application/json:\n            - attribute_id: -52528392\n              value: aliqua\n              customer_id: 12990306\n              id: 47143304\n            - attribute_id: -8263909\n              value: 'n'\n              customer_id: 1122433\n              id: -34305734\n            - attribute_id: -62186196\n              value: ''\n              customer_id: 10906989\n              id: 21175547\n            - attribute_id: -68742149\n              value: l\n              customer_id: -74084818\n              id: 99359610\n        description: ''\n      responses:\n        '200':\n          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'\n        '422':\n          description: |\n            The `CustomerAttributeValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      tags:\n        - Customer Attribute Values\n    delete:\n      description: |-\n        Deletes Customer Attribute Values. Deletes the attribute value from the customer.\n\n        **Required Query**\n        * id:in - ID of the *Customer Attribute Value*\n      summary: Delete Customer Attribute Values\n      operationId: CustomersAttributeValuesDelete\n      deprecated: false\n      parameters:\n        - name: 'id:in'\n          in: query\n          required: true\n          description: |-\n            Filter items by ID.\n            `id:in=4,5,6`\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int32\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '204':\n          description: ''\n          headers: {}\n      tags:\n        - Customer Attribute Values\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/form-field-values':\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/FormFieldValueCollectionResponse'\n        '422':\n          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      summary: Get Customer Form Field Values\n      description: |-\n        Returns a list of form field values for the Customer or Customer Address object.\n\n        To learn about adding and managing form fields, see [Adding and Editing Fields in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).\n      operationId: CustomerFormFieldsGet\n      tags:\n        - Customer Form Field Values\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: Content-Type\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - name: page\n          in: query\n          description: Page number. `page=1`\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: Items count per page. `limit=50`\n          schema:\n            type: number\n        - in: query\n          name: customer_id\n          description: Filter by the customer ID.\n          schema:\n            type: integer\n        - name: address_id\n          in: query\n          description: Filter by the ID of the customer address.\n          schema:\n            type: integer\n        - name: field_name\n          in: query\n          description: Filter by the field name.\n          schema:\n            type: string\n        - name: field_type\n          in: query\n          description: |-\n            Filter by the field type.\n             * `checkboxes` - checkboxes field\n             * `date` - date field\n             * `multiline` - multiline text field\n             * `numbers` - numbers only field\n             * `password` - password field\n             * `radiobuttons` - radio buttons field\n             * `text` - text field\n             * `picklist` - pick list field\n          schema:\n            type: string\n            enum:\n              - checkboxes\n              - date\n              - multiline\n              - numbers\n              - password\n              - radiobuttons\n              - text\n              - picklist\n    put:\n      responses:\n        '200':\n          $ref: '#/components/responses/FormFieldValuesResponse'\n        '422':\n          description: 'The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'\n          content:\n            application/json:\n              schema:\n                title: Error Response\n                type: object\n                properties:\n                  status:\n                    description: The HTTP status code.\n                    type: integer\n                    format: int32\n                  title:\n                    description: The error title describing the particular error.\n                    type: string\n                  type:\n                    type: string\n                  instance:\n                    type: string\n                  errors:\n                    type: object\n                    additionalProperties:\n                      type: string\n      summary: Upsert Customer Form Field Values\n      description: |-\n        Updates form field values on the Customer or Customer Address objects. Multiple form field values can be updated in one call.\n\n        Upsert checks for an existing record, if there is none it creates the record, if there is a matching record it updates that record.\n\n        To learn more about editing form fields, see [Adding and Editing Fields in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).\n\n        **Limits**\n        * Limit of 10 concurrent requests.\n      operationId: CustomerFormFieldValuePUT\n      tags:\n        - Customer Form Field Values\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/formFieldValue_Full'\n            examples:\n              Example:\n                value:\n                  - customer_id: 12\n                    name: Sales Rep\n                    value: Miss Moneypenny\n                  - customer_id: 12\n                    name: How did you hear about us?\n                    value: Other\n                  - customer_id: 12\n                    name: What is your favorite pizza topping?\n                    value: Mushrooms\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/{customerId}/consent':\n    get:\n      description: Gets the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.\n      summary: Get Customer Consent\n      tags:\n        - Customer Consent\n      operationId: CustomersConsentByCustomerId_GET\n      deprecated: false\n      parameters:\n        - $ref: '#/components/parameters/customerId'\n      responses:\n        '200':\n          $ref: '#/components/responses/consent_Resp'\n        '401':\n          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '422':\n          description: Invalid JSON request body - missing or invalid data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      description: Updates the status of a customer's consent to allow data collection by cookies and scripts while shopping on a storefront.\n      summary: Update Customer Consent\n      tags:\n        - Customer Consent\n      operationId: CustomersConsentByCustomerId_PUT\n      deprecated: false\n      parameters:\n        - name: Content-Type\n          in: header\n          required: false\n          description: ''\n          schema:\n            type: string\n            default: application/json\n        - $ref: '#/components/parameters/customerId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeclareCustomerConsentRequest'\n        x-examples:\n          application/json:\n            allow:\n              - essential\n            deny: []\n      responses:\n        '200':\n          $ref: '#/components/responses/consent_Resp'\n        '401':\n          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '422':\n          description: Invalid JSON request body - missing or invalid data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: customerId\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/customers/{customerId}/stored-instruments':\n    get:\n      summary: Get Stored Instruments (Beta)\n      tags:\n        - Customer Stored Instruments\n      description: |-\n        Lists all available stored instruments for a customer. This list will include all types of stored instruments namely card, account and bank_account instruments\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e * This endpoint is in beta.\n\n      operationId: liststoredinstruments\n      parameters:\n        - $ref: '#/components/parameters/customerId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  oneOf:\n                    - $ref: '#/components/schemas/CardInstrument'\n                    - $ref: '#/components/schemas/PayPalAccountInstrument'\n                    - $ref: '#/components/schemas/BankAccountInstrument'\n                  discriminator:\n                    propertyName: type\n                    mapping:\n                      stored_card: '#/components/schemas/CardInstrument'\n                      stored_paypal_account: '#/components/schemas/PaypalAccountInstrument'\n                      stored_bank_account: '#/components/schemas/BankAccountInstrument'\n              examples:\n                example-1:\n                  value:\n                    - type: stored_card\n                      token: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c\n                      is_default: true\n                      brand: VISA\n                      expiry_month: 1\n                      expiry_year: 0\n                      issuer_identification_number: '411111'\n                      last_4: '1111'\n                      billing_address:\n                        first_name: Tester\n                        last_name: Tester\n                        email: example@email.com\n                        company: Test Company\n                        address1: 1 Sample Street\n                        address2: Appt 1\n                        city: Las Vegas\n                        postal_code: '90854'\n                        state_or_province: Nevada\n                        state_or_province_code: NV\n                        country_code: US\n                        phone: 101-192-0293\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example:\n                code: 401\n                message: Unauthorized\n        '403':\n          description: Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example:\n                code: 403\n                message: Missing scope\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: customerId\n        in: path\n        required: true\ncomponents:\n  parameters:\n    customerId:\n      name: customerId\n      in: path\n      required: true\n      description: ''\n      schema:\n        type: string\n  responses:\n    CustomerCollectionResponse:\n      description: Customer Collection Response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/customer_Full'\n              meta:\n                $ref: '#/components/schemas/_metaCollection'\n          examples:\n            example-1:\n              value:\n                data:\n                  - email: string@example.com\n                    first_name: string\n                    last_name: string\n                    company: string\n                    phone: string\n                    registration_ip_address: string\n                    notes: string\n                    tax_exempt_category: string\n                    customer_group_id: 0\n                    id: 0\n                    date_modified: '2019-08-24T14:15:22Z'\n                    date_created: '2019-08-24T14:15:22Z'\n                    address_count: 0\n                    attribute_count: 0\n                    authentication:\n                      force_password_reset: true\n                    addresses:\n                      - first_name: string\n                        last_name: string\n                        company: string\n                        address1: string\n                        address2: string\n                        city: string\n                        state_or_province: string\n                        postal_code: string\n                        country_code: st\n                        phone: string\n                        address_type: residential\n                        customer_id: 0\n                        id: 0\n                        country: string\n                    store_credit_amounts:\n                      - amount: 43.15\n                    accepts_product_review_abandoned_cart_emails: true\n                    channel_ids:\n                      - 1\n                meta:\n                  pagination:\n                    total: 0\n                    count: 0\n                    per_page: 0\n                    current_page: 0\n                    total_pages: 0\n                    links:\n                      previous: string\n                      current: string\n                      next: string\n    AddressCollectionResponse:\n      description: ''\n      content:\n        application/json:\n          schema:\n            title: AddressCollectionResponse\n            description: Response payload for the BigCommerce API.\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  title: Address\n                  type: object\n                  properties:\n                    address1:\n                      description: The address 1 line.\n                      type: string\n                    address2:\n                      description: The address 2 line.\n                      type: string\n                    address_type:\n                      title: Address Type\n                      description: The address type. Residential or Commercial\n                      example: residential\n                      type: string\n                      enum:\n                        - residential\n                        - commercial\n                    city:\n                      description: The city of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 100\n                    company:\n                      description: The company of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 255\n                    country:\n                      description: The country name of the customer address.\n                      type: string\n                    country_code:\n                      description: The country code of the customer address.\n                      type: string\n                      minLength: 2\n                      maxLength: 2\n                    customer_id:\n                      description: The customer ID.\n                      type: integer\n                      format: int32\n                    first_name:\n                      description: The first name of the customer address.\n                      type: string\n                      minLength: 1\n                      maxLength: 255\n                    id:\n                      description: The unique numeric ID of the address.\n                      type: integer\n                      format: int32\n                    last_name:\n                      description: The last name of the customer address.\n                      type: string\n                      minLength: 1\n                      maxLength: 255\n                    phone:\n                      description: The phone number of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 50\n                    postal_code:\n                      description: The postal code of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 30\n                    state_or_province:\n                      description: The state or province name\n                      type: string\n                      minLength: 0\n                      maxLength: 100\n                    form_fields:\n                      description: Array of form fields. Controlled by `formfields` parameter.\n                      type: array\n                      items:\n                        oneOf:\n                          - allOf:\n                              - type: object\n                                title: Form Field Value Base\n                              - type: object\n                          - allOf:\n                              - type: object\n                                title: Form Field Value Base\n                              - type: object\n                        title: 'Form Field Value '\n                  required:\n                    - address1\n                    - city\n                    - country_code\n                    - customer_id\n                    - first_name\n                    - id\n                    - last_name\n                    - postal_code\n                    - state_or_province\n              meta:\n                $ref: '#/components/schemas/_metaCollection'\n          examples:\n            response:\n              value:\n                data:\n                  - address1: 123 Example Street\n                    address2: Building 4\n                    address_type: residential\n                    city: Austin\n                    company: BigCommerce\n                    country: United States\n                    country_code: US\n                    customer_id: 1\n                    first_name: John\n                    id: 18\n                    last_name: Doe\n                    phone: '15551234567'\n                    postal_code: '78759'\n                    state_or_province: Texas\n                meta:\n                  pagination:\n                    total: 1\n                    count: 1\n                    per_page: 50\n                    current_page: 1\n                    total_pages: 1\n    AddressCollectionResponsePostPut:\n      description: ''\n      content:\n        application/json:\n          schema:\n            title: AddressCollectionResponse\n            description: Response payload for the BigCommerce API.\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  title: Address\n                  type: object\n                  properties:\n                    address1:\n                      description: The address 1 line.\n                      type: string\n                    address2:\n                      description: The address 2 line.\n                      type: string\n                    address_type:\n                      title: Address Type\n                      description: The address type. Residential or Commercial\n                      example: residential\n                      type: string\n                      enum:\n                        - residential\n                        - commercial\n                    city:\n                      description: The city of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 100\n                    company:\n                      description: The company of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 255\n                    country:\n                      description: The country name of the customer address.\n                      type: string\n                    country_code:\n                      description: The country code of the customer address.\n                      type: string\n                      minLength: 2\n                      maxLength: 2\n                    customer_id:\n                      description: The customer ID.\n                      type: integer\n                      format: int32\n                    first_name:\n                      description: The first name of the customer address.\n                      type: string\n                      minLength: 1\n                      maxLength: 255\n                    id:\n                      description: The unique numeric ID of the address.\n                      type: integer\n                      format: int32\n                    last_name:\n                      description: The last name of the customer address.\n                      type: string\n                      minLength: 1\n                      maxLength: 255\n                    phone:\n                      description: The phone number of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 50\n                    postal_code:\n                      description: The postal code of the customer address.\n                      type: string\n                      minLength: 0\n                      maxLength: 30\n                    state_or_province:\n                      description: The state or province name\n                      type: string\n                      minLength: 0\n                      maxLength: 100\n                    form_fields:\n                      description: Array of form fields. Controlled by `formfields` parameter.\n                      type: array\n                      items:\n                        oneOf:\n                          - allOf:\n                              - type: object\n                                title: Form Field Value Base\n                              - type: object\n                          - allOf:\n                              - type: object\n                                title: Form Field Value Base\n                              - type: object\n                        title: 'Form Field Value '\n              meta:\n                type: object\n          examples:\n            response:\n              value:\n                data:\n                  - address1: 123 Example Street\n                    address2: Building 4\n                    address_type: residential\n                    city: Austin\n                    company: BigCommerce\n                    country: United States\n                    country_code: US\n                    customer_id: 1\n                    first_name: John\n                    id: 18\n                    last_name: Doe\n                    phone: '15551234567'\n                    postal_code: '78759'\n                    state_or_province: Texas\n                meta: {}\n    CustomerAttributeValueCollectionResponse:\n      description: ''\n      content:\n        application/json:\n          schema:\n            title: CustomerAttributeValueCollectionResponse\n            description: Response payload for the BigCommerce API.\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  title: Customer Attribute Value\n                  type: object\n                  properties:\n                    attribute_id:\n                      description: Attribute ID.\n                      type: integer\n                      format: int32\n                    attribute_value:\n                      description: |-\n                        Attribute value. This will always be a string, regardless of the attributes type. \n\n                        Corresponds to `value` used in customer attribute values `PUT` requests.\n                      type: string\n                      minLength: 0\n                      maxLength: 255\n                    id:\n                      description: Attribute value ID.\n                      type: integer\n                      format: int32\n                    customer_id:\n                      description: Customer ID.\n                      type: integer\n                      format: int32\n                    date_modified:\n                      description: The date on which the customer attribute value was modified.\n                      type: string\n                      format: date-time\n                    date_created:\n                      description: The date of which the customer attribute value was created.\n                      type: string\n                      format: date-time\n                  required:\n                    - attribute_id\n                    - attribute_value\n                    - customer_id\n              meta:\n                title: Collection Meta\n                description: 'Data about the response, including pagination and collection totals.'\n                type: object\n                properties:\n                  pagination:\n                    title: Pagination\n                    description: 'Data about the response, including pagination and collection totals.'\n                    type: object\n                    properties:\n                      total:\n                        description: Total number of items in the result set.\n                        type: integer\n                        format: int32\n                      count:\n                        description: Total number of items in the collection response.\n                        type: integer\n                        format: int32\n                      per_page:\n                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'\n                        type: integer\n                        format: int32\n                      current_page:\n                        description: The page you are currently on within the collection.\n                        type: integer\n                        format: int32\n                      total_pages:\n                        description: The total number of pages in the collection.\n                        type: integer\n                        format: int32\n                      links:\n                        title: Links\n                        description: Pagination links for the previous and next parts of the whole collection.\n                        type: object\n                        properties:\n                          previous:\n                            description: Link to the previous page returned in the response.\n                            type: string\n                          current:\n                            description: Link to the current page returned in the response.\n                            type: string\n                          next:\n                            description: Link to the next page returned in the response.\n                            type: string\n    CustomerAttributesResponse:\n      description: ''\n      content:\n        application/json:\n          schema:\n            title: CustomerAttributesResponse\n            description: Response payload for the BigCommerce API.\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  title: Customer Attribute\n                  type: object\n                  properties:\n                    name:\n                      description: Attribute name.\n                      type: string\n                      minLength: 1\n                      maxLength: 255\n                    type:\n                      title: Type\n                      description: 'Attribute type should match one of: string, number, date.'\n                      example: string\n                      type: string\n                      enum:\n                        - string\n                        - number\n                        - date\n                    id:\n                      description: Attribute ID.\n                      type: integer\n                      format: int32\n                    date_modified:\n                      description: The date on which the customer attribute was modified.\n                      type: string\n                      format: date-time\n                    date_created:\n                      description: The date of which the customer attribute was created.\n                      type: string\n                      format: date-time\n                  required:\n                    - name\n                    - type\n                    - id\n              meta:\n                type: object\n          examples:\n            response:\n              value:\n                data:\n                  - id: 1\n                    name: Age\n                    type: string\n                    date_created: '2018-11-13T21:42:06Z'\n                    date_modified: '2018-11-14T16:46:23Z'\n                meta: {}\n    FormFieldValueCollectionResponse:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  oneOf:\n                    - allOf:\n                        - type: object\n                          title: Form Field Value Base\n                          required:\n                            - name\n                            - value\n                          properties:\n                            name:\n                              type: string\n                              description: The form field name.\n                              example: color\n                            value:\n                              oneOf:\n                                - type: string\n                                  example: blue\n                                - type: number\n                                  format: double\n                                  example: 12.345\n                                - type: array\n                                  example:\n                                    - red\n                                    - green\n                                    - black\n                                  items:\n                                    type: string\n                        - type: object\n                          properties:\n                            customer_id:\n                              type: integer\n                          required:\n                            - customer_id\n                      title: Customer Form Field Value\n                    - allOf:\n                        - type: object\n                          title: Form Field Value Base\n                          required:\n                            - name\n                            - value\n                          properties:\n                            name:\n                              type: string\n                              description: The form field name.\n                              example: color\n                            value:\n                              oneOf:\n                                - type: string\n                                  example: blue\n                                - type: number\n                                  format: double\n                                  example: 12.345\n                                - type: array\n                                  example:\n                                    - red\n                                    - green\n                                    - black\n                                  items:\n                                    type: string\n                        - type: object\n                          properties:\n                            address_id:\n                              type: integer\n                              description: The Customer Address ID.\n                          required:\n                            - address_id\n                      title: Customer Address Form Field Value\n                  title: 'Form Field Value '\n              meta:\n                title: Collection Meta\n                description: 'Data about the response, including pagination and collection totals.'\n                type: object\n                properties:\n                  pagination:\n                    title: Pagination\n                    description: 'Data about the response, including pagination and collection totals.'\n                    type: object\n                    properties:\n                      total:\n                        description: Total number of items in the result set.\n                        type: integer\n                        format: int32\n                      count:\n                        description: Total number of items in the collection response.\n                        type: integer\n                        format: int32\n                      per_page:\n                        description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'\n                        type: integer\n                        format: int32\n                      current_page:\n                        description: The page you are currently on within the collection.\n                        type: integer\n                        format: int32\n                      total_pages:\n                        description: The total number of pages in the collection.\n                        type: integer\n                        format: int32\n                      links:\n                        title: Links\n                        description: Pagination links for the previous and next parts of the whole collection.\n                        type: object\n                        properties:\n                          previous:\n                            description: Link to the previous page returned in the response.\n                            type: string\n                          current:\n                            description: Link to the current page returned in the response.\n                            type: string\n                          next:\n                            description: Link to the next page returned in the response.\n                            type: string\n          examples:\n            Customer and Customer Address Form Fields example:\n              value:\n                data:\n                  - customer_id: 11\n                    name: Sales Rep\n                    value: James Bond\n                  - customer_id: 11\n                    name: How did you hear about us?\n                    value: Friend\n                  - customer_id: 11\n                    name: What is your favorite pizza topping?\n                    value: Black olives\n                  - customer_id: 12\n                    name: Sales Rep\n                    value: None\n                  - customer_id: 12\n                    name: How did you hear about us?\n                    value: Friend\n                  - customer_id: 12\n                    name: What is your favorite pizza topping?\n                    value: Mushrooms\n                  - customer_id: 13\n                    name: Sales Rep\n                    value: Felix Leiter\n                  - customer_id: 13\n                    name: How did you hear about us?\n                    value: Email\n                  - customer_id: 13\n                    name: What is your favorite pizza topping?\n                    value: Green pepper\n                  - customer_id: 13\n                    name: Occupation\n                    value: Housekeeper\n                  - address_id: 12\n                    name: Special Delivery Instructions\n                    value: Leave the package at the front door\n                  - customer_id: 14\n                    name: Sales Rep\n                    value: General Gogol\n                  - customer_id: 14\n                    name: How did you hear about us?\n                    value: Friend\n                  - customer_id: 14\n                    name: What is your favorite pizza topping?\n                    value: Extra cheese\n                  - address_id: 13\n                    name: Special Delivery Instructions\n                    value: Put the package in the mailbox\n                meta:\n                  pagination:\n                    count: 15\n                    current_page: 1\n                    per_page: 50\n                    total: 15\n                    total_pages: 1\n            Customer Form Fields example:\n              value:\n                data:\n                  - customer_id: 11\n                    name: Sales Rep\n                    value: James Bond\n                  - customer_id: 11\n                    name: How did you hear about us?\n                    value: Friend\n                  - customer_id: 11\n                    name: What is your favorite pizza topping?\n                    value: Black olives\n                meta:\n                  pagination:\n                    count: 3\n                    current_page: 1\n                    per_page: 50\n                    total: 3\n                    total_pages: 1\n            Customer Address Form Fields example:\n              value:\n                data:\n                  - address_id: 12\n                    name: Special Delivery Instructions\n                    value: Leave the package at the front door\n                meta:\n                  pagination:\n                    count: 1\n                    current_page: 1\n                    per_page: 50\n                    total: 1\n                    total_pages: 1\n    FormFieldValuesResponse:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  oneOf:\n                    - allOf:\n                        - type: object\n                          title: Form Field Value Base\n                          required:\n                            - name\n                            - value\n                          properties:\n                            name:\n                              type: string\n                              description: The form field name.\n                              example: color\n                            value:\n                              oneOf:\n                                - type: string\n                                  example: blue\n                                - type: number\n                                  format: double\n                                  example: 12.345\n                                - type: array\n                                  example:\n                                    - red\n                                    - green\n                                    - black\n                                  items:\n                                    type: string\n                        - type: object\n                          properties:\n                            customer_id:\n                              type: integer\n                          required:\n                            - customer_id\n                      title: Customer Form Field Value\n                    - allOf:\n                        - type: object\n                          title: Form Field Value Base\n                          required:\n                            - name\n                            - value\n                          properties:\n                            name:\n                              type: string\n                              description: The form field name.\n                              example: color\n                            value:\n                              oneOf:\n                                - type: string\n                                  example: blue\n                                - type: number\n                                  format: double\n                                  example: 12.345\n                                - type: array\n                                  example:\n                                    - red\n                                    - green\n                                    - black\n                                  items:\n                                    type: string\n                        - type: object\n                          properties:\n                            address_id:\n                              type: integer\n                              description: The Customer Address ID.\n                          required:\n                            - address_id\n                      title: Customer Address Form Field Value\n                  title: 'Form Field Value '\n              meta:\n                type: object\n          examples:\n            response:\n              value:\n                data:\n                  - customer_id: 12\n                    name: Sales Rep\n                    value: Miss Moneypenny\n                  - customer_id: 12\n                    name: How did you hear about us?\n                    value: Other\n                  - customer_id: 12\n                    name: What is your favorite pizza topping?\n                    value: Mushrooms\n                meta: {}\n    consent_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/consent_Full'\n  securitySchemes:\n    X-Auth-Token:\n      type: apiKey\n      name: X-Auth-Token\n      in: header\n      description: |-\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Customers | modify | `store_v2_customers` |\n        |  Customers | read-only | `store_v2_customers_read_only` |\n        | Stored Payment Instruments| modify | `store_stored_payment_instruments`|\n        | Stored Payment Instruments| read-only | `store_stored_payment_instruments_read_only` |\n\n        ### Headers\n\n        |Header|Parameter|Description|\n        |-|-|-|\n        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n        ### Example\n\n        ```http\n        GET /stores/{store_hash}/v3/catalog/summary\n        host: api.bigcommerce.com\n        Content-Type: application/json\n        X-Auth-Token: {access_token}\n        ```\n\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\n  schemas:\n    Pagination:\n      title: Pagination\n      description: 'Data about the response, including pagination and collection totals.'\n      type: object\n      properties:\n        total:\n          description: Total number of items in the result set.\n          type: integer\n          format: int32\n        count:\n          description: Total number of items in the collection response.\n          type: integer\n          format: int32\n        per_page:\n          description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'\n          type: integer\n          format: int32\n        current_page:\n          description: The page you are currently on within the collection.\n          type: integer\n          format: int32\n        total_pages:\n          description: The total number of pages in the collection.\n          type: integer\n          format: int32\n        links:\n          $ref: '#/components/schemas/Links'\n    _metaCollection:\n      title: _metaCollection\n      description: 'Data about the response, including pagination and collection totals.'\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n    ErrorResponse:\n      title: Error Response\n      type: object\n      properties:\n        status:\n          description: The HTTP status code.\n          type: integer\n          format: int32\n        title:\n          description: The error title describing the particular error.\n          type: string\n        type:\n          type: string\n        instance:\n          type: string\n        errors:\n          type: object\n          additionalProperties:\n            type: string\n    customer_Full:\n      title: customer_Full\n      type: object\n      properties:\n        email:\n          description: The email of the customer. Must be unique.\n          type: string\n          minLength: 3\n          maxLength: 255\n        first_name:\n          description: The first name of the customer.\n          type: string\n          minLength: 1\n          maxLength: 100\n        last_name:\n          description: The last name of the customer.\n          type: string\n          minLength: 1\n          maxLength: 100\n        company:\n          description: The company of the customer.\n          type: string\n          minLength: 0\n          maxLength: 255\n        phone:\n          description: The phone number of the customer.\n          type: string\n          minLength: 0\n          maxLength: 50\n        registration_ip_address:\n          description: The IP address from which this customer was registered.\n          type: string\n          minLength: 0\n          maxLength: 30\n        notes:\n          description: The customer notes.\n          type: string\n        tax_exempt_category:\n          description: The tax exempt category code for the customer.\n          type: string\n          minLength: 0\n          maxLength: 255\n        customer_group_id:\n          description: ID of the group which this customer belongs to.\n          type: integer\n          format: int32\n        id:\n          description: The unique numeric ID of the customer.\n          type: integer\n          format: int32\n        date_modified:\n          description: The date on which the customer was modified.\n          type: string\n          format: date-time\n        date_created:\n          description: The date of which the customer was created.\n          type: string\n          format: date-time\n        address_count:\n          description: Total number of customer addresses\n          type: integer\n          format: int32\n        attribute_count:\n          description: Total number of customer attributes\n          type: integer\n          format: int32\n        authentication:\n          title: Customer Authentication Base\n          example:\n            force_password_reset: true\n          type: object\n          properties:\n            force_password_reset:\n              description: 'If `true`, this customer will be forced to change password on next login.'\n              type: boolean\n        addresses:\n          description: Array of customer addresses. Limited to 10\n          type: array\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/address_Full'\n        attributes:\n          description: Array of customer attributes. Limited to 10.\n          type: array\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/attribute_Full'\n        form_fields:\n          description: Array of form fields. Controlled by `formfields` parameter.\n          type: array\n          items:\n            $ref: '#/components/schemas/formFieldValue_Full'\n        store_credit_amounts:\n          $ref: '#/components/schemas/CustomerStoredCreditAmounts'\n        accepts_product_review_abandoned_cart_emails:\n          type: boolean\n          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or recieve both emails.\n        channel_ids:\n          $ref: '#/components/schemas/customerChannelIds'\n    customer_Post:\n      title: customer_Post\n      type: object\n      properties:\n        email:\n          description: The email of the customer. Must be unique.\n          type: string\n          minLength: 3\n          maxLength: 255\n        first_name:\n          description: The first name of the customer.\n          type: string\n          minLength: 1\n          maxLength: 100\n        last_name:\n          description: The last name of the customer.\n          type: string\n          minLength: 1\n          maxLength: 100\n        company:\n          description: The company of the customer.\n          type: string\n          minLength: 0\n          maxLength: 255\n        phone:\n          description: The phone number of the customer.\n          type: string\n          minLength: 0\n          maxLength: 50\n        notes:\n          description: The customer notes.\n          type: string\n        tax_exempt_category:\n          description: The tax exempt category code for the customer.\n          type: string\n          minLength: 0\n          maxLength: 255\n        customer_group_id:\n          description: ID of the group which this customer belongs to.\n          type: integer\n          format: int32\n        addresses:\n          description: Array of customer addresses. Limited to 10\n          type: array\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/customerAddresses_Base'\n        attributes:\n          description: Array of customer attributes. Limited to 10.\n          type: array\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/customerAttributes_Base'\n        authentication:\n          $ref: '#/components/schemas/customerAuthentication_PostPut'\n        accepts_product_review_abandoned_cart_emails:\n          type: boolean\n          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or recieve both emails.\n        store_credit_amounts:\n          $ref: '#/components/schemas/CustomerStoredCreditAmounts'\n        origin_channel_id:\n          description: Channel ID the customer has been created from\n          type: integer\n        channel_ids:\n          description: Array of channels the customer can access\n          type: array\n          items:\n            example:\n              - 1\n              - 2\n      required:\n        - email\n        - first_name\n        - last_name\n    customer_Put:\n      title: customer_Put\n      type: object\n      properties:\n        email:\n          description: The email of the customer. Must be unique.\n          type: string\n          minLength: 3\n          maxLength: 255\n        first_name:\n          description: The first name of the customer.\n          type: string\n          minLength: 1\n          maxLength: 100\n        last_name:\n          description: The last name of the customer.\n          type: string\n          minLength: 1\n          maxLength: 100\n        company:\n          description: The company of the customer.\n          type: string\n          minLength: 0\n          maxLength: 255\n        phone:\n          description: The phone number of the customer.\n          type: string\n          minLength: 0\n          maxLength: 50\n        registration_ip_address:\n          description: The IP address from which this customer was registered.\n          type: string\n          minLength: 0\n          maxLength: 30\n        notes:\n          description: The customer notes.\n          type: string\n        tax_exempt_category:\n          description: The tax exempt category code for the customer.\n          type: string\n          minLength: 0\n          maxLength: 255\n        customer_group_id:\n          description: ID of the group which this customer belongs to.\n          type: integer\n          format: int32\n        id:\n          description: The unique numeric ID of the customer.\n          type: integer\n          format: int32\n        authentication:\n          $ref: '#/components/schemas/customerAuthentication_PostPut'\n        accepts_product_review_abandoned_cart_emails:\n          type: boolean\n          description: It determines if the customer is signed up to receive either product review or abandoned cart emails or recieve both emails.\n        store_credit_amounts:\n          $ref: '#/components/schemas/CustomerStoredCreditAmounts'\n        channel_ids:\n          description: Arrays of channels the customer can access\n          type: array\n          items:\n            type: integer\n      required:\n        - id\n    attribueValue_Base:\n      title: attribueValue_Base\n      type: object\n      properties:\n        id:\n          description: Attribute value ID.\n          type: integer\n          format: int32\n        attribute_id:\n          description: Attribute ID.\n          type: integer\n          format: int32\n        value:\n          description: |-\n            Attribute value. This will always be a string, regardless of the attribute's type. \n\n            Corresponds to `attribute_value` used in customer attribute values `GET` requests.\n          type: string\n          minLength: 0\n          maxLength: 255\n          example: string\n        customer_id:\n          type: integer\n          description: Customer ID.\n          format: int32\n          example: 8504\n      required:\n        - attribute_id\n        - value\n        - customer_id\n    attribute_Full:\n      description: ''\n      type: object\n      x-examples:\n        Example:\n          attribute_id: 2\n          attribute_value: 'Yes'\n          customer_id: 1\n          date_created: '2021-07-28T19:00:38Z'\n          date_modified: '2021-07-28T19:00:38Z'\n          id: 2\n      properties:\n        attribute_id:\n          type: integer\n          description: Attribute ID\n          format: int32\n          example: 2\n        attribute_value:\n          type: string\n          minLength: 1\n          description: Attribute value\n          example: 'Yes'\n        customer_id:\n          type: integer\n          description: Customer ID\n          example: 1\n          format: int32\n        date_created:\n          type: string\n          minLength: 1\n          description: The date the customer attribute was created\n          format: date-time\n        date_modified:\n          type: string\n          minLength: 1\n          description: The date the customer attribute was modified\n          format: date-time\n        id:\n          type: integer\n          description: Attribute value ID\n          format: int32\n          example: 2\n    attribute_Put:\n      title: attribute_Put\n      type: object\n      properties:\n        name:\n          description: Attribute name.\n          type: string\n          minLength: 1\n          maxLength: 255\n        id:\n          description: Attribute ID.\n          type: integer\n          format: int32\n      required:\n        - name\n        - id\n      description: 'Once the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.'\n    attribute_Post:\n      title: attribute_Post\n      example:\n        name: attribute_string 01\n        type: string\n      type: object\n      properties:\n        name:\n          description: Attribute name.\n          type: string\n          minLength: 1\n          maxLength: 255\n        type:\n          title: Type\n          description: 'Attribute type should match one of: string, number, date.'\n          example: string\n          type: string\n          enum:\n            - string\n            - number\n            - date\n      required:\n        - name\n        - type\n    address_Full:\n      title: address_Full\n      type: object\n      properties:\n        first_name:\n          description: The first name of the customer address.\n          type: string\n          minLength: 1\n          maxLength: 255\n        last_name:\n          description: The last name of the customer address.\n          type: string\n          minLength: 1\n          maxLength: 255\n        company:\n          description: The company of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 255\n        address1:\n          description: The address 1 line.\n          type: string\n        address2:\n          description: The address 2 line.\n          type: string\n        city:\n          description: The city of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 100\n        state_or_province:\n          description: The state or province name\n          type: string\n          minLength: 0\n          maxLength: 100\n        postal_code:\n          description: The postal code of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 30\n        country_code:\n          description: The country code of the customer address.\n          type: string\n          minLength: 2\n          maxLength: 2\n        phone:\n          description: The phone number of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 50\n        address_type:\n          title: Address Type\n          description: The address type. Residential or Commercial\n          example: residential\n          type: string\n          enum:\n            - residential\n            - commercial\n        customer_id:\n          description: The customer ID.\n          type: integer\n          format: int32\n        id:\n          description: The unique numeric ID of the address.\n          type: integer\n          format: int32\n        country:\n          description: The country name of the customer address.\n          type: string\n        form_fields:\n          description: Array of form fields. Controlled by `formfields` parameter.\n          type: array\n          items:\n            $ref: '#/components/schemas/formFieldValue_Full'\n      required:\n        - first_name\n        - last_name\n        - address1\n        - city\n        - state_or_province\n        - postal_code\n        - country_code\n        - customer_id\n        - id\n    address_Put:\n      title: address_Put\n      type: object\n      properties:\n        first_name:\n          description: The first name of the customer address.\n          type: string\n          minLength: 1\n          maxLength: 255\n        last_name:\n          description: The last name of the customer address.\n          type: string\n          minLength: 1\n          maxLength: 255\n        company:\n          description: The company of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 255\n        address1:\n          description: The address 1 line.\n          type: string\n        address2:\n          description: The address 2 line.\n          type: string\n        city:\n          description: The city of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 100\n        state_or_province:\n          description: The state or province name\n          type: string\n          minLength: 0\n          maxLength: 100\n          example: California\n        postal_code:\n          description: The postal code of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 30\n        country_code:\n          description: The country code of the customer address.\n          type: string\n          minLength: 2\n          maxLength: 2\n          example: US\n        phone:\n          description: The phone number of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 50\n        address_type:\n          title: Address Type\n          description: The address type. Residential or Commercial\n          example: residential\n          type: string\n          enum:\n            - residential\n            - commercial\n        customer_id:\n          description: The customer ID.\n          type: integer\n          format: int32\n          example: 1\n        id:\n          description: The unique numeric ID of the address.\n          type: integer\n          format: int32\n          example: 1\n      required:\n        - customer_id\n        - id\n      x-examples:\n        example-1:\n          value:\n            - customer_id: 1\n              id: 18\n              first_name: sam\n    address_Post:\n      title: address_Post\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: The first name of the customer address.\n          minLength: 1\n          maxLength: 255\n          example: John\n        last_name:\n          type: string\n          description: The last name of the customer address.\n          minLength: 1\n          maxLength: 255\n          example: Doe\n        company:\n          type: string\n          description: The company of the customer address.\n          minLength: 0\n          maxLength: 255\n          example: BigCommerce\n        address1:\n          type: string\n          description: The address 1 line.\n          example: 123 Example Street\n        address2:\n          type: string\n          description: The address 2 line.\n          example: Building 4\n        city:\n          type: string\n          description: The city of the customer address.\n          minLength: 0\n          maxLength: 100\n          example: Austin\n        state_or_province:\n          type: string\n          description: The state or province name spelled out in full. State or province codes not accepted.\n          example: Texas\n          minLength: 0\n          maxLength: 100\n        postal_code:\n          type: string\n          description: The postal code of the customer address.\n          minLength: 0\n          maxLength: 30\n          example: '78759'\n        country_code:\n          type: string\n          description: The country code of the customer address.\n          example: US\n          minLength: 2\n          maxLength: 2\n        phone:\n          type: string\n          description: The phone number of the customer address.\n          minLength: 0\n          maxLength: 50\n          example: '15551234567'\n        address_type:\n          title: Address Type\n          description: The address type. Residential or Commercial\n          example: residential\n          type: string\n          enum:\n            - residential\n            - commercial\n        customer_id:\n          description: The customer ID.\n          type: integer\n          format: int32\n          example: 1\n      required:\n        - first_name\n        - last_name\n        - address1\n        - city\n        - state_or_province\n        - postal_code\n        - country_code\n        - customer_id\n      x-examples:\n        Example:\n          value:\n            first_name: John\n            last_name: Doe\n            company: BigCommerce\n            address1: 123 Example Street\n            address2: Building 4\n            city: Austin\n            state_or_province: Texas\n            postal_code: '78759'\n            country_code: US\n            phone: '15551234567'\n            address_type: residential\n            customer_id: 1\n    customerAddresses_Base:\n      title: customerAddresses_Base\n      example:\n        address1: Addr 1\n        address2: ''\n        address_type: residential\n        city: San Francisco\n        company: History\n        country_code: US\n        first_name: Ronald\n        last_name: Swimmer\n        phone: '707070707'\n        postal_code: '33333'\n        state_or_province: California\n      type: object\n      properties:\n        first_name:\n          description: The first name of the customer address.\n          type: string\n          minLength: 1\n          maxLength: 255\n        last_name:\n          description: The last name of the customer address.\n          type: string\n          minLength: 1\n          maxLength: 255\n        company:\n          description: The company of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 255\n        address1:\n          description: The address 1 line.\n          type: string\n        address2:\n          description: The address 2 line.\n          type: string\n        city:\n          description: The city of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 100\n        state_or_province:\n          description: The state or province name\n          type: string\n          minLength: 0\n          maxLength: 100\n        postal_code:\n          description: The postal code of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 30\n        country_code:\n          description: The country code of the customer address.\n          type: string\n          minLength: 2\n          maxLength: 2\n        phone:\n          description: The phone number of the customer address.\n          type: string\n          minLength: 0\n          maxLength: 50\n        address_type:\n          title: Address Type\n          description: The address type. Residential or Commercial\n          example: residential\n          type: string\n          enum:\n            - residential\n            - commercial\n      required:\n        - first_name\n        - last_name\n        - address1\n        - city\n        - state_or_province\n        - postal_code\n        - country_code\n      description: The `address` object for the `customer` object's `addresses` array.\n    customerAuthentication_PostPut:\n      title: customerAuthentication_PostPut\n      allOf:\n        - properties:\n            force_password_reset:\n              description: 'If `true`, this customer will be forced to change password on next login.'\n              type: boolean\n        - properties:\n            new_password:\n              description: New password for customer. Write only field\n              type: string\n      type: object\n    Links:\n      title: Links\n      description: Pagination links for the previous and next parts of the whole collection.\n      type: object\n      properties:\n        previous:\n          description: Link to the previous page returned in the response.\n          type: string\n        current:\n          description: Link to the current page returned in the response.\n          type: string\n        next:\n          description: Link to the next page returned in the response.\n          type: string\n    formFieldValue_Full:\n      oneOf:\n        - title: Customer Form Field Value\n          type: object\n          required:\n            - customer_id\n            - name\n            - value\n          properties:\n            name:\n              type: string\n              description: The form field name.\n              example: color\n            value:\n              oneOf:\n                - type: string\n                  example: blue\n                - type: number\n                  format: double\n                  example: 12.345\n                - type: array\n                  example:\n                    - red\n                    - green\n                    - black\n                  items:\n                    type: string\n            customer_id:\n              type: integer\n        - title: Customer Address Form Field Value\n          type: object\n          required:\n            - address_id\n            - name\n            - value\n          properties:\n            name:\n              type: string\n              description: The form field name.\n              example: color\n            value:\n              oneOf:\n                - type: string\n                  example: blue\n                - type: number\n                  format: double\n                  example: 12.345\n                - type: array\n                  example:\n                    - red\n                    - green\n                    - black\n                  items:\n                    type: string\n            address_id:\n              type: integer\n              description: The Customer Address ID.\n      title: formFieldValue_Full\n    consent_Full:\n      title: consent_Full\n      description: Response payload for the BigCommerce API.\n      type: object\n      properties:\n        allow:\n          $ref: '#/components/schemas/consentAllow'\n        deny:\n          $ref: '#/components/schemas/Deny'\n        updated_at:\n          description: The date of which the customer consent was last updated.\n          type: string\n          format: date-time\n    consentAllow:\n      title: consentAllow\n      type: array\n      uniqueItems: true\n      minItems: 0\n      example:\n        - essential\n        - targeting\n        - functional\n      items:\n        type: string\n        enum:\n          - essential\n          - functional\n          - analytics\n          - targeting\n    Deny:\n      title: Deny\n      type: array\n      uniqueItems: true\n      minItems: 0\n      example:\n        - analytics\n      items:\n        type: string\n        enum:\n          - essential\n          - functional\n          - analytics\n          - targeting\n    DeclareCustomerConsentRequest:\n      title: DeclareCustomerConsentRequest\n      description: Request payload for the BigCommerce API.\n      type: object\n      properties:\n        allow:\n          $ref: '#/components/schemas/consentAllow'\n        deny:\n          $ref: '#/components/schemas/Deny'\n    customerAttributes_Base:\n      description: ''\n      title: customerAttributes_Base\n      type: object\n      properties:\n        attribute_id:\n          type: integer\n          format: int32\n          example: 55\n          description: Attribute ID.\n        attribute_value:\n          type: string\n          example: string\n          minLength: 0\n          maxLength: 255\n          description: 'Attribute value. This will always be a string, regardless of the attribute’s type.'\n    customerChannelIds:\n      type: array\n      title: customerChannelIds\n      description: Array of channel ids the Customer has access to.\n      items:\n        example:\n          - 1\n          - 2\n    CardInstrument:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Type of instrument\n          enum:\n            - stored_card\n        token:\n          type: string\n          description: An identifier representing this stored instrument\n          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c\n        is_default:\n          type: boolean\n          description: Identifies whether this stored instrument is default for the customer\n        brand:\n          type: string\n          description: Card brand\n          example: VISA\n        expiry_month:\n          maximum: 12\n          minimum: 1\n          type: integer\n          description: Expiry month for this card\n        expiry_year:\n          type: integer\n          description: Expiry year for this card\n        issuer_identification_number:\n          type: string\n          description: Issuer identification number for this card\n          example: '411111'\n        last_4:\n          type: string\n          description: Last four digits of this card\n          example: '1111'\n        billing_address:\n          $ref: '#/components/schemas/BillingAddress'\n      description: 'Details about a stored card instrument which includes details around billing, last 4 digits, issuer, etc.'\n    PayPalAccountInstrument:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Instrument type\n          enum:\n            - stored_paypal_account\n        token:\n          type: string\n          description: An identifier representing this stored instrument\n          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c\n        is_default:\n          type: boolean\n          description: Identifies whether this stored instrument is default for the customer\n        email:\n          type: string\n          description: PayPal email address\n          example: bc-buyer-paypal-express@bigcommerce.com\n      description: A PayPal account stored instrument\n    BankAccountInstrument:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Instrument type\n          enum:\n            - stored_bank_account\n        token:\n          type: string\n          description: An identifier representing this stored instrument\n          example: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c\n        is_default:\n          type: boolean\n          description: Identifies whether this stored instrument is default for the customer\n        masked_account_number:\n          type: string\n          description: A masked bank account number\n          example: 12XXX56\n        issuer:\n          type: string\n          description: Issuer identifier for the account\n          example: DE001\n      description: A stored bank account instrument\n    BillingAddress:\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: First name of the card holder\n          example: Tester\n        last_name:\n          type: string\n          description: Last name of the card holder\n          example: Tester\n        email:\n          type: string\n          example: example@example.com\n        company:\n          type: string\n          description: Company of the card holder\n          example: Test Company\n        address1:\n          type: string\n          example: 1 Sample Street\n        address2:\n          type: string\n          example: Appt 1\n        city:\n          type: string\n          example: Las Vegas\n        postal_code:\n          type: string\n          example: '90854'\n        state_or_province:\n          type: string\n          description: Represents state or province\n          example: Nevada\n        state_or_province_code:\n          type: string\n          example: NV\n        country_code:\n          type: string\n          description: ISO-3166-1 2 letter country code\n          example: US\n        phone:\n          type: string\n          example: 101-192-0293\n    CustomerStoredCreditAmounts:\n      description: 'Store credit. '\n      type: array\n      format: double\n      items:\n        type: object\n        properties:\n          amount:\n            type: number\n            format: float\n            example: 43.15\n    CustomerSettingsObject:\n      title: CustomerSettingsObject\n      type: object\n      description: Customer Settings\n      properties:\n        privacy_settings:\n          type: object\n          description: Controls the privacy settings\n          properties:\n            ask_shopper_for_tracking_consent:\n              type: boolean\n              description: Determines if a customer requires consent for tracking privacy.\n            policy_url:\n              type: string\n              example: 'https://bigcommmerce.com/policy'\n              description: The URL for a website's privacy policy\n        customer_group_settings:\n          type: object\n          description: The settings for a collection of customers\n          properties:\n            guest_customer_group_id:\n              type: integer\n              example: 0\n              description: The ID for a guest customer group\n            default_customer_group_id:\n              type: integer\n              example: 0\n              description: The ID for a default customer group\n      x-examples:\n        example-1:\n          value:\n            privacy_settings:\n              ask_shopper_for_tracking_consent: true\n              policy_url: 'https://bigcommmerce.com/policy'\n            customer_group_settings:\n              guest_customer_group_id: 0\n              default_customer_group_id: 0\n    CustomerChannelSettingsObject:\n      title: CustomerChannelSettingsObject\n      type: object\n      properties:\n        privacy_settings:\n          type: object\n          description: Controls the privacy settings\n          properties:\n            ask_shopper_for_tracking_consent:\n              type: boolean\n              description: Determines if a customer requires consent for tracking privacy\n            policy_url:\n              type: string\n              example: 'https://bigcommmerce.com/policy'\n              description: The URL for a website's privacy policy\n        customer_group_settings:\n          type: object\n          description: The settings for a collection of customers\n          properties:\n            guest_customer_group_id:\n              type: integer\n              example: 0\n              description: The ID for a guest customer group\n            default_customer_group_id:\n              type: integer\n              example: 0\n              description: The ID for a default customer group\n        allow_global_logins:\n          type: boolean\n          description: |-\n            * Determines if a channel allows global customer to login\n            * Determines if customers created on this channel will get global access/login\n      x-examples:\n        example-1:\n          value:\n            privacy_settings:\n              ask_shopper_for_tracking_consent: true\n              policy_url: 'https://bigcommmerce.com/policy'\n            customer_group_settings:\n              guest_customer_group_id: 0\n              default_customer_group_id: 0\n            allow_global_logins: true\n    ValidateCustomerCredentialsObject:\n      title: ValidateCustomerCredentialsObject\n      type: object\n      required:\n        - email\n        - password\n      properties:\n        email:\n          type: string\n          description: Customer email address\n        password:\n          type: string\n          description: Customer password\n        channel_id:\n          type: integer\n          description: ChannelId to check the customer credentials against - If this field is empty we will use channel 1\n    ValidateCustomerCredentialsResponseObject:\n      title: ValidateCustomerCredentialsResponseObject\n      type: object\n      properties:\n        customer_id:\n          type: integer\n          nullable: true\n          description: returns the customer Id\n        is_valid:\n          type: boolean\n          description: indicates if the provided credentials are valid\n"
		}
	},
	"Error": "buildIR: make ir: path \"/stores/{store_hash}/v3/customers/{customerId}/stored-instruments\": get: responses: 200: contents: application/json: schema: item: oneOf: discriminator: unable to map \"stored_paypal_account\" to \"#/components/schemas/PaypalAccountInstrument\""
}