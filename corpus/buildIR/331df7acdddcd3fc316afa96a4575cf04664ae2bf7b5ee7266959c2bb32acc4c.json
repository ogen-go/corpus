{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/caraml-dev/turing"
		},
		"file": {
			"name": "openapi.bundle.yaml",
			"size": 0,
			"path": "api/api/openapi.bundle.yaml",
			"byteSize": 95466,
			"content": "openapi: 3.0.3\ninfo:\n  title: Turing API\n  version: 0.0.1\nservers:\n- url: http://localhost:8080/v1\nsecurity:\n- bearerAuth: []\npaths:\n  /projects:\n    get:\n      description: Projects can be filtered by optional `name` parameter\n      parameters:\n      - in: query\n        name: name\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Project'\n                type: array\n          description: OK\n      summary: List existing projects\n      tags:\n      - Project\n  /projects/{project_id}/ensemblers:\n    get:\n      operationId: ListEnsemblers\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - in: query\n        name: page\n        schema:\n          default: 1\n          type: integer\n      - in: query\n        name: page_size\n        schema:\n          default: 10\n          type: integer\n      - description: Searches ensembler name for a partial match of the search text\n        in: query\n        name: search\n        schema:\n          type: string\n      - in: query\n        name: type\n        schema:\n          $ref: '#/components/schemas/EnsemblerType'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnsemblersPaginatedResults'\n          description: A JSON object, that represents paginated results response\n      summary: Returns a list of ensemblers that belong to the project\n      tags:\n      - Ensembler\n    post:\n      operationId: CreateEnsembler\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Ensembler'\n        description: A JSON object containing information about the ensembler\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ensembler'\n          description: A JSON representation of a successfully saved ensembler\n      summary: Saves a user-defined ensembler into the project\n      tags:\n      - Ensembler\n  /projects/{project_id}/ensemblers/{ensembler_id}:\n    get:\n      operationId: GetEnsemblerDetails\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - in: path\n        name: ensembler_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ensembler'\n          description: A JSON object representing an instance of the specific type\n            of Ensembler\n      summary: Returns Ensembler's details by its ID\n      tags:\n      - Ensembler\n    put:\n      operationId: UpdateEnsembler\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - in: path\n        name: ensembler_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Ensembler'\n        description: A JSON object, representing an update to the ensembler\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ensembler'\n          description: A JSON object representing an instance of updated Ensembler\n      summary: Updates existing Ensembler with the data provided in the payload\n      tags:\n      - Ensembler\n  /projects/{project_id}/jobs:\n    get:\n      operationId: ListEnsemblingJobs\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - in: query\n        name: page\n        schema:\n          default: 1\n          type: integer\n      - in: query\n        name: page_size\n        schema:\n          default: 10\n          type: integer\n      - in: query\n        name: ensembler_id\n        schema:\n          format: int32\n          type: integer\n      - description: Searches ensembling job name used for a partial match of the\n          search text\n        in: query\n        name: search\n        schema:\n          type: string\n      - explode: true\n        in: query\n        name: status\n        schema:\n          items:\n            $ref: '#/components/schemas/EnsemblerJobStatus'\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnsemblingJobPaginatedResults'\n          description: A JSON object, that represents paginated results response\n      summary: Returns a list of ensembling jobs that belong to the project\n      tags:\n      - Ensembling Job\n    post:\n      operationId: CreateEnsemblingJob\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnsemblingJob'\n        description: A JSON object that contains the configuration of the ensembling\n          job\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnsemblingJob'\n          description: Accepted.\n      summary: Submit an Ensembling job.\n      tags:\n      - Ensembling Job\n  /projects/{project_id}/jobs/{job_id}:\n    delete:\n      operationId: TerminateEnsemblingJob\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - in: path\n        name: job_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobId'\n          description: Accepted.\n        \"400\":\n          description: Invalid ensembling job\n        \"404\":\n          description: Ensembling job not found\n      summary: Terminate an ongoing Ensembling Job.\n      tags:\n      - Ensembling Job\n    get:\n      operationId: GetEnsemblingJob\n      parameters:\n      - in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - in: path\n        name: job_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnsemblingJob'\n          description: A JSON object representing an Ensembling Job\n        \"404\":\n          description: Invalid ensembling job\n      summary: Get an existing Ensembling job.\n      tags:\n      - Ensembling Job\n  /projects/{project_id}/routers/{router_id}/alerts:\n    get:\n      parameters:\n      - description: id of the project the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router for the alerts\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Alert'\n                type: array\n          description: OK\n        \"400\":\n          description: Invalid project_id or router_id\n        \"404\":\n          description: project_id or router_id not found\n        \"500\":\n          description: Error retrieving the alerts for the router\n      summary: List alerts for a router\n      tags:\n      - Alerts\n    post:\n      parameters:\n      - description: id of the project the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router for the alert\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Alert'\n        description: alert specification\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Alert'\n          description: OK\n        \"400\":\n          description: Invalid project_id or router_id\n        \"404\":\n          description: project_id or router_id not found\n        \"500\":\n          description: Error creating new alert\n      summary: Create a new alert for a router\n      tags:\n      - Alerts\n  /projects/{project_id}/routers/{router_id}/alerts/{alert_id}:\n    delete:\n      parameters:\n      - description: id of the project the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router for the alerts\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the alert\n        in: path\n        name: alert_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          description: Alert deleted successfully\n        \"400\":\n          description: Invalid project_id, router_id or alert_id\n        \"404\":\n          description: Alert not found\n        \"500\":\n          description: Error deleting the alert\n      summary: Delete the alert for a router by ID\n      tags:\n      - Alerts\n    get:\n      parameters:\n      - description: id of the project the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router for the alerts\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the alert\n        in: path\n        name: alert_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Alert'\n          description: OK\n        \"400\":\n          description: Invalid project_id, router_id or alert_id\n        \"404\":\n          description: Alert not found\n        \"500\":\n          description: Error retrieving the alert\n      summary: Get the alert for a router by ID\n      tags:\n      - Alerts\n    put:\n      parameters:\n      - description: id of the project the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router for the alerts\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the alert\n        in: path\n        name: alert_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Alert'\n        description: alert specification\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Alert'\n          description: OK\n        \"400\":\n          description: Invalid project_id, router_id or alert_id\n        \"404\":\n          description: Alert not found\n        \"500\":\n          description: Error updating the alert\n      summary: Update the alert for a router by ID\n      tags:\n      - Alerts\n  /projects/{project_id}/routers:\n    get:\n      parameters:\n      - description: id of the project to retrieve routers from\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RouterDetails'\n                type: array\n          description: OK\n        \"400\":\n          description: Invalid project_id\n        \"500\":\n          description: Error retrieving routers\n      summary: List routers belonging to project\n      tags:\n      - Router\n    post:\n      parameters:\n      - description: id of the project to save router\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RouterConfig'\n        description: router configuration to save\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterDetails'\n          description: OK\n        \"400\":\n          description: Invalid project_id or router configuration\n        \"500\":\n          description: Unable to save configuration\n      summary: Create new router in project\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}:\n    delete:\n      parameters:\n      - description: id of the project of the router\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to delete\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterId'\n          description: OK\n        \"400\":\n          description: Invalid project_id or router_id\n        \"404\":\n          description: Router not found\n        \"500\":\n          description: Unable to delete router\n      summary: Delete router\n      tags:\n      - Router\n    get:\n      parameters:\n      - description: id of the project to retrieve routers from\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to be retrieved\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterDetails'\n          description: OK\n        \"400\":\n          description: Invalid project_id or router_id\n        \"404\":\n          description: No router found\n      summary: Get router belonging to project by ID\n      tags:\n      - Router\n    put:\n      parameters:\n      - description: id of the project of the router\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to update\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RouterConfig'\n        description: router configuration to save\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterDetails'\n          description: OK\n        \"400\":\n          description: Invalid project_id, router_id or router configuration\n        \"500\":\n          description: Unable to save configuration\n      summary: Update router\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}/deploy:\n    post:\n      parameters:\n      - description: id of the project that the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to be deployed\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterIdAndVersion'\n          description: Accepted\n        \"400\":\n          description: Invalid project_id, router_id or deploy request\n        \"404\":\n          description: No router version found\n      summary: Deploy the current router configuration\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}/undeploy:\n    post:\n      parameters:\n      - description: id of the project that the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to undeploy\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterIdObject'\n          description: OK\n        \"400\":\n          description: Invalid project_id or router_id\n        \"404\":\n          description: Router not found\n        \"500\":\n          description: Error undeploying router version\n      summary: Undeploy router configuration\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}/versions:\n    get:\n      parameters:\n      - description: id of the project to retrieve routers from\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to be retrieved\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RouterVersion'\n                type: array\n          description: OK\n        \"400\":\n          description: Invalid project_id or router_id\n        \"404\":\n          description: No router versions found\n      summary: List router config versions\n      tags:\n      - Router\n    post:\n      parameters:\n      - description: id of the project of the router\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to create a new version for\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RouterVersionConfig'\n        description: router configuration to save\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterVersion'\n          description: OK\n        \"400\":\n          description: Invalid project_id, router_id or router configuration\n        \"500\":\n          description: Unable to save configuration\n      summary: Create router version without deploying it\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}/versions/{version}:\n    delete:\n      parameters:\n      - description: id of the project of the router\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: version of router configuration to delete\n        in: path\n        name: version\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterIdAndVersion'\n          description: OK\n        \"400\":\n          description: Invalid project_id, router_id or version\n        \"404\":\n          description: Router version not found\n        \"500\":\n          description: Unable to delete router version\n      summary: Delete router version\n      tags:\n      - Router\n    get:\n      parameters:\n      - description: id of the project to retrieve routers from\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to be retrieved\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: version of router configuration to be retrieved\n        in: path\n        name: version\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterVersion'\n          description: OK\n        \"400\":\n          description: Invalid project_id, router_id or version_id\n        \"404\":\n          description: No router version found\n      summary: Get specific router config version\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}/versions/{version}/deploy:\n    post:\n      parameters:\n      - description: id of the project that the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to be deployed\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: version of router configuration to be deployed\n        in: path\n        name: version\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterIdAndVersion'\n          description: Accepted\n        \"400\":\n          description: Invalid project_id, router_id, version_id or deploy request\n        \"404\":\n          description: No router version found\n      summary: Deploy specified version of router configuration\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}/events:\n    get:\n      parameters:\n      - description: id of the project that the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router to be deployed\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouterEvents'\n          description: Get events\n        \"400\":\n          description: Invalid project_id or router_id\n        \"404\":\n          description: No router version found\n      summary: Get deployment events associated with this router\n      tags:\n      - Router\n  /projects/{project_id}/routers/{router_id}/logs:\n    get:\n      parameters:\n      - description: id of the project that the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: component type of the router to get the logs from\n        in: query\n        name: component_type\n        required: false\n        schema:\n          enum:\n          - router\n          - enricher\n          - ensembler\n          type: string\n      - description: container to get the logs from, default to 'user-container',\n          the default container name in Knative\n        in: query\n        name: container\n        required: false\n        schema:\n          type: string\n      - description: RFC 3399 timestamp from which to retrieve the logs e.g. 2002-10-02T15:00:00Z.\n          The logs retrieved will have timestamp after (but not including) since_time\n        in: query\n        name: since_time\n        required: false\n        schema:\n          type: string\n      - description: number of lines from the end of the logs to retrieve. If both\n          tail_lines and head_lines are set, tail_lines will be ignored\n        in: query\n        name: tail_lines\n        required: false\n        schema:\n          type: string\n      - description: number of lines from the start of the logs to retrieve. If both\n          tail_lines and head_lines are set, tail_lines will be ignored\n        in: query\n        name: head_lines\n        required: false\n        schema:\n          type: string\n      - description: if true, return the logs from previous terminated container in\n          all pods, default to false\n        in: query\n        name: previous\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PodLog'\n                type: array\n          description: OK\n        \"400\":\n          description: Invalid value for the router id or query strings\n        \"500\":\n          description: Failed to list pod logs due to internal error\n      summary: List logs for a router, default to 'router' component type and the\n        currently deployed version\n      tags:\n      - Logs\n  /projects/{project_id}/routers/{router_id}/versions/{version}/logs:\n    get:\n      parameters:\n      - description: id of the project that the router belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the router\n        in: path\n        name: router_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: router version value to get the logs from\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n      - description: component type of the router to get the logs from\n        in: query\n        name: component_type\n        required: false\n        schema:\n          enum:\n          - router\n          - enricher\n          - ensembler\n          type: string\n      - description: container to get the logs from, default to 'user-container',\n          the default container name in Knative\n        in: query\n        name: container\n        required: false\n        schema:\n          type: string\n      - description: RFC 3399 timestamp from which to retrieve the logs e.g. 2002-10-02T15:00:00Z\n        in: query\n        name: since_time\n        required: false\n        schema:\n          type: string\n      - description: number of lines from the end of the logs to retrieve, this takes\n          priority over 'since_time'\n        in: query\n        name: tail_lines\n        required: false\n        schema:\n          type: string\n      - description: if true, return the logs from previous terminated container in\n          all pods, default to false\n        in: query\n        name: previous\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PodLog'\n                type: array\n          description: OK\n        \"400\":\n          description: Invalid value for the router, version id or query strings\n        \"500\":\n          description: Failed to list pod logs due to internal error\n      summary: List logs for a router with a specific version, default to 'router'\n        component type\n      tags:\n      - Logs\n  /projects/{project_id}/jobs/{job_id}/logs:\n    get:\n      parameters:\n      - description: id of the project that the ensembling job belongs to\n        in: path\n        name: project_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: id of the ensembling job\n        in: path\n        name: job_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: component type of the ensembling job to get the logs from\n        in: query\n        name: component_type\n        required: false\n        schema:\n          enum:\n          - image_builder\n          - driver\n          - executor\n          type: string\n      - description: RFC 3399 timestamp from which to retrieve the logs e.g. 2002-10-02T15:00:00Z.\n          The logs retrieved will have timestamp after (but not including) since_time\n        in: query\n        name: since_time\n        required: false\n        schema:\n          type: string\n      - description: number of lines from the end of the logs to retrieve. If both\n          tail_lines and head_lines are set, tail_lines will be ignored\n        in: query\n        name: tail_lines\n        required: false\n        schema:\n          type: string\n      - description: number of lines from the start of the logs to retrieve. If both\n          tail_lines and head_lines are set, tail_lines will be ignored\n        in: query\n        name: head_lines\n        required: false\n        schema:\n          type: string\n      - description: if true, return the logs from previous terminated container in\n          all pods, default to false\n        in: query\n        name: previous\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnsemblingPodLogs'\n          description: OK\n        \"400\":\n          description: Invalid value for the ensembling job id or query strings\n        \"404\":\n          description: Ensembling job not found\n        \"500\":\n          description: Failed to list pod logs due to internal error\n      summary: List logs for an ensembling job, default to 'image_builder' component\n        type\n      tags:\n      - Logs\n  /experiment-engines:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ExperimentEngine'\n                type: array\n          description: OK\n        \"500\":\n          description: Error querying experiment engines\n      summary: List the available experiment engines\n      tags:\n      - Experiments\n  /experiment-engines/{engine}/clients:\n    get:\n      parameters:\n      - description: name of the experiment engine\n        in: path\n        name: engine\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ExperimentClient'\n                type: array\n          description: OK\n        \"400\":\n          description: Invalid engine name\n        \"500\":\n          description: Error querying experiment engine clients\n      summary: List the clients configured on the given experiment engine\n      tags:\n      - Experiments\n  /experiment-engines/{engine}/experiments:\n    get:\n      parameters:\n      - description: name of the experiment engine\n        in: path\n        name: engine\n        required: true\n        schema:\n          type: string\n      - description: internal (unique) id of the client to filter experiments by\n        in: query\n        name: client_id\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Experiment'\n                type: array\n          description: OK\n        \"400\":\n          description: Invalid engine name\n        \"500\":\n          description: Error querying experiments for the given experiment engine\n      summary: List the experiments configured on the given experiment engine\n      tags:\n      - Experiments\n  /experiment-engines/{engine}/variables:\n    get:\n      parameters:\n      - description: name of the experiment engine\n        in: path\n        name: engine\n        required: true\n        schema:\n          type: string\n      - description: internal (unique) id of the client.\n        in: query\n        name: client_id\n        schema:\n          type: string\n      - description: comma-separated internal (unique) ids of the experiments.\n        in: query\n        name: experiment_id\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExperimentVariables'\n          description: OK\n        \"400\":\n          description: Invalid engine name, client_id or experiment_id(s)\n        \"500\":\n          description: Error querying variables for the given client / experiment(s)\n      summary: List the variables configured for the given client and/or experiment(s)\n      tags:\n      - Experiments\ncomponents:\n  schemas:\n    Project:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        readers:\n        - readers\n        - readers\n        stream: stream\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: 0\n        team: team\n        mlflow_tracking_url: mlflow_tracking_url\n        administrators:\n        - administrators\n        - administrators\n        labels:\n        - value: value\n          key: key\n        - value: value\n          key: key\n      properties:\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        mlflow_tracking_url:\n          type: string\n        administrators:\n          items:\n            type: string\n          type: array\n        readers:\n          items:\n            type: string\n          type: array\n        team:\n          type: string\n        stream:\n          type: string\n        labels:\n          items:\n            $ref: '#/components/schemas/Label'\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - name\n      type: object\n    Label:\n      example:\n        value: value\n        key: key\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      type: object\n    EnsemblersPaginatedResults:\n      allOf:\n      - $ref: '#/components/schemas/EnsemblersPaginatedResults_allOf'\n      - $ref: '#/components/schemas/EnsemblersPaginatedResults_allOf_1'\n    GenericEnsembler:\n      properties:\n        id:\n          format: int32\n          type: integer\n        project_id:\n          format: int32\n          type: integer\n        type:\n          $ref: '#/components/schemas/EnsemblerType'\n        name:\n          maxLength: 20\n          minLength: 3\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - type\n    EnsemblerType:\n      enum:\n      - pyfunc\n      type: string\n    Ensembler:\n      discriminator:\n        mapping:\n          pyfunc: '#/components/schemas/PyFuncEnsembler'\n        propertyName: type\n      oneOf:\n      - $ref: '#/components/schemas/PyFuncEnsembler'\n      type: object\n    PyFuncEnsembler:\n      allOf:\n      - $ref: '#/components/schemas/GenericEnsembler'\n      - $ref: '#/components/schemas/PyFuncEnsembler_allOf'\n    EnsemblingJobPaginatedResults:\n      allOf:\n      - $ref: '#/components/schemas/EnsemblersPaginatedResults_allOf'\n      - $ref: '#/components/schemas/EnsemblingJobPaginatedResults_allOf'\n    EnsemblingJob:\n      description: A JSON object that represents an ensembling job for batch experiment\n        use cases\n      example:\n        job_config:\n          metadata:\n            name: name\n            annotations:\n              key: annotations\n          version: version\n          spec:\n            source:\n              join_on:\n              - join_on\n              - join_on\n            ensembler:\n              result:\n                column_name: column_name\n              uri: https://openapi-generator.tech\n            predictions: {}\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        project_id: 6\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        ensembler_id: 1\n        id: 0\n        error: error\n        infra_config:\n          service_account_name: service_account_name\n          run_id: run_id\n          ensembler_name: ensembler_name\n          resources:\n            driver_cpu_request: driver_cpu_request\n            executor_memory_request: executor_memory_request\n            driver_memory_request: driver_memory_request\n            executor_cpu_request: executor_cpu_request\n            executor_replica: 5\n          artifact_uri: artifact_uri\n          env:\n          - name: name\n            value: value\n          - name: name\n            value: value\n        monitoring_url: monitoring_url\n        environment_name: environment_name\n      properties:\n        id:\n          format: int32\n          type: integer\n        name:\n          maxLength: 50\n          minLength: 3\n          readOnly: true\n          type: string\n        project_id:\n          format: int32\n          type: integer\n        ensembler_id:\n          format: int32\n          type: integer\n        environment_name:\n          type: string\n        infra_config:\n          $ref: '#/components/schemas/EnsemblerInfraConfig'\n        job_config:\n          $ref: '#/components/schemas/EnsemblerConfig'\n        status:\n          $ref: '#/components/schemas/EnsemblerJobStatus'\n        error:\n          type: string\n        monitoring_url:\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n    EnsemblerInfraConfig:\n      example:\n        service_account_name: service_account_name\n        run_id: run_id\n        ensembler_name: ensembler_name\n        resources:\n          driver_cpu_request: driver_cpu_request\n          executor_memory_request: executor_memory_request\n          driver_memory_request: driver_memory_request\n          executor_cpu_request: executor_cpu_request\n          executor_replica: 5\n        artifact_uri: artifact_uri\n        env:\n        - name: name\n          value: value\n        - name: name\n          value: value\n      properties:\n        artifact_uri:\n          type: string\n        ensembler_name:\n          type: string\n        service_account_name:\n          type: string\n          x-go-custom-tag: validate:\"required\"\n        resources:\n          $ref: '#/components/schemas/EnsemblingResources'\n        run_id:\n          readOnly: true\n          type: string\n        env:\n          items:\n            $ref: '#/components/schemas/EnvVar'\n          type: array\n      type: object\n    EnsemblingResources:\n      example:\n        driver_cpu_request: driver_cpu_request\n        executor_memory_request: executor_memory_request\n        driver_memory_request: driver_memory_request\n        executor_cpu_request: executor_cpu_request\n        executor_replica: 5\n      nullable: true\n      properties:\n        driver_cpu_request:\n          type: string\n        driver_memory_request:\n          type: string\n        executor_replica:\n          type: integer\n        executor_cpu_request:\n          type: string\n        executor_memory_request:\n          type: string\n      type: object\n    EnsemblerConfig:\n      example:\n        metadata:\n          name: name\n          annotations:\n            key: annotations\n        version: version\n        spec:\n          source:\n            join_on:\n            - join_on\n            - join_on\n          ensembler:\n            result:\n              column_name: column_name\n            uri: https://openapi-generator.tech\n          predictions: {}\n      properties:\n        version:\n          type: string\n        kind:\n          $ref: '#/components/schemas/EnsemblerConfigKind'\n        metadata:\n          $ref: '#/components/schemas/EnsemblingJobMeta'\n        spec:\n          $ref: '#/components/schemas/EnsemblingJobSpec'\n      required:\n      - kind\n      - spec\n      - version\n      type: object\n    EnsemblerConfigKind:\n      enum:\n      - BatchEnsemblingJob\n      type: string\n    EnsemblingJobMeta:\n      description: Ensembling job Metadata\n      example:\n        name: name\n        annotations:\n          key: annotations\n      properties:\n        name:\n          type: string\n        annotations:\n          additionalProperties:\n            type: string\n          nullable: true\n          type: object\n      required:\n      - name\n    EnsemblingJobSpec:\n      description: Ensembling job Specification\n      example:\n        source:\n          join_on:\n          - join_on\n          - join_on\n        ensembler:\n          result:\n            column_name: column_name\n          uri: https://openapi-generator.tech\n        predictions: {}\n      properties:\n        source:\n          $ref: '#/components/schemas/EnsemblingJobSource'\n        predictions:\n          additionalProperties:\n            $ref: '#/components/schemas/EnsemblingJobPredictionSource'\n          type: object\n        ensembler:\n          $ref: '#/components/schemas/EnsemblingJobEnsemblerSpec'\n        sink:\n          $ref: '#/components/schemas/EnsemblingJobSink'\n      required:\n      - ensembler\n      - predictions\n      - sink\n      - source\n    EnsemblingJobSource:\n      example:\n        join_on:\n        - join_on\n        - join_on\n      properties:\n        dataset:\n          $ref: '#/components/schemas/Dataset'\n        join_on:\n          items:\n            type: string\n          type: array\n      required:\n      - dataset\n      - join_on\n      type: object\n    Dataset:\n      discriminator:\n        mapping:\n          BQ: '#/components/schemas/BigQueryDataset'\n        propertyName: type\n      oneOf:\n      - $ref: '#/components/schemas/BigQueryDataset'\n      type: object\n    BigQueryDataset:\n      allOf:\n      - $ref: '#/components/schemas/GenericDataset'\n      - $ref: '#/components/schemas/BigQueryDataset_allOf'\n    GenericDataset:\n      properties:\n        type:\n          enum:\n          - BQ\n          type: string\n      required:\n      - type\n      type: object\n    BigQueryDatasetConfig:\n      properties:\n        table:\n          pattern: ^([a-z][a-z0-9-]+\\.\\w+([_]?\\w)+\\.\\w+([_]?\\w)+)?$\n          type: string\n        features:\n          items:\n            type: string\n          nullable: true\n          type: array\n        query:\n          type: string\n        options:\n          additionalProperties:\n            type: string\n          nullable: true\n          type: object\n    EnsemblingJobPredictionSource:\n      allOf:\n      - $ref: '#/components/schemas/EnsemblingJobSource'\n      - $ref: '#/components/schemas/EnsemblingJobPredictionSource_allOf'\n      type: object\n    EnsemblingJobEnsemblerSpec:\n      example:\n        result:\n          column_name: column_name\n        uri: https://openapi-generator.tech\n      properties:\n        uri:\n          default: \"\"\n          format: uri\n          type: string\n        result:\n          $ref: '#/components/schemas/EnsemblingJobEnsemblerSpecResult'\n      required:\n      - result\n      - uri\n      type: object\n    EnsemblingJobEnsemblerSpecResult:\n      example:\n        column_name: column_name\n      properties:\n        type:\n          $ref: '#/components/schemas/EnsemblingJobResultType'\n        item_type:\n          $ref: '#/components/schemas/EnsemblingJobResultType'\n        column_name:\n          type: string\n      required:\n      - column_name\n      - type\n      type: object\n    EnsemblingJobResultType:\n      enum:\n      - DOUBLE\n      - FLOAT\n      - INTEGER\n      - LONG\n      - STRING\n      - ARRAY\n      type: string\n    EnsemblingJobSink:\n      discriminator:\n        mapping:\n          BQ: '#/components/schemas/BigQuerySink'\n        propertyName: type\n      oneOf:\n      - $ref: '#/components/schemas/BigQuerySink'\n      type: object\n    BigQuerySink:\n      allOf:\n      - $ref: '#/components/schemas/GenericSink'\n      - $ref: '#/components/schemas/BigQuerySink_allOf'\n    GenericSink:\n      properties:\n        type:\n          enum:\n          - CONSOLE\n          - BQ\n          type: string\n        columns:\n          items:\n            type: string\n          nullable: true\n          type: array\n        save_mode:\n          $ref: '#/components/schemas/SaveMode'\n      required:\n      - save_mode\n      - type\n      type: object\n    SaveMode:\n      enum:\n      - ERRORIFEXISTS\n      - OVERWRITE\n      - APPEND\n      - IGNORE\n      type: string\n    BigQuerySinkConfig:\n      properties:\n        table:\n          type: string\n        staging_bucket:\n          type: string\n        options:\n          additionalProperties:\n            type: string\n          nullable: true\n          type: object\n      required:\n      - staging_bucket\n      - table\n      type: object\n    EnsemblerJobStatus:\n      enum:\n      - pending\n      - building\n      - running\n      - terminating\n      - terminated\n      - completed\n      - failed\n      - failed_submission\n      - failed_building\n      type: string\n    JobId:\n      $ref: '#/components/schemas/IdObject'\n    IdObject:\n      example:\n        id: 0\n      properties:\n        id:\n          format: int32\n          type: integer\n      type: object\n    Id:\n      format: int32\n      type: integer\n    Alert:\n      example:\n        duration: duration\n        environment: environment\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        service: service\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: 0\n        team: team\n        critical_threshold: 1.4658129805029452\n        warning_threshold: 6.027456183070403\n      properties:\n        id:\n          readOnly: true\n          type: integer\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n        environment:\n          type: string\n        team:\n          type: string\n        service:\n          type: string\n        metric:\n          $ref: '#/components/schemas/AlertMetric'\n        warning_threshold:\n          type: number\n        critical_threshold:\n          type: number\n        duration:\n          type: string\n      required:\n      - environment\n      - metric\n      - team\n      type: object\n    AlertMetric:\n      enum:\n      - throughput\n      - latency95p\n      - error_rate\n      - cpu_util\n      - memory_util\n      type: string\n    RouterDetails:\n      allOf:\n      - $ref: '#/components/schemas/Router'\n      - $ref: '#/components/schemas/RouterDetails_allOf'\n    Router:\n      example:\n        endpoint: endpoint\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        project_id: 1\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: 6\n        monitoring_url: monitoring_url\n        environment_name: environment_name\n      nullable: true\n      properties:\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n        project_id:\n          type: integer\n        environment_name:\n          type: string\n        endpoint:\n          readOnly: true\n          type: string\n        monitoring_url:\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/RouterStatus'\n      type: object\n    RouterStatus:\n      default: pending\n      enum:\n      - deployed\n      - undeployed\n      - failed\n      - pending\n      type: string\n    RouterVersion:\n      example:\n        default_traffic_rule:\n          routes:\n          - routes\n          - routes\n        image: image\n        autoscaling_policy:\n          metric: concurrency\n          target: target\n        created_at: 2000-01-23T04:56:07.000+00:00\n        rules:\n        - routes:\n          - routes\n          - routes\n          name: name\n          conditions:\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n        - routes:\n          - routes\n          - routes\n          name: name\n          conditions:\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n        error: error\n        version: 5\n        log_config:\n          custom_metrics_enabled: true\n          bigquery_config:\n            batch_load: true\n            table: table\n            service_account_secret: service_account_secret\n          kafka_config:\n            brokers: brokers\n            topic: topic\n            serialization_format: json\n          fiber_debug_log_enabled: true\n          jaeger_enabled: true\n        timeout: timeout\n        monitoring_url: monitoring_url\n        experiment_engine:\n          type: nop\n          config: '{}'\n        enricher:\n          service_account: secret-name-for-google-service-account\n          image: image\n          endpoint: endpoint\n          autoscaling_policy:\n            metric: concurrency\n            target: target\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          port: 5\n          created_at: 2000-01-23T04:56:07.000+00:00\n          resource_request:\n            min_replica: 0\n            max_replica: 6\n            memory_request: memory_request\n            cpu_request: cpu_request\n          id: 1\n          env:\n          - name: name\n            value: value\n          - name: name\n            value: value\n          timeout: timeout\n        routes:\n        - endpoint: endpoint\n          service_method: service_method\n          annotations: '{}'\n          id: id\n          type: type\n          timeout: timeout\n        - endpoint: endpoint\n          service_method: service_method\n          annotations: '{}'\n          id: id\n          type: type\n          timeout: timeout\n        router:\n          endpoint: endpoint\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          project_id: 1\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: 6\n          monitoring_url: monitoring_url\n          environment_name: environment_name\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        default_route_id: default_route_id\n        resource_request:\n          min_replica: 0\n          max_replica: 6\n          memory_request: memory_request\n          cpu_request: cpu_request\n        id: 0\n        ensembler:\n          pyfunc_config:\n            autoscaling_policy:\n              metric: concurrency\n              target: target\n            project_id: 7\n            ensembler_id: 9\n            resource_request:\n              min_replica: 0\n              max_replica: 6\n              memory_request: memory_request\n              cpu_request: cpu_request\n            env:\n            - name: name\n              value: value\n            - name: name\n              value: value\n            timeout: timeout\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          standard_config:\n            route_name_path: route_name_path\n            experiment_mappings:\n            - treatment: treatment-1\n              route: route-1\n              experiment: experiment-1\n            - treatment: treatment-1\n              route: route-1\n              experiment: experiment-1\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: 5\n          type: standard\n          docker_config:\n            service_account: secret-name-for-google-service-account\n            image: image\n            endpoint: endpoint\n            autoscaling_policy:\n              metric: concurrency\n              target: target\n            port: 2\n            resource_request:\n              min_replica: 0\n              max_replica: 6\n              memory_request: memory_request\n              cpu_request: cpu_request\n            env:\n            - name: name\n              value: value\n            - name: name\n              value: value\n            timeout: timeout\n      properties:\n        id:\n          format: int32\n          type: integer\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n        router:\n          $ref: '#/components/schemas/Router'\n        version:\n          type: integer\n        status:\n          $ref: '#/components/schemas/RouterVersionStatus'\n        error:\n          type: string\n        image:\n          type: string\n        routes:\n          items:\n            $ref: '#/components/schemas/Route'\n          type: array\n        experiment_engine:\n          $ref: '#/components/schemas/ExperimentConfig'\n        resource_request:\n          $ref: '#/components/schemas/ResourceRequest'\n        autoscaling_policy:\n          $ref: '#/components/schemas/AutoscalingPolicy'\n        timeout:\n          pattern: ^[0-9]+(ms|s|m|h)$\n          type: string\n        protocol:\n          $ref: '#/components/schemas/Protocol'\n        log_config:\n          $ref: '#/components/schemas/RouterVersion_log_config'\n        enricher:\n          $ref: '#/components/schemas/Enricher'\n        ensembler:\n          $ref: '#/components/schemas/RouterEnsemblerConfig'\n        monitoring_url:\n          readOnly: true\n          type: string\n        default_route_id:\n          type: string\n        rules:\n          items:\n            $ref: '#/components/schemas/TrafficRule'\n          type: array\n        default_traffic_rule:\n          $ref: '#/components/schemas/DefaultTrafficRule'\n      type: object\n    RouterVersionStatus:\n      default: pending\n      enum:\n      - deployed\n      - undeployed\n      - failed\n      - pending\n      type: string\n    Route:\n      example:\n        endpoint: endpoint\n        service_method: service_method\n        annotations: '{}'\n        id: id\n        type: type\n        timeout: timeout\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n        endpoint:\n          type: string\n        timeout:\n          pattern: ^[0-9]+(ms|s|m|h)$\n          type: string\n        service_method:\n          type: string\n        annotations:\n          nullable: true\n          type: object\n      required:\n      - endpoint\n      - id\n      - timeout\n      - type\n      type: object\n    ResourceRequest:\n      example:\n        min_replica: 0\n        max_replica: 6\n        memory_request: memory_request\n        cpu_request: cpu_request\n      properties:\n        min_replica:\n          type: integer\n        max_replica:\n          type: integer\n        cpu_request:\n          pattern: ^(\\d{1,3}(\\.\\d{1,3})?)$|^(\\d{2,5}m)$\n          type: string\n        memory_request:\n          pattern: ^\\d+(Ei?|Pi?|Ti?|Gi?|Mi?|Ki?)?$\n          type: string\n      type: object\n    AutoscalingPolicy:\n      example:\n        metric: concurrency\n        target: target\n      properties:\n        metric:\n          enum:\n          - concurrency\n          - cpu\n          - memory\n          - rps\n          type: string\n        target:\n          pattern: ^\\d+$\n          type: string\n      type: object\n    Protocol:\n      enum:\n      - UPI_V1\n      - HTTP_JSON\n      type: string\n    LogLevel:\n      enum:\n      - DEBUG\n      - INFO\n      - WARN\n      - ERROR\n      type: string\n    ResultLoggerType:\n      default: nop\n      enum:\n      - nop\n      - console\n      - bigquery\n      - kafka\n      type: string\n    BigQueryConfig:\n      example:\n        batch_load: true\n        table: table\n        service_account_secret: service_account_secret\n      nullable: true\n      properties:\n        table:\n          pattern: ^[a-zA-Z][a-zA-Z0-9-]+\\.\\w+([_]?\\w)+\\.\\w+([_]?\\w)+$\n          type: string\n        service_account_secret:\n          type: string\n        batch_load:\n          nullable: true\n          type: boolean\n      required:\n      - service_account_secret\n      - table\n      type: object\n    KafkaConfig:\n      example:\n        brokers: brokers\n        topic: topic\n        serialization_format: json\n      nullable: true\n      properties:\n        brokers:\n          description: Comma-separated list of host and port pairs that are the addresses\n            of the Kafka brokers.\n          pattern: ^([a-zA-Z]+:\\/\\/)?\\[?([0-9a-zA-Z\\-%._:]*)\\]?:([0-9]+)(,([a-zA-Z]+:\\/\\/)?\\[?([0-9a-zA-Z\\-%._:]*)\\]?:([0-9]+))*$\n          type: string\n        topic:\n          pattern: ^[A-Za-z0-9_.-]{1,249}$\n          type: string\n        serialization_format:\n          enum:\n          - json\n          - protobuf\n          type: string\n      required:\n      - brokers\n      - serialization_format\n      - topic\n      type: object\n    Enricher:\n      example:\n        service_account: secret-name-for-google-service-account\n        image: image\n        endpoint: endpoint\n        autoscaling_policy:\n          metric: concurrency\n          target: target\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        port: 5\n        created_at: 2000-01-23T04:56:07.000+00:00\n        resource_request:\n          min_replica: 0\n          max_replica: 6\n          memory_request: memory_request\n          cpu_request: cpu_request\n        id: 1\n        env:\n        - name: name\n          value: value\n        - name: name\n          value: value\n        timeout: timeout\n      properties:\n        id:\n          format: int32\n          type: integer\n        image:\n          type: string\n        resource_request:\n          $ref: '#/components/schemas/ResourceRequest'\n        autoscaling_policy:\n          $ref: '#/components/schemas/AutoscalingPolicy'\n        endpoint:\n          type: string\n        timeout:\n          pattern: ^[0-9]+(ms|s|m|h)$\n          type: string\n        port:\n          type: integer\n        env:\n          items:\n            $ref: '#/components/schemas/EnvVar'\n          type: array\n        service_account:\n          description: |\n            (Optional) Name of the secret registered in the current MLP project that contains the Google service account JSON key. This secret will be mounted as a file inside the container and the environment variable GOOGLE_APPLICATION_CREDENTIALS will point to the service account file.\"\n          example: secret-name-for-google-service-account\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n      - endpoint\n      - env\n      - image\n      - port\n      - resource_request\n      - timeout\n      type: object\n    RouterEnsemblerConfig:\n      example:\n        pyfunc_config:\n          autoscaling_policy:\n            metric: concurrency\n            target: target\n          project_id: 7\n          ensembler_id: 9\n          resource_request:\n            min_replica: 0\n            max_replica: 6\n            memory_request: memory_request\n            cpu_request: cpu_request\n          env:\n          - name: name\n            value: value\n          - name: name\n            value: value\n          timeout: timeout\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        standard_config:\n          route_name_path: route_name_path\n          experiment_mappings:\n          - treatment: treatment-1\n            route: route-1\n            experiment: experiment-1\n          - treatment: treatment-1\n            route: route-1\n            experiment: experiment-1\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: 5\n        type: standard\n        docker_config:\n          service_account: secret-name-for-google-service-account\n          image: image\n          endpoint: endpoint\n          autoscaling_policy:\n            metric: concurrency\n            target: target\n          port: 2\n          resource_request:\n            min_replica: 0\n            max_replica: 6\n            memory_request: memory_request\n            cpu_request: cpu_request\n          env:\n          - name: name\n            value: value\n          - name: name\n            value: value\n          timeout: timeout\n      properties:\n        id:\n          format: int32\n          type: integer\n        type:\n          description: type of ensembler\n          enum:\n          - standard\n          - docker\n          - pyfunc\n          type: string\n        standard_config:\n          $ref: '#/components/schemas/EnsemblerStandardConfig'\n        docker_config:\n          $ref: '#/components/schemas/EnsemblerDockerConfig'\n        pyfunc_config:\n          $ref: '#/components/schemas/EnsemblerPyfuncConfig'\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n      - type\n      type: object\n    EnsemblerStandardConfig:\n      description: ensembler config when ensembler type is standard\n      example:\n        route_name_path: route_name_path\n        experiment_mappings:\n        - treatment: treatment-1\n          route: route-1\n          experiment: experiment-1\n        - treatment: treatment-1\n          route: route-1\n          experiment: experiment-1\n      nullable: true\n      properties:\n        experiment_mappings:\n          items:\n            $ref: '#/components/schemas/EnsemblerStandardConfig_experiment_mappings'\n          nullable: true\n          type: array\n        route_name_path:\n          nullable: true\n          type: string\n      type: object\n    EnsemblerDockerConfig:\n      description: ensembler config when ensembler type is docker\n      example:\n        service_account: secret-name-for-google-service-account\n        image: image\n        endpoint: endpoint\n        autoscaling_policy:\n          metric: concurrency\n          target: target\n        port: 2\n        resource_request:\n          min_replica: 0\n          max_replica: 6\n          memory_request: memory_request\n          cpu_request: cpu_request\n        env:\n        - name: name\n          value: value\n        - name: name\n          value: value\n        timeout: timeout\n      nullable: true\n      properties:\n        image:\n          pattern: ^([a-zA-Z0-9]+(?:[._-][a-zA-Z0-9]+)*(?::\\d{2,5})?\\/)?([a-zA-Z0-9]+(?:[._-][a-zA-Z0-9]+)*\\/)*([a-zA-Z0-9]+(?:[._-][a-zA-Z0-9]+)*)(?::[a-zA-Z0-9]+(?:[._-][a-zA-Z0-9]+)*)?$\n          type: string\n        resource_request:\n          $ref: '#/components/schemas/ResourceRequest'\n        autoscaling_policy:\n          $ref: '#/components/schemas/AutoscalingPolicy'\n        endpoint:\n          type: string\n        timeout:\n          pattern: ^[0-9]+(ms|s|m|h)$\n          type: string\n        port:\n          type: integer\n        env:\n          items:\n            $ref: '#/components/schemas/EnvVar'\n          type: array\n        service_account:\n          description: |\n            (Optional) Name of the secret registered in the current MLP project that contains the Google service account JSON key. This secret will be mounted as a file inside the container and the environment variable GOOGLE_APPLICATION_CREDENTIALS will point to the service account file.\"\n          example: secret-name-for-google-service-account\n          type: string\n      required:\n      - endpoint\n      - env\n      - image\n      - port\n      - resource_request\n      - timeout\n      type: object\n    EnsemblerPyfuncConfig:\n      description: ensembler config when ensembler type is pyfunc\n      example:\n        autoscaling_policy:\n          metric: concurrency\n          target: target\n        project_id: 7\n        ensembler_id: 9\n        resource_request:\n          min_replica: 0\n          max_replica: 6\n          memory_request: memory_request\n          cpu_request: cpu_request\n        env:\n        - name: name\n          value: value\n        - name: name\n          value: value\n        timeout: timeout\n      nullable: true\n      properties:\n        project_id:\n          type: integer\n        ensembler_id:\n          type: integer\n        resource_request:\n          $ref: '#/components/schemas/ResourceRequest'\n        autoscaling_policy:\n          $ref: '#/components/schemas/AutoscalingPolicy'\n        timeout:\n          pattern: ^[0-9]+(ms|s|m|h)$\n          type: string\n        env:\n          items:\n            $ref: '#/components/schemas/EnvVar'\n          type: array\n      required:\n      - ensembler_id\n      - project_id\n      - resource_request\n      - timeout\n      type: object\n    TrafficRule:\n      example:\n        routes:\n        - routes\n        - routes\n        name: name\n        conditions:\n        - field: field\n          values:\n          - values\n          - values\n          operator: in\n        - field: field\n          values:\n          - values\n          - values\n          operator: in\n      properties:\n        name:\n          type: string\n        conditions:\n          items:\n            $ref: '#/components/schemas/TrafficRuleCondition'\n          type: array\n        routes:\n          description: List of IDs of the routes, that should be activated by this\n            rule\n          items:\n            type: string\n          type: array\n      required:\n      - conditions\n      - name\n      - routes\n      type: object\n    TrafficRuleCondition:\n      example:\n        field: field\n        values:\n        - values\n        - values\n        operator: in\n      properties:\n        field_source:\n          $ref: '#/components/schemas/FieldSource'\n        field:\n          description: |\n            For HTTP_JSON protocol, the valid `field_source` are `header` and `payload`. Whereas, for UPI_V1 protocol the valid `field_source` are `header` and `prediction_context`. If `field_source` is `header`, then `field` should contain the name of the request header. If `field_source` is `payload`, then `field` should be a valid json path. If `field_source` is `prediction_context`, then `field` should contain variable name stored in `prediction_context` field of the incoming request.\n          type: string\n        operator:\n          enum:\n          - in\n          type: string\n        values:\n          items:\n            type: string\n          type: array\n      required:\n      - field\n      - field_source\n      - operator\n      - values\n      type: object\n    DefaultTrafficRule:\n      example:\n        routes:\n        - routes\n        - routes\n      properties:\n        routes:\n          description: List of IDs of the routes, that should be activated by this\n            rule\n          items:\n            type: string\n          type: array\n      required:\n      - routes\n      type: object\n    RouterConfig:\n      example:\n        name: name\n        config:\n          default_traffic_rule:\n            routes:\n            - routes\n            - routes\n          enricher:\n            service_account: secret-name-for-google-service-account\n            image: image\n            endpoint: endpoint\n            autoscaling_policy:\n              metric: concurrency\n              target: target\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            port: 5\n            created_at: 2000-01-23T04:56:07.000+00:00\n            resource_request:\n              min_replica: 0\n              max_replica: 6\n              memory_request: memory_request\n              cpu_request: cpu_request\n            id: 1\n            env:\n            - name: name\n              value: value\n            - name: name\n              value: value\n            timeout: timeout\n          routes:\n          - endpoint: endpoint\n            service_method: service_method\n            annotations: '{}'\n            id: id\n            type: type\n            timeout: timeout\n          - endpoint: endpoint\n            service_method: service_method\n            annotations: '{}'\n            id: id\n            type: type\n            timeout: timeout\n          autoscaling_policy:\n            metric: concurrency\n            target: target\n          default_route_id: default_route_id\n          rules:\n          - routes:\n            - routes\n            - routes\n            name: name\n            conditions:\n            - field: field\n              values:\n              - values\n              - values\n              operator: in\n            - field: field\n              values:\n              - values\n              - values\n              operator: in\n          - routes:\n            - routes\n            - routes\n            name: name\n            conditions:\n            - field: field\n              values:\n              - values\n              - values\n              operator: in\n            - field: field\n              values:\n              - values\n              - values\n              operator: in\n          resource_request:\n            min_replica: 0\n            max_replica: 6\n            memory_request: memory_request\n            cpu_request: cpu_request\n          ensembler:\n            pyfunc_config:\n              autoscaling_policy:\n                metric: concurrency\n                target: target\n              project_id: 7\n              ensembler_id: 9\n              resource_request:\n                min_replica: 0\n                max_replica: 6\n                memory_request: memory_request\n                cpu_request: cpu_request\n              env:\n              - name: name\n                value: value\n              - name: name\n                value: value\n              timeout: timeout\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            standard_config:\n              route_name_path: route_name_path\n              experiment_mappings:\n              - treatment: treatment-1\n                route: route-1\n                experiment: experiment-1\n              - treatment: treatment-1\n                route: route-1\n                experiment: experiment-1\n            created_at: 2000-01-23T04:56:07.000+00:00\n            id: 5\n            type: standard\n            docker_config:\n              service_account: secret-name-for-google-service-account\n              image: image\n              endpoint: endpoint\n              autoscaling_policy:\n                metric: concurrency\n                target: target\n              port: 2\n              resource_request:\n                min_replica: 0\n                max_replica: 6\n                memory_request: memory_request\n                cpu_request: cpu_request\n              env:\n              - name: name\n                value: value\n              - name: name\n                value: value\n              timeout: timeout\n          log_config:\n            bigquery_config:\n              batch_load: true\n              table: table\n              service_account_secret: service_account_secret\n            kafka_config:\n              brokers: brokers\n              topic: topic\n              serialization_format: json\n          timeout: timeout\n          experiment_engine:\n            type: nop\n            config: '{}'\n        environment_name: environment_name\n      properties:\n        environment_name:\n          type: string\n        name:\n          pattern: ^[a-z0-9-]*$\n          type: string\n        config:\n          $ref: '#/components/schemas/RouterVersionConfig'\n      required:\n      - config\n      - environment_name\n      - name\n      type: object\n    RouterVersionConfig:\n      example:\n        default_traffic_rule:\n          routes:\n          - routes\n          - routes\n        enricher:\n          service_account: secret-name-for-google-service-account\n          image: image\n          endpoint: endpoint\n          autoscaling_policy:\n            metric: concurrency\n            target: target\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          port: 5\n          created_at: 2000-01-23T04:56:07.000+00:00\n          resource_request:\n            min_replica: 0\n            max_replica: 6\n            memory_request: memory_request\n            cpu_request: cpu_request\n          id: 1\n          env:\n          - name: name\n            value: value\n          - name: name\n            value: value\n          timeout: timeout\n        routes:\n        - endpoint: endpoint\n          service_method: service_method\n          annotations: '{}'\n          id: id\n          type: type\n          timeout: timeout\n        - endpoint: endpoint\n          service_method: service_method\n          annotations: '{}'\n          id: id\n          type: type\n          timeout: timeout\n        autoscaling_policy:\n          metric: concurrency\n          target: target\n        default_route_id: default_route_id\n        rules:\n        - routes:\n          - routes\n          - routes\n          name: name\n          conditions:\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n        - routes:\n          - routes\n          - routes\n          name: name\n          conditions:\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n          - field: field\n            values:\n            - values\n            - values\n            operator: in\n        resource_request:\n          min_replica: 0\n          max_replica: 6\n          memory_request: memory_request\n          cpu_request: cpu_request\n        ensembler:\n          pyfunc_config:\n            autoscaling_policy:\n              metric: concurrency\n              target: target\n            project_id: 7\n            ensembler_id: 9\n            resource_request:\n              min_replica: 0\n              max_replica: 6\n              memory_request: memory_request\n              cpu_request: cpu_request\n            env:\n            - name: name\n              value: value\n            - name: name\n              value: value\n            timeout: timeout\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          standard_config:\n            route_name_path: route_name_path\n            experiment_mappings:\n            - treatment: treatment-1\n              route: route-1\n              experiment: experiment-1\n            - treatment: treatment-1\n              route: route-1\n              experiment: experiment-1\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: 5\n          type: standard\n          docker_config:\n            service_account: secret-name-for-google-service-account\n            image: image\n            endpoint: endpoint\n            autoscaling_policy:\n              metric: concurrency\n              target: target\n            port: 2\n            resource_request:\n              min_replica: 0\n              max_replica: 6\n              memory_request: memory_request\n              cpu_request: cpu_request\n            env:\n            - name: name\n              value: value\n            - name: name\n              value: value\n            timeout: timeout\n        log_config:\n          bigquery_config:\n            batch_load: true\n            table: table\n            service_account_secret: service_account_secret\n          kafka_config:\n            brokers: brokers\n            topic: topic\n            serialization_format: json\n        timeout: timeout\n        experiment_engine:\n          type: nop\n          config: '{}'\n      properties:\n        routes:\n          items:\n            $ref: '#/components/schemas/Route'\n          type: array\n        rules:\n          items:\n            $ref: '#/components/schemas/TrafficRule'\n          type: array\n        default_route_id:\n          type: string\n        default_traffic_rule:\n          $ref: '#/components/schemas/DefaultTrafficRule'\n        experiment_engine:\n          $ref: '#/components/schemas/ExperimentConfig'\n        resource_request:\n          $ref: '#/components/schemas/ResourceRequest'\n        autoscaling_policy:\n          $ref: '#/components/schemas/AutoscalingPolicy'\n        timeout:\n          pattern: ^[0-9]+(ms|s|m|h)$\n          type: string\n        protocol:\n          $ref: '#/components/schemas/Protocol'\n        log_config:\n          $ref: '#/components/schemas/RouterVersionConfig_log_config'\n        enricher:\n          $ref: '#/components/schemas/Enricher'\n        ensembler:\n          $ref: '#/components/schemas/RouterEnsemblerConfig'\n      required:\n      - experiment_engine\n      - log_config\n      - routes\n      - timeout\n      type: object\n    RouterId:\n      $ref: '#/components/schemas/IdObject'\n    RouterIdAndVersion:\n      example:\n        router_id: 0\n        version: 6\n      properties:\n        router_id:\n          format: int32\n          type: integer\n        version:\n          format: int32\n          type: integer\n      type: object\n    RouterIdObject:\n      example:\n        router_id: 0\n      properties:\n        router_id:\n          format: int32\n          type: integer\n      type: object\n    RouterEvents:\n      example:\n        events:\n        - event_type: info\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          stage: stage\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: 0\n          message: message\n          version: 6\n        - event_type: info\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          stage: stage\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: 0\n          message: message\n          version: 6\n      properties:\n        events:\n          items:\n            $ref: '#/components/schemas/Event'\n          type: array\n      type: object\n    Event:\n      example:\n        event_type: info\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        stage: stage\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: 0\n        message: message\n        version: 6\n      properties:\n        id:\n          format: int32\n          type: integer\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n        version:\n          type: integer\n        event_type:\n          enum:\n          - info\n          - error\n          type: string\n        stage:\n          type: string\n        message:\n          type: string\n      type: object\n    PodLog:\n      description: PodLog object contains a log item from a container in a pod\n      example:\n        json_payload:\n          level: info\n          msg: Initializing Nop Result Logger\n          router_version: test-1-1.integration-test\n          ts: 1.5943868326632557E9\n        environment: staging\n        container_name: user-container\n        namespace: cartography\n        text_payload: Example log from a container\n        timestamp: 2020-07-10T21:13:51Z\n        pod_name: nearby-turing-router-90-deployment-7b49b4bcb5-jlr7n\n      properties:\n        timestamp:\n          description: Log timestamp in RFC3339 format\n          example: 2020-07-10T21:13:51Z\n          format: date-time\n          type: string\n        environment:\n          description: Environment name of the pod running the container that produces\n            this log\n          example: staging\n          type: string\n        namespace:\n          description: Kubernetes namespace where the pod running the container is\n            created\n          example: cartography\n          type: string\n        pod_name:\n          description: Pod name running the container that produces this log\n          example: nearby-turing-router-90-deployment-7b49b4bcb5-jlr7n\n          type: string\n        container_name:\n          description: Container name that produces this log\n          example: user-container\n          type: string\n        text_payload:\n          description: Log in text format, either text_payload or json_payload will\n            be set but not both\n          example: Example log from a container\n          type: string\n        json_payload:\n          description: Log in JSON format, either text_payload or json_payload will\n            be set but not both\n          example:\n            level: info\n            msg: Initializing Nop Result Logger\n            router_version: test-1-1.integration-test\n            ts: 1.5943868326632557E9\n          type: object\n      type: object\n    EnsemblingPodLogs:\n      description: EnsemblingPodLog object contains a log item from a container in\n        an ensembling pod\n      example:\n        environment: staging\n        namespace: cartography\n        logs:\n        - text_payload: Example log from a container\n          timestamp: 2020-07-10T21:13:51Z\n          pod_name: batch-7b49b4bcb5-jlr7n\n        - text_payload: Example log from a container\n          timestamp: 2020-07-10T21:13:51Z\n          pod_name: batch-7b49b4bcb5-jlr7n\n        logging_url: http://www.example.com/logging?pod_name=hello\u0026namespace=world\n      properties:\n        environment:\n          description: Environment name of the pod running the container that produces\n            this log\n          example: staging\n          type: string\n        namespace:\n          description: Kubernetes namespace where the pod running the container is\n            created\n          example: cartography\n          type: string\n        logging_url:\n          description: A URL link to the dashboard but might not be present if a logging\n            storage is not configured in your infrastructure.\n          example: http://www.example.com/logging?pod_name=hello\u0026namespace=world\n          type: string\n        logs:\n          description: Logs from the ensembling job pod. Each element represents a\n            line.\n          items:\n            $ref: '#/components/schemas/EnsemblingPodLog'\n          type: array\n      type: object\n    EnsemblingPodLog:\n      description: EnsemblingPodLog object contains a log item from a container in\n        an ensembling pod\n      example:\n        text_payload: Example log from a container\n        timestamp: 2020-07-10T21:13:51Z\n        pod_name: batch-7b49b4bcb5-jlr7n\n      properties:\n        timestamp:\n          description: Log timestamp in RFC3339 format\n          example: 2020-07-10T21:13:51Z\n          format: date-time\n          type: string\n        pod_name:\n          description: Pod name running the container that produces this log\n          example: batch-7b49b4bcb5-jlr7n\n          type: string\n        text_payload:\n          description: Log in text format, either text_payload or json_payload will\n            be set but not both\n          example: Example log from a container\n          type: string\n      type: object\n    ExperimentEngine:\n      discriminator:\n        mapping:\n          standard: '#/components/schemas/StandardExperimentEngine'\n          custom: '#/components/schemas/CustomExperimentEngine'\n        propertyName: type\n      oneOf:\n      - $ref: '#/components/schemas/StandardExperimentEngine'\n      - $ref: '#/components/schemas/CustomExperimentEngine'\n      type: object\n    StandardExperimentEngine:\n      allOf:\n      - $ref: '#/components/schemas/GenericExperimentEngine'\n      - $ref: '#/components/schemas/StandardExperimentEngine_allOf'\n    GenericExperimentEngine:\n      properties:\n        name:\n          type: string\n        display_name:\n          description: Optional display name to be used in the UI\n          type: string\n        type:\n          $ref: '#/components/schemas/ExperimentManagerType'\n      required:\n      - name\n      - type\n      type: object\n    ExperimentManagerType:\n      enum:\n      - standard\n      - custom\n      type: string\n    CustomExperimentEngine:\n      allOf:\n      - $ref: '#/components/schemas/GenericExperimentEngine'\n      - $ref: '#/components/schemas/CustomExperimentEngine_allOf'\n    ExperimentClient:\n      example:\n        passkey: passkey\n        id: id\n        username: username\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n        passkey:\n          type: string\n      required:\n      - id\n      - username\n      type: object\n    Experiment:\n      example:\n        name: name\n        id: id\n        variants:\n        - name: control\n        - name: control\n        client_id: client_id\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        client_id:\n          type: string\n        variants:\n          description: List of variants in the experiment\n          items:\n            $ref: '#/components/schemas/Experiment_variants'\n          type: array\n      required:\n      - client_id\n      - id\n      - name\n      type: object\n    ExperimentVariables:\n      example:\n        experiment_variables:\n          key:\n          - name: name\n            type: unsupported\n            required: true\n          - name: name\n            type: unsupported\n            required: true\n        client_variables:\n        - name: name\n          type: unsupported\n          required: true\n        - name: name\n          type: unsupported\n          required: true\n        config:\n        - field: field\n          name: name\n          required: true\n        - field: field\n          name: name\n          required: true\n      properties:\n        client_variables:\n          description: list of variables defined for the client\n          items:\n            $ref: '#/components/schemas/ExperimentVariable'\n          type: array\n        experiment_variables:\n          additionalProperties:\n            items:\n              $ref: '#/components/schemas/ExperimentVariable'\n            type: array\n          description: map of experiment id to its variables\n          properties:\n            default:\n              items:\n                $ref: '#/components/schemas/ExperimentVariable'\n              type: array\n          type: object\n        config:\n          items:\n            $ref: '#/components/schemas/ExperimentVariableConfig'\n          type: array\n      type: object\n    ExperimentVariable:\n      example:\n        name: name\n        type: unsupported\n        required: true\n      properties:\n        name:\n          type: string\n        required:\n          type: boolean\n        type:\n          enum:\n          - unsupported\n          - unit\n          - filter\n          type: string\n      type: object\n    ExperimentVariableConfig:\n      example:\n        field: field\n        name: name\n        required: true\n      properties:\n        name:\n          type: string\n        required:\n          type: boolean\n        field:\n          type: string\n        field_source:\n          $ref: '#/components/schemas/FieldSource'\n      type: object\n    pagination.Paging:\n      properties:\n        total:\n          description: Total number of results matching the query criteria\n          format: int32\n          type: integer\n        page:\n          description: Number of the current page\n          format: int32\n          type: integer\n        pages:\n          description: Total number of pages\n          format: int32\n          type: integer\n      type: object\n    EnvVar:\n      example:\n        name: name\n        value: value\n      properties:\n        name:\n          pattern: ^[a-zA-Z0-9_]*$\n          type: string\n        value:\n          type: string\n      required:\n      - name\n      type: object\n    ExperimentConfig:\n      additionalProperties:\n        nullable: true\n        readOnly: true\n      example:\n        type: nop\n        config: '{}'\n      properties:\n        type:\n          default: nop\n          type: string\n        config:\n          type: object\n      required:\n      - type\n      type: object\n    ExperimentEngineType:\n      default: nop\n      type: string\n    FieldSource:\n      enum:\n      - header\n      - payload\n      - prediction_context\n      type: string\n    EnsemblersPaginatedResults_allOf:\n      properties:\n        paging:\n          $ref: '#/components/schemas/pagination.Paging'\n      type: object\n    EnsemblersPaginatedResults_allOf_1:\n      properties:\n        results:\n          items:\n            $ref: '#/components/schemas/GenericEnsembler'\n          type: array\n      type: object\n    PyFuncEnsembler_allOf:\n      properties:\n        mlflow_url:\n          format: uri\n          type: string\n        mlflow_experiment_id:\n          format: int32\n          type: integer\n        mlflow_run_id:\n          type: string\n        artifact_uri:\n          format: uri\n          type: string\n        python_version:\n          type: string\n      type: object\n    EnsemblingJobPaginatedResults_allOf:\n      properties:\n        results:\n          items:\n            $ref: '#/components/schemas/EnsemblingJob'\n          type: array\n      type: object\n    BigQueryDataset_allOf:\n      properties:\n        type:\n          default: BQ\n          enum:\n          - BQ\n          type: string\n        bq_config:\n          $ref: '#/components/schemas/BigQueryDatasetConfig'\n      required:\n      - bq_config\n      type: object\n    EnsemblingJobPredictionSource_allOf:\n      properties:\n        columns:\n          items:\n            type: string\n          nullable: true\n          type: array\n      type: object\n    BigQuerySink_allOf:\n      properties:\n        type:\n          default: BQ\n          enum:\n          - CONSOLE\n          - BQ\n          type: string\n        bq_config:\n          $ref: '#/components/schemas/BigQuerySinkConfig'\n      required:\n      - bq_config\n      type: object\n    RouterDetails_allOf:\n      properties:\n        config:\n          $ref: '#/components/schemas/RouterVersion'\n      type: object\n    RouterVersion_log_config:\n      example:\n        custom_metrics_enabled: true\n        bigquery_config:\n          batch_load: true\n          table: table\n          service_account_secret: service_account_secret\n        kafka_config:\n          brokers: brokers\n          topic: topic\n          serialization_format: json\n        fiber_debug_log_enabled: true\n        jaeger_enabled: true\n      properties:\n        log_level:\n          $ref: '#/components/schemas/LogLevel'\n        custom_metrics_enabled:\n          type: boolean\n        fiber_debug_log_enabled:\n          type: boolean\n        jaeger_enabled:\n          type: boolean\n        result_logger_type:\n          $ref: '#/components/schemas/ResultLoggerType'\n        bigquery_config:\n          $ref: '#/components/schemas/BigQueryConfig'\n        kafka_config:\n          $ref: '#/components/schemas/KafkaConfig'\n      type: object\n    EnsemblerStandardConfig_experiment_mappings:\n      example:\n        treatment: treatment-1\n        route: route-1\n        experiment: experiment-1\n      properties:\n        experiment:\n          description: experiment name from the configured experiment engine\n          example: experiment-1\n          type: string\n        treatment:\n          description: treatment name of the experiment\n          example: treatment-1\n          type: string\n        route:\n          description: route id of the routes configured in the router\n          example: route-1\n          type: string\n      required:\n      - experiment\n      - route\n      - treatment\n      type: object\n    RouterVersionConfig_log_config:\n      example:\n        bigquery_config:\n          batch_load: true\n          table: table\n          service_account_secret: service_account_secret\n        kafka_config:\n          brokers: brokers\n          topic: topic\n          serialization_format: json\n      properties:\n        result_logger_type:\n          $ref: '#/components/schemas/ResultLoggerType'\n        bigquery_config:\n          $ref: '#/components/schemas/BigQueryConfig'\n        kafka_config:\n          $ref: '#/components/schemas/KafkaConfig'\n      type: object\n    StandardExperimentEngine_allOf_standard_experiment_manager_config:\n      nullable: true\n      properties:\n        client_selection_enabled:\n          type: boolean\n        experiment_selection_enabled:\n          type: boolean\n      type: object\n    StandardExperimentEngine_allOf:\n      properties:\n        standard_experiment_manager_config:\n          $ref: '#/components/schemas/StandardExperimentEngine_allOf_standard_experiment_manager_config'\n      type: object\n    CustomExperimentEngine_allOf_custom_experiment_manager_config_remote_ui:\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n      type: object\n    CustomExperimentEngine_allOf_custom_experiment_manager_config:\n      nullable: true\n      properties:\n        remote_ui:\n          $ref: '#/components/schemas/CustomExperimentEngine_allOf_custom_experiment_manager_config_remote_ui'\n        experiment_config_schema:\n          type: string\n      type: object\n    CustomExperimentEngine_allOf:\n      properties:\n        custom_experiment_manager_config:\n          $ref: '#/components/schemas/CustomExperimentEngine_allOf_custom_experiment_manager_config'\n      type: object\n    Experiment_variants:\n      example:\n        name: control\n      properties:\n        name:\n          example: control\n          type: string\n      type: object\n  securitySchemes:\n    bearerAuth:\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/caraml-dev/turing@c9569d22307dc5b90a8737a9c2692356997b0701/-/blob/api/api/openapi.bundle.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/caraml-dev/turing/blob/c9569d22307dc5b90a8737a9c2692356997b0701/api/api/openapi.bundle.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/experiment-engines\": get: responses: code 200: contents: media: \"application/json\": generate schema: item: oneOf: discriminator: unable to map \"standard\" to \"https://raw.githubusercontent.com/caraml-dev/turing/c9569d22307dc5b90a8737a9c2692356997b0701/api/api/openapi.bundle.yaml#/components/schemas/StandardExperimentEngine\""
}