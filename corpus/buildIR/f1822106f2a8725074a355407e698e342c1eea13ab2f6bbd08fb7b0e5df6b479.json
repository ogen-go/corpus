{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-diff"
		},
		"file": {
			"name": "oneOf_diff_3.yaml",
			"size": 0,
			"path": "core/src/test/resources/oneOf_diff_3.yaml",
			"byteSize": 3683,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://petstore.swagger.io/v2'\ninfo:\n  description: \u003e-\n    This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\n  version: 1.0.0\n  title: Swagger Petstore\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: 'http://swagger.io'\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: 'http://swagger.io'\npaths:\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pets:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Pet'\n        '400':\n          description: Invalid status value\n      security:\n        - petstore_auth:\n            - 'write:pets'\n            - 'read:pets'\nexternalDocs:\n  description: Find out more about Swagger\n  url: 'http://swagger.io'\ncomponents:\n  requestBodies:\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Pet'\n      description: Pet object that needs to be added to the store\n      required: true\n  securitySchemes:\n    petstore_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'\n          scopes:\n            'write:pets': modify pets in your account\n            'read:pets': read your pets\n    api_key:\n      type: apiKey\n      name: api_key\n      in: header\n  schemas:\n    Pet:\n      type: object\n      required:\n      - pet_type\n      properties:\n        pet_type:\n          type: string\n      oneOf:\n      - $ref: '#/components/schemas/Cat'\n      - $ref: '#/components/schemas/MyDog'\n      - $ref: '#/components/schemas/Lizard'\n      discriminator:\n        propertyName: pet_type\n        mapping:\n          dog: '#/components/schemas/MyDog'\n    Cat:\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n      # all other properties specific to a `Cat`\n      type: object\n      properties:\n        name:\n          type: string\n    MyDog:\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n      # all other properties specific to a `Dog`\n      type: object\n      properties:\n        bark:\n          type: string\n    Lizard:\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n      # all other properties specific to a `Lizard`\n      type: object\n      properties:\n        lovesRocks:\n          type: boolean\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-diff@c7b68484e4c633dfe5eb2be4292c9cbad7596857/-/blob/core/src/test/resources/oneOf_diff_3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-diff/blob/c7b68484e4c633dfe5eb2be4292c9cbad7596857/core/src/test/resources/oneOf_diff_3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/pet/findByStatus\": get: responses: code 200: contents: media: \"application/json\": generate schema: field pets: item: oneOf: oneOf \"https://raw.githubusercontent.com/OpenAPITools/openapi-diff/c7b68484e4c633dfe5eb2be4292c9cbad7596857/core/src/test/resources/oneOf_diff_3.yaml#/components/schemas/Pet\" [0]: allOf \"https://raw.githubusercontent.com/OpenAPITools/openapi-diff/c7b68484e4c633dfe5eb2be4292c9cbad7596857/core/src/test/resources/oneOf_diff_3.yaml#/components/schemas/Cat\" [0]: reference \"https://raw.githubusercontent.com/OpenAPITools/openapi-diff/c7b68484e4c633dfe5eb2be4292c9cbad7596857/core/src/test/resources/oneOf_diff_3.yaml#/components/schemas/Pet\" [0] leads to infinite recursion"
}