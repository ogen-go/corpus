{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mojaloop/account-lookup-service"
		},
		"file": {
			"name": "api-swagger.yaml",
			"size": 0,
			"path": "src/interface/api-swagger.yaml",
			"byteSize": 63342,
			"content": "openapi: 3.0.1\ninfo:\n  title: Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)\n  description: Based on API Definition.docx Version 1.1 that was confirmed on 2020-05-19.\n    Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP\n    header.\n  license:\n    name: Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)\n  version: \"1.1\"\nservers:\n  - url: /\npaths:\n  /participants/{ID}/error:\n    put:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsByIDAndError\n      description: If there is an error during FSP information creation in the server,\n        the error callback PUT /participants/\u003cID\u003e/error is used. The \u003cID\u003e in the URI\n        should contain the requestId that was used for the creation of the participant\n        information.\n      operationId: ParticipantsErrorByIDPut\n      parameters:\n        - $ref: '#/components/parameters/ID'\n        - $ref: '#/components/parameters/Content-Length'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/Date'\n        - $ref: '#/components/parameters/X-Forwarded-For'\n        - $ref: '#/components/parameters/FSPIOP-Source'\n        - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n        - $ref: '#/components/parameters/FSPIOP-Encryption'\n        - $ref: '#/components/parameters/FSPIOP-Signature'\n        - $ref: '#/components/parameters/FSPIOP-URI'\n        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorInformationObject'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /participants/{ID}:\n    put:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsByID\n      description: The callback PUT /participants/\u003cID\u003e is used to inform the client\n        of the result of the creation of the provided list of identities.\n      operationId: ParticipantsByIDPut\n      parameters:\n        - $ref: '#/components/parameters/ID'\n        - $ref: '#/components/parameters/Content-Length'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/Date'\n        - $ref: '#/components/parameters/X-Forwarded-For'\n        - $ref: '#/components/parameters/FSPIOP-Source'\n        - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n        - $ref: '#/components/parameters/FSPIOP-Encryption'\n        - $ref: '#/components/parameters/FSPIOP-Signature'\n        - $ref: '#/components/parameters/FSPIOP-URI'\n        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParticipantsIDPutResponse'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /participants/{Type}/{ID}/error:\n    put:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsErrorByTypeAndID\n      description: If the server is unable to find, create or delete the associated\n        FSP of the provided identity, or another processing error occurred, the error\n        callback PUT /participants/\u003cType\u003e/\u003cID\u003e/error (or PUT /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e/error)\n        is used.\n      operationId: ParticipantsErrorByTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Type'\n        - $ref: '#/components/parameters/ID'\n        - $ref: '#/components/parameters/Content-Length'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/Date'\n        - $ref: '#/components/parameters/X-Forwarded-For'\n        - $ref: '#/components/parameters/FSPIOP-Source'\n        - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n        - $ref: '#/components/parameters/FSPIOP-Encryption'\n        - $ref: '#/components/parameters/FSPIOP-Signature'\n        - $ref: '#/components/parameters/FSPIOP-URI'\n        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorInformationObject'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /participants/{Type}/{ID}/{SubId}/error:\n    put:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsSubIdErrorByTypeAndID\n      description: If the server is unable to find, create or delete the associated\n        FSP of the provided identity, or another processing error occurred, the error\n        callback PUT /participants/\u003cType\u003e/\u003cID\u003e/error (or PUT /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e/error)\n        is used.\n      operationId: ParticipantsErrorBySubIdTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Type'\n        - $ref: '#/components/parameters/ID'\n        - $ref: '#/components/parameters/SubId'\n        - $ref: '#/components/parameters/Content-Length'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/Date'\n        - $ref: '#/components/parameters/X-Forwarded-For'\n        - $ref: '#/components/parameters/FSPIOP-Source'\n        - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n        - $ref: '#/components/parameters/FSPIOP-Encryption'\n        - $ref: '#/components/parameters/FSPIOP-Signature'\n        - $ref: '#/components/parameters/FSPIOP-URI'\n        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorInformationObject'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /participants/{Type}/{ID}/{SubId}:\n    parameters:\n      - $ref: '#/components/parameters/Type'\n      - $ref: '#/components/parameters/ID'\n      - $ref: '#/components/parameters/SubId'\n      - $ref: '#/components/parameters/Content-Type'\n      - $ref: '#/components/parameters/Date'\n      - $ref: '#/components/parameters/X-Forwarded-For'\n      - $ref: '#/components/parameters/FSPIOP-Source'\n      - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n      - $ref: '#/components/parameters/FSPIOP-Encryption'\n      - $ref: '#/components/parameters/FSPIOP-Signature'\n      - $ref: '#/components/parameters/FSPIOP-URI'\n      - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n    get:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsSubIdByTypeAndID\n      description: The HTTP request GET /participants/\u003cType\u003e/\u003cID\u003e (or GET /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to find out in which FSP the requested Party, defined by \u003cType\u003e, \u003cID\u003e\n        and optionally \u003cSubId\u003e, is located (for example, GET /participants/MSISDN/123456789,\n        or GET /participants/BUSINESS/shoecompany/employee1).\n      operationId: ParticipantsSubIdByTypeAndIDGet\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    put:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsSubIdByTypeAndID\n      description: The callback PUT /participants/\u003cType\u003e/\u003cID\u003e (or PUT /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to inform the client of a successful result of the lookup, creation,\n        or deletion of the FSP information related to the Party. If the FSP information\n        is deleted, the fspId element should be empty; otherwise the element should\n        include the FSP information for the Party.\n      operationId: ParticipantsSubIdByTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Content-Length'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParticipantsTypeIDPutResponse'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    post:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsSubIdByTypeAndID\n      description: The HTTP request POST /participants/\u003cType\u003e/\u003cID\u003e (or POST /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to create information in the server regarding the provided identity,\n        defined by \u003cType\u003e, \u003cID\u003e, and optionally \u003cSubId\u003e (for example, POST /participants/MSISDN/123456789\n        or POST /participants/BUSINESS/shoecompany/employee1).\n      operationId: ParticipantsSubIdByTypeAndIDPost\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Length'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParticipantsTypeIDSubIDPostRequest'\n        required: true\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    delete:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsSubIdByTypeAndID\n      description: The HTTP request DELETE /participants/\u003cType\u003e/\u003cID\u003e (or DELETE /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to delete information in the server regarding the provided identity,\n        defined by \u003cType\u003e and \u003cID\u003e) (for example, DELETE /participants/MSISDN/123456789),\n        and optionally \u003cSubId\u003e. This HTTP request should support a query string to\n        delete FSP information regarding a specific currency only. To delete a specific\n        currency only, the HTTP request DELETE /participants/\u003cType\u003e/\u003cID\u003e?currency=XYZ\n        should be used, where XYZ is the requested currency. Note -  The Account Lookup\n        System should verify that it is the Party’s current FSP that is deleting the\n        FSP information.\n      operationId: ParticipantsSubIdByTypeAndIDDelete\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /participants/{Type}/{ID}:\n    parameters:\n      - $ref: '#/components/parameters/Type'\n      - $ref: '#/components/parameters/ID'\n      - $ref: '#/components/parameters/Content-Type'\n      - $ref: '#/components/parameters/Date'\n      - $ref: '#/components/parameters/X-Forwarded-For'\n      - $ref: '#/components/parameters/FSPIOP-Source'\n      - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n      - $ref: '#/components/parameters/FSPIOP-Encryption'\n      - $ref: '#/components/parameters/FSPIOP-Signature'\n      - $ref: '#/components/parameters/FSPIOP-URI'\n      - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n    get:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsByTypeAndID\n      description: The HTTP request GET /participants/\u003cType\u003e/\u003cID\u003e (or GET /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to find out in which FSP the requested Party, defined by \u003cType\u003e, \u003cID\u003e\n        and optionally \u003cSubId\u003e, is located (for example, GET /participants/MSISDN/123456789,\n        or GET /participants/BUSINESS/shoecompany/employee1).\n      operationId: ParticipantsByTypeAndIDGet\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    put:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsByTypeAndID\n      description: The callback PUT /participants/\u003cType\u003e/\u003cID\u003e (or PUT /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to inform the client of a successful result of the lookup, creation,\n        or deletion of the FSP information related to the Party. If the FSP information\n        is deleted, the fspId element should be empty; otherwise the element should\n        include the FSP information for the Party.\n      operationId: ParticipantsByTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Accept-Optional'\n        - $ref: '#/components/parameters/Content-Length'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParticipantsTypeIDPutResponse'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    post:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsByIDAndType\n      description: The HTTP request POST /participants/\u003cType\u003e/\u003cID\u003e (or POST /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to create information in the server regarding the provided identity,\n        defined by \u003cType\u003e, \u003cID\u003e, and optionally \u003cSubId\u003e (for example, POST /participants/MSISDN/123456789\n        or POST /participants/BUSINESS/shoecompany/employee1).\n      operationId: ParticipantsByIDAndTypePost\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Content-Length'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParticipantsTypeIDSubIDPostRequest'\n        required: true\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    delete:\n      tags:\n        - participants\n        - sampled\n      summary: ParticipantsByTypeAndID\n      description: The HTTP request DELETE /participants/\u003cType\u003e/\u003cID\u003e (or DELETE /participants/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to delete information in the server regarding the provided identity,\n        defined by \u003cType\u003e and \u003cID\u003e) (for example, DELETE /participants/MSISDN/123456789),\n        and optionally \u003cSubId\u003e. This HTTP request should support a query string to\n        delete FSP information regarding a specific currency only. To delete a specific\n        currency only, the HTTP request DELETE /participants/\u003cType\u003e/\u003cID\u003e?currency=XYZ\n        should be used, where XYZ is the requested currency. Note -  The Account Lookup\n        System should verify that it is the Party’s current FSP that is deleting the\n        FSP information.\n      operationId: ParticipantsByTypeAndIDDelete\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /participants:\n    post:\n      tags:\n        - participants\n        - sampled\n      summary: Participants\n      description: The HTTP request POST /participants is used to create information\n        in the server regarding the provided list of identities. This request should\n        be used for bulk creation of FSP information for more than one Party. The\n        optional currency parameter should indicate that each provided Party supports\n        the currency\n      operationId: ParticipantsPost\n      parameters:\n        - $ref: '#/components/parameters/Content-Length'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/Accept'\n        - $ref: '#/components/parameters/Date'\n        - $ref: '#/components/parameters/X-Forwarded-For'\n        - $ref: '#/components/parameters/FSPIOP-Source'\n        - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n        - $ref: '#/components/parameters/FSPIOP-Encryption'\n        - $ref: '#/components/parameters/FSPIOP-Signature'\n        - $ref: '#/components/parameters/FSPIOP-URI'\n        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParticipantsPostRequest'\n        required: true\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /parties/{Type}/{ID}:\n    parameters:\n      - $ref: '#/components/parameters/Type'\n      - $ref: '#/components/parameters/ID'\n      - $ref: '#/components/parameters/Content-Type'\n      - $ref: '#/components/parameters/Date'\n      - $ref: '#/components/parameters/X-Forwarded-For'\n      - $ref: '#/components/parameters/FSPIOP-Source'\n      - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n      - $ref: '#/components/parameters/FSPIOP-Encryption'\n      - $ref: '#/components/parameters/FSPIOP-Signature'\n      - $ref: '#/components/parameters/FSPIOP-URI'\n      - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n    get:\n      tags:\n        - parties\n        - sampled\n      summary: PartiesByTypeAndID\n      description: The HTTP request GET /parties/\u003cType\u003e/\u003cID\u003e (or GET /parties/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to lookup information regarding the requested Party, defined by \u003cType\u003e,\n        \u003cID\u003e and optionally \u003cSubId\u003e (for example, GET /parties/MSISDN/123456789, or\n        GET /parties/BUSINESS/shoecompany/employee1).\n      operationId: PartiesByTypeAndIDGet\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    put:\n      tags:\n        - parties\n        - sampled\n      summary: PartiesByTypeAndID2\n      description: The callback PUT /parties/\u003cType\u003e/\u003cID\u003e (or PUT /parties/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to inform the client of a successful result of the Party information\n        lookup.\n      operationId: PartiesByTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Accept-Optional'\n        - $ref: '#/components/parameters/Content-Length'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PartiesTypeIDPutResponse'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /parties/{Type}/{ID}/error:\n    put:\n      tags:\n        - parties\n        - sampled\n      summary: PartiesErrorByTypeAndID\n      description: If the server is unable to find Party information of the provided\n        identity, or another processing error occurred, the error callback PUT /parties/\u003cType\u003e/\u003cID\u003e/error\n        (or PUT /parties/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e/error) is used.\n      operationId: PartiesErrorByTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Accept-Optional'\n        - $ref: '#/components/parameters/Type'\n        - $ref: '#/components/parameters/ID'\n        - $ref: '#/components/parameters/Content-Length'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/Date'\n        - $ref: '#/components/parameters/X-Forwarded-For'\n        - $ref: '#/components/parameters/FSPIOP-Source'\n        - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n        - $ref: '#/components/parameters/FSPIOP-Encryption'\n        - $ref: '#/components/parameters/FSPIOP-Signature'\n        - $ref: '#/components/parameters/FSPIOP-URI'\n        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorInformationObject'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /parties/{Type}/{ID}/{SubId}:\n    parameters:\n      - $ref: '#/components/parameters/Type'\n      - $ref: '#/components/parameters/ID'\n      - $ref: '#/components/parameters/SubId'\n      - $ref: '#/components/parameters/Content-Type'\n      - $ref: '#/components/parameters/Date'\n      - $ref: '#/components/parameters/X-Forwarded-For'\n      - $ref: '#/components/parameters/FSPIOP-Source'\n      - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n      - $ref: '#/components/parameters/FSPIOP-Encryption'\n      - $ref: '#/components/parameters/FSPIOP-Signature'\n      - $ref: '#/components/parameters/FSPIOP-URI'\n      - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n    get:\n      tags:\n        - parties\n        - sampled\n      summary: PartiesSubIdByTypeAndID\n      description: The HTTP request GET /parties/\u003cType\u003e/\u003cID\u003e (or GET /parties/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to lookup information regarding the requested Party, defined by \u003cType\u003e,\n        \u003cID\u003e and optionally \u003cSubId\u003e (for example, GET /parties/MSISDN/123456789, or\n        GET /parties/BUSINESS/shoecompany/employee1).\n      operationId: PartiesBySubIdTypeAndIDGet\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    put:\n      tags:\n        - parties\n        - sampled\n      summary: PartiesSubIdByTypeAndID\n      description: The callback PUT /parties/\u003cType\u003e/\u003cID\u003e (or PUT /parties/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e)\n        is used to inform the client of a successful result of the Party information\n        lookup.\n      operationId: PartiesSubIdByTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Accept-Optional'\n        - $ref: '#/components/parameters/Content-Length'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PartiesTypeIDPutResponse'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /parties/{Type}/{ID}/{SubId}/error:\n    put:\n      tags:\n        - parties\n        - sampled\n      summary: PartiesSubIdErrorByTypeAndID\n      description: If the server is unable to find Party information of the provided\n        identity, or another processing error occurred, the error callback PUT /parties/\u003cType\u003e/\u003cID\u003e/error\n        (or PUT /parties/\u003cType\u003e/\u003cID\u003e/\u003cSubId\u003e/error) is used.\n      operationId: PartiesErrorBySubIdTypeAndIDPut\n      parameters:\n        - $ref: '#/components/parameters/Accept-Optional'\n        - $ref: '#/components/parameters/Type'\n        - $ref: '#/components/parameters/ID'\n        - $ref: '#/components/parameters/SubId'\n        - $ref: '#/components/parameters/Content-Length'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: '#/components/parameters/Date'\n        - $ref: '#/components/parameters/X-Forwarded-For'\n        - $ref: '#/components/parameters/FSPIOP-Source'\n        - $ref: '#/components/parameters/FSPIOP-Destination-Optional'\n        - $ref: '#/components/parameters/FSPIOP-Encryption'\n        - $ref: '#/components/parameters/FSPIOP-Signature'\n        - $ref: '#/components/parameters/FSPIOP-URI'\n        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorInformationObject'\n        required: true\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /health:\n    get:\n      tags:\n        - health\n      summary: Get health\n      description: The HTTP request GET /health is used to return the current status\n        of the ALS API.\n      operationId: HealthGet\n      responses:\n        200:\n          $ref: '#/components/responses/ResponseHealth200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /endpointcache:\n    delete:\n      tags:\n        - cache\n        - sampled\n      summary: Endpoint Cache\n      description: The HTTP request DELETE /endpointcache is used to reset the endpoint\n        cache by performing an stopCache and initializeCache the Admin API.\n      operationId: EndpointCacheDelete\n      parameters:\n        - $ref: '#/components/parameters/Date'\n      responses:\n        202:\n          $ref: '#/components/responses/Response202'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\ncomponents:\n  schemas:\n    CorrelationId:\n      title: CorrelationId\n      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n      type: string\n      description: Identifier that correlates all messages of the same sequence. The\n        API data type UUID (Universally Unique Identifier) is a JSON String in canonical\n        format, conforming to RFC 4122, that is restricted by a regular expression\n        for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal\n        symbols and 4 dashes (‘-‘).\n    Currency:\n      title: CurrencyEnum\n      maxLength: 3\n      minLength: 3\n      type: string\n      description: The currency codes defined in ISO 4217 as three-letter alphabetic\n        codes are used as the standard naming representation for currencies.\n      enum:\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYN\n        - BZD\n        - CAD\n        - CDF\n        - CHF\n        - CLP\n        - CNY\n        - COP\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GGP\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - IMP\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JEP\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRO\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SPL\n        - SRD\n        - STD\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRY\n        - TTD\n        - TVD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XCD\n        - XDR\n        - XOF\n        - XPF\n        - XTS\n        - XXX\n        - YER\n        - ZAR\n        - ZMW\n        - ZWD\n    Date:\n      title: Date\n      pattern: ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n      type: string\n      description: The API data type Date is a JSON String in a lexical format that\n        is restricted by a regular expression for interoperability reasons. This format,\n        as specified in ISO 8601, contains a date only. A more readable version of\n        the format is yyyy-MM-dd. Examples - \"1982-05-23\", \"1987-08-05”\n    DateOfBirth:\n      title: DateofBirth (type Date)\n      pattern: ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n      type: string\n      description: Date of Birth of the Party.\n    ErrorCode:\n      title: ErrorCode\n      pattern: ^[1-9]\\d{3}$\n      type: string\n      description: The API data type ErrorCode is a JSON String of four characters,\n        consisting of digits only. Negative numbers are not allowed. A leading zero\n        is not allowed. Each error code in the API is a four-digit number, for example,\n        1234, where the first number (1 in the example) represents the high-level\n        error category, the second number (2 in the example) represents the low-level\n        error category, and the last two numbers (34 in the example) represents the\n        specific error.\n    ErrorDescription:\n      title: ErrorDescription\n      maxLength: 128\n      minLength: 1\n      type: string\n      description: Error description string.\n    ExtensionKey:\n      title: ExtensionKey\n      maxLength: 32\n      minLength: 1\n      type: string\n      description: Extension key.\n    ExtensionValue:\n      title: ExtensionValue\n      maxLength: 128\n      minLength: 1\n      type: string\n      description: Extension value.\n    FspId:\n      title: FspId\n      maxLength: 32\n      minLength: 1\n      type: string\n      description: FSP identifier.\n    HealthStatusType:\n      title: HealthStatusType\n      type: string\n      description: Below are the allowed values for the enumeration HealthStatusType\n        - OK - DOWN\n      enum:\n        - OK\n        - DOWN\n    MerchantClassificationCode:\n      title: MerchantClassificationCode\n      pattern: ^[\\d]{1,4}$\n      type: string\n      description: A limited set of pre-defined numbers. This list would be a limited\n        set of numbers identifying a set of popular merchant types like School Fees,\n        Pubs and Restaurants, Groceries, etc.\n    PartyIdType:\n      title: PartyIdTypeEnum\n      type: string\n      description: Below are the allowed values for the enumeration - MSISDN An MSISDN\n        (Mobile Station International Subscriber Directory Number, that is, the phone\n        number) is used as reference to a participant. The MSISDN identifier should\n        be in international format according to the ITU-T E.164 standard. Optionally,\n        the MSISDN may be prefixed by a single plus sign, indicating the international\n        prefix. - EMAIL An email is used as reference to a participant. The format\n        of the email should be according to the informational RFC 3696. - PERSONAL_ID\n        A personal identifier is used as reference to a participant. Examples of personal\n        identification are passport number, birth certificate number, and national\n        registration number. The identifier number is added in the PartyIdentifier\n        element. The personal identifier type is added in the PartySubIdOrType element.\n        - BUSINESS A specific Business (for example, an organization or a company)\n        is used as reference to a participant. The BUSINESS identifier can be in any\n        format. To make a transaction connected to a specific username or bill number\n        in a Business, the PartySubIdOrType element should be used. - DEVICE A specific\n        device (for example, a POS or ATM) ID connected to a specific business or\n        organization is used as reference to a Party. For referencing a specific device\n        under a specific business or organization, use the PartySubIdOrType element.\n        - ACCOUNT_ID A bank account number or FSP account ID should be used as reference\n        to a participant. The ACCOUNT_ID identifier can be in any format, as formats\n        can greatly differ depending on country and FSP. - IBAN A bank account number\n        or FSP account ID is used as reference to a participant. The IBAN identifier\n        can consist of up to 34 alphanumeric characters and should be entered without\n        whitespace. - ALIAS An alias is used as reference to a participant. The alias\n        should be created in the FSP as an alternative reference to an account owner.\n        Another example of an alias is a username in the FSP system. The ALIAS identifier\n        can be in any format. It is also possible to use the PartySubIdOrType element\n        for identifying an account under an Alias defined by the PartyIdentifier.\n      enum:\n        - MSISDN\n        - EMAIL\n        - PERSONAL_ID\n        - BUSINESS\n        - DEVICE\n        - ACCOUNT_ID\n        - IBAN\n        - ALIAS\n    ErrorInformation:\n      title: ErrorInformation\n      required:\n        - errorCode\n        - errorDescription\n      type: object\n      properties:\n        errorCode:\n          $ref: '#/components/schemas/ErrorCode'\n        errorDescription:\n          $ref: '#/components/schemas/ErrorDescription'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      description: Data model for the complex type ErrorInformation.\n    ErrorInformationObject:\n      title: ErrorInformationObject\n      required:\n        - errorInformation\n      type: object\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n      description: Data model for the complex type object that contains ErrorInformation.\n    ErrorInformationResponse:\n      title: ErrorInformationResponse\n      type: object\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n      description: Data model for the complex type object that contains an optional\n        element ErrorInformation used along with 4xx and 5xx responses.\n    Extension:\n      title: Extension\n      required:\n        - key\n        - value\n      type: object\n      properties:\n        key:\n          $ref: '#/components/schemas/ExtensionKey'\n        value:\n          $ref: '#/components/schemas/ExtensionValue'\n      description: Data model for the complex type Extension\n    ExtensionList:\n      title: ExtensionList\n      required:\n        - extension\n      type: object\n      properties:\n        extension:\n          maxItems: 16\n          minItems: 1\n          type: array\n          description: Number of Extension elements\n          items:\n            $ref: '#/components/schemas/Extension'\n      description: Data model for the complex type ExtensionList\n    FirstName:\n      title: FirstName\n      maxLength: 128\n      minLength: 1\n      pattern: '^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$'\n      type: string\n      description: First name of the Party (Name Type).\n    HealthServicesType:\n      title: HealthServicesType\n      type: object\n      properties:\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/HealthStatusType'\n      description: Data model for the complex type HealthServicesType. Contains health\n        services information.\n    LastName:\n      title: LastName\n      maxLength: 128\n      minLength: 1\n      pattern: '^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$'\n      type: string\n      description: Last name of the Party (Name Type).\n    MiddleName:\n      title: MiddleName\n      maxLength: 128\n      minLength: 1\n      pattern: '^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$'\n      type: string\n      description: Middle name of the Party (Name Type).\n    ParticipantsTypeIDSubIDPostRequest:\n      title: ParticipantsTypeIDSubIDPostRequest\n      required:\n        - fspId\n      type: object\n      properties:\n        fspId:\n          $ref: '#/components/schemas/FspId'\n        currency:\n          $ref: '#/components/schemas/Currency'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      description: POST /participants/{Type}/{ID}/{SubId}, /participants/{Type}/{ID}\n        object\n    ParticipantsTypeIDPutResponse:\n      title: ParticipantsTypeIDPutResponse\n      type: object\n      properties:\n        fspId:\n          $ref: '#/components/schemas/FspId'\n      description: PUT /participants/{Type}/{ID}/{SubId}, /participants/{Type}/{ID}\n        object\n    ParticipantsIDPutResponse:\n      title: ParticipantsIDPutResponse\n      required:\n        - partyList\n      type: object\n      properties:\n        partyList:\n          maxItems: 10000\n          minItems: 1\n          type: array\n          description: List of PartyResult elements that were either created or failed\n            to be created.\n          items:\n            $ref: '#/components/schemas/PartyResult'\n        currency:\n          $ref: '#/components/schemas/Currency'\n      description: PUT /participants/{ID} object\n    ParticipantsPostRequest:\n      title: ParticipantsPostRequest\n      required:\n        - partyList\n        - requestId\n      type: object\n      properties:\n        requestId:\n          $ref: '#/components/schemas/CorrelationId'\n        partyList:\n          maxItems: 10000\n          minItems: 1\n          type: array\n          description: List of PartyIdInfo elements that the client would like to\n            update or create FSP information about.\n          items:\n            $ref: '#/components/schemas/PartyIdInfo'\n        currency:\n          $ref: '#/components/schemas/Currency'\n      description: POST /participants object\n    Party:\n      title: Party\n      required:\n        - partyIdInfo\n      type: object\n      properties:\n        partyIdInfo:\n          $ref: '#/components/schemas/PartyIdInfo'\n        merchantClassificationCode:\n          $ref: '#/components/schemas/MerchantClassificationCode'\n        name:\n          $ref: '#/components/schemas/PartyName'\n        personalInfo:\n          $ref: '#/components/schemas/PartyPersonalInfo'\n      description: Data model for the complex type Party.\n    PartyComplexName:\n      title: PartyComplexName\n      type: object\n      properties:\n        firstName:\n          $ref: '#/components/schemas/FirstName'\n        middleName:\n          $ref: '#/components/schemas/MiddleName'\n        lastName:\n          $ref: '#/components/schemas/LastName'\n      description: Data model for the complex type PartyComplexName.\n    PartyIdInfo:\n      title: PartyIdInfo\n      required:\n        - partyIdType\n        - partyIdentifier\n      type: object\n      properties:\n        partyIdType:\n          $ref: '#/components/schemas/PartyIdType'\n        partyIdentifier:\n          $ref: '#/components/schemas/PartyIdentifier'\n        partySubIdOrType:\n          $ref: '#/components/schemas/PartySubIdOrType'\n        fspId:\n          $ref: '#/components/schemas/FspId'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      description: Data model for the complex type PartyIdInfo.\n    PartyIdentifier:\n      title: PartyIdentifier\n      maxLength: 128\n      minLength: 1\n      type: string\n      description: Identifier of the Party.\n    PartyName:\n      title: PartyName\n      maxLength: 128\n      minLength: 1\n      type: string\n      description: Name of the Party. Could be a real name or a nickname.\n    PartySubIdOrType:\n      title: PartySubIdOrType\n      maxLength: 128\n      minLength: 1\n      type: string\n      description: Either a sub-identifier of a PartyIdentifier, or a sub-type of\n        the PartyIdType, normally a PersonalIdentifierType.\n    PartiesTypeIDPutResponse:\n      title: PartiesTypeIDPutResponse\n      required:\n        - party\n      type: object\n      properties:\n        party:\n          $ref: '#/components/schemas/Party'\n      description: PUT /parties/{Type}/{ID} object\n    PartyPersonalInfo:\n      title: PartyPersonalInfo\n      type: object\n      properties:\n        complexName:\n          $ref: '#/components/schemas/PartyComplexName'\n        dateOfBirth:\n          $ref: '#/components/schemas/DateOfBirth'\n      description: Data model for the complex type PartyPersonalInfo.\n    PartyResult:\n      title: PartyResult\n      required:\n        - partyId\n      type: object\n      properties:\n        partyId:\n          $ref: '#/components/schemas/PartyIdInfo'\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n      description: Data model for the complex type PartyResult.\n    Status:\n      title: Status\n      type: object\n      properties:\n        status:\n          type: string\n          description: The return status, usually \"OK\"\n        uptime:\n          type: number\n          description: The amount of time in seconds that the server has been up for.\n        startTime:\n          type: string\n          description: The UTC time that the server started up\n        versionNumber:\n          type: string\n          description: Current version of the API\n        services:\n          type: array\n          description: An list of the statuses of services that the API requires\n          items:\n            $ref: '#/components/schemas/HealthServicesType'\n      description: Data model for the api status.\n  responses:\n    ErrorResponse400:\n      description: Bad Request - The application cannot process the request; for example,\n        due to malformed syntax or the payload exceeded size restrictions.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse401:\n      description: Unauthorized - The request requires authentication in order to\n        be processed.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse403:\n      description: Forbidden - The request was denied and will be denied in the future.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse404:\n      description: Not Found - The resource specified in the URI was not found.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse405:\n      description: Method Not Allowed - An unsupported HTTP method for the request\n        was used.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse406:\n      description: Not acceptable - The server is not capable of generating content\n        according to the Accept headers sent in the request. Used in the API to indicate\n        that the server does not support the version that the client is requesting.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse501:\n      description: Not Implemented - The server does not support the requested service.\n        The client should not retry.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse503:\n      description: Service Unavailable - The server is currently unavailable to accept\n        any new service requests. This should be a temporary state, and the client\n        should retry within a reasonable time frame.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    Response200:\n      description: OK\n      content: {}\n    Response202:\n      description: Accepted\n      content: {}\n    ResponseHealth200:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Status'\n  parameters:\n    Accept:\n      name: accept\n      in: header\n      description: The Accept header field indicates the version of the API the client\n        would like the server to use.\n      required: true\n      schema:\n        type: string\n    Accept-Optional:\n      name: accept\n      in: header\n      description: The Accept header field indicates the version of the API the client\n        would like the server to use.\n      schema:\n        type: string\n    Content-Length:\n      name: content-length\n      in: header\n      description: The Content-Length header field indicates the anticipated size\n        of the payload body. Only sent if there is a body. Note - The API supports\n        a maximum size of 5242880 bytes (5 Megabytes)\n      schema:\n        type: integer\n    Content-Type:\n      name: content-type\n      in: header\n      description: The Content-Type header indicates the specific version of the API\n        used to send the payload body.\n      required: true\n      schema:\n        type: string\n    Date:\n      name: date\n      in: header\n      description: The Date header field indicates the date when the request was sent.\n      required: true\n      schema:\n        type: string\n    X-Forwarded-For:\n      name: x-forwarded-for\n      in: header\n      description: The X-Forwarded-For header field is an unofficially accepted standard\n        used for informational purposes of the originating client IP address, as a\n        request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For\n        values as in the example shown here should be expected and supported by implementers\n        of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239.\n        However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.\n      schema:\n        type: string\n    FSPIOP-Source:\n      name: fspiop-source\n      in: header\n      description: The FSPIOP-Source header field is a non-HTTP standard field used\n        by the API for identifying the sender of the HTTP request. The field should\n        be set by the original sender of the request. Required for routing and signature\n        verification (see header field FSPIOP-Signature).\n      required: true\n      schema:\n        $ref: '#/components/schemas/FspId'\n    FSPIOP-Destination-Required:\n      name: fspiop-destination\n      in: header\n      description: The FSPIOP-Destination header field is a non-HTTP standard field\n        used by the API for HTTP header based routing of requests and responses to\n        the destination. The field should be set by the original sender of the request\n        (if known), so that any entities between the client and the server do not\n        need to parse the payload for routing purposes.\n      required: true\n      schema:\n        $ref: '#/components/schemas/FspId'\n    FSPIOP-Destination-Optional:\n      name: fspiop-destination\n      in: header\n      description: The FSPIOP-Destination header field is a non-HTTP standard field\n        used by the API for HTTP header based routing of requests and responses to\n        the destination. The field should be set by the original sender of the request\n        (if known), so that any entities between the client and the server do not\n        need to parse the payload for routing purposes.\n      schema:\n        $ref: '#/components/schemas/FspId'\n    FSPIOP-Encryption:\n      name: fspiop-encryption\n      in: header\n      description: The FSPIOP-Encryption header field is a non-HTTP standard field\n        used by the API for applying end-to-end encryption of the request.\n      schema:\n        type: string\n    FSPIOP-Signature:\n      name: fspiop-signature\n      in: header\n      description: The FSPIOP-Signature header field is a non-HTTP standard field\n        used by the API for applying an end-to-end request signature.\n      schema:\n        type: string\n    FSPIOP-URI:\n      name: fspiop-uri\n      in: header\n      description: The FSPIOP-URI header field is a non-HTTP standard field used by\n        the API for signature verification, should contain the service URI. Required\n        if signature verification is used, for more information see API Signature\n        document.\n      schema:\n        type: string\n    FSPIOP-HTTP-Method:\n      name: fspiop-http-method\n      in: header\n      description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field\n        used by the API for signature verification, should contain the service HTTP\n        method. Required if signature verification is used, for more information see\n        API Signature document.\n      schema:\n        type: string\n    ID:\n      name: ID\n      in: path\n      required: true\n      schema:\n        maxLength: 128\n        minLength: 1\n        type: string\n    Type:\n      name: Type\n      in: path\n      required: true\n      schema:\n        type: string\n        enum:\n          - MSISDN\n          - EMAIL\n          - PERSONAL_ID\n          - BUSINESS\n          - DEVICE\n          - ACCOUNT_ID\n          - IBAN\n          - ALIAS\n    SubId:\n      name: SubId\n      in: path\n      required: true\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/mojaloop/account-lookup-service@00c12d170bfad77f49b955001a750a4f3d1ea572/-/blob/src/interface/api-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mojaloop/account-lookup-service/blob/00c12d170bfad77f49b955001a750a4f3d1ea572/src/interface/api-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/parties/{Type}/{ID}\": put: requestBody: contents: media: \"application/json\": generate schema: field party: field personalInfo: field complexName: field firstName: string validator: pattern: regexp2: error parsing regexp: incomplete \\p{X} character escape in `^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,'-]{1,128}$`"
}