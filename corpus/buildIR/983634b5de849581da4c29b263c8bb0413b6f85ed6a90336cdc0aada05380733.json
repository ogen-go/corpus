{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hpi-schul-cloud/schulcloud-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/services/lesson/docs/openapi.yaml",
			"byteSize": 11469,
			"content": "security:\n  - jwtBearer: []\ninfo:\n  title: HPI Schul-Cloud Lesson Service API\n  description:\n    This is the API specification for the HPI Schul-Cloud Lesson service.\n  contact:\n    name: support\n    email: info@dbildungscloud.de\n  license:\n    name: GPL-3.0\n    url: 'https://github.com/hpi-schul-cloud/schulcloud-server/blob/master/LICENSE'\n  version: 1.0.0\ncomponents:\n  securitySchemes:\n    jwtBearer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    lessons:\n      description: datatransfer object of a lesson in the schoolcloud\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        date:\n          type: string\n          format: date-time\n        time:\n          type: string\n          format: date-time\n        contents:\n          type: array\n          items:\n            $ref: '#/components/schemas/contents'\n        materialIds:\n          type: array\n          items:\n            type: string\n            format: '^[0-9a-f]{24}$'\n        courseId:\n          type: array\n          items:\n            type: string\n            format: '^[0-9a-f]{24}$'\n        courseGroupId:\n          type: array\n          items:\n            type: string\n            format: '^[0-9a-f]{24}$'\n        teamId:\n          type: array\n          items:\n            type: string\n            format: '^[0-9a-f]{24}$'\n        hidden:\n          type: boolean\n        shareToken:\n          type: string\n        isCopyFrom:\n          type: string\n          format: '^[0-9a-f]{24}$'\n        position:\n          type: integer\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n    lessons_list:\n      description: a list of paginated lessons\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/lessons'\n        total:\n          type: integer\n        limit:\n          type: integer\n        skip:\n          type: integer\n    contents:\n      type: object\n      properties:\n        user:\n          type: string\n          format: '^[0-9a-f]{24}$'\n        component:\n          type: string\n        title:\n          type: string\n        content:\n          type: object\n        hidden:\n          type: boolean\n    materials:\n      type: object\n      properties:\n        title:\n          type: string\n        client:\n          type: string\n        url:\n          type: string\n        merlinReference:\n          type: string\n\npaths:\n  /lessons:\n    get:\n      parameters:\n        - description: ID of the course\n          in: query\n          name: courseId\n          schema:\n            type: string\n        - description: ID of the course group\n          in: query\n          name: courseGroupId\n          schema:\n            type: string\n        - description: Share Token for the course\n          in: query\n          name: shareToken\n          schema:\n            type: string\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/lessons'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lessons_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service. Required either courseId, courseGroupId or shareToken to be set.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n    post:\n      parameters: []\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lessons'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/lessons'\n  '/lessons/{_id}':\n    get:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of lessons to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lessons'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n    put:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of lessons to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lessons'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/lessons'\n    patch:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of lessons to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lessons'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/lessons'\n    delete:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of lessons to remove\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lessons'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Removes the resource with id.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n  '/lessons/{lessonId}/files':\n    get:\n      parameters:\n        - description: ID of the lesson\n          in: path\n          name: lessonId\n          schema:\n            type: string\n          required: true\n        - description: Share token of the lesson\n          in: query\n          name: shareToken\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  additionalProperties: true\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of files which are included in text-components of a given lesson.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n  /lessons/copy:\n    post:\n      parameters: []\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lessons'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                lessonId:\n                  type: string\n                  format: '^[0-9a-f]{24}$'\n                shareToken:\n                  type: string\n              required:\n                - lessonId\n  '/lessons/{lessonId}/material':\n    post:\n      parameters:\n        - in: path\n          name: lessonId\n          schema:\n            type: string\n          required: true\n          description: lessonId parameter\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/materials'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/materials'\n  '/lessons/contents/{type}':\n    get:\n      parameters:\n        - description: type parameter\n          in: path\n          name: type\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    _id:\n                      type: string\n                      format: '^[0-9a-f]{24}$'\n                    content:\n                      type: object\n                  additionalProperties: true\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieve all lesson contents of the given type.\n      summary: ''\n      tags:\n        - lessons\n      security:\n        - jwtBearer: []\n\nopenapi: 3.0.2\ntags:\n  - name: lessons\n    description: A lessons service.\n",
			"canonicalURL": "/github.com/hpi-schul-cloud/schulcloud-server@f4d14d6ad343e6b0e1d0883576140acd7f2fe14e/-/blob/src/services/lesson/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hpi-schul-cloud/schulcloud-server/blob/f4d14d6ad343e6b0e1d0883576140acd7f2fe14e/src/services/lesson/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/lessons\": get: parameters: \"filter\": field \"Contents\": nested arrays not allowed"
}