{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "aws-oidc-2019-06-10.json",
			"size": 0,
			"path": "schemas/openapi3/aws-oidc-2019-06-10.json",
			"byteSize": 27817,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"2019-06-10\",\n    \"x-release\": \"v4\",\n    \"title\": \"AWS SSO OIDC\",\n    \"description\": \"AWS Single Sign-On (SSO) OpenID Connect (OIDC) is a web service that enables a client (such as AWS CLI or a native application) to register with AWS SSO. The service also enables the client to fetch the userâ€™s access token upon successful authentication and authorization with AWS SSO. This service conforms with the OAuth 2.0 based implementation of the device authorization grant standard (https\u0026#x3A;//tools.ietf.org/html/rfc8628). For general information about AWS SSO, see What is AWS Single Sign-On? in the AWS SSO User Guide. This API reference guide describes the AWS SSO OIDC operations that you can call programatically and includes detailed information on data types and errors.  AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms such as Java, Ruby, .Net, iOS, and Android. The SDKs provide a convenient way to create programmatic access to AWS SSO and other AWS services. For more information about the AWS SDKs, including how to download and install them, see Tools for Amazon Web Services.\",\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_AWS-Single-Sign-On_64.svg\"\n    },\n    \"termsOfService\": \"https://aws.amazon.com/service-terms/\",\n    \"contact\": {\n      \"name\": \"Mike Ralphson\",\n      \"email\": \"mike.ralphson@gmail.com\",\n      \"url\": \"https://github.com/mermade/aws2openapi\",\n      \"x-twitter\": \"PermittedSoc\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/\"\n    },\n    \"x-providerName\": \"amazonaws.com\",\n    \"x-serviceName\": \"sso-oidc\",\n    \"x-origin\": [\n      {\n        \"contentType\": \"application/json\",\n        \"url\": \"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sso-oidc-2019-06-10.normal.json\",\n        \"converter\": {\n          \"url\": \"https://github.com/mermade/aws2openapi\",\n          \"version\": \"1.0.0\"\n        },\n        \"x-apisguru-driver\": \"external\"\n      }\n    ],\n    \"x-apiClientRegistration\": {\n      \"url\": \"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\"\n    },\n    \"x-apisguru-categories\": [\"cloud\"],\n    \"x-preferred\": true\n  },\n  \"externalDocs\": {\n    \"description\": \"Amazon Web Services documentation\",\n    \"url\": \"https://docs.aws.amazon.com/oidc/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://oidc.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The SSO OIDC multi-region endpoint\"\n    },\n    {\n      \"url\": \"https://oidc.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The SSO OIDC multi-region endpoint\"\n    },\n    {\n      \"url\": \"http://oidc.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The SSO OIDC endpoint for China (Beijing) and China (Ningxia)\"\n    },\n    {\n      \"url\": \"https://oidc.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The SSO OIDC endpoint for China (Beijing) and China (Ningxia)\"\n    }\n  ],\n  \"paths\": {\n    \"/token\": {\n      \"post\": {\n        \"operationId\": \"CreateToken\",\n        \"description\": \"Creates and returns an access token for the authorized client. The access token issued will be used to fetch short-term credentials for the assigned roles in the AWS account.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/CreateTokenResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"InvalidRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidClientException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidClientException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InvalidGrantException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidGrantException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"UnauthorizedClientException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedClientException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"UnsupportedGrantTypeException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnsupportedGrantTypeException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"InvalidScopeException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidScopeException\"\n                }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"AuthorizationPendingException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthorizationPendingException\"\n                }\n              }\n            }\n          },\n          \"487\": {\n            \"description\": \"SlowDownException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SlowDownException\" }\n              }\n            }\n          },\n          \"488\": {\n            \"description\": \"AccessDeniedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccessDeniedException\"\n                }\n              }\n            }\n          },\n          \"489\": {\n            \"description\": \"ExpiredTokenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExpiredTokenException\"\n                }\n              }\n            }\n          },\n          \"490\": {\n            \"description\": \"InternalServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"clientId\",\n                  \"clientSecret\",\n                  \"grantType\",\n                  \"deviceCode\"\n                ],\n                \"properties\": {\n                  \"clientId\": {\n                    \"description\": \"The unique identifier string for each client. This value should come from the persisted result of the \u003ca\u003eRegisterClient\u003c/a\u003e API.\",\n                    \"type\": \"string\"\n                  },\n                  \"clientSecret\": {\n                    \"description\": \"A secret string generated for the client. This value should come from the persisted result of the \u003ca\u003eRegisterClient\u003c/a\u003e API.\",\n                    \"type\": \"string\"\n                  },\n                  \"grantType\": {\n                    \"description\": \"Supports grant types for authorization code, refresh token, and device code request.\",\n                    \"type\": \"string\"\n                  },\n                  \"deviceCode\": {\n                    \"description\": \"Used only when calling this API for the device code grant type. This short-term code is used to identify this authentication attempt. This should come from an in-memory reference to the result of the \u003ca\u003eStartDeviceAuthorization\u003c/a\u003e API.\",\n                    \"type\": \"string\"\n                  },\n                  \"code\": {\n                    \"description\": \"The authorization code received from the authorization service. This parameter is required to perform an authorization grant request to get access to a token.\",\n                    \"type\": \"string\"\n                  },\n                  \"refreshToken\": {\n                    \"description\": \"The token used to obtain an access token in the event that the access token is invalid or expired. This token is not issued by the service.\",\n                    \"type\": \"string\"\n                  },\n                  \"scope\": {\n                    \"description\": \"The list of scopes that is defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Scope\" }\n                  },\n                  \"redirectUri\": {\n                    \"description\": \"The location of the application that will receive the authorization code. Users authorize the service to send the request to this location.\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Create Token\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/client/register\": {\n      \"post\": {\n        \"operationId\": \"RegisterClient\",\n        \"description\": \"Registers a client with AWS SSO. This allows clients to initiate device authorization. The output should be persisted for reuse through many authentication requests.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegisterClientResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"InvalidRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidScopeException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidScopeException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InvalidClientMetadataException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidClientMetadataException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"clientName\", \"clientType\"],\n                \"properties\": {\n                  \"clientName\": {\n                    \"description\": \"The friendly name of the client.\",\n                    \"type\": \"string\"\n                  },\n                  \"clientType\": {\n                    \"description\": \"The type of client. The service supports only \u003ccode\u003epublic\u003c/code\u003e as a client type. Anything other than public will be rejected by the service.\",\n                    \"type\": \"string\"\n                  },\n                  \"scopes\": {\n                    \"description\": \"The list of scopes that are defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Scope\" }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Register Client\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/device_authorization\": {\n      \"post\": {\n        \"operationId\": \"StartDeviceAuthorization\",\n        \"description\": \"Initiates device authorization by requesting a pair of verification codes from the authorization service.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StartDeviceAuthorizationResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"InvalidRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidClientException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidClientException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedClientException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedClientException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"SlowDownException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/SlowDownException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"InternalServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"clientId\", \"clientSecret\", \"startUrl\"],\n                \"properties\": {\n                  \"clientId\": {\n                    \"description\": \"The unique identifier string for the client that is registered with AWS SSO. This value should come from the persisted result of the \u003ca\u003eRegisterClient\u003c/a\u003e API operation.\",\n                    \"type\": \"string\"\n                  },\n                  \"clientSecret\": {\n                    \"description\": \"A secret string that is generated for the client. This value should come from the persisted result of the \u003ca\u003eRegisterClient\u003c/a\u003e API operation.\",\n                    \"type\": \"string\"\n                  },\n                  \"startUrl\": {\n                    \"description\": \"The URL for the AWS SSO user portal. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/singlesignon/latest/userguide/using-the-portal.html\\\"\u003eUsing the User Portal\u003c/a\u003e in the \u003ci\u003eAWS Single Sign-On User Guide\u003c/i\u003e.\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Start Device Authorization\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"X-Amz-Content-Sha256\": {\n        \"name\": \"X-Amz-Content-Sha256\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Date\": {\n        \"name\": \"X-Amz-Date\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Algorithm\": {\n        \"name\": \"X-Amz-Algorithm\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Credential\": {\n        \"name\": \"X-Amz-Credential\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Security-Token\": {\n        \"name\": \"X-Amz-Security-Token\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Signature\": {\n        \"name\": \"X-Amz-Signature\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-SignedHeaders\": {\n        \"name\": \"X-Amz-SignedHeaders\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"hmac\": {\n        \"type\": \"apiKey\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"Amazon Signature authorization v4\",\n        \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n      }\n    },\n    \"schemas\": {\n      \"CreateTokenResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AccessToken\" },\n              {\n                \"description\": \"An opaque token to access AWS SSO resources assigned to a user.\"\n              }\n            ]\n          },\n          \"tokenType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TokenType\" },\n              {\n                \"description\": \"Used to notify the client that the returned token is an access token. The supported type is \u003ccode\u003eBearerToken\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"expiresIn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ExpirationInSeconds\" },\n              {\n                \"description\": \"Indicates the time in seconds when an access token will expire.\"\n              }\n            ]\n          },\n          \"refreshToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RefreshToken\" },\n              {\n                \"description\": \"A token that, if present, can be used to refresh a previously issued access token that might have expired.\"\n              }\n            ]\n          },\n          \"idToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IdToken\" },\n              {\n                \"description\": \"The identifier of the user that associated with the access token, if present.\"\n              }\n            ]\n          }\n        }\n      },\n      \"Scope\": { \"type\": \"string\" },\n      \"InvalidRequestException\": {},\n      \"InvalidClientException\": {},\n      \"InvalidGrantException\": {},\n      \"UnauthorizedClientException\": {},\n      \"UnsupportedGrantTypeException\": {},\n      \"InvalidScopeException\": {},\n      \"AuthorizationPendingException\": {},\n      \"SlowDownException\": {},\n      \"AccessDeniedException\": {},\n      \"ExpiredTokenException\": {},\n      \"InternalServerException\": {},\n      \"RegisterClientResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"clientId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ClientId\" },\n              {\n                \"description\": \"The unique identifier string for each client. This client uses this identifier to get authenticated by the service in subsequent calls.\"\n              }\n            ]\n          },\n          \"clientSecret\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ClientSecret\" },\n              {\n                \"description\": \"A secret string generated for the client. The client will use this string to get authenticated by the service in subsequent calls.\"\n              }\n            ]\n          },\n          \"clientIdIssuedAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LongTimeStampType\" },\n              {\n                \"description\": \"Indicates the time at which the \u003ccode\u003eclientId\u003c/code\u003e and \u003ccode\u003eclientSecret\u003c/code\u003e were issued.\"\n              }\n            ]\n          },\n          \"clientSecretExpiresAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LongTimeStampType\" },\n              {\n                \"description\": \"Indicates the time at which the \u003ccode\u003eclientId\u003c/code\u003e and \u003ccode\u003eclientSecret\u003c/code\u003e will become invalid.\"\n              }\n            ]\n          },\n          \"authorizationEndpoint\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/URI\" },\n              {\n                \"description\": \"The endpoint where the client can request authorization.\"\n              }\n            ]\n          },\n          \"tokenEndpoint\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/URI\" },\n              {\n                \"description\": \"The endpoint where the client can get an access token.\"\n              }\n            ]\n          }\n        }\n      },\n      \"InvalidClientMetadataException\": {},\n      \"StartDeviceAuthorizationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"deviceCode\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DeviceCode\" },\n              {\n                \"description\": \"The short-lived code that is used by the device when polling for a session token.\"\n              }\n            ]\n          },\n          \"userCode\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UserCode\" },\n              {\n                \"description\": \"A one-time user verification code. This is needed to authorize an in-use device.\"\n              }\n            ]\n          },\n          \"verificationUri\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/URI\" },\n              {\n                \"description\": \"The URI of the verification page that takes the \u003ccode\u003euserCode\u003c/code\u003e to authorize the device.\"\n              }\n            ]\n          },\n          \"verificationUriComplete\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/URI\" },\n              {\n                \"description\": \"An alternate URL that the client can use to automatically launch a browser. This process skips the manual step in which the user visits the verification page and enters their code.\"\n              }\n            ]\n          },\n          \"expiresIn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ExpirationInSeconds\" },\n              {\n                \"description\": \"Indicates the number of seconds in which the verification code will become invalid.\"\n              }\n            ]\n          },\n          \"interval\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntervalInSeconds\" },\n              {\n                \"description\": \"Indicates the number of seconds the client must wait between attempts when polling for a session.\"\n              }\n            ]\n          }\n        }\n      },\n      \"AccessToken\": { \"type\": \"string\" },\n      \"ClientId\": { \"type\": \"string\" },\n      \"ClientSecret\": { \"type\": \"string\" },\n      \"DeviceCode\": { \"type\": \"string\" },\n      \"RefreshToken\": { \"type\": \"string\" },\n      \"URI\": { \"type\": \"string\" },\n      \"TokenType\": { \"type\": \"string\" },\n      \"ExpirationInSeconds\": { \"type\": \"integer\" },\n      \"IdToken\": { \"type\": \"string\" },\n      \"IntervalInSeconds\": { \"type\": \"integer\" },\n      \"LongTimeStampType\": { \"type\": \"integer\" },\n      \"UserCode\": { \"type\": \"string\" }\n    }\n  },\n  \"security\": [{ \"hmac\": [] }],\n  \"x-metadata\": {\n    \"apiVersion\": \"2019-06-10\",\n    \"endpointPrefix\": \"oidc\",\n    \"jsonVersion\": \"1.1\",\n    \"protocol\": \"rest-json\",\n    \"serviceAbbreviation\": \"SSO OIDC\",\n    \"serviceFullName\": \"AWS SSO OIDC\",\n    \"serviceId\": \"SSO OIDC\",\n    \"signatureVersion\": \"v4\",\n    \"signingName\": \"awsssooidc\",\n    \"uid\": \"sso-oidc-2019-06-10\",\n    \"targetPrefix\": \"AWSSSOOIDCService\"\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/aws-oidc-2019-06-10.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/aws-oidc-2019-06-10.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/client/register\": post: responses: code 200: contents: media: \"application/json\": generate schema: field clientId: allOf: schema type mismatch: string and "
}