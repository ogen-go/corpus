{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/prisma.pan.dev"
		},
		"file": {
			"name": "UserProfile.yaml",
			"size": 0,
			"path": "static/oas/cspm/UserProfile.yaml",
			"byteSize": 20024,
			"content": "components:\n  requestBodies:\n    MultiRoleUserProfile:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MultiRoleUserProfile'\n      description: Model containing user profile\n      required: true\n  securitySchemes:\n    x-redlock-auth:\n      description: The x-redlock-auth value is a JSON Web Token (JWT).\n      in: header\n      name: x-redlock-auth\n      type: apiKey\n  schemas:\n    CreateUserAccessKeyResponseModel:\n      description: Model for create user access key response\n      properties:\n        id:\n          description: Access key ID\n          type: string\n        secretKey:\n          description: Access key secret\n          type: string\n      type: object\n    MultiRoleUserProfile:\n      description: Model containing user profile\n      properties:\n        accessKeysAllowed:\n          description: Access keys allowed\n          type: boolean\n        activeRole:\n          allOf:\n          - $ref: '#/components/schemas/UserProfileRoleDetailModel'\n          - description: Active Role Info\n            readOnly: true\n        defaultRoleId:\n          description: Default Role ID\n          type: string\n        displayName:\n          description: Display name\n          readOnly: true\n          type: string\n        email:\n          description: Email ID\n          type: string\n        enabled:\n          description: Enabled\n          readOnly: true\n          type: boolean\n        firstName:\n          description: First name. Maximum length is 300 characters.\n          type: string\n        lastLoginTs:\n          description: Last login time\n          format: int64\n          readOnly: true\n          type: integer\n        lastModifiedBy:\n          description: Last modified by\n          readOnly: true\n          type: string\n        lastModifiedTs:\n          description: Time profile was last updated\n          format: int64\n          readOnly: true\n          type: integer\n        lastName:\n          description: Last name.  Maximum length is 300 characters.\n          type: string\n        roleIds:\n          description: Role IDs\n          items:\n            type: string\n          type: array\n        roles:\n          description: All Role Info\n          items:\n            $ref: '#/components/schemas/UserProfileRoleDetailModel'\n          readOnly: true\n          type: array\n        timeZone:\n          description: Time zone (e.g. America/Los_Angeles)\n          type: string\n      required:\n      - defaultRoleId\n      - email\n      - firstName\n      - lastName\n      - roleIds\n      - timeZone\n      type: object\n    UserAccountModel:\n      description: Model for User Account\n      properties:\n        accessKeyExpiration:\n          description: Access key expiration timestamp in milliseconds\n          format: int64\n          type: integer\n        accessKeyName:\n          description: Access key name\n          type: string\n        accessKeysAllowed:\n          description: Access keys allowed\n          type: boolean\n        accessKeysCount:\n          description: Access key count\n          format: int32\n          readOnly: true\n          type: integer\n        activeRole:\n          allOf:\n          - $ref: '#/components/schemas/UserProfileRoleDetailModel'\n          - description: Active Role Info\n            readOnly: true\n        defaultRoleId:\n          description: Default Role ID\n          type: string\n        displayName:\n          description: Display name\n          readOnly: true\n          type: string\n        email:\n          description: Email ID\n          type: string\n        enableKeyExpiration:\n          description: true = Enable access key expiration. Default is false.\n          type: boolean\n        enabled:\n          description: Enabled\n          readOnly: true\n          type: boolean\n        firstName:\n          description: First name. Maximum length is 300 characters.\n          type: string\n        lastLoginTs:\n          description: Last login time\n          format: int64\n          readOnly: true\n          type: integer\n        lastModifiedBy:\n          description: Last modified by\n          readOnly: true\n          type: string\n        lastModifiedTs:\n          description: Time profile was last updated\n          format: int64\n          readOnly: true\n          type: integer\n        lastName:\n          description: Last name.  Maximum length is 300 characters.\n          type: string\n        roleIds:\n          description: Role IDs\n          items:\n            type: string\n          type: array\n        roles:\n          description: All Role Info\n          items:\n            $ref: '#/components/schemas/UserProfileRoleDetailModel'\n          readOnly: true\n          type: array\n        timeZone:\n          description: Time zone (e.g. America/Los_Angeles)\n          type: string\n        type:\n          description: User type. Default is USER_ACCOUNT.\n          enum:\n          - USER_ACCOUNT\n          - SERVICE_ACCOUNT\n          type: string\n        username:\n          description: User or service account name. Maximum length is 300 characters.\n          type: string\n      type: object\n    UserProfileModel:\n      description: Model containing user profile\n      properties:\n        accessKeysAllowed:\n          description: Access keys allowed\n          type: boolean\n        displayName:\n          description: Display name\n          readOnly: true\n          type: string\n        email:\n          description: Email ID\n          type: string\n        enabled:\n          description: Enabled\n          readOnly: true\n          type: boolean\n        firstName:\n          description: First name. Maximum length is 300 characters.\n          type: string\n        lastLoginTs:\n          description: Last login time\n          format: int64\n          readOnly: true\n          type: integer\n        lastModifiedBy:\n          description: Last modified by\n          readOnly: true\n          type: string\n        lastModifiedTs:\n          description: Time profile was last updated\n          format: int64\n          readOnly: true\n          type: integer\n        lastName:\n          description: Last name.  Maximum length is 300 characters.\n          type: string\n        role:\n          additionalProperties:\n            type: string\n          description: Role\n          readOnly: true\n          type: object\n        roleId:\n          description: Role ID\n          type: string\n        roleType:\n          description: Role type\n          readOnly: true\n          type: string\n        timeZone:\n          description: Time zone (e.g. America/Los_Angeles)\n          type: string\n      required:\n      - email\n      - firstName\n      - lastName\n      - roleId\n      - timeZone\n      type: object\n    UserProfileRoleDetailModel:\n      description: Model for User Profile Role Detail\n      properties:\n        id:\n          description: User Role ID\n          readOnly: true\n          type: string\n        name:\n          description: User Role Name\n          readOnly: true\n          type: string\n        onlyAllowCIAccess:\n          description: true = Allow only CI Access for Build and Deploy security roles\n          readOnly: true\n          type: boolean\n        onlyAllowComputeAccess:\n          description: true = Allow only Compute Access for reduced system admin roles\n          readOnly: true\n          type: boolean\n        onlyAllowReadAccess:\n          description: true = Allow only Read Access for\n          readOnly: true\n          type: boolean\n        type:\n          description: User Role Type\n          readOnly: true\n          type: string\n      type: object\ninfo:\n  contact: {}\n  description: 'Manage your Prisma Cloud user profiles.\n\n    '\n  title: Prisma Cloud User Profile API Overview\n  version: Latest\nopenapi: 3.0.0\npaths:\n  /user/me:\n    get:\n      description: Returns the current user's personal profile information.\n      operationId: get-my-profile\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiRoleUserProfile'\n          description: successful operation\n        '400':\n          description: user_inactive_or_not_exist\n        '500':\n          description: failed_fetch_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: Profile\n      tags:\n      - User Profile\n    put:\n      description: \"Updates the current user's personal profile information.  \\r\\n\\\n        \\r\\nThis request supports four optional request body parameters, which you\\\n        \\ can see in the JSON example below:\\n```\\n{\\n  \\\"defaultRoleId\\\": \\\"\\\",\\n\\\n        \\  \\\"firstName\\\": \\\"\\\",\\n  \\\"lastName\\\": \\\"\\\",\\n  \\\"timeZone\\\": \\\"\\\",  \\n\\\n        }\\n```\\n\\nThe red **required** labels in the request body schema below apply\\\n        \\ only when you create a new user profile, so the labels don't apply to this\\\n        \\ request.\\n\"\n      operationId: update-my-profile\n      requestBody:\n        $ref: '#/components/requestBodies/MultiRoleUserProfile'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: empty_user_profile_provided / missing_first_name / missing_time_zone\n            / invalid_time_zone / user_inactive_or_not_exist / default_role_not_belonging_to_user_role_list\n            / invalid_user_role\n        '403':\n          description: cannot_disable_own_profile / access_keys_cannot_update_owner_profile\n        '500':\n          description: failed_update_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: Update Profile\n      tags:\n      - User Profile\n  /v3/user:\n    get:\n      description: Lists all users and service accounts for your tenant.\n      operationId: get-user-profiles-v3\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserAccountModel'\n                type: array\n          description: successful operation\n        '500':\n          description: failed_fetch_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: List Users V3\n      tags:\n      - User Profile\n    post:\n      description: \"Adds either a user profile or a service account profile.  \\r\\n\\\n        \\r\\nThe required request body parameters differ, depending on whether you\\\n        \\ are adding a user account or a service account. Specify whether \\nyou're\\\n        \\ adding a user account or service account through the request parameter **type**.\\n\\\n        \\nThe required parameters to add a user account are:\\n\\n* **email**\\n* **firstName**\\n\\\n        * **lastName**\\n* **roleIds**\\n* **defaultRoleId**\\n* **timeZone**\\n\\nThe\\\n        \\ required parameters to add a service account are:\\n\\n* **username**\\n* **accessKeyName**\\n\\\n        * **accessKeyExpiration** (Required only if **enableKeyExpiration** is **true**)\\n\\\n        * **defaultRoleId**\\n* **timeZone**\\n\"\n      operationId: add-user-v3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAccountModel'\n        description: Model for User Account\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUserAccessKeyResponseModel'\n          description: successful operation\n        '400':\n          description: empty_user_profile_provided / missing_email / wrong_email_format\n            / missing_first_name / missing_time_zoneinvalid_time_zone /  missing_required_parameter\n            / no_role_assigned_to_user / exceeding_role_limit_number / default_role_not_belonging_to_user_role_list\n            / invalid_user_role\n        '409':\n          description: duplicate_user_name\n        '500':\n          description: failed_add_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: Add User Profile V3\n      tags:\n      - User Profile\n  /v2/user:\n    get:\n      description: Returns a list of all the users belonging to the same tenant. Response\n        includes multiple roles assigned to each user.\n      operationId: get-user-profiles-v2\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserProfileModel'\n                type: array\n          description: successful operation\n        '500':\n          description: failed_fetch_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: List Users V2\n      tags:\n      - User Profile\n    post:\n      description: Adds a new administrative user. Supports multiple roles for a single\n        user.\n      operationId: add-user-v2\n      requestBody:\n        $ref: '#/components/requestBodies/MultiRoleUserProfile'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: empty_user_profile_provided / missing_email / wrong_email_format\n            / missing_first_name / missing_time_zoneinvalid_time_zone /  missing_required_parameter\n            / no_role_assigned_to_user / exceeding_role_limit_number / default_role_not_belonging_to_user_role_list\n            / invalid_user_role\n        '409':\n          description: duplicate_user_name\n        '500':\n          description: failed_add_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: Add User Profile V2\n      tags:\n      - User Profile\n  /v2/user/{id}:\n    get:\n      description: Returns the user profile for the specified email ID. Supports multiple\n        roles for a single user.\n      operationId: get-user-profile-v2\n      parameters:\n      - description: User email\n        in: path\n        name: id\n        required: true\n        schema:\n          pattern: .+\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfileModel'\n          description: successful operation\n        '400':\n          description: user_inactive_or_not_exist\n        '500':\n          description: failed_fetch_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: Get User Profile V2\n      tags:\n      - User Profile\n    put:\n      description: \"Updates an administrative user's profile. Supports multiple roles\\\n        \\ for a single user.  \\r\\n\\r\\nThe current **email** of the user whose profile\\\n        \\ you want to update is a required request parameter. All other request parameters\\\n        \\ are optional. The red **required** labels in the request body schema below\\\n        \\ apply only when you create a new user profile.\\n\"\n      operationId: update-profile-v2\n      parameters:\n      - description: User email\n        in: path\n        name: id\n        required: true\n        schema:\n          pattern: .+\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MultiRoleUserProfile'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: empty_user_profile_provided / missing_first_name / missing_time_zone\n            / invalid_time_zone / user_inactive_or_not_exist / exceeding_role_limit_number\n            / default_role_not_belonging_to_user_role_list / invalid_user_role / invalid_user_role\n        '403':\n          description: cannot_remove_current_log_in_role\n        '500':\n          description: failed_update_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: Update User Profile V2\n      tags:\n      - User Profile\n  /user/{id}:\n    delete:\n      description: Deletes a user or service account profile.\n      operationId: delete-user\n      parameters:\n      - description: User email or service account name\n        in: path\n        name: id\n        required: true\n        schema:\n          pattern: .+\n          type: string\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: user_inactive_or_not_exist\n        '403':\n          description: cannot_delete_own_profile\n        '500':\n          description: internal_error\n      security:\n      - x-redlock-auth: []\n      summary: Delete User Profile\n      tags:\n      - User Profile\n  /user/{id}/status/{enabled}:\n    patch:\n      description: Enables or disables a user profile.\n      operationId: update-user-profile\n      parameters:\n      - description: User email\n        in: path\n        name: id\n        required: true\n        schema:\n          pattern: .+\n          type: string\n      - description: Status to set\n        in: path\n        name: enabled\n        required: true\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: successful operation\n      security:\n      - x-redlock-auth: []\n      summary: Update User Status\n      tags:\n      - User Profile\n  /user/name:\n    get:\n      description: Returns a list of emails for all non-deleted users in the system.\n      operationId: get-usernames\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n          description: successful operation\n        '500':\n          description: failed_fetch_users_emails\n      security:\n      - x-redlock-auth: []\n      summary: List User Emails\n      tags:\n      - User Profile\n  /user/domain:\n    get:\n      description: Returns a list of domains in allow list.\n      operationId: email-domains\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        '400':\n          description: no_user_added\n        '500':\n          description: failed_fetch_email_domain_allow_list\n      security:\n      - x-redlock-auth: []\n      summary: List Email Domains\n      tags:\n      - User Profile\n  /user/saml/bypass:\n    get:\n      description: \"Returns a list of users who can log in via both SAML provider\\\n        \\ and username/password flows.  \\r\\n\\r\\nThe request body is an array of emails\\\n        \\ to be bypassed.\\n```\\n   [ \\\"jon.snow@example.com\\\", \\\"daenerys@example.com\\\"\\\n        \\ ]\\n```\\n\"\n      operationId: get-sso-bypass-allowed-users\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n                uniqueItems: true\n          description: successful operation\n        '500':\n          description: failed_fetch_sso_bypass_allowed_users\n      security:\n      - x-redlock-auth: []\n      summary: List SSO Bypass Allowed Users\n      tags:\n      - User Profile\n    put:\n      description: Given a list of Prisma Cloud user emails, enables each user in\n        the list to log into Prisma Cloud through either a SAML provider or direct\n        user name and password entry.\n      operationId: update-sso-bypass-allowed-users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                type: string\n              type: array\n        description: SSO Bypass allowed users\n        required: true\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: missing_sso_bypass_allowed_users\n        '500':\n          description: failed_update_sso_bypass_allowed_users\n      security:\n      - x-redlock-auth: []\n      summary: Update SSO Bypass Allowed Users\n      tags:\n      - User Profile\nservers:\n- url: https://api.prismacloud.io\ntags:\n- description: The User Profile endpoints are listed below.\n  name: User Profile\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/prisma.pan.dev@b738b3f9404554218e437ccabc9187b4ff7ec563/-/blob/static/oas/cspm/UserProfile.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/prisma.pan.dev/blob/b738b3f9404554218e437ccabc9187b4ff7ec563/static/oas/cspm/UserProfile.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v3/user\": get: responses: 200: contents: application/json: generate schema: item: field activeRole: allOf: schema type mismatch: object and "
}