{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/blackboard/blackboard.github.io"
		},
		"file": {
			"name": "collab.yml",
			"size": 0,
			"path": "_data/swagger/collab.yml",
			"byteSize": 109352,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: Collaborate Api\n  description: \"The Collaborate Services API is a RESTful API that supports CRUD and\n    processing operations required for managing entities related to the HTML sessions\n    scheduling.\\n\\n# API versioning\\n\\nThe API is versioned via URL before a resource;\n    \\ e.g. /v1/sessions.\\n\\nNew releases of the API that are backwards compatible\n    do not result in version increment. Examples of a backwards compatible change:\\n-\n    Adding new resource with previously unavailable identifiers.\\n- Adding new methods\n    for existing resource identifiers.\\n- Changing resource identifiers and using\n    endpoint redirection to direct legacy consumers.\\n\\n# Errors\\n\\nIf something fails\n    the CSA responds with an appropriate HTTP response code and error JSON entity.\\n\\n<table\n    \\ border=\\\"1\\\" >  <tbody>    <tr><td width=\\\"20%\\\" style=\\\"padding-left: 4px\\\"><strong>Error\n    code</strong></td><td width=\\\"20%\\\" style=\\\"padding-left: 4px\\\"><strong>Error\n    key</strong></td><td width=\\\"60%\\\" style=\\\"padding-left: 4px\\\"><strong>Description</strong></td></tr>\n    \\   <tr><td style=\\\"padding-left: 4px\\\">400</td><td style=\\\"padding-left: 4px\\\">invalid_json</td><td\n    style=\\\"padding-left: 4px\\\">The json was invalid.</td></tr>    <tr><td style=\\\"padding-left:\n    4px\\\">400</td><td style=\\\"padding-left: 4px\\\">bad_request</td><td style=\\\"padding-left:\n    4px\\\">The request was invalid.</td></tr>    <tr><td style=\\\"padding-left: 4px\\\">401</td><td\n    style=\\\"padding-left: 4px\\\">unauthorized</td><td style=\\\"padding-left: 4px\\\">Authentication\n    credential was missing or incorrect.</td></tr>    <tr><td style=\\\"padding-left:\n    4px\\\">403</td><td style=\\\"padding-left: 4px\\\">forbidden</td><td style=\\\"padding-left:\n    4px\\\">You don't have permission to access this resource.</td></tr>    <tr><td\n    style=\\\"padding-left: 4px\\\">404</td><td style=\\\"padding-left: 4px\\\">resource_not_found</td><td\n    style=\\\"padding-left: 4px\\\">You don't have read access to this resource or the\n    resource does not exist.</td></tr>    <tr><td style=\\\"padding-left: 4px\\\">405</td><td\n    style=\\\"padding-left: 4px\\\">method_not_allowed</td><td style=\\\"padding-left: 4px\\\">The\n    request is not valid.</td></tr>    <tr><td style=\\\"padding-left: 4px\\\">409</td><td\n    style=\\\"padding-left: 4px\\\">already_exist</td><td style=\\\"padding-left: 4px\\\">The\n    specified object already exists.</td></tr>    <tr><td style=\\\"padding-left: 4px\\\">422</td><td\n    style=\\\"padding-left: 4px\\\">unprocessable_entity</td><td style=\\\"padding-left:\n    4px\\\">The request was syntactically correct, but the payload couldn't be processed.</td></tr>\n    \\   <tr><td style=\\\"padding-left: 4px\\\">500</td><td style=\\\"padding-left: 4px\\\">internal_error</td><td\n    style=\\\"padding-left: 4px\\\">Something seems to be broken on our side. Can you\n    please contact Technical Support.</td></tr>  </tbody></table>\\n\\n\\nExample : \\n\\n\n    \\   {\\n      \\\"errorKey\\\": \\\"internal_error\\\",\\n      \\\"errorMessage\\\": \\\"Something\n    seems to be broken on our side. Can you please contact Technical Support.\\\"\\n\n    \\   }\"\n  version: '1.0'\npaths:\n  \"/asr/{recordingUid}\":\n    put:\n      operationId: updateStatus_1\n      parameters:\n      - name: recordingUid\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: status\n        in: query\n        required: true\n        schema:\n          type: string\n          enum:\n          - NONE\n          - REQUESTED\n          - FINISHED_OK\n          - FINISHED_ERROR\n          - ERROR_ACKNOWLEDGED\n      - name: responseStatus\n        in: query\n        schema:\n          type: string\n      - name: errorReason\n        in: query\n        schema:\n          type: string\n      - name: errorDesc\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: run_1\n      parameters:\n      - name: recordingUid\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: language\n        in: query\n        schema:\n          type: string\n          default: eng\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/asr\":\n    get:\n      operationId: getList_1\n      parameters:\n      - name: status\n        in: query\n        schema:\n          type: string\n          default: requested\n          enum:\n          - NONE\n          - REQUESTED\n          - FINISHED_OK\n          - FINISHED_ERROR\n          - ERROR_ACKNOWLEDGED\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 10\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/assets/{ticket}\":\n    get:\n      operationId: getAsset_1\n      parameters:\n      - name: ticket\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            \"*/*\": {}\n  \"/assets/guest/{ticket}\":\n    get:\n      operationId: getGuestAsset_1\n      parameters:\n      - name: ticket\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/assets/invite/{ticket}\":\n    get:\n      operationId: getInviteAsset_1\n      parameters:\n      - name: ticket\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/assets/{ticket}/url\":\n    get:\n      operationId: verifyAsset_1\n      parameters:\n      - name: ticket\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/assets/recording/{ticket}\":\n    get:\n      operationId: getRecordingPermanentUrl_1\n      parameters:\n      - name: ticket\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/assets/launch/recording/{uid}\":\n    get:\n      operationId: launchFromRecordingEmail_1\n      parameters:\n      - name: uid\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/attendance/instances/{instanceId}\":\n    get:\n      operationId: getSessionInstance_2\n      parameters:\n      - name: instanceId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: expand\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - attendees\n            - attendeesCount\n            - poll\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/attendance/instances/{instanceId}/attendees\":\n    get:\n      operationId: getSessionInstanceAttendanceCsv\n      parameters:\n      - name: instanceId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: timeZone\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: userId\n        in: query\n        schema:\n          type: string\n      - name: extUserId\n        in: query\n        schema:\n          type: string\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            text/csv; qs=0.7: {}\n  \"/attendance/instances\":\n    get:\n      operationId: getSessionInstances_2\n      parameters:\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: startTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: endTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: expand\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - attendees\n            - attendeesCount\n            - poll\n      - name: running\n        in: query\n        schema:\n          type: boolean\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: loginGroupId\n        in: query\n        schema:\n          type: string\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/token\":\n    post:\n      tags:\n      - oauth\n      summary: Request Token.\n      description: |-\n        <p>Authenticates with the CSA service using the OAuth credentials. The response contains an OAuth 2 access token, that shall be used for further CSA REST API calls.</p><p>In order to authenticate, you need to create a JWT token (<a href=\"https://tools.ietf.org/html/rfc7519\">RFC-7519</a>). Please see the following sections for details.</p><h3>JWT Payload</h3><p>The JWT payload has the following structure:</p><pre>{\n          \"iss\": \"client_key\",\n          \"exp\": 1516239022,\n          \"integration\": {\n             \"siteId\": \"123e4567-e89b-12d3-a456-426655440000\",\n             \"action\": \"VERIFY\",\n             \"force\": false,\n             \"lmsRegion\": \"us-east-1\"\n          }\n        }\n        </pre></br><p><strong><tt>iss</tt>:</strong> The issuer must be the OAuth client_id</p><p><strong><tt>exp</tt>:</strong> The validity is an optional field. If present, the response token's expiration time will be set to this value. The time is expressed as the number of seconds from 1970-01-01T0:0:0Z measured in UTC.   The server default is used if the value is not present in the payload.</p><p><strong><tt>integration</tt>:</strong> The integration object is optional (unless the siteId has been registered, see details below). It carries additional information about the service (LMS) integrating the collaborate.   Beware that opting out the integration data from the JWT payload will prevent some Collaborate features, such as LMS attendance reporting, from being available.</p><div style=\"padding-left: 2em;\"><p><strong><tt>siteId</tt>:</strong> a UUID assigned to the LMS. On REGISTER action (see below), the passed siteId is associated with the given OAuth consumer account. Once the site ID is assigned, the JWT payload <i>must always</i>   contain the siteId in the payload, and the site ID must match the one registered. In case of a siteId mismatch, the API will return <tt>403 FORBIDDEN</tt> with <tt>\"error_key\": \"site_id_mismatch\"</tt>.</p><p><strong><tt>action</tt>:</strong> is one of <tt>[VERIFY,REGISTER,CLEAR]</tt>.  <ul>    <li><i>VERIFY</i> - <i>default</i>. Simply verifies, that the site ID in the JWT payload and the one registered in the Collaborate match. The verification also passes if the site ID is missing (empty) in both JWT and Collaborate.</li>    <li><i>REGISTER</i> - used to register the passed <tt>siteId</tt> and <tt>lmsRegion</tt> values with the Collaborate. The registration passes in case the Site ID is not yet stored in Collaborate, or if the passed site ID and the one stored match.                          An existing siteID for the given account may be overwritten by passing <tt>force</tt> flag set to <tt>true</tt>. Change of a site ID should however never happen for any production LMS, and it may only be required                          if the OAuth Consumer credentials are shared. Sharing the credentials is <i>highly</i> discouraged, as it may break features that need to report back to the LMS based on the site ID stored. The implementors of the API                          should make sure that the site ID overwrite is properly explained to end users, and avoided unless absolutely required.</li>    <li><i>CLEAR</i> - clears the integration data stored in the Collaborate. NB: the site ID match of the data in the JWT payload and the Collaborate internals is performed even for the CLEAR action, unless the <tt>force</tt> flag is set to <tt>true</tt>.</li>  </ul>  <p><strong><tt>force</tt>:</strong> used to enforce the <tt>REGISTER</tt> and <tt>CLEAR</tt> actions even if the site IDs in the payload and Collaborate internals do not match.</p>  <p><strong><tt>lmsRegion</tt>:</strong> the AWS cloud region assigned to the LMS. Only required for the <tt>REGISTER</tt> action. Passing invalid lsmRegion or opting it out from the registration may prevent some of the Collaborate features to be available.</p></div><h3>Signing</h3><p>To authenticate, create a JWT token with the above described payload (<a href=\"https://tools.ietf.org/html/rfc7519\">RFC-7519</a>), and sign it with your consumer secret using RSA SHA256.</p><p><strong></strong> The JWT must conform with the general format rules specified here: http://tools.ietf.org/html/draft-jones-json-web-token.</p>\n      operationId: authorize_2\n      parameters:\n      - name: grant_type\n        in: header\n        description: Must be <tt>urn:ietf:params:oauth:grant-type:jwt-bearer</tt>\n        required: true\n        schema:\n          type: string\n        example: urn:ietf:params:oauth:grant-type:jwt-bearer\n      - name: assertion\n        in: header\n        description: The JWT bearer token. See the main description for details on\n          how to construct and sign the token.\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                  access_token: string\n                  expires_in: 0\n        '400':\n          description: Invalid grant request.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n        '401':\n          description: Invalid client credentials.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/contexts\":\n    get:\n      tags:\n      - contexts\n      summary: Search for contexts constrained by the provided attributes. The response\n        contains list of Context Response objects.\n      operationId: getContexts_1\n      parameters:\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: name\n        in: query\n        description: The name of the context set during creation. The search is case\n          insensitive.\n        schema:\n          type: string\n      - name: extId\n        in: query\n        description: External id set during the context creation.\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: List of fields for results sorting.\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n            enum:\n            - id\n            - name\n      - name: limit\n        in: query\n        description: Maximum number of returned results (if the limit is <= 0 or >\n          1000, it will default to 1000).\n        schema:\n          maximum: 1000\n          minimum: 0\n          type: integer\n          format: int32\n          default: 1000\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SearchResponse\"\n      security:\n      - JwtTokenAuth: []\n    post:\n      tags:\n      - contexts\n      summary: Creates a new context and returns it.\n      operationId: postContexts_1\n      requestBody:\n        description: Context request body\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Context\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Context\"\n      security:\n      - JwtTokenAuth: []\n  \"/contexts/{contextId}\":\n    get:\n      tags:\n      - contexts\n      summary: Get the Context by contextId.\n      operationId: getContextByContextId_1\n      parameters:\n      - name: contextId\n        in: path\n        description: Context's id.\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Context\"\n        '404':\n          description: The context wasn't found.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n      security:\n      - JwtTokenAuth: []\n    patch:\n      tags:\n      - contexts\n      summary: Patch the Context by contextId with new values.\n      operationId: patchContextByContextId_1\n      parameters:\n      - name: contextId\n        in: path\n        description: Context's id.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Context Patch\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContextPatch\"\n          application/merge-patch+json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContextPatch\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Context\"\n        '404':\n          description: The context wasn't found.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n      security:\n      - JwtTokenAuth: []\n  \"/contexts/{contextId}/sessions\":\n    post:\n      tags:\n      - contexts\n      summary: Associates a session with this context.\n      operationId: postContextsByContextIdSessions_1\n      parameters:\n      - name: contextId\n        in: path\n        description: Context's id.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Request body with session's id.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Id\"\n        required: true\n      responses:\n        '200':\n          description: The session was associated to the context.\n        '404':\n          description: The context wasn't found.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n      security:\n      - JwtTokenAuth: []\n  \"/email/recordings\":\n    post:\n      operationId: sendRecordingCreationEmail_1\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            \"*/*\": {}\n  \"/email/sessions/{sessionId}/enrollments/{enrollmentId}\":\n    post:\n      operationId: sendInvitationEmail_1\n      parameters:\n      - name: enrollmentId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/email/sessions/{sessionId}/enrollments\":\n    post:\n      operationId: sendGroupInvitationEmail_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/email/sessions/{sessionId}/creation\":\n    post:\n      operationId: sendCreationEmail_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/logingroups/{logingroupId}\":\n    get:\n      operationId: getLogingroupsByLogingroupId_1\n      parameters:\n      - name: logingroupId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    put:\n      operationId: putLogingroupsByLogingroupId_1\n      parameters:\n      - name: logingroupId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/LoginGroupDto\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    delete:\n      operationId: deleteLogingroupsByLogingroupId_1\n      parameters:\n      - name: logingroupId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: patchLogingroupsByLogingroupId_1\n      parameters:\n      - name: logingroupId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n          application/merge-patch+json:\n            schema:\n              type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/logingroups/{logingroupId}/oauthconsumers\":\n    post:\n      operationId: postLogingroupsByLogingroupIdOauthconsumers_1\n      parameters:\n      - name: logingroupId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/OAuthConsumerDto\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/logingroups\":\n    get:\n      operationId: getLogingroups_1\n      parameters:\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: search\n        in: query\n        schema:\n          type: string\n      - name: active\n        in: query\n        schema:\n          type: boolean\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: search_by\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - name\n            - description\n            - salesforceid\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: postLogingroups_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/LoginGroupDto\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/lti\":\n    post:\n      operationId: authorize\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n            text/html: {}\n  \"/lti/deeplinks\":\n    post:\n      operationId: getDeepLinkResponse_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/migration\":\n    get:\n      operationId: result_1\n      parameters:\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: migrate_1\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/migration/status\":\n    get:\n      operationId: status_1\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/oauthconsumers\":\n    get:\n      operationId: getOauthConsumers_1\n      parameters:\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: search\n        in: query\n        schema:\n          type: string\n      - name: type\n        in: query\n        schema:\n          type: string\n      - name: logingroupid\n        in: query\n        schema:\n          type: string\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: postOauthConsumers_1\n      parameters:\n      - name: expand\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/oauthconsumers/{oauthConsumerId}\":\n    get:\n      operationId: getOauthConsumersByOauthConsumerId_1\n      parameters:\n      - name: oauthConsumerId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    put:\n      operationId: putOauthConsumersByOauthConsumerId_1\n      parameters:\n      - name: oauthConsumerId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    delete:\n      operationId: deleteOauthConsumersByOauthConsumerId_1\n      parameters:\n      - name: oauthConsumerId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: patchOauthConsumersByOauthConsumerId_1\n      parameters:\n      - name: oauthConsumerId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n          application/merge-patch+json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/oauthconsumers/me\":\n    get:\n      operationId: getMeInformation_2\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/passwords\":\n    put:\n      operationId: resetPassword_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/PasswordResetStep2Dto\"\n      responses:\n        default:\n          description: default response\n          content:\n            \"*/*\": {}\n    post:\n      operationId: resetRequest_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/PasswordResetStep1Dto\"\n      responses:\n        default:\n          description: default response\n          content:\n            \"*/*\": {}\n  \"/pins\":\n    get:\n      operationId: getPinBySessionUID_1\n      parameters:\n      - name: sessionId\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: postPin_1\n      parameters:\n      - name: sessionId\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/pins/{pin}\":\n    get:\n      operationId: getPinByPin_1\n      parameters:\n      - name: pin\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/ping\":\n    get:\n      operationId: ping_1\n      responses:\n        default:\n          description: default response\n          content:\n            \"*/*\": {}\n  \"/recordings\":\n    get:\n      operationId: getRecordings_1\n      parameters:\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: startTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: endTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: active\n        in: query\n        schema:\n          type: boolean\n          default: true\n      - name: userId\n        in: query\n        schema:\n          type: string\n      - name: userExtId\n        in: query\n        schema:\n          type: string\n      - name: contextId\n        in: query\n        schema:\n          type: string\n      - name: contextExtId\n        in: query\n        schema:\n          type: string\n      - name: sessionId\n        in: query\n        schema:\n          type: string\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: postRecording_1\n      parameters:\n      - name: sessionInstanceId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: recordingGroupId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: storageUrl\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/{recordingId}/subtitle\":\n    get:\n      operationId: getRecordingSubtitle_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: origin\n        in: query\n        schema:\n          type: string\n          default: USER\n          enum:\n          - USER\n          - EMBEDDED\n          - ASR\n      - name: track\n        in: query\n        schema:\n          type: integer\n          format: int64\n          default: 0\n      - name: lang\n        in: query\n        schema:\n          type: string\n          default: eng\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            text/vtt;charset=utf-8: {}\n            text/plain;charset=utf-8: {}\n    delete:\n      operationId: deleteRecordingSubtitle_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: origin\n        in: query\n        schema:\n          type: string\n          default: USER\n          enum:\n          - USER\n          - EMBEDDED\n          - ASR\n      - name: track\n        in: query\n        schema:\n          type: integer\n          format: int64\n          default: 0\n      - name: lang\n        in: query\n        schema:\n          type: string\n          default: eng\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json;charset=utf-8: {}\n  \"/recordings/{recordingId}/subtitle/info\":\n    get:\n      operationId: getRecordingSubtitleInfo_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: track\n        in: query\n        schema:\n          type: integer\n          format: int64\n          default: 0\n      - name: lang\n        in: query\n        schema:\n          type: string\n          default: eng\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json;charset=utf-8: {}\n  \"/recordings/{recordingId}/subtitles\":\n    post:\n      operationId: postRecordingSubtitles_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: validOnly\n        in: query\n        schema:\n          type: boolean\n          default: true\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json;charset=utf-8: {}\n    patch:\n      operationId: updateRecordingSubtitles_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/{recordingId}/subtitles/origin\":\n    get:\n      operationId: getRecordingPreferredSubtitles_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: updateRecordingPreferredSubtitles_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/{recordingId}\":\n    get:\n      operationId: getRecordingsByRecordingId_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    put:\n      operationId: putRecordingByRecordingId_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    delete:\n      operationId: deleteRecordingsByRecordingId_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            \"*/*\": {}\n    patch:\n      operationId: patchRecordingsByRecordingId_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n          application/merge-patch+json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/list\":\n    get:\n      operationId: getRecordingsByRecordingIds_1\n      parameters:\n      - name: id\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/{recordingId}/url\":\n    get:\n      operationId: getRecordingUrlByRecordingId_2\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: validHours\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 2\n      - name: validMinutes\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: disposition\n        in: query\n        schema:\n          type: string\n          default: launch\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: getRecordingUrlByRecordingId\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: disposition\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/sns/stop\":\n    post:\n      operationId: postStopEventFromSns_1\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: object\n      responses:\n        default:\n          description: default response\n          content:\n            application/json;charset=utf-8: {}\n            text/plain: {}\n  \"/recordings/sns/done\":\n    post:\n      operationId: postDoneEventFromSns_1\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: object\n      responses:\n        default:\n          description: default response\n          content:\n            application/json;charset=utf-8: {}\n            text/plain: {}\n  \"/recordings/{recordingId}/data\":\n    get:\n      operationId: getRecordingDataByRecordingId_1\n      parameters:\n      - name: User-Agent\n        in: header\n        schema:\n          type: string\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/{recordingId}/data/secure\":\n    get:\n      operationId: getRecordingDataByRecordingId_2\n      parameters:\n      - name: User-Agent\n        in: header\n        schema:\n          type: string\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/{recordingId}/chat\":\n    get:\n      operationId: getRecordingChatTranscriptById_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        schema:\n          type: string\n          default: vtt\n          enum:\n          - VTT\n          - SRT\n          - TXT\n          - JSON\n      responses:\n        default:\n          description: default response\n          content:\n            application/json;charset=utf-8: {}\n            text/vtt;charset=utf-8: {}\n  \"/recordings/token/{token}/data\":\n    get:\n      operationId: getRecordingDataByToken_1\n      parameters:\n      - name: User-Agent\n        in: header\n        schema:\n          type: string\n      - name: token\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/recordings/{recordingId}/subtitle/all\":\n    get:\n      operationId: getRecordingSubtitleAll_1\n      parameters:\n      - name: recordingId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json;charset=utf-8: {}\n  \"/sessions/{sessionId}/instances/{instanceId}\":\n    get:\n      operationId: getSessionInstance\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: instanceId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: expand\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - attendees\n            - attendeesCount\n            - poll\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions\":\n    get:\n      operationId: getSessions_1\n      parameters:\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: startTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: endTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: active\n        in: query\n        schema:\n          type: boolean\n          default: true\n      - name: extId\n        in: query\n        schema:\n          type: string\n      - name: userId\n        in: query\n        schema:\n          type: string\n      - name: userExtId\n        in: query\n        schema:\n          type: string\n      - name: contextId\n        in: query\n        schema:\n          type: string\n      - name: contextExtId\n        in: query\n        schema:\n          type: string\n      - name: loginGroupId\n        in: query\n        schema:\n          type: string\n      - name: sessionCategory\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 10000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: postSessions_1\n      parameters:\n      - name: User-Agent\n        in: header\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}\":\n    get:\n      operationId: getSessionsBySessionId_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    put:\n      operationId: putSessionsBySessionId_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    delete:\n      operationId: deleteSessionsBySessionId_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: patchSessionsBySessionId_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n          application/merge-patch+json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/instances/{instanceId}/attendees\":\n    get:\n      operationId: getSessionInstanceAttendanceCsv_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: instanceId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: timeZone\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: userId\n        in: query\n        schema:\n          type: string\n      - name: extUserId\n        in: query\n        schema:\n          type: string\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            text/csv; qs=0.7: {}\n  \"/sessions/{sessionId}/instances/{instanceId}/stats\":\n    get:\n      operationId: getSessionInstanceAttendanceStats_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: instanceId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/url\":\n    get:\n      operationId: launchLtiSessionAndEnroll_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: launchSessionAndEnroll_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/mobileUrl\":\n    post:\n      operationId: launchSessionForMobileAndEnroll_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/occurrences/{occurrenceId}\":\n    get:\n      operationId: getOccurrenceForSession_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: occurrenceId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    put:\n      operationId: updatePutOccurrenceForSession_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: occurrenceId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    delete:\n      operationId: deleteOccurrenceForSession_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: occurrenceId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: updatePatchOccurrenceForSession_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: occurrenceId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n          application/merge-patch+json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/enrollments\":\n    get:\n      operationId: getSessionsBySessionIdEnrollment_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: query\n        schema:\n          type: string\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: postSessionsBySessionIdEnrollments_1\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/enrollments/{enrollmentId}\":\n    get:\n      operationId: getSessionsBySessionIdEnrollmentsByEnrollmentId_1\n      parameters:\n      - name: enrollmentId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    put:\n      operationId: putSessionsBySessionIdEnrollmentsByEnrollmentId_1\n      parameters:\n      - name: enrollmentId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    delete:\n      operationId: deleteSessionsBySessionIdEnrollmentsByEnrollmentId_1\n      parameters:\n      - name: enrollmentId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: patchSessionsBySessionIdEnrollmentsByEnrollmentId_1\n      parameters:\n      - name: enrollmentId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n          application/merge-patch+json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/enrollments/{enrollmentId}/url\":\n    get:\n      operationId: getLaunchUrlForEnrollment_1\n      parameters:\n      - name: enrollmentId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/enrollments/{enrollmentId}/mobileUrl\":\n    get:\n      operationId: getLaunchTokenForEnrollment_1\n      parameters:\n      - name: enrollmentId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/sessions/{sessionId}/instances\":\n    get:\n      operationId: getSessionInstances\n      parameters:\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: startTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: endTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: expand\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - attendees\n            - attendeesCount\n            - poll\n      - name: running\n        in: query\n        schema:\n          type: boolean\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: loginGroupId\n        in: query\n        schema:\n          type: string\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/token/guest/{token}\":\n    get:\n      operationId: getLaunchingTypeForGuestToken_1\n      parameters:\n      - name: token\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            text/plain: {}\n  \"/token/invite/{token}\":\n    get:\n      operationId: getLaunchingTypeForInvitationToken_1\n      parameters:\n      - name: token\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            text/plain: {}\n  \"/users\":\n    get:\n      operationId: getUsers_1\n      parameters:\n      - name: offset\n        in: query\n        description: Offset of the first entry in results. E.g. If there are over\n          600 results, and the request defines limit=100 and offset=500, the API returns\n          results 500 through 599.\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n          default: 0\n      - name: fields\n        in: query\n        description: A subset of object attributes required in the response. The list\n          must be a comma separated list of context attributes.\n        schema:\n          type: string\n          default: ''\n      - name: order\n        in: query\n        description: Order of results.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: extId\n        in: query\n        schema:\n          type: string\n      - name: id\n        in: query\n        schema:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n      - name: ids\n        in: query\n        schema:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n      - name: searchType\n        in: query\n        schema:\n          type: string\n          default: owned\n      - name: userType\n        in: query\n        schema:\n          uniqueItems: true\n          type: array\n          items:\n            type: integer\n            format: int32\n      - name: loginGroupId\n        in: query\n        schema:\n          type: string\n      - name: deleted\n        in: query\n        schema:\n          type: boolean\n          default: false\n      - name: userRole\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: sort\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            default: id\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 5000\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    post:\n      operationId: postUsers_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: upload\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/users/{userId}\":\n    get:\n      operationId: getUsersByUserId_1\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    put:\n      operationId: putUsersByUserId_1\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    delete:\n      operationId: deleteUsersByUserId_1\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n    patch:\n      operationId: patchUsersByUserId_1\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n          application/merge-patch+json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/users/me\":\n    get:\n      operationId: getMeInformation\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/reports/auth/{reportType}/async\":\n    get:\n      operationId: getAuthTokenAsync\n      parameters:\n      - name: startTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: endTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: loginGroupId\n        in: query\n        schema:\n          type: string\n      - name: reportType\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/reports/auth/{reportType}\":\n    get:\n      operationId: getAuthTokenSync\n      parameters:\n      - name: startTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: endTime\n        in: query\n        schema:\n          \"$ref\": \"#/components/schemas/DateTimeParam\"\n      - name: loginGroupId\n        in: query\n        schema:\n          type: string\n      - name: reportType\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/reports/auth/poll\":\n    get:\n      operationId: getAuthTokenPollReport\n      parameters:\n      - name: sessionInstanceUuid\n        in: query\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: timeZone\n        in: query\n        schema:\n          type: string\n      - name: sortBy\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\n  \"/reports/{uuid}\":\n    get:\n      operationId: getReportInfo\n      parameters:\n      - name: uuid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n      responses:\n        default:\n          description: default response\n          content:\n            application/json: {}\ncomponents:\n  schemas:\n    CloudDataDto:\n      type: object\n      properties:\n        siteId:\n          type: string\n          format: uuid\n    ConsumerDto:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        uid:\n          type: string\n        consumerType:\n          type: string\n          enum:\n          - OAUTH\n          - LG\n          - USER\n          - CONTEXT\n          - NATIVE_USER\n          - LTI\n          - CONTEXT_GROUP\n          - SERVER\n        user:\n          \"$ref\": \"#/components/schemas/UserDto\"\n        context:\n          \"$ref\": \"#/components/schemas/Context\"\n        oauthConsumerId:\n          type: integer\n          format: int64\n        oauthConsumer:\n          \"$ref\": \"#/components/schemas/OAuthConsumerDto\"\n        loginGroupId:\n          type: integer\n          format: int64\n        loginGroup:\n          \"$ref\": \"#/components/schemas/LoginGroupDto\"\n        parent:\n          \"$ref\": \"#/components/schemas/ConsumerDto\"\n        accountConsumer:\n          \"$ref\": \"#/components/schemas/ConsumerDto\"\n    Context:\n      required:\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          description: Context's id.\n          readOnly: true\n        name:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Context's name.\n        label:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Context's label.\n        title:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Context's title.\n        courseRoomEnabled:\n          type: boolean\n          description: For this context will be created endless course room session.\n          default: true\n        created:\n          type: string\n          description: Context's creation date.\n          format: date-time\n          readOnly: true\n        modified:\n          type: string\n          description: Context's modification date.\n          format: date-time\n          readOnly: true\n        extId:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Context's external id.\n    IntegrationAttendanceDto:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        lateThreshold:\n          minimum: 0\n          type: integer\n          format: int32\n        absenceThreshold:\n          minimum: 0\n          type: integer\n          format: int32\n        presenceDurationThreshold:\n          maximum: 1000\n          minimum: 0\n          type: integer\n          format: int32\n    LoginGroupAttributesDto:\n      type: object\n      properties:\n        mcuTcpOnly:\n          type: boolean\n        saturnCloudfront:\n          type: boolean\n        turnGlobalAccelerator:\n          type: boolean\n        pspdfKitEnabled:\n          type: boolean\n    LoginGroupDto:\n      required:\n      - launchComponent\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          maxLength: 32\n          minLength: 1\n          pattern: ^[0-9A-Za-z]($|(((?=[ -~])[^<&\\\\\"#%])*(?=[!-~])[^<&\\\\\"#%]$))\n          type: string\n        description:\n          maxLength: 128\n          minLength: 0\n          type: string\n        htmlSessionSupported:\n          type: boolean\n        htmlSessionRecordingSupported:\n          type: boolean\n        htmlSessionMobileSupported:\n          type: boolean\n        htmlSessionContentSupported:\n          type: boolean\n        htmlSessionTelephonySupported:\n          type: boolean\n        htmlSessionPersistentPinsSupported:\n          type: boolean\n        bpdsSupported:\n          type: boolean\n        messagingStreamSupported:\n          type: boolean\n        userManagementSupported:\n          type: boolean\n        netstatsSupported:\n          type: boolean\n        integrationAttendanceSupported:\n          type: boolean\n        recordingPublicLinkAllowed:\n          type: boolean\n        recordingAuthLinkLevel:\n          type: string\n          enum:\n          - SESSION_OWNER\n          - INVITEE\n          - LG\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n        salesforceId:\n          type: integer\n          format: int64\n        active:\n          type: boolean\n        htmlSessionTelephonyNumber:\n          maxLength: 64\n          minLength: 0\n          type: string\n        courseRoomEnabled:\n          type: boolean\n        breakoutRoomSupported:\n          type: boolean\n        maxSessionSize:\n          type: integer\n          format: int32\n        largeSessionEnable:\n          type: boolean\n        privateChatRestrictedSupported:\n          type: boolean\n        asrSupported:\n          type: boolean\n        asrApiKey:\n          type: string\n        launchComponent:\n          type: string\n          enum:\n          - sas\n          - cla_flexgen\n          - cla_cloud\n          - cla_testing\n          - ops_check\n          - cla_flexgen_only\n        attributes:\n          \"$ref\": \"#/components/schemas/LoginGroupAttributesDto\"\n    OAuthConsumerDto:\n      required:\n      - consumerKey\n      - consumerSecret\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          maxLength: 255\n          minLength: 0\n          type: string\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        consumerKey:\n          maxLength: 64\n          minLength: 0\n          type: string\n        consumerSecret:\n          maxLength: 128\n          minLength: 32\n          type: string\n        enabled:\n          type: boolean\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n        loginGroupId:\n          type: string\n        loginGroup:\n          \"$ref\": \"#/components/schemas/LoginGroupDto\"\n        type:\n          type: string\n          enum:\n          - lti\n          - rest\n        settings:\n          \"$ref\": \"#/components/schemas/SettingsDto\"\n    SettingsDto:\n      type: object\n      properties:\n        cloudData:\n          \"$ref\": \"#/components/schemas/CloudDataDto\"\n        integrationAttendance:\n          \"$ref\": \"#/components/schemas/IntegrationAttendanceDto\"\n    User:\n      type: object\n      properties:\n        consumer:\n          \"$ref\": \"#/components/schemas/ConsumerDto\"\n        userId:\n          type: integer\n          format: int64\n        name:\n          type: string\n    UserAttributesDto:\n      type: object\n      properties:\n        extUsername:\n          type: string\n    UserDto:\n      type: object\n      properties:\n        firstName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        lastName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        userName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        displayName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        oldPassword:\n          type: string\n          writeOnly: true\n        password:\n          type: string\n          writeOnly: true\n        email:\n          type: string\n        role:\n          type: string\n          enum:\n          - sysdba\n          - root\n          - manager\n          - administrator\n          - supervisor\n          - moderator\n          - participant\n          - none\n          - lti_instructor\n          - lti_student\n        editingPermission:\n          type: string\n          enum:\n          - reader\n          - writer\n        avatarUrl:\n          type: string\n          format: url\n        deleted:\n          type: boolean\n        passwordModified:\n          type: string\n          format: date-time\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n        ltiLaunchDetails:\n          type: object\n          additionalProperties:\n            type: object\n        attributes:\n          \"$ref\": \"#/components/schemas/UserAttributesDto\"\n        id:\n          type: string\n        extId:\n          type: string\n        userType:\n          type: string\n          enum:\n          - NATIVE\n          - EXTERNAL\n          - LTI\n          - GUEST\n          - TELEPHONY\n        loginGroupId:\n          type: string\n        largeSessionEnabled:\n          type: boolean\n        htmlSessionSupported:\n          type: boolean\n        htmlSessionRecordingSupported:\n          type: boolean\n        htmlSessionMobileSupported:\n          type: boolean\n        htmlSessionContentSupported:\n          type: boolean\n        htmlSessionTelephonySupported:\n          type: boolean\n        courseRoomSupported:\n          type: boolean\n        privateChatRestrictedSupported:\n          type: boolean\n        htmlSessionPersistentPinsSupported:\n          type: boolean\n        reportSupported:\n          type: boolean\n        messagingStreamSupported:\n          type: boolean\n        asrSupported:\n          type: boolean\n        userManagementSupported:\n          type: boolean\n        integrationAttendance:\n          \"$ref\": \"#/components/schemas/IntegrationAttendanceDto\"\n        ownerId:\n          type: string\n    DateTimeParam:\n      type: object\n    Error:\n      required:\n      - errorKey\n      type: object\n      properties:\n        errorKey:\n          type: string\n          description: Error key.\n          readOnly: true\n          example: bad_request\n          enum:\n          - invalid_json\n          - bad_request\n          - unauthorized\n          - forbidden\n          - method_not_allowed\n          - resource_not_found\n          - invalid_grant\n          - invalid_client\n          - unprocessable_entity\n          - already_exist\n          - internal_error\n        errorMessage:\n          type: string\n          description: General description of the error response.\n          readOnly: true\n          example: The request was invalid.\n        errorDetail:\n          type: object\n          description: Detailed error message.\n          readOnly: true\n        sessionId:\n          type: string\n          description: Session id.\n          readOnly: true\n        attendeeId:\n          type: string\n          description: Attendee id.\n          readOnly: true\n        token:\n          type: string\n          description: The JWT bearer token.\n          readOnly: true\n        sessionDetails:\n          \"$ref\": \"#/components/schemas/SessionDetails\"\n    SessionDetails:\n      type: object\n      properties:\n        sessionName:\n          type: string\n        loginGroupName:\n          type: string\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        accessTime:\n          type: string\n          format: date-time\n        reconnectUrl:\n          type: string\n          format: url\n        returnUrl:\n          type: string\n          format: url\n        telephonyEnabled:\n          type: boolean\n        breakoutRoomEnabled:\n          type: boolean\n        courseRoomEnabled:\n          type: boolean\n        sessionCategory:\n          type: string\n          enum:\n          - default\n          - course\n          - master\n          - soap\n        occurrenceType:\n          type: string\n          enum:\n          - S\n          - P\n        nextOccurrence:\n          type: string\n          format: date-time\n        lastOccurrence:\n          type: string\n          format: date-time\n        maxSessionSize:\n          type: integer\n          format: int32\n        largeSessionEnabled:\n          type: boolean\n        launchComponent:\n          type: string\n          enum:\n          - sas\n          - cla_flexgen\n          - cla_cloud\n          - cla_testing\n          - ops_check\n          - cla_flexgen_only\n        bpdsSupported:\n          type: boolean\n        messagingStreamEnabled:\n          type: boolean\n        persistentPinsEnabled:\n          type: boolean\n      description: Session details.\n      readOnly: true\n      example:\n    SearchResponse:\n      type: object\n      properties:\n        size:\n          type: integer\n          description: Count of results returned in response.\n          format: int64\n          readOnly: true\n        offset:\n          type: integer\n          description: Offset of the first entry in results.\n          format: int32\n          readOnly: true\n        limit:\n          type: integer\n          description: Maximum number of returned results.\n          format: int32\n          readOnly: true\n          example: 1000\n        search:\n          type: string\n          description: Searched expression.\n          readOnly: true\n        name:\n          type: string\n          description: Expression to search for in the name of the object you are\n            looking for.\n          readOnly: true\n        fields:\n          type: string\n          description: A subset of object attributes required in the response. The\n            list must be a comma separated list of context attributes.\n          readOnly: true\n        results:\n          type: array\n          description: Results of a search.\n          readOnly: true\n          items:\n            type: object\n            description: Results of a search.\n            readOnly: true\n    ContextPatch:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Context's name.\n        label:\n          type: string\n          description: Context's label.\n        title:\n          type: string\n          description: Context's title.\n    Id:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Object's identifier.\n    RecordingCallbackData:\n      required:\n      - roomId\n      - sessionId\n      type: object\n      properties:\n        sessionId:\n          type: integer\n          format: int64\n        roomId:\n          type: integer\n          format: int64\n    LtiDeepLinkItemsDto:\n      type: object\n      properties:\n        itemType:\n          type: string\n          enum:\n          - session\n          - recording\n        ids:\n          type: array\n          items:\n            type: string\n    PasswordResetStep1Dto:\n      type: object\n      properties:\n        userName:\n          type: string\n    PasswordResetStep2Dto:\n      type: object\n      properties:\n        password:\n          type: string\n        token:\n          type: string\n    PinsDto:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        pin:\n          type: string\n        pinType:\n          type: string\n          enum:\n          - static\n          - dynamic\n        pinAccessType:\n          type: string\n          enum:\n          - guest\n          - chair\n    SubtitleUploadMetadataDto:\n      type: object\n      properties:\n        origin:\n          type: string\n          enum:\n          - USER\n          - EMBEDDED\n          - ASR\n        lang:\n          type: string\n        track:\n          type: integer\n          format: int64\n        label:\n          type: string\n    BodyPart:\n      type: object\n      properties:\n        contentDisposition:\n          \"$ref\": \"#/components/schemas/ContentDisposition\"\n        entity:\n          type: object\n        headers:\n          type: object\n          properties:\n            empty:\n              type: boolean\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        mediaType:\n          type: object\n          properties:\n            type:\n              type: string\n            subtype:\n              type: string\n            parameters:\n              type: object\n              additionalProperties:\n                type: string\n            wildcardType:\n              type: boolean\n            wildcardSubtype:\n              type: boolean\n        messageBodyWorkers:\n          \"$ref\": \"#/components/schemas/MessageBodyWorkers\"\n        parent:\n          \"$ref\": \"#/components/schemas/MultiPart\"\n        providers:\n          type: object\n        parameterizedHeaders:\n          type: object\n          properties:\n            empty:\n              type: boolean\n          additionalProperties:\n            type: array\n            items:\n              \"$ref\": \"#/components/schemas/ParameterizedHeader\"\n    ContentDisposition:\n      type: object\n      properties:\n        type:\n          type: string\n        parameters:\n          type: object\n          additionalProperties:\n            type: string\n        fileName:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        readDate:\n          type: string\n          format: date-time\n        size:\n          type: integer\n          format: int64\n    FormDataBodyPart:\n      type: object\n      properties:\n        contentDisposition:\n          \"$ref\": \"#/components/schemas/ContentDisposition\"\n        entity:\n          type: object\n        headers:\n          type: object\n          properties:\n            empty:\n              type: boolean\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        mediaType:\n          type: object\n          properties:\n            type:\n              type: string\n            subtype:\n              type: string\n            parameters:\n              type: object\n              additionalProperties:\n                type: string\n            wildcardType:\n              type: boolean\n            wildcardSubtype:\n              type: boolean\n        messageBodyWorkers:\n          \"$ref\": \"#/components/schemas/MessageBodyWorkers\"\n        parent:\n          \"$ref\": \"#/components/schemas/MultiPart\"\n        providers:\n          type: object\n        name:\n          type: string\n        value:\n          type: string\n        formDataContentDisposition:\n          \"$ref\": \"#/components/schemas/FormDataContentDisposition\"\n        simple:\n          type: boolean\n        parameterizedHeaders:\n          type: object\n          properties:\n            empty:\n              type: boolean\n          additionalProperties:\n            type: array\n            items:\n              \"$ref\": \"#/components/schemas/ParameterizedHeader\"\n    FormDataContentDisposition:\n      type: object\n      properties:\n        type:\n          type: string\n        parameters:\n          type: object\n          additionalProperties:\n            type: string\n        fileName:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        readDate:\n          type: string\n          format: date-time\n        size:\n          type: integer\n          format: int64\n        name:\n          type: string\n    MessageBodyWorkers:\n      type: object\n    MultiPart:\n      type: object\n      properties:\n        contentDisposition:\n          \"$ref\": \"#/components/schemas/ContentDisposition\"\n        entity:\n          type: object\n        headers:\n          type: object\n          properties:\n            empty:\n              type: boolean\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        mediaType:\n          type: object\n          properties:\n            type:\n              type: string\n            subtype:\n              type: string\n            parameters:\n              type: object\n              additionalProperties:\n                type: string\n            wildcardType:\n              type: boolean\n            wildcardSubtype:\n              type: boolean\n        messageBodyWorkers:\n          \"$ref\": \"#/components/schemas/MessageBodyWorkers\"\n        parent:\n          \"$ref\": \"#/components/schemas/MultiPart\"\n        providers:\n          type: object\n        bodyParts:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/BodyPart\"\n        parameterizedHeaders:\n          type: object\n          properties:\n            empty:\n              type: boolean\n          additionalProperties:\n            type: array\n            items:\n              \"$ref\": \"#/components/schemas/ParameterizedHeader\"\n    ParameterizedHeader:\n      type: object\n      properties:\n        value:\n          type: string\n        parameters:\n          type: object\n          additionalProperties:\n            type: string\n    SubtitlesUpdateDto:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        user:\n          type: boolean\n        asr:\n          type: boolean\n        original:\n          type: boolean\n        subtitlesEnabled:\n          type: boolean\n    AssetRestrictionDto:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n          - TIME\n          - REQUEST_COUNT\n        expirationHours:\n          type: integer\n          format: int32\n        maxRequests:\n          type: integer\n          format: int32\n        expirationMinutes:\n          type: integer\n          format: int32\n    AsrDto:\n      type: object\n      properties:\n        requestedTs:\n          type: string\n          format: date-time\n        checkedTs:\n          type: string\n          format: date-time\n        deliveredTs:\n          type: string\n          format: date-time\n        errorDescription:\n          type: string\n        updatedTs:\n          type: string\n          format: date-time\n        fileId:\n          type: integer\n          format: int64\n        transcriptId:\n          type: integer\n          format: int64\n    RecordingDto:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          maxLength: 64\n          minLength: 0\n          type: string\n        sessionName:\n          type: string\n        mediaName:\n          type: string\n        sessionStartTime:\n          type: string\n          format: date-time\n        duration:\n          type: integer\n          format: int64\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n        publicLinkAllowed:\n          type: boolean\n        authLinkLevel:\n          type: string\n          enum:\n          - SESSION_OWNER\n          - INVITEE\n          - LG\n        restricted:\n          type: boolean\n        lastPlayback:\n          type: string\n          format: date-time\n        playbackCount:\n          type: integer\n          format: int64\n        lastDownload:\n          type: string\n          format: date-time\n        downloadCount:\n          type: integer\n          format: int64\n        canDownload:\n          type: boolean\n        editingPermission:\n          type: string\n          enum:\n          - reader\n          - writer\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        subtitlesEnabled:\n          type: boolean\n        preferredSubtitles:\n          type: string\n          enum:\n          - USER\n          - ASR\n        userSubtitles:\n          type: boolean\n        embeddedSubtitles:\n          type: boolean\n        asrSubtitles:\n          type: boolean\n        asrStatus:\n          type: string\n          enum:\n          - NONE\n          - REQUESTED\n          - FINISHED_OK\n          - FINISHED_ERROR\n          - ERROR_ACKNOWLEDGED\n        asr:\n          \"$ref\": \"#/components/schemas/AsrDto\"\n        status:\n          type: string\n          enum:\n          - PROCESSING\n          - DONE\n          - FAILED\n        statusUpdateTs:\n          type: string\n          format: date-time\n        storageSize:\n          type: integer\n          format: int64\n          readOnly: true\n    RecurrenceRule:\n      required:\n      - interval\n      - recurrenceEndType\n      - recurrenceType\n      type: object\n      properties:\n        recurrenceType:\n          type: string\n          enum:\n          - daily\n          - weekly\n          - monthly\n        interval:\n          type: string\n          enum:\n          - INT1\n          - INT2\n          - INT3\n          - INT4\n          - INT5\n          - INT6\n          - INT7\n          - INT8\n          - INT9\n          - INT10\n        daysOfTheWeek:\n          type: array\n          items:\n            type: string\n            enum:\n            - mo\n            - tu\n            - we\n            - th\n            - fr\n            - sa\n            - su\n        numberOfOccurrences:\n          type: integer\n          format: int32\n        recurrenceEndType:\n          type: string\n          enum:\n          - on_date\n          - after_occurrences_count\n        endDate:\n          type: string\n          format: date-time\n    SessionDto:\n      required:\n      - name\n      - startTime\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          maxLength: 255\n          minLength: 0\n          type: string\n        description:\n          type: string\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        boundaryTime:\n          type: string\n          enum:\n          - NO_BOUNDARY\n          - MINUTES_10\n          - MINUTES_15\n          - MINUTES_30\n          - MINUTES_45\n          - MINUTES_60\n        guestUrl:\n          type: string\n          format: url\n        moderatorUrl:\n          type: string\n          format: url\n        allowGuest:\n          type: boolean\n        noEndDate:\n          type: boolean\n        showProfile:\n          type: boolean\n        participantCanUseTools:\n          type: boolean\n        canShareVideo:\n          type: boolean\n        canShareAudio:\n          type: boolean\n        canPostMessage:\n          type: boolean\n        canAnnotateWhiteboard:\n          type: boolean\n        mustBeSupervised:\n          type: boolean\n        openChair:\n          type: boolean\n        raiseHandOnEnter:\n          type: boolean\n        allowInSessionInvitees:\n          type: boolean\n        canDownloadRecording:\n          type: boolean\n        createdTimezone:\n          type: string\n        sessionExitUrl:\n          type: string\n          format: uri\n        occurrenceType:\n          type: string\n          enum:\n          - S\n          - P\n        occurrences:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/SessionOccurrenceDto\"\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n        sessionCategory:\n          type: string\n          enum:\n          - default\n          - course\n          - master\n          - soap\n        courseRoomEnabled:\n          type: boolean\n        ownerName:\n          type: string\n        extId:\n          maxLength: 255\n          minLength: 0\n          type: string\n        ltiParticipantRole:\n          type: string\n          enum:\n          - participant\n          - moderator\n          - presenter\n        guestRole:\n          type: string\n          enum:\n          - participant\n          - moderator\n          - presenter\n        privateChatRestricted:\n          type: boolean\n        telephonyEnabled:\n          type: boolean\n        telephonyPhoneNumber:\n          type: string\n        recurrenceRule:\n          \"$ref\": \"#/components/schemas/RecurrenceRule\"\n        editingPermission:\n          type: string\n          enum:\n          - reader\n          - writer\n        active:\n          type: boolean\n        joined:\n          type: boolean\n        bpdsSupported:\n          type: boolean\n        persistentPinsEnabled:\n          type: boolean\n        messagingStreamEnabled:\n          type: boolean\n        turnGlobalAccelerator:\n          type: boolean\n        largeSessionEnable:\n          type: boolean\n        canEnableLargeSession:\n          type: boolean\n        anonymizeRecordings:\n          type: boolean\n        integrationAttendance:\n          \"$ref\": \"#/components/schemas/IntegrationAttendanceDto\"\n        profanityFilterEnabled:\n          type: boolean\n        launchComponent:\n          type: string\n          enum:\n          - sas\n          - cla_flexgen\n          - cla_cloud\n          - cla_testing\n          - ops_check\n          - cla_flexgen_only\n    SessionOccurrenceDto:\n      type: object\n      properties:\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        active:\n          type: boolean\n        id:\n          type: string\n        joined:\n          type: boolean\n    UserLaunchContext:\n      type: object\n      properties:\n        user:\n          \"$ref\": \"#/components/schemas/UserDto\"\n        locale:\n          type: string\n        returnUrl:\n          type: string\n        reconnectUrl:\n          type: string\n        originDomain:\n          type: string\n        editingPermission:\n          type: string\n          enum:\n          - reader\n          - writer\n        launchingRole:\n          type: string\n          enum:\n          - participant\n          - moderator\n          - presenter\n    SessionEnrollmentDto:\n      type: object\n      properties:\n        id:\n          type: string\n        editingPermission:\n          type: string\n          enum:\n          - reader\n          - writer\n        launchingRole:\n          type: string\n          enum:\n          - participant\n          - moderator\n          - presenter\n        userId:\n          type: string\n        permanentUrl:\n          type: string\n          format: url\n    UploadedUserDto:\n      type: object\n      properties:\n        userName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        firstName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        lastName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        displayName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        password:\n          maxLength: 32\n          minLength: 0\n          type: string\n        email:\n          type: string\n        role:\n          pattern: \"^$|[Ss]\"\n          type: string\n        id:\n          type: string\n    UploadedUserErrorDto:\n      required:\n      - field\n      - key\n      type: object\n      properties:\n        field:\n          type: string\n        key:\n          type: string\n          enum:\n          - EMPTY_VALUE\n          - BAD_FORMAT\n          - USERNAME_CONFLICT\n          - BAD_USER_TYPE\n          - USERNAME_NOT_AVAILABLE\n          - PASSWORD_POLICY\n          - OTHER\n    UploadedUserResultDto:\n      required:\n      - user\n      type: object\n      properties:\n        user:\n          \"$ref\": \"#/components/schemas/UploadedUserDto\"\n        changed:\n          type: array\n          items:\n            type: string\n        errors:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/UploadedUserErrorDto\"\n    UploadedUserValidationDto:\n      required:\n      - ownerId\n      type: object\n      properties:\n        ownerId:\n          type: string\n        users:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/UploadedUserResultDto\"\n        created:\n          type: integer\n          format: int32\n        updated:\n          type: integer\n          format: int32\n        errors:\n          type: integer\n          format: int32\n  securitySchemes:\n    JwtTokenAuth:\n      type: apiKey\n      name: Authorization\n      in: header\n      bearerFormat: Bearer {token}\n",
			"canonicalURL": "/github.com/blackboard/blackboard.github.io@0d6b9be7b7bac6c3ccd1eab15bc595d4d6d1eb4f/-/blob/_data/swagger/collab.yml",
			"externalURLs": [
				{
					"url": "https://github.com/blackboard/blackboard.github.io/blob/0d6b9be7b7bac6c3ccd1eab15bc595d4d6d1eb4f/_data/swagger/collab.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/lti/deeplinks\": post: requestBody: contents: application/json: generate schema: field consumer: field loginGroup: field name: string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?=`"
}