{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oas-tools/oas-generator"
		},
		"file": {
			"name": "oai-spec.yaml",
			"size": 0,
			"path": "test/oai-spec.yaml",
			"byteSize": 9119,
			"content": "openapi: \"3.0.0\"\nservers:\n  - url: 'http://localhost:8080/api/v1'\ninfo:\n  version: 1.0.0\n  title: Valid specification file\n  license:\n    name: MIT\npaths:\n  /paramTestsQuery:\n    get:\n      summary: This path is only for tests\n      operationId: paramTestsQuery\n      tags:\n        - pets\n      parameters:\n        - name: integerParam\n          in: query\n          description: Integer parameter to test validation\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: booleanParam\n          in: query\n          description: Boolean parameter to test validation\n          required: true\n          schema:\n            type: boolean\n        - name: stringParam\n          in: query\n          description: string parameter to test validation\n          required: true\n          schema:\n            type: string\n        - name: doubleParam\n          in: query\n          description: string parameter to test validation\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      x-router-controller: \"petsController\"\n      #x-router-controller: \"Default\"\n  /paramTestsPath/{integerParam}/{booleanParam}/{stringParam}/{doubleParam}:\n    get:\n      summary: This path is only for tests\n      operationId: paramTestsPath\n      tags:\n        - pets\n      parameters:\n        - name: integerParam\n          in: path\n          description: Integer parameter to test validation\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: booleanParam\n          in: path\n          description: Boolean parameter to test validation\n          required: true\n          schema:\n            type: boolean\n        - name: stringParam\n          in: path\n          description: string parameter to test validation\n          required: true\n          schema:\n            type: string\n        - name: doubleParam\n          in: path\n          description: string parameter to test validation\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      x-router-controller: \"petsController\"\n      #x-router-controller: \"Default\"\n  /responseBodyTest:\n    get:\n      summary: should return an object with both right and wrong properties\n      operationId: responseBodyTest\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResponseTest\"\n      x-router-controller: \"petsController\"\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      #x-router-controller: \"petsController\"\n      #x-router-controller: \"Default\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      requestBody:\n        description: Pet to add to the store\n        x-name: pet\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n      responses:\n        '201':\n          description: Update status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      #x-router-controller: \"petsController\"\n      #x-router-controller: \"Default\"\n    delete:\n        description: deletes all the pets\n        operationId: deletePets\n        responses:\n          '204':\n            description: pets deleted\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n        #x-router-controller: \"petsController\"\n        #x-router-controller: \"Default\"\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        '404':\n          description: pet not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      #x-router-controller: \"petsController\"\n      #x-router-controller: \"Default\"\n    put:\n      description: updates a pet based on its petId\n      operationId: updatePet\n      parameters:\n          - name: petId\n            in: path\n            description: ID of pet to update\n            required: true\n            schema:\n              type: integer\n              format: int64\n      requestBody:\n        description: Pet to update\n        x-name: pet\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n      responses:\n          '200':\n            description: pet updated\n          '404':\n            description: pet not found\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n      #x-router-controller: \"petsController\"\n      #x-router-controller: \"Default\"\n    delete:\n      description: deletes a single pet based on the ID supplied\n      operationId: deletePet\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to delete\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: pet deleted\n        '404':\n          description: pet not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      #x-router-controller: \"petsController\"\n      #x-router-controller: \"Default\"\ncomponents:\n  schemas:\n    ResponseTest:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TestObject\"\n    TestObject:\n      required:\n        - integerProperty\n        - booleanProperty\n        - stringProperty\n        - doubleProperty\n      properties:\n        integerProperty:\n          type: integer\n        booleanProperty:\n          type: boolean\n        stringProperty:\n          type: string\n        doubleProperty:\n          type: number\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string"
		}
	},
	"Error": "buildIR: make ir: anonymous type name conflict: \"PetsHeaders\""
}