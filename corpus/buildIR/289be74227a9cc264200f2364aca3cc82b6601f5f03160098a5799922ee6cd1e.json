{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/connectparticipant/2018-09-07/openapi.yaml",
			"byteSize": 48295,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-09-07'\n  x-release: v4\n  title: Amazon Connect Participant Service\n  description: '\u003cp\u003eAmazon Connect is a cloud-based contact center solution that makes it easy to set up and manage a customer contact center and provide reliable customer engagement at any scale.\u003c/p\u003e \u003cp\u003eAmazon Connect enables customer contacts through voice or chat.\u003c/p\u003e \u003cp\u003eThe APIs described here are used by chat participants, such as agents and customers.\u003c/p\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: connectparticipant\n  x-aws-signingName: execute-api\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connectparticipant-2018-09-07.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/connect/'\nservers:\n  - url: 'http://participant.connect.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon Connect Participant multi-region endpoint\n  - url: 'https://participant.connect.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon Connect Participant multi-region endpoint\n  - url: 'http://participant.connect.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Connect Participant endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://participant.connect.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Connect Participant endpoint for China (Beijing) and China (Ningxia)\npaths:\n  /participant/complete-attachment-upload#X-Amz-Bearer:\n    post:\n      operationId: CompleteAttachmentUpload\n      description: 'Allows you to confirm that the attachment has been uploaded using the pre-signed URL provided in StartAttachmentUpload API. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompleteAttachmentUploadResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: The authentication token associated with the participant's connection.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - AttachmentIds\n                - ClientToken\n              properties:\n                AttachmentIds:\n                  description: A list of unique identifiers for the attachments.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ArtifactId'\n                  minItems: 1\n                  maxItems: 1\n                ClientToken:\n                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n                  type: string\n                  minLength: 1\n                  maxLength: 500\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /participant/connection#X-Amz-Bearer:\n    post:\n      operationId: CreateParticipantConnection\n      description: '\u003cp\u003eCreates the participant''s connection. Note that ParticipantToken is used for invoking this API instead of ConnectionToken.\u003c/p\u003e \u003cp\u003eThe participant token is valid for the lifetime of the participant â€“ until they are part of a contact.\u003c/p\u003e \u003cp\u003eThe response URL for \u003ccode\u003eWEBSOCKET\u003c/code\u003e Type has a connect expiry timeout of 100s. Clients must manually connect to the returned websocket URL and subscribe to the desired topic. \u003c/p\u003e \u003cp\u003eFor chat, you need to publish the following on the established websocket connection:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e{\"topic\":\"aws/subscribe\",\"content\":{\"topics\":[\"aws/chat\"]}}\u003c/code\u003e \u003c/p\u003e \u003cp\u003eUpon websocket URL expiry, as specified in the response ConnectionExpiry parameter, clients need to call this API again to obtain a new websocket URL and perform the same steps as before.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe Amazon Connect Participant Service APIs do not use \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"\u003eSignature Version 4 authentication\u003c/a\u003e.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateParticipantConnectionResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: '\u003cp\u003eThis is a header parameter.\u003c/p\u003e \u003cp\u003eThe Participant Token as obtained from \u003ca href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_StartChatContact.html\"\u003eStartChatContact\u003c/a\u003e API response.\u003c/p\u003e'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Type\n              properties:\n                Type:\n                  description: Type of connection information required.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ConnectionType'\n                  minItems: 1\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /participant/disconnect#X-Amz-Bearer:\n    post:\n      operationId: DisconnectParticipant\n      description: '\u003cp\u003eDisconnects a participant. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.\u003c/p\u003e \u003cp\u003eThe Amazon Connect Participant Service APIs do not use \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"\u003eSignature Version 4 authentication\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisconnectParticipantResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: The authentication token associated with the participant's connection.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ClientToken:\n                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n                  type: string\n                  maxLength: 500\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /participant/attachment#X-Amz-Bearer:\n    post:\n      operationId: GetAttachment\n      description: Provides a pre-signed URL for download of a completed attachment. This is an asynchronous API for use with active contacts.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAttachmentResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: The authentication token associated with the participant's connection.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - AttachmentId\n              properties:\n                AttachmentId:\n                  description: A unique identifier for the attachment.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /participant/transcript#X-Amz-Bearer:\n    post:\n      operationId: GetTranscript\n      description: '\u003cp\u003eRetrieves a transcript of the session, including details about any attachments. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.\u003c/p\u003e \u003cp\u003eThe Amazon Connect Participant Service APIs do not use \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"\u003eSignature Version 4 authentication\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTranscriptResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: The authentication token associated with the participant's connection.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ContactId:\n                  description: The contactId from the current contact chain for which transcript is needed.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n                MaxResults:\n                  description: 'The maximum number of results to return in the page. Default: 10. '\n                  type: integer\n                  minimum: 0\n                  maximum: 100\n                NextToken:\n                  description: The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.\n                  type: string\n                  minLength: 1\n                  maxLength: 1000\n                ScanDirection:\n                  description: 'The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition. '\n                  type: string\n                  enum:\n                    - FORWARD\n                    - BACKWARD\n                SortOrder:\n                  description: 'The sort order for the records. Default: DESCENDING.'\n                  type: string\n                  enum:\n                    - DESCENDING\n                    - ASCENDING\n                StartPosition:\n                  description: 'A filtering option for where to start. For example, if you sent 100 messages, start with message 50. '\n                  type: object\n                  properties:\n                    Id:\n                      allOf:\n                        - $ref: '#/components/schemas/ChatItemId'\n                        - description: 'The ID of the message or event where to start. '\n                    AbsoluteTime:\n                      allOf:\n                        - $ref: '#/components/schemas/Instant'\n                        - description: '\u003cp\u003eThe time in ISO format where to start.\u003c/p\u003e \u003cp\u003eIt''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.\u003c/p\u003e'\n                    MostRecent:\n                      allOf:\n                        - $ref: '#/components/schemas/MostRecent'\n                        - description: 'The start position of the most recent message where you want to start. '\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /participant/event#X-Amz-Bearer:\n    post:\n      operationId: SendEvent\n      description: '\u003cp\u003eSends an event. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.\u003c/p\u003e \u003cp\u003eThe Amazon Connect Participant Service APIs do not use \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"\u003eSignature Version 4 authentication\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendEventResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: The authentication token associated with the participant's connection.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ContentType\n              properties:\n                ContentType:\n                  description: '\u003cp\u003eThe content type of the request. Supported types are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eapplication/vnd.amazonaws.connect.event.typing\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eapplication/vnd.amazonaws.connect.event.connection.acknowledged\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: string\n                  minLength: 1\n                  maxLength: 100\n                Content:\n                  description: 'The content of the event to be sent (for example, message text). This is not yet supported.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                ClientToken:\n                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n                  type: string\n                  maxLength: 500\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /participant/message#X-Amz-Bearer:\n    post:\n      operationId: SendMessage\n      description: '\u003cp\u003eSends a message. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe Amazon Connect Participant Service APIs do not use \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"\u003eSignature Version 4 authentication\u003c/a\u003e.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendMessageResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: The authentication token associated with the connection.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ContentType\n                - Content\n              properties:\n                ContentType:\n                  description: The type of the content. Supported types are text/plain.\n                  type: string\n                  minLength: 1\n                  maxLength: 100\n                Content:\n                  description: The content of the message.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                ClientToken:\n                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n                  type: string\n                  maxLength: 500\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /participant/start-attachment-upload#X-Amz-Bearer:\n    post:\n      operationId: StartAttachmentUpload\n      description: Provides a pre-signed Amazon S3 URL in response for uploading the file directly to S3.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartAttachmentUploadResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters:\n        - name: X-Amz-Bearer\n          in: header\n          required: true\n          description: The authentication token associated with the participant's connection.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1000\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ContentType\n                - AttachmentSizeInBytes\n                - AttachmentName\n                - ClientToken\n              properties:\n                ContentType:\n                  description: 'Describes the MIME file type of the attachment. For a list of supported file types, see \u003ca href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits\"\u003eFeature specifications\u003c/a\u003e in the \u003ci\u003eAmazon Connect Administrator Guide\u003c/i\u003e.'\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                AttachmentSizeInBytes:\n                  description: The size of the attachment in bytes.\n                  type: integer\n                  minimum: 1\n                AttachmentName:\n                  description: A case-sensitive name of the attachment being uploaded.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n                ClientToken:\n                  description: A unique case sensitive identifier to support idempotency of request.\n                  type: string\n                  minLength: 1\n                  maxLength: 500\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CompleteAttachmentUploadResponse:\n      type: object\n      properties: {}\n    ArtifactId:\n      type: string\n      minLength: 1\n      maxLength: 256\n    AccessDeniedException: {}\n    InternalServerException: {}\n    ThrottlingException: {}\n    ValidationException: {}\n    ServiceQuotaExceededException: {}\n    ConflictException: {}\n    CreateParticipantConnectionResponse:\n      type: object\n      properties:\n        Websocket:\n          allOf:\n            - $ref: '#/components/schemas/Websocket'\n            - description: Creates the participant's websocket connection.\n        ConnectionCredentials:\n          allOf:\n            - $ref: '#/components/schemas/ConnectionCredentials'\n            - description: Creates the participant's connection credentials. The authentication token associated with the participant's connection.\n    ConnectionType:\n      type: string\n      enum:\n        - WEBSOCKET\n        - CONNECTION_CREDENTIALS\n    DisconnectParticipantResponse:\n      type: object\n      properties: {}\n    GetAttachmentResponse:\n      type: object\n      properties:\n        Url:\n          allOf:\n            - $ref: '#/components/schemas/PreSignedAttachmentUrl'\n            - description: The pre-signed URL using which file would be downloaded from Amazon S3 by the API caller.\n        UrlExpiry:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601Datetime'\n            - description: 'The expiration time of the URL in ISO timestamp. It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.'\n    GetTranscriptResponse:\n      type: object\n      properties:\n        InitialContactId:\n          allOf:\n            - $ref: '#/components/schemas/ContactId'\n            - description: 'The initial contact ID for the contact. '\n        Transcript:\n          allOf:\n            - $ref: '#/components/schemas/Transcript'\n            - description: The list of messages in the session.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.\n    ChatItemId:\n      type: string\n      minLength: 1\n      maxLength: 256\n    Instant:\n      type: string\n      minLength: 1\n      maxLength: 100\n    MostRecent:\n      type: integer\n      minimum: 0\n      maximum: 100\n    SendEventResponse:\n      type: object\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/ChatItemId'\n            - description: The ID of the response.\n        AbsoluteTime:\n          allOf:\n            - $ref: '#/components/schemas/Instant'\n            - description: '\u003cp\u003eThe time when the event was sent.\u003c/p\u003e \u003cp\u003eIt''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.\u003c/p\u003e'\n    SendMessageResponse:\n      type: object\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/ChatItemId'\n            - description: The ID of the message.\n        AbsoluteTime:\n          allOf:\n            - $ref: '#/components/schemas/Instant'\n            - description: '\u003cp\u003eThe time when the message was sent.\u003c/p\u003e \u003cp\u003eIt''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.\u003c/p\u003e'\n    StartAttachmentUploadResponse:\n      type: object\n      properties:\n        AttachmentId:\n          allOf:\n            - $ref: '#/components/schemas/ArtifactId'\n            - description: A unique identifier for the attachment.\n        UploadMetadata:\n          allOf:\n            - $ref: '#/components/schemas/UploadMetadata'\n            - description: Fields to be used while uploading the attachment.\n    ArtifactStatus:\n      type: string\n      enum:\n        - APPROVED\n        - REJECTED\n        - IN_PROGRESS\n    AttachmentIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ArtifactId'\n      minItems: 1\n      maxItems: 1\n    ContentType:\n      type: string\n      minLength: 1\n      maxLength: 255\n    AttachmentName:\n      type: string\n      minLength: 1\n      maxLength: 256\n    AttachmentItem:\n      type: object\n      properties:\n        ContentType:\n          allOf:\n            - $ref: '#/components/schemas/ContentType'\n            - description: 'Describes the MIME file type of the attachment. For a list of supported file types, see \u003ca href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits\"\u003eFeature specifications\u003c/a\u003e in the \u003ci\u003eAmazon Connect Administrator Guide\u003c/i\u003e.'\n        AttachmentId:\n          allOf:\n            - $ref: '#/components/schemas/ArtifactId'\n            - description: A unique identifier for the attachment.\n        AttachmentName:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentName'\n            - description: A case-sensitive name of the attachment being uploaded.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/ArtifactStatus'\n            - description: Status of the attachment.\n      description: The case-insensitive input to indicate standard MIME type that describes the format of the file that will be uploaded.\n    AttachmentSizeInBytes:\n      type: integer\n      minimum: 1\n    Attachments:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttachmentItem'\n    ChatContent:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    ChatContentType:\n      type: string\n      minLength: 1\n      maxLength: 100\n    ChatItemType:\n      type: string\n      enum:\n        - TYPING\n        - PARTICIPANT_JOINED\n        - PARTICIPANT_LEFT\n        - CHAT_ENDED\n        - TRANSFER_SUCCEEDED\n        - TRANSFER_FAILED\n        - MESSAGE\n        - EVENT\n        - ATTACHMENT\n        - CONNECTION_ACK\n    ClientToken:\n      type: string\n      maxLength: 500\n    NonEmptyClientToken:\n      type: string\n      minLength: 1\n      maxLength: 500\n    ParticipantToken:\n      type: string\n      minLength: 1\n      maxLength: 1000\n    CompleteAttachmentUploadRequest:\n      type: object\n      required:\n        - AttachmentIds\n        - ClientToken\n      title: CompleteAttachmentUploadRequest\n      properties:\n        AttachmentIds:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentIdList'\n            - description: A list of unique identifiers for the attachments.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyClientToken'\n            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n    ISO8601Datetime:\n      type: string\n    ConnectionCredentials:\n      type: object\n      properties:\n        ConnectionToken:\n          allOf:\n            - $ref: '#/components/schemas/ParticipantToken'\n            - description: The connection token.\n        Expiry:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601Datetime'\n            - description: '\u003cp\u003eThe expiration of the token.\u003c/p\u003e \u003cp\u003eIt''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.\u003c/p\u003e'\n      description: 'Connection credentials. '\n    ConnectionTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConnectionType'\n      minItems: 1\n    ContactId:\n      type: string\n      minLength: 1\n      maxLength: 256\n    CreateParticipantConnectionRequest:\n      type: object\n      required:\n        - Type\n      title: CreateParticipantConnectionRequest\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ConnectionTypeList'\n            - description: Type of connection information required.\n    Websocket:\n      type: object\n      properties:\n        Url:\n          allOf:\n            - $ref: '#/components/schemas/PreSignedConnectionUrl'\n            - description: The URL of the websocket.\n        ConnectionExpiry:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601Datetime'\n            - description: '\u003cp\u003eThe URL expiration timestamp in ISO date format.\u003c/p\u003e \u003cp\u003eIt''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.\u003c/p\u003e'\n      description: The websocket for the participant's connection.\n    DisconnectParticipantRequest:\n      type: object\n      title: DisconnectParticipantRequest\n      properties:\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n    DisplayName:\n      type: string\n      minLength: 1\n      maxLength: 256\n    GetAttachmentRequest:\n      type: object\n      required:\n        - AttachmentId\n      title: GetAttachmentRequest\n      properties:\n        AttachmentId:\n          allOf:\n            - $ref: '#/components/schemas/ArtifactId'\n            - description: A unique identifier for the attachment.\n    PreSignedAttachmentUrl:\n      type: string\n      minLength: 1\n      maxLength: 2000\n    MaxResults:\n      type: integer\n      minimum: 0\n      maximum: 100\n    NextToken:\n      type: string\n      minLength: 1\n      maxLength: 1000\n    ScanDirection:\n      type: string\n      enum:\n        - FORWARD\n        - BACKWARD\n    SortKey:\n      type: string\n      enum:\n        - DESCENDING\n        - ASCENDING\n    StartPosition:\n      type: object\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/ChatItemId'\n            - description: 'The ID of the message or event where to start. '\n        AbsoluteTime:\n          allOf:\n            - $ref: '#/components/schemas/Instant'\n            - description: '\u003cp\u003eThe time in ISO format where to start.\u003c/p\u003e \u003cp\u003eIt''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.\u003c/p\u003e'\n        MostRecent:\n          allOf:\n            - $ref: '#/components/schemas/MostRecent'\n            - description: 'The start position of the most recent message where you want to start. '\n      description: 'A filtering option for where to start. For example, if you sent 100 messages, start with message 50. '\n    GetTranscriptRequest:\n      type: object\n      title: GetTranscriptRequest\n      properties:\n        ContactId:\n          allOf:\n            - $ref: '#/components/schemas/ContactId'\n            - description: The contactId from the current contact chain for which transcript is needed.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of results to return in the page. Default: 10. '\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.\n        ScanDirection:\n          allOf:\n            - $ref: '#/components/schemas/ScanDirection'\n            - description: 'The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition. '\n        SortOrder:\n          allOf:\n            - $ref: '#/components/schemas/SortKey'\n            - description: 'The sort order for the records. Default: DESCENDING.'\n        StartPosition:\n          allOf:\n            - $ref: '#/components/schemas/StartPosition'\n            - description: A filtering option for where to start.\n    Transcript:\n      type: array\n      items:\n        $ref: '#/components/schemas/Item'\n    ParticipantId:\n      type: string\n      minLength: 1\n      maxLength: 256\n    ParticipantRole:\n      type: string\n      enum:\n        - AGENT\n        - CUSTOMER\n        - SYSTEM\n    Item:\n      type: object\n      properties:\n        AbsoluteTime:\n          allOf:\n            - $ref: '#/components/schemas/Instant'\n            - description: '\u003cp\u003eThe time when the message or event was sent.\u003c/p\u003e \u003cp\u003eIt''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.\u003c/p\u003e'\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/ChatContent'\n            - description: The content of the message or event.\n        ContentType:\n          allOf:\n            - $ref: '#/components/schemas/ChatContentType'\n            - description: The type of content of the item.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/ChatItemId'\n            - description: The ID of the item.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ChatItemType'\n            - description: 'Type of the item: message or event. '\n        ParticipantId:\n          allOf:\n            - $ref: '#/components/schemas/ParticipantId'\n            - description: The ID of the sender in the session.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The chat display name of the sender.\n        ParticipantRole:\n          allOf:\n            - $ref: '#/components/schemas/ParticipantRole'\n            - description: 'The role of the sender. For example, is it a customer, agent, or system.'\n        Attachments:\n          allOf:\n            - $ref: '#/components/schemas/Attachments'\n            - description: Provides information about the attachments.\n      description: 'An item - message or event - that has been sent. '\n    PreSignedConnectionUrl:\n      type: string\n      minLength: 1\n      maxLength: 2000\n    SendEventRequest:\n      type: object\n      required:\n        - ContentType\n      title: SendEventRequest\n      properties:\n        ContentType:\n          allOf:\n            - $ref: '#/components/schemas/ChatContentType'\n            - description: '\u003cp\u003eThe content type of the request. Supported types are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eapplication/vnd.amazonaws.connect.event.typing\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eapplication/vnd.amazonaws.connect.event.connection.acknowledged\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/ChatContent'\n            - description: 'The content of the event to be sent (for example, message text). This is not yet supported.'\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n    SendMessageRequest:\n      type: object\n      required:\n        - ContentType\n        - Content\n      title: SendMessageRequest\n      properties:\n        ContentType:\n          allOf:\n            - $ref: '#/components/schemas/ChatContentType'\n            - description: The type of the content. Supported types are text/plain.\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/ChatContent'\n            - description: The content of the message.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n    StartAttachmentUploadRequest:\n      type: object\n      required:\n        - ContentType\n        - AttachmentSizeInBytes\n        - AttachmentName\n        - ClientToken\n      title: StartAttachmentUploadRequest\n      properties:\n        ContentType:\n          allOf:\n            - $ref: '#/components/schemas/ContentType'\n            - description: 'Describes the MIME file type of the attachment. For a list of supported file types, see \u003ca href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits\"\u003eFeature specifications\u003c/a\u003e in the \u003ci\u003eAmazon Connect Administrator Guide\u003c/i\u003e.'\n        AttachmentSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentSizeInBytes'\n            - description: The size of the attachment in bytes.\n        AttachmentName:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentName'\n            - description: A case-sensitive name of the attachment being uploaded.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyClientToken'\n            - description: A unique case sensitive identifier to support idempotency of request.\n    UploadMetadata:\n      type: object\n      properties:\n        Url:\n          allOf:\n            - $ref: '#/components/schemas/UploadMetadataUrl'\n            - description: The pre-signed URL using which file would be downloaded from Amazon S3 by the API caller.\n        UrlExpiry:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601Datetime'\n            - description: 'The expiration time of the URL in ISO timestamp. It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.'\n        HeadersToInclude:\n          allOf:\n            - $ref: '#/components/schemas/UploadMetadataSignedHeaders'\n            - description: The headers to be provided while uploading the file to the URL.\n      description: Fields to be used while uploading the attachment.\n    UploadMetadataUrl:\n      type: string\n      minLength: 1\n      maxLength: 2000\n    UploadMetadataSignedHeaders:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/UploadMetadataSignedHeadersValue'\n    UploadMetadataSignedHeadersValue:\n      type: string\n      minLength: 1\n      maxLength: 256\n    UploadMetadataSignedHeadersKey:\n      type: string\n      minLength: 1\n      maxLength: 128\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "buildIR: make ir: path \"/participant/complete-attachment-upload#X-Amz-Bearer\": post: responses: walk: 481: \"application/json\": callback: save type: schema name conflict: \"CompleteAttachmentUploadApplicationJSON\"",
	"NotImplemented": [
		"allOf"
	]
}