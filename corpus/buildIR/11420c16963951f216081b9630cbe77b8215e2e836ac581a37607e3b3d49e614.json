{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CodeForBaltimore/Bmore-Responsive"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/api-docs/v2/swagger.json",
			"byteSize": 171688,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"servers\": [\n    {\n      \"description\": \"localhost\",\n      \"url\": \"http://localhost:3001\"\n    }\n  ],\n  \"info\": {\n    \"description\": \"A generalized contact management API.\",\n    \"version\": \"2.0.0\",\n    \"title\": \"Bmore Responsive\",\n    \"contact\": {\n      \"email\": \"hello@codeforbaltimore.org\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"unimplemented\",\n      \"description\": \"Endpoints not available as they are still under development.\"\n    },\n    {\n      \"name\": \"administration\",\n      \"description\": \"Endpoints related to application administration.\"\n    },\n    {\n      \"name\": \"read-only\",\n      \"description\": \"Endpoints related to read-only data access.\"\n    },\n    {\n      \"name\": \"authentication\",\n      \"description\": \"Endpoints related to user authentication.\"\n    },\n    {\n      \"name\": \"authorization\",\n      \"description\": \"Endpoints related to user authorization.\"\n    },\n    {\n      \"name\": \"operations\",\n      \"description\": \"Endpoints related to operational characteristics.\"\n    },\n    {\n      \"name\": \"developer\",\n      \"description\": \"Endpoints available to regular developers\"\n    },\n    {\n      \"name\": \"users\",\n      \"description\": \"Endpoints related to system users\"\n    },\n    {\n      \"name\": \"email\",\n      \"description\": \"Endpoints related to e-mail management\"\n    },\n    {\n      \"name\": \"userRole\",\n      \"description\": \"Endpoints related to userRole\"\n    },\n    {\n      \"name\": \"entities\",\n      \"description\": \"Endpoints related to entities\"\n    },\n    {\n      \"name\": \"contacts\",\n      \"description\": \"Endpoints related to contacts\"\n    },\n    {\n      \"name\": \"events\",\n      \"description\": \"Endpoints related to events\"\n    },\n    {\n      \"name\": \"questionnaires\",\n      \"description\": \"Endpoints related to questionnaires\"\n    },\n    {\n      \"name\": \"check-ins\",\n      \"description\": \"Endpoints related to check-ins\"\n    }\n  ],\n  \"security\": [\n    {\n      \"bearerAuth\": []\n    }\n  ],\n  \"paths\": {\n    \"/v2/health\": {\n      \"get\": {\n        \"security\": [],\n        \"tags\": [\n          \"operations\",\n          \"read-only\"\n        ],\n        \"summary\": \"Checks the health of the application; will be renamed to '/health'.\",\n        \"description\": \"The health of individual application components is verified.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The system healthcheck results.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HealthCheckResult\"\n                }\n              }\n            }\n          },\n          \"503\": {\n            \"description\": \"The system healthcheck results, when at least one component is unhealthy.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HealthCheckResult\"\n                },\n                \"example\": {\n                  \"uptime\": \"42:42:42\",\n                  \"environment\": \"dev\",\n                  \"version\": \"0.0.1\",\n                  \"requestId\": \"602e1bd9-3eb1-4a26-a0d1-6bf08e8c0a66\",\n                  \"checks\": [\n                    {\n                      \"name\": \"database\",\n                      \"status\": \"down\",\n                      \"message\": \"Connection error\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/security/authenticate\": {\n      \"post\": {\n        \"security\": [],\n        \"tags\": [\n          \"authentication\"\n        ],\n        \"summary\": \"Authenticates a user.\",\n        \"description\": \"The system authentication endpoint (NOTE - We should consider switching this to Basic auth, Base64-encoding the email/password).\",\n        \"requestBody\": {\n          \"description\": \"The provided credentials.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The successful authentication response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"email\",\n                      \"value\": \"Address provided is invalid\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/security/token/{email}\": {\n      \"post\": {\n        \"tags\": [\n          \"authentication\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Generates a token for a non-system user.\",\n        \"description\": \"Used for providing focused access to contacts who are not users of the overall system, and who do not have credentials\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"description\": \"E-mail address of the non-system user\",\n            \"example\": \"external@example.com\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The successful authentication response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"email\",\n                      \"value\": \"Address provided is invalid\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/roles\": {\n      \"get\": {\n        \"tags\": [\n          \"authorization\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all authorization roles.\",\n        \"description\": \"Retrieves all defined roles in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created roles.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RoleBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new authorization role.\",\n        \"description\": \"Creates a new role in the application that can subsequently be granted to users.\",\n        \"requestBody\": {\n          \"description\": \"The role to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created role.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"roleName\",\n                      \"value\": \"Content does not match regular expression '[a-zA-Z]\\\\w{3,}'\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The role 'role_viewer' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/roles/{roleName}\": {\n      \"parameters\": [\n        {\n          \"name\": \"roleName\",\n          \"description\": \"The name of the role to retrieve\",\n          \"example\": \"role_viewer\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"authorization\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified authorization role.\",\n        \"description\": \"Retrieves the detailed information for the specified role.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created role.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RoleViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"The role 'role_viewer' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies an authorization role.\",\n        \"description\": \"Modifies the non-permission information for the specified role.\",\n        \"requestBody\": {\n          \"description\": \"The role information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleDisplayData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified role.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RoleViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Resource not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"Resource type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"Resource not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified authorization role.\",\n        \"description\": \"Removes all information for the specified role.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The role was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"The role 'role_viewer' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource is in use.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The role 'role_viewer' is still granted\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/roles/{roleName}/addPermission\": {\n      \"parameters\": [\n        {\n          \"name\": \"roleName\",\n          \"description\": \"The name of the role to modify\",\n          \"example\": \"role_viewer\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Adds a permission to an authorization role.\",\n        \"description\": \"Adds a new permission to a role that grants access to a specific resource.\",\n        \"requestBody\": {\n          \"description\": \"The permission to add.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleResource\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified role.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"roleName\",\n                      \"value\": \"Content does not match regular expression '[a-zA-Z]\\\\w{3,}'\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"The role 'role_viewer' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The role already has the requested permission.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The permission 'GET:/roles/*' already exists for the role 'role_viewer'\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/roles/{roleName}/removePermission\": {\n      \"parameters\": [\n        {\n          \"name\": \"roleName\",\n          \"description\": \"The name of the role to modify\",\n          \"example\": \"role_viewer\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes a permission from an authorization role.\",\n        \"description\": \"Removes an existing permission from a role that granted access to a specific resource.\",\n        \"requestBody\": {\n          \"description\": \"The permission to remove.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleResource\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified role.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"roleName\",\n                      \"value\": \"Content does not match regular expression '[a-zA-Z]\\\\w{3,}'\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"The role 'role_viewer' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/role-grants/\": {\n      \"post\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Grants one or more roles to one or more system users.\",\n        \"description\": \"Grants system users the ability to access application endpoints.\",\n        \"requestBody\": {\n          \"description\": \"The grants to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"allOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/RoleId\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/UserId\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the resulting grants.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserRoleGrant\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"roleName\",\n                      \"value\": \"Content does not match regular expression '[a-zA-Z]\\\\w{3,}'\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"The role 'role_viewer' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/role-grants/contact/{email}\": {\n      \"post\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Grants a role to a non-system user.\",\n        \"description\": \"Grants the non-system user the ability to access application endpoints.\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"description\": \"E-mail address of the non-system user\",\n            \"example\": \"external@example.com\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The role to grant.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleId\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The grant was successfully created.\"\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"roleName\",\n                      \"value\": \"Content does not match regular expression '[a-zA-Z]\\\\w{3,}'\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"The role 'role_viewer' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"authorization\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the roles granted to a non-system user.\",\n        \"description\": \"Retrieves all roles granted to the non-system user.\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"description\": \"E-mail address of the user\",\n            \"example\": \"user@example.com\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The roles granted to the user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RoleId\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/role-grants/contact/{email}/revoke\": {\n      \"post\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Revokes a role from a user.\",\n        \"description\": \"Revokes a user's the ability to access specific  application endpoints.\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"description\": \"E-mail address of the user\",\n            \"example\": \"user@example.com\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The role to revoke.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleId\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The grant was successfully revoked.\"\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"roleName\",\n                      \"value\": \"Content does not match regular expression '[a-zA-Z]\\\\w{3,}'\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"role\"\n                    }\n                  ],\n                  \"message\": \"The role 'role_viewer' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/role-grants/{email}\": {\n      \"get\": {\n        \"tags\": [\n          \"authorization\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves roles granted to the user.\",\n        \"description\": \"Retrieves all roles granted to the user.\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"description\": \"E-mail address of the grantee\",\n            \"example\": \"user@example.com\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The roles granted to the user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RoleId\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"user\"\n                    }\n                  ],\n                  \"message\": \"The user 'user@example.com' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/role-grants/{email}/revoke\": {\n      \"post\": {\n        \"tags\": [\n          \"authorization\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Revokes a role from a user.\",\n        \"description\": \"Revokes a user's ability to access specific application endpoints.\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"description\": \"E-mail address of the grantee\",\n            \"example\": \"user@example.com\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The role to revoke.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleId\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The grant was successfully revoked.\"\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"roleName\",\n                      \"value\": \"Content does not match regular expression '[a-zA-Z]\\\\w{3,}'\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"user\"\n                    }\n                  ],\n                  \"message\": \"The user 'user@example.com' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/users\": {\n      \"get\": {\n        \"tags\": [\n          \"users\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all users.\",\n        \"description\": \"Retrieves all defined users in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"users\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new user.\",\n        \"description\": \"Creates a new user in the application that can subsequently be used to authenticate.\",\n        \"requestBody\": {\n          \"description\": \"The user to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"email\",\n                      \"value\": \"Content is not a valid e-mail address\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The user 'user@example.com' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/users/{email}\": {\n      \"parameters\": [\n        {\n          \"name\": \"email\",\n          \"description\": \"The e-mail address of a system user\",\n          \"example\": \"homer.simpson@example.com\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"users\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified user.\",\n        \"description\": \"Retrieves the detailed information for the user.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"user\"\n                    }\n                  ],\n                  \"message\": \"The user 'user@example.com' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"users\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies a user.\",\n        \"description\": \"Modifies the non-identifying information for the specified user.\",\n        \"requestBody\": {\n          \"description\": \"The user information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserContent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"user\"\n                    }\n                  ],\n                  \"message\": \"The user 'user@example.com' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"users\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified user.\",\n        \"description\": \"Removes all information for the user.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The user was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"user\"\n                    }\n                  ],\n                  \"message\": \"The user 'user@example.com' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/contacts\": {\n      \"get\": {\n        \"tags\": [\n          \"contacts\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all contacts.\",\n        \"description\": \"Retrieves all defined contacts in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created contacts.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContactBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"contacts\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new contact.\",\n        \"description\": \"Creates a new contact in the application that can subsequently be used for entity interactions.\",\n        \"requestBody\": {\n          \"description\": \"The contact to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContactData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created contact.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContactViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"primaryEmail\",\n                      \"value\": \"Content is not a valid e-mail address\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The contact 'ned_flanders' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/contacts/{contactId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"contactId\",\n          \"description\": \"The identifier of the contact\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"contacts\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified contact.\",\n        \"description\": \"Retrieves the detailed information for the contact.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created contact.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContactViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contact\"\n                    }\n                  ],\n                  \"message\": \"The contact 'ned_flanders' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"contacts\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies a contact.\",\n        \"description\": \"Modifies the non-identifying information for the specified contact.\",\n        \"requestBody\": {\n          \"description\": \"The contact information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContactContent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified contact.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContactViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contact\"\n                    }\n                  ],\n                  \"message\": \"The contact 'ned_flanders' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"contacts\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified contact.\",\n        \"description\": \"Removes all information for the contact.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The contact was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contact\"\n                    }\n                  ],\n                  \"message\": \"The contact 'ned_flanders' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource is in use.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The contact 'ned_flanders' is associated with the entity 'caresouth'\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/entity-types\": {\n      \"get\": {\n        \"tags\": [\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all entity types.\",\n        \"description\": \"Retrieves all defined entity types in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created entity types.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TypeReferenceBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new entity type.\",\n        \"description\": \"Creates a new entity type in the application that can subsequently be used for entity classification.\",\n        \"requestBody\": {\n          \"description\": \"The entity type to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TypeReferenceData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TypeReferenceViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"typeName\",\n                      \"value\": \"Content is not a valid name\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The entity type 'primary_care' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/entity-types/{typeId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"typeId\",\n          \"description\": \"The identifier of the entity type.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified entity type.\",\n        \"description\": \"Retrieves the detailed information for the entity type.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created entity type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TypeReferenceViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"The entity type 'primary_care' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies an entity type.\",\n        \"description\": \"Modifies the non-identifying information for the specified entity type.\",\n        \"requestBody\": {\n          \"description\": \"The entity type information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TypeReferenceContent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified entity type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TypeReferenceViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"The entity type 'primary_care' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified entity type.\",\n        \"description\": \"Removes all information for the entity type.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The entity type was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"The entity type 'primary_care' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource is in use.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The entity type 'primary_care' is associated with one or more entities\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/entities\": {\n      \"get\": {\n        \"tags\": [\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all entities.\",\n        \"description\": \"Retrieves all defined entities in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created entities.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/EntityBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new entity.\",\n        \"description\": \"Creates a new entity in the application that can subsequently be used for contact interactions.\",\n        \"requestBody\": {\n          \"description\": \"The entity to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EntityData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created entity.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EntityViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"typeName\",\n                      \"value\": \"Content is not a valid type name\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"The entity type 'primary_care' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The entity 'caresouth' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/entities/{entityId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"entityId\",\n          \"description\": \"The identifier of the entity.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified entity.\",\n        \"description\": \"Retrieves the detailed information for the entity.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created entity.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EntityViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"The entity 'caresouth' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies an entity.\",\n        \"description\": \"Modifies the non-identifying information for the specified entity.\",\n        \"requestBody\": {\n          \"description\": \"The entity information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EntityContent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified entity.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/EntityViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"The entity 'caresouth' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified entity.\",\n        \"description\": \"Removes all information for the entity.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The entity was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"The entity 'caresouth' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource is in use.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The entity 'caresouth' is still associated with a contact\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/contact-associations\": {\n      \"get\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all contact associations.\",\n        \"description\": \"Retrieves all defined contact associations in the application. Query  parameters can be used to filter the results by entity, contact, or  association type. Values provided will be treated as a logical `AND` when filtering.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"contactName\",\n            \"description\": \"The name of an associated contact used to filter results.\",\n            \"example\": \"ned_flanders\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^\\\\w{3,}$\"\n            }\n          },\n          {\n            \"name\": \"entityName\",\n            \"description\": \"The name of an associated entity used to filter results.\",\n            \"example\": \"caresouth\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^\\\\w{3,}$\"\n            }\n          },\n          {\n            \"name\": \"typeName\",\n            \"description\": \"The name of a contact association type used to filter results.\",\n            \"example\": \"primary_contact\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^\\\\w{3,}$\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created contact associations.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContactAssociationId\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new contact association.\",\n        \"description\": \"Creates a new contact association that relates a contact to an entity.\",\n        \"requestBody\": {\n          \"description\": \"The contact association to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContactAssociationId\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContactAssociationViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"typeName\",\n                      \"value\": \"Content is not a valid name\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"entityType\"\n                    }\n                  ],\n                  \"message\": \"Resource not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"An contact association for 'ned_flanders' as 'primary_contact' for 'caresouth' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/contact-associations/{contactId}/{entityId}/{typeId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"contactId\",\n          \"description\": \"The identifier of the contact.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        },\n        {\n          \"name\": \"entityId\",\n          \"description\": \"The identifier of the entity.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        },\n        {\n          \"name\": \"typeId\",\n          \"description\": \"The identifier of the association type.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"delete\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Deletes a contact association.\",\n        \"description\": \"Deletes a contact association that related a contact to an entity.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The contact association has been deleted.\"\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"typeName\",\n                      \"value\": \"Content is not a valid name\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contactAssociation\"\n                    }\n                  ],\n                  \"message\": \"The contact association 'caresouth:ned_flanders:primary_contact' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified contact association.\",\n        \"description\": \"Retrieves the detailed information for the contact association.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created contact association.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContactAssociationViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contactAssociation\"\n                    }\n                  ],\n                  \"message\": \"The contact association 'caresouth:ned_flanders:primary_contact' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/contact-association-types\": {\n      \"get\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all contact association types.\",\n        \"description\": \"Retrieves all defined contact association types in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created contact association types.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TypeReferenceBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new contact association type.\",\n        \"description\": \"Creates a new contact association type in the application that can subsequently be used for contact association classification.\",\n        \"requestBody\": {\n          \"description\": \"The contact association type to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TypeReferenceData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TypeReferenceViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"typeName\",\n                      \"value\": \"Content is not a valid name\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"A contact association type with the name 'primary_contact' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/contact-association-types/{typeId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"typeId\",\n          \"description\": \"The identifier of the association type.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified contact association type.\",\n        \"description\": \"Retrieves the detailed information for the contact association type.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created contact association type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TypeReferenceViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contactAssociationType\"\n                    }\n                  ],\n                  \"message\": \"The contact association type 'primary_contact' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies an contact association type.\",\n        \"description\": \"Modifies the non-identifying information for the specified contact association type.\",\n        \"requestBody\": {\n          \"description\": \"The contact association type information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TypeReferenceContent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified contact association type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TypeReferenceViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contactAssociationType\"\n                    }\n                  ],\n                  \"message\": \"The contact association type 'primary_contact' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"contacts\",\n          \"entities\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified contact association type.\",\n        \"description\": \"Removes all information for the contact association type.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The contact association type was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"contactAssociationType\"\n                    }\n                  ],\n                  \"message\": \"The contact association type 'primary_contact' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Resource is still in use.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The contact association type 'primary_contact' is used by contact associations\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/email\": {\n      \"post\": {\n        \"tags\": [\n          \"email\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Send one or more e-mail messages.\",\n        \"description\": \"Sends the e-mail messages generated from the provided template. The contact association type, contact and entity information are used to filter the recipients.\",\n        \"requestBody\": {\n          \"description\": \"The specification to use when generating e-mail messages.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EmailSpecification\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The number of e-mail messages generated for sending.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"sentMessageCount\"\n                  ],\n                  \"properties\": {\n                    \"sentMessageCount\": {\n                      \"type\": \"integer\",\n                      \"minimum\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"association.typeName\",\n                      \"value\": \"Type name is not a valid association type\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/email-templates\": {\n      \"get\": {\n        \"tags\": [\n          \"email\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all templates.\",\n        \"description\": \"Retrieves all defined e-mail templates in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created entities.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/EmailTemplateBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"email\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new e-mail template.\",\n        \"description\": \"Creates a new e-mail template in the application that can subsequently be used for contact interactions.\",\n        \"requestBody\": {\n          \"description\": \"The template to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EmailTemplateData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created template.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTemplateViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"name\",\n                      \"value\": \"Content is not a valid template name\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The template 'assisted_living' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/email-templates/{templateId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"templateId\",\n          \"description\": \"The identifier of the e-mail template.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"email\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified e-mail template.\",\n        \"description\": \"Retrieves the detailed information for the e-mail template.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created e-mail template.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTemplateViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"emailTemplate\"\n                    }\n                  ],\n                  \"message\": \"The e-mail template 'assisted_living' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"email\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies an e-mail template.\",\n        \"description\": \"Modifies the non-identifying information for the specified e-mail template.\",\n        \"requestBody\": {\n          \"description\": \"The e-mail template information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EmailTemplateContent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified e-mail template.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTemplateViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"emailTemplate\"\n                    }\n                  ],\n                  \"message\": \"The e-mail template 'assisted_living' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"email\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified e-mail template.\",\n        \"description\": \"Removes all information for the e-mail template.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The e-mail template was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"emailTemplate\"\n                    }\n                  ],\n                  \"message\": \"The e-mail template 'assisted_living' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/events\": {\n      \"get\": {\n        \"tags\": [\n          \"events\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all events.\",\n        \"description\": \"Retrieves all defined events in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created events.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/EventBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"events\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new event.\",\n        \"description\": \"Creates a new event in the application that can subsequently be used for check-in categorization.\",\n        \"requestBody\": {\n          \"description\": \"The event to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EventData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created event.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"eventName\",\n                      \"value\": \"Content is not a valid event name\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The event 'thing_in_2020' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/events/{eventId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"eventId\",\n          \"description\": \"The identifier of the event.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"events\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified event.\",\n        \"description\": \"Retrieves the detailed information for the event.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created event.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"event\"\n                    }\n                  ],\n                  \"message\": \"The event 'thing_in_2020' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"events\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies an event.\",\n        \"description\": \"Modifies the non-identifying information for the specified event.\",\n        \"requestBody\": {\n          \"description\": \"The event information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EventContent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the modified event.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"event\"\n                    }\n                  ],\n                  \"message\": \"The event 'thing_in_2020' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"events\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified event.\",\n        \"description\": \"Removes all information for the event.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The event was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"event\"\n                    }\n                  ],\n                  \"message\": \"The event 'thing_in_2020' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/questions\": {\n      \"get\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all questions.\",\n        \"description\": \"Retrieves all defined questions in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created questions.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/QuestionBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new question.\",\n        \"description\": \"Creates a new question in the application that can subsequently be used for questionnaire creation.\",\n        \"requestBody\": {\n          \"description\": \"The question to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QuestionData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created question.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QuestionViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"questionType\",\n                      \"value\": \"Content is not a valid question type\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The question 'Are you having a cow?' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/questions/{questionId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"questionId\",\n          \"description\": \"The identifier of the question.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified question.\",\n        \"description\": \"Retrieves the detailed information for the question.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created question.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QuestionViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"question\"\n                    }\n                  ],\n                  \"message\": \"The question 'Are you having a cow?' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified question.\",\n        \"description\": \"Removes all information for the question.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The question was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"question\"\n                    }\n                  ],\n                  \"message\": \"The question 'Are you having a cow?' was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource is in use.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The question 'Are you having a cow?' is in use\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/questionnaires\": {\n      \"get\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves all questionnaires.\",\n        \"description\": \"Retrieves all defined questionnaires in the application.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created questionnaires.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/QuestionnaireBasicViewData\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Creates a new questionnaire.\",\n        \"description\": \"Creates a new questionnaire in the application.\",\n        \"requestBody\": {\n          \"description\": \"The questionnaire to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QuestionnaireData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created questionnaire.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QuestionnaireViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"questionType\",\n                      \"value\": \"Content is not a valid question type\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The questionnaire 'Check-in questions for 2020 event' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/questionnaires/{questionnaireId}\": {\n      \"parameters\": [\n        {\n          \"name\": \"questionnaireId\",\n          \"description\": \"The identifier of the question.\",\n          \"example\": \"123e4567-e89b-12d3-a456-426614174000\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"read-only\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Retrieves the specified questionnaire.\",\n        \"description\": \"Retrieves the detailed information for the questionnaire.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created questionnaire.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QuestionnaireViewData\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"questionnaire\"\n                    }\n                  ],\n                  \"message\": \"The specified questionnaire was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Modifies a questionnaire.\",\n        \"description\": \"Modifies the non-identifying information for the specified \\nquestionnaire. The order of the questions can be changed in addition to\\nadding/removing questions. All modifications create a new questionnaire \\nrevision.\",\n        \"requestBody\": {\n          \"description\": \"The questionnaire information to modify.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QuestionnaireData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the created questionnaire.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QuestionnaireViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"description\",\n                      \"value\": \"Content is not a valid description\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"questionnaire\"\n                    }\n                  ],\n                  \"message\": \"The specified questionnaire was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The question 'Are you having a cow?' already exists in this questionnaire\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"questionnaires\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Removes the specified questionnaire.\",\n        \"description\": \"Removes all information for the questionnaire.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The questionnaire was successfully deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The requested resource was not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"resource_type\",\n                      \"value\": \"questionnaire\"\n                    }\n                  ],\n                  \"message\": \"The specified questionnaire was not found\",\n                  \"statusCode\": 404\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"The resource is in use.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"The question 'Are you having a cow?' is in use\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/v2/check-ins\": {\n      \"post\": {\n        \"tags\": [\n          \"check-ins\",\n          \"administration\",\n          \"unimplemented\"\n        ],\n        \"summary\": \"Generates a check-in response to a questionnare.\",\n        \"description\": \"Creates a check-in response in the application.\",\n        \"requestBody\": {\n          \"description\": \"The check-in information to store.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CheckInData\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The data corresponding to the saved check-in.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CheckInViewData\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid content provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"details\": [\n                    {\n                      \"name\": \"questionnaireVersion\",\n                      \"value\": \"Content is not a valid number\"\n                    }\n                  ],\n                  \"message\": \"Request invalid\",\n                  \"statusCode\": 400\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"The resource already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"message\": \"A check-in for the questionnaire 'Check-in questions for 2020 event' already exists\",\n                  \"statusCode\": 409\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"responses\": {\n      \"Unauthorized\": {\n        \"description\": \"The provided credentials were invalid.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            },\n            \"example\": {\n              \"message\": \"Invalid credentials\",\n              \"statusCode\": 401\n            }\n          }\n        }\n      },\n      \"Forbidden\": {\n        \"description\": \"The user does not have the permissions needed to access the API.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            },\n            \"example\": {\n              \"message\": \"Access not permitted\",\n              \"statusCode\": 403\n            }\n          }\n        }\n      },\n      \"ServerError\": {\n        \"description\": \"The server was unable to process the request.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponse\"\n            },\n            \"example\": {\n              \"message\": \"Request processing failed\",\n              \"statusCode\": 500\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"HealthCheckData\": {\n        \"type\": \"object\",\n        \"description\": \"The health status of an application component.\",\n        \"required\": [\n          \"name\",\n          \"status\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the component.\",\n            \"example\": \"database\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"healthy\",\n              \"unhealthy\"\n            ],\n            \"description\": \"Whether the component is healthy or not.\",\n            \"example\": \"healthy\"\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"The detailed health message (if applicable).\",\n            \"example\": \"N/A\"\n          }\n        }\n      },\n      \"HealthCheckResult\": {\n        \"type\": \"object\",\n        \"description\": \"The health status of the application.\",\n        \"required\": [\n          \"uptime\",\n          \"environment\",\n          \"version\",\n          \"requestId\",\n          \"checks\"\n        ],\n        \"properties\": {\n          \"uptime\": {\n            \"type\": \"string\",\n            \"description\": \"The amount of time this server has been running, expressed as a sequence of integers of decreasing time units; unused units (for example, years) will not be included.\",\n            \"example\": \"42:42:42\"\n          },\n          \"environment\": {\n            \"type\": \"string\",\n            \"description\": \"The environment in which the application is deployed.\",\n            \"example\": \"dev\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"The semantic version of the deployed application.\",\n            \"example\": \"0.0.1\"\n          },\n          \"requestId\": {\n            \"type\": \"string\",\n            \"description\": \"A unique identifier for the health request.\",\n            \"format\": \"uuid\",\n            \"example\": \"602e1bd9-3eb1-4a26-a0d1-6bf08e8c0a66\"\n          },\n          \"checks\": {\n            \"type\": \"array\",\n            \"description\": \"The health status of the individual components.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/HealthCheckData\"\n            }\n          }\n        }\n      },\n      \"LoginRequest\": {\n        \"type\": \"object\",\n        \"description\": \"The request used to authenticate.\",\n        \"required\": [\n          \"email\",\n          \"password\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The user's e-mail address.\",\n            \"format\": \"email\",\n            \"example\": \"example@example.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"The user's authentication credentials.\",\n            \"example\": \"somePassword\"\n          }\n        }\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"description\": \"The result of an authentication request.\",\n        \"required\": [\n          \"token\",\n          \"expiresAt\"\n        ],\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"description\": \"The JWT content for subsequent authorization.\",\n            \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M\"\n          },\n          \"expiresAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"NVPair\": {\n        \"type\": \"object\",\n        \"description\": \"An ad hoc name-value pair\",\n        \"required\": [\n          \"name\",\n          \"value\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The reference name for the pair\",\n            \"maxLength\": 64,\n            \"minLength\": 2,\n            \"example\": \"refName\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The referenced value\",\n            \"maxLength\": 256,\n            \"minLength\": 1,\n            \"example\": \"example value\"\n          }\n        }\n      },\n      \"ErrorResponse\": {\n        \"type\": \"object\",\n        \"description\": \"Content format for error responses\",\n        \"required\": [\n          \"message\",\n          \"statusCode\"\n        ],\n        \"properties\": {\n          \"details\": {\n            \"type\": \"array\",\n            \"description\": \"Arbitrary name-value pairs associated with the error\",\n            \"maximum\": 10,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NVPair\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"The error message\"\n          },\n          \"statusCode\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"minimum\": 100,\n            \"maximum\": 600,\n            \"exclusiveMaximum\": true,\n            \"description\": \"The HTTP status code associated with the error\"\n          }\n        }\n      },\n      \"RoleId\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of the role.\",\n        \"required\": [\n          \"roleName\"\n        ],\n        \"properties\": {\n          \"roleName\": {\n            \"type\": \"string\",\n            \"pattern\": \"^[a-zA-Z]\\\\w{3,}$\",\n            \"description\": \"The name of the role.\",\n            \"example\": \"role_viewer\"\n          }\n        }\n      },\n      \"RoleDisplayData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines authorization role display data.\",\n        \"required\": [\n          \"description\"\n        ],\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"The description of the role.\",\n            \"example\": \"Users with this role can view roles\"\n          }\n        }\n      },\n      \"RoleContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when modifying an authorization role.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/RoleDisplayData\"\n          }\n        ]\n      },\n      \"RoleResource\": {\n        \"type\": \"object\",\n        \"description\": \"The resource that a role is intended to grant access to.\",\n        \"required\": [\n          \"methods\",\n          \"path\"\n        ],\n        \"properties\": {\n          \"methods\": {\n            \"type\": \"array\",\n            \"description\": \"The HTTP methods corresponding to this role.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"DELETE\",\n                \"GET\",\n                \"POST\",\n                \"PUT\"\n              ],\n              \"description\": \"An HTTP method for the corresponding resource endpoint.\",\n              \"example\": \"GET\"\n            }\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"The relative path to the resource endpoint to grant.\",\n            \"example\": \"/roles/*\"\n          }\n        }\n      },\n      \"RoleData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating an authorization role.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/RoleId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/RoleContent\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/RoleResourceData\"\n          }\n        ]\n      },\n      \"RoleBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"A minimal read-only view of an authorization role.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/RoleId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/RoleDisplayData\"\n          }\n        ]\n      },\n      \"RoleViewData\": {\n        \"type\": \"object\",\n        \"description\": \"A  read-only view of an authorization role.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/RoleId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/RoleData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"RoleResourceData\": {\n        \"description\": \"Data for an authorization role and all associated resources.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/RoleDisplayData\"\n          },\n          {\n            \"type\": \"object\",\n            \"description\": \"The role's associated resources.\",\n            \"properties\": {\n              \"resources\": {\n                \"type\": \"array\",\n                \"description\": \"The granted resources.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RoleResource\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"UserRoleGrant\": {\n        \"type\": \"object\",\n        \"description\": \"An authorization role\",\n        \"required\": [\n          \"roleId\",\n          \"userId\"\n        ],\n        \"properties\": {\n          \"roleId\": {\n            \"$ref\": \"#/components/schemas/RoleId\"\n          },\n          \"userId\": {\n            \"$ref\": \"#/components/schemas/UserId\"\n          }\n        }\n      },\n      \"AuditData\": {\n        \"type\": \"object\",\n        \"description\": \"The audit information for data in the application.\",\n        \"readOnly\": true,\n        \"required\": [\n          \"createdAt\",\n          \"updatedAt\"\n        ],\n        \"properties\": {\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"The time the referenced object was created.\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"The time the referenced object was last modified.\",\n            \"example\": \"2020-01-21T13:45:52.348Z\"\n          }\n        }\n      },\n      \"PhoneNumber\": {\n        \"type\": \"object\",\n        \"description\": \"A phone number.\",\n        \"required\": [\n          \"countryCode\",\n          \"number\"\n        ],\n        \"properties\": {\n          \"countryCode\": {\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\d{1,4}$\",\n            \"description\": \"The country code for the phone number.\",\n            \"example\": \"98\"\n          },\n          \"number\": {\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\d{6,}$\",\n            \"description\": \"The full in-country representation for the phone number.\",\n            \"example\": \"5551212\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\w{3,}$\",\n            \"example\": \"Work\"\n          }\n        }\n      },\n      \"UserId\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of a user.\",\n        \"required\": [\n          \"email\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"The user's e-mail address\",\n            \"example\": \"homer.simpson@example.com\"\n          }\n        }\n      },\n      \"UserDisplayData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines user display data.\",\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"The text to be displayed to represent the user\",\n            \"example\": \"Homer Simpson\"\n          }\n        }\n      },\n      \"UserContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when modifying a user.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/UserDisplayData\"\n          }\n        ],\n        \"properties\": {\n          \"phone\": {\n            \"$ref\": \"#/components/schemas/PhoneNumber\"\n          },\n          \"attributes\": {\n            \"type\": \"array\",\n            \"description\": \"Arbitrary name-value pairs associated with the user\",\n            \"maximum\": 10,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NVPair\"\n            }\n          }\n        }\n      },\n      \"UserData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating a user.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/UserId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UserContent\"\n          }\n        ]\n      },\n      \"UserBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the minimal read-only content retrieved for a user.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/UserId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UserDisplayData\"\n          }\n        ]\n      },\n      \"UserViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for a user.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/UserId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UserData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"ContactId\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of a contact.\",\n        \"required\": [\n          \"contactId\"\n        ],\n        \"properties\": {\n          \"contactId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of a contact\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"ContactDisplayData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines contact display data.\",\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"The text to be displayed to represent the contact.\",\n            \"example\": \"Ned Flanders, Esq.\"\n          }\n        }\n      },\n      \"ContactContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when modifying a contact.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ContactDisplayData\"\n          }\n        ],\n        \"required\": [\n          \"primaryEmail\",\n          \"primaryPhone\"\n        ],\n        \"properties\": {\n          \"primaryEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"Primary e-mail address for a contact.\",\n            \"example\": \"ned.flanders@example.com\"\n          },\n          \"additionalEmails\": {\n            \"type\": \"array\",\n            \"description\": \"Additional e-mail addresses associated with a contact.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"email\",\n              \"description\": \"An additional e-mail address for a contact.\",\n              \"example\": \"nflanders@example.com\"\n            }\n          },\n          \"primaryPhoneNumber\": {\n            \"$ref\": \"#/components/schemas/PhoneNumber\"\n          },\n          \"additionalPhoneNumbers\": {\n            \"type\": \"array\",\n            \"description\": \"Additional phone numbers associated with a contact.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PhoneNumber\"\n            }\n          }\n        }\n      },\n      \"ContactData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating a contact.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ContactContent\"\n          }\n        ]\n      },\n      \"ContactBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the minimal read-only content retrieved for a contact.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ContactId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ContactDisplayData\"\n          }\n        ]\n      },\n      \"ContactViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for a contact.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ContactId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ContactData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"TypeReferenceId\": {\n        \"type\": \"object\",\n        \"description\": \"An identifier for generic type information for classification.\",\n        \"required\": [\n          \"typeId\"\n        ],\n        \"properties\": {\n          \"typeId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of a classifying type\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"TypeReferenceDisplayData\": {\n        \"type\": \"object\",\n        \"description\": \"Descriptive type information for classification.\",\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"The text to be displayed to represent the type.\",\n            \"example\": \"Primary Care\"\n          }\n        }\n      },\n      \"TypeReferenceContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the type information for modification.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceDisplayData\"\n          }\n        ]\n      },\n      \"TypeReferenceData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the information for creating a type reference.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceContent\"\n          }\n        ]\n      },\n      \"TypeReferenceBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the minimal read-only content retrieved for a type reference.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceDisplayData\"\n          }\n        ]\n      },\n      \"TypeReferenceViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for a type reference.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceContent\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"LocalAddress\": {\n        \"type\": \"object\",\n        \"description\": \"Mailing address or location.\",\n        \"required\": [\n          \"streetAddress\",\n          \"city\",\n          \"state\",\n          \"postalCode\"\n        ],\n        \"properties\": {\n          \"streetAddress\": {\n            \"type\": \"array\",\n            \"description\": \"The street address (can be multiple lines).\",\n            \"items\": {\n              \"minItems\": 1,\n              \"maxItems\": 4,\n              \"type\": \"string\",\n              \"example\": \"123 Anyplace St.\"\n            }\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"description\": \"The city where the address is located.\",\n            \"example\": \"Baltimore\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"description\": \"The state where the address is located.\",\n            \"example\": \"MD\"\n          },\n          \"postalCode\": {\n            \"type\": \"string\",\n            \"description\": \"The postal code corresponding to the address.\",\n            \"example\": \"12345\"\n          }\n        }\n      },\n      \"EntityId\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of an entity.\",\n        \"required\": [\n          \"entityId\"\n        ],\n        \"properties\": {\n          \"entityId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of an entity\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"EntityDisplayData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines entity display data.\",\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"The text to be displayed to represent the entity.\",\n            \"example\": \"CareSouth Assisted Living\"\n          }\n        }\n      },\n      \"EntityContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when modifying an entity.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EntityDisplayData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceId\"\n          }\n        ],\n        \"required\": [\n          \"streetAddress\"\n        ],\n        \"properties\": {\n          \"streetAddress\": {\n            \"$ref\": \"#/components/schemas/LocalAddress\"\n          },\n          \"mailingAddress\": {\n            \"$ref\": \"#/components/schemas/LocalAddress\"\n          }\n        }\n      },\n      \"EntityData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating an entity.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EntityContent\"\n          }\n        ]\n      },\n      \"EntityBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the minimal read-only content retrieved for an entity.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EntityId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/EntityDisplayData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/TypeReferenceId\"\n          }\n        ]\n      },\n      \"EntityViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for an entity.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EntityId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/EntityData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"ContactAssociationId\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of an association between a contact and an entity.\",\n        \"required\": [\n          \"entity\",\n          \"contact\",\n          \"associationType\"\n        ],\n        \"properties\": {\n          \"entity\": {\n            \"$ref\": \"#/components/schemas/EntityId\"\n          },\n          \"contact\": {\n            \"$ref\": \"#/components/schemas/ContactId\"\n          },\n          \"associationType\": {\n            \"$ref\": \"#/components/schemas/TypeReferenceId\"\n          }\n        }\n      },\n      \"ContactAssociationViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the details of an association between a contact and an entity.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ],\n        \"required\": [\n          \"entity\",\n          \"contact\",\n          \"associationType\"\n        ],\n        \"properties\": {\n          \"entity\": {\n            \"$ref\": \"#/components/schemas/EntityData\"\n          },\n          \"contact\": {\n            \"$ref\": \"#/components/schemas/ContactData\"\n          },\n          \"associationType\": {\n            \"$ref\": \"#/components/schemas/TypeReferenceData\"\n          }\n        }\n      },\n      \"EmailSpecification\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the specification for sending an e-mail.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EmailTemplateId\"\n          }\n        ],\n        \"properties\": {\n          \"entities\": {\n            \"type\": \"array\",\n            \"maxLength\": 32,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EntityId\"\n            }\n          },\n          \"contacts\": {\n            \"type\": \"array\",\n            \"maxLength\": 32,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ContactId\"\n            }\n          },\n          \"entityTypes\": {\n            \"type\": \"array\",\n            \"maxLength\": 32,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TypeReferenceId\"\n            }\n          },\n          \"associationTypes\": {\n            \"type\": \"array\",\n            \"maxLength\": 32,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TypeReferenceId\"\n            }\n          }\n        }\n      },\n      \"EmailTemplateId\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of a e-mail template.\",\n        \"required\": [\n          \"templateId\"\n        ],\n        \"properties\": {\n          \"templateId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of the template\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"EmailTemplateDisplayData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines e-mail template display data.\",\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"The text to be displayed to represent the template.\",\n            \"example\": \"Assisted Living Check-In\"\n          }\n        }\n      },\n      \"EmailTemplateContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when modifying an e-mail template.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EmailTemplateDisplayData\"\n          }\n        ],\n        \"required\": [\n          \"subjectTemplate\",\n          \"bodyTemplate\"\n        ],\n        \"properties\": {\n          \"subjectTemplate\": {\n            \"type\": \"string\",\n            \"description\": \"A Markdown template for an e-mail message subject. Substitution fields should be included \\nusing double-brace notation, and must be named  using JSON object notation patterns \\n(for example, `{{entity.name}}`).\\n\",\n            \"example\": \"{{event.type}} Check-in\"\n          },\n          \"bodyTemplate\": {\n            \"type\": \"string\",\n            \"description\": \"A Markdown template for an e-mail message body. Substitution fields should be included \\nusing double-brace notation, and must be named  using JSON object notation patterns \\n(for example, `{{entity.name}}`).\\n\",\n            \"example\": \"Greetings, {{contact.displayName}}!\\n\\nClick [here](https://example.com/login) to log in!\\n\"\n          }\n        }\n      },\n      \"EmailTemplateData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating an e-mail template.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EmailTemplateContent\"\n          }\n        ]\n      },\n      \"EmailTemplateBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the basic view of an e-mail template.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EmailTemplateId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/EmailTemplateDisplayData\"\n          }\n        ]\n      },\n      \"EmailTemplateViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the details of an e-mail template.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EmailTemplateId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/EmailTemplateData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"EventId\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of an event.\",\n        \"required\": [\n          \"eventId\"\n        ],\n        \"properties\": {\n          \"eventId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of the template\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"EventDisplayData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines event display data.\",\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"The text to be displayed to represent the event.\",\n            \"example\": \"Big Health Event\"\n          }\n        }\n      },\n      \"EventContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when modifying an event.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EventDisplayData\"\n          }\n        ],\n        \"properties\": {\n          \"startDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"description\": \"Start date of the event\"\n          },\n          \"endDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"description\": \"Start date of the event\"\n          }\n        }\n      },\n      \"EventData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating an event.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EventContent\"\n          }\n        ]\n      },\n      \"EventBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the minimal read-only content retrieved for an event.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EventId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/EventDisplayData\"\n          }\n        ]\n      },\n      \"EventViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for an event.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/EventId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/EventData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"QuestionIdData\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of a question for a questionnaire.\",\n        \"required\": [\n          \"questionId\"\n        ],\n        \"properties\": {\n          \"questionId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of the question\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"QuestionBasicContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the data used when creating a question for a questionnaire.\",\n        \"required\": [\n          \"questionText\",\n          \"questionType\",\n          \"required\"\n        ],\n        \"properties\": {\n          \"questionText\": {\n            \"type\": \"string\",\n            \"description\": \"Information that will be displayed to the questionnaire recipient\",\n            \"maxLength\": 1024,\n            \"minLength\": 3,\n            \"example\": \"Are you having a cow?\"\n          },\n          \"questionType\": {\n            \"type\": \"string\",\n            \"description\": \"Identifies the type of question; this is used for both validation and rendering.\",\n            \"example\": \"boolean\",\n            \"enum\": [\n              \"informational\",\n              \"boolean\",\n              \"short-text\",\n              \"long-text\",\n              \"single-select\",\n              \"multi-select\"\n            ]\n          },\n          \"required\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the question must be answered. This should always be false for an\\ninformational question\",\n            \"default\": false\n          }\n        }\n      },\n      \"QuestionContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the data used when creating a question for a questionnaire.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionBasicContent\"\n          }\n        ],\n        \"properties\": {\n          \"options\": {\n            \"type\": \"array\",\n            \"example\": [\n              \"Yes\",\n              \"No\"\n            ],\n            \"items\": {\n              \"description\": \"The values to display as potential answers for a question. Values can only be \\nprovided for boolean, single-selct or multi-select question types.\",\n              \"uniqueItems\": true,\n              \"maxItems\": 16,\n              \"type\": \"string\"\n            }\n          },\n          \"allowOther\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether an 'Other' choice should be presented as part of a \\nsingle-select or multi-select option list. This must be false for all other \\nquestion types.\",\n            \"default\": false\n          }\n        }\n      },\n      \"QuestionData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating a question.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionContent\"\n          }\n        ]\n      },\n      \"QuestionBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for a question.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionIdData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QuestionBasicContent\"\n          }\n        ]\n      },\n      \"QuestionViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for a question.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionIdData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QuestionContent\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ]\n      },\n      \"QuestionnaireIdData\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of a questionnaire.\",\n        \"required\": [\n          \"questionnaireId\"\n        ],\n        \"properties\": {\n          \"questionnaireId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of the questionnaire\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"QuestionnaireContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content to use when creating or modifying a questionnaire.\",\n        \"required\": [\n          \"description\",\n          \"questions\"\n        ],\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"Check-in questions for 2020 event\"\n          },\n          \"questions\": {\n            \"type\": \"array\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/QuestionIdData\"\n            }\n          },\n          \"associatedEvents\": {\n            \"type\": \"array\",\n            \"maxLength\": 32,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EventId\"\n            }\n          }\n        }\n      },\n      \"QuestionnaireData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content that can be provided when creating a questionnaire.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionnaireContent\"\n          }\n        ]\n      },\n      \"QuestionnaireViewContent\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content to use when creating or modifying a questionnaire.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionnaireContent\"\n          }\n        ]\n      },\n      \"QuestionnaireBasicViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the basic read-only content retrieved for a questionnaire.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionnaireIdData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QuestionnaireContent\"\n          }\n        ],\n        \"properties\": {\n          \"version\": {\n            \"type\": \"integer\",\n            \"description\": \"The version of the questionnaire.\",\n            \"readOnly\": true,\n            \"minimum\": 1,\n            \"example\": 3\n          }\n        }\n      },\n      \"QuestionnaireViewData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the read-only content retrieved for a questionnaire.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionnaireIdData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QuestionnaireViewContent\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          }\n        ],\n        \"properties\": {\n          \"version\": {\n            \"type\": \"integer\",\n            \"description\": \"The version of the questionnaire.\",\n            \"readOnly\": true,\n            \"minimum\": 1,\n            \"example\": 3\n          }\n        }\n      },\n      \"CheckInIdData\": {\n        \"type\": \"object\",\n        \"description\": \"The identifier of a check-in.\",\n        \"required\": [\n          \"checkInId\"\n        ],\n        \"properties\": {\n          \"checkInId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"The system-generated identifier of the questionnaire\",\n            \"pattern\": \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\",\n            \"example\": \"123e4567-e89b-12d3-a456-426614174000\"\n          }\n        }\n      },\n      \"QuestionResponse\": {\n        \"type\": \"object\",\n        \"description\": \"The response to a question\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionIdData\"\n          }\n        ],\n        \"required\": [\n          \"responses\"\n        ],\n        \"properties\": {\n          \"additionalValue\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the answer provided was an additional (user-provided) value not in the original options.\",\n            \"default\": false,\n            \"example\": true\n          },\n          \"responses\": {\n            \"type\": \"array\",\n            \"maximum\": 16,\n            \"minimum\": 1,\n            \"example\": [\n              \"Things are going...\"\n            ],\n            \"items\": {\n              \"type\": \"string\",\n              \"maxLength\": 1024,\n              \"minLength\": 1\n            }\n          }\n        }\n      },\n      \"CheckInData\": {\n        \"type\": \"object\",\n        \"description\": \"Defines the content to use when creating a check-in.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QuestionnaireIdData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/EntityId\"\n          }\n        ],\n        \"required\": [\n          \"questionnaireVersion\",\n          \"contact\"\n        ],\n        \"properties\": {\n          \"questionnaireVersion\": {\n            \"type\": \"integer\",\n            \"description\": \"The version of the questionnaire.\",\n            \"minimum\": 1,\n            \"example\": 3\n          },\n          \"events\": {\n            \"type\": \"array\",\n            \"maxLength\": 32,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EventId\"\n            }\n          },\n          \"answeredQuestions\": {\n            \"type\": \"array\",\n            \"minLength\": 1,\n            \"maxLength\": 32,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/QuestionResponse\"\n            }\n          }\n        }\n      },\n      \"CheckInViewData\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CheckInIdData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AuditData\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/CheckInData\"\n          }\n        ],\n        \"required\": [\n          \"creatorEmail\"\n        ],\n        \"properties\": {\n          \"creatorEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"The e-mail address of the user who performed the check-in.\",\n            \"example\": \"ned.flanders@example.com\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/CodeForBaltimore/Bmore-Responsive@36629db1c4c25da6bec4bb0dacad71a94a4950ca/-/blob/src/api-docs/v2/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/CodeForBaltimore/Bmore-Responsive/blob/36629db1c4c25da6bec4bb0dacad71a94a4950ca/src/api-docs/v2/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v2/email-templates/{templateId}\": get: responses: 200: contents: application/json: generate schema: allOf: schema type mismatch: object and "
}