{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/journey.io/openapi.yaml",
			"byteSize": 106886,
			"content": "openapi: 3.0.3\ninfo:\n  x-ballerina-display:\n      label: journey.io\n      iconPath: \"icon.png\"\n  title: journy.io API docs\n  description: \"This is a generated connector for [Journey.io API v1.0.0](https://www.journey.io/) OpenAPI specification.\n\n  The journy.io API is organized around REST. Our API has predictable resource-oriented URLs, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\"\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n  \n    Create a [Journy.io account](https://www.journey.io) and obtain the API Key following [this guide](https://developers.journy.io/#section/Authentication).\n  version: 1.0.0\n  x-logo:\n    url: ./developers.png\n    altText: Journy.io\n  termsOfService: 'https://www.journy.io/terms-of-use/'\n  contact:\n    name: Support\n    url: 'https://help.journy.io'\n    email: hi@journy.io\nexternalDocs:\n  description: API Documentation\n  url: 'https://developers.journy.io'\nservers:\n  - description: Production\n    url: 'https://api.journy.io'\ntags:\n  - name: Users\n    description: Endpoints for creating or updating users\n  - name: Accounts\n    description: Endpoints for creating or updating accounts\n  - name: Events\n    description: Endpoints for adding events\n  - name: Websites\n    description: Endpoints for managing websites\n  - name: Validation\n    description: Endpoints for validating API keys\nsecurity:\n  - api_key: []\n\npaths:\n  /link:\n    post:\n      description: Endpoint used to link web activity to a user.\n      summary: Link web activity to user\n      operationId: link\n      x-key-permissions:\n        - TrackData\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            await client.link({\n              deviceId: request.cookies[\"__journey\"],\n\n              userId: request.user.id,\n              // or\n              email: request.user.email,\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003elink([\n                \"deviceId\" =\u003e \"deviceId\",\n\n                \"userId\" =\u003e \"userId\",\n                // or\n                \"email\" =\u003e \"email\",\n            ]);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.user_identified import UserIdentified\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            user = UserIdentified(\"userId\", \"name@domain.tld\")\n            # or\n            user = UserIdentified.by_user_id(\"userId\")\n            # or\n            user = UserIdentified.by_email(\"name@domain.tld\")\n\n            client.link(user, \"deviceId\")\n      tags:\n        - Users\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Link web activity to user\n              required:\n                - deviceId\n                - identification\n              properties:\n                deviceId:\n                  type: string\n                  format: non-empty-string\n                identification:\n                  type: object\n                  description: 'User identification requires a userId, email or both'\n                  properties:\n                    email:\n                      type: string\n                      format: email\n                      description: Email address of the user\n                    userId:\n                      type: string\n                      format: user-id\n                      description: Unique identifier for the user in your database\n                  minProperties: 1\n      responses:\n        '201':\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The object was created\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '400':\n          description: 'Bad request, some fields or parameters are incorrect'\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - type: object\n                        description: \u003e-\n                          The basic response containing the unique ID of the\n                          request and the response status\n                        required:\n                          - meta\n                        properties:\n                          meta:\n                            type: object\n                            required:\n                              - requestId\n                              - status\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                      - type: object\n                        description: The error message should specify what cause the error\n                        required:\n                          - message\n                        properties:\n                          message:\n                            type: string\n                  - type: object\n                    description: Specify the fields and/ or parameters that had errors\n                    required:\n                      - errors\n                    properties:\n                      errors:\n                        type: object\n                        description: \u003e-\n                          Map that sums up all received values that seemed\n                          incorrect\n                        properties:\n                          fields:\n                            description: All input fields that seemed incorrect\n                            type: object\n                            additionalProperties:\n                              type: string\n                          parameters:\n                            type: object\n                            description: \u003e-\n                              All query-, header- and path- parameters that\n                              seemed incorrect\n                            properties:\n                              query:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              header:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              path:\n                                type: object\n                                additionalProperties:\n                                  type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '403':\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n  /events:\n    post:\n      description: Endpoint used to push an event for a user or an account.\n      summary: Push event\n      operationId: trackJourneyEvent\n      x-key-permissions:\n        - TrackData\n      x-codeSamples:\n        - lang: JavaScript\n          source: \u003e-\n            // https://github.com/journy-io/js-sdk\n\n\n            import { Client, Event, UserIdentified, AccountIdentified } from\n            \"@journyio/sdk\";\n\n\n            const client = Client.withDefaults('your-api-key');\n\n\n            event = Event.forUser(\"login\", UserIdentified.byUserId(\"userId\"));\n\n\n            event = Event.forUser(\"some_historic_event\",\n            UserIdentified.byUserId(\"userId\"))\n              .happenedAt(new Date(...))\n            ;\n\n\n            event = Event.forAccount(\"reached_monthly_volume\",\n            AccountIdentified.byAccountId(\"accountId\"))\n              .withMetadata({\n                \"number\": 1313,\n                \"string\": \"string\",\n                \"boolean\": true,\n              })\n            ;\n\n\n            event = Event.forUserInAccount(\n              \"updated_settings\",\n              UserIdentified.byUserId(\"userId\"),\n              AccountIdentified.byAccountId(\"accountId\")\n            );\n\n\n            await client.addEvent(event);\n        - lang: PHP\n          source: \u003e-\n            \u003c?php\n\n\n            // https://github.com/journy-io/php-sdk\n\n\n            use JournyIO\\SDK\\Client;\n\n            use JournyIO\\SDK\\Event;\n\n            use JournyIO\\SDK\\UserIdentified;\n\n            use JournyIO\\SDK\\AccountIdentified;\n\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n\n            $event = Event::forUser(\"login\",\n            UserIdentified::byUserId(\"userId\"));\n\n\n            $event = Event::forUser(\"some_historic_event\",\n            UserIdentified::byUserId(\"userId\"))\n                -\u003ehappenedAt(new \\DateTimeImmutable(\"now\"))\n            ;\n\n\n            $event = Event::forAccount(\"reached_monthly_volume\",\n            AccountIdentified::byAccountId(\"accountId\"))\n                -\u003ewithMetadata([\n                    \"number\" =\u003e 13313,\n                    \"string\" =\u003e \"string\",\n                    \"boolean\" =\u003e true,\n                ])\n            ;\n\n\n            $event = Event::forUserInAccount(\n                \"updated_settings\",\n                UserIdentified::byUserId(\"userId\"),\n                AccountIdentified::byAccountId(\"accountId\")\n            );\n\n\n            $client-\u003eaddEvent($event);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from datetime import datetime\n            from journyio.events import Event, Metadata\n            from journyio.account_identified import AccountIdentified\n            from journyio.user_identified import UserIdentified\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            account = AccountIdentified(\"accountId\", \"www.domain.tld\")\n            user = UserIdentified(\"userId\", \"name@domain.tld\")\n\n            metadata = Metadata()\n            metadata[\"number\"] = 454554\n            metadata[\"boolean\"] = False\n            metadata[\"string\"] = \"string\"\n\n            event = Event()\n                .for_user_in_account(\"settings_updated\", user, account)\n                .happened_at(datetime.now())\n                .with_metadata(metadata)\n\n            client.add_event(event)\n      tags:\n        - Events\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Event for a user or an account\n              required:\n                - identification\n                - name\n              properties:\n                identification:\n                  type: object\n                  description: 'Event identification requires a user, account or both'\n                  properties:\n                    account:\n                      type: object\n                      description: \u003e-\n                        Account identification requires an accountId, domain or\n                        both\n                      properties:\n                        domain:\n                          type: string\n                          format: top-level-domain\n                          description: \u003e-\n                            The domain associated with the account (e.g.\n                            acme-inc.com)\n                        accountId:\n                          type: string\n                          format: account-id\n                          description: Unique identifier for the account in your database\n                      minProperties: 1\n                    user:\n                      type: object\n                      description: 'User identification requires a userId, email or both'\n                      properties:\n                        email:\n                          type: string\n                          format: email\n                          description: Email address of the user\n                        userId:\n                          type: string\n                          format: user-id\n                          description: Unique identifier for the user in your database\n                      minProperties: 1\n                  minProperties: 1\n                name:\n                  type: string\n                  format: event-name\n                metadata:\n                  type: object\n                  description: \u003e-\n                    Event metadata, possible values are strings, booleans,\n                    numbers and datetimes (ISO 8601)\n                  additionalProperties:\n                    oneOf:\n                      - type: string\n                      - type: boolean\n                      - type: number\n                      - type: string\n                        format: datetime\n                triggeredAt:\n                  description: If left blank this defaults to the current datetime\n                  type: string\n                  format: datetime\n      responses:\n        '201':\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The object was created\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '400':\n          description: 'Bad request, some fields or parameters are incorrect'\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - type: object\n                        description: \u003e-\n                          The basic response containing the unique ID of the\n                          request and the response status\n                        required:\n                          - meta\n                        properties:\n                          meta:\n                            type: object\n                            required:\n                              - requestId\n                              - status\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                      - type: object\n                        description: The error message should specify what cause the error\n                        required:\n                          - message\n                        properties:\n                          message:\n                            type: string\n                  - type: object\n                    description: Specify the fields and/ or parameters that had errors\n                    required:\n                      - errors\n                    properties:\n                      errors:\n                        type: object\n                        description: \u003e-\n                          Map that sums up all received values that seemed\n                          incorrect\n                        properties:\n                          fields:\n                            description: All input fields that seemed incorrect\n                            type: object\n                            additionalProperties:\n                              type: string\n                          parameters:\n                            type: object\n                            description: \u003e-\n                              All query-, header- and path- parameters that\n                              seemed incorrect\n                            properties:\n                              query:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              header:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              path:\n                                type: object\n                                additionalProperties:\n                                  type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '403':\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n  /users/upsert:\n    post:\n      description: Endpoint to create or update a user.\n      summary: Create or update user\n      operationId: upsertUser\n      x-key-permissions:\n        - TrackData\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            await client.upsertUser({\n              // required\n              userId: \"userId\",\n              email: \"name@domain.tld\",\n\n              // optional\n              properties: {\n                full_name: \"John Doe\",\n                first_name: \"John\",\n                last_name: \"Doe\",\n                phone: \"123\",\n                registered_at: new Date(/* ... */),\n                is_admin: true,\n                age: 26,\n                array_of_values: [\"value1\", \"value2\"],\n                key_with_empty_value: \"\",\n                this_property_will_be_deleted: null,\n              },\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eupsertUser([\n                // required\n                \"userId\" =\u003e \"userId\",\n                \"email\" =\u003e \"name@domain.tld\",\n\n                // optional\n                \"properties\" =\u003e [\n                    \"full_name\" =\u003e \"John Doe\",\n                    \"first_name\" =\u003e \"John\",\n                    \"last_name\" =\u003e \"Doe\",\n                    \"phone\" =\u003e \"123\",\n                    \"is_admin\" =\u003e true,\n                    \"registered_at\" =\u003e new \\DateTimeImmutable(\"...\"),\n                    \"age\" =\u003e 26,\n                    \"array_of_values\" =\u003e [\"value1\", \"value2\"],\n                    \"key_with_empty_value\" =\u003e \"\",\n                    \"this_property_will_be_deleted\" =\u003e null,\n                ],\n            ]);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.client import Properties\n            from journyio.user_identified import UserIdentified\n            from datetime import datetime\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            user = UserIdentified(\"userId\", \"name@domain.tld\")\n            # or\n            user = UserIdentified.by_user_id(\"userId\")\n            # or\n            user = UserIdentified.by_email(\"name@domain.tld\")\n\n            properties = Properties()\n            properties[\"full_name\"] = \"John Doe\"\n            properties[\"first_name\"] = \"John\"\n            properties[\"last_name\"] = \"Doe\"\n            properties[\"phone\"] = \"123\"\n            properties[\"is_admin\"] = True\n            properties[\"registered_at\"] = datetime.now()\n            properties[\"age\"] = 26\n            properties[\"array_of_values\"] = [\"value1\", \"value2\"]\n            properties[\"key_with_empty_value\"] = \"\"\n            properties[\"this_property_will_be_deleted\"] = None\n\n            client.upsert_user(user, properties)\n      tags:\n        - Users\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Update properties of a user\n              required:\n                - identification\n              properties:\n                identification:\n                  type: object\n                  description: 'User identification requires a userId, email or both'\n                  properties:\n                    email:\n                      type: string\n                      format: email\n                      description: Email address of the user\n                    userId:\n                      type: string\n                      format: user-id\n                      description: Unique identifier for the user in your database\n                  minProperties: 1\n                properties:\n                  type: object\n                  description: \u003e-\n                    The properties being set, possible values are strings,\n                    booleans, numbers and datetimes (ISO 8601)\n                  additionalProperties:\n                    oneOf:\n                      - type: string\n                        nullable: true\n                      - type: boolean\n                      - type: number\n                      - type: string\n                        format: datetime\n                      - type: array\n                        items:\n                          type: string\n                          format: non-empty-string\n      responses:\n        '201':\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The object was created\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '400':\n          description: 'Bad request, some fields or parameters are incorrect'\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - type: object\n                        description: \u003e-\n                          The basic response containing the unique ID of the\n                          request and the response status\n                        required:\n                          - meta\n                        properties:\n                          meta:\n                            type: object\n                            required:\n                              - requestId\n                              - status\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                      - type: object\n                        description: The error message should specify what cause the error\n                        required:\n                          - message\n                        properties:\n                          message:\n                            type: string\n                  - type: object\n                    description: Specify the fields and/ or parameters that had errors\n                    required:\n                      - errors\n                    properties:\n                      errors:\n                        type: object\n                        description: \u003e-\n                          Map that sums up all received values that seemed\n                          incorrect\n                        properties:\n                          fields:\n                            description: All input fields that seemed incorrect\n                            type: object\n                            additionalProperties:\n                              type: string\n                          parameters:\n                            type: object\n                            description: \u003e-\n                              All query-, header- and path- parameters that\n                              seemed incorrect\n                            properties:\n                              query:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              header:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              path:\n                                type: object\n                                additionalProperties:\n                                  type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '403':\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n  /accounts/upsert:\n    post:\n      description: Endpoint used to create or update an account.\n      summary: Create or update account\n      operationId: upsertAccount\n      x-key-permissions:\n        - TrackData\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            await client.upsertAccount({\n              // required\n              accountId: \"accountId\",\n              domain: \"acme-inc.com\",\n\n              // optional\n              properties: {\n                name: \"ACME, Inc\",\n                mrr: 399,\n                plan: \"Pro\",\n                registered_at: new Date(...),\n                is_paying: true,\n                key_with_empty_value: \"\",\n                array_of_values: [\"value1\", \"value2\"],\n                this_property_will_be_deleted: null,\n              },\n\n              // optional\n              members: [\n                { userId: \"userId\" },\n                { userId: \"userId\" }\n              ]\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eupsertAccount([\n                \"accountId\" =\u003e \"accountId\",\n                \"domain\" =\u003e \"acme-inc.com\",\n\n                // optional\n                \"properties\" =\u003e [\n                    \"name\" =\u003e \"ACME, Inc\",\n                    \"mrr\" =\u003e 399,\n                    \"plan\" =\u003e \"Pro\",\n                    \"registered_at\" =\u003e new \\DateTimeImmutable(\"...\"),\n                    \"is_paying\" =\u003e true,\n                    \"key_with_empty_value\" =\u003e \"\",\n                    \"array_of_values\" =\u003e [\"value1\", \"value2\"],\n                    \"this_property_will_be_deleted\" =\u003e null,\n                ],\n\n                // optional\n                \"members\" =\u003e [\n                    [\"userId\" =\u003e \"userId\"],\n                    [\"userId\" =\u003e \"userId\"],\n                ],\n            ]);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.client import Properties\n            from journyio.account_identified import AccountIdentified\n            from journyio.user_identified import UserIdentified\n            from datetime import datetime\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            account = AccountIdentified(\"accountId\", \"acme-inc.com\")\n            # or\n            account = AccountIdentified.by_account_id(\"accountId\")\n            # or\n            account = AccountIdentified.by_domain(\"acme-inc.com\")\n\n            properties = Properties()\n            properties[\"name\"] = \"ACME, Inc\"\n            properties[\"mrr\"] = 399\n            properties[\"plan\"] = \"Pro\"\n            properties[\"registered_at\"] = datetime.now()\n            properties[\"is_paying\"] = True\n            properties[\"key_with_empty_value\"] = \"\"\n            properties[\"this_property_will_be_deleted\"] = None\n            properties[\"array_of_values\"] = [\"value1\", \"value2\"]\n\n            member1 = UserIdentified.by_user_id(\"userId\")\n            member2 = UserIdentified.by_user_id(\"userId\")\n\n            client.upsert_account(account, properties, [member1, member2])\n      tags:\n        - Accounts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Update properties and/or members of an account\n              required:\n                - identification\n              properties:\n                identification:\n                  type: object\n                  description: 'Account identification requires an accountId, domain or both'\n                  properties:\n                    domain:\n                      type: string\n                      format: top-level-domain\n                      description: \u003e-\n                        The domain associated with the account (e.g.\n                        acme-inc.com)\n                    accountId:\n                      type: string\n                      format: account-id\n                      description: Unique identifier for the account in your database\n                  minProperties: 1\n                properties:\n                  type: object\n                  description: \u003e-\n                    The properties being set, possible values are strings,\n                    booleans, numbers and datetimes (ISO 8601)\n                  additionalProperties:\n                    oneOf:\n                      - type: string\n                        nullable: true\n                      - type: boolean\n                      - type: number\n                      - type: string\n                        format: datetime\n                      - type: array\n                        items:\n                          type: string\n                          format: non-empty-string\n                members:\n                  description: The users that are member of this account\n                  type: array\n                  items:\n                    type: object\n                    description: 'Identification requires an accountId, domain or both'\n                    required:\n                      - identification\n                    properties:\n                      identification:\n                        type: object\n                        description: 'User identification requires a userId, email or both'\n                        properties:\n                          email:\n                            type: string\n                            format: email\n                            description: Email address of the user\n                          userId:\n                            type: string\n                            format: user-id\n                            description: Unique identifier for the user in your database\n                        minProperties: 1\n      responses:\n        '201':\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The object was created\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '400':\n          description: 'Bad request, some fields or parameters are incorrect'\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - type: object\n                        description: \u003e-\n                          The basic response containing the unique ID of the\n                          request and the response status\n                        required:\n                          - meta\n                        properties:\n                          meta:\n                            type: object\n                            required:\n                              - requestId\n                              - status\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                      - type: object\n                        description: The error message should specify what cause the error\n                        required:\n                          - message\n                        properties:\n                          message:\n                            type: string\n                  - type: object\n                    description: Specify the fields and/ or parameters that had errors\n                    required:\n                      - errors\n                    properties:\n                      errors:\n                        type: object\n                        description: \u003e-\n                          Map that sums up all received values that seemed\n                          incorrect\n                        properties:\n                          fields:\n                            description: All input fields that seemed incorrect\n                            type: object\n                            additionalProperties:\n                              type: string\n                          parameters:\n                            type: object\n                            description: \u003e-\n                              All query-, header- and path- parameters that\n                              seemed incorrect\n                            properties:\n                              query:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              header:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              path:\n                                type: object\n                                additionalProperties:\n                                  type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n  '/accounts/{accountId}/users':\n    post:\n      description: Endpoint used to add a user to an account.\n      summary: Add user to account\n      parameters:\n        - in: path\n          name: accountId\n          description: Unique identifier for the account in your database\n          required: true\n          schema:\n            type: string\n      operationId: addUserToAccount\n      x-key-permissions:\n        - TrackData\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n            import { Client } from \"@journyio/sdk\";\n            const client = Client.withDefaults('your-api-key');\n            await client.addUserToAccount({\n              accountId: \"accountId\",\n              userId: \"userId\"\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eaddUserToAccount(\n                \"accountId\",\n                \"userId\"\n            );\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.add_user_to_account(\"accountId\", \"userId\")\n      tags:\n        - Accounts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              description: The user being added/removed from the account\n              required:\n                - userId\n              properties:\n                userId:\n                  type: string\n                  format: user-id\n                  description: Unique identifier for the user in your database\n      responses:\n        '201':\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The object was created\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '400':\n          description: 'Bad request, some fields or parameters are incorrect'\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - type: object\n                        description: \u003e-\n                          The basic response containing the unique ID of the\n                          request and the response status\n                        required:\n                          - meta\n                        properties:\n                          meta:\n                            type: object\n                            required:\n                              - requestId\n                              - status\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                      - type: object\n                        description: The error message should specify what cause the error\n                        required:\n                          - message\n                        properties:\n                          message:\n                            type: string\n                  - type: object\n                    description: Specify the fields and/ or parameters that had errors\n                    required:\n                      - errors\n                    properties:\n                      errors:\n                        type: object\n                        description: \u003e-\n                          Map that sums up all received values that seemed\n                          incorrect\n                        properties:\n                          fields:\n                            description: All input fields that seemed incorrect\n                            type: object\n                            additionalProperties:\n                              type: string\n                          parameters:\n                            type: object\n                            description: \u003e-\n                              All query-, header- and path- parameters that\n                              seemed incorrect\n                            properties:\n                              query:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              header:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              path:\n                                type: object\n                                additionalProperties:\n                                  type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n    delete:\n      description: Endpoint used to remove a user from an account.\n      summary: Remove user from account\n      operationId: removeUserFromAccount\n      parameters:\n        - in: path\n          name: accountId\n          description: Unique identifier for the account in your database\n          required: true\n          schema:\n            type: string\n      x-key-permissions:\n        - TrackData\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n            import { Client } from \"@journyio/sdk\";\n            const client = Client.withDefaults('your-api-key');\n            await client.removeUserFromAccount({\n              accountId: \"accountId\",\n              userId: \"userId\"\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eremoveUserFromAccount(\n                \"accountId\",\n                \"userId\"\n            );\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.remove_user_from_account(\"accountId\", \"userId\")\n      tags:\n        - Accounts\n      responses:\n        '201':\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The object was created\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '400':\n          description: 'Bad request, some fields or parameters are incorrect'\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - type: object\n                        description: \u003e-\n                          The basic response containing the unique ID of the\n                          request and the response status\n                        required:\n                          - meta\n                        properties:\n                          meta:\n                            type: object\n                            required:\n                              - requestId\n                              - status\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                      - type: object\n                        description: The error message should specify what cause the error\n                        required:\n                          - message\n                        properties:\n                          message:\n                            type: string\n                  - type: object\n                    description: Specify the fields and/ or parameters that had errors\n                    required:\n                      - errors\n                    properties:\n                      errors:\n                        type: object\n                        description: \u003e-\n                          Map that sums up all received values that seemed\n                          incorrect\n                        properties:\n                          fields:\n                            description: All input fields that seemed incorrect\n                            type: object\n                            additionalProperties:\n                              type: string\n                          parameters:\n                            type: object\n                            description: \u003e-\n                              All query-, header- and path- parameters that\n                              seemed incorrect\n                            properties:\n                              query:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              header:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              path:\n                                type: object\n                                additionalProperties:\n                                  type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '403':\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n  /validate:\n    get:\n      description: \u003e-\n        Endpoint used to test the validity and some basic information about a\n        specific API Key.\n      summary: Validate API key\n      operationId: getValidity\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            const result = await client.getApiKeyDetails();\n\n            if (result.success) {\n              console.log(result.data.permissions); // string[]\n            }\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $call = $client-\u003egetApiKeyDetails();\n\n            if ($call-\u003esucceeded()) {\n                $result = $call-\u003eresult();\n\n                if ($result instanceof ApiKeyDetails) {\n                    var_dump($result-\u003egetPermissions()); // string[]\n                }\n            } else {\n                var_dump($call-\u003eerrors());\n            }\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.results import Success\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.get_api_key_details()\n\n            if isinstance(result, Success):\n                print(result.request_id)  # str\n                print(result.calls_remaining)  # int\n                print(result.data)  # ApiKeyDetails\n                print(result.permissions)  # list of strings denoting the permissions\n      tags:\n        - Validation\n      responses:\n        '200':\n          description: Key validation\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    required:\n                      - data\n                    properties:\n                      data:\n                        type: object\n                        description: Validation of API Key\n                        required:\n                          - permissions\n                        properties:\n                          permissions:\n                            type: array\n                            items:\n                              type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '403':\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n  /tracking/snippet:\n    get:\n      description: Endpoint used to get a snippet for a website.\n      summary: Get snippet for a website\n      operationId: getTrackingSnippet\n      x-key-permissions:\n        - GetTrackingSnippet\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            const result = await client.getTrackingSnippet({\n              domain: \"www.journy.io\",\n            });\n\n            if (result.success) {\n              console.log(result.data.snippet); // string\n              console.log(result.data.domain); // string\n            }\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $call = $client-\u003egetTrackingSnippet(\"blog.acme.com\");\n\n            if ($call-\u003esucceeded()) {\n                $result = $call-\u003eresult();\n\n                if ($result instanceof TrackingSnippet) {\n                    var_dump($result-\u003egetSnippet()); // string\n                    var_dump($result-\u003egetDomain()); // string\n                }\n            } else {\n                var_dump($call-\u003eerrors());\n            }\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.results import Success\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.get_tracking_snippet(\"blog.acme.com\")\n\n            if isinstance(result, Success):\n              print(result.request_id)  # str\n              print(result.calls_remaining)  # int\n              print(result.data)  # TrackingSnippetResonse\n              print(result.domain)  # str\n              print(result.snippet)  # str\n      tags:\n        - Websites\n      parameters:\n        - in: query\n          required: true\n          name: domain\n          description: The domain you want to receive a snippet for\n          schema:\n            type: string\n            format: domain\n      responses:\n        '200':\n          description: Snippet\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    required:\n                      - data\n                    properties:\n                      data:\n                        type: object\n                        description: A snippet\n                        required:\n                          - domain\n                          - snippet\n                        properties:\n                          domain:\n                            type: string\n                            format: domain\n                          snippet:\n                            type: string\n        '400':\n          description: 'Bad request, some fields or parameters are incorrect'\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - type: object\n                        description: \u003e-\n                          The basic response containing the unique ID of the\n                          request and the response status\n                        required:\n                          - meta\n                        properties:\n                          meta:\n                            type: object\n                            required:\n                              - requestId\n                              - status\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                      - type: object\n                        description: The error message should specify what cause the error\n                        required:\n                          - message\n                        properties:\n                          message:\n                            type: string\n                  - type: object\n                    description: Specify the fields and/ or parameters that had errors\n                    required:\n                      - errors\n                    properties:\n                      errors:\n                        type: object\n                        description: \u003e-\n                          Map that sums up all received values that seemed\n                          incorrect\n                        properties:\n                          fields:\n                            description: All input fields that seemed incorrect\n                            type: object\n                            additionalProperties:\n                              type: string\n                          parameters:\n                            type: object\n                            description: \u003e-\n                              All query-, header- and path- parameters that\n                              seemed incorrect\n                            properties:\n                              query:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              header:\n                                type: object\n                                additionalProperties:\n                                  type: string\n                              path:\n                                type: object\n                                additionalProperties:\n                                  type: string\n        '401':\n          description: \u003e-\n            No API Key was provided or the key is not authorised to perform the\n            action\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '403':\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '404':\n          description: Not found\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '429':\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\n        '500':\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: Request limit per minute.\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: The number of requests left for the time window.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: \u003e-\n                      The basic response containing the unique ID of the request\n                      and the response status\n                    required:\n                      - meta\n                    properties:\n                      meta:\n                        type: object\n                        required:\n                          - requestId\n                          - status\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                  - type: object\n                    description: The error message should specify what cause the error\n                    required:\n                      - message\n                    properties:\n                      message:\n                        type: string\ncomponents:\n  securitySchemes:\n    api_key:\n      type: apiKey\n      description: Represents API Key `X-Api-Key`\n      name: X-Api-Key\n      in: header",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@f9db3eb6d773bf1ad2e81f3afbe55aad28286517/-/blob/openapi/journey.io/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/f9db3eb6d773bf1ad2e81f3afbe55aad28286517/openapi/journey.io/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/accounts/{accountId}/users\": post: responses: code 400: contents: application/json: generate schema: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"sum types with same names"
	]
}