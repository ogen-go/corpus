{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/glademiller/openapiv3"
		},
		"file": {
			"name": "authentiq.yaml",
			"size": 0,
			"path": "fixtures/authentiq.yaml",
			"byteSize": 19069,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: hello@authentiq.com\n    name: Authentiq team\n    url: 'http://authentiq.io/support'\n  description: 'Strong authentication, without the passwords.'\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  termsOfService: 'http://authentiq.com/terms/'\n  title: Authentiq\n  version: '6'\n  x-apisguru-categories:\n    - security\n  x-logo:\n    backgroundColor: '#F26641'\n    url: \u003e-\n      https://api.apis.guru/v2/cache/logo/https_www.authentiq.com_theme_images_authentiq-logo-a-inverse.svg\n  x-origin:\n    - format: swagger\n      url: \u003e-\n        https://raw.githubusercontent.com/AuthentiqID/authentiq-docs/master/docs/swagger/issuer.yaml\n      version: '2.0'\n  x-preferred: true\n  x-providerName: 6-dot-authentiqio.appspot.com\npaths:\n  /key:\n    delete:\n      description: |\n        Revoke an Authentiq ID using email \u0026 phone.\n\n        If called with `email` and `phone` only, a verification code \n        will be sent by email. Do a second call adding `code` to \n        complete the revocation.\n      operationId: key_revoke_nosecret\n      parameters:\n        - description: primary email associated to Key (ID)\n          in: query\n          name: email\n          required: true\n          schema:\n            type: string\n        - description: 'primary phone number, international representation'\n          in: query\n          name: phone\n          required: true\n          schema:\n            type: string\n        - description: verification code sent by email\n          in: query\n          name: code\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully deleted\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    description: pending or done\n                    type: string\n                type: object\n        '401':\n          description: Authentication error `auth-error`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Unknown key `unknown-key`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Confirm with code sent `confirm-first`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - key\n        - delete\n    post:\n      description: |\n        Register a new ID `JWT(sub, devtoken)`\n\n        v5: `JWT(sub, pk, devtoken, ...)`\n\n        See: https://github.com/skion/authentiq/wiki/JWT-Examples\n      operationId: key_register\n      responses:\n        '201':\n          description: Successfully registered\n          content:\n            application/json:\n              schema:\n                properties:\n                  secret:\n                    description: revoke key\n                    type: string\n                  status:\n                    description: registered\n                    type: string\n                type: object\n        '409':\n          description: Key already registered `duplicate-key`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - key\n        - post\n      requestBody:\n        $ref: '#/components/requestBodies/AuthentiqID'\n  '/key/{PK}':\n    delete:\n      description: Revoke an Identity (Key) with a revocation secret\n      operationId: key_revoke\n      parameters:\n        - $ref: '#/components/parameters/PK'\n        - description: revokation secret\n          in: query\n          name: secret\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    description: done\n                    type: string\n                type: object\n        '401':\n          description: Key not found / wrong code `auth-error`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Unknown key `unknown-key`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - key\n        - delete\n    get:\n      description: |\n        Get public details of an Authentiq ID.\n      parameters:\n        - $ref: '#/components/parameters/PK'\n      responses:\n        '200':\n          description: Successfully retrieved\n          content:\n            application/json:\n              schema:\n                properties:\n                  since:\n                    format: date-time\n                    type: string\n                  status:\n                    type: string\n                  sub:\n                    description: base64safe encoded public signing key\n                    type: string\n                title: JWT\n                type: object\n        '404':\n          description: Unknown key `unknown-key`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Key is revoked (gone). `revoked-key`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - key\n        - get\n    head:\n      description: |\n        HEAD info on Authentiq ID\n      parameters:\n        - $ref: '#/components/parameters/PK'\n      responses:\n        '200':\n          description: Key exists\n        '404':\n          description: Unknown key `unknown-key`\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Key is revoked `revoked-key`\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - key\n        - head\n    post:\n      description: |\n        update properties of an Authentiq ID.\n        (not operational in v4; use PUT for now)\n\n        v5: POST issuer-signed email \u0026 phone scopes in\n        a self-signed JWT\n\n        See: https://github.com/skion/authentiq/wiki/JWT-Examples\n      operationId: key_update\n      parameters:\n        - $ref: '#/components/parameters/PK'\n      responses:\n        '200':\n          description: Successfully updated\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    description: confirmed\n                    type: string\n                type: object\n        '404':\n          description: Unknown key `unknown-key`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - key\n        - post\n      requestBody:\n        $ref: '#/components/requestBodies/AuthentiqID'\n    put:\n      description: |\n        Update Authentiq ID by replacing the object.\n\n        v4: `JWT(sub,email,phone)` to bind email/phone hash; \n\n        v5: POST issuer-signed email \u0026 phone scopes\n        and PUT to update registration `JWT(sub, pk, devtoken, ...)`\n\n        See: https://github.com/skion/authentiq/wiki/JWT-Examples\n      operationId: key_bind\n      parameters:\n        - $ref: '#/components/parameters/PK'\n      responses:\n        '200':\n          description: Successfully updated\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    description: confirmed\n                    type: string\n                type: object\n        '404':\n          description: Unknown key `unknown-key`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Already bound to another key `duplicate-hash`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - key\n        - put\n      requestBody:\n        $ref: '#/components/requestBodies/AuthentiqID'\n  /login:\n    post:\n      description: |\n        push sign-in request\n        See: https://github.com/skion/authentiq/wiki/JWT-Examples\n      operationId: push_login_request\n      parameters:\n        - description: URI App will connect to\n          in: query\n          name: callback\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    description: sent\n                    type: string\n                type: object\n        '401':\n          description: \u003e-\n            Unauthorized for this callback audience `aud-error` or JWT should be\n            self-signed `auth-error`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - login\n        - post\n      requestBody:\n        content:\n          application/jwt:\n            schema:\n              $ref: '#/components/schemas/PushToken'\n        description: Push Token.\n        required: true\n  /scope:\n    post:\n      description: |\n        scope verification request\n        See: https://github.com/skion/authentiq/wiki/JWT-Examples\n      operationId: sign_request\n      parameters:\n        - description: 'test only mode, using test issuer'\n          in: query\n          name: test\n          required: false\n          schema:\n            type: integer\n      responses:\n        '201':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  job:\n                    description: 20-character ID\n                    type: string\n                  status:\n                    description: waiting\n                    type: string\n                type: object\n        '429':\n          description: Too Many Requests on same address / number `rate-limit`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - scope\n        - post\n      requestBody:\n        content:\n          application/jwt:\n            schema:\n              $ref: '#/components/schemas/Claims'\n        description: Claims of scope\n        required: true\n  '/scope/{job}':\n    delete:\n      description: delete a verification job\n      operationId: sign_delete\n      parameters:\n        - $ref: '#/components/parameters/JobID'\n      responses:\n        '200':\n          description: Successfully deleted\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    description: done\n                    type: string\n                type: object\n        '404':\n          description: Job not found `unknown-job`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - scope\n        - delete\n    get:\n      description: get the status / current content of a verification job\n      operationId: sign_retrieve\n      parameters:\n        - $ref: '#/components/parameters/JobID'\n      responses:\n        '200':\n          description: Successful response (JWT)\n          content:\n            application/json:\n              schema:\n                properties:\n                  exp:\n                    type: integer\n                  field:\n                    type: string\n                  sub:\n                    description: base64safe encoded public signing key\n                    type: string\n                title: JWT\n                type: object\n            application/jwt:\n              schema:\n                properties:\n                  exp:\n                    type: integer\n                  field:\n                    type: string\n                  sub:\n                    description: base64safe encoded public signing key\n                    type: string\n                title: JWT\n                type: object\n        '204':\n          description: 'Confirmed, waiting for signing'\n        '404':\n          description: Job not found `unknown-job`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/jwt:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - scope\n        - get\n    head:\n      description: HEAD to get the status of a verification job\n      operationId: sign_retrieve_head\n      parameters:\n        - $ref: '#/components/parameters/JobID'\n      responses:\n        '200':\n          description: Confirmed and signed\n        '204':\n          description: 'Confirmed, waiting for signing'\n        '404':\n          description: Job not found `unknown-job`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - scope\n        - head\n    post:\n      description: this is a scope confirmation\n      operationId: sign_confirm\n      parameters:\n        - $ref: '#/components/parameters/JobID'\n      responses:\n        '202':\n          description: Successfully confirmed\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    description: confirmed\n                    type: string\n                type: object\n        '401':\n          description: Confirmation error `auth-error`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Job not found `unknown-job`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '405':\n          description: JWT POSTed to scope `not-supported`\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - scope\n        - post\n    put:\n      description: |\n        authority updates a JWT with its signature\n        See: https://github.com/skion/authentiq/wiki/JWT-Examples\n      operationId: sign_update\n      parameters:\n        - $ref: '#/components/parameters/JobID'\n      responses:\n        '200':\n          description: Successfully updated\n          content:\n            application/jwt:\n              schema:\n                properties:\n                  jwt:\n                    description: result is JWT or JSON??\n                    type: string\n                  status:\n                    description: ready\n                    type: string\n                type: object\n        '404':\n          description: Job not found `unknown-job`\n          content:\n            application/jwt:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Job not confirmed yet `confirm-first`\n          content:\n            application/jwt:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      tags:\n        - scope\n        - put\nservers:\n  - url: 'https://6-dot-authentiqio.appspot.com/'\ncomponents:\n  parameters:\n    JobID:\n      description: Job ID (20 chars)\n      in: path\n      name: job\n      required: true\n      schema:\n        type: string\n    PK:\n      description: Public Signing Key - Authentiq ID (43 chars)\n      in: path\n      name: PK\n      required: true\n      schema:\n        type: string\n  responses:\n    ErrorResponse:\n      description: Error response\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n  requestBodies:\n    AuthentiqID:\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/AuthentiqID'\n      description: Authentiq ID to register\n      required: true\n  schemas:\n    AuthentiqID:\n      description: |\n        Authentiq ID in JWT format, self-signed.\n      properties:\n        devtoken:\n          description: device token for push messages\n          type: string\n        sub:\n          description: UUID and public signing key\n          type: string\n      required:\n        - sub\n    Claims:\n      description: |\n        Claim in JWT format, self- or issuer-signed. \n      properties:\n        email:\n          description: ''\n          type: string\n        phone:\n          description: ''\n          type: string\n        scope:\n          description: claim scope\n          type: string\n        sub:\n          description: UUID\n          type: string\n        type:\n          description: ''\n          type: string\n      required:\n        - sub\n        - scope\n    Error:\n      properties:\n        detail:\n          type: string\n        error:\n          type: integer\n        title:\n          type: string\n        type:\n          description: unique uri for this error\n          type: string\n      required:\n        - error\n    PushToken:\n      description: |\n        PushToken in JWT format, self-signed. \n      properties:\n        aud:\n          description: audience (URI)\n          type: string\n        exp:\n          type: integer\n        iat:\n          type: integer\n        iss:\n          description: issuer (URI)\n          type: string\n        nbf:\n          type: integer\n        sub:\n          description: UUID and public signing key\n          type: string\n      required:\n        - sub\n        - iss\n        - aud\n",
			"canonicalURL": "/github.com/glademiller/openapiv3@2dbc9402c4802a287d9317c44cdcd8b395f7bdbe/-/blob/fixtures/authentiq.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/glademiller/openapiv3/blob/2dbc9402c4802a287d9317c44cdcd8b395f7bdbe/fixtures/authentiq.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: reduce default: default: contents: unsupported content types: [*/*]"
}