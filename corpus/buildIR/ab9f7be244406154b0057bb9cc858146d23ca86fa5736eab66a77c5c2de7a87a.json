{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tool-tests/6-allOf/openapi.yaml",
			"byteSize": 813059,
			"content": "openapi: 3.0.1\ninfo:\n  title: 'BeezUP Merchant API'\n  x-ballerina-display:\n    label: BeezUP Merchant\n    iconPath: icon.png\n  description: \u003e-\n    This is a generated connector for [BeezUP Merchant API\n    v2.0](https://api-docs.beezup.com/swagger-ui/) OpenAPI\n    specification.\n    BeezUP Merchant API provides capability to read and write BeezUP data such as accounts, stores, product catalog, channel search etc.\n\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials. \n\n    Create a [BeezUP account](www.beezup.com) and obtain tokens by following\n    [this guide](https://api-docs.beezup.com/swagger-ui/).\n\n  contact:\n    email: help@beezup.com\n  license:\n    name: BeezUP\n    url: https://www.beezup.com/\n  version: '2.0'\n  x-logo:\n    url: https://avatars0.githubusercontent.com/u/25665430\n    backgroundColor: '#FFFFFF'\nexternalDocs:\n  description: Find the documentation for BeezUP's API here\n  url: https://api-docs.beezup.com/\nservers:\n  - url: https://api.beezup.com/\nsecurity:\n  - api_key: []\ntags:\n  - name: Public - Security - Security\n    x-displayName: Security\n  - name: Public - Channels - Public Channels\n    x-displayName: Public Channels\n  - name: Public - List of Values - LOV\n    x-displayName: LOV\n  - name: User - List of Values - LOV\n    x-displayName: LOV\n  - name: Customer - Global\n    x-displayName: Global\n  - name: Customer - Account\n    x-displayName: Account\n  - name: Customer - Security\n    x-displayName: Security\n  - name: Customer - Stores\n    x-displayName: Stores\n  - name: Customer - Shares\n    x-displayName: Shares\n  - name: Customer - Alerts\n    x-displayName: Alerts\n  - name: Customer - Rights\n    x-displayName: Rights\n  - name: Customer - Friends\n    x-displayName: Friends\n  - name: Customer - Contracts\n    x-displayName: Contracts\n  - name: Customer - Invoices\n    x-displayName: Invoices\n  - name: Catalogs - Auto\n    x-displayName: Auto\n  - name: Catalogs - Global\n    x-displayName: Global\n  - name: Catalogs - Importation Process\n    x-displayName: Importation Process\n  - name: Catalogs - Importation Catalog Info\n    x-displayName: Importation Catalog Info\n  - name: Catalogs - Catalog\n    x-displayName: Catalog\n  - name: Channels - Channels Global\n    x-displayName: Channels Global\n  - name: Channel Catalogs - Global\n    x-displayName: Global\n  - name: Channel Catalogs - Settings\n    x-displayName: Settings\n  - name: Channel Catalogs - Column Mappings\n    x-displayName: Column Mappings\n  - name: Channel Catalogs - Categories\n    x-displayName: Categories\n  - name: Channel Catalogs - Exclusion Filters\n    x-displayName: Exclusion Filters\n  - name: Channel Catalogs - Products\n    x-displayName: Products\n  - name: Channel Catalogs - Products Overrides\n    x-displayName: Products Overrides\n  - name: Channel Catalogs - Products Optimisation\n    x-displayName: Products Optimisation\n  - name: Channel Catalogs - Exportations\n    x-displayName: Exportations\n  - name: Marketplaces - Channel catalogs - Global\n    x-displayName: Global\n  - name: Marketplaces - Channel catalogs - Publications\n    x-displayName: Publications\n  - name: Marketplaces - Channel catalogs - Settings\n    x-displayName: Settings\n  - name: Marketplaces - Orders - Global\n    x-displayName: Global\n  - name: Marketplaces - Orders - AutoTransitions\n    x-displayName: AutoTransitions\n  - name: Marketplaces - Orders - List\n    x-displayName: List\n  - name: Marketplaces - Orders - Order\n    x-displayName: Order\n  - name: Marketplaces - Orders - Batches\n    x-displayName: Batches\n  - name: Marketplaces - Orders - Exports\n    x-displayName: Exports\n  - name: Marketplaces - Orders V3 - Global\n    x-displayName: Global\n  - name: Marketplaces - Orders V3 - List\n    x-displayName: List\n  - name: Marketplaces - Orders V3 - Order\n    x-displayName: Order\n  - name: Marketplaces - Orders V3 - Batches\n    x-displayName: Batches\n  - name: Marketplaces - Orders - Subscriptions - Subscriptions\n    x-displayName: Subscriptions\n  - name: OM Invoice - API - Settings\n    x-displayName: Settings\n  - name: OM Invoice - API - Generation\n    x-displayName: Generation\n  - name: Analytics - Global\n    x-displayName: Global\n  - name: Analytics - Tracking\n    x-displayName: Tracking\n  - name: Analytics - Statistics\n    x-displayName: Statistics\n  - name: Analytics - Optimisations\n    x-displayName: Optimisations\n  - name: Analytics - Reports\n    x-displayName: Reports\n  - name: Analytics - Rules\n    x-displayName: Rules\n  - name: Channel Catalogs - Legacy Tracking - Global\n    x-displayName: Global\npaths:\n  /v2/public/security/login:\n    post:\n      tags:\n        - Public - Security - Security\n      summary: Login\n      description: User Login - The login will give your tokens\n      operationId: Login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/loginRequest'\n        required: true\n      responses:\n        '200':\n          description: Your tokens\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/apiCredentials'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '403':\n          description: Invalid credentials\n          content: {}\n        '500':\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/public/security/register:\n    post:\n      tags:\n        - Public - Security - Security\n      summary: User Registration\n      description: User Registration - Create a new user on BeezUP\n      operationId: Register\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/registerRequest'\n        required: true\n      responses:\n        '204':\n          description: Customer registered\n          content: {}\n        '400':\n          description: Email or password is invalid. Disposable email are refused.\n          content: {}\n        '409':\n          description: Email already used\n          content: {}\n        '500':\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/public/security/lostpassword:\n    post:\n      tags:\n        - Public - Security - Security\n      summary: Lost password\n      description: Lost password - Your password will be regenerated and sent to your email\n      operationId: LostPassword\n      requestBody:\n        description: Your email\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BeezUP_Common_Email'\n        required: true\n      responses:\n        '204':\n          description: New password sent\n          content: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Email not found\n          content: {}\n        '500':\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '502':\n          description: Problem with SMTP service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: email\n  /v2/public/channels/:\n    get:\n      tags:\n        - Public - Channels - Public Channels\n      summary: Get public channel index\n      description: \u003e-\n        Use this operation to get the correct link to the channels and to the\n        list of values\n      operationId: GetChannelsIndex\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Channel list regrouped by country and links to list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/publicChannelIndex'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/public/channels/{countryIsoCode}:\n    get:\n      tags:\n        - Public - Channels - Public Channels\n      summary: The channel list for one country\n      operationId: GetChannels\n      parameters:\n        - name: countryIsoCode\n          in: path\n          description: \u003e\n            The country iso code alpha 3 based on this:\n            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Decoding_table \\\n\n            To know which country are available you have to use the operation:\n            GetChannelsByCountry\n          required: true\n          schema:\n            type: string\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Allows the client to indicate whether it accepts a compressed\n            encoding to reduce traffic size.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The channel list for one country\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/publicChannelInfoList'\n              example:\n                channels:\n                  - name: Amazon Direct FRA\n                    homeUrl: http://www.amazon.fr\n                    logoUrl: \u003e-\n                      http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png\n                    types:\n                      - Marketplace\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Channel country not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/public/lov/:\n    get:\n      tags:\n        - Public - List of Values - LOV\n      summary: Get all list names\n      operationId: GetPublicLovIndex\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Get the list names\n          headers:\n            Cache-Control:\n              description: \u003e\n                Indicates the directive around the caching mechanisms.\\\n\n                For more information, please go to this link:\n                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n              schema:\n                type: array\n                items:\n                  type: string\n            ETag:\n              description: The ETag corresponding to the LOV Index\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/publicLovIndex'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you can keep your version.\n          headers:\n            Cache-Control:\n              description: \u003e\n                Indicates the directive around the caching mechanisms.\\\n\n                For more information, please go to this link:\n                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n              schema:\n                type: array\n                items:\n                  type: string\n            ETag:\n              description: The ETag corresponding to the LOV Index\n              schema:\n                type: string\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  # /v2/public/lov/{listName}:\n  #   get:\n  #     tags:\n  #       - Public - List of Values - LOV\n  #     summary: Get the list of values related to this list name\n  #     operationId: GetPublicListOfValues\n  #     parameters:\n  #       - name: listName\n  #         in: path\n  #         description: The list of value name your want to get\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: Accept-Language\n  #         in: header\n  #         description: Indicates that the client accepts the following languages.\n  #         style: simple\n  #         explode: false\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #       - name: If-None-Match\n  #         in: header\n  #         description: \u003e\n  #           ETag value to identify the last known version of requested\n  #           resource.\\\n\n  #           To avoid useless exchange, we recommend you to indicate the ETag you\n  #           previously got from this operation.\\\n\n  #           If the ETag value does not match the response will be 200 to give\n  #           you a new content, otherwise the response will be: 304 Not Modified,\n  #           without any content.\\\n\n  #           For more details go to this link:\n  #           http://tools.ietf.org/html/rfc7232#section-2.3\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: The list of values\n  #         headers:\n  #           Cache-Control:\n  #             description: \u003e\n  #               Indicates the directive around the caching mechanisms.\\\n\n  #               For more information, please go to this link:\n  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n  #             schema:\n  #               type: array\n  #               items:\n  #                 type: string\n  #           ETag:\n  #             description: The ETag corresponding to the LOV Index\n  #             schema:\n  #               type: string\n  #           Content-Language:\n  #             description: Indicates the language use in the response\n  #             schema:\n  #               type: array\n  #               items:\n  #                 type: string\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/publicListOfValuesResponse'\n  #       '304':\n  #         description: \u003e-\n  #           The ETag sent in the http header If-None-Match did not change. So\n  #           you can keep your version.\n  #         headers:\n  #           Cache-Control:\n  #             description: \u003e\n  #               Indicates the directive around the caching mechanisms.\\\n\n  #               For more information, please go to this link:\n  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n  #             schema:\n  #               type: array\n  #               items:\n  #                 type: string\n  #           ETag:\n  #             description: The ETag corresponding to the LOV Index\n  #             schema:\n  #               type: string\n  #         content: {}\n  #       '404':\n  #         description: List not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  #       default:\n  #         description: Occurs when something goes wrong\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/lov/:\n    get:\n      tags:\n        - User - List of Values - LOV\n      summary: Get all list names\n      operationId: GetUserLovIndex\n      responses:\n        '200':\n          description: Get the list names\n          headers:\n            Cache-Control:\n              description: \u003e\n                Indicates the directive around the caching mechanisms.\\\n\n                For more information, please go to this link:\n                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n              schema:\n                type: array\n                items:\n                  type: string\n            ETag:\n              description: The ETag corresponding to the LOV Index\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/userLovIndex'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you can keep your version.\n          headers:\n            Cache-Control:\n              description: \u003e\n                Indicates the directive around the caching mechanisms.\\\n\n                For more information, please go to this link:\n                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n              schema:\n                type: array\n                items:\n                  type: string\n            ETag:\n              description: The ETag corresponding to the LOV Index\n              schema:\n                type: string\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  # /v2/user/lov/{listName}:\n  #   get:\n  #     tags:\n  #       - User - List of Values - LOV\n  #     summary: Get the list of values related to this list name\n  #     operationId: GetUserListOfValues\n  #     parameters:\n  #       - name: listName\n  #         in: path\n  #         description: The list of value name your want to get\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: Accept-Language\n  #         in: header\n  #         description: Indicates that the client accepts the following languages.\n  #         style: simple\n  #         explode: false\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #       - name: If-None-Match\n  #         in: header\n  #         description: \u003e\n  #           ETag value to identify the last known version of requested\n  #           resource.\\\n\n  #           To avoid useless exchange, we recommend you to indicate the ETag you\n  #           previously got from this operation.\\\n\n  #           If the ETag value does not match the response will be 200 to give\n  #           you a new content, otherwise the response will be: 304 Not Modified,\n  #           without any content.\\\n\n  #           For more details go to this link:\n  #           http://tools.ietf.org/html/rfc7232#section-2.3\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: The list of values\n  #         headers:\n  #           Cache-Control:\n  #             description: \u003e\n  #               Indicates the directive around the caching mechanisms.\\\n\n  #               For more information, please go to this link:\n  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n  #             schema:\n  #               type: array\n  #               items:\n  #                 type: string\n  #           ETag:\n  #             description: The ETag corresponding to the LOV Index\n  #             schema:\n  #               type: string\n  #           Content-Language:\n  #             description: Indicates the language use in the response\n  #             schema:\n  #               type: array\n  #               items:\n  #                 type: string\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/userListOfValuesResponse'\n  #       '304':\n  #         description: \u003e-\n  #           The ETag sent in the http header If-None-Match did not change. So\n  #           you can keep your version.\n  #         headers:\n  #           Cache-Control:\n  #             description: \u003e\n  #               Indicates the directive around the caching mechanisms.\\\n\n  #               For more information, please go to this link:\n  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n  #             schema:\n  #               type: array\n  #               items:\n  #                 type: string\n  #           ETag:\n  #             description: The ETag corresponding to the LOV Index\n  #             schema:\n  #               type: string\n  #         content: {}\n  #       '404':\n  #         description: List not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  #       default:\n  #         description: Occurs when something goes wrong\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/:\n    get:\n      tags:\n        - Customer - Global\n      summary: The index of all operations and LOV\n      operationId: GetCustomerIndex\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customerIndex'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/account:\n    get:\n      tags:\n        - Customer - Account\n      summary: Get user account information\n      operationId: GetUserAccountInfo\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: User account information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accountInfo'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/account/resendEmailActivation:\n    post:\n      tags:\n        - Customer - Account\n      summary: Resend email activation\n      operationId: ResendEmailActivation\n      responses:\n        '204':\n          description: Email activation resent\n          content: {}\n        '400':\n          description: \u003e-\n            Email activation not sent because of email problem. Ensure that your\n            email is the correct one.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: \u003e-\n            Email activation not available because user account already\n            activated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '429':\n          description: Email activation sent recently, must retry later. (One per hour)\n          headers:\n            Retry-After:\n              description: The duration in second to wait before making another request\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '502':\n          description: \u003e-\n            Email activate send failed because of our email service. Ensure that\n            your email is the correct one otherwise please contact our support\n            if the problem persists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/account/activate:\n    post:\n      tags:\n        - Customer - Account\n      summary: Activate the user account\n      operationId: ActivateUserAccount\n      requestBody:\n        description: The email activation id received by email.\n        content:\n          application/json:\n            schema:\n              type: string\n              format: guid\n        required: true\n      responses:\n        '204':\n          description: User account activated.\n          content: {}\n        '403':\n          description: Invalid email activation id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: User account already activated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: emailActivationId\n  /v2/user/customer/account/personalInfo:\n    put:\n      tags:\n        - Customer - Account\n      summary: Save user personal information\n      operationId: SavePersonalInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/personalInfo'\n        required: true\n      responses:\n        '204':\n          description: User account information updated\n          content: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/account/companyInfo:\n    put:\n      tags:\n        - Customer - Account\n      summary: Change company information\n      operationId: SaveCompanyInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/companyInfo'\n        required: true\n      responses:\n        '204':\n          description: Company information saved\n          content: {}\n        '400':\n          description: Bad request or invalid VATNumber.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '403':\n          description: User not found or unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/account/profilePictureInfo:\n    get:\n      tags:\n        - Customer - Account\n      summary: Get profile picture information\n      operationId: GetProfilePictureInfo\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Profile picture information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/profilePictureInfoResponse'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    put:\n      tags:\n        - Customer - Account\n      summary: Change user picture information\n      operationId: SaveProfilePictureInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/profilePictureInfo'\n        required: true\n      responses:\n        '204':\n          description: User profile picture information saved.\n          content: {}\n        '400':\n          description: BadRequest (Url invalid)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '413':\n          description: The picture size is too large\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '415':\n          description: The content type of the image must be an image\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/account/creditCardInfo:\n    get:\n      tags:\n        - Customer - Account\n      summary: Get credit card information\n      operationId: GetCreditCardInfo\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: User credit card information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/creditCardInfoResponse'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Credit Card not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '503':\n          description: \u003e-\n            We are unable to get your credit card info. This is a temporary\n            state. Please retry later\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    put:\n      tags:\n        - Customer - Account\n      summary: Save user credit card info\n      operationId: SaveCreditCardInfo\n      requestBody:\n        description: Credit card info\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/creditCardInfo'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            The credit card information has been accepted for processing, the\n            authorization will be processed shortly.\n          content: {}\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '502':\n          description: Communication problem with our payment service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/account/changeEmail:\n    post:\n      tags:\n        - Customer - Account\n      summary: Change user email\n      operationId: ChangeEmail\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeEmailRequest'\n        required: true\n      responses:\n        '204':\n          description: Email updated\n          content: {}\n        '400':\n          description: New email does not respect the emails's constraints\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/account/changePassword:\n    post:\n      tags:\n        - Customer - Account\n      summary: Change user password\n      operationId: ChangePassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changePasswordRequest'\n        required: true\n      responses:\n        '204':\n          description: Password updated\n          content: {}\n        '400':\n          description: \u003e-\n            Old password is invalid or the new password does not respect the\n            password's constraints\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/security/logout:\n    post:\n      tags:\n        - Customer - Security\n      summary: Log out the current user from go2\n      description: Log out the current user from go2\n      operationId: Logout\n      responses:\n        '204':\n          description: User logout\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/zendeskToken:\n    get:\n      tags:\n        - Customer - Security\n      summary: Zendesk token\n      description: \u003e-\n        Zendesk token - Generates a JWT token to access BeezUP restricted Help\n        Center in SSO as described here:\n        https://support.zendesk.com/hc/en-us/articles/222874768-Using-restricted-Help-Center-content-with-the-Web-Widget\n      operationId: ZendeskToken\n      responses:\n        '200':\n          description: A JWT token to connect the Zendesk Web Widget\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/zendeskToken'\n        '500':\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/stores:\n    get:\n      tags:\n        - Customer - Stores\n      summary: Get store list\n      operationId: GetStores\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Store list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storeList'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Customer - Stores\n      summary: Create a new store\n      operationId: CreateStore\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createStoreRequest'\n        required: true\n      responses:\n        '201':\n          description: \u003e-\n            The store has been created successfully. The http header Location\n            contains the new resource url. The body contains the link to the new\n            resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/links.getStoreLink'\n        '402':\n          description: \u003e-\n            The maximum amount of store has been reached. Please upgrade your\n            contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessagePaymentRequired'\n        '409':\n          description: The customer has a store with the same name\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/stores/{storeId}:\n    get:\n      tags:\n        - Customer - Stores\n      summary: Get store's information\n      operationId: GetStore\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The store information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/store'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Store not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    delete:\n      tags:\n        - Customer - Stores\n      summary: Delete a store\n      operationId: DeleteStore\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Store deleted\n          content: {}\n        '404':\n          description: Store not found or customer not the owner\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    patch:\n      tags:\n        - Customer - Stores\n      summary: Update some store's information.\n      description: |\n        Update some store's information. FYI, you cannot change the country.\n      operationId: UpdateStore\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/updateStoreRequest'\n        required: true\n      responses:\n        '204':\n          description: Store updated\n          content: {}\n        '404':\n          description: Store not found or customer not the owner\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: The store name already used\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/stores/{storeId}/rights:\n    get:\n      tags:\n        - Customer - Rights\n      summary: Get store's rights\n      operationId: GetRights\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: The store's rights\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/functionalityRightInfo'\n        '404':\n          description: Store not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/stores/{storeId}/alerts:\n    get:\n      tags:\n        - Customer - Alerts\n      summary: Get store's alerts\n      operationId: GetStoreAlerts\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: User account alerts information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storeAlerts'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Store not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Customer - Alerts\n      summary: Save store alerts\n      description: \u003e-\n        You just have to send the alert you want to update, does not need all\n        alerts. (PARTIAL UPDATE ACCEPTED)\n      operationId: SaveStoreAlerts\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/saveStoreAlertsRequest'\n        required: true\n      responses:\n        '204':\n          description: Store alerts saved\n          content: {}\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/stores/{storeId}/shares:\n    get:\n      tags:\n        - Customer - Shares\n      summary: Get shares related to this store\n      operationId: GetStoreShares\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The sharing list of the store\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storeShares'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Store not found or customer not the owner\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Customer - Shares\n      summary: Share a store to another user\n      operationId: ShareStore\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        description: Your friend's email\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/friendEmail'\n        required: true\n      responses:\n        '204':\n          description: Store shared\n          content: {}\n        '402':\n          description: Free offer is not allowed to share store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessagePaymentRequired'\n        '404':\n          description: \u003e-\n            Only the owner of the store can make this operation or user not\n            found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: email\n  /v2/user/customer/stores/{storeId}/shares/{userId}:\n    delete:\n      tags:\n        - Customer - Shares\n      summary: Delete a share of a store to another user\n      operationId: DeleteStoreShare\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: userId\n          in: path\n          description: The friend user id\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Share deleted\n          content: {}\n        '404':\n          description: Store not found or customer not the owner\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/friends/{userId}:\n    get:\n      tags:\n        - Customer - Friends\n      summary: Get friend information\n      operationId: GetFriendInfo\n      parameters:\n        - name: userId\n          in: path\n          description: Your friend user id\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Get friend info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/userFriendInfo'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/billingPeriods:\n    get:\n      tags:\n        - Customer - Contracts\n      summary: Get billing periods conditions\n      operationId: GetBillingPeriods\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Get the billing periods conditions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/billingPeriodList'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/offers:\n    get:\n      tags:\n        - Customer - Contracts\n      summary: Get all standard offers\n      operationId: GetStandardOffers\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Get all standard offers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/standardOffers'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Customer - Contracts\n      summary: Get offer pricing\n      description: \u003e\n        Get the offer pricing then you can create your contract with the same\n        request parameters. /v2/user/customer/contracts\n      operationId: GetOffer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/offerRequest'\n        required: true\n      responses:\n        '200':\n          description: Get the offer proposal considering your current contract\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/offer'\n        '400':\n          description: \u003e-\n            Bad request. (Invalid billing period, invalid offer, etc.). You\n            cannot get a pricing for a free offer.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '403':\n          description: You current contract is not modifiable. Please choose another offer.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/contracts:\n    get:\n      tags:\n        - Customer - Contracts\n      summary: Get contract list\n      operationId: GetContracts\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Contract list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/contracts'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Customer - Contracts\n      summary: Create a new contract\n      description: \u003e\n        Now you are ready to create your contract. Before that, please ensure\n        that you check the offer with the same request parameterts. /offers\n      operationId: CreateContract\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createContract'\n        required: true\n      responses:\n        '200':\n          description: \u003e-\n            New contract has been created. Some warnings can be present in\n            response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/createContractResponse'\n        '400':\n          description: Bad request. (Invalid billing period, invalid offer, etc.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '403':\n          description: \u003e-\n            The contract is not modifiable or the coupon offer has been already\n            used\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/contracts/current/disableAutoRenewal:\n    post:\n      tags:\n        - Customer - Contracts\n      summary: \u003e-\n        Schedule termination of your current contract at the end of the\n        commitment.\n      description: \u003e-\n        By default your contract are automatically renew. By calling this\n        operation you can disable the auto renewal.\n      operationId: TerminateCurrentContract\n      requestBody:\n        description: Indicate the termination reason\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/terminateContract'\n        required: true\n      responses:\n        '204':\n          description: Your current contract termination has been scheduled\n          content: {}\n        '400':\n          description: Invalid reason type\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: No current contract\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/customer/contracts/current/reenableAutoRenewal:\n    post:\n      tags:\n        - Customer - Contracts\n      summary: Reactivate your terminated contract.\n      description: By calling this operation you can re-enable the auto renewal.\n      operationId: ReactivateCurrentContract\n      responses:\n        '204':\n          description: Your current contract has been resumed\n          content: {}\n        '404':\n          description: No current contract\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/contracts/next:\n    delete:\n      tags:\n        - Customer - Contracts\n      summary: Delete your next contract\n      operationId: DeleteNextContract\n      responses:\n        '204':\n          description: Next contract has been deleted\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/customer/invoices:\n    get:\n      tags:\n        - Customer - Invoices\n      summary: Get all your invoices\n      operationId: GetInvoices\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Get all invoices of a customer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoiceList'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/:\n    get:\n      tags:\n        - Catalogs - Global\n      summary: Get the index of the catalog API\n      description: \u003e-\n        The operation will give you all the operations you will be able to do\n        and all the LOV used in this API.\n      operationId: CatalogIndex\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/catalogIndex'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/beezupColumns:\n    get:\n      tags:\n        - Catalogs - Global\n      summary: Get the BeezUP columns\n      description: \u003e-\n        Get the BeezUP columns, this columns are used for mapping during the\n        manual catalog importation process.\n      operationId: Catalog_GetBeezUPColumns\n      responses:\n        '200':\n          description: The catalog API index\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/beezUPColumnConfiguration'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get the index of the catalog API for this store\n      description: \u003e-\n        The operation will give you all the operations you will be able to do on\n        this store for this API.\n      operationId: CatalogStoreIndex\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: The catalog index\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/catalogStoreIndex'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/inputConfiguration:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get the last input configuration\n      operationId: Importation_GetManualUpdateLastInputConfig\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/lastManualImportInputConfiguration'\n        '404':\n          description: StoreId or Manual Update last configuration not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/catalogColumns:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get catalog column list\n      operationId: Catalog_GetCatalogColumns\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Catalog column list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/catalogColumnList'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/catalogColumns/{columnId}/rename:\n    post:\n      tags:\n        - Catalogs - Catalog\n      summary: Change Catalog Column User Name\n      operationId: Catalog_ChangeCatalogColumnUserName\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The catalog column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeUserColumnNameRequest'\n        required: true\n      responses:\n        '204':\n          description: Catalog column user name changed\n          content: {}\n        '400':\n          description: When a user column name is duplicate.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: A catalog importation is already in progress!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importAlreadyInProgressResponse'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/customColumns:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get custom column list\n      operationId: Catalog_GetCustomColumns\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Custom column list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customColumnList'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/customColumns/{columnId}:\n    put:\n      tags:\n        - Catalogs - Catalog\n      summary: Create or replace a custom column\n      operationId: Catalog_SaveCustomColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createCustomColumnRequest'\n        required: true\n      responses:\n        '204':\n          description: Custom column saved\n          content: {}\n        '400':\n          description: \u003e-\n            Occurs when a catalog custom column id is already used by a catalog\n            column.\n\n            When the catalog custom column count limit has been reached.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content: {}\n        '409':\n          description: A catalog importation is already in progress!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importAlreadyInProgressResponse'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n    delete:\n      tags:\n        - Catalogs - Catalog\n      summary: Delete custom column\n      operationId: Catalog_DeleteCustomColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Custom column deleted\n          content: {}\n        '403':\n          description: Occurs when the parent category is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: When a catalog importation is already in progress!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/customColumns/{columnId}/rename:\n    post:\n      tags:\n        - Catalogs - Catalog\n      summary: Change Custom Column User Name\n      operationId: Catalog_ChangeCustomColumnUserName\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeUserColumnNameRequest'\n        required: true\n      responses:\n        '204':\n          description: Custom column renamed\n          content: {}\n        '400':\n          description: When a user column name is duplicate.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: A catalog importation is already in progress!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importAlreadyInProgressResponse'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/customColumns/{columnId}/expression:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get the encrypted custom column expression\n      operationId: Catalog_GetCustomColumnExpression\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Encrypted expression\n          content:\n            application/json:\n              schema:\n                type: string\n                example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when a catalog custom column is not found.\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    put:\n      tags:\n        - Catalogs - Catalog\n      summary: Change custom column expression\n      operationId: Catalog_ChangeCustomColumnExpression\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeCustomColumnExpressionRequest'\n        required: true\n      responses:\n        '204':\n          description: Custom column expression saved\n          content: {}\n        '403':\n          description: \u003e-\n            Occurs when the user try to change a custom column related to a\n            Category. If you want to change this custom column expression you\n            have to make a new manual importation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when a catalog custom column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: A catalog importation is already in progress!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importAlreadyInProgressResponse'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/customColumns/computeExpression:\n    post:\n      tags:\n        - Catalogs - Catalog\n      summary: Compute the expression for this catalog.\n      operationId: Catalog_ComputeExpression\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/computeExpressionRequest'\n        required: true\n      responses:\n        '200':\n          description: Compute an expression\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: Occurs when the expression cannot be computed\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/categories:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get category list\n      operationId: Catalog_GetCategories\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Indicates that the client accepts that the response will be\n            compressed to reduce traffic size.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: Categories\n          headers:\n            Content-Encoding:\n              description: Indicates the compression use in the response\n              schema:\n                type: array\n                items:\n                  type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/categoryList'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/products/list:\n    post:\n      tags:\n        - Catalogs - Catalog\n      summary: Get product list\n      operationId: Catalog_GetProducts\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getProductsRequest'\n        required: true\n      responses:\n        '200':\n          description: Product list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/productList'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/products/random:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get random product list\n      description: We will return 10 products randomly selected with all product values\n      operationId: Catalog_GetRandomProducts\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Random product list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/randomProductList'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/products/{productId}:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get product by ProductId\n      operationId: Catalog_GetProductByProductId\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier you want to get\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Product\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/products:\n    get:\n      tags:\n        - Catalogs - Catalog\n      summary: Get product by Sku\n      operationId: Catalog_GetProductBySku\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: sku\n          in: query\n          description: The product sku you want to get\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Product\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        '404':\n          description: StoreId or Product not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/importations:\n    get:\n      tags:\n        - Catalogs - Importation Process\n      summary: Get the latest catalog importation reporting for all your stores\n      operationId: Importation_GetReportingsAllStores\n      responses:\n        '200':\n          description: The last importation reportings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importationsPerStoreResponse'\n        '404':\n          description: UserId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations:\n    get:\n      tags:\n        - Catalogs - Importation Process\n      summary: Get the latest catalog importation reporting\n      operationId: Importation_GetReportings\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: The last importation reportings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importationsResponse'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/start:\n    post:\n      tags:\n        - Catalogs - Importation Process\n      summary: Start Manual Import\n      operationId: Importation_StartManualUpdate\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/startManualImportRequest'\n        required: true\n      responses:\n        '202':\n          description: Catalog importation started\n          headers:\n            Retry-After:\n              description: The duration in second to wait before polling this resource\n              schema:\n                minimum: 5\n                type: integer\n            Location:\n              description: The location of the new resource to poll\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \u003e-\n                  #/components/schemas/links.Importation_GetImportationMonitoringLink\n        '400':\n          description: \u003e-\n            Missing Input configuration in the request\n\n            Occurs when there is a duplicate file number in the input\n            configuration\n\n            Occurs when there is a duplicate file Uri in the input configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: StoreId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: A catalog importation is already in progress!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importAlreadyInProgressResponse'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/importations/{executionId}:\n    get:\n      tags:\n        - Catalogs - Importation Process\n      summary: Get the importation status\n      operationId: Importation_GetImportationMonitoring\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importationMonitoring'\n        '404':\n          description: \u003e-\n            ExecutionId not found or not yet synchronized. If not synchronized\n            within 30 sec after the import has been started, please contact our\n            support\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/cancel:\n    post:\n      tags:\n        - Catalogs - Importation Process\n      summary: Cancel importation\n      operationId: Importation_Cancel\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Catalog importation canceled\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/technicalProgression:\n    get:\n      tags:\n        - Catalogs - Importation Process\n      summary: Get technical progression\n      operationId: Importation_TechnicalProgression\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: When the technical progression is correctly retrived\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importationTechnicalProgression'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/configureRemainingCatalogColumns:\n    post:\n      tags:\n        - Catalogs - Importation Process\n      summary: Configure remaining catalog columns\n      description: \u003e-\n        This operation should be used after you have mapped the required BeezUP\n        Columns\n      operationId: Importation_ConfigureRemainingCatalogColumns\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: \u003e-\n            Remaining catalog columns have been configured. This operation has\n            no impact on the current catalog until you commit the catalog\n            importation.\n          content: {}\n        '400':\n          description: \u003e-\n            When a user column name is duplicate.\n\n            When the catalog column name are duplicate.\n\n            When the BeezUP column have duplicate mapping.\n\n            Occurs when the required beezup column is not mapped to any column.\n\n            Occurs when the category hierarchy is not correctly mapped.\n\n            Occurs when the duplicate strategy on {catalogColumnName} is not\n            found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/commitColumns:\n    post:\n      tags:\n        - Catalogs - Importation Process\n      summary: Commit columns\n      operationId: Importation_CommitColumns\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: \u003e-\n            Columns configuration have been committed. This operation has no\n            impact on the current catalog until you commit the catalog\n            importation.\n          content: {}\n        '400':\n          description: |-\n            When a user column name is duplicate.\n            When the catalog column name are duplicate.\n            When the BeezUP column have duplicate mapping.\n            Occurs when the required beezup column is not mapped to any column.\n            Occurs when the category hierarchy is not correctly mapped.\n            When the catalog column count limit has been reached.\n            When the catalog custom column count limit has been reached.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/commit:\n    post:\n      tags:\n        - Catalogs - Importation Process\n      summary: Commit Importation\n      operationId: Importation_Commit\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Catalog importation committed\n          content: {}\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}:\n    get:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: \u003e-\n        Get the product sample related to this importation with all columns\n        (catalog and custom)\n      operationId: Importation_GetProductSample\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productSampleIndex\n          in: path\n          description: Index of the product sample. Starting from 0 to 99.\n          required: true\n          schema:\n            maximum: 99\n            minimum: 0\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/productSample'\n        '404':\n          description: \u003e-\n            ExecutionId not found or not yet synchronized. If not synchronized\n            within 30 sec, please contact our support\n                  schema:\n            $ref:\n            'https://api.beezup.com/swaggerhub/domains/BeezUP/api.beezup.com/v2#/definitions/BeezUP_Common_ErrorResponseMessage'\n          content: {}\n        '409':\n          description: \u003e-\n            Catalog preparation read step is not completed. Please refer to the\n            reporting of this execution for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}/customColumns/{columnId}:\n    get:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Get product sample custom column value related to this importation.\n      description: \u003e-\n        /!\\ Use this operation only when you just changed the custom column\n        expression and you want to get a precise the property value. Otherwise\n        use the operation Importation_GetProductSample which will give you all\n        property values\n      operationId: Importation_GetProductSampleCustomColumnValue\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productSampleIndex\n          in: path\n          description: Index of the product sample. Starting from 0 to 99.\n          required: true\n          schema:\n            maximum: 99\n            minimum: 0\n            type: integer\n            format: int32\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Product sample custom column value\n          content:\n            application/json:\n              schema:\n                type: string\n                example: A value computed from a expression\n        '404':\n          description: \u003e-\n            ExecutionId not found or not yet synchronized. If not synchronized\n            within 30 sec, please contact our support\n          headers:\n            Retry-After:\n              description: The duration in second to wait before polling this resource\n              schema:\n                minimum: 5\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: \u003e-\n            Catalog preparation read step is not completed. Please refer to the\n            reporting of this execution for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns:\n    get:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Get detected catalog columns during this importation.\n      operationId: Importation_GetDetectedCatalogColumns\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/detectedCatalogColumnList'\n        '404':\n          description: \u003e-\n            ExecutionId not found or not yet synchronized. If not synchronized\n            within 30 sec, please contact our support\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: \u003e-\n            Catalog preparation read step is not completed. Please refer to the\n            reporting of this execution for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}:\n    post:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Configure catalog column\n      operationId: Importation_ConfigureCatalogColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/configureCatalogColumnCatalogRequest'\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            Catalog column configured. This operation has no impact on the\n            current catalog until you commit the catalog importation.\n          content: {}\n        '400':\n          description: |-\n\n            When the catalog column name is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/ignore:\n    post:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Ignore Column\n      operationId: Importation_IgnoreColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: \u003e-\n            Catalog column ignored. This operation has no impact on the current\n            catalog until you commit the catalog importation.\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/reattend:\n    post:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Reattend Column\n      operationId: Importation_ReattendColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: \u003e-\n            Catalog column reattended. This operation has no impact on the\n            current catalog until you commit the catalog importation.\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/map:\n    post:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Map catalog column to a BeezUP column\n      operationId: Importation_MapCatalogColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The catalog column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/mapBeezUPColumnRequest'\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            Catalog column mapped. This operation has no impact on the current\n            catalog until you commit the catalog importation.\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/unmap:\n    post:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Unmap catalog column\n      operationId: Importation_UnmapCatalogColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The catalog column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: \u003e-\n            Catalog Column unmapped. This operation has no impact on the current\n            catalog until you commit the catalog importation.\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns:\n    get:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Get custom columns currently place in this importation\n      operationId: Importation_GetCustomColumns\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Custom columns of current Importation successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importationCustomColumnList'\n        '404':\n          description: \u003e-\n            ExecutionId not found or not yet synchronized. If not synchronized\n            within 30 sec, please contact our support\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: \u003e-\n            Catalog preparation read step is not completed. Please refer to the\n            reporting of this execution for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/expression:\n    get:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Get the encrypted custom column expression in this importation\n      operationId: Importation_GetCustomColumnExpression\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Encrypted expression\n          content:\n            application/json:\n              schema:\n                type: string\n                example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan\n        '404':\n          description: \u003e-\n            ExecutionId not found or not yet synchronized. If not synchronized\n            within 30 sec, please contact our support\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: \u003e-\n            Catalog preparation read step is not completed. Please refer to the\n            reporting of this execution for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}:\n    put:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Create or replace a custom column\n      operationId: Importation_SaveCustomColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeCustomColumnRequest'\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            Custom column configured. This operation has no impact on the\n            current catalog until you commit the catalog importation.\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n    delete:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Delete Custom Column\n      operationId: Importation_DeleteCustomColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: When the custom column for this importation is correctly deleted\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/map:\n    post:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Map custom column to a BeezUP column\n      operationId: Importation_MapCustomColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/mapBeezUPColumnRequest'\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            Custom column mapped. This operation has no impact on the current\n            catalog until you commit the catalog importation.\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/unmap:\n    post:\n      tags:\n        - Catalogs - Importation Catalog Info\n      summary: Unmap custom column\n      operationId: Importation_UnmapCustomColumn\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: columnId\n          in: path\n          description: The custom column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: \u003e-\n            Custom column unmapped. This operation has no impact on the current\n            catalog until you commit the catalog importation.\n          content: {}\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n            Occurs when a catalog column is not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Occurs when this importation is already finished.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/importations/{executionId}/products/list:\n    post:\n      tags:\n        - Catalogs - Importation Process\n      summary: Importation Get Products Report\n      operationId: Importation_GetProductsReport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getImportationProductsReportRequest'\n        required: true\n      responses:\n        '200':\n          description: Get Products Report Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getImportationProductsReportResponse'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n          content: {}\n        '409':\n          description: Report Not ready Yet. Please retry in a few minutes.\n          content: {}\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/importations/{executionId}/report:\n    get:\n      tags:\n        - Catalogs - Importation Process\n      summary: Importation Get Report\n      operationId: Importation_GetReport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: executionId\n          in: path\n          description: The execution identifier of you catalog importation\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Get Report Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getImportationReportResponse'\n        '404':\n          description: |-\n            Occurs when a user tries to work on the wrong store.\n            Occurs when the message concerns the wrong execution.\n          content: {}\n        '409':\n          description: Report Not ready Yet. Please retry in a few minutes.\n          content: {}\n  /v2/user/catalogs/{storeId}/autoImport/activate:\n    post:\n      tags:\n        - Catalogs - Auto\n      summary: \u003e-\n        Activate the auto importation of the last successful manual catalog\n        importation.\n      description: \u003e-\n        Once you have made your fist manual catalog importation with success,\n        you can call this operation to import it automatically. No parameter\n        required, we know which one it is.\n      operationId: Importation_ActivateAutoImport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Auto import activated\n          content: {}\n        '400':\n          description: Occurs when the user tries to auto import a local file.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: When a catalog importation is already in progress!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/autoImport:\n    get:\n      tags:\n        - Catalogs - Auto\n      summary: Get the auto import configuration\n      operationId: Auto_GetAutoImportConfiguration\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Auto import configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/autoImportConfiguration'\n        '404':\n          description: StoreId or Auto Import configuration not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    delete:\n      tags:\n        - Catalogs - Auto\n      summary: Delete Auto Import\n      operationId: Auto_DeleteAutoImport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Auto import deleted\n          content: {}\n        '400':\n          description: Occurs when the catalog auto import is not configured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/autoImport/start:\n    post:\n      tags:\n        - Catalogs - Auto\n      summary: Start Auto Import Manually\n      operationId: Auto_StartAutoImport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '202':\n          description: Catalog importation started\n          headers:\n            Retry-After:\n              description: The duration in second to wait before polling this resource\n              schema:\n                minimum: 5\n                type: integer\n            Location:\n              description: The location of the new resource to poll\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \u003e-\n                  #/components/schemas/links.Importation_GetImportationMonitoringLink\n        '400':\n          description: \u003e-\n            Occurs when the catalog auto import is not configured.\n\n            When a user column name is duplicate.\n\n            When the catalog column name are duplicate.\n\n            When the BeezUP column have duplicate mapping.\n\n            Occurs when the required beezup column is not mapped to any column.\n\n            Occurs when the category hierarchy is not correctly mapped.\n\n            Occurs when the duplicate strategy on {catalogColumnName} is not\n            found.\n\n            When the user tries to import to ofen the catalog file to download\n            count max limit has been reached.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: An importation is already in progress\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/autoImport/pause:\n    post:\n      tags:\n        - Catalogs - Auto\n      summary: Pause Auto Import\n      operationId: Auto_PauseAutoImport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Auto import paused\n          content: {}\n        '400':\n          description: Occurs when the catalog auto import is not configured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/autoImport/resume:\n    post:\n      tags:\n        - Catalogs - Auto\n      summary: Resume Auto Import\n      operationId: Auto_ResumeAutoImport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Auto import resumed\n          content: {}\n        '400':\n          description: Occurs when the catalog auto import is not configured.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/catalogs/{storeId}/autoImport/scheduling/interval:\n    post:\n      tags:\n        - Catalogs - Auto\n      summary: Configure Auto Import Interval\n      operationId: Auto_ConfigureAutoImportInterval\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/configureAutoImportIntervalRequest'\n        required: true\n      responses:\n        '204':\n          description: Auto import scheduling interval saved\n          content: {}\n        '400':\n          description: \u003e-\n\n            When the min catalog Auto Import scheduling interval delay has been\n            reached.\n\n            When the max catalog Auto Import count has been reached.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/catalogs/{storeId}/autoImport/scheduling/schedules:\n    post:\n      tags:\n        - Catalogs - Auto\n      summary: Configure Auto Import Schedules\n      operationId: Auto_ScheduleAutoImport\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/scheduleAutoImportRequest'\n        required: true\n      responses:\n        '204':\n          description: Auto import scheduling saved\n          content: {}\n        '400':\n          description: \u003e-\n\n            When the max catalog Auto Import count has been reached.\n\n            When the min catalog Auto Import scheduling interval delay has been\n            reached.\n\n            When the max catalog Auto Import count has been reached.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Occurs when a user tries to work on the wrong store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channels/:\n    get:\n      tags:\n        - Channels - Channels Global\n      summary: List all available channel for this store\n      operationId: GetAvailableChannels\n      parameters:\n        - name: storeId\n          in: query\n          description: The store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n      responses:\n        '200':\n          description: Available channel list for this store\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/channelHeader'\n  /v2/user/channels/{channelId}:\n    get:\n      tags:\n        - Channels - Channels Global\n      summary: Get channel information\n      operationId: GetChannelInfo\n      parameters:\n        - name: channelId\n          in: path\n          description: The channel identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelInfo'\n  /v2/user/channels/{channelId}/categories:\n    get:\n      tags:\n        - Channels - Channels Global\n      summary: Get channel categories\n      operationId: GetChannelCategories\n      parameters:\n        - name: channelId\n          in: path\n          description: The channel identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Indicates that the client accepts that the response will be\n            compressed to reduce traffic size.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: Channel categories\n          headers:\n            Content-Encoding:\n              description: Indicates the compression use in the response\n              schema:\n                type: array\n                items:\n                  type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelRootCategory'\n  /v2/user/channels/{channelId}/columns:\n    post:\n      tags:\n        - Channels - Channels Global\n      summary: Get channel columns\n      operationId: GetChannelColumns\n      parameters:\n        - name: channelId\n          in: path\n          description: The channel identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Indicates that the client accepts that the response will be\n            compressed to reduce traffic size.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      requestBody:\n        description: \u003e-\n          Allow you to filter the channel column identifier list your want to\n          get\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'\n        required: false\n      responses:\n        '200':\n          description: Channel columns\n          headers:\n            Content-Encoding:\n              description: Indicates the compression use in the response\n              schema:\n                type: array\n                items:\n                  type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/channelColumn'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/:\n    get:\n      tags:\n        - Channel Catalogs - Global\n      summary: List all your current channel catalogs\n      operationId: GetChannelCatalogs\n      parameters:\n        - name: storeId\n          in: query\n          description: The store identifier\n          schema:\n            type: string\n            format: guid\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogList'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Channel Catalogs - Global\n      summary: Add a new channel catalog\n      operationId: AddChannelCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/addChannelCatalogRequest'\n        required: true\n      responses:\n        '201':\n          description: When the channel has been successfully added for this store\n          headers:\n            Retry-After:\n              description: The duration in second to wait before polling this resource\n              schema:\n                minimum: 5\n                type: integer\n            Location:\n              description: The new location\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/links.GetChannelCatalogLink'\n        '404':\n          description: StoreId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}:\n    get:\n      tags:\n        - Channel Catalogs - Global\n      summary: Get the channel catalog information\n      operationId: GetChannelCatalog\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel catalog\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalog'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    delete:\n      tags:\n        - Channel Catalogs - Global\n      summary: Delete the channel catalog\n      operationId: DeleteChannelCatalog\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog deleted\n          content: {}\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/filterOperators:\n    get:\n      tags:\n        - Channel Catalogs - Global\n      summary: Get channel catalog filter operators\n      operationId: GetChannelCatalogFilterOperators\n      responses:\n        '200':\n          description: Channel catalog  filter operator list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/filterOperator'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/enable:\n    post:\n      tags:\n        - Channel Catalogs - Settings\n      summary: Enable a channel catalog\n      operationId: EnableChannelCatalog\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog enabled\n          content: {}\n        '402':\n          description: You have to upgrade your offer to activate this channel catalog\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/upgradeOfferRequired'\n        '404':\n          description: Occurs when a user tries to work on the wrong ChanelCatalogId.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/disable:\n    post:\n      tags:\n        - Channel Catalogs - Settings\n      summary: Disable a channel catalog\n      operationId: DisableChannelCatalog\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog disabled\n          content: {}\n        '404':\n          description: Occurs when a user tries to work on the wrong ChanelCatalogId.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/settings/general:\n    put:\n      tags:\n        - Channel Catalogs - Settings\n      summary: Configure channel catalog general settings\n      operationId: ConfigureChannelCatalogGeneralSettings\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/generalSettings'\n        required: true\n      responses:\n        '204':\n          description: Channel catalog general settings configured\n          content: {}\n        '404':\n          description: Occurs when a user tries to work on the wrong ChanelCatalogId.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/settings/cost:\n    put:\n      tags:\n        - Channel Catalogs - Settings\n      summary: Configure channel catalog cost settings\n      operationId: ConfigureChannelCatalogCostSettings\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/costSettings'\n        required: true\n      responses:\n        '204':\n          description: Channel catalog cost settings configured\n          content: {}\n        '404':\n          description: Occurs when a user tries to work on the wrong ChanelCatalogId.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/columnMappings:\n    put:\n      tags:\n        - Channel Catalogs - Column Mappings\n      summary: Configure channel catalog column mappings\n      operationId: ConfigureChannelCatalogColumnMappings\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/channelCatalogColumnMappingList'\n        required: true\n      responses:\n        '204':\n          description: Channel catalog column mappings configured\n          content: {}\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/categories:\n    get:\n      tags:\n        - Channel Catalogs - Categories\n      summary: Get channel catalog categories\n      operationId: GetChannelCatalogCategories\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel catalog category mappings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogCategoryConfigurationList'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/categories/disableMapping:\n    post:\n      tags:\n        - Channel Catalogs - Categories\n      summary: Disable a channel catalog category mapping\n      operationId: DisableChannelCatalogCategoryMapping\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog category mapping disabled\n          content: {}\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/categories/reenableMapping:\n    post:\n      tags:\n        - Channel Catalogs - Categories\n      summary: Reenable a channel catalog category mapping\n      operationId: ReenableChannelCatalogCategoryMapping\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog category mapping reenabled\n          content: {}\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/categories/configure:\n    post:\n      tags:\n        - Channel Catalogs - Categories\n      summary: Configure channel catalog category\n      operationId: ConfigureChannelCatalogCategory\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/configureCategoryRequest'\n        required: true\n      responses:\n        '204':\n          description: Channel catalog category configured\n          content: {}\n        '400':\n          description: BadRequest. See Error Response for more details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/exclusionFilters:\n    get:\n      tags:\n        - Channel Catalogs - Exclusion Filters\n      summary: Get channel catalog exclusion filters\n      operationId: GetChannelCatalogExclusionFilters\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel catalog exclusion filter list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exclusionFiltersResponse'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    put:\n      tags:\n        - Channel Catalogs - Exclusion Filters\n      summary: Configure channel catalog exclusion filters\n      operationId: ConfigureChannelCatalogExclusionFilters\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/exclusionFilters'\n        required: true\n      responses:\n        '204':\n          description: Channel catalog exclusion filter list configured\n          content: {}\n        '400':\n          description: BadRequest. See Error Response for more details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/products:\n    post:\n      tags:\n        - Channel Catalogs - Products\n      summary: Get channel catalog product information list\n      operationId: GetChannelCatalogProductInfoList\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        description: The channel catalog product list filter\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getChannelCatalogProductInfoListRequest'\n        required: true\n      responses:\n        '200':\n          description: Channel catalog product information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogProductInfoList'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/products/export:\n    post:\n      tags:\n        - Channel Catalogs - Products\n      summary: Export channel catalog product information list\n      operationId: ExportChannelCatalogProductInfoList\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: format\n          in: query\n          description: The file type of the exportation\n          required: true\n          schema:\n            type: string\n            enum:\n              - xlsx\n              - csv\n      requestBody:\n        description: The channel catalog product list filter\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getChannelCatalogProductInfoListRequest'\n        required: true\n      responses:\n        '200':\n          description: Channel catalog product information list exported\n          headers:\n            Location:\n              description: \u003e\n                To indicate the url of the export file\n\n                Example:\n                https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_Link3'\n              example:\n                href: \u003e-\n                  https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx\n                method: GET\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/products/counters:\n    get:\n      tags:\n        - Channel Catalogs - Products\n      summary: Get channel catalog products' counters\n      operationId: GetChannelCatalogProductsCounters\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel catalog products' counters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogProductsCounters'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/products:\n    post:\n      tags:\n        - Channel Catalogs - Products\n      summary: Get channel catalog products related to these channel catalogs\n      operationId: GetChannelCatalogProductByChannelCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \u003e-\n                #/components/schemas/channelCatalogProductByChannelCatalogRequest\n        required: true\n      responses:\n        '200':\n          description: The channel catalog product by channel catalog\n          content:\n            application/json:\n              schema:\n                $ref: \u003e-\n                  #/components/schemas/channelCatalogProductByChannelCatalogResponse\n        '404':\n          description: ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}:\n    get:\n      tags:\n        - Channel Catalogs - Products\n      summary: Get channel catalog product information\n      operationId: GetChannelCatalogProductInfo\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel catalog product information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogProductInfo'\n        '404':\n          description: ChannelCatalog or ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides:\n    put:\n      tags:\n        - Channel Catalogs - Products Overrides\n      summary: Override channel catalog product values\n      operationId: OverrideChannelCatalogProductValues\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/productOverrides'\n        required: true\n      responses:\n        '204':\n          description: Channel catalog product overriden\n          content: {}\n        '400':\n          description: BadRequest. See Error Response for more details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: ChannelCatalogId or ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/{channelColumnId}:\n    delete:\n      tags:\n        - Channel Catalogs - Products Overrides\n      summary: Delete a specific channel catalog product value override\n      operationId: DeleteChannelCatalogProductValueOverride\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: channelColumnId\n          in: path\n          description: The channel column identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n          example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977\n      responses:\n        '204':\n          description: Channel catalog product value override deleted\n          content: {}\n        '404':\n          description: ChannelCatalogId or ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/copy:\n    get:\n      tags:\n        - Channel Catalogs - Products Overrides\n      summary: Get channel catalog product value override compatibilities status\n      operationId: GetChannelCatalogProductValueOverrideCopy\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: placeholder. will be completed soon.\n          content: {}\n        '404':\n          description: ChannelCatalog or ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Channel Catalogs - Products Overrides\n      summary: Copy channel catalog product value override\n      operationId: ConfigureChannelCatalogProductValueOverrideCopy\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog product value override deleted\n          content: {}\n        '404':\n          description: ChannelCatalogId or ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/disable:\n    post:\n      tags:\n        - Channel Catalogs - Products Optimisation\n      summary: Disable channel catalog product\n      description: \u003e\n        By default a all your catalog products are exposed to the channel.\n\n        You can disable a product by using this operation.\n\n        /!\\ In case of massive optimisation we recommand you to use the\n        analytics api\n      operationId: DisableChannelCatalogProduct\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog product disabled\n          content: {}\n        '404':\n          description: ChannelCatalogId Or ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/reenable:\n    post:\n      tags:\n        - Channel Catalogs - Products Optimisation\n      summary: Reenable channel catalog product\n      description: \u003e\n        By default a all your catalog products are exposed to the channel.\n\n        You can reenable a product by using this operation.\n\n        /!\\ In case of massive optimisation we recommand you to use the\n        analytics api\n      operationId: ReenableChannelCatalogProduct\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog product reenabled\n          content: {}\n        '404':\n          description: ChannelCatalogId or ProductId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/exportations/cache:\n    get:\n      tags:\n        - Channel Catalogs - Exportations\n      summary: Get the exportation cache information\n      operationId: GetChannelCatalogExportationCacheInfo\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel catalog exportation cache information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogExportCacheInfoResponse'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/exportations/cache/clear:\n    post:\n      tags:\n        - Channel Catalogs - Exportations\n      summary: Clear the exportation cache\n      operationId: ClearChannelCatalogExportationCache\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog exportation cache cleared\n          content: {}\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/channelCatalogs/{channelCatalogId}/exportations/history:\n    get:\n      tags:\n        - Channel Catalogs - Exportations\n      summary: Get the exportation history\n      operationId: GetChannelCatalogExportationHistory\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: pageNumber\n          in: query\n          description: The page number you want to get\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: pageSize\n          in: query\n          description: The entry count you want to get\n          required: true\n          schema:\n            maximum: 100\n            minimum: 25\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Channel catalog exportation history\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogExportationHistory'\n        '404':\n          description: ChannelCatalogId not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/marketplaces/channelcatalogs/:\n    get:\n      tags:\n        - Marketplaces - Channel catalogs - Global\n      summary: Get your marketplace channel catalog list\n      operationId: GetMarketplaceChannelCatalogs\n      parameters:\n        - name: storeId\n          in: query\n          description: The StoreId to filter by\n          schema:\n            type: string\n            format: guid\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n      responses:\n        '200':\n          description: Marketplace channel catalog list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/marketplaceChannelCatalogList'\n        '404':\n          description: Store not found\n          content: {}\n  /v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/publish:\n    post:\n      tags:\n        - Marketplaces - Channel catalogs - Publications\n      summary: '[PREVIEW] Launch a publication of the catalog to the marketplace'\n      operationId: PublishCatalogToMarketplace\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: Marketplace Technical Code to query (required)\n          required: true\n          schema:\n            type: string\n            x-lov: MarketplaceTechnicalCode\n          x-lov: MarketplaceTechnicalCode\n        - name: accountId\n          in: path\n          description: Account Id to query (required)\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/publishCatalogToMarketplaceRequest'\n        required: true\n      responses:\n        '202':\n          description: Publication request accepted\n          content: {}\n        '400':\n          description: \u003e-\n            One or more channel catalog marketplace property keys or values are\n            invalid for requested marketplace channel catalog. See response for\n            details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: \u003e-\n            Requested account, marketplace or authorization for current user not\n            found\n          content: {}\n        '503':\n          description: \u003e-\n            The marketplace configuration related to this channel catalog is\n            currently in progress. Please retry later.\n          headers:\n            Retry-After:\n              description: Indicate the duration to before the next retry in second.\n              schema:\n                type: integer\n                format: int32\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-releaseStatus: PREVIEW\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/history:\n    get:\n      tags:\n        - Marketplaces - Channel catalogs - Publications\n      summary: \u003e-\n        Fetch the publication history for an account, sorted by descending start\n        date\n      operationId: GetPublications\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: Marketplace Technical Code to query (required)\n          required: true\n          schema:\n            type: string\n            x-lov: MarketplaceTechnicalCode\n          x-lov: MarketplaceTechnicalCode\n        - name: accountId\n          in: path\n          description: Account Id to query (required)\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: channelCatalogId\n          in: query\n          description: Channel Catalog Id by which to filter (optional)\n          schema:\n            type: string\n            format: guid\n        - name: count\n          in: query\n          description: Amount of entries to fetch (optional, default set to 10)\n          schema:\n            maximum: 100\n            minimum: 10\n            type: integer\n            format: int32\n            default: 10\n        - name: publicationTypes\n          in: query\n          description: Publication types by which to filter (optional)\n          required: true\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: publicationType\n              enum:\n                - PublishProducts\n                - PublishOffers\n                - Unpublish\n            x-lov: MarketplacePublicationType\n          x-lov: MarketplacePublicationType\n      responses:\n        '200':\n          description: Successfully fetched channel catalog settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accountPublications'\n        '400':\n          description: \u003e-\n            Feature only available for Amazon, Ebay, CDiscount and Mirakl\n            marketplaces\n          content: {}\n        '404':\n          description: \u003e-\n            Requested account, marketplace or authorization for current user not\n            found\n          content: {}\n        '503':\n          description: \u003e-\n            The marketplace configuration related to this channel catalog is\n            currently in progress. Please retry later.\n          headers:\n            Retry-After:\n              description: Indicate the duration to before the next retry in second.\n              schema:\n                type: integer\n                format: int32\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n  # /v2/user/marketplaces/channelcatalogs/{channelCatalogId}/properties:\n  #   get:\n  #     tags:\n  #       - Marketplaces - Channel catalogs - Settings\n  #     summary: Get the marketplace properties for a channel catalog\n  #     operationId: GetChannelCatalogMarketplaceProperties\n  #     parameters:\n  #       - name: channelCatalogId\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: string\n  #           format: guid\n  #       - name: redirectionPageUrl\n  #         in: query\n  #         required: true\n  #         schema:\n  #           type: string\n  #           format: uri\n  #       - name: Accept-Language\n  #         in: header\n  #         description: Indicates that the client accepts the following languages.\n  #         style: simple\n  #         explode: false\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #     responses:\n  #       '200':\n  #         description: Successfully fetched channel catalog properties\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/channelCatalogMarketplaceProperties'\n  #       '404':\n  #         description: Marketplace channel Catalog not found\n  #         content: {}\n  #       '503':\n  #         description: \u003e-\n  #           The marketplace configuration related to this channel catalog is\n  #           currently in progress. Please retry later.\n  #         headers:\n  #           Retry-After:\n  #             description: Indicate the duration to before the next retry in second.\n  #             schema:\n  #               type: integer\n  #               format: int32\n  #         content: {}\n  #       default:\n  #         description: Occurs when something goes wrong\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/marketplaces/channelcatalogs/{channelCatalogId}/settings:\n    get:\n      tags:\n        - Marketplaces - Channel catalogs - Settings\n      summary: Get the marketplace settings for a channel catalog\n      operationId: GetChannelCatalogMarketplaceSettings\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: Channel Catalog Id to query (required)\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Successfully fetched channel catalog settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channelCatalogMarketplaceSettings'\n        '404':\n          description: Marketplace channel catalog not found\n          content: {}\n        '503':\n          description: \u003e-\n            The marketplace configuration related to this channel catalog is\n            currently in progress. Please retry later.\n          headers:\n            Retry-After:\n              description: Indicate the duration to before the next retry in second.\n              schema:\n                type: integer\n                format: int32\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Marketplaces - Channel catalogs - Settings\n      summary: Save new marketplace settings for a channel catalog\n      description: |\n        Allow you to configure your marketplace settings.\n        Partial update accepted.\n      operationId: SetChannelCatalogMarketplaceSettings\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: Channel Catalog Id to query\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        description: Settings to save\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/setChannelCatalogMarketplaceSettingsRequest'\n        required: true\n      responses:\n        '204':\n          description: Successfully saved channel catalog marketplace settings\n          content: {}\n        '400':\n          description: \u003e-\n            One or more channel catalog marketplace property keys or values are\n            invalid for requested marketplace channel catalog. See response for\n            details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Marketplace channel catalog not found\n          content: {}\n        '503':\n          description: \u003e-\n            The marketplace configuration related to this channel catalog is\n            currently in progress. Please retry later.\n          headers:\n            Retry-After:\n              description: Indicate the duration to before the next retry in second.\n              schema:\n                type: integer\n                format: int32\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: model\n  /v2/user/marketplaces/orders/:\n    get:\n      tags:\n        - Marketplaces - Orders - Global\n      summary: '[DEPRECATED] Get all actions you can do on the order API'\n      operationId: GetOrderIndex\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Order index\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderIndex'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-tagGroups: Martketplaces Orders\n  /v2/user/marketplaces/orders/status:\n    get:\n      tags:\n        - Marketplaces - Orders - Global\n      summary: \u003e-\n        [DEPRECATED] Get current synchronization status between your\n        marketplaces and BeezUP accounts\n      description: Use /orders/v3\n      operationId: GetMarketplaceAccountsSynchronization\n      parameters:\n        - name: storeId\n          in: query\n          description: The StoreId to filter by\n          schema:\n            type: string\n            format: guid\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched current synchronization status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accountSynchronizationList'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Store could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-tagGroups: Martketplaces Orders\n  /v2/user/marketplaces/orders/harvest:\n    post:\n      tags:\n        - Marketplaces - Orders - Global\n      summary: '[DEPRECATED] Send harvest request to all your marketplaces'\n      operationId: HarvestAll\n      parameters:\n        - name: storeId\n          in: query\n          description: The StoreId to filter by\n          schema:\n            type: string\n            format: guid\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n      responses:\n        '202':\n          description: Successfully sent harvest request to all marketplaces\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content: {}\n        '404':\n          description: Requested Store could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: \u003e-\n            Failed to send harvest request because allowed rate limits have been\n            exceeded\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n  /v2/user/marketplaces/orders/automaticTransitions:\n    get:\n      tags:\n        - Marketplaces - Orders - AutoTransitions\n      summary: Get list of configured automatic Order status transitions\n      operationId: GetAutomaticTransitions\n      parameters:\n        - name: storeId\n          in: query\n          description: The StoreId to filter by\n          schema:\n            type: string\n            format: guid\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Successfully fetched list of configured automatic Order status\n            transitions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/automaticTransitionInfoList'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Store could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n    post:\n      tags:\n        - Marketplaces - Orders - AutoTransitions\n      summary: Configure new or existing automatic Order status transition\n      operationId: ConfigureAutomaticTransitions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/configureAutomaticTransitionRequest'\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            Successfully confirugred new or existing automatic Order status\n            transition\n          content: {}\n        '400':\n          description: Requested automatic Order status transition could not be configured\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/list/full:\n    post:\n      tags:\n        - Marketplaces - Orders - List\n      summary: \u003e-\n        [DEPRECATED] Get a paginated list of all Orders with all Order and Order\n        Item(s) properties\n      description: \u003e\n        DEPRECATED - Use /orders/v3 instead\n\n        The purpose of this operation is to reduce the amount of request to the\n        API.\\\n\n        \\\n\n        Previous implmentation of this feature only returned a partial (light)\n        version of the Orders. The purpose of this API is to reduce the number\n        of incoming requests by returning the complete (full) Order and Order\n        Item(s) properties.\n      operationId: GetOrderListFull\n      parameters:\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Allows the client to indicate wether it accepts a compressed\n            encoding to reduce traffic size\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderListRequest'\n        required: true\n      responses:\n        '200':\n          description: Successfully fetched the full list of Orders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderListFull'\n        '400':\n          description: \u003e-\n            Could not process request for given parameters values. Please check\n            error message for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/list/light:\n    post:\n      tags:\n        - Marketplaces - Orders - List\n      summary: '[DEPRECATED] Get a paginated list of all Orders without details'\n      description: Use /orders/v3 instead\n      operationId: GetOrderListLight\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderListRequest'\n        required: true\n      responses:\n        '200':\n          description: Successfully fetched the list of Orders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderListLight'\n        '400':\n          description: \u003e-\n            Could not process request for given parameters values. Please check\n            error message for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/exportations:\n    get:\n      tags:\n        - Marketplaces - Orders - Exports\n      summary: Get a paginated list of Order report exportations\n      operationId: GetOrderExportations\n      parameters:\n        - name: pageNumber\n          in: query\n          description: The page number you want to get\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: pageSize\n          in: query\n          description: The entry count you want to get\n          required: true\n          schema:\n            maximum: 100\n            minimum: 25\n            type: integer\n            format: int32\n        - name: storeId\n          in: query\n          description: The store identifier to regroup the order exportations\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched the list of Order report exportations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderExportations'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '400':\n          description: \u003e-\n            Could not process request for given parameters values. Please check\n            error message for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n    post:\n      tags:\n        - Marketplaces - Orders - Exports\n      summary: Request a new Order report exportation to be generated\n      description: \u003e-\n        A new file will be generated containing a summary of all the Orders\n        matching the requested filter settings.\n      operationId: ExportOrders\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/exportOrderListRequest'\n        required: true\n      responses:\n        '202':\n          description: Successfully requested new Order report exportation generation\n          content: {}\n        '400':\n          description: \u003e-\n            Could not process request for given parameters values. Please check\n            error message for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: No orders have been found for this request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/batches/setMerchantOrderInfos:\n    post:\n      tags:\n        - Marketplaces - Orders - Batches\n      summary: \u003e-\n        [DEPRECATED] Send a batch of operations to set an Order's merchant\n        information  (max 100 items per call)\n      description: \u003e-\n        The purpose of this operation is to reduce the amount of request to the\n        API.\n      operationId: SetMerchantOrderInfoList\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/setMerchantOrderInfoListRequest'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            Succesfully received and processed batched operations. Please check\n            response to see the status per operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/batchOrderOperationResponse'\n        '400':\n          description: Requested too many batch operations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/batches/clearMerchantOrderInfos:\n    post:\n      tags:\n        - Marketplaces - Orders - Batches\n      summary: \u003e-\n        [DEPRECATED] Send a batch of operations to clear an Order's merchant\n        information (max 100 items per call)\n      description: \u003e-\n        The purpose of this operation is to reduce the amount of request to the\n        API.\n      operationId: ClearMerchantOrderInfoList\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clearMerchantOrderInfoListRequest'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            Succesfully received and processed batched operations. Please check\n            response to see the status per operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/batchOrderOperationResponse'\n        '400':\n          description: Requested too many batch operations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/batches/changeOrders/{changeOrderType}:\n    post:\n      tags:\n        - Marketplaces - Orders - Batches\n      summary: \u003e-\n        [DEPRECATED] Send a batch of operations to change your marketplace Order\n        information: accept, ship, etc.  (max 100 items per call)\n      description: \u003e\n        The purpose of this operation is to reduce the amount of request to the\n        API. \n\n        Max 100 items per call.\n      operationId: ChangeOrderList\n      parameters:\n        - name: changeOrderType\n          in: path\n          description: The Order change type\n          required: true\n          schema:\n            type: string\n            x-lov: OrderChangeBusinessOperationType\n          x-lov: OrderChangeBusinessOperationType\n        - name: userName\n          in: query\n          description: \u003e-\n            Sometimes the user in the e-commerce application is not the same as\n            user associated with the current subscription key. We recommend\n            providing your application's user login.\n          required: true\n          schema:\n            type: string\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeOrderListRequest'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            Succesfully received and processed batched operations. Please check\n            response to see the status per operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/batchOrderOperationResponse'\n        '400':\n          description: Requested too many batch operations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}:\n    get:\n      tags:\n        - Marketplaces - Orders - Order\n      summary: '[DEPRECATED] DEPRECATED - Get full Order and Order Item(s) properties'\n      description: DEPRECATED - Use /orders/v3 instead\n      operationId: GetOrder\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched Order and Order Item(s) properties\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of requested Order\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the order\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n    head:\n      tags:\n        - Marketplaces - Orders - Order\n      summary: \u003e-\n        [DEPRECATED] DEPRECATED - Get the meta information about the order\n        (ETag, Last-Modified)\n      description: \u003e\n        DEPRECATED - Use /orders/v3 instead\n\n        The purpose of this operation is to reduce the bandwith usage by getting\n        just the meta information about the order (ETag, Last-Modified) with the\n        body.\n\n        This could be useful\n      operationId: HeadOrder\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched Order and Order Item(s) properties\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of requested Order\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the order\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history:\n    get:\n      tags:\n        - Marketplaces - Orders - Order\n      summary: '[DEPRECATED] Get an Order''s harvest and change history'\n      operationId: GetOrderHistory\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched Order history\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderHistory'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest:\n    post:\n      tags:\n        - Marketplaces - Orders - Order\n      summary: '[DEPRECATED] Send harvest request for a single Order'\n      operationId: HarvestOrder\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '202':\n          description: Successfully sent Order harvest request\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: \u003e-\n            Failed to send harvest request because allowed rate limits have been\n            exceeded\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo:\n    post:\n      tags:\n        - Marketplaces - Orders - Order\n      summary: '[DEPRECATED] Set an Order''s merchant information'\n      operationId: SetMerchantOrderInfo\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/setMerchantOrderInfoRequest'\n        required: true\n      responses:\n        '204':\n          description: Successfully set Order merchant order info set\n          content: {}\n        '400':\n          description: \u003e-\n            Could not update Order merchant information. Please see body for\n            more information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo:\n    post:\n      tags:\n        - Marketplaces - Orders - Order\n      summary: '[DEPRECATED] Clear an Order''s merchant information'\n      operationId: ClearMerchantOrderInfo\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '204':\n          description: Successfully cleared Order merchant order info set\n          content: {}\n        '400':\n          description: \u003e-\n            Could not update Order merchant information. Please see body for\n            more information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}:\n    post:\n      tags:\n        - Marketplaces - Orders - Order\n      summary: \u003e-\n        [DEPRECATED] Change your marketplace Order Information (accept, ship,\n        etc.)\n      operationId: ChangeOrder\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: changeOrderType\n          in: path\n          description: The Order change type\n          required: true\n          schema:\n            type: string\n            x-lov: OrderChangeBusinessOperationType\n          x-lov: OrderChangeBusinessOperationType\n        - name: userName\n          in: query\n          description: \u003e-\n            Sometimes the user in the e-commerce application is not the same as\n            user associated with the current subscription key. We recommend\n            providing your application's user login.\n          required: true\n          schema:\n            type: string\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n        - name: If-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To ensure that you are making a change on the lastest version of the\n            resource.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeOrderRequest'\n        required: false\n      responses:\n        '202':\n          description: Order change request accepted\n          content: {}\n        '400':\n          description: \u003e-\n            Invalid order change request, could not be send to the marketplace.\n            Please check the body of this request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: |\n            Already processing a change request for this Order.\\\n            Please refresh your clients Order information and retry later.\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '412':\n          description: \u003e-\n            The ETag sent in the http header If-Match did not match with the\n            current version. Please refresh the information related to this\n            resource.\n          headers:\n            ETag:\n              description: \u003e\n                The ETag value to identify the resource.\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: true\n      x-releaseStatus: DEPRECATED\n      x-codegen-request-body-name: request\n  # /orders/v3/lov/orderManagementReadyMarketplaceBusinessCode:\n  #   get:\n  #     tags:\n  #       - Marketplaces - Orders V3 - Global\n  #     description: Get the list of MarketplaceBusinessCode ready for Order Management\n  #     operationId: GetOrderManagementReadyMarketplaceBusinessCode\n  #     parameters:\n  #       - name: Accept-Language\n  #         in: header\n  #         description: Indicates that the client accepts the following languages.\n  #         style: simple\n  #         explode: false\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #       - name: storeIds\n  #         in: query\n  #         description: StoredIds to filter\n  #         style: form\n  #         explode: false\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #     responses:\n  #       '200':\n  #         description: Successfully fetched current synchronization status\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/oMReadyMarketplaceBusinessCodeResponse'\n  #       '304':\n  #         description: \u003e-\n  #           The ETag sent in the http header If-None-Match did not change. So\n  #           you are up to date !\n  #         headers:\n  #           ETag:\n  #             description: \u003e\n  #               ETag value to identify the current version of the resource\\\n\n  #               For more details go to this link:\n  #               http://tools.ietf.org/html/rfc7232#section-2.3\n  #             schema:\n  #               type: string\n  #           Last-Modified:\n  #             description: \u003e\n  #               Last modification UTC date of the resource\\\n\n  #               For more details go to this link:\n  #               https://tools.ietf.org/html/rfc7232#section-2.2\n  #             schema:\n  #               type: string\n  #               format: date-time\n  #         content: {}\n  #       '404':\n  #         description: Requested Store could not be found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/errorResponseMessage'\n  #       default:\n  #         description: Occurs when something goes wrong\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /orders/v3/status:\n    get:\n      tags:\n        - Marketplaces - Orders V3 - Global\n      description: \u003e-\n        Get current synchronization status between your marketplaces and BeezUP\n        accounts\n      operationId: GetMarketplaceAccountsSynchronizationV3\n      parameters:\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n        - name: storeIds\n          in: query\n          description: StoredIds to filter\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: \u003e-\n            Successfully fetched the list of MarketplaceBusinessCode ready for\n            Order Management\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accountSynchronizationList'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '400':\n          description: Invalid store id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /orders/v3/harvest:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Global\n      summary: Send harvest request to all your marketplaces\n      operationId: HarvestAllV3\n      parameters:\n        - name: storeId\n          in: query\n          description: The StoreId to filter by\n          schema:\n            type: string\n            format: StoreId\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n      responses:\n        '202':\n          description: Successfully sent harvest request to all marketplaces\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content: {}\n        '404':\n          description: Requested Store could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '409':\n          description: \u003e-\n            Failed to send harvest request because allowed rate limits have been\n            exceeded\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n  /orders/v3/list/full:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - List\n      summary: \u003e-\n        Get a paginated list of all Orders with all Order and Order Item(s)\n        properties\n      description: \u003e\n        The purpose of this operation is to reduce the amount of request to the\n        API.\\\n\n        \\\n\n        Previous implmentation of this feature only returned a partial (light)\n        version of the Orders. The purpose of this API is to reduce the number\n        of incoming requests by returning the complete (full) Order and Order\n        Item(s) properties.\n      operationId: GetOrderListFullV3\n      parameters:\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Allows the client to indicate wether it accepts a compressed\n            encoding to reduce traffic size\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderListRequest'\n        required: true\n      responses:\n        '200':\n          description: Successfully fetched the full list of Orders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderListFullWithLinks'\n        '400':\n          description: \u003e-\n            Could not process request for given parameters values. Please check\n            error message for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /orders/v3/list/light:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - List\n      summary: Get a paginated list of all Orders without details\n      operationId: GetOrderListLightV3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderListRequest'\n        required: true\n      responses:\n        '200':\n          description: Successfully fetched the list of Orders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderListLightWithLinks'\n        '400':\n          description: \u003e-\n            Could not process request for given parameters values. Please check\n            error message for more details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}:\n    get:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Get full Order and Order Item(s) properties\n      operationId: GetOrderV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched Order and Order Item(s) properties\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of requested Order\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the order\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderWithLinks'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n    head:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Get the meta information about the order (ETag, Last-Modified)\n      description: \u003e\n        The purpose of this operation is to reduce the bandwith usage by getting\n        just the meta information about the order (ETag, Last-Modified) with the\n        body.\n\n        This could be useful\n      operationId: HeadOrderV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: If-None-Match\n          in: header\n          description: \u003e\n            ETag value to identify the last known version of requested\n            resource.\\\n\n            To avoid useless exchange, we recommend you to indicate the ETag you\n            previously got from this operation.\\\n\n            If the ETag value does not match the response will be 200 to give\n            you a new content, otherwise the response will be: 304 Not Modified,\n            without any content.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched Order and Order Item(s) properties\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of requested Order\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the order\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Change your marketplace Order Information (accept, ship, etc.)\n      operationId: ChangeOrderV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: changeOrderType\n          in: path\n          description: The Order change type\n          required: true\n          schema:\n            type: string\n            x-lov: OrderChangeBusinessOperationType\n          x-lov: OrderChangeBusinessOperationType\n        - name: userName\n          in: query\n          description: \u003e-\n            Sometimes the user in the e-commerce application is not the same as\n            user associated with the current subscription key. We recommend\n            providing your application's user login.\n          required: true\n          schema:\n            type: string\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeOrderRequest'\n        required: false\n      responses:\n        '202':\n          description: Order change request accepted\n          headers:\n            Location:\n              description: \u003e-\n                Indicate the address you should follow to know the status of\n                your order change operation\n              schema:\n                type: string\n          content: {}\n        '400':\n          description: \u003e-\n            Invalid order change request, could not be send to the marketplace.\n            Please check the body of this request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '409':\n          description: |\n            Already processing a change request for this Order.\\\n            Please refresh your clients Order information and retry later.\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n            Location:\n              description: \u003e-\n                Indicate the address you should follow to know the status of the\n                existing order change operation\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '412':\n          description: \u003e-\n            The ETag sent in the http header If-Match did not match with the\n            current version. Please refresh the information related to this\n            resource.\n          headers:\n            ETag:\n              description: \u003e\n                The ETag value to identify the resource.\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n          content: {}\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history:\n    get:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Get an Order's harvest and change history\n      operationId: GetOrderHistoryV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: Successfully fetched Order history\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderHistory'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Send harvest request for a single Order\n      operationId: HarvestOrderV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '202':\n          description: Successfully sent Order harvest request\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '409':\n          description: \u003e-\n            Failed to send harvest request because allowed rate limits have been\n            exceeded\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-validation:\n        - validatorName: userAuthorized\n          statusCode: '401'\n        - validatorName: orderExists\n          statusCode: '404'\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/harvest:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Send harvest request for an Account\n      operationId: HarvestAccount\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: marketplaceOrderId\n          in: query\n          schema:\n            type: string\n        - name: beezUPOrderId\n          in: query\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Successfully sent Order harvest request\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content: {}\n        '404':\n          description: Requested Account Or beezUPOrderId could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '409':\n          description: \u003e-\n            Failed to send harvest request because allowed rate limits have been\n            exceeded\n          headers:\n            Retry-After:\n              description: \u003e-\n                Indicates the duration in seconds to wait to be able to make\n                this request again\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-validation:\n        - validatorName: userAuthorized\n          statusCode: '401'\n        - validatorName: accountExists\n          statusCode: '404'\n        - validatorName: beezUPOrderIdExists\n          statusCode: '404'\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history/{orderChangeExecutionUUID}:\n    get:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Get the order change reporting\n      description: \u003e-\n        This operation will help you to know the status of your order change\n        operation\n      operationId: GetOrderChangeReportingV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: orderChangeExecutionUUID\n          in: path\n          description: The order change execution id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched Order change reporting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/changeOrderReporting'\n        '304':\n          description: \u003e-\n            The ETag sent in the http header If-None-Match did not change. So\n            you are up to date !\n          headers:\n            ETag:\n              description: \u003e\n                ETag value to identify the current version of the resource\\\n\n                For more details go to this link:\n                http://tools.ietf.org/html/rfc7232#section-2.3\n              schema:\n                type: string\n            Last-Modified:\n              description: \u003e\n                Last modification UTC date of the resource\\\n\n                For more details go to this link:\n                https://tools.ietf.org/html/rfc7232#section-2.2\n              schema:\n                type: string\n                format: date-time\n          content: {}\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Set an Order's merchant information\n      operationId: SetMerchantOrderInfoV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/setMerchantOrderInfoRequest'\n        required: true\n      responses:\n        '202':\n          description: Set Order merchant order info accepted\n          content: {}\n        '400':\n          description: \u003e-\n            Could not update Order merchant information. Please see body for\n            more information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Order\n      summary: Clear an Order's merchant information\n      operationId: ClearMerchantOrderInfoV3\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The marketplace technical code\n          required: true\n          schema:\n            type: string\n        - name: accountId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: beezUPOrderId\n          in: path\n          description: The BeezUP Order identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '202':\n          description: Clear Order merchant order info accepted\n          content: {}\n        '400':\n          description: \u003e-\n            Could not update Order merchant information. Please see body for\n            more information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '404':\n          description: Requested Order could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n  /orders/v3/batches/setMerchantOrderInfos:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Batches\n      summary: \u003e-\n        Send a batch of operations to set an Order's merchant information  (max\n        100 items per call)\n      description: \u003e-\n        The purpose of this operation is to reduce the amount of request to the\n        API.\n      operationId: SetMerchantOrderInfoListV3\n      parameters:\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/setMerchantOrderInfoListRequest'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            Succesfully received and processed batched operations. Please check\n            response to see the status per operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/batchOrderOperationResponse'\n        '400':\n          description: Requested too many batch operations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /orders/v3/batches/clearMerchantOrderInfos:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Batches\n      summary: \u003e-\n        Send a batch of operations to clear an Order's merchant information (max\n        100 items per call)\n      description: \u003e-\n        The purpose of this operation is to reduce the amount of request to the\n        API.\n      operationId: ClearMerchantOrderInfoListV3\n      parameters:\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clearMerchantOrderInfoListRequest'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            Succesfully received and processed batched operations. Please check\n            response to see the status per operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/batchOrderOperationResponse'\n        '400':\n          description: Requested too many batch operations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /orders/v3/batches/changeOrders/{changeOrderType}:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Batches\n      summary: \u003e-\n        Send a batch of operations to change your marketplace Order information:\n        accept, ship, etc.  (max 100 items per call)\n      description: \u003e\n        The purpose of this operation is to reduce the amount of request to the\n        API. \n\n        Max 100 items per call.\n      operationId: ChangeOrderListV2\n      parameters:\n        - name: userName\n          in: query\n          description: \u003e-\n            Sometimes the user in the e-commerce application is not the same as\n            user associated with the current subscription key. We recommend\n            providing your application's user login.\n          required: true\n          schema:\n            type: string\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n        - name: changeOrderType\n          in: path\n          description: The Order change type\n          required: true\n          schema:\n            type: string\n            x-lov: OrderChangeBusinessOperationType\n          x-lov: OrderChangeBusinessOperationType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeOrderListRequestV2'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            Succesfully received and processed batched operations. Please check\n            response to see the status per operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/batchOrderOperationResponse'\n        '400':\n          description: Requested too many batch operations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /orders/v3/batches/changeOrders:\n    post:\n      tags:\n        - Marketplaces - Orders V3 - Batches\n      summary: \u003e-\n        Send a batch of operations to change your marketplace Order information:\n        accept, ship, etc.  (max 100 items per call)\n      description: \u003e\n        The purpose of this operation is to reduce the amount of request to the\n        API. \n\n        Max 100 items per call.\n      operationId: ChangeOrderListV3\n      parameters:\n        - name: userName\n          in: query\n          description: \u003e-\n            Sometimes the user in the e-commerce application is not the same as\n            user associated with the current subscription key. We recommend\n            providing your application's user login.\n          required: true\n          schema:\n            type: string\n        - name: testMode\n          in: query\n          description: \u003e-\n            If true, the operation will be not be sent to marketplace. But the\n            validation will be taken in account.\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/changeOrderListRequest'\n        required: true\n      responses:\n        '202':\n          description: \u003e-\n            Succesfully received and processed batched operations. Please check\n            response to see the status per operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/batchOrderOperationResponse'\n        '400':\n          description: Requested too many batch operations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/subscriptions/:\n    get:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Get the subscription list\n      operationId: GetSubscriptionList\n      responses:\n        '200':\n          description: The subscription list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/subscriptionIndex'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n      x-basePath: /v2/user/marketplaces/orders/subscriptions\n  /v2/user/marketplaces/orders/subscriptions/{id}:\n    get:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Get a subscription to the orders\n      operationId: GetSubscription\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: SubscriptionId\n      responses:\n        '200':\n          description: Subscription info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscriptionIndex'\n        '404':\n          description: The subscription is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionNotFoundException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Creates a subscription to the orders\n      description: \u003e-\n        Please take a look at this sequence diagram to understand the\n        subscription process to follow\n        [here](https://www.websequencediagrams.com/files/render?link=SBYbeIc8NGshk6ooCbmjoBLIMl4fIGO1xjJbPBQAglBo0n6BwEReh7NXQiPSjOTX)\n      operationId: CreateSubscription\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: SubscriptionId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createSubscriptionRequest'\n        required: true\n      responses:\n        '202':\n          description: Subscription creation accepted\n          content: {}\n        '400':\n          description: Invalid subscription request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '404':\n          description: The subscription is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionNotFoundException\n        '409':\n          description: The subscription id is already used.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionAlreadyExistsException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n    delete:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Delete a subscription to the orders\n      operationId: DeleteSubscription\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: SubscriptionId\n      responses:\n        '202':\n          description: Subscription deletion accepted\n          content: {}\n        '404':\n          description: The subscription is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionNotFoundException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      deprecated: false\n  /v2/user/marketplaces/orders/subscriptions/{id}/reporting:\n    get:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Get the push reporting related to this subscription\n      operationId: GetSubscriptionPushReporting\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: SubscriptionId\n        - name: pageNumber\n          in: query\n          schema:\n            minimum: 1\n            type: integer\n            format: PageNumber\n        - name: pageSize\n          in: query\n          schema:\n            maximum: 100\n            minimum: 1\n            type: integer\n            format: PageSize\n      responses:\n        '200':\n          description: Subscription push reporting info\n          headers:\n            X-Total-Count:\n              description: The total item count related to this query\n              schema:\n                type: integer\n            Link:\n              description: \u003e-\n                Based on the RFC 5988 - Web Linking, the page navigation will be\n                indicated here with the rel=next, rel=previous, rel=first,\n                rel=last, the pageNumber and the pageSize will be indicated in\n                the link param\n              schema:\n                type: array\n                items:\n                  type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/subscriptionPushReporting'\n        '404':\n          description: The subscription is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionNotFoundException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/marketplaces/orders/subscriptions/{id}/activate:\n    post:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Activate a subscription to the orders\n      description: \u003e\n        At this moment, BeezUP will ensure that your callback url is respecting\n        this specification: \n\n        -\n        https://app.swaggerhub.com/apis/BeezUP/public_marketplaces_orders_subscriptions_consumer-dev/1.0#/Subscriptions/Verification\n\n\n        After that we will send you the orders related to your subscription,\n        respecting this specification: \n\n        -\n        https://app.swaggerhub.com/apis/BeezUP/public_marketplaces_orders_subscriptions_consumer-dev/1.0#/Subscriptions/PushOrders\n      operationId: ActivateSubscription\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: SubscriptionId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/activateSubscriptionRequest'\n        required: false\n      responses:\n        '202':\n          description: Subscription activation accepted\n          content: {}\n        '400':\n          description: Activation subscription request is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n        '404':\n          description: The subscription is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionNotFoundException\n        '503':\n          description: The target url is not available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionTargetNotAvailableException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/subscriptions/{id}/deactivate:\n    post:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Deactivate a subscription to the orders\n      operationId: DeactivateSubscription\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: SubscriptionId\n      responses:\n        '202':\n          description: Subscription deactivation accepted\n          content: {}\n        '404':\n          description: The subscription is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionNotFoundException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/marketplaces/orders/subscriptions/{id}/retry:\n    post:\n      tags:\n        - Marketplaces - Orders - Subscriptions - Subscriptions\n      summary: Force retry push orders immediatly\n      description: \u003e-\n        In case your subscription consumption is unavailable and your\n        subscription is still active you can ask to retry immediatly to push\n        orders instead of waiting the next scheduled retry date\n      operationId: RetryPushOrders\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: SubscriptionId\n      responses:\n        '202':\n          description: Retry push orders request accepted\n          content: {}\n        '404':\n          description: The subscription is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionNotFoundException\n        '409':\n          description: \u003e-\n            The subscription is deactivated or your subscription consumption\n            availability status is available.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderSubscriptionRetryRejectedException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/marketplaces/orders/invoices/settings/general:\n    get:\n      tags:\n        - OM Invoice - API - Settings\n      summary: Get Order Invoice general settings\n      operationId: GetOrderInvoiceGeneralSettings\n      responses:\n        '200':\n          description: Settings successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getOrderInvoiceGeneralSettingsResponse'\n        '403':\n          description: The ownerId is not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n        '404':\n          description: |\n            The order invoice general settings are not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceGeneralSettingsNotFoundException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    put:\n      tags:\n        - OM Invoice - API - Settings\n      summary: Save Order Invoice general settings\n      operationId: SaveOrderInvoiceGeneralSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderInvoiceGeneralSettings'\n        required: true\n      responses:\n        '204':\n          description: General Settings successfully saved\n          content: {}\n        '400':\n          description: |\n            The settingsgeneral did not pass the validation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceGeneralSettingsValidationFailedException\n        '403':\n          description: The ownerId is not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/invoices/settings/design:\n    get:\n      tags:\n        - OM Invoice - API - Settings\n      summary: Get Order Invoice design settings\n      operationId: GetOrderInvoiceDesignSettings\n      responses:\n        '200':\n          description: Design successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/orderInvoiceDesignSettings'\n        '403':\n          description: The ownerId is not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n        '404':\n          description: |\n            The order invoice design is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceDesignSettingsNotFoundException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    put:\n      tags:\n        - OM Invoice - API - Settings\n      summary: Save Order Invoice design settings\n      operationId: SaveOrderInvoiceDesignSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderInvoiceDesignSettings'\n        required: true\n      responses:\n        '204':\n          description: Design successfully saved\n          content: {}\n        '400':\n          description: |\n            The design did not pass the validation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceDesignSettingsValidationFailedException\n        '403':\n          description: The ownerId is not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/invoices/settings/design/preview:\n    post:\n      tags:\n        - OM Invoice - API - Settings\n      summary: View a preview an Order Invoice using custom design settings\n      operationId: GetOrderInvoiceDesignSettingsPreview\n      parameters:\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Allows the client to indicate wether it accepts a compressed\n            encoding to reduce traffic size\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/orderInvoiceDesignSettings'\n        required: true\n      responses:\n        '200':\n          description: Design Preview successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getOrderInvoiceDesignPreviewResponse'\n        '403':\n          description: The ownerId is not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/generate:\n    post:\n      tags:\n        - OM Invoice - API - Generation\n      summary: Generate an Order Invoice\n      operationId: GenerateOrderInvoice\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The Marketplace Technical Code\n          required: true\n          schema:\n            type: string\n            format: MarketplaceTechnicalCode\n        - name: accountId\n          in: path\n          description: The Account Identifier\n          required: true\n          schema:\n            type: string\n            format: MarketplaceAccountId\n        - name: beezUPOrderUUID\n          in: path\n          description: The BeezUP Order UUID\n          required: true\n          schema:\n            type: string\n            format: BeezUPOrderUUID\n        - name: userName\n          in: query\n          description: \u003e-\n            Sometimes the user in the e-commerce application is not the same as\n            user associated with the current subscription key. We recommend\n            providing your application's user login.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/generateOrderInvoiceRequest'\n        required: true\n      responses:\n        '202':\n          description: Request Accepted.\n          headers:\n            Location:\n              description: \u003e-\n                The location of the generated invoice. Might take a few seconds\n                to be available\n              schema:\n                type: string\n          content: {}\n        '403':\n          description: |\n            OwnerId not authorized\n            The required order invoice settings have not been set\n            BeezUPOrderStatus forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n            - OrderInvoiceDesignSettingsNotFoundException\n            - OrderInvoiceGeneralSettingsNotFoundException\n            - OrderInvoiceGenerationBeezUPOrderStatusForbiddenException\n        '404':\n          description: |\n            The order cannot be retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderNotFoundException\n        '409':\n          description: |\n            The InvoiceNumber is already used\n            There is already an invoice for this order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceNumberAlreadyUsedException\n            - OrderAlreadyHasInvoiceException\n        '429':\n          description: |\n            Too many Requests. Please retry in a few seconds\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceTooManyRequestsException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/preview:\n    post:\n      tags:\n        - OM Invoice - API - Generation\n      summary: View a preview an Order Invoice\n      operationId: GetOrderInvoicePreview\n      parameters:\n        - name: marketplaceTechnicalCode\n          in: path\n          description: The Marketplace Technical Code\n          required: true\n          schema:\n            type: string\n            format: MarketplaceTechnicalCode\n        - name: accountId\n          in: path\n          description: The Account Identifier\n          required: true\n          schema:\n            type: string\n            format: MarketplaceAccountId\n        - name: beezUPOrderUUID\n          in: path\n          description: The BeezUP Order UUID\n          required: true\n          schema:\n            type: string\n            format: BeezUPOrderUUID\n        - name: Accept-Encoding\n          in: header\n          description: \u003e-\n            Allows the client to indicate wether it accepts a compressed\n            encoding to reduce traffic size\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/previewOrderInvoiceRequest'\n        required: true\n      responses:\n        '200':\n          description: Order Invoice preview successfully returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/previewOrderInvoiceResponse'\n        '403':\n          description: |\n            OwnerId not authorized\n            The required order invoice settings have not been set\n            BeezUPOrderStatus forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n            - OrderInvoiceDesignSettingsNotFoundException\n            - OrderInvoiceGeneralSettingsNotFoundException\n            - OrderInvoiceGenerationBeezUPOrderStatusForbiddenException\n        '404':\n          description: |\n            The order cannot be retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderNotFoundException\n        '409':\n          description: |\n            The InvoiceNumber is already used\n            There is already an invoice for this order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceNumberAlreadyUsedException\n            - OrderAlreadyHasInvoiceException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/marketplaces/orders/invoices/getPdfInvoice:\n    post:\n      tags:\n        - OM Invoice - API - Generation\n      summary: Returns the PDF version of the invoice\n      operationId: GetOrderInvoicePdf\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getOrderInvoicePdfFromHtmlInvoiceUrlRequest'\n        required: true\n      responses:\n        '200':\n          description: The PDF version of the HTML invoice URL in the request\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        '403':\n          description: The ownerId is not found or not authorized\n          content:\n            application/pdf:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - UserNotOwnerException\n        '404':\n          description: |\n            The order invoice does not exist\n          content:\n            application/pdf:\n              schema:\n                $ref: '#/components/schemas/errorResponseMessage'\n          x-exceptions:\n            - OrderInvoiceNotFoundException\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/pdf:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/:\n    get:\n      tags:\n        - Analytics - Global\n      summary: Get the Analytics API operation index\n      operationId: AnalyticsIndex\n      responses:\n        '200':\n          description: Analytics API operation index\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/analyticsIndex'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}:\n    get:\n      tags:\n        - Analytics - Global\n      summary: Get the Analytics API operation index for one store\n      operationId: AnalyticsStoreIndex\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Analytics API operation index for one store\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/analyticsStoreIndex'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/tracking/status:\n    get:\n      tags:\n        - Analytics - Tracking\n      summary: Get the global synchronization status of clicks and orders\n      description: |\n        Clicks and orders are eventually consistent. \\\n        This operation gets the current global state of projections.\n      operationId: GetTrackingStatus\n      responses:\n        '200':\n          description: The tracking status informations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/trackingStatus'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/tracking/status:\n    get:\n      tags:\n        - Analytics - Tracking\n      summary: Get the synchronization status of clicks and orders of a store\n      description: |\n        Clicks and orders are eventually consistent. \\\n        This operation gets the current state of projections for a store.\n      operationId: GetStoreTrackingStatus\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Store Tracking Status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storeTrackingStatus'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/tracking/clicks:\n    get:\n      tags:\n        - Analytics - Tracking\n      summary: Get the latest tracked clicks\n      operationId: GetStoreTrackedClicks\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: count\n          in: query\n          description: The amount of clicks to retrieve\n          schema:\n            maximum: 100\n            minimum: 5\n            type: integer\n            default: 100\n      responses:\n        '200':\n          description: Click list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/trackedClicks'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/tracking/orders:\n    get:\n      tags:\n        - Analytics - Tracking\n      summary: Get the latest tracked orders\n      operationId: GetStoreTrackedOrders\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: count\n          in: query\n          description: The amount of orders to retrieve\n          schema:\n            maximum: 100\n            minimum: 5\n            type: integer\n            default: 100\n      responses:\n        '200':\n          description: Order list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/trackedOrders'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/tracking/externalorders:\n    get:\n      tags:\n        - Analytics - Tracking\n      summary: Get the latest tracked external orders\n      operationId: GetStoreTrackedExternalOrders\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: count\n          in: query\n          description: The amount of external orders to retrieve\n          schema:\n            maximum: 100\n            minimum: 5\n            type: integer\n            default: 100\n      responses:\n        '200':\n          description: External Order list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/trackedExternalOrders'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/reports/byday:\n    post:\n      tags:\n        - Analytics - Statistics\n      summary: Get the report by day for a StoreId\n      description: Get the report by day for a StoreId\n      operationId: GetStoreReportByDayPerStore\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reportByDayRequest'\n        required: true\n      responses:\n        '200':\n          description: Your reporting by day\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reportByDayPerStoreResponse'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/reports/byday:\n    post:\n      tags:\n        - Analytics - Statistics\n      summary: Get the report by day for a StoreId\n      description: Get the report by day for a StoreId\n      operationId: GetStoreReportByDay\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reportByDayRequest'\n        required: true\n      responses:\n        '200':\n          description: Your reporting by day\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reportByDayResponse'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/reports/bychannel:\n    post:\n      tags:\n        - Analytics - Statistics\n      summary: Get the report by channel\n      description: Get the report by channel\n      operationId: GetStoreReportByChannel\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reportByChannelRequest'\n        required: true\n      responses:\n        '200':\n          description: Your reporting by channel\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reportByChannelResponse'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/reports/bycategory:\n    post:\n      tags:\n        - Analytics - Statistics\n      summary: Get the report by category\n      description: Get the report by category\n      operationId: GetStoreReportByCategory\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reportByCategoryRequest'\n        required: true\n      responses:\n        '200':\n          description: Your reporting by channel\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reportByCategoryResponse'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/reports/byproduct:\n    post:\n      tags:\n        - Analytics - Statistics\n      summary: Get the report by product\n      description: Get the report by product\n      operationId: GetStoreReportByProduct\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reportByProductRequest'\n        required: true\n      responses:\n        '200':\n          description: Your reporting by product\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reportByProductResponse'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/optimisations/all/{actionName}:\n    post:\n      tags:\n        - Analytics - Optimisations\n      summary: Optimise all products\n      description: |\n        /!\\ WARNING /!\\ \\\n        Apply the operation on every product related to this request. \\\n        This operation is used at the bottom of the analytics page result.\n      operationId: OptimiseAll\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: actionName\n          in: path\n          required: true\n          schema:\n            type: string\n            format: optimisationActionName\n            enum:\n              - reenable\n              - disable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/optimiseAllRequest'\n        required: true\n      responses:\n        '204':\n          description: Products optimisatized\n          content: {}\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/optimisations/{actionName}:\n    post:\n      tags:\n        - Analytics - Optimisations\n      summary: Optimise products by page\n      description: |\n        /!\\ WARNING /!\\ \\\n        Apply the operation on every product related to this request. \\\n        This operation is used at the bottom of the analytics page result.\n      operationId: Optimise\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: actionName\n          in: path\n          required: true\n          schema:\n            type: string\n            format: optimisationActionName\n            enum:\n              - reenable\n              - disable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/optimiseRequest'\n        required: true\n      responses:\n        '204':\n          description: Products optimisatized\n          content: {}\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/optimisations/bychannel/{channelId}/{actionName}:\n    post:\n      tags:\n        - Analytics - Optimisations\n      summary: Optimise products by channel\n      description: |\n        /!\\ WARNING /!\\ \\\n        Apply the operation on every product on this channel.\n      operationId: OptimiseByChannel\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: channelId\n          in: path\n          description: The channel identifier concerned by this optimisation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: actionName\n          in: path\n          required: true\n          schema:\n            type: string\n            format: optimisationActionName\n            enum:\n              - reenable\n              - disable\n      responses:\n        '204':\n          description: Products optimisatized\n          content: {}\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/optimisations/bycategory/{catalogCategoryId}/{actionName}:\n    post:\n      tags:\n        - Analytics - Optimisations\n      summary: Optimise products by category\n      description: \u003e\n        /!\\ WARNING /!\\ \\\n\n        This operation will reenable or disable products's category for every\n        channel indicated in the body.\n      operationId: OptimiseByCategory\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: catalogCategoryId\n          in: path\n          description: The category identifier concerned by this optimisation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: actionName\n          in: path\n          required: true\n          schema:\n            type: string\n            format: optimisationActionName\n            enum:\n              - reenable\n              - disable\n      requestBody:\n        description: The channel identifier list concerned by this optimisation\n        content:\n          application/json:\n            schema:\n              maxItems: 1\n              minItems: 1\n              type: array\n              example:\n                - a2d38563-50f0-43f1-be2b-b16e7ec4f007\n              items:\n                type: string\n                format: guid\n        required: false\n      responses:\n        '204':\n          description: Products optimisatized\n          content: {}\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/optimisations/byproduct/{productId}/{actionName}:\n    post:\n      tags:\n        - Analytics - Optimisations\n      summary: Optimise product\n      description: \u003e\n        /!\\ WARNING /!\\ \\\n\n        This operation will reenable or disable this product for every channel\n        indicated in the body.\n      operationId: OptimiseByProduct\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: productId\n          in: path\n          description: The product identifier concerned by this optimisation\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: actionName\n          in: path\n          required: true\n          schema:\n            type: string\n            format: optimisationActionName\n            enum:\n              - reenable\n              - disable\n      requestBody:\n        description: The channel identifier list concerned by this optimisation\n        content:\n          application/json:\n            schema:\n              maxItems: 1\n              minItems: 1\n              type: array\n              example:\n                - a2d38563-50f0-43f1-be2b-b16e7ec4f007\n              items:\n                type: string\n                format: guid\n        required: false\n      responses:\n        '204':\n          description: Product(s) optimisatized\n          content: {}\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/optimisations/copy:\n    post:\n      tags:\n        - Analytics - Optimisations\n      summary: Copy product optimisations between 2 channels\n      operationId: CopyOptimisation\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/copyOptimisationRequest'\n        required: true\n      responses:\n        '200':\n          description: Products optimisatisation copied\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/copyOptimisationResponse'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/reports/filters:\n    get:\n      tags:\n        - Analytics - Reports\n      summary: Get report filter list for the given store\n      operationId: GetReportFilters\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Report filter list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reportFilterList'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/reports/filters/{reportFilterId}:\n    get:\n      tags:\n        - Analytics - Reports\n      summary: Get the report filter description\n      operationId: GetReportFilter\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: reportFilterId\n          in: path\n          description: Your report filter identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Report filter\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reportFilter'\n        '404':\n          description: Report filter not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    put:\n      tags:\n        - Analytics - Reports\n      summary: Save the report filter\n      operationId: SaveReportFilter\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: reportFilterId\n          in: path\n          description: Your report filter identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/saveReportFilterRequest'\n        required: true\n      responses:\n        '204':\n          description: Report filter saved\n          content: {}\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '401':\n          description: \u003e-\n            This report filter is used by rule. In the error message you will\n            find the rule identifier.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '403':\n          description: \u003e-\n            This report filter identifier is already used by another store,\n            please check your identifiers.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Report filter name already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: reportFilter\n    delete:\n      tags:\n        - Analytics - Reports\n      summary: Delete the report filter\n      operationId: DeleteReportFilter\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: reportFilterId\n          in: path\n          description: Your report filter identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Report filter deleted\n          content: {}\n        '401':\n          description: \u003e-\n            This report filter is used by rule. In the error message you will\n            find the rule identifier.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Report filter not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/rules:\n    get:\n      tags:\n        - Analytics - Rules\n      summary: Gets the list of rules for a given store\n      operationId: GetRules\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Rule list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ruleList'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    post:\n      tags:\n        - Analytics - Rules\n      summary: Rule creation\n      operationId: CreateRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createRuleRequest'\n        required: true\n      responses:\n        '204':\n          description: Rule created\n          content: {}\n        '400':\n          description: Period on filter cannot be custom or filter does not exist\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '401':\n          description: \u003e-\n            Store not allowed to use rules. Please upgrade your offer or contact\n            us.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '403':\n          description: \u003e-\n            Reached the maximum amount of rules allowed for your offer. Please\n            upgrade your offer or contact us.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/rules/{ruleId}:\n    get:\n      tags:\n        - Analytics - Rules\n      summary: Gets the rule\n      operationId: GetRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Get Rule\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rule'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    delete:\n      tags:\n        - Analytics - Rules\n      summary: Delete Rule\n      operationId: DeleteRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Rule deleted\n          content: {}\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    patch:\n      tags:\n        - Analytics - Rules\n      summary: Update Rule\n      operationId: UpdateRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/updateRuleRequest'\n        required: true\n      responses:\n        '204':\n          description: Rule updated\n          content: {}\n        '400':\n          description: Filter does not exist or period on filter cannot be custom\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '401':\n          description: \u003e-\n            Store not allowed to use rules. Please upgrade your offer or contact\n            us.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n      x-codegen-request-body-name: request\n  /v2/user/analytics/{storeId}/rules/{ruleId}/moveup:\n    post:\n      tags:\n        - Analytics - Rules\n      summary: Move the rule up\n      operationId: MoveUpRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Rule moved up\n          content: {}\n        '400':\n          description: Priority can only be changed when more than one rule is defined\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/rules/{ruleId}/movedown:\n    post:\n      tags:\n        - Analytics - Rules\n      summary: Move the rule down\n      operationId: MoveDownRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Rule moved down\n          content: {}\n        '400':\n          description: Priority can only be changed when more than one rule is defined\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/rules/{ruleId}/enable:\n    post:\n      tags:\n        - Analytics - Rules\n      summary: Enable rule\n      operationId: EnableRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Rune enabled\n          content: {}\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/rules/{ruleId}/disable:\n    post:\n      tags:\n        - Analytics - Rules\n      summary: Disable rule\n      operationId: DisableRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Rule disabled\n          content: {}\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/rules/run:\n    post:\n      tags:\n        - Analytics - Rules\n      summary: Run all rules for this store\n      operationId: RunRules\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: All rules executed.\n          content: {}\n        '401':\n          description: \u003e-\n            Store not allowed to use rules. Please upgrade your offer or contact\n            us.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/rules/{ruleId}/run:\n    post:\n      tags:\n        - Analytics - Rules\n      summary: Run rule\n      operationId: RunRule\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: ruleId\n          in: path\n          description: Your rule identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Rule executed\n          content: {}\n        '400':\n          description: Rule is not enabled. Please enable this run before trying to run it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '401':\n          description: \u003e-\n            Store not allowed to use rules. Please upgrade your offer or contact\n            us.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Rule not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '409':\n          description: Rules for this store are currently running. Please try again later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/analytics/{storeId}/rules/executions:\n    get:\n      tags:\n        - Analytics - Rules\n      summary: Get the rules execution history\n      operationId: GetRulesExecutions\n      parameters:\n        - name: storeId\n          in: path\n          description: Your store identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n        - name: pageNumber\n          in: query\n          description: The page to retrieve\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n            default: 1\n        - name: pageSize\n          in: query\n          description: The count of rule history to retrieve\n          required: true\n          schema:\n            maximum: 100\n            minimum: 10\n            type: integer\n            default: 10\n      responses:\n        '200':\n          description: Rules executions list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ruleExecutionReportings'\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        '404':\n          description: Store or resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/legacyTracking/channelCatalogs/:\n    get:\n      tags:\n        - Channel Catalogs - Legacy Tracking - Global\n      summary: \u003e-\n        List all your current channel catalogs configured to use legacy tracking\n        format\n      operationId: GetLegacyTrackingChannelCatalogs\n      parameters:\n        - name: storeId\n          in: query\n          description: The store identifier\n          schema:\n            type: string\n            format: guid\n          example: 04730364-9826-4ff3-92e4-51fccd02bf10\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/legacyTrackingChannelCatalogList'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/legacyTracking/channelCatalogs/{channelCatalogId}:\n    get:\n      tags:\n        - Channel Catalogs - Legacy Tracking - Global\n      summary: \u003e-\n        Get the channel catalog configured to use legacy tracking format\n        information\n      operationId: GetLegacyTrackingChannelCatalog\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '200':\n          description: Channel catalog configured to use legacy tracking format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/legacyTrackingChannelCatalog'\n        '404':\n          description: Channel catalog not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n  /v2/user/legacyTracking/channelCatalogs/{channelCatalogId}/migrate:\n    post:\n      tags:\n        - Channel Catalogs - Legacy Tracking - Global\n      summary: Migrate a channel catalog to current tracking format\n      operationId: MigrateLegacyTrackingChannelCatalog\n      parameters:\n        - name: channelCatalogId\n          in: path\n          description: The channel catalog identifier\n          required: true\n          schema:\n            type: string\n            format: guid\n      responses:\n        '204':\n          description: Channel catalog migrated\n          content: {}\n        '404':\n          description: Channel catalog not found or not authorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        default:\n          description: Occurs when something goes wrong\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\ncomponents:\n  schemas:\n    loginRequest:\n      required:\n        - login\n        - password\n      type: object\n      properties:\n        login:\n          $ref: '#/components/schemas/BeezUP_Common_Email'\n        password:\n          type: string\n          description: Your password\n          format: password\n          example: I@mW0nder$Full\n    apiCredentials:\n      type: object\n      properties:\n        credentials:\n          type: array\n          description: Your API credential list\n          example:\n            - productName: UserApi\n              primaryToken: 3b22980d8d1143c6ba7adf4e55b9a153\n              secondaryToken: 162ae17fd52044c38cce3388ea5b0c91\n          items:\n            $ref: '#/components/schemas/apiCredential'\n    apiCredential:\n      type: object\n      properties:\n        productName:\n          type: string\n          description: The product name related to this credential\n          example: UserAPI\n        primaryToken:\n          type: string\n          description: The primary token to be used in the next call in the user scope API\n          example: 3b22980d8d1143c6ba7adf4e55b9a153\n        secondaryToken:\n          type: string\n          description: \u003e-\n            The secondary token. Could be usefull if you want to share your\n            access with someone else.\n          example: 162ae17fd52044c38cce3388ea5b0c91\n      description: Your api credential\n    registerRequest:\n      required:\n        - email\n        - password\n      type: object\n      properties:\n        email:\n          type: string\n          description: Your email. We refuse disposable email.\n          example: myemail@mycompany.com\n        password:\n          type: string\n          description: \u003e\n            The password you want to use for your new account. \\\n\n            The password length must be greater or equals to 6 and lower or\n            equals to 128. \\\n\n            The password must contains at least one number and one special\n            character\n          example: I@mW0nder$Full\n        cultureName:\n          type: string\n          description: \u003e\n            Can be null. Default: en-GB. The culture name you want to use. FYI.\n            \\\n\n            The email activation will use this culture.\n          example: en-GB\n        commercialOwnerUserId:\n          type: string\n          description: The user id of your commercial in BeezUP.\n          format: uuid\n          example: 47ea14ab-195d-4f9a-a24e-32c329ee40f6\n    BeezUP_Common_ErrorResponseMessage:\n      required:\n        - errors\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'\n    BeezUP_Common_Email:\n      pattern: ^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\n      type: string\n      description: The email\n      format: email\n      example: paulsimon@mysupercompany.com\n    BeezUP_Common_UserErrorMessage:\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        docUrl:\n          $ref: '#/components/schemas/BeezUP_Common_DocUrl'\n        code:\n          type: string\n          description: \u003e-\n            the error code. The error code can be a pattern containing the\n            argument's name\n          example: \u003e-\n            CatalogImportationAlreadyInProgress(ExecutionId\n            currentCatalogImportationId)\n        message:\n          type: string\n          description: The error message\n          example: \u003e\n            There is already an importation in progress:\n            b24d0dd8-a561-478a-9b26-34f573f03527\n        cultureName:\n          type: string\n          description: If the error is translated, the culture name will be indicated\n          example: en\n          x-lov: Go2CultureName\n        arguments:\n          type: array\n          description: a dictionary string/object\n          items:\n            required:\n              - name\n              - value\n            type: object\n            properties:\n              name:\n                type: string\n                description: The key of the parameter\n                example: currentCatalogImportationId\n              value:\n                type: object\n                properties: {}\n                description: The value of the parameter. Depending to the type.\n    BeezUP_Common_DocUrl:\n      type: string\n      description: The documentation related to this operation.\n      format: uri\n      example: https://api-docs.beezup.com/#operation/EnableChannelCatalog\n    publicChannelIndex:\n      type: object\n      properties:\n        channels:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/links.GetChannelsLink'\n          description: The key is the country iso code\n          example:\n            FRA:\n              href: /v2/public/channels/FRA\n              method: GET\n            DEU:\n              href: /v2/public/channels/DEU\n              method: GET\n            ESP:\n              href: /v2/public/channels/ESP'\n              method: GET\n            ITA:\n              href: /v2/public/channels/ITA\n              method: GET\n            GBR:\n              href: /v2/public/channels/GBR\n              method: GET\n        links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/links.GetChannelsIndexLink'\n            channelCountryLov:\n              $ref: '#/components/schemas/links.GetPublicListOfValuesLink'\n            channelTypeLov:\n              $ref: '#/components/schemas/links.GetPublicListOfValuesLink'\n            sectorLov:\n              $ref: '#/components/schemas/links.GetPublicListOfValuesLink'\n          example:\n            self:\n              href: /v2/public/channels\n              method: GET\n            channelCountryLov:\n              href: /v2/public/lov/www_ChannelCountry\n              method: GET\n            channelTypeLov:\n              href: /v2/public/lov/ChannelType\n              method: GET\n            sectorLov:\n              href: /v2/public/lov/ParamSector\n              method: GET\n    links.GetPublicListOfValuesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/public/lov/ChannelType\n            method: GET\n    links.GetChannelsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/public/channels/FRA\n            method: GET\n    links.GetChannelsIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/public/channels\n            method: GET\n    publicChannelInfoList:\n      type: object\n      properties:\n        links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/links.GetChannelsLink'\n        channels:\n          type: array\n          items:\n            $ref: '#/components/schemas/publicChannelInfo'\n    publicChannelInfo:\n      required:\n        - homeUrl\n        - logoUrl\n        - name\n        - types\n      type: object\n      properties:\n        name:\n          type: string\n          description: The channel name\n          example: Amazon Direct FRA\n        homeUrl:\n          type: string\n          description: The channel home url\n          format: uri\n          example: http://www.amazon.fr\n        logoUrl:\n          type: string\n          description: The channel logo url\n          format: uri\n          example: \u003e-\n            http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png\n        types:\n          type: array\n          description: The type list related to a channel\n          example:\n            - Marketplace\n          items:\n            type: string\n        sectors:\n          type: array\n          description: The sector list related to a channel\n          example:\n            - BRICOLAGE\n            - INFO\n            - GENERALIST\n          items:\n            type: string\n    BeezUP_Common_Link3:\n      required:\n        - href\n      type: object\n      properties:\n        label:\n          type: string\n          description: \u003e-\n            The label corresponding to the link. This label is automatically\n            translated based on the Accept-Language http header.\n          example: The translated label\n        docUrl:\n          $ref: '#/components/schemas/BeezUP_Common_DocUrl'\n        description:\n          type: string\n          description: The description of the link\n          example: This is a description link\n        href:\n          $ref: '#/components/schemas/BeezUP_Common_Href'\n        operationId:\n          $ref: '#/components/schemas/BeezUP_Common_OperationId'\n        method:\n          $ref: '#/components/schemas/BeezUP_Common_HttpMethod'\n        parameters:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/BeezUP_Common_LinkParameter3'\n        urlTemplated:\n          type: boolean\n          description: indicates whether the href is templated or not\n        allRequiredParamsProvided:\n          type: boolean\n          description: indicates whether all required params have been provided\n        allOptionalParamsProvided:\n          type: boolean\n          description: indicates whether all optionals params have been provided\n        info:\n          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'\n    BeezUP_Common_Href:\n      type: string\n      description: Indicate the relative uri for this link\n      example: \u003e-\n        /v2/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}\n    BeezUP_Common_OperationId:\n      type: string\n      description: The operationId to call.\n      example: GetOrder\n    BeezUP_Common_HttpMethod:\n      type: string\n      description: Indicate the http method to use on this link\n      example: GET\n      default: GET\n      enum:\n        - GET\n        - POST\n        - PATCH\n        - DELETE\n        - PUT\n        - HEAD\n    BeezUP_Common_LinkParameter3:\n      required:\n        - in\n      type: object\n      properties:\n        label:\n          type: string\n          description: \u003e-\n            The label corresponding to the link parameter. This label is\n            automatically translated based on the Accept-Language http header.\n          example: The translated label\n        value:\n          type: object\n          properties: {}\n          description: \u003e-\n            The value of the parameter. It can be an integer a string or an\n            object.\n        required:\n          type: boolean\n          example: true\n          default: false\n        in:\n          $ref: '#/components/schemas/BeezUP_Common_ParameterIn'\n        type:\n          $ref: '#/components/schemas/BeezUP_Common_ParameterType'\n        lovLink:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        lovRequired:\n          type: boolean\n          description: \u003e-\n            If true, you MUST indicate a value from the list of values otherwise\n            it's a freetext\n          example: true\n        description:\n          type: string\n          description: description of the parameter\n          example: the store identifier\n        schema:\n          type: string\n          description: schema of the parameter\n          example: orderListRequest\n        properties:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/BeezUP_Common_LinkParameterProperty3'\n          description: \u003e-\n            If the parameter is an object with flexible properties\n            (additionProperties/dictionary), we will describe the properties of\n            the object.\n          example:\n            shipOrder:\n              type: string\n    BeezUP_Common_InfoSummaries:\n      type: object\n      properties:\n        successes:\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_SuccessSummary'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_ErrorSummary'\n        warnings:\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_WarningSummary'\n        informations:\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_InfoSummary'\n    BeezUP_Common_ParameterIn:\n      type: string\n      description: |\n        * path: if the parameter must be pass in the path uri\n        * header: if the parameter must be passed in http header\n        * query: if the parameter must be passed in querystring\n        * body: if the paramter must be passed in the body\n      example: path\n      enum:\n        - path\n        - header\n        - query\n        - body\n    BeezUP_Common_ParameterType:\n      type: string\n      description: The value type of the parameter\n      example: string\n      default: string\n      enum:\n        - string\n        - integer\n        - number\n        - boolean\n        - object\n        - array\n        - date\n        - date-time\n    BeezUP_Common_LOVLink3:\n      required:\n        - href\n      type: object\n      properties:\n        href:\n          type: string\n          description: Indicate the uri to the list of value\n          format: uri\n          example: /v2/public/Go2CultureName\n        method:\n          $ref: '#/components/schemas/BeezUP_Common_HttpMethod'\n      description: Describe the way you have to follow to get access to the LOV\n    BeezUP_Common_LinkParameterProperty3:\n      required:\n        - type\n      type: object\n      properties:\n        label:\n          type: string\n          description: \u003e-\n            The label corresponding to the link parameter property. This label\n            is automatically translated based on the Accept-Language http\n            header.\n          example: The translated label\n        value:\n          type: object\n          properties: {}\n          description: \u003e-\n            The value of the parameter. It can be an integer a string or an\n            object.\n        required:\n          type: boolean\n          example: true\n        type:\n          $ref: '#/components/schemas/BeezUP_Common_ParameterType'\n        lovLink:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        lovRequired:\n          type: boolean\n          description: \u003e-\n            If true, you MUST use indicate a value from the list of values\n            otherwise it's a freetext\n          example: true\n        description:\n          type: string\n          description: description of the parameter\n          example: the store identifier\n        schema:\n          type: string\n          description: schema of the parameter\n          example: orderListRequest\n    BeezUP_Common_SuccessSummary:\n      type: object\n      properties:\n        successCode:\n          type: string\n        successMessage:\n          type: string\n        successArguments:\n          type: object\n          additionalProperties:\n            type: string\n        propertyName:\n          type: string\n        propertyValue:\n          type: string\n        objectName:\n          type: string\n    BeezUP_Common_ErrorSummary:\n      type: object\n      properties:\n        utcDate:\n          type: string\n          format: date-time\n        errorGuid:\n          type: string\n          format: uuid\n        errorCode:\n          type: string\n        errorMessage:\n          type: string\n        technicalErrorMessage:\n          type: string\n        exceptionDetail:\n          $ref: '#/components/schemas/BeezUP_Common_ExceptionDetail'\n        errorArguments:\n          type: object\n          additionalProperties:\n            type: string\n        propertyName:\n          type: string\n        propertyValue:\n          type: string\n        objectName:\n          type: string\n        source:\n          type: string\n    BeezUP_Common_WarningSummary:\n      type: object\n      properties:\n        technicalErrorMessage:\n          type: string\n        warningMessage:\n          type: string\n        warningCode:\n          type: string\n        warningArguments:\n          type: object\n          additionalProperties:\n            type: string\n    BeezUP_Common_InfoSummary:\n      type: object\n      properties:\n        informationCode:\n          type: string\n        informationMessage:\n          type: string\n        informationArguments:\n          type: object\n          additionalProperties:\n            type: string\n        propertyName:\n          type: string\n        propertyValue:\n          type: string\n        objectName:\n          type: string\n    BeezUP_Common_ExceptionDetail:\n      type: object\n      properties:\n        helpLink:\n          type: string\n        message:\n          type: string\n        stackTrace:\n          type: string\n        type:\n          type: string\n    publicLovIndex:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/publicLovIndexLinks'\n    publicLovIndexLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetPublicLovIndexLink'\n        lists:\n          $ref: '#/components/schemas/publicLovLinks'\n    publicLovLinks:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/links.GetPublicListOfValuesLink'\n      description: List of lov link. The key is the list name.\n    links.GetPublicLovIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/public/lov\n            method: GET\n    publicListOfValuesResponse:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/publicListOfValuesResponseLinks'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_ListOfValueItem'\n    publicListOfValuesResponseLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetPublicListOfValuesLink'\n    BeezUP_Common_ListOfValueItem:\n      required:\n        - codeIdentifier\n        - intIdentifier\n      type: object\n      properties:\n        position:\n          type: integer\n          format: int32\n          example: 1\n        codeIdentifier:\n          type: string\n          example: FRA\n        translationText:\n          type: string\n          example: France\n        intIdentifier:\n          type: integer\n          format: int32\n          example: 1\n      description: This object is used by LOV apis\n    userLovIndex:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/userLovIndexLinks'\n    userLovIndexLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetUserLovIndexLink'\n        lists:\n          $ref: '#/components/schemas/userLovLinks'\n    userLovLinks:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/links.GetUserListOfValuesLink'\n      description: List of lov link. The key is the list name.\n    links.GetUserListOfValuesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/lov/Go2CultureName\n            method: GET\n    links.GetUserLovIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/lov\n            method: GET\n    userListOfValuesResponse:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/userListOfValuesResponseLinks'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_ListOfValueItem'\n    userListOfValuesResponseLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetUserListOfValuesLink'\n    links.logoutLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/security/logout\n            method: POST\n    links.getFriendInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/friends/{userId}\n            method: GET\n            parameters:\n              userId:\n                in: path\n                type: string\n                required: true\n    links.getStandardOffersLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/offers\n            method: GET\n    links.getOfferLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/offers\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: offerRequest\n    links.getBillingPeriodsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/billingPeriods\n            method: GET\n    links.getInvoicesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/invoices\n            method: GET\n    links.getUserAccountInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account\n            method: GET\n    links.shareStoreLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares\n            method: POST\n            parameters:\n              email:\n                type: string\n                in: body\n                required: true\n    links.deleteStoreShareLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares/277596c1-a5a9-4cce-9f34-b5906451a98f\n            method: DELETE\n    links.getStoresLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/stores\n            method: GET\n    links.createStoreLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/stores\n            method: POST\n    links.getStoreLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6\n            method: GET\n    links.deleteStoreLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6\n            method: DELETE\n    links.updateStoreLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6\n            method: PATCH\n    links.getStoreSharesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares\n            method: GET\n    links.createContractLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/contracts\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                value:\n                  offerId: '1'\n                  storeCount: '1'\n                  couponDiscountCode: I-LOVE-BEEZUP\n                  couponOfferCode: 04efc310-bc25-4710-a83a-faf200284fe5\n                  billingPeriodInMonth: '12'\n    links.saveCreditCardInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/creditCardInfo\n            method: PUT\n    links.saveStoreAlertsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/alerts\n            method: POST\n    links.savePersonalInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/personalInfo\n            method: PUT\n    links.changeEmailLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/changeEmail\n            method: POST\n    links.changePasswordLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/changePassword\n            method: POST\n    links.saveCompanyInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/companyInfo\n            method: PUT\n    links.saveProfilePictureInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/profilePictureInfo\n            method: PUT\n    links.getCreditCardInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/creditCardInfo\n            method: GET\n    links.getContractsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/contracts\n            method: GET\n    links.reactivateCurrentContractLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/contracts/current/reenableAutoRenewal\n            method: POST\n    links.terminateCurrentContractLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/contracts/current/disableAutoRenewal\n            method: POST\n    links.deleteNextContractLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/contracts/next\n            method: DELETE\n    links.activateUserAccountLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/activate\n            method: POST\n    links.getProfilePictureInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer/account/profilePictureInfo\n            method: GET\n    links.GetCustomerIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/customer\n            method: GET\n    errorResponseMessagePaymentRequiredLinks:\n      required:\n        - offer\n      type: object\n      properties:\n        offer:\n          $ref: '#/components/schemas/links.getOfferLink'\n    errorResponseMessagePaymentRequired:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n        - required:\n            - links\n          type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/errorResponseMessagePaymentRequiredLinks'\n    customerIndex:\n      required:\n        - links\n        - lovLinks\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/customerIndexLinks'\n        lovLinks:\n          $ref: '#/components/schemas/customerIndexLovLinks'\n      description: The index of the customer API\n    customerIndexLinks:\n      required:\n        - accountInfo\n        - billingPeriods\n        - friendInfo\n        - self\n        - standardOffers\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetCustomerIndexLink'\n        accountInfo:\n          $ref: '#/components/schemas/links.getUserAccountInfoLink'\n        friendInfo:\n          $ref: '#/components/schemas/links.getFriendInfoLink'\n        logout:\n          $ref: '#/components/schemas/links.logoutLink'\n        stores:\n          $ref: '#/components/schemas/links.getStoresLink'\n        billingPeriods:\n          $ref: '#/components/schemas/links.getBillingPeriodsLink'\n        standardOffers:\n          $ref: '#/components/schemas/links.getStandardOffersLink'\n        getOffer:\n          $ref: '#/components/schemas/links.getOfferLink'\n        invoices:\n          $ref: '#/components/schemas/links.getInvoicesLink'\n        contracts:\n          $ref: '#/components/schemas/links.getContractsLink'\n      description: Gives you want you can do on this API\n    customerIndexLovLinks:\n      type: object\n      properties:\n        offerLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        activeOfferLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        customerStatusLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        beezUPTimeZoneLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        storeCountryLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        storeSectorLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        countryLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        contractTerminationReasonLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        invoicePaymentStatusLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n    storeShares:\n      required:\n        - links\n        - shares\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/storeSharesLinks'\n        shares:\n          type: array\n          items:\n            $ref: '#/components/schemas/storeShare'\n    storeSharesLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getStoreSharesLink'\n        share:\n          $ref: '#/components/schemas/links.shareStoreLink'\n    storeShare:\n      required:\n        - links\n        - userId\n        - userRole\n      type: object\n      properties:\n        userId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        userRole:\n          $ref: '#/components/schemas/storeUserRole'\n        links:\n          $ref: '#/components/schemas/storeShareLinks'\n    storeShareLinks:\n      type: object\n      properties:\n        deleteShare:\n          $ref: '#/components/schemas/links.deleteStoreShareLink'\n      description: The different actions you can make on this store share\n    storeListLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getStoresLink'\n        createStore:\n          $ref: '#/components/schemas/links.createStoreLink'\n      description: The action links you can do globally on stores\n    storeList:\n      required:\n        - links\n        - stores\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/storeListLinks'\n        stores:\n          type: array\n          items:\n            $ref: '#/components/schemas/store'\n    storeUserRole:\n      type: string\n      description: |\n        Indicates the role can have a user on a store.\n        * Owner: Indicates that you are the owner of this store\n        * User: Indicates that you are a simple user on this store\n      example: User\n      enum:\n        - Owner\n        - User\n    storeStatus:\n      type: string\n      description: |\n        The store status\n        * Active:  When the store is active\n        * SystemBlocked:  When the store is blocked by the system\n        * UserBlocked: When the store is blocked on GO not on the system\n      example: Active\n      enum:\n        - Active\n        - SystemBlocked\n        - UserBlocked\n    accountStatus:\n      type: string\n      description: \u003e\n        The account status\n\n        * Active:  When the account is active\n\n        * SystemBlocked:  When all stores on the account are blocked by the\n        system\n\n        * UserBlocked: When all stores on the account are blocked on GO not on\n        the system\n\n        * NotActivated: When the email is not verified\n      example: Active\n      enum:\n        - Active\n        - SystemBlocked\n        - UserBlocked\n        - NotActivated\n    store:\n      required:\n        - countryIsoCodeAlpha3\n        - creationUtcDate\n        - currencyCode\n        - goVersion\n        - isTest\n        - links\n        - name\n        - offerId\n        - offerName\n        - ownerUserId\n        - sectors\n        - shareCount\n        - status\n        - storeId\n        - url\n        - userRole\n      type: object\n      properties:\n        storeId:\n          $ref: '#/components/schemas/BeezUP_Common_StoreId'\n        name:\n          $ref: '#/components/schemas/storeName'\n        url:\n          $ref: '#/components/schemas/storeUrl'\n        countryIsoCodeAlpha3:\n          $ref: '#/components/schemas/storeCountryIsoCodeAlpha3'\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        sectors:\n          $ref: '#/components/schemas/storeSectors'\n        userRole:\n          $ref: '#/components/schemas/storeUserRole'\n        status:\n          $ref: '#/components/schemas/storeStatus'\n        ownerUserId:\n          type: string\n          description: The user id of the owner of the store\n          format: guid\n          example: 00000000-0000-0000-0000-000000000000\n        offerId:\n          $ref: '#/components/schemas/offerId'\n        offerName:\n          type: string\n          description: The offer Name\n          example: Premium\n        shareCount:\n          type: integer\n          description: The share count related to this store\n          example: 5\n        creationUtcDate:\n          type: string\n          description: The creation date of the store\n          format: date-time\n          example: 2017-04-01T22:30:00.000Z\n        goVersion:\n          type: integer\n          description: The version of GO to use\n          format: int32\n          example: 2\n        links:\n          $ref: '#/components/schemas/storeLinks'\n        isTest:\n          type: boolean\n          description: Is the store a test or a production store\n    storeLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getStoreLink'\n        deleteStore:\n          $ref: '#/components/schemas/links.deleteStoreLink'\n        updateStore:\n          $ref: '#/components/schemas/links.updateStoreLink'\n        shares:\n          $ref: '#/components/schemas/links.getStoreSharesLink'\n        share:\n          $ref: '#/components/schemas/links.shareStoreLink'\n      description: The action links for this store\n    storeName:\n      type: string\n      description: The store name. Must be unique.\n      example: My Store\n    storeUrl:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n      type: string\n      description: The url of your store\n      example: http://www.mystore.com\n    storeCountryIsoCodeAlpha3:\n      type: string\n      description: \u003e-\n        The country iso code alpha 3 based on the list of values\n        /user/lov/StoreCountry\n      example: DEU\n      x-lov: StoreCountry\n    storeSectors:\n      type: array\n      description: The store's sectors based on the list of values /user/lov/ParamSector\n      example:\n        - ANIMALERIE\n        - AUTOMOTO\n      items:\n        $ref: '#/components/schemas/storeSector'\n    storeSector:\n      type: string\n      description: The store's sector based on the list of values /user/lov/ParamSector\n      example: ANIMALERIE\n      x-lov: ParamSector\n    contractId:\n      type: string\n      description: Your contract identifier\n      format: guid\n      example: 7098487a-86f6-4322-b8a5-b67f7363b3e7\n    invoiceNumber:\n      type: string\n      description: Your invoice number\n      example: B1234\n    createStoreRequest:\n      required:\n        - countryIsoCodeAlpha3\n        - name\n        - sectors\n        - url\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/BeezUP_Common_StoreId'\n        name:\n          $ref: '#/components/schemas/storeName'\n        url:\n          $ref: '#/components/schemas/storeUrl'\n        countryIsoCodeAlpha3:\n          $ref: '#/components/schemas/storeCountryIsoCodeAlpha3'\n        sectors:\n          $ref: '#/components/schemas/storeSectors'\n      description: \u003e-\n        The request to create a store. The store identifier is optional, if null\n        it will be automatically computed.\n    updateStoreRequest:\n      required:\n        - name\n        - sectors\n        - url\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/storeName'\n        url:\n          $ref: '#/components/schemas/storeUrl'\n        sectors:\n          $ref: '#/components/schemas/storeSectors'\n    functionalityRightInfo:\n      required:\n        - functionalityCode\n      type: object\n      properties:\n        functionalityCode:\n          type: string\n          description: The functionality code\n          example: COMPAMANA\n        maxValueInterger:\n          type: integer\n          description: The max value for this functionality code considering your rights\n          example: 10\n        unlimited:\n          type: boolean\n          description: If you can use this functionality unlimitedly\n          example: true\n      description: Describe the rights for a functionality\n    invoiceListLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getInvoicesLink'\n    invoiceList:\n      required:\n        - invoices\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/invoiceListLinks'\n        invoices:\n          type: array\n          example:\n            - invoiceDate: 2016-05-01T00:00:00.000Z\n              contractId: 7098487a-86f6-4322-b8a5-b67f7363b3e7\n              invoiceNumber: B1234\n              amount: '101'\n              amountToBePaid: '0'\n              currencyCode: EUR\n              paymentStatus: Paid\n              dueDate: 2016-05-10T00:00:00.000Z\n              invoiceUrl: \u003e-\n                https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf\n          items:\n            $ref: '#/components/schemas/invoice'\n    invoicePaymentStatus:\n      type: string\n      description: The payment status\n      example: Paid\n      enum:\n        - Paid\n        - NotPaid\n        - PartiallyPaid\n        - Loss\n    invoice:\n      required:\n        - amount\n        - amountToBePaid\n        - contractId\n        - currencyCode\n        - dueDate\n        - invoiceDate\n        - invoiceNumber\n        - paymentStatus\n      type: object\n      properties:\n        invoiceDate:\n          type: string\n          description: The invoice date\n          format: date\n          example: 2016-05-01T00:00:00.000Z\n        contractId:\n          $ref: '#/components/schemas/contractId'\n        invoiceNumber:\n          $ref: '#/components/schemas/invoiceNumber'\n        amount:\n          type: number\n          description: The amount of your invoice\n          format: double\n          example: 101.42\n        amountToBePaid:\n          type: number\n          description: The remaining amount to be paid for this invoice\n          format: double\n          example: 0\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        paymentStatus:\n          $ref: '#/components/schemas/invoicePaymentStatus'\n        dueDate:\n          type: string\n          format: date\n          example: 2016-05-10T00:00:00.000Z\n        invoiceUrl:\n          type: string\n          description: The url of the invoice document\n          format: uri\n          example: \u003e-\n            https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf\n    friendEmail:\n      pattern: ^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\n      type: string\n      description: Your friend's user email\n      format: email\n      example: humphray.bogart@yahoo.ma\n    friendCountryIsoCodeAlpha3:\n      type: string\n      description: Your friend's user country iso code alpha 3\n      example: USA\n      x-lov: Country\n    friendProfilePictureUrl:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n      type: string\n      description: Your friend's user profile picture url\n      example: \u003e-\n        https://www.biography.com/.image/c_fill,cs_srgb,dpr_1.0,g_face,h_300,q_80,w_300/MTE4MDAzNDEwNDU3MjMyOTEw/humphrey-bogart-9217486-1-402.jpg\n    userFriendInfo:\n      required:\n        - company\n        - countryIsoCodeAlpha3\n        - email\n        - firstName\n        - lastName\n        - userId\n      type: object\n      properties:\n        userId:\n          type: string\n          description: Your friend's user id\n          format: guid\n          example: 00c4a9d2-fc8e-4b3d-8e52-c4f276245bc1\n        lastName:\n          type: string\n          description: Your friend's user last name\n          example: Humphrey\n        firstName:\n          type: string\n          description: Your friend's user first name\n          example: Bogart\n        email:\n          $ref: '#/components/schemas/friendEmail'\n        profilePictureUrl:\n          $ref: '#/components/schemas/friendProfilePictureUrl'\n        countryIsoCodeAlpha3:\n          $ref: '#/components/schemas/friendCountryIsoCodeAlpha3'\n        company:\n          type: string\n          description: Your friend's user company name\n          example: World company\n        whatIDo:\n          type: string\n          description: Your friend's user occupation in his company\n          example: I'm an actor...\n    createContract:\n      allOf:\n        - $ref: '#/components/schemas/offerRequest'\n    createContractResponseLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.createContractLink'\n        contracts:\n          $ref: '#/components/schemas/links.getContractsLink'\n    createContractResponse:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/createContractResponseLinks'\n        info:\n          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'\n    contractsLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getContractsLink'\n        create:\n          $ref: '#/components/schemas/links.createContractLink'\n    currentContractInfoLinks:\n      type: object\n      properties:\n        disable:\n          $ref: '#/components/schemas/links.terminateCurrentContractLink'\n        reenable:\n          $ref: '#/components/schemas/links.reactivateCurrentContractLink'\n    nextContractInfoLinks:\n      type: object\n      properties:\n        delete:\n          $ref: '#/components/schemas/links.deleteNextContractLink'\n    currentContractInfo:\n      allOf:\n        - $ref: '#/components/schemas/contractInfo'\n        - required:\n            - links\n          type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/currentContractInfoLinks'\n          description: Get the conditions of your current contract\n    contracts:\n      required:\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/contractsLinks'\n        current:\n          $ref: '#/components/schemas/currentContractInfo'\n        next:\n          $ref: '#/components/schemas/nextContractInfo'\n    nextContractInfo:\n      allOf:\n        - $ref: '#/components/schemas/contractInfo'\n        - required:\n            - links\n          type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/nextContractInfoLinks'\n          description: Get the conditions of your next contract\n    contractInfo:\n      type: object\n      properties:\n        trialPeriodInMonth:\n          type: integer\n          description: The trial period in month\n          format: int32\n        billingPeriodPercentDiscount:\n          type: number\n          description: The percent discount related to the billing period\n          format: double\n        discountDurationInMonth:\n          type: integer\n          description: The discount duration in month\n          format: int32\n        percentDiscount:\n          type: number\n          description: The percent of the discount\n          format: double\n        offerId:\n          $ref: '#/components/schemas/offerId'\n        storeCount:\n          $ref: '#/components/schemas/storeCount'\n        startUtcDate:\n          type: string\n          description: The start date of your contract\n          format: date-time\n        commitmentCalculatedFinishUtcDate:\n          type: string\n          description: The calculated end date of commitment\n          format: date-time\n        billingPeriodInMonth:\n          type: integer\n          description: The billing period in month\n          format: int32\n        fixedPrice:\n          type: number\n          description: The fixed price of your contract\n          format: double\n        offerName:\n          type: string\n          description: The offer name based on /offers\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        contractId:\n          $ref: '#/components/schemas/contractId'\n        commitmentPeriodInMonth:\n          type: integer\n          description: The commitment period in month\n          format: int32\n        clickIncluded:\n          type: integer\n          description: The click included\n          format: int32\n        additionalClickPrice:\n          type: number\n          description: Additional click price\n          format: double\n        ipUserCreation:\n          type: string\n          description: The IP of the user who creates the contract\n        ipUserModification:\n          type: string\n          description: The IP of the user who modified the contract\n        fixedAndVariableClickInfo:\n          $ref: '#/components/schemas/fixedAndVariableClickModelInfo'\n        variableModelInfo:\n          $ref: '#/components/schemas/variableModelInfo'\n        isCommitmentRenewalAutomatically:\n          type: boolean\n          description: Is commitment is automatically renewed\n        discountEndUtcDate:\n          type: string\n          description: The end of your discount\n          format: date-time\n        isModifiableContract:\n          type: boolean\n          description: Is the contract is modifiable ?\n      description: Describe the conditions of a contract\n    clickIncludedAndAdditionalClickPrice:\n      type: object\n      properties:\n        clickIncluded:\n          type: integer\n          description: The click included\n          format: int32\n        additionalClickPrice:\n          type: number\n          description: The additional click price\n          format: double\n    clickIncludedAndVariablePrice:\n      type: object\n      properties:\n        clickIncluded:\n          type: integer\n          description: Click included\n          format: int32\n        variablePrice:\n          type: number\n          description: The pricing applied for this range\n          format: double\n    terminateContract:\n      required:\n        - contractTerminationReasonType\n      type: object\n      properties:\n        contractTerminationReasonType:\n          $ref: '#/components/schemas/contractTerminationReasonType'\n        contractTerminationReason:\n          $ref: '#/components/schemas/contractTerminationReason'\n      description: The contract termination info\n    offerId:\n      minimum: 1\n      type: integer\n      description: The offer id based on /offers. Not a free offer of course.\n      format: int32\n      example: 1\n    storeCount:\n      minimum: 1\n      type: integer\n      description: The store count you want to have in your contract.\n      format: int32\n      example: 1\n    couponDiscountCode:\n      type: string\n      description: The coupon discount code\n      example: I-LOVE-BEEZUP\n    couponOfferCode:\n      type: string\n      description: Your special coupon offer identifier\n      format: guid\n      example: 04efc310-bc25-4710-a83a-faf200284fe5\n    billingPeriodInMonth:\n      minimum: 1\n      type: integer\n      description: Can be null. The billing period in month based on /billingPeriods\n      format: int32\n      example: 12\n    contractTerminationReasonType:\n      type: integer\n      description: \u003e-\n        The contract termination reason type identifier, if your current\n        contract is scheduled to be terminated. The value is based on the list\n        of values /user/lov/ContractTerminationReason\n      format: int32\n      example: 1\n      x-lov: ContractTerminationReason\n    contractTerminationReason:\n      type: string\n      description: \u003e-\n        The termination reason, if your current contract is scheduled to be\n        terminated.\n      example: I'm crazy, I want to leave your splendid service...\n    offerRequest:\n      required:\n        - billingPeriodInMonth\n        - offerId\n        - storeCount\n      type: object\n      properties:\n        offerId:\n          $ref: '#/components/schemas/offerId'\n        storeCount:\n          $ref: '#/components/schemas/storeCount'\n        couponDiscountCode:\n          $ref: '#/components/schemas/couponDiscountCode'\n        couponOfferCode:\n          $ref: '#/components/schemas/couponOfferCode'\n        billingPeriodInMonth:\n          $ref: '#/components/schemas/billingPeriodInMonth'\n    paymentMethod:\n      type: string\n      description: Payment method\n      default: OnlinePayment\n      enum:\n        - Transfer\n        - Debit\n        - Paypal\n        - Check\n        - CreditNote\n        - Loss\n        - OnlinePayment\n    offer:\n      type: object\n      properties:\n        content:\n          $ref: '#/components/schemas/offerContent'\n        info:\n          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'\n        links:\n          $ref: '#/components/schemas/offerLinks'\n    offerLinks:\n      type: object\n      properties:\n        createContract:\n          $ref: '#/components/schemas/links.createContractLink'\n      description: The different actions you can make on this offer\n    offerContent:\n      required:\n        - contractBillingPeriodInfo\n        - contractBonusInfo\n        - contractClickInfo\n        - contractCommitmentInfo\n        - contractDiscountInfo\n        - contractMoneyInfo\n        - contractStoreInfo\n        - notifyVatExemption\n        - previousFixPeriodInvoiceProrataInfo\n      type: object\n      properties:\n        previousFixPeriodInvoiceProrataInfo:\n          $ref: '#/components/schemas/previousFixPeriodInvoiceProrataInfo'\n        contractBillingPeriodInfo:\n          $ref: '#/components/schemas/contractBillingPeriodInfo'\n        contractClickInfo:\n          $ref: '#/components/schemas/contractClickInfo'\n        contractCommitmentInfo:\n          $ref: '#/components/schemas/contractCommitmentInfo'\n        contractDiscountInfo:\n          $ref: '#/components/schemas/contractDiscountInfo'\n        contractMoneyInfo:\n          $ref: '#/components/schemas/contractMoneyInfo'\n        contractStoreInfo:\n          $ref: '#/components/schemas/contractStoreInfo'\n        contractBonusInfo:\n          $ref: '#/components/schemas/contractBonusInfo'\n        contractTerminationReasonType:\n          $ref: '#/components/schemas/contractTerminationReasonType'\n        contractTerminationReason:\n          $ref: '#/components/schemas/contractTerminationReason'\n        notifyVatExemption:\n          type: boolean\n          description: \u003e-\n            Internal usage: Indicates if we have to notify you about VAT\n            exemption.\n          example: true\n    previousFixPeriodInvoiceProrataInfo:\n      type: object\n      properties:\n        computedProrataToBeDeducted:\n          type: number\n          description: The prorata amount\n          format: double\n          example: 194.66\n        invoiceNumber:\n          type: string\n          description: The previous invoice number\n          example: B1234\n        amountToBePaid:\n          type: number\n          description: The amount to be payed of the previous invoice\n          format: double\n          example: 0\n        amountAfterTax:\n          type: number\n          description: The amout after tax of the previous invoice\n          format: double\n          example: 101.42\n        contractId:\n          type: string\n          description: The contract id related to the previous invoice\n          format: guid\n          example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8\n        fixedPeriodEndDate:\n          type: string\n          description: The fixed end period of the previous invoice\n          format: date\n          example: 2017-05-01T00:00:00.000Z\n        fixedPeriodStartDate:\n          type: string\n          description: The fixed start period of the previous invoice\n          format: date\n          example: 2017-04-01T00:00:00.000Z\n      description: Describe the prorata info based on your previous invoice\n    contractBillingPeriodInfo:\n      type: object\n      properties:\n        amountBillingPeriodDiscount:\n          type: number\n          description: The amount discounted related to the billing period\n          format: double\n          example: 20\n        billingPeriodPercentDiscount:\n          type: number\n          description: The discount percent related to the billing period\n          format: double\n          example: 10\n        billingPeriodInMonth:\n          $ref: '#/components/schemas/billingPeriodInMonth'\n      description: Describe the billing period information related to the offer.\n    contractClickInfo:\n      type: object\n      properties:\n        additionalClickPrice:\n          type: number\n          description: The addition click price in the offer\n          format: double\n          example: 0.001\n        clickIncluded:\n          type: integer\n          description: The click included in the offer\n          format: int32\n          example: 5000\n        initialOfferClickIncluded:\n          type: integer\n          description: The click included in your current contract\n          format: int32\n          example: 5000\n      description: Describe the click information related to the offer.\n    contractCommitmentInfo:\n      type: object\n      properties:\n        commitmentCalculatedFinishDate:\n          type: string\n          description: The commitment end date related to the offer\n          format: date\n          example: 2017-06-02T00:00:00.000Z\n        newContractStartDate:\n          type: string\n          description: The start date related to the offer\n          format: date-time\n        commitmentPeriodInMonth:\n          type: integer\n          description: The commitment period in month related to the offer\n          format: int32\n          example: 1\n        trialPeriodInMonth:\n          type: integer\n          description: The trial period in month related to the offer\n          format: int32\n          example: 0\n        trialPeriodFinishDate:\n          type: string\n          description: The trial period end date related to the offer\n          format: date\n        paymentDelayInDays:\n          type: integer\n          description: The payment delay in days related to the offer\n          format: int32\n          example: 1\n        offerId:\n          $ref: '#/components/schemas/offerId'\n        offerName:\n          type: string\n          description: The offer Name\n          example: Premium\n        currentContractId:\n          type: string\n          description: Your current contract id\n          format: guid\n          example: dce56457-aa23-478d-8d76-b56eb9be799f\n        commercialUserId:\n          type: string\n          description: Your current commercial user id\n          format: guid\n          example: 0ddc2b79-10fe-4071-8161-42faa897082f\n        model:\n          type: string\n          description: 'Interal usage: Old offer type. The model description'\n          example: BLABLA\n        currentContractTerminationDate:\n          type: string\n          description: The current contract termination date\n          format: date\n          example: 2017-06-02T00:00:00.000Z\n        requestedPaymentMethod:\n          $ref: '#/components/schemas/paymentMethod'\n        currentCustomerPaymentMethod:\n          $ref: '#/components/schemas/paymentMethod'\n        contractType:\n          type: integer\n          description: 'Internal usage: Old offer type. Your contract type'\n          format: int32\n          example: 1234\n        isModelMustBeTransmittedInNewContract:\n          type: boolean\n          description: \u003e-\n            Internal usage: Old offer type. Is the current contract model needs\n            to be converted into a new contract type\n          example: false\n        fixedAndVariableClickInfo:\n          $ref: '#/components/schemas/fixedAndVariableClickModelInfo'\n        variableModelInfo:\n          $ref: '#/components/schemas/variableModelInfo'\n        paymentMethodAuthorized:\n          $ref: '#/components/schemas/paymentMethod'\n        couponOfferCode:\n          $ref: '#/components/schemas/couponOfferCode'\n        commercialCreatorUserId:\n          type: string\n          description: The commercial that is responsible of the creation of your account\n          format: guid\n          example: 6e07814d-26a9-494b-91b2-e5ed0b9aba8c\n        minBillingPeriodInMonths:\n          type: integer\n          description: The minimum billing period in month authorized for this offer.\n          format: int32\n          example: 1\n        isCustomerWantsToTerminateHisContract:\n          type: boolean\n          description: If true, this means you want to leave us and that's sad... :'-(\n          example: false\n      description: Describe the commitment information related to the offer.\n    contractDiscountInfo:\n      type: object\n      properties:\n        amountCodePromoDiscountPerMonth:\n          type: number\n          description: The amount discounted per month\n          format: double\n          example: 101.42\n        discountDurationInMonth:\n          type: integer\n          description: Duration of the discount in month\n          format: int32\n          example: 1\n        percentDiscount:\n          type: number\n          description: Percentage of the discount\n          format: double\n          example: 20\n        promotionalCodeValidity:\n          $ref: '#/components/schemas/promotionalCodeValidity'\n        amountCodePromoDiscount:\n          type: number\n          description: The discount amount\n          format: double\n          example: 101.42\n        couponDiscountCode:\n          type: string\n          description: The discount code\n          example: I-LOVE-BEEZUP\n        couponDiscountId:\n          type: integer\n          description: 'Internal use: The discount id'\n          format: int32\n          example: 1\n        isCouponDiscountLinkedToCouponOffer:\n          type: boolean\n          description: Is this discount is related to a coupon offer\n          example: true\n        customerHasActualDiscount:\n          type: boolean\n          description: Do you have currently a discount on your contract ?\n          example: true\n      description: Describe the discount information related to the offer.\n    contractMoneyInfo:\n      type: object\n      properties:\n        amountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount:\n          type: number\n          description: \u003e-\n            The amount excluding taxes and excluding code promo discount\n            including billing period discount.\n          format: double\n        amountExcludingTaxesIncludingDiscounts:\n          type: number\n          description: The amount excluding taxes including discounts.\n          format: double\n        amountTaxesExcludingDiscountIncludingBillingPeriodDiscount:\n          type: number\n          description: The taxes excluding discount including billing period discount.\n          format: double\n        amountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount:\n          type: number\n          description: \u003e-\n            The amount including taxes excluding discount including billing\n            period discount.\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        vatPercent:\n          type: number\n          description: The VAT percent.\n          format: double\n        amountExcludingTaxesIncludingDiscountsPerMonth:\n          type: number\n          description: The amount excluding taxes including discounts per month.\n          format: double\n        amountExcludingTaxesAndExcludingDiscounts:\n          type: number\n          description: The amount excluding taxes and excluding discounts.\n          format: double\n        amountTaxesIncludingDiscounts:\n          type: number\n          description: Taxes including discounts.\n          format: double\n        amountIncludingTaxesIncludingDiscounts:\n          type: number\n          description: The amount including taxes including discounts.\n          format: double\n        initialOfferFixedPrice:\n          type: number\n          description: The initial offer fixed price.\n          format: double\n      description: Describe the pricing information related to the offer.\n    contractStoreInfo:\n      type: object\n      properties:\n        storeCount:\n          $ref: '#/components/schemas/storeCount'\n        maxStoreCount:\n          type: integer\n          description: The maximum store count related to the offer.\n          format: int32\n        minStoreCount:\n          type: integer\n          description: The minimum store count related to the offer.\n          format: int32\n        ownedStoreCount:\n          type: integer\n          description: The owned store count.\n          format: int32\n        additionalStorePrice:\n          type: number\n          description: The additional store price.\n          format: double\n        storeIncluded:\n          type: integer\n          description: The store count included in the offer.\n          format: int32\n      description: Describe the store information related to the offer.\n    contractBonusInfo:\n      required:\n        - bonuses\n      type: object\n      properties:\n        bonuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/bonusInfo'\n      description: Describe the bonus information related to your current contract.\n    fixedAndVariableClickModelInfo:\n      required:\n        - clickIncludedAndAdditionalClickPrices\n      type: object\n      properties:\n        clickIncludedAndAdditionalClickPrices:\n          type: array\n          items:\n            $ref: '#/components/schemas/clickIncludedAndAdditionalClickPrice'\n      description: \u003e-\n        Internal usage: Old offer type. Describe the fix and variable model\n        information\n    variableModelInfo:\n      required:\n        - clickIncludedAndVariablePrices\n        - overflowClickCount\n        - overflowClickPrice\n      type: object\n      properties:\n        clickIncludedAndVariablePrices:\n          type: array\n          description: Click included with variable pricing information\n          items:\n            $ref: '#/components/schemas/clickIncludedAndVariablePrice'\n        overflowClickCount:\n          type: integer\n          description: The overflow click count\n          format: int32\n        overflowClickPrice:\n          type: number\n          description: The overflow click price\n          format: double\n      description: \u003e-\n        Internal usage: Old offer type. Describe the fix and variable model\n        information\n    bonusInfo:\n      required:\n        - amount\n        - bonusType\n      type: object\n      properties:\n        bonusType:\n          $ref: '#/components/schemas/bonusType'\n        amount:\n          type: number\n          format: double\n          example: 12.34\n    lastName:\n      type: string\n      description: Your last name\n      example: Simon\n    firstName:\n      type: string\n      description: Your first name\n      example: Paul\n    phoneNumber:\n      type: string\n      description: Your phone number\n      example: '5551234'\n    address:\n      type: string\n      description: Your address\n      example: 21 jump street\n    postalCode:\n      type: string\n      description: Your address postal code\n      example: '13014'\n    city:\n      type: string\n      description: Your address city\n      example: New-York\n    company:\n      type: string\n      description: Your company name\n      example: My super company\n    vatNumber:\n      type: string\n      description: \u003e-\n        Your company VATNumber. Used for french company. This number is checked\n        with official web service before being saved.\n      example: '1234567890'\n    accountingEmails:\n      type: array\n      description: Your company accounting emails\n      example:\n        - myaccountemail@mysupercompany.com\n      items:\n        $ref: '#/components/schemas/BeezUP_Common_Email'\n    profilePictureUrl:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n      type: string\n      description: Indicate the url of your picture profil\n      example: \u003e-\n        https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Marlon_Brando_%28cropped%29.jpg/220px-Marlon_Brando_%28cropped%29.jpg\n    profilePictureSelected:\n      type: string\n      description: \u003e-\n        Your profile picture choice about usage of gravatar picture, initials\n        picture or uploaded picture.\n      example: initials\n      enum:\n        - gravatar\n        - initials\n        - uploaded\n    whatIDo:\n      type: string\n      description: Your role in your company\n      example: I'm the Manager on this company\n    beezUPTimeZoneId:\n      type: integer\n      description: \u003e-\n        The time zone identifier based on the list of values\n        /v2/user/lov/BeezUPTimeZone\n      format: int32\n      example: 79\n      x-lov: BeezUPTimeZone\n    cardNumber:\n      type: string\n      description: Card number\n      example: '1234567890091234'\n    cardVerificationCode:\n      type: string\n      description: Card Verification Code\n      example: '123'\n    expirationMonth:\n      maximum: 12\n      minimum: 1\n      type: integer\n      description: Expiration Month\n      format: int32\n      example: 12\n    expirationYear:\n      maximum: 9000\n      minimum: 2017\n      type: integer\n      description: Expiration Year\n      format: int32\n      example: 2017\n    accountInfoLinks:\n      required:\n        - changeEmail\n        - changePassword\n        - getCreditCardInfo\n        - getProfilePictureInfo\n        - saveCompanyInfo\n        - saveCreditCardInfo\n        - savePersonalInfo\n        - saveProfilePictureInfo\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getUserAccountInfoLink'\n        savePersonalInfo:\n          $ref: '#/components/schemas/links.savePersonalInfoLink'\n        changeEmail:\n          $ref: '#/components/schemas/links.changeEmailLink'\n        changePassword:\n          $ref: '#/components/schemas/links.changePasswordLink'\n        saveCompanyInfo:\n          $ref: '#/components/schemas/links.saveCompanyInfoLink'\n        getProfilePictureInfo:\n          $ref: '#/components/schemas/links.getProfilePictureInfoLink'\n        saveProfilePictureInfo:\n          $ref: '#/components/schemas/links.saveProfilePictureInfoLink'\n        getCreditCardInfo:\n          $ref: '#/components/schemas/links.getCreditCardInfoLink'\n        saveCreditCardInfo:\n          $ref: '#/components/schemas/links.saveCreditCardInfoLink'\n        activateUserAccount:\n          $ref: '#/components/schemas/links.activateUserAccountLink'\n      description: The different actions you can make on this account\n    accountInfo:\n      required:\n        - email\n        - links\n        - status\n        - userId\n      type: object\n      properties:\n        userId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        email:\n          $ref: '#/components/schemas/BeezUP_Common_Email'\n        personalInfo:\n          $ref: '#/components/schemas/personalInfo'\n        status:\n          $ref: '#/components/schemas/accountStatus'\n        companyInfo:\n          $ref: '#/components/schemas/companyInfo'\n        profilePictureUrl:\n          $ref: '#/components/schemas/profilePictureUrl'\n        links:\n          $ref: '#/components/schemas/accountInfoLinks'\n        info:\n          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'\n    personalInfo:\n      required:\n        - beezUPTimeZoneId\n        - firstName\n        - lastName\n        - phoneNumber\n      type: object\n      properties:\n        lastName:\n          $ref: '#/components/schemas/lastName'\n        firstName:\n          $ref: '#/components/schemas/firstName'\n        phoneNumber:\n          $ref: '#/components/schemas/phoneNumber'\n        whatIDo:\n          $ref: '#/components/schemas/whatIDo'\n        beezUPTimeZoneId:\n          $ref: '#/components/schemas/beezUPTimeZoneId'\n    changeEmailRequest:\n      required:\n        - newEmail\n      type: object\n      properties:\n        newEmail:\n          $ref: '#/components/schemas/BeezUP_Common_Email'\n    changePasswordRequest:\n      required:\n        - newPassword\n        - oldPassword\n      type: object\n      properties:\n        oldPassword:\n          type: string\n          description: Your current password\n          format: password\n        newPassword:\n          type: string\n          description: \u003e-\n            Your new password. Which must respect the same constraints as the\n            user registeration\n          format: password\n    companyInfo:\n      required:\n        - address\n        - city\n        - company\n        - countryIsoCodeAlpha3\n        - postalCode\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/address'\n        postalCode:\n          $ref: '#/components/schemas/postalCode'\n        city:\n          $ref: '#/components/schemas/city'\n        countryIsoCodeAlpha3:\n          $ref: '#/components/schemas/BeezUP_Common_CountryIsoCodeAlpha3'\n        company:\n          $ref: '#/components/schemas/company'\n        vatNumber:\n          $ref: '#/components/schemas/vatNumber'\n        accountingEmails:\n          $ref: '#/components/schemas/accountingEmails'\n    profilePictureInfoResponseLinks:\n      required:\n        - save\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getProfilePictureInfoLink'\n        save:\n          $ref: '#/components/schemas/links.saveProfilePictureInfoLink'\n    profilePictureInfoResponse:\n      required:\n        - links\n        - profilePictureInfo\n      type: object\n      properties:\n        profilePictureInfo:\n          $ref: '#/components/schemas/profilePictureInfoWithDefault'\n        links:\n          $ref: '#/components/schemas/profilePictureInfoResponseLinks'\n    profilePictureInfoWithDefault:\n      allOf:\n        - $ref: '#/components/schemas/profilePictureInfo'\n        - required:\n            - gravatarProfilePictureUrl\n            - initialsProfilePictureUrl\n          type: object\n          properties:\n            initialsProfilePictureUrl:\n              $ref: '#/components/schemas/initialsProfilePictureUrl'\n            gravatarProfilePictureUrl:\n              $ref: '#/components/schemas/gravatarProfilePictureUrl'\n    initialsProfilePictureUrl:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n      type: string\n      description: Indicate the url of your picture profil based on your initials\n      example: https://dummyimage.com/50x50/000000/fff\u0026text=AM\n    gravatarProfilePictureUrl:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n      type: string\n      description: Indicate the url of your picture profil based on gravatar\n      example: https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?d=mm\n    profilePictureInfo:\n      required:\n        - profilePictureSelected\n      type: object\n      properties:\n        profilePictureUrl:\n          $ref: '#/components/schemas/profilePictureUrl'\n        profilePictureSelected:\n          $ref: '#/components/schemas/profilePictureSelected'\n    creditCardInfoResponseLinks:\n      required:\n        - saveCreditCardInfo\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getCreditCardInfoLink'\n        saveCreditCardInfo:\n          $ref: '#/components/schemas/links.saveCreditCardInfoLink'\n      description: The different actions you can make on this offer\n    creditCardInfoResponse:\n      required:\n        - currentPaymentMethod\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/creditCardInfoResponseLinks'\n        currentPaymentMethod:\n          $ref: '#/components/schemas/paymentMethod'\n        creditCardInfo:\n          $ref: '#/components/schemas/creditCardInfoWithCardType'\n        info:\n          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'\n    creditCardInfo:\n      required:\n        - cardNumber\n        - cardVerificationCode\n        - expirationMonth\n        - expirationYear\n      type: object\n      properties:\n        cardNumber:\n          $ref: '#/components/schemas/cardNumber'\n        cardVerificationCode:\n          $ref: '#/components/schemas/cardVerificationCode'\n        expirationMonth:\n          $ref: '#/components/schemas/expirationMonth'\n        expirationYear:\n          $ref: '#/components/schemas/expirationYear'\n    creditCardInfoWithCardType:\n      required:\n        - cardNumber\n        - cardType\n        - expirationMonth\n        - expirationYear\n      type: object\n      properties:\n        cardNumber:\n          $ref: '#/components/schemas/cardNumber'\n        expirationMonth:\n          $ref: '#/components/schemas/expirationMonth'\n        expirationYear:\n          $ref: '#/components/schemas/expirationYear'\n        cardType:\n          type: string\n          description: 'Your credit card type. Example: VISA, MasterCard, etc...'\n          example: VISA\n    storeAlerts:\n      type: object\n      properties:\n        alerts:\n          type: array\n          example:\n            - alertId: '8'\n              alertName: NoImportSinceXDays\n              isActive: 'true'\n              properties:\n                - propertyId: '2'\n                  propertyValidationExpression: \\b0*([1-9]|[12][0-9]|30)\\b\n                  propertyValue: '2'\n          items:\n            $ref: '#/components/schemas/storeAlert'\n    alertId:\n      type: integer\n      description: Alert identifier\n      format: int32\n      example: 8\n    alertName:\n      type: string\n      description: The alert name\n      example: NoImportSinceXDays\n    alertEnabled:\n      type: boolean\n      description: Is the alert enable ?\n      example: true\n    storeAlert:\n      required:\n        - alertId\n        - alertName\n        - enabled\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/storeAlertLinks'\n        alertId:\n          $ref: '#/components/schemas/alertId'\n        alertName:\n          $ref: '#/components/schemas/alertName'\n        enabled:\n          $ref: '#/components/schemas/alertEnabled'\n        properties:\n          type: array\n          description: The current configuration properties of the alert\n          example:\n            - propertyId: '2'\n              propertyValidationExpression: \\b0*([1-9]|[12][0-9]|30)\\b\n              propertyValue: '2'\n          items:\n            $ref: '#/components/schemas/storeAlertPropertyInfo'\n    storeAlertLinks:\n      type: object\n      properties:\n        save:\n          $ref: '#/components/schemas/links.saveStoreAlertsLink'\n      description: The different actions you can make on this alert\n    alertPropertyId:\n      type: integer\n      description: The property identifier of the alert\n      format: int32\n      example: 2\n    alertPropertyValue:\n      type: string\n      description: The property value\n      example: '2'\n    storeAlertPropertyInfo:\n      allOf:\n        - $ref: '#/components/schemas/storeAlertProperty'\n        - required:\n            - propertyName\n          type: object\n          properties:\n            propertyName:\n              type: string\n              description: The property name of the alert\n              example: NbDays\n            propertyValidationExpression:\n              type: string\n              description: The regular expression related to the alert property\n              example: \\b0*([1-9]|[12][0-9]|30)\\b\n    saveStoreAlertsRequest:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/saveStoreAlertRequest'\n      description: The key is the alert identifier (alertId)\n    saveStoreAlertRequest:\n      required:\n        - enabled\n      type: object\n      properties:\n        enabled:\n          $ref: '#/components/schemas/alertEnabled'\n        properties:\n          type: array\n          description: Properties to configure the alert\n          example:\n            - propertyId: '2'\n              propertyValue: '3'\n          items:\n            $ref: '#/components/schemas/storeAlertProperty'\n    storeAlertProperty:\n      required:\n        - propertyId\n        - propertyValue\n      type: object\n      properties:\n        propertyId:\n          $ref: '#/components/schemas/alertPropertyId'\n        propertyValue:\n          $ref: '#/components/schemas/alertPropertyValue'\n    standardOffersLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getStandardOffersLink'\n    standardOffers:\n      required:\n        - functionalities\n        - links\n        - offers\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/standardOffersLinks'\n        offers:\n          type: array\n          description: All standard offers\n          example:\n            - additionalClickPrice: '0'\n              includedClick: '1200'\n              isMostPopular: 'true'\n              name: Wonder offer\n              offerId: '1234'\n              fixedPrice: '101'\n              currencyCode: EUR\n              position: '1'\n              functionalities:\n                - functionalityCode: MARKETMANA\n                  maxValueInteger: '4'\n                  unlimited: 'false'\n                  text: Marketplace management\n          items:\n            $ref: '#/components/schemas/standardOffer'\n        functionalities:\n          type: array\n          description: All functionalities...\n          example:\n            - code: MARKETMANA\n              order: '1'\n          items:\n            $ref: '#/components/schemas/functionality'\n    standardOfferLinks:\n      type: object\n      properties:\n        getOffer:\n          $ref: '#/components/schemas/links.getOfferLink'\n    standardOffer:\n      required:\n        - links\n        - name\n        - offerId\n      type: object\n      properties:\n        offerId:\n          type: integer\n          description: The offer Id\n          format: int32\n          example: 1234\n        name:\n          type: string\n          description: The offer name\n          example: Wonder offer\n        additionalClickPrice:\n          type: number\n          description: The additional click price\n          format: double\n          example: 0.1234\n        includedClick:\n          type: integer\n          description: The included click\n          format: int32\n          example: 1200\n        isMostPopular:\n          type: boolean\n          description: UI purpose. Is the offer is the most popular\n          example: true\n        isOldOffer:\n          type: boolean\n          description: Is an old offer\n          example: false\n        fixedPrice:\n          type: number\n          description: The fixed price of the offer\n          format: double\n          example: 101.42\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        position:\n          type: integer\n          description: UI purpose. The position of the offer\n          format: int32\n          example: 1\n        functionalities:\n          type: array\n          example:\n            - functionalityCode: MARKETMANA\n              maxValueInteger: '4'\n              unlimited: 'false'\n              text: Marketplace management\n          items:\n            $ref: '#/components/schemas/offerFunctionality'\n        links:\n          $ref: '#/components/schemas/standardOfferLinks'\n    functionality:\n      required:\n        - code\n        - order\n      type: object\n      properties:\n        code:\n          type: string\n          description: The functionality code\n          example: MARKETMANA\n        order:\n          type: integer\n          description: 'UI purpose: Indicate the position of the functionality'\n          format: int32\n          example: 1\n    offerFunctionality:\n      required:\n        - functionalityCode\n        - unlimited\n      type: object\n      properties:\n        functionalityCode:\n          type: string\n          description: The functionality code\n          example: MARKETMANA\n        maxValueInteger:\n          type: integer\n          description: The max value in integer for this feature in this offer\n          format: int32\n          example: 4\n        unlimited:\n          type: boolean\n          description: Is this feature is unlimited for this offer?\n          example: false\n        text:\n          type: string\n          description: A description text of this feature\n          example: Marketplace management\n    billingPeriodListLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.getBillingPeriodsLink'\n    billingPeriodList:\n      required:\n        - billingPeriods\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/billingPeriodListLinks'\n        billingPeriods:\n          type: array\n          description: The billing period list\n          example:\n            - billingPeriodInMonth: '12'\n              discountPercentage: '20'\n          items:\n            $ref: '#/components/schemas/billingPeriod'\n    billingPeriod:\n      required:\n        - billingPeriodInMonth\n        - discountPercentage\n      type: object\n      properties:\n        billingPeriodInMonth:\n          type: integer\n          description: The billing period in month\n          format: int32\n          example: 12\n        discountPercentage:\n          type: number\n          description: The discount percentage related to this billing period\n          format: double\n          example: 20\n    promotionalCodeValidity:\n      type: string\n      description: Indicate the validaty of the discount\n      example: Valid\n      enum:\n        - None\n        - Valid\n        - Invalid\n        - ExpiredOrInactive\n    bonusType:\n      type: string\n      enum:\n        - OnlinePaymentMethodBonus\n        - PreviousInvoiceProrataBonus\n        - PreviousContractBonus\n    zendeskToken:\n      type: object\n      properties:\n        token:\n          type: string\n          description: A JWT token build from your name and email to use on Zendesk\n          example: \u003e-\n            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n      description: JWT token to access Zendesk restricted help center\n    BeezUP_Common_UserId:\n      type: string\n      description: The user identifier\n      format: guid\n      example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8\n    BeezUP_Common_StoreId:\n      type: string\n      description: The store identifier\n      format: guid\n      example: 64f43358-63a1-47f7-97ec-0301fc39956b\n    BeezUP_Common_CountryIsoCodeAlpha3:\n      type: string\n      description: \u003e-\n        The country iso code alpha 3 \u003ca\n        href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\"\u003e(ISO\n        3166-1_alpha-3)\u003c/a\u003e\n      example: FRA\n      x-lov: Country\n    BeezUP_Common_CurrencyCode:\n      type: string\n      description: \u003e\n        The currency code \u003ca href=\"https://en.wikipedia.org/wiki/ISO_4217\"\u003e(ISO\n        4217)\u003c/a\u003e\n      example: EUR\n    links.Catalog_ComputeExpressionLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/computeExpression\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: computeExpressionRequest\n    links.Catalog_ChangeCatalogColumnUserNameLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/rename\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: changeUserColumnNameRequest\n    links.Catalog_GetBeezUPColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/catalogs/beezupColumns\n            method: GET\n    links.CatalogIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/catalogs\n            method: GET\n    links.CatalogStoreIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3\n            method: GET\n    links.Auto_GetAutoImportConfigurationLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport\n            method: GET\n    links.Auto_StartAutoImportLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/start\n            method: POST\n    links.Auto_PauseAutoImportLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/pause\n            method: POST\n    links.Auto_ResumeAutoImportLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/resume\n            method: POST\n    links.Auto_ConfigureAutoImportIntervalLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/interval\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: configureAutoImportIntervalRequest\n    links.Auto_ScheduleAutoImportLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/schedules\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: scheduleAutoImportRequest\n    links.Catalog_GetCatalogColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns\n            method: GET\n    links.Catalog_GetCustomColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns\n            method: GET\n    links.Catalog_SaveCustomColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/{columnId}\n            method: POST\n            parameters:\n              columnId:\n                type: string\n                required: true\n                in: path\n              request:\n                type: object\n                required: true\n                in: body\n                schema: createCustomColumnRequest\n    links.Catalog_DeleteCustomColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb\n            method: DELETE\n    links.Catalog_ChangeCustomColumnUserNameLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/rename\n            method: POST\n            parameters:\n              request:\n                type: object\n                required: true\n                in: body\n                schema: changeUserColumnNameRequest\n    links.Catalog_GetCustomColumnExpressionLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression\n            method: GET\n    links.Catalog_ChangeCustomColumnExpressionLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression\n            method: PUT\n            parameters:\n              request:\n                type: object\n                required: true\n                in: body\n                schema: changeCustomColumnExpressionRequest\n    links.Catalog_GetCategoriesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/categories\n            method: GET\n    links.Catalog_GetProductsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/list\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: getProductsRequest\n    links.Catalog_GetRandomProductsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/random\n            method: GET\n    links.Importation_ConfigureCatalogColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: configureCatalogColumnCatalogRequest\n    links.Importation_IgnoreColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/ignore\n            method: POST\n    links.Importation_ReattendColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/reattend\n            method: POST\n    links.Importation_MapCatalogColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: mapBeezUPColumnRequest\n    links.Importation_UnmapCatalogColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map\n            method: POST\n    links.Importation_GetImportationMonitoringLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c\n            method: GET\n    links.Importation_CancelLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/cancel\n            method: POST\n    links.Importation_ConfigureRemainingCatalogColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/configureRemainingCatalogColumns\n            method: POST\n    links.Importation_CommitColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commitColumns\n            method: POST\n    links.Importation_CommitLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commit\n            method: POST\n    links.Importation_TechnicalProgressionLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/technicalProgression\n            method: GET\n    links.Importation_GetReportLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e911432/report\n            method: GET\n    links.Importation_GetReportingsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations\n            method: GET\n    links.Importation_StartManualUpdateLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/start\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: startManualImportRequest\n    links.Importation_GetManualUpdateLastInputConfigLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/inputConfiguration\n            method: GET\n    links.Importation_GetDetectedCatalogColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns\n            method: GET\n    links.Importation_GetCustomColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns\n            method: GET\n    links.Importation_SaveCustomColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/{columnId}\n            method: POST\n            parameters:\n              columnId:\n                type: string\n                required: true\n                in: path\n              request:\n                type: object\n                required: true\n                in: body\n                schema: createCustomColumnRequest\n    links.Importation_DeleteCustomColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb\n            method: DELETE\n    links.Importation_GetCustomColumnExpressionLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression\n            method: GET\n    links.Importation_MapCustomColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: mapBeezUPColumnRequest\n    links.Importation_UnmapCustomColumnLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map\n            method: POST\n    links.Importation_GetProductSampleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}\n            method: GET\n            parameters:\n              productSampleIndex:\n                in: path\n                required: true\n                type: integer\n    links.Importation_GetProductSampleCustomColumnValueLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb\n            method: GET\n            parameters:\n              productSampleIndex:\n                in: path\n                required: true\n                type: integer\n    links.Importation_ActivateAutoImportLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/activate\n            method: POST\n    catalogIndexLinks:\n      required:\n        - beezUPColumns\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.CatalogIndexLink'\n        beezUPColumns:\n          $ref: '#/components/schemas/links.Catalog_GetBeezUPColumnsLink'\n    catalogIndexLOVLinks:\n      required:\n        - beezUPColumnDataTypeLov\n        - beezUPColumnDisplayGroupLov\n        - beezUPColumnImportanceLov\n        - beezUPColumnLov\n        - compareOptionLov\n        - duplicateProductValueStrategyLov\n      type: object\n      properties:\n        beezUPColumnLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        beezUPColumnDataTypeLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        beezUPColumnImportanceLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        beezUPColumnDisplayGroupLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        duplicateProductValueStrategyLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        compareOptionLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n    catalogIndex:\n      required:\n        - links\n        - lovLinks\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/catalogIndexLinks'\n        lovLinks:\n          $ref: '#/components/schemas/catalogIndexLOVLinks'\n        storeLinks:\n          $ref: '#/components/schemas/catalogStoreIndexList'\n    catalogStoreIndexList:\n      type: object\n      properties:\n        links:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/catalogStoreIndex'\n          description: The key is the store identifier.\n    catalogStoreIndexLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.CatalogStoreIndexLink'\n        inputConfiguration:\n          $ref: \u003e-\n            #/components/schemas/links.Importation_GetManualUpdateLastInputConfigLink\n        autoImportInfo:\n          $ref: '#/components/schemas/links.Auto_GetAutoImportConfigurationLink'\n        importations:\n          $ref: '#/components/schemas/links.Importation_GetReportingsLink'\n        startImportation:\n          $ref: '#/components/schemas/links.Importation_StartManualUpdateLink'\n        catalogColumns:\n          $ref: '#/components/schemas/links.Catalog_GetCatalogColumnsLink'\n        customColumns:\n          $ref: '#/components/schemas/links.Catalog_GetCustomColumnsLink'\n        categories:\n          $ref: '#/components/schemas/links.Catalog_GetCategoriesLink'\n        products:\n          $ref: '#/components/schemas/links.Catalog_GetProductsLink'\n        randomProducts:\n          $ref: '#/components/schemas/links.Catalog_GetRandomProductsLink'\n        computeExpression:\n          $ref: '#/components/schemas/links.Catalog_ComputeExpressionLink'\n    catalogStoreStatus:\n      type: string\n      description: |\n        Indicates the status of the catalog store.\n        * OK: If the latest importation is a success!\n        * Failed: If the latest importation has failed !\n        * Outdated: If the latest succeed importation is later than 1 day.\n      example: OK\n      enum:\n        - OK\n        - Failed\n        - Outdated\n    catalogStoreIndex:\n      required:\n        - links\n        - status\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/catalogStoreIndexLinks'\n        status:\n          $ref: '#/components/schemas/catalogStoreStatus'\n    importationsResponseLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.Importation_GetReportingsLink'\n        start:\n          $ref: '#/components/schemas/links.Importation_StartManualUpdateLink'\n    importationReportingLinks:\n      type: object\n      properties:\n        report:\n          $ref: '#/components/schemas/links.Importation_GetReportLink'\n    importationsPerStoreResponse:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/importationsResponse'\n    importationsResponse:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/importationsResponseLinks'\n        importations:\n          type: array\n          items:\n            $ref: '#/components/schemas/importationReporting'\n    importAlreadyInProgressResponse:\n      required:\n        - errors\n        - links\n      type: object\n      properties:\n        errors:\n          type: array\n          description: The error message list\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'\n        links:\n          $ref: '#/components/schemas/importAlreadyInProgressResponseLinks'\n    importAlreadyInProgressResponseLinks:\n      required:\n        - cancelCurrentImportation\n        - currentImportation\n      type: object\n      properties:\n        currentImportation:\n          $ref: '#/components/schemas/links.Importation_GetImportationMonitoringLink'\n        cancelCurrentImportation:\n          $ref: '#/components/schemas/links.Importation_CancelLink'\n      description: The action links\n    schedulingType:\n      type: string\n      description: \u003e-\n        Indicate the scheduling type. Schedule or Interval. We recommand you to\n        use interval for a better reporting.\n      example: Schedule\n      default: Interval\n      enum:\n        - Schedule\n        - Interval\n    duplicateProductValueStrategy:\n      type: string\n      description: Indicate the duplicate product sku strategy.\n      example: KeepFirstDuplicateProductOnly\n      default: None\n      enum:\n        - None\n        - SkipAllDuplicateProducts\n        - KeepFirstDuplicateProductOnly\n        - FailImportationIfAnyDuplicateProduct\n    compareOptions:\n      type: string\n      description: Indicate how the product sku are compared for the duplication check.\n      example: IgnoreCase\n      default: None\n      enum:\n        - None\n        - IgnoreCase\n        - IgnoreNonSpace\n        - IgnoreSymbols\n        - OrdinalIgnoreCase\n        - StringSort\n        - Ordinal\n    autoImportConfigurationLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.Auto_GetAutoImportConfigurationLink'\n        activate:\n          $ref: '#/components/schemas/links.Importation_ActivateAutoImportLink'\n        start:\n          $ref: '#/components/schemas/links.Auto_StartAutoImportLink'\n        pause:\n          $ref: '#/components/schemas/links.Auto_PauseAutoImportLink'\n        resume:\n          $ref: '#/components/schemas/links.Auto_ResumeAutoImportLink'\n        scheduleInterval:\n          $ref: '#/components/schemas/links.Auto_ConfigureAutoImportIntervalLink'\n        schedule:\n          $ref: '#/components/schemas/links.Auto_ScheduleAutoImportLink'\n    autoImportConfiguration:\n      required:\n        - duplicateProductConfiguration\n        - input\n        - inputConfiguredByUserId\n        - paused\n        - schedulingType\n        - schedulingValue\n      type: object\n      properties:\n        input:\n          $ref: '#/components/schemas/inputConfiguration'\n        inputConfiguredByUserId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        schedulingType:\n          $ref: '#/components/schemas/schedulingType'\n        scheduledByUserId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        schedulingValue:\n          minItems: 1\n          type: array\n          description: \u003e-\n            Indicate the scheduling value. If the scheduling type is Interval\n            then the value will be a duration otherwise the values will be the\n            time.\n          example:\n            - '21:00:00'\n            - '23:00:00'\n            - '08:30:00'\n          items:\n            type: string\n        paused:\n          type: boolean\n          description: Indicate if the auto import is in pause or not.\n          example: false\n          default: false\n        pauseStatusChangedByUserId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        pauseStatusChangedUtcDate:\n          type: string\n          description: Indicate when the pause status has changed in UTC date.\n          format: date-time\n          example: 2017-04-01T13:21:42.000Z\n        duplicateProductConfiguration:\n          $ref: '#/components/schemas/duplicateProductValueConfiguration'\n        schedulingLocalTimeZoneName:\n          type: string\n          description: \u003e-\n            Indicate the time zone name of the scheduling. If the scheduling\n            type is \"Schedule\"\n          example: Romance Standard Time\n          default: Romance Standard Time\n    inputConfiguration:\n      required:\n        - files\n      type: object\n      properties:\n        transformFileUrl:\n          type: string\n          description: Can be null. Use to transform multiple files with an XSLT file.\n          format: uri\n          example: http://beezupblob.com/Mytransformation.xslt\n        files:\n          minItems: 1\n          type: array\n          description: The list of files to get and read\n          items:\n            $ref: '#/components/schemas/inputFileConfiguration'\n      description: Describe the input configuration\n    inputFileConfiguration:\n      required:\n        - fetch\n        - fileNumber\n        - read\n      type: object\n      properties:\n        fileNumber:\n          minimum: 1\n          type: integer\n          description: The file number starting by 1\n          format: int32\n          example: 1\n        fetch:\n          $ref: '#/components/schemas/inputFileFetchConfiguration'\n        read:\n          $ref: '#/components/schemas/inputFileReadConfiguration'\n      description: Describe how to get and read a file\n    downloadCatalogStrategy:\n      type: string\n      description: \u003e-\n        Indicate the download strategy (simple uri, ftps, ftplatest file,\n        etc...)\n      example: SimpleUri\n      enum:\n        - SimpleUri\n        - FtpLatest\n        - Sftp\n        - SftpLatest\n        - Ftps\n        - FtpsLatest\n        - Local\n    compressionFormatStrategy:\n      type: string\n      description: Indicate the compression type\n      example: None\n      enum:\n        - None\n        - Zip\n        - TarGz\n        - Gzip\n        - Bzip2\n        - Rar\n    inputFileFetchConfiguration:\n      required:\n        - downloadCatalogStrategy\n        - uri\n      type: object\n      properties:\n        uri:\n          type: string\n          description: \u003e-\n            Indicate the Uri of the file. (http, https, ftp, ftps, sftp are\n            allowed)\n          example: http://www.mywebsite.com/mycatalog.csv\n        credential:\n          $ref: '#/components/schemas/credential'\n        downloadCatalogStrategy:\n          $ref: '#/components/schemas/downloadCatalogStrategy'\n        compressionFormatStrategy:\n          $ref: '#/components/schemas/compressionFormatStrategy'\n        compressedRelativePath:\n          type: string\n          description: Indicate the relative path in the compressed file\n          example: folder/file.xxx\n        downloadTimeout:\n          type: integer\n          description: Indicate the download time out in second\n          format: int32\n          example: 360\n          default: 30\n      description: Describe the way to download the file\n    fileFormatStrategy:\n      type: string\n      description: CSV or XML\n      example: Csv\n      enum:\n        - Unknown\n        - Csv\n        - Xml\n        - Json\n    inputFileReadConfiguration:\n      required:\n        - format\n      type: object\n      properties:\n        format:\n          $ref: '#/components/schemas/fileFormatStrategy'\n        encodingTypeName:\n          type: string\n          description: The encoding type. UTF-8 by default.\n          example: UTF-8\n          default: UTF-8\n        cultureName:\n          type: string\n          description: \u003e-\n            The culture name of the file.  (i.e. fr-FR). If null then Invariant\n            culture will be used.\n          example: fr-FR\n          default: ''\n        csvFileReadProperties:\n          $ref: '#/components/schemas/inputFileReadCsvConfiguration'\n        xmlFileReadProperties:\n          $ref: '#/components/schemas/inputFileReadXmlConfiguration'\n      description: \u003e\n        Describe how to read the file. If FileFormatStrategy is CSV,\n        csvFileReadProperties is required. Otherwise the xmlFileReadProperties\n        is required.\n    credential:\n      required:\n        - userName\n      type: object\n      properties:\n        userName:\n          type: string\n          description: The user name\n          example: MyLogin\n        password:\n          type: string\n          description: The password\n          format: password\n          example: MyPassword\n      description: Provides the credentials\n    csvSeparator:\n      type: string\n      description: Indicate the separator of the values in the CSV file. Generally \";\"\n      example: ;\n      default: ;\n    inputFileReadCsvConfiguration:\n      required:\n        - csvSeparator\n        - hasHeaderRecord\n        - ignoreHeaderRecord\n      type: object\n      properties:\n        hasHeaderRecord:\n          type: boolean\n          description: Indicate if the csv file contains the column name at the first row\n          example: true\n          default: true\n        ignoreHeaderRecord:\n          type: boolean\n          description: \u003e-\n            Indicate if the importation should not use the csv column name from\n            the file\n          example: true\n          default: false\n        csvSeparator:\n          $ref: '#/components/schemas/csvSeparator'\n        csvTextQualifier:\n          type: string\n          description: \u003e-\n            Indicate the text qualifier of the CSV file. Generally the value is\n            \"\n          example: ''\n          default: ''\n      description: The CSV file description\n    inputFileReadXmlConfiguration:\n      required:\n        - flattenXmlChildElements\n        - useXmlAttributes\n      type: object\n      properties:\n        useXmlAttributes:\n          type: boolean\n          description: \u003e-\n            Indicate if the importation should take in account the attribute in\n            the xml nodes.\n          example: true\n        flattenXmlChildElements:\n          type: boolean\n          description: \u003e-\n            Indicate if the children xml nodes should be flatten with there\n            parent to take in account the sub node values.\n          example: true\n      description: The XML file description\n    configureAutoImportIntervalRequest:\n      required:\n        - interval\n      type: object\n      properties:\n        interval:\n          pattern: \u003e-\n            (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])\n          type: string\n          description: \u003e-\n            Indicate the interval in time span. (i.e. \"04:00:00\" for every 4\n            hours)\n          example: '04:00:00'\n      description: The message request to configure the auto import interval\n    scheduleAutoImportRequest:\n      required:\n        - schedules\n      type: object\n      properties:\n        schedules:\n          minItems: 1\n          uniqueItems: true\n          type: array\n          description: \u003e-\n            Indicate the time span you want to import your catalog. (i.e.\n            \"21:00:00\" to import your catalog at 9PM)\n          example:\n            - '21:00:00'\n            - '23:00:00'\n            - '08:30:00'\n          items:\n            pattern: \u003e-\n              (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])\n            type: string\n        localTimeZoneName:\n          type: string\n          description: If null the local time zone name will be \"Romance Standard Time\"\n          example: Romance Standard Time\n          default: Romance Standard Time\n      description: The message request to schedule the auto import\n    lastManualImportInputConfiguration:\n      required:\n        - input\n      type: object\n      properties:\n        input:\n          $ref: '#/components/schemas/inputConfiguration'\n      description: Last manual import input configuration\n    displayGroupName:\n      type: string\n      description: Indicate the display group name where the column must be putted\n      example: Category\n    canBeTruncated:\n      type: boolean\n      description: \u003e-\n        If the size of the value is greater than the limit we can truncate the\n        value instead of failing...\n      example: false\n      default: false\n    beezUPColumnConfiguration:\n      required:\n        - beezUPColumnName\n        - columnImportance\n        - displayGroupName\n      type: object\n      properties:\n        beezUPColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n        unique:\n          type: boolean\n          description: \"/!\\\\ ONLY AVAILABLE ON CATALOG COLUMN NOT ON CUSTOM COLUMNS!!\\r\\nIf true, an error happen at the second occurence of the same value for this column\\r\\nThis information will be used during the importation process and later for mapping proposal\"\n          example: false\n          default: false\n        columnImportance:\n          $ref: '#/components/schemas/BeezUP_Common_ColumnImportance'\n        columnDataType:\n          $ref: '#/components/schemas/BeezUP_Common_ColumnDataType'\n        canBeTruncated:\n          $ref: '#/components/schemas/canBeTruncated'\n        displayGroupName:\n          $ref: '#/components/schemas/displayGroupName'\n        description:\n          type: string\n          description: Describe the BeezUP column\n          example: Use for big text, like description\n      description: Describe a BeezUP column\n    changeUserColumnNameRequest:\n      required:\n        - userColumName\n      type: object\n      properties:\n        userColumName:\n          $ref: '#/components/schemas/userColumName'\n      description: The message request for the change user column name\n    encryptedExpression:\n      type: string\n      description: The encrypted excel expression of the column\n      example: uziushdczaniodnndonisodndsiondsoidsndoin\n    encryptedBlocklyExpression:\n      type: string\n      description: The encrypted XML Blockly representation of the expression\n      example: apokpoa,opz,sixsoisiosnoisn\n    createCustomColumnRequest:\n      required:\n        - displayGroupName\n        - encryptedBlocklyExpression\n        - encryptedExpression\n        - userColumnName\n      type: object\n      properties:\n        userColumnName:\n          $ref: '#/components/schemas/userColumName'\n        encryptedExpression:\n          $ref: '#/components/schemas/encryptedExpression'\n        encryptedBlocklyExpression:\n          $ref: '#/components/schemas/encryptedBlocklyExpression'\n        displayGroupName:\n          $ref: '#/components/schemas/displayGroupName'\n      description: The request message to create a custom column\n    changeCustomColumnExpressionRequest:\n      required:\n        - encryptedBlocklyExpression\n        - encryptedExpression\n      type: object\n      properties:\n        encryptedExpression:\n          $ref: '#/components/schemas/encryptedExpression'\n        encryptedBlocklyExpression:\n          $ref: '#/components/schemas/encryptedBlocklyExpression'\n      description: The request message to change the custom column expression\n    computeExpressionRequest:\n      required:\n        - encryptedExpression\n        - productValues\n      type: object\n      properties:\n        productValues:\n          $ref: '#/components/schemas/productValues'\n        encryptedExpression:\n          $ref: '#/components/schemas/encryptedExpression'\n      description: \u003e-\n        The request message to compute an expression based on the provided\n        product values\n    importationMonitoring:\n      required:\n        - beginUtcDate\n        - executionId\n        - lastUpdateUtcDate\n        - steps\n        - success\n      type: object\n      properties:\n        userId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        success:\n          type: boolean\n          description: Indicates if the importation was successfully completed or not\n          example: true\n        executionId:\n          $ref: '#/components/schemas/executionId'\n        lastUpdateUtcDate:\n          type: string\n          description: The last update of the reporting\n          format: date-time\n          example: 2017-04-01T13:10:09.000Z\n        beginUtcDate:\n          type: string\n          description: The start date of the importation\n          format: date-time\n          example: 2017-04-01T13:01:01.000Z\n        errors:\n          type: array\n          description: In case of error a description will be indicated\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'\n        steps:\n          type: object\n          additionalProperties:\n            type: boolean\n          description: \u003e-\n            Contains all steps of the importation process with a boolean. If\n            true the step has been passed, false the step is not complete\n          example:\n            isCatalogImportPrepareReadCompleted: 'false'\n            isCatalogImportComputeDiffCompleted: 'false'\n            isCatalogUpdateCompleted: 'false'\n            isSavedInDb: 'false'\n        links:\n          $ref: '#/components/schemas/importationMonitoringLinks'\n      description: Describe the reporting of the catalog importation\n    importationMonitoringLinks:\n      required:\n        - self\n        - technicalProgression\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.Importation_GetImportationMonitoringLink'\n        technicalProgression:\n          $ref: '#/components/schemas/links.Importation_TechnicalProgressionLink'\n        cancel:\n          $ref: '#/components/schemas/links.Importation_CancelLink'\n        configureRemainingCatalogColumns:\n          $ref: \u003e-\n            #/components/schemas/links.Importation_ConfigureRemainingCatalogColumnsLink\n        commitColumns:\n          $ref: '#/components/schemas/links.Importation_CommitColumnsLink'\n        commit:\n          $ref: '#/components/schemas/links.Importation_CommitLink'\n        activateAutoImport:\n          $ref: '#/components/schemas/links.Importation_ActivateAutoImportLink'\n        catalogColumns:\n          $ref: '#/components/schemas/links.Importation_GetDetectedCatalogColumnsLink'\n        customColumns:\n          $ref: '#/components/schemas/links.Importation_GetCustomColumnsLink'\n        productSamples:\n          $ref: '#/components/schemas/links.Importation_GetProductSampleLink'\n      description: Applicable operations considering the state of the importation\n    catalogColumnName:\n      type: string\n      description: The catalog column name\n      example: SKU\n    columnId:\n      type: string\n      description: The catalog column identifier\n      format: guid\n      example: 8f6671d6-a9bc-4de0-a0c4-4643b0c3f871\n    detectedCatalogColumnListLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.Importation_GetDetectedCatalogColumnsLink'\n    detectedCatalogColumnList:\n      required:\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/detectedCatalogColumnListLinks'\n        detectedCatalogColumns:\n          type: array\n          description: Contains all deteted catalog columns\n          items:\n            $ref: '#/components/schemas/detectedCatalogColumn'\n      description: The list of detected catalog column\n    detectedCatalogColumnLinks:\n      type: object\n      properties:\n        configure:\n          $ref: '#/components/schemas/links.Importation_ConfigureCatalogColumnLink'\n        ignore:\n          $ref: '#/components/schemas/links.Importation_IgnoreColumnLink'\n        reattend:\n          $ref: '#/components/schemas/links.Importation_ReattendColumnLink'\n        map:\n          $ref: '#/components/schemas/links.Importation_MapCatalogColumnLink'\n        unmap:\n          $ref: '#/components/schemas/links.Importation_UnmapCatalogColumnLink'\n    detectedCatalogColumn:\n      allOf:\n        - $ref: '#/components/schemas/catalogColumn'\n        - required:\n            - links\n          type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/detectedCatalogColumnLinks'\n          description: The catalog column detected during the first parsing step\n    productValues:\n      type: object\n      additionalProperties:\n        type: string\n      description: The key is the column identifier\n      example:\n        68082b11-4ffd-4bec-964a-465a471c7d37: SKU1234\n        b6d74510-41ce-42ec-947a-0bdf62e9beee: Refrigerateur\n        012929c0-e78b-462a-a96e-25c061575385: \u003e-\n          http://media.conforama.fr/Medias/500000/80000/5000/500/10/G_585511_A.jpg\n        ba270fa0-8482-46be-905a-cae4ca746b92: \u003e-\n          http://www.conforama.fr/gros-electromenager/encastrable/refrigerateur-encastrable/refrigerateur-combine-161-litres-far-r5115s/p/585511\n        46602e10-bc45-4944-a440-63d5f7ece1f8: '42'\n    productSample:\n      type: object\n      properties:\n        productValues:\n          $ref: '#/components/schemas/productValues'\n      description: Describe a product sample\n    configureCatalogColumnCatalogRequest:\n      required:\n        - catalogColumn\n      type: object\n      properties:\n        catalogColumn:\n          $ref: '#/components/schemas/catalogColumn'\n      description: The request to configure a catalog column\n    catalogColumnList:\n      required:\n        - catalogColumns\n      type: object\n      properties:\n        catalogColumns:\n          type: array\n          items:\n            $ref: '#/components/schemas/catalogColumn'\n    customColumnListLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.Catalog_GetCustomColumnsLink'\n        add:\n          $ref: '#/components/schemas/links.Catalog_SaveCustomColumnLink'\n    customColumnList:\n      required:\n        - customColumns\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/customColumnListLinks'\n        customColumns:\n          type: array\n          items:\n            $ref: '#/components/schemas/customColumn'\n    importationCustomColumnListLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.Importation_GetCustomColumnsLink'\n        add:\n          $ref: '#/components/schemas/links.Importation_SaveCustomColumnLink'\n    importationCustomColumnList:\n      required:\n        - customColumns\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/customColumnListLinks'\n        customColumns:\n          type: array\n          items:\n            $ref: '#/components/schemas/importationCustomColumn'\n    catalogColumnLinks:\n      type: object\n      properties:\n        rename:\n          $ref: '#/components/schemas/links.Catalog_ChangeCatalogColumnUserNameLink'\n    catalogColumn:\n      required:\n        - catalogColumnName\n        - configuration\n        - id\n        - links\n        - userColumName\n      type: object\n      properties:\n        ignored:\n          type: boolean\n          description: \u003e-\n            IF true, the product values of this column will be not taken in\n            account during the importation process\n          default: false\n        duplicateProductValueConfiguration:\n          $ref: '#/components/schemas/duplicateProductValueConfiguration'\n        id:\n          $ref: '#/components/schemas/columnId'\n        catalogColumnName:\n          $ref: '#/components/schemas/catalogColumnName'\n        userColumName:\n          $ref: '#/components/schemas/userColumName'\n        configuration:\n          $ref: '#/components/schemas/columnConfiguration'\n        links:\n          $ref: '#/components/schemas/catalogColumnLinks'\n      description: The catalog column configuration\n      example:\n        ignored: 'true'\n        duplicateProductValueConfiguration:\n          strategy: KeepFirstDuplicateProductOnly\n          compareOptions: IgnoreCase\n        id: 8a76f06a-fefc-4c0d-bcfe-b210f1482977\n        catalogColumnName: SKU\n        userColumName: My SKU\n        configuration:\n          beezUPColumnName: CategoryFirstLevel\n          columnImportance: Required\n          columnDataType: String\n          columnCultureName: fr-FR\n          columnFormat: MM/dd/yyyy\n          canBeTruncated: 'false'\n          displayGroupName: Category\n    duplicateProductValueConfiguration:\n      required:\n        - compareOptions\n        - strategy\n      type: object\n      properties:\n        strategy:\n          $ref: '#/components/schemas/duplicateProductValueStrategy'\n        compareOptions:\n          $ref: '#/components/schemas/compareOptions'\n      description: Describe how you want to manage the duplication of the product value\n    columnConfiguration:\n      required:\n        - columnDataType\n        - columnImportance\n      type: object\n      properties:\n        beezUPColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n        columnImportance:\n          $ref: '#/components/schemas/BeezUP_Common_ColumnImportance'\n        columnDataType:\n          $ref: '#/components/schemas/BeezUP_Common_ColumnDataType'\n        columnCultureName:\n          $ref: '#/components/schemas/columnCultureName'\n        columnFormat:\n          $ref: '#/components/schemas/columnFormat'\n        canBeTruncated:\n          $ref: '#/components/schemas/canBeTruncated'\n        displayGroupName:\n          $ref: '#/components/schemas/displayGroupName'\n      description: \u003e-\n        Indicates the configuration applied on the column (catalog or custom)\n        during the importation process.\n    columnCultureName:\n      type: string\n      description: \u003e-\n        If non null, culture used to parse the value to the storage type of this\n        column\\r\\n will be used for parsing and for consolidation proces\n      example: fr-FR\n    columnFormat:\n      type: string\n      description: \u003e-\n        If non null, format used to parse the value to the storage type of this\n        column\\r\\n will be used for parsing and for consolidation proces\n      example: MM/dd/yyyy\n    mapBeezUPColumnRequest:\n      required:\n        - beezUPColumnName\n      type: object\n      properties:\n        beezUPColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n    importationReporting:\n      required:\n        - beginUtcDate\n        - executionId\n        - lastUpdateUtcDate\n        - steps\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/importationReportingLinks'\n        executionId:\n          $ref: '#/components/schemas/executionId'\n        stepName:\n          type: string\n          description: The last step name of the importation process\n          example: IsSaveInDb\n        userId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        success:\n          type: boolean\n          description: Indicate if the importation succeed or not.\n          example: true\n        totalProductCount:\n          type: integer\n          description: \u003e-\n            Indicate the total product count detected in the catalog during the\n            importation.\n          format: int32\n          example: 101\n        totalProductErrorCount:\n          type: integer\n          description: \u003e-\n            Indicate the total product count in error detected in the catalog\n            during the importation.\n          format: int32\n          example: 0\n        totalProductSuccessCount:\n          type: integer\n          description: \u003e-\n            Indicate the total product count in success in the catalog during\n            the importation.\n          format: int32\n          example: 101\n        errors:\n          type: array\n          description: Indicate the error message list related to this importation.\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'\n        lastUpdateUtcDate:\n          type: string\n          description: Indicate the last update UTC date of the reporting.\n          format: date-time\n          example: 2017-04-01T13:10:09.000Z\n        autoImported:\n          type: boolean\n          description: Indicate if this importation is an auto import or not.\n          example: true\n        beginUtcDate:\n          type: string\n          description: Indicate the begin UTC date of this importation.\n          format: date-time\n          example: 2017-04-01T13:01:01.000Z\n        endUtcDate:\n          type: string\n          description: Indicate the end UTC date of this importation.\n          format: date-time\n          example: 2017-04-01T13:10:09.000Z\n        inputConfigurationUrl:\n          type: string\n          description: Indicate the input url of this importation.\n          format: uri\n          example: http://blal.com/catalog.csv\n        steps:\n          type: object\n          additionalProperties:\n            type: boolean\n          description: \u003e-\n            Indicate the steps that have been passed during the importation\n            process\n          example:\n            isCatalogImportPrepareReadCompleted: 'false'\n            isCatalogImportComputeDiffCompleted: 'false'\n            isCatalogUpdateCompleted: 'false'\n            isSavedInDb: 'false'\n      description: The catalog importation reporting\n    startManualImportRequest:\n      required:\n        - input\n      type: object\n      properties:\n        input:\n          $ref: '#/components/schemas/inputConfiguration'\n        duplicateProductSkuConfiguration:\n          $ref: '#/components/schemas/duplicateProductValueConfiguration'\n      description: \u003e-\n        The message request start a manual importation process. Indicate the way\n        to handle duplicate product. Can be null if you want to reuse the\n        configuration of the previous importation succeed.\n    importationTechnicalProgression:\n      type: object\n      properties:\n        stepsProgression:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n          description: Indicate for each step of the importation the uris to look at\n    changeCustomColumnRequest:\n      required:\n        - encryptedBlocklyExpression\n        - encryptedExpression\n        - userColumName\n      type: object\n      properties:\n        encryptedExpression:\n          $ref: '#/components/schemas/encryptedExpression'\n        encryptedBlocklyExpression:\n          $ref: '#/components/schemas/encryptedBlocklyExpression'\n        userColumName:\n          $ref: '#/components/schemas/userColumName'\n      description: The message request to change a custom column expression an user name\n    customColumnLinks:\n      required:\n        - delete\n        - expression\n        - rename\n        - save\n        - saveExpression\n      type: object\n      properties:\n        save:\n          $ref: '#/components/schemas/links.Catalog_SaveCustomColumnLink'\n        delete:\n          $ref: '#/components/schemas/links.Catalog_DeleteCustomColumnLink'\n        rename:\n          $ref: '#/components/schemas/links.Catalog_ChangeCustomColumnUserNameLink'\n        expression:\n          $ref: '#/components/schemas/links.Catalog_GetCustomColumnExpressionLink'\n        saveExpression:\n          $ref: '#/components/schemas/links.Catalog_ChangeCustomColumnExpressionLink'\n    customColumn:\n      required:\n        - configuration\n        - id\n        - links\n        - userColumName\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/columnId'\n        userColumName:\n          $ref: '#/components/schemas/userColumName'\n        configuration:\n          $ref: '#/components/schemas/columnConfiguration'\n        catalogColumnDependencies:\n          type: array\n          items:\n            $ref: '#/components/schemas/catalogColumnName'\n        links:\n          $ref: '#/components/schemas/customColumnLinks'\n      description: The custom column configuration\n    importationCustomColumnLinks:\n      required:\n        - delete\n        - expression\n        - save\n      type: object\n      properties:\n        save:\n          $ref: '#/components/schemas/links.Importation_SaveCustomColumnLink'\n        delete:\n          $ref: '#/components/schemas/links.Catalog_DeleteCustomColumnLink'\n        expression:\n          $ref: '#/components/schemas/links.Catalog_GetCustomColumnExpressionLink'\n        map:\n          $ref: '#/components/schemas/links.Importation_MapCustomColumnLink'\n        unmap:\n          $ref: '#/components/schemas/links.Importation_UnmapCustomColumnLink'\n        productSampleValue:\n          $ref: \u003e-\n            #/components/schemas/links.Importation_GetProductSampleCustomColumnValueLink\n    importationCustomColumn:\n      required:\n        - configuration\n        - id\n        - links\n        - userColumName\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/columnId'\n        userColumName:\n          $ref: '#/components/schemas/userColumName'\n        configuration:\n          $ref: '#/components/schemas/columnConfiguration'\n        links:\n          $ref: '#/components/schemas/importationCustomColumnLinks'\n      description: The custom column configuration\n    randomProductList:\n      required:\n        - products\n      type: object\n      properties:\n        products:\n          type: array\n          items:\n            $ref: '#/components/schemas/product'\n    productList:\n      required:\n        - paginationResult\n        - products\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        products:\n          type: array\n          items:\n            $ref: '#/components/schemas/product'\n    product:\n      required:\n        - categoryId\n        - exists\n        - productId\n        - values\n      type: object\n      properties:\n        productId:\n          $ref: '#/components/schemas/BeezUP_Common_ProductId'\n        categoryId:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'\n        values:\n          $ref: '#/components/schemas/productValues'\n        exists:\n          type: boolean\n          description: Indicates if the product exists in the current catalog\n          example: true\n      description: Represent a catalog product\n    getProductsRequest:\n      required:\n        - pageNumber\n        - pageSize\n      type: object\n      properties:\n        pageNumber:\n          $ref: '#/components/schemas/BeezUP_Common_PageNumber'\n        pageSize:\n          $ref: '#/components/schemas/BeezUP_Common_PageSize'\n        columnIdList:\n          maxItems: 5\n          minItems: 1\n          type: array\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'\n        exists:\n          type: boolean\n          description: Search for existing products or not. If null you will received both.\n          example: true\n        productIdList:\n          type: array\n          description: Filter with a list of product identifier\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_ProductId'\n        sku:\n          type: string\n          description: Search for product by sku\n          example: MySku123\n        ean:\n          type: string\n          description: Search for product by ean\n          example: MySku123\n        mpn:\n          type: string\n          description: Search for product by mpn\n          example: MySku123\n        title:\n          type: string\n          description: Search for products containing this title\n          example: Frigo\n        categoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'\n        orderByCatalogColumnId:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'\n        withoutSubCategories:\n          type: boolean\n          description: \u003e-\n            Do not retrieve sub categories. By default, this value is set to\n            false\n          example: false\n      description: The request message to get products based on these filters\n    categoryList:\n      required:\n        - categories\n      type: object\n      properties:\n        categories:\n          type: array\n          description: The category list\n          items:\n            $ref: '#/components/schemas/category'\n      description: The object which contains the category list\n    category:\n      required:\n        - categoryPath\n        - selfProductCount\n        - totalProductCount\n      type: object\n      properties:\n        categoryId:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'\n        categoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'\n        totalProductCount:\n          type: integer\n          description: \u003e-\n            The total product count related to this category and his sub\n            categories\n          format: int32\n          example: 101\n        selfProductCount:\n          type: integer\n          description: The product count related to this category\n          format: int32\n          example: 101\n      description: The catalog category\n    getImportationProductsReportRequest:\n      required:\n        - pageNumber\n        - pageSize\n      type: object\n      properties:\n        pageNumber:\n          $ref: '#/components/schemas/BeezUP_Common_PageNumber'\n        pageSize:\n          $ref: '#/components/schemas/BeezUP_Common_PageSize'\n        sku:\n          type: string\n          description: Filter by Sku (equals)\n        ean:\n          type: string\n          description: Filter by EAN (equals)\n        mpn:\n          type: string\n          description: Filter by MPN (equals)\n        title:\n          type: string\n          description: Filter by Title (StartsWith)\n        errorCodes:\n          $ref: '#/components/schemas/getImportationProductsReportRequestErrorCodes'\n      description: Get Importation Products Report Request\n    getImportationProductsReportRequestErrorCodes:\n      type: array\n      description: Get Importation Products Report Request Error Codes\n      items:\n        $ref: '#/components/schemas/getImportationProductsReportRequestErrorCode'\n    getImportationProductsReportRequestErrorCode:\n      type: object\n      properties:\n        errorCode:\n          $ref: '#/components/schemas/errorCode'\n        userColumnName:\n          $ref: '#/components/schemas/userColumName'\n      description: Get Importation Products Report Request Error Codes\n    getImportationProductsReportResponse:\n      required:\n        - paginationResult\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        productErrors:\n          $ref: '#/components/schemas/productErrors'\n      description: Get Importation Products Report Response\n    productErrors:\n      type: array\n      description: Product Errors\n      items:\n        $ref: '#/components/schemas/productError'\n    productError:\n      required:\n        - errors\n        - lineNumber\n      type: object\n      properties:\n        lineNumber:\n          type: integer\n        sku:\n          $ref: '#/components/schemas/sku'\n        ean:\n          type: string\n        mpn:\n          type: string\n        title:\n          type: string\n        errors:\n          $ref: '#/components/schemas/productErrorCodes'\n    productErrorCodes:\n      type: array\n      items:\n        $ref: '#/components/schemas/productErrorCode'\n    productErrorCode:\n      type: object\n      properties:\n        errorCode:\n          $ref: '#/components/schemas/errorCode'\n        userColumName:\n          $ref: '#/components/schemas/userColumName'\n        beezUPColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n        errorMessage:\n          type: string\n    errorCode:\n      type: string\n      description: Error Code\n    getImportationReportResponseDiff:\n      required:\n        - createdCount\n        - deletedCount\n        - updatedCount\n      type: object\n      properties:\n        createdCount:\n          type: integer\n        updatedCount:\n          type: integer\n        deletedCount:\n          type: integer\n        unchangedCount:\n          type: integer\n    getImportationReportResponseProductMetrics:\n      required:\n        - activeCount\n        - detectedCount\n        - duplicatedCount\n        - failedCount\n      type: object\n      properties:\n        detectedCount:\n          type: integer\n        duplicatedCount:\n          type: integer\n        failedCount:\n          type: integer\n        activeCount:\n          type: integer\n    getImportationReportResponse:\n      required:\n        - errors\n        - executionId\n        - importationInfo\n      type: object\n      properties:\n        executionId:\n          $ref: '#/components/schemas/executionId'\n        importationInfo:\n          $ref: '#/components/schemas/getImportationReportResponseImportationInfo'\n        columns:\n          $ref: '#/components/schemas/getImportationReportResponseDiff'\n        categories:\n          $ref: '#/components/schemas/getImportationReportResponseDiff'\n        products:\n          $ref: '#/components/schemas/getImportationReportResponseDiff'\n        productMetrics:\n          $ref: '#/components/schemas/getImportationReportResponseProductMetrics'\n        errors:\n          $ref: '#/components/schemas/getImportationReportResponseErrors'\n      description: Get Importation Report Response\n    getImportationReportResponseImportationInfo:\n      required:\n        - beginUtcDate\n        - endUtcDate\n        - inputConfiguration\n        - userId\n      type: object\n      properties:\n        beginUtcDate:\n          type: string\n          description: The start date of the importation\n          format: date-time\n          example: 2017-04-01T13:01:01.000Z\n        endUtcDate:\n          type: string\n          description: The start date of the importation\n          format: date-time\n          example: 2017-04-01T13:01:01.000Z\n        userId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        inputConfiguration:\n          $ref: '#/components/schemas/inputFileConfiguration'\n    getImportationReportResponseErrors:\n      type: array\n      items:\n        $ref: '#/components/schemas/getImportationReportResponseError'\n    getImportationReportResponseError:\n      required:\n        - errorCode\n        - productCount\n        - userColumName\n      type: object\n      properties:\n        errorCode:\n          $ref: '#/components/schemas/errorCode'\n        userColumName:\n          $ref: '#/components/schemas/userColumName'\n        beezUPColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n        productCount:\n          type: integer\n    BeezUP_Common_BeezUPColumnName:\n      type: string\n      description: The BeezUP column name\n      example: CategoryFirstLevel\n    BeezUP_Common_ColumnImportance:\n      type: string\n      description: Importance of the column\n      example: Required\n      default: Optional\n      enum:\n        - Required\n        - Recommended\n        - Optional\n    BeezUP_Common_ColumnDataType:\n      type: string\n      description: \u003e-\n        Data type of the column, will be used for parsing and for consolidation\n        proces\n      example: String\n      default: String\n      enum:\n        - String\n        - Url\n        - Text\n        - Decimal\n        - DateTime\n        - Int\n        - SpecialInt\n        - InStock\n        - Unknown\n        - ImageUrl\n    userColumName:\n      type: string\n      description: Column named by the user\n      example: My SKU\n    BeezUP_Common_PageNumber:\n      minimum: 1\n      type: integer\n      description: Indicates the page number\n      format: int32\n      example: 1\n      default: 1\n    BeezUP_Common_PageSize:\n      maximum: 100\n      minimum: 25\n      type: integer\n      description: Indicate the item count per page\n      format: int32\n      example: 100\n      default: 100\n    BeezUP_Common_CatalogColumnId:\n      type: string\n      description: The catalog column identifier (catalog or custom column)\n      format: guid\n      example: bea7c21e-948b-4ac3-9ffd-4396e62c4163\n    BeezUP_Common_ProductId:\n      type: string\n      description: The product identifier\n      format: guid\n      example: 578419df-1bbf-41a6-96fa-862e42182b67\n    BeezUP_Common_CatalogCategoryPath:\n      type: array\n      description: The catalog category path\n      example:\n        - Vêtements\n        - Femmes\n        - Chaussures\n      items:\n        type: string\n    BeezUP_Common_PaginationResult:\n      required:\n        - entryCount\n        - links\n        - pageCount\n        - totalEntryCount\n      type: object\n      properties:\n        entryCount:\n          minimum: 0\n          type: integer\n          description: The entry count currently returned\n          example: 25\n        pageCount:\n          minimum: 0\n          type: integer\n          description: The page count\n          example: 38\n        totalEntryCount:\n          minimum: 0\n          type: integer\n          description: The total entry count\n          example: 943\n        links:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResultLinks'\n      example:\n        entryCount: '25'\n        pageCount: '38'\n        totalEntryCount: '943'\n        links:\n          first:\n            href: /v2/user/marketplaces/orders/list/full\n            method: POST\n            parameters:\n              - name: request\n                in: body\n                type: object\n                schema: orderListRequest\n                value:\n                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z\n                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z\n                  pageSize: '25'\n                  pageNumber: '1'\n          last:\n            href: /v2/user/marketplaces/orders/list/full\n            method: POST\n            parameters:\n              - name: request\n                in: body\n                type: object\n                schema: orderListRequest\n                value:\n                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z\n                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z\n                  pageSize: '25'\n                  pageNumber: '38'\n          next:\n            href: /v2/user/marketplaces/orders/list/full\n            method: POST\n            parameters:\n              - name: request\n                in: body\n                type: object\n                schema: orderListRequest\n                value:\n                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z\n                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z\n                  pageSize: '25'\n                  pageNumber: '2'\n    executionId:\n      type: string\n      description: The execution identifier of the catalog importation\n      format: guid\n      example: bf3bc288-604c-4267-925e-66b1a15dca75\n    BeezUP_Common_CatalogCategoryId:\n      type: string\n      description: The catalog category identifier\n      format: guid\n      example: 81a058a6-0451-4b79-84ef-94c58d0ed4ac\n    BeezUP_Common_PaginationResultLinks:\n      required:\n        - first\n        - last\n      type: object\n      properties:\n        first:\n          $ref: '#/components/schemas/BeezUP_Common_Link3'\n        last:\n          $ref: '#/components/schemas/BeezUP_Common_Link3'\n        previous:\n          $ref: '#/components/schemas/BeezUP_Common_Link3'\n        next:\n          $ref: '#/components/schemas/BeezUP_Common_Link3'\n      description: The navigation links 'first', 'last', 'next', 'previous'\n    sku:\n      maxLength: 50\n      type: string\n      description: \u003e-\n        The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a\n        product or service, or the product to which the offer refers.\n        http://schema.org/sku\n    links.GetChannelInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/channels/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n            method: GET\n    channelHeader:\n      required:\n        - channelId\n        - channelLogoUrl\n        - channelName\n        - links\n        - types\n      type: object\n      properties:\n        channelId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        channelName:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelName'\n        channelLogoUrl:\n          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'\n        types:\n          type: array\n          description: The type list related to a channel\n          example:\n            - Marketplace\n          items:\n            type: string\n        links:\n          $ref: '#/components/schemas/channelHeaderLinks'\n      description: The available channel\n    channelHeaderLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelInfoLink'\n      description: The links related to an available channel\n    channelInfo:\n      required:\n        - channelId\n        - channelName\n      type: object\n      properties:\n        channelId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        channelName:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelName'\n        channelLogoUrl:\n          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'\n        channelDescription:\n          type: string\n          description: Indicae a description to the channel\n          example: \u003e-\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia\n            dolorum, animi voluptatibus maiores, assumenda maxime illum, labore\n            quae quas ducimus laudantium provident veritatis doloremque\n            dignissimos eum. Error magni illum autem.\n        beezUPOffer:\n          type: string\n          description: Indicate the BeezUP offer\n          example: First month free\n        salesContact:\n          type: object\n          properties:\n            name:\n              type: string\n              description: Indicate the BeezUP offer\n              example: Stéphanie Gregis\n            email:\n              type: string\n              description: Indicate the sales contact email\n              format: email\n              example: stephanie.gregis@m6.fr\n            phoneNumber:\n              type: string\n              description: The sales contact phone number\n              example: 0033 6 08 87 85 45\n        details:\n          type: object\n          properties:\n            costs:\n              type: string\n              description: The cost's description of the channel\n              example: CPC variation from 0.10€ to 0.20€\n            businessModel:\n              type: string\n              description: The business model of the channel\n              example: CPC\n            channelType:\n              type: string\n              description: The channel type\n              example: Comparator\n            trackingType:\n              type: string\n              description: The tracking type\n              example: Redirect\n            category:\n              type: string\n              description: The channel category\n              example: null\n            homeUrl:\n              type: string\n              description: The home url of the channel\n              format: uri\n              example: http://www.achetezfacile.com\n            subscriptionLink:\n              type: string\n              description: The subscription link to the channel\n              example: |\n                By Email at : stephanie.gregis@m6.fr\n        keyNumbers:\n          type: object\n          properties:\n            products:\n              type: string\n              description: The estimated product count of the channel\n              example: 1M\n            categories:\n              type: string\n              description: The estimated category count of the channel\n              example: NC\n            stores:\n              type: string\n              description: The estimated store count of the channel\n              example: '3000'\n            viewsPerMonth:\n              type: string\n              description: The estimated view count per month of the channel\n              example: 3M\n        technicalContact:\n          type: object\n          properties:\n            name:\n              type: string\n              description: The technical contact name\n              example: Pierre Guédon\n            phoneNumber:\n              type: string\n              description: The technical contact phone number\n              example: NC\n            email:\n              type: string\n              description: The technical contact email\n              example: pierre.guedon@m6.fr\n    channelCategoryDefaultCost:\n      type: number\n      description: The default cost on this channel category\n      format: decimal\n      example: 10.42\n    channelCategoryChannelCode:\n      type: string\n      description: The channel category channel code identifier\n      example: '1342'\n    channelCategoryLevel:\n      maximum: 9\n      minimum: 1\n      type: integer\n      description: The channel category level starting from 1\n      format: int32\n      example: 3\n    channelRootCategory:\n      required:\n        - firstLevelCategories\n      type: object\n      properties:\n        firstLevelCategories:\n          type: array\n          items:\n            $ref: '#/components/schemas/channelFirstLevelCategory'\n      description: Get channel first level category list\n    channelFirstLevelCategory:\n      required:\n        - channelCategoryId\n        - channelCategoryLevel\n        - channelCategoryName\n      type: object\n      properties:\n        channelCategoryId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryId'\n        channelCategoryName:\n          type: string\n          description: The channel category name\n          example: Clothing\n        channelCategoryLevel:\n          $ref: '#/components/schemas/channelCategoryLevel'\n        channelCategoryDefaultCost:\n          $ref: '#/components/schemas/channelCategoryDefaultCost'\n        channelCategoryChannelCode:\n          $ref: '#/components/schemas/channelCategoryChannelCode'\n        channelCategoryColumnOverrides:\n          $ref: '#/components/schemas/channelCategoryColumnOverrides'\n        subCategories:\n          type: array\n          items:\n            $ref: '#/components/schemas/channelCategory'\n      description: The first level category with his sub categories\n    channelCategory:\n      required:\n        - channelCategoryId\n        - channelCategoryLevel\n        - channelCategoryPath\n      type: object\n      properties:\n        channelCategoryId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryId'\n        channelCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'\n        channelCategoryLevel:\n          $ref: '#/components/schemas/channelCategoryLevel'\n        channelCategoryDefaultCost:\n          $ref: '#/components/schemas/channelCategoryDefaultCost'\n        channelCategoryChannelCode:\n          $ref: '#/components/schemas/channelCategoryChannelCode'\n        channelCategoryColumnOverrides:\n          $ref: '#/components/schemas/channelCategoryColumnOverrides'\n      description: The channel category\n    channelCategoryColumnOverrides:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/channelCategoryColumnOverride'\n      description: The channel category column overrides\n    channelCategoryColumnOverride:\n      required:\n        - channelColumnId\n        - channelColumnName\n        - configuration\n        - showInMapping\n      type: object\n      properties:\n        channelColumnId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'\n        channelColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnName'\n        channelColumnDescription:\n          $ref: '#/components/schemas/channelColumnDescription'\n        showInMapping:\n          $ref: '#/components/schemas/channelColumnShowInMapping'\n        configuration:\n          $ref: '#/components/schemas/channelColumnConfiguration'\n        restrictedValues:\n          $ref: '#/components/schemas/channelColumnRestrictedValues'\n    channelColumnDescription:\n      type: string\n      description: The channel column description\n      example: \u003e-\n        Please enter the base prices (price per unit) according to \u003ca\n        href=\"http://www.gesetze-im-internet.de/pangv/__2.html\"\u003eArticle\n        PAngV\u003c/a\u003e\n    channelColumnShowInMapping:\n      type: boolean\n      description: Indicates if this column must shown in the mapping page or not\n      example: true\n    channelColumn:\n      required:\n        - channelColumnId\n        - channelColumnName\n        - configuration\n        - position\n        - showInMapping\n      type: object\n      properties:\n        channelColumnId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'\n        channelColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnName'\n        channelColumnDescription:\n          $ref: '#/components/schemas/channelColumnDescription'\n        showInMapping:\n          $ref: '#/components/schemas/channelColumnShowInMapping'\n        position:\n          type: integer\n          description: The position of the column starting from 1\n          example: 1\n        configuration:\n          $ref: '#/components/schemas/channelColumnConfiguration'\n        restrictedValues:\n          $ref: '#/components/schemas/channelColumnRestrictedValues'\n      description: The channel column\n    channelColumnRestrictedValues:\n      type: object\n      additionalProperties:\n        type: string\n      description: \u003e\n        The restricted values. The key will be the restricted value identifier\n        (format:guid) and the value will be the restriced value\n    channelColumnConfiguration:\n      required:\n        - columnDataType\n        - columnImportance\n      type: object\n      properties:\n        columnImportance:\n          $ref: '#/components/schemas/BeezUP_Common_ColumnImportance'\n        columnDataType:\n          $ref: '#/components/schemas/BeezUP_Common_ColumnDataType'\n        beezUPColumnName:\n          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n      description: \u003e-\n        The channel column configuration. The BeezUP Column Name is optional. If\n        the BeezUP column is mapped we will indicate the data type and column\n        importance of the BeezUP column.\n    BeezUP_Common_ChannelColumnId:\n      type: string\n      description: The channel column identifier\n      format: guid\n      example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977\n    BeezUP_Common_ChannelId:\n      type: string\n      description: The channel identifier\n      format: guid\n      example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28\n    BeezUP_Common_ChannelName:\n      type: string\n      description: The channel name\n      example: Amazon FRA\n    BeezUP_Common_HttpUrl:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n      type: string\n      description: \u003e-\n        The URL \u003ca\n        href=\"https://en.wikipedia.org/wiki/URL\"\u003ehttps://en.wikipedia.org/wiki/URL\u003c/a\u003e\n      example: http://www.mydomain.com\n    BeezUP_Common_ChannelColumnName:\n      type: string\n      description: The channel column name\n      example: NAME\n    BeezUP_Common_ChannelCategoryId:\n      type: string\n      format: guid\n      example: 24f508da-a069-4467-b9d3-15baebe9bac7\n    BeezUP_Common_ChannelCategoryPath:\n      type: array\n      description: The channel category path\n      example:\n        - Clothing\n        - Women\n        - Shoes\n      items:\n        type: string\n    links.GetChannelCatalogsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/channelCatalogs\n            method: GET\n    links.GetChannelCatalogFilterOperatorsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/channelCatalogs/filterOperators\n            method: GET\n    links.GetChannelCatalogExportationCacheInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache\n            method: GET\n    links.GetChannelCatalogExportationHistoryLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/history\n            method: GET\n    links.ClearChannelCatalogExportationCacheLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache/clear\n            method: POST\n    links.GetChannelCatalogLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n            method: GET\n    links.DeleteChannelCatalogLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n            method: DELETE\n    links.GetChannelCatalogCategoriesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          description: \u003e-\n            If you did not configure the cost settings this link will not be\n            displayed.\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories\n            method: GET\n    links.DisableChannelCatalogCategoryMappingLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories/disableMapping\n            method: POST\n    links.ReenableChannelCatalogCategoryMappingLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories/reenableMapping\n            method: POST\n    links.ConfigureChannelCatalogCategoryLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/category/configure\n            method: POST\n    links.EnableChannelCatalogLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/enable\n            method: POST\n    links.DisableChannelCatalogLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/disable\n            method: POST\n    links.GetChannelCatalogProductInfoListLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products\n            method: POST\n    links.ExportChannelCatalogProductInfoListLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/export\n            method: POST\n            parameters:\n              format:\n                in: query\n                required: true\n                type: string\n                value: csv\n    links.ConfigureChannelCatalogColumnMappingsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/columnMappings\n            method: PUT\n    links.ConfigureChannelCatalogGeneralSettingsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/general\n            method: POST\n    links.ConfigureChannelCatalogCostSettingsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/cost\n            method: POST\n    links.AddChannelCatalogLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/channelCatalogs\n            method: POST\n    links.ConfigureChannelCatalogExclusionFiltersLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters\n            method: PUT\n    links.GetChannelCatalogExclusionFiltersCopyLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/copy\n            method: GET\n    links.ConfigureChannelCatalogExclusionFiltersCopyLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/copy\n            method: POST\n    links.GetChannelCatalogExclusionFiltersLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters\n            method: GET\n    links.GetChannelCatalogProductInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67\n            method: GET\n    links.DisableChannelCatalogProductLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/disable\n            method: POST\n    links.ReenableChannelCatalogProductLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/reenable\n            method: POST\n    links.OverrideChannelCatalogProductValuesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides\n            method: POST\n    links.GetChannelCatalogProductValueOverrideCopyLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides/copy\n            method: GET\n    links.ConfigureChannelCatalogProductValueOverrideCopyLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides/copy\n            method: POST\n    channelCatalogExportCacheInfoResponse:\n      required:\n        - cacheInfo\n        - links\n      type: object\n      properties:\n        cacheInfo:\n          $ref: '#/components/schemas/channelCatalogExportCacheInfo'\n        links:\n          $ref: '#/components/schemas/channelCatalogExportCacheInfoResponseLinks'\n    channelCatalogExportCacheInfoResponseLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogExportationCacheInfoLink'\n        clear:\n          $ref: '#/components/schemas/links.ClearChannelCatalogExportationCacheLink'\n    channelCatalogExportCacheInfo:\n      required:\n        - cacheStatus\n      type: object\n      properties:\n        cacheStatus:\n          type: string\n          description: The cache status\n          example: ReadyForGeneration\n          x-lov: ChannelCatalogExportCacheStatus\n        lastUpdateUtcDate:\n          type: string\n          description: The last update UTC date of the cache\n          format: date-time\n          example: 2014-08-25T07:32:31.584Z\n        lastContentChangeUtcDate:\n          type: string\n          description: The last content change UTC date\n          format: date-time\n          example: 2014-08-25T07:30:31.584Z\n        expirationUtcDate:\n          type: string\n          description: The expiration UTC date of the cache\n          format: date-time\n          example: 2014-08-25T08:02:31.584Z\n        feedUrl:\n          type: string\n          description: The feed url\n          example: https://www.scootmotoshop.com/feed.xml\n    channelCatalogExportationHistoryLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogExportationHistoryLink'\n    channelCatalogExportationHistory:\n      required:\n        - exportations\n        - links\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        exportations:\n          type: array\n          items:\n            $ref: '#/components/schemas/channelCatalogExportationReporting'\n        links:\n          $ref: '#/components/schemas/channelCatalogExportationHistoryLinks'\n    channelCatalogExportationReporting:\n      required:\n        - clientIpAddress\n        - clientUserAgent\n        - exportationUtcDate\n      type: object\n      properties:\n        exportationUtcDate:\n          type: string\n          description: The exportation UTC date\n          format: date-time\n          example: 2014-08-25T07:32:31.584Z\n        exportationDuration:\n          pattern: \u003e-\n            (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])\n          type: string\n          description: |\n            The exportation duration. \\\n            '00:01:00' measn 1 minute.\n          example: '00:01:00'\n        cacheStatus:\n          type: string\n          description: The cache status during the exportation\n          example: Available\n          x-lov: ChannelCatalogExportationCacheGenerationStatus\n        exportedProductCount:\n          type: integer\n          description: The exportated product count during this exportation\n          format: int32\n          example: 10142\n        clientIpAddress:\n          type: string\n          description: The IP address of the client who requests this exportation\n          example: 42.101.42.101\n        clientUserAgent:\n          type: string\n          description: \u003e-\n            The http header User-Agent sent by the client who requests this\n            operation\n          example: Wget/1.13.4 (linux-gnu)\n    externalLinks.Catalog_GetBeezUPColumnsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/catalogs/beezUPColumns\n            method: GET\n    channelCatalogListLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogsLink'\n        beezUPColumns:\n          $ref: '#/components/schemas/externalLinks.Catalog_GetBeezUPColumnsLink'\n        add:\n          $ref: '#/components/schemas/links.AddChannelCatalogLink'\n        filterOperators:\n          $ref: '#/components/schemas/links.GetChannelCatalogFilterOperatorsLink'\n      description: \u003e\n        Indicates how global actions you can do like how to create a channel\n        catalog, exclusion filter operators, etc...\n    channelCatalogListLovLinks:\n      type: object\n      properties:\n        channelCatalogExclusionFilterOperatorLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        channelCatalogExportCacheStatusLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n    channelCatalogList:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/channelCatalogListLinks'\n        lovLinks:\n          $ref: '#/components/schemas/channelCatalogListLovLinks'\n        channelCatalogs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/channelCatalog'\n          description: The channel catalog list. The key is the channel catalog identifier\n      description: This is the index of the channel catalog API\n    addChannelCatalogRequest:\n      required:\n        - channelId\n        - storeId\n      type: object\n      properties:\n        channelId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        storeId:\n          $ref: '#/components/schemas/BeezUP_Common_StoreId'\n    generalSettings:\n      required:\n        - acceptToPublishInfo\n        - activeBeezUPTracking\n        - doNotExportOutOfStockProducts\n      type: object\n      properties:\n        acceptToPublishInfo:\n          type: boolean\n          description: \u003e-\n            If true then you authorize disclosure of my statistics generated\n            from clicks and sales\n          example: true\n        doNotExportOutOfStockProducts:\n          type: boolean\n          description: \u003e\n            Do not export \"out of stock\" products. Note: this option is not\n            taken into account by the counter.\n          example: true\n        activeBeezUPTracking:\n          type: boolean\n          description: Activate BeezUP tracking for my statistics (checked by default)\n          example: true\n          default: true\n      description: Represents the general settings of your channel catalog\n    costType:\n      type: string\n      description: |\n        CPC means cost per click.\n        CPA means cost per action.\n        You can have CPC/CPA with a global cost value.\n        You can have CPC/CPA by category the cost value MUST be null\n        You can have global fixed price.\n      example: Fixed_Global\n      enum:\n        - CPC_Global\n        - CPA_Global\n        - CPC_ByCategory\n        - CPA_ByCategory\n        - Fixed_Global\n    channelCostSettings:\n      required:\n        - costType\n      type: object\n      properties:\n        costType:\n          $ref: '#/components/schemas/costType'\n        globalCostValue:\n          type: number\n          description: In case of global cost type, you have to indicate the cost value.\n          format: decimal\n          example: 10.21\n      description: Indicate the default configuration of the cost on this channel.\n    costSettings:\n      required:\n        - costType\n      type: object\n      properties:\n        costType:\n          $ref: '#/components/schemas/costType'\n        globalCostValue:\n          type: number\n          description: In case of global cost type, you have to indicate the cost value.\n          format: decimal\n          example: 10.21\n      description: \u003e\n        If this property is not indicated please force the user to configure the\n        cost settings.\n\n        Defines the cost type you have on this channel with the cost value.\n    unmapCategoryRequest:\n      required:\n        - catalogCategoryPath\n      type: object\n      properties:\n        catalogCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'\n      description: \u003e-\n        The request message to unmap a catalog category path to a channel\n        category path\n    configureCategoryRequest:\n      required:\n        - channelCatalogCategories\n        - overrideSubCategoryMappings\n      type: object\n      properties:\n        overrideSubCategoryMappings:\n          type: boolean\n          description: \u003e-\n            Great feature! In case of mapping to parent channel category, you\n            can ask to override the mapping of all sub channel category to this\n            catalog category path\n          example: true\n        channelCatalogCategories:\n          type: array\n          items:\n            $ref: '#/components/schemas/channelCatalogCategoryConfiguration'\n      description: \u003e-\n        The request message to make a mapping between catalog category path and\n        a channel category path\n    channelCatalogCategoryMappingsLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogCategoriesLink'\n        disable:\n          $ref: '#/components/schemas/links.DisableChannelCatalogCategoryMappingLink'\n        reenable:\n          $ref: '#/components/schemas/links.ReenableChannelCatalogCategoryMappingLink'\n      description: The action you can do on the category mappings\n    channelCatalogCategoryConfigurationList:\n      required:\n        - channelCatalogCategoryConfigurations\n        - costStatus\n        - links\n        - mappingStatus\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/channelCatalogCategoryMappingsLinks'\n        channelCatalogCategoryConfigurations:\n          type: array\n          items:\n            $ref: '#/components/schemas/channelCatalogCategoryConfigurationInfo'\n        mappingStatus:\n          $ref: '#/components/schemas/mappingStatus'\n        costStatus:\n          $ref: '#/components/schemas/costStatus'\n    mappingStatus:\n      type: string\n      example: required\n      enum:\n        - required\n        - optional\n        - notConfigurable\n    costStatus:\n      type: string\n      example: required\n      enum:\n        - required\n        - optional\n        - notConfigurable\n    channelCatalogCategoryMappingInfoLinks:\n      type: object\n      properties:\n        configureCategories:\n          $ref: '#/components/schemas/links.ConfigureChannelCatalogCategoryLink'\n    channelCatalogCategoryConfigurationInfo:\n      required:\n        - catalogCategoryPath\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/channelCatalogCategoryMappingInfoLinks'\n        catalogCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'\n        channelCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'\n        costValue:\n          $ref: '#/components/schemas/channelCatalogCategoryCostValue'\n      description: For all catalog categories the current mapping applied\n    channelCatalogCategoryCostValue:\n      type: number\n      description: \u003e-\n        In case of CPC_ByCategory or CPA_ByCategory cost type, you have to\n        indicate the cost value.\n      format: decimal\n      example: 10.21\n    channelCatalogCategoryConfiguration:\n      required:\n        - autoMapNewSubCategories\n        - catalogCategoryPath\n      type: object\n      properties:\n        autoMapNewSubCategories:\n          type: boolean\n          description: \u003e-\n            Great feature! In case of mapping to parent catalog category, you\n            can ask to automatically map new sub catalog category in the next\n            importation to this channel category path.\n          example: true\n        catalogCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'\n        channelCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'\n        costValue:\n          $ref: '#/components/schemas/channelCatalogCategoryCostValue'\n      description: \u003e\n        Represent a mapping between a catalog category path and a channel\n        category path.\n\n        The cost on this mapping can be applied.\n    channelCatalogColumnMappingWithName:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogColumnMapping'\n        - required:\n            - channelColumnName\n          type: object\n          properties:\n            channelColumnName:\n              $ref: '#/components/schemas/BeezUP_Common_ChannelColumnName'\n            channelBeezUPColumnName:\n              $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n            catalogColumnName:\n              $ref: '#/components/schemas/BeezUP_Common_CatalogColumnUserName'\n            catalogBeezUPColumnName:\n              $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'\n    channelCatalogColumnMapping:\n      required:\n        - channelColumnId\n      type: object\n      properties:\n        channelColumnId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'\n        channelCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'\n        catalogColumnId:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'\n      description: \u003e-\n        Represent a mapping between a channel column (considering channel\n        category mapping) and a catalog column\n    upgradeOfferRequired:\n      required:\n        - offerId\n      type: object\n      properties:\n        offerId:\n          type: integer\n          description: The offer identifier required\n          format: int32\n          example: 9\n      description: \u003e-\n        The message contains the offer identifier required to execute this\n        operation\n    channelCatalogColumnMappingListWithName:\n      type: array\n      description: The column mapping list between a channel and a catalog\n      items:\n        $ref: '#/components/schemas/channelCatalogColumnMappingWithName'\n    channelCatalogColumnMappingList:\n      type: array\n      description: The column mapping list between a channel and a catalog\n      items:\n        $ref: '#/components/schemas/channelCatalogColumnMapping'\n    channelCatalogState:\n      required:\n        - categoryMappingState\n        - columnMappingStatus\n        - exportedProductCount\n      type: object\n      properties:\n        exportedProductCount:\n          type: integer\n          format: int32\n          example: 101\n        columnMappingStatus:\n          $ref: '#/components/schemas/columnMappingStatus'\n        categoryMappingState:\n          $ref: '#/components/schemas/categoryMappingState'\n        apiSettingsStatus:\n          $ref: '#/components/schemas/BeezUP_Common_ApiSettingsStatus'\n      description: Channel Catalog State\n    columnMappingStatus:\n      type: string\n      example: success\n      enum:\n        - warning\n        - success\n        - failed\n    categoryMappingState:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/categoryMappingStatus'\n        uncategorizedProductCount:\n          type: integer\n          description: Indicates the uncategorized product count\n          format: int32\n          example: 101\n        withoutCategoryCostProductCount:\n          type: integer\n          description: Indicates the count of products without cost defined\n          format: int32\n          example: 42\n      description: The category mapping state of the channel catalog\n    categoryMappingStatus:\n      type: string\n      example: success\n      enum:\n        - warning\n        - success\n        - failed\n    channelCategorySettings:\n      type: object\n      properties:\n        mappingRequired:\n          type: boolean\n          description: \u003e-\n            Indicates if the category mapping is required, otherwise you can map\n            the categories but it will not block the publication of your catalog\n          example: true\n        mappingLeafRequired:\n          type: boolean\n          description: \u003e-\n            Indicates if the category mapping is required on category path leaf\n            or not\n          example: true\n    channelCatalogCategoryMappingSettings:\n      type: object\n      properties:\n        categoryMappingDisabledByMerchant:\n          type: boolean\n          description: \u003e-\n            Optional parameter. Indicates that you have decided to do not map\n            your categories with the channel's categories.\n          example: false\n    channelCatalog:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'\n        - required:\n            - channelCatalogId\n            - channelCategorySettings\n            - channelCostSettings\n            - enabled\n            - generalSettings\n            - isMarketplace\n            - links\n            - state\n            - storeId\n            - types\n          type: object\n          properties:\n            enabled:\n              type: boolean\n              description: Indicates if the channel catalog is enable\n              example: true\n            isMarketplace:\n              type: boolean\n              description: Indicates if this channel catalog is related to a marketplace\n              example: true\n            channelCatalogId:\n              $ref: '#/components/schemas/BeezUP_Common_ChannelCatalogId'\n            storeId:\n              $ref: '#/components/schemas/BeezUP_Common_StoreId'\n            generalSettings:\n              $ref: '#/components/schemas/generalSettings'\n            channelCostSettings:\n              $ref: '#/components/schemas/channelCostSettings'\n            channelCategorySettings:\n              $ref: '#/components/schemas/channelCategorySettings'\n            costSettings:\n              $ref: '#/components/schemas/costSettings'\n            categoryMappingSettings:\n              $ref: '#/components/schemas/channelCatalogCategoryMappingSettings'\n            columnMappings:\n              $ref: '#/components/schemas/channelCatalogColumnMappingListWithName'\n            exclusionFilters:\n              $ref: '#/components/schemas/exclusionFilters'\n            exportUrl:\n              $ref: '#/components/schemas/BeezUP_Common_HttpUrl'\n            state:\n              $ref: '#/components/schemas/channelCatalogState'\n            types:\n              type: array\n              description: The channel type list related to the channel\n              example:\n                - Marketplace\n              items:\n                type: string\n            links:\n              $ref: '#/components/schemas/channelCatalogLinks'\n          description: The channel catalog\n    externalLinks.GetChannelCatalogMarketplaceSettingsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/channelcatatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings\n            method: GET\n    externalLinks.GetChannelInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/channels/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n            method: GET\n    channelCatalogLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogLink'\n        delete:\n          $ref: '#/components/schemas/links.DeleteChannelCatalogLink'\n        enable:\n          $ref: '#/components/schemas/links.EnableChannelCatalogLink'\n        disable:\n          $ref: '#/components/schemas/links.DisableChannelCatalogLink'\n        configureGeneralSettings:\n          $ref: \u003e-\n            #/components/schemas/links.ConfigureChannelCatalogGeneralSettingsLink\n        configureCostSettings:\n          $ref: '#/components/schemas/links.ConfigureChannelCatalogCostSettingsLink'\n        configureColumnMappings:\n          $ref: '#/components/schemas/links.ConfigureChannelCatalogColumnMappingsLink'\n        reenableCategoryMappings:\n          $ref: '#/components/schemas/links.ReenableChannelCatalogCategoryMappingLink'\n        disableCategoryMappings:\n          $ref: '#/components/schemas/links.DisableChannelCatalogCategoryMappingLink'\n        categoryMappings:\n          $ref: '#/components/schemas/links.GetChannelCatalogCategoriesLink'\n        exclusionFilters:\n          $ref: '#/components/schemas/links.GetChannelCatalogExclusionFiltersLink'\n        products:\n          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoListLink'\n        exportationCacheInfo:\n          $ref: '#/components/schemas/links.GetChannelCatalogExportationCacheInfoLink'\n        marketplaceSettings:\n          $ref: \u003e-\n            #/components/schemas/externalLinks.GetChannelCatalogMarketplaceSettingsLink\n        channelInfo:\n          $ref: '#/components/schemas/externalLinks.GetChannelInfoLink'\n      description: Indicates the actions you can do on a channel catalog\n    productOverridesCopyResponse:\n      type: object\n      additionalProperties:\n        type: string\n      description: Product overrides compatibilites list\n      example:\n        8a76f06a-fefc-4c0d-bcfe-b210f1482977: '3563'\n        B7B79A0B-A8DE-54DA-964C-E2704DF3738A: SHBELNL56\n        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA: Sony bravia\n        2A77749D-0AAB-5245-89B5-6A1A4E06DACA: http://www.blalbla.nl/images/cache/dldldl.jpg\n        54B3B3CB-5CA5-5471-9DAE-5310C032059A: http://www.blalbla.nl/images/cache/dlmdl.jpg\n        0EA21509-1141-57BD-B679-371BC98B2ADA: http://www.blalbla.nl/images/cache/ldldld.jpg\n    productOverrides:\n      type: object\n      additionalProperties:\n        type: string\n      description: The key is the channel column identifier\n      example:\n        8a76f06a-fefc-4c0d-bcfe-b210f1482977: '3563'\n        B7B79A0B-A8DE-54DA-964C-E2704DF3738A: SHBELNL56\n        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA: Sony bravia\n        2A77749D-0AAB-5245-89B5-6A1A4E06DACA: http://www.blalbla.nl/images/cache/dldldl.jpg\n        54B3B3CB-5CA5-5471-9DAE-5310C032059A: http://www.blalbla.nl/images/cache/dlmdl.jpg\n        0EA21509-1141-57BD-B679-371BC98B2ADA: http://www.blalbla.nl/images/cache/ldldld.jpg\n    productOverridesWithCatalogValues:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/productOverrideWithCatalogValue'\n      description: The key is the channel column identifier\n      example:\n        8a76f06a-fefc-4c0d-bcfe-b210f1482977:\n          catalogValue: x235\n          override: '3563'\n        B7B79A0B-A8DE-54DA-964C-E2704DF3738A:\n          catalogValue: x_ezlSHBELNL56\n          override: SHBELNL56\n        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA:\n          catalogValue: Sony\n          override: Sony bravia\n        2A77749D-0AAB-5245-89B5-6A1A4E06DACA:\n          catalogValue: http://www.toto.com/thing/images/cache/dldldl.jpg\n          override: http://www.blalbla.nl/images/cache/dldldl.jpg\n        54B3B3CB-5CA5-5471-9DAE-5310C032059A:\n          catalogValue: http://www.toto.com/thing/cache/dlmdl.jpg\n          override: http://www.blalbla.nl/images/cache/dlmdl.jpg\n        0EA21509-1141-57BD-B679-371BC98B2ADA:\n          catalogValue: http://www.toto.com/thing/images/cache/ldldld.jpg\n          override: http://www.blalbla.nl/images/cache/ldldld.jpg\n    productOverrideWithCatalogValue:\n      required:\n        - override\n      type: object\n      properties:\n        override:\n          type: string\n          description: The overridden product value\n          example: Sony bravia\n        catalogValue:\n          type: string\n          description: The catalog product value\n          example: Sony\n    exclusionFiltersResponseLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogExclusionFiltersLink'\n        configure:\n          $ref: \u003e-\n            #/components/schemas/links.ConfigureChannelCatalogExclusionFiltersLink\n    exclusionFiltersResponse:\n      required:\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/exclusionFiltersResponseLinks'\n        exclusionFilters:\n          $ref: '#/components/schemas/exclusionFilters'\n    exclusionFilters:\n      type: array\n      description: The exclusion filter list\n      items:\n        $ref: '#/components/schemas/exclusionFilter'\n    exclusionFilterName:\n      type: string\n      description: The exclusion filter name\n      example: Exclude sony products\n    exclusionFilter:\n      required:\n        - channelColumnId\n        - enabled\n        - groupId\n        - name\n        - operatorName\n        - position\n        - positionInGroup\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/exclusionFilterName'\n        position:\n          minimum: 1\n          type: integer\n          description: The position of the exclusion filter\n          format: int32\n          example: 1\n        groupId:\n          type: string\n          description: \u003e-\n            Indicate the filter's group. All filters in the same group means an\n            \"AND\" operation in the filter group\n          format: guid\n          example: d9833f4b-718a-436f-bab5-89da3d21bf60\n        positionInGroup:\n          minimum: 1\n          type: integer\n          description: \u003e-\n            Indicate the filter group position. This information is used for the\n            UI purpose and must be unique in the filter group.\n          format: int32\n          example: 1\n        channelColumnId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'\n        operatorName:\n          $ref: '#/components/schemas/filterOperatorName'\n        value:\n          maxLength: 4000\n          type: string\n          description: \u003e-\n            The value indicate by the user when the filter operation requires\n            it.\n          example: sony\n        enabled:\n          type: boolean\n          description: indicates if the filter is currently enable.\n          example: true\n      description: The exclusion filter\n    filterOperatorName:\n      type: string\n      description: The exclusion filter operator name\n      example: Contains\n      x-lov: ProductColumnFilterOperatorName\n    filterOperatorDataType:\n      type: string\n      description: Data type of the operator\n      example: string\n      default: string\n      enum:\n        - string\n        - number\n    filterOperator:\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/filterOperatorName'\n        expectedChannelColumnDataType:\n          $ref: '#/components/schemas/filterOperatorDataType'\n        valueRequired:\n          type: boolean\n          description: This operator requires a value\n          example: true\n        expectedValueDataType:\n          $ref: '#/components/schemas/filterOperatorDataType'\n      description: The filter operator\n    productSetVisibilityCriteriaLogicType:\n      type: string\n      description: \u003e\n        Indicate how you want to combine the filters:\n\n        * funnel: You will get the products which meet at least one of the\n        product set criterion. The criteria are applied in the following order:\n          - categorization\n          - exclusion filters\n          - deactivations\n        * cumulative: You will get the products which have all the product set\n        criteria\n      enum:\n        - funnel\n        - cumulative\n    productSetVisibilityCriteria:\n      required:\n        - logic\n      type: object\n      properties:\n        logic:\n          $ref: '#/components/schemas/productSetVisibilityCriteriaLogicType'\n        exist:\n          type: boolean\n          description: \u003e-\n            If false, search for products absent from the current catalog. If\n            true, search for products currently in the catalog. If null the\n            filter will not be taken in account.\n          example: true\n        uncategorized:\n          type: boolean\n          description: \u003e-\n            Search product WITHOUT category mapped with the channel. If null the\n            filter will not be taken in account.\n          example: false\n        excluded:\n          type: boolean\n          description: \u003e-\n            Search excluded products by at least an exclusion filter. If null\n            the filter will not be taken in account.\n          example: false\n        disabled:\n          type: boolean\n          description: \u003e-\n            Search disabled products. If null the filter will not be taken in\n            account.\n          example: false\n    getChannelCatalogProductInfoListRequest:\n      required:\n        - criteria\n        - pageNumber\n        - pageSize\n      type: object\n      properties:\n        pageNumber:\n          minimum: 1\n          type: integer\n          format: int32\n          example: 1\n        pageSize:\n          minimum: 100\n          type: integer\n          format: int32\n          example: 100\n        criteria:\n          $ref: '#/components/schemas/productSetVisibilityCriteria'\n        overridden:\n          type: boolean\n          description: \u003e-\n            Search overridden products. If null the filter will not be taken in\n            account.\n          example: true\n        productFilters:\n          $ref: '#/components/schemas/channelCatalogProductFilters'\n        catalogCategoryFilter:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryFilter'\n        channelCategoryFilter:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryFilter'\n    channelCatalogProductFilters:\n      type: object\n      properties:\n        catalogSkus:\n          type: array\n          description: The catalog product SKU filter (multiple values)\n          items:\n            type: string\n        catalogEans:\n          type: array\n          description: The catalog product EAN filter (multiple values)\n          items:\n            type: string\n        catalogMpns:\n          type: array\n          description: The catalog product MPN filter (multiple values)\n          items:\n            type: string\n        channelSkus:\n          type: array\n          description: The channel product SKU filter (multiple values)\n          items:\n            type: string\n        channelEans:\n          type: array\n          description: The channel product EAN filter (multiple values)\n          items:\n            type: string\n        channelMpns:\n          type: array\n          description: The channel product MPN filter (multiple values)\n          items:\n            type: string\n        title:\n          type: string\n          description: The product title filter\n          example: Refrigérateur\n        additionalProductFilters:\n          $ref: '#/components/schemas/BeezUP_Common_AdditionalProductFilters'\n    channelCatalogProductsCounters:\n      type: object\n      properties:\n        existingProductCount:\n          type: integer\n          description: Imported product count currently in your catalog.\n          format: int32\n          example: 1000\n        uncategorizedProductCount:\n          type: integer\n          description: Product count WITHOUT category mapped on existing products.\n          format: int32\n          example: 250\n        disabledProductCountIncludingUncategorized:\n          type: integer\n          description: \u003e-\n            Disabled product count INCLUDING uncategorized products on existing\n            products.\n          format: int32\n          example: 169\n        disabledProductCountExcludingUncategorized:\n          type: integer\n          description: \u003e-\n            Disabled product count EXCLUDING uncategorized products on existing\n            products.\n          format: int32\n          example: 150\n        excludedProductCountIncludingUncategorizedAndDisabled:\n          type: integer\n          description: \u003e-\n            Excluded product count INCLUDING uncategorized products AND disabled\n            products on existing products.\n          format: int32\n          example: 66\n        excludedProductCountExcludingUncategorizedAndDisabled:\n          type: integer\n          description: \u003e-\n            Excluded product count EXCLUDING uncategorized products AND disabled\n            products on existing products.\n          format: int32\n          example: 50\n      description: \u003e-\n        The channel catalog products counters. For each counter you will have a\n        count.\n    channelCatalogProductInfoListLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoListLink'\n        export:\n          $ref: '#/components/schemas/links.ExportChannelCatalogProductInfoListLink'\n    channelCatalogProductInfoList:\n      required:\n        - links\n        - paginationResult\n        - productInfos\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        links:\n          $ref: '#/components/schemas/channelCatalogProductInfoListLinks'\n        productInfos:\n          type: array\n          items:\n            $ref: '#/components/schemas/channelCatalogProductInfo'\n      description: The channel catalog product info list\n    channelCatalogProductInfo:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'\n        - required:\n            - disabled\n            - excluded\n            - links\n            - overrides\n            - uncategorized\n          type: object\n          properties:\n            overrides:\n              $ref: '#/components/schemas/productOverridesWithCatalogValues'\n            disabled:\n              type: boolean\n              description: Indicates if the product has been disabled or not\n              example: false\n              default: false\n            uncategorized:\n              type: boolean\n              description: \u003e-\n                Indicates if the product's category has been NOT mapped to a\n                channel category\n              example: true\n            excluded:\n              type: boolean\n              description: Indicates if the product has been excluded by a exclusion filter\n              example: true\n              default: false\n            excludedBy:\n              type: array\n              example:\n                - Exclude sony products\n              items:\n                $ref: '#/components/schemas/exclusionFilterName'\n            links:\n              $ref: '#/components/schemas/channelCatalogProductInfoLinks'\n          description: The channel catalog product information\n    channelCatalogProductInfoLinks:\n      required:\n        - override\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoLink'\n        override:\n          $ref: '#/components/schemas/links.OverrideChannelCatalogProductValuesLink'\n        disable:\n          $ref: '#/components/schemas/links.DisableChannelCatalogProductLink'\n        reenable:\n          $ref: '#/components/schemas/links.ReenableChannelCatalogProductLink'\n      description: Indicates the differents actions you can do on a channel product\n    channelCatalogProductByChannelCatalogRequest:\n      required:\n        - channelCatalogIds\n        - productId\n        - storeId\n      type: object\n      properties:\n        storeId:\n          $ref: '#/components/schemas/BeezUP_Common_StoreId'\n        productId:\n          $ref: '#/components/schemas/BeezUP_Common_ProductId'\n        channelCatalogIds:\n          type: array\n          description: The list of channel catalog identifier\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_ChannelCatalogId'\n    channelCatalogProductByChannelCatalogResponse:\n      type: object\n      properties:\n        channelCatalogs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/channelCatalogProductInfo'\n          description: \u003e-\n            The channel catalog product by channel catalog. The key is the\n            channel catalog identifier\n    BeezUP_Common_CatalogCategoryFilter:\n      type: object\n      properties:\n        categoryPath:\n          type: array\n          description: Indicates on which catalog category path you want to make the filter\n          example:\n            - Maison\n            - Chambre\n          items:\n            type: string\n    BeezUP_Common_ChannelCategoryFilter:\n      type: object\n      properties:\n        categoryPath:\n          type: array\n          description: Indicates on which channel category path you want to make the filter\n          example:\n            - Home\n            - Bedroom\n          items:\n            type: string\n    BeezUP_Common_ChannelCatalogId:\n      type: string\n      description: The channel catalog identifier\n      format: guid\n      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n    BeezUP_Common_ChannelBasicInfo:\n      required:\n        - channelId\n        - channelImageUrl\n        - channelName\n      type: object\n      properties:\n        channelId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        channelName:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelName'\n        channelImageUrl:\n          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'\n      description: The basic info related to a channel\n    BeezUP_Common_AdditionalProductFilters:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/BeezUP_Common_AdditionalProductFiltersValue'\n      description: |\n        Describe a filter on a product's column.\n        The key is the column identifier of your catalog or a custom column.\n    BeezUP_Common_ProductBasicInfo:\n      required:\n        - productExists\n        - productId\n        - productSku\n        - productTitle\n      type: object\n      properties:\n        productId:\n          type: string\n          description: The product identifier\n          format: guid\n          example: 00000000-0000-0000-0000-000000000000\n        productSku:\n          type: string\n          description: The product SKU\n          example: SKU1234\n        productTitle:\n          type: string\n          description: The product tile\n          example: My supert product\n        productImageUrl:\n          type: string\n          description: The product image Url\n          format: uri\n          example: \u003e-\n            http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg\n        productExists:\n          type: boolean\n          description: Indicates if the product still exists in your catalog\n          example: true\n      description: The basic information related to a product\n    BeezUP_Common_ApiSettingsStatus:\n      type: string\n      example: success\n      enum:\n        - warning\n        - success\n        - failed\n    BeezUP_Common_AdditionalProductFiltersValue:\n      type: object\n      properties:\n        operatorName:\n          $ref: '#/components/schemas/BeezUP_Common_ProductColumnFilterOperatorName'\n        values:\n          type: array\n          description: \u003e\n            Must be null if the operator is \"IsNull\" or \"IsNotNull\".\n\n            Can contains multiple value in case of \"InList\" operator. Otherwise\n            a single value is expected.\n          example:\n            - My value\n          items:\n            type: string\n      example:\n        672644c7-5bd0-4e25-88c1-1f732bda5e4c:\n          operatorName: GreaterTo\n          values:\n            - '100'\n    BeezUP_Common_CatalogColumnUserName:\n      type: string\n      description: The catalog column named by the user (catalog or custom column)\n      example: My title\n    BeezUP_Common_ProductColumnFilterOperatorName:\n      type: string\n      description: Indicate the operator you want to make on the columnId\n      x-lov: ProductColumnFilterOperatorName\n    publicationStrategy:\n      type: string\n      description: The Publication Type\n      x-lov: MarketplacePublicationV3Strategy\n    publicationType:\n      type: string\n      description: The Publication Type\n      example: PublishOffers\n      enum:\n        - PublishProducts\n        - PublishOffers\n        - Unpublish\n      x-lov: MarketplacePublicationType\n    feedType:\n      type: string\n      description: The Feed Type\n      example: Offers\n      enum:\n        - Products\n        - Inventory\n        - Pricing\n        - Images\n        - Relationships\n        - Unpublish\n        - Offers\n      x-lov: MarketplacePublicationFeedType\n    accountPublicationsLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetPublicationsLink'\n    accountPublications:\n      required:\n        - links\n        - publications\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/accountPublicationsLinks'\n        publications:\n          type: array\n          description: The recent publications for the requested account\n          example:\n            - publicationType: PublishOffers\n              feeds:\n                - feedType: Offers\n                  startUtcDate: 2016-02-13T12:01:11.000Z\n                  endUtcDate: 2016-02-13T12:02:00.000Z\n                  processingStatus: Done\n                  exportedProducts: '10142'\n                  transmittedItems: '10042'\n                  publishedItems: '10041'\n                  publishedItemsWithWarning: '123'\n                  failedItems: '1'\n                  errorMessage: ''\n                  htmlReportUrl: http://www.myreporthtml.com\n                  htmlReportGenerationErrorMessage: ''\n                - feedType: Inventory\n                  startUtcDate: 2016-02-13T12:01:11.000Z\n                  endUtcDate: 2016-02-13T12:02:00.000Z\n                  processingStatus: Done\n                  exportedProducts: '10142'\n                  transmittedItems: '10042'\n                  publishedItems: '10041'\n                  publishedItemsWithWarning: '123'\n                  failedItems: '1'\n                  errorMessage: ''\n                  htmlReportUrl: http://www.myreporthtml.com\n                  htmlReportGenerationErrorMessage: ''\n                - feedType: Pricing\n                  startUtcDate: 2016-02-13T12:01:11.000Z\n                  processingStatus: InProgress\n                  exportedProducts: '10142'\n                  transmittedItems: '10042'\n                  publishedItems: '10041'\n                  publishedItemsWithWarning: '123'\n                  failedItems: '1'\n                  errorMessage: ''\n                  htmlReportUrl: http://www.myreporthtml.com\n                  htmlReportGenerationErrorMessage: ''\n            - publicationType: PublishProducts\n              feeds:\n                - feedType: Product\n                  startUtcDate: 2016-02-13T12:01:11.000Z\n                  endUtcDate: 2016-02-13T12:02:00.000Z\n                  processingStatus: Done\n                  exportedProducts: '10142'\n                  transmittedItems: '10042'\n                  publishedItems: '10041'\n                  publishedItemsWithWarning: '123'\n                  failedItems: '1'\n                  errorMessage: ''\n                  htmlReportUrl: http://www.myreporthtml.com\n                  htmlReportGenerationErrorMessage: ''\n                - feedType: Inventory\n                  startUtcDate: 2016-02-13T12:01:11.000Z\n                  endUtcDate: 2016-02-13T12:02:00.000Z\n                  processingStatus: Done\n                  exportedProducts: '10142'\n                  transmittedItems: '10042'\n                  publishedItems: '10041'\n                  publishedItemsWithWarning: '123'\n                  failedItems: '1'\n                  errorMessage: ''\n                  htmlReportUrl: http://www.myreporthtml.com\n                  htmlReportGenerationErrorMessage: ''\n                - feedType: Pricing\n                  startUtcDate: 2016-02-13T12:01:11.000Z\n                  processingStatus: InProgress\n                  exportedProducts: '10142'\n                  transmittedItems: '10042'\n                  publishedItems: '10041'\n                  publishedItemsWithWarning: '123'\n                  failedItems: '1'\n                  errorMessage: ''\n                  htmlReportUrl: http://www.myreporthtml.com\n                  htmlReportGenerationErrorMessage: ''\n          items:\n            $ref: '#/components/schemas/publicationReporting'\n      description: The publication history for an account\n    publicationReporting:\n      required:\n        - feeds\n        - publicationType\n      type: object\n      properties:\n        publicationType:\n          $ref: '#/components/schemas/publicationType'\n        feeds:\n          type: array\n          description: The feeds that were published\n          example:\n            - feedType: Offers\n              startUtcDate: 2016-02-13T12:01:11.000Z\n              endUtcDate: 2016-02-13T12:02:00.000Z\n              processingStatus: Done\n              exportedProducts: '10142'\n              transmittedItems: '10042'\n              publishedItems: '10041'\n              publishedItemsWithWarning: '123'\n              failedItems: '1'\n              errorMessage: ''\n              htmlReportUrl: http://www.myreporthtml.com\n              htmlReportGenerationErrorMessage: ''\n          items:\n            $ref: '#/components/schemas/publicationFeedReporting'\n      description: Model for a publication reporting, can have multiple feeds\n    publicationFeedReporting:\n      required:\n        - feedType\n        - processingStatus\n        - startUtcDate\n      type: object\n      properties:\n        feedType:\n          $ref: '#/components/schemas/feedType'\n        startUtcDate:\n          type: string\n          description: The feed publication start time (UTC timezone)\n          format: date-time\n          example: 2016-02-13T12:01:11.000Z\n        endUtcDate:\n          type: string\n          description: The feed publication end time (UTC timezone)\n          format: date-time\n          example: 2016-02-13T12:02:00.000Z\n        processingStatus:\n          type: string\n          description: The processing status\n          example: Done\n        exportedProducts:\n          type: integer\n          description: The product count downloaded from BeezUP Export\n          format: int32\n          example: 10142\n        transmittedItems:\n          type: integer\n          description: The item count (products or offers) sent to the marketplace\n          format: int32\n          example: 10042\n        publishedItems:\n          type: integer\n          description: \u003e-\n            The item count (products or offers) the marketplace flagged as\n            successful\n          format: int32\n          example: 10041\n        publishedItemsWithWarning:\n          type: integer\n          description: \u003e-\n            The item count (products or offers) the marketplace flagged as\n            successful with warnings\n          format: int32\n          example: 123\n        failedItems:\n          type: integer\n          description: \u003e-\n            The item count (products or offers) the marketplace flagged as\n            failed\n          format: int32\n          example: 1\n        errorMessage:\n          type: string\n          description: The error message\n          example: ''\n        htmlReportUrl:\n          type: string\n          description: The Url for the Html Report generated\n          format: uri\n          example: http://www.myreporthtml.com\n        htmlReportGenerationErrorMessage:\n          type: string\n          description: The error message if the Html Report generation failed\n          example: Example error message\n        completed:\n          type: boolean\n          description: Indicates if the publication is completed or not\n          example: true\n      description: Publication feed reporting\n    links.GetChannelCatalogMarketplacePropertiesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/properties\n    externalLinks.GetExternalConfigurationPageLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n    channelCatalogMarketplacePropertiesLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: \u003e-\n            #/components/schemas/links.GetChannelCatalogMarketplacePropertiesLink\n        settings:\n          $ref: '#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink'\n        externalConfigurationPage:\n          $ref: '#/components/schemas/externalLinks.GetExternalConfigurationPageLink'\n    channelCatalogMarketplaceProperties:\n      required:\n        - links\n        - propertyGroups\n      type: object\n      properties:\n        info:\n          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'\n        links:\n          $ref: '#/components/schemas/channelCatalogMarketplacePropertiesLinks'\n        propertyGroups:\n          type: array\n          description: The groups settings with constraints\n          example:\n            - name: AccountInformations\n              position: '1'\n              properties:\n                - name: EbayToken\n                  position: '1'\n                  readOnly: 'true'\n                  values:\n                    - \u003e-\n                      AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX\n                - name: PayPalEmailAddress\n                  position: '2'\n                  required: true\n                  pattern: \u003e-\n                    (?:[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\n                  x-pattern: \u003e-\n                    (?:[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\n            - displayGroupCode: AnnounceTitle\n              displayGroupPosition: '2'\n              properties:\n                - name: Postalcode\n                  required: true\n                  position: '1'\n                - name: Country\n                  position: '2'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/Country_eBay\n                  lovRequired: 'true'\n                - name: ReturnsWithinOption\n                  position: '3'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/ReturnsWithinDuration_eBay\n                  lovRequired: 'true'\n                - name: ShippingService\n                  position: '4'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/FRA_ShippingService_eBay\n                  lovRequired: 'true'\n                - name: Currency\n                  position: '5'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/Currency_eBay\n                  lovRequired: 'true'\n                - name: PaymentMethods\n                  position: '6'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/PaymentMethods_eBay\n                  lovRequired: 'true'\n                  minItems: 1\n                  maxItems: 2\n            - displayGroupCode: SalesConditions\n              displayGroupPosition: '3'\n              properties:\n                - name: ReturnsAcceptedOption\n                  position: '1'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/ReturnsAcceptedOption_eBay\n                  lovRequired: 'true'\n                - name: ShippingCostPaidByOption\n                  position: '2'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/ShippingCostPaidByOption_eBay\n                  lovRequired: 'true'\n                - name: RefundOption\n                  position: '3'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/RefundOption_eBay\n                  lovRequired: 'true'\n                - name: ReturnsWithinOption\n                  position: '4'\n                  required: true\n                  lovLink:\n                    href: /v2/user/lov/ReturnsWithinDuration_eBay\n                  lovRequired: 'true'\n                - name: ReturnDescription\n                  position: '5'\n                  required: false\n                  maxLength: 5000\n            - displayGroupCode: HTML\n              displayGroupPosition: '4'\n              properties:\n                - name: Template_HTML\n                  position: '1'\n                  required: false\n                  maxLength: 50000\n            - displayGroupCode: OrdersRetrievalOptions\n              displayGroupPosition: '5'\n              properties:\n                - name: RetrieveOnlyOneCountry\n                  description: If true allows to retireve one marketplace country only\n                  position: '1'\n                  type: boolean\n                  required: false\n          items:\n            $ref: '#/components/schemas/channelCatalogMarketplacePropertyGroup'\n    channelCatalogMarketplacePropertyGroup:\n      required:\n        - name\n        - position\n        - properties\n      type: object\n      properties:\n        name:\n          type: string\n          description: Indicate the code identifier of the group\n          example: AccountInformations\n          x-lov: MarketplaceStorePropertyGroup\n        position:\n          minimum: 1\n          type: integer\n          description: Indicate the position of the group\n          example: 1\n        properties:\n          type: array\n          example:\n            - name: EbayToken\n              position: '1'\n              readOnly: 'true'\n              values:\n                - \u003e-\n                  AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX\n            - name: PaypalAddress\n              position: '2'\n              required: true\n              pattern: \u003e-\n                (?:[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\n              x-pattern: \u003e-\n                (?:[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\n          items:\n            $ref: '#/components/schemas/channelCatalogMarketplaceProperty'\n    type:\n      type: string\n      description: The Data Type\n      example: string\n      enum:\n        - string\n        - integer\n        - boolean\n        - number\n    channelCatalogMarketplacePropertyDiscriminatorType:\n      type: string\n      example: string\n      enum:\n        - channelCatalogMarketplaceStringProperty\n        - channelCatalogMarketplaceIntegerProperty\n        - channelCatalogMarketplaceBooleanProperty\n        - channelCatalogMarketplaceNumberProperty\n    channelCatalogMarketplaceProperty:\n      required:\n        - discriminatorType\n        - name\n        - position\n        - readOnly\n        - required\n        - type\n        - visible\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/channelCatalogMarketplacePropertyName'\n        info:\n          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'\n        description:\n          type: string\n          description: Indicate the description of the property\n          example: If true allows to retireve one marketplace country only\n        position:\n          minimum: 1\n          type: integer\n          description: Indicate the position of the property in the display group\n          example: 1\n        readOnly:\n          type: boolean\n          description: \u003e-\n            Indicate if the value cannot be changed. This is used for example\n            for ebay token that should not be changed.\n          example: false\n          default: false\n        minLength:\n          minimum: 0\n          type: integer\n          description: Indicates the minimum size of the property value\n          format: int32\n          example: 1\n          default: 0\n        maxLength:\n          minimum: 1\n          type: integer\n          description: Indicates the maximum size of the property value\n          format: int32\n          example: 500\n        minItems:\n          minimum: 0\n          type: integer\n          description: Indicates the minimum item count of the property value.\n          format: int32\n          example: 1\n          default: 1\n        maxItems:\n          minimum: 1\n          type: integer\n          description: Indicates the maximum item count of the property value\n          format: int32\n          example: 2\n          default: 1\n        lovLink:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        lovRequired:\n          type: boolean\n          description: Indicates if the property value must be in the list of value.\n          example: true\n          default: false\n        required:\n          type: boolean\n          description: Indicate if the property is required or not\n          example: true\n          default: false\n        offerIdRequired:\n          type: integer\n          description: Indicates the offer identifier required to configure this property.\n          example: 10\n        visible:\n          type: boolean\n          description: \u003e-\n            Indicates if this property should be displayed in the configuration\n            page.\n          example: true\n          default: true\n        type:\n          $ref: '#/components/schemas/type'\n        discriminatorType:\n          $ref: \u003e-\n            #/components/schemas/channelCatalogMarketplacePropertyDiscriminatorType\n        pattern:\n          type: string\n          description: \u003e-\n            Channel catalog marketplace setting value format validation regular\n            expression\n          example: \u003e-\n            (?:[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%\u0026'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\n      description: Model for fetching a channel catalog marketplace property\n      discriminator:\n        propertyName: discriminatorType\n    channelCatalogMarketplaceStringProperty:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'\n        - type: object\n          properties:\n            default:\n              type: array\n              description: Indicate the default values of the property\n              example:\n                - My default value\n              items:\n                type: string\n    channelCatalogMarketplaceIntegerProperty:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'\n        - type: object\n          properties:\n            default:\n              type: array\n              description: Indicate the default values of the property\n              example:\n                - '201'\n              items:\n                type: integer\n    channelCatalogMarketplaceBooleanProperty:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'\n        - type: object\n          properties:\n            default:\n              type: boolean\n              description: Indicate the default values of the property\n              example: false\n    channelCatalogMarketplaceNumberProperty:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'\n        - type: object\n          properties:\n            default:\n              type: array\n              description: Indicate the default values of the property\n              example:\n                - '201.69'\n              items:\n                type: number\n    setChannelCatalogMarketplaceSettingsRequest:\n      required:\n        - settings\n      type: object\n      properties:\n        settings:\n          $ref: '#/components/schemas/channelCatalogMarketplaceSettingArray'\n      description: The channel catalog marketplace settings to save\n    publishCatalogToMarketplaceRequest:\n      required:\n        - feedType\n        - publicationStrategyKind\n        - withUnpublish\n      type: object\n      properties:\n        publicationStrategyKind:\n          $ref: '#/components/schemas/publicationStrategyKind'\n        feedType:\n          $ref: '#/components/schemas/feedType'\n        withUnpublish:\n          type: boolean\n          description: \u003e-\n            In full publication strategy kind, for some marktetplace, you can\n            ask to unpublish or not your existing feeds on the markeptlace\n            absent from your exported catalog.\n      description: Publish the catalog to the marketplace\n    publicationStrategyKind:\n      type: string\n      description: \u003e\n        Define the publication strategy kind, for that you have 2 choices \n\n        * Delta - This is the recommanded publication strategy kind, this\n        strategy will push to the marketplace only the difference between your\n        catalog and the previous published feeds done by BeezUP. \n\n        * Full - If you want to force the publication of all your catalog feeds\n        to the marketplace. \n              !WARNING! Depending to the marketplace this operation will purge the existing offers on the marketplace that are not in the catalog or unknown from the publication feed referential.\n      default: Delta\n      enum:\n        - Delta\n        - Full\n    links.GetChannelCatalogMarketplaceSettingsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings\n    links.SetChannelCatalogMarketplaceSettingsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: setChannelCatalogMarketplaceSettingsRequest\n    channelCatalogMarketplaceSettingsLinks:\n      required:\n        - save\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink'\n        save:\n          $ref: '#/components/schemas/links.SetChannelCatalogMarketplaceSettingsLink'\n    channelCatalogMarketplaceSettings:\n      required:\n        - links\n        - settings\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/channelCatalogMarketplaceSettingsLinks'\n        settings:\n          type: array\n          example:\n            - name: Country\n              values:\n                - FR\n            - name: Currency\n              values:\n                - EUR\n            - name: ListingDuration\n              values:\n                - GTC\n            - name: PaymentMethods\n              values:\n                - CCAccepted\n            - name: PayPalEmailAddress\n              values:\n                - pascal@ixeoline.com\n            - name: PostalCode\n              values:\n                - '69630'\n            - name: RefundOption\n              values:\n                - MoneyBackOrExchange\n            - name: ReturnsAcceptedOption\n              values:\n                - ReturnsAccepted\n            - name: ReturnsWithinOption\n              values:\n                - Days_10\n            - name: ShippingCostPaidByOption\n              values:\n                - Buyer\n            - name: ShippingService\n              values:\n                - FR_ColiposteColissimo\n          items:\n            $ref: '#/components/schemas/channelCatalogMarketplaceSetting'\n      description: The channel catalog marketplace settings\n    channelCatalogMarketplaceSettingArray:\n      type: array\n      example:\n        - name: Country\n          values:\n            - FR\n        - name: Currency\n          values:\n            - EUR\n        - name: ListingDuration\n          values:\n            - GTC\n        - name: PaymentMethods\n          values:\n            - CCAccepted\n        - name: PayPalEmailAddress\n          values:\n            - pascal@ixeoline.com\n        - name: PostalCode\n          values:\n            - '69630'\n        - name: RefundOption\n          values:\n            - MoneyBackOrExchange\n        - name: ReturnsAcceptedOption\n          values:\n            - ReturnsAccepted\n        - name: ReturnsWithinOption\n          values:\n            - Days_10\n        - name: ShippingCostPaidByOption\n          values:\n            - Buyer\n        - name: ShippingService\n          values:\n            - FR_ColiposteColissimo\n      items:\n        $ref: '#/components/schemas/channelCatalogMarketplaceSetting'\n    channelCatalogMarketplacePropertyName:\n      type: string\n      description: Channel catalog marketplace property name\n      example: PaypalAddress\n      x-lov: MarketplaceStoreProperty\n    channelCatalogMarketplaceSettingDiscriminatorType:\n      type: string\n      example: string\n      enum:\n        - channelCatalogMarketplaceStringSetting\n        - channelCatalogMarketplaceIntegerSetting\n        - channelCatalogMarketplaceBooleanSetting\n        - channelCatalogMarketplaceNumberSetting\n    channelCatalogMarketplaceSetting:\n      required:\n        - discriminatorType\n        - name\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/channelCatalogMarketplacePropertyName'\n        discriminatorType:\n          $ref: \u003e-\n            #/components/schemas/channelCatalogMarketplaceSettingDiscriminatorType\n      description: Model for fetching a channel catalog marketplace setting\n      discriminator:\n        propertyName: discriminatorType\n    channelCatalogMarketplaceStringSetting:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'\n        - type: object\n          properties:\n            values:\n              type: array\n              description: Channel catalog marketplace property values\n              example:\n                - myemail@mydomain.com\n              items:\n                type: string\n    channelCatalogMarketplaceIntegerSetting:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'\n        - type: object\n          properties:\n            values:\n              type: array\n              description: Channel catalog marketplace property values\n              example:\n                - '201'\n              items:\n                type: integer\n    channelCatalogMarketplaceBooleanSetting:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'\n        - type: object\n          properties:\n            value:\n              type: boolean\n              description: Channel catalog marketplace property values\n              example: false\n    channelCatalogMarketplaceNumberSetting:\n      allOf:\n        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'\n        - type: object\n          properties:\n            values:\n              type: array\n              description: Channel catalog marketplace property values\n              example:\n                - '201.69'\n              items:\n                type: number\n    marketplaceChannelCatalogList:\n      required:\n        - links\n        - marketplaceChannelCatalogs\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/marketplaceChannelCatalogListLinks'\n        marketplaceChannelCatalogs:\n          type: array\n          description: The list of marketplace channel catalog\n          items:\n            $ref: '#/components/schemas/marketplaceChannelCatalog'\n      description: The marketplace channel catalog list\n    links.GetMarketplaceChannelCatalogsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/channelcatalogs\n    marketplaceChannelCatalogListLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetMarketplaceChannelCatalogsLink'\n    marketplaceChannelCatalog:\n      required:\n        - apiSettingsStatus\n        - beezUPChannelCatalogId\n        - beezUPChannelId\n        - beezUPMarketplaceName\n        - beezUPStoreId\n        - beezUPStoreName\n        - enabled\n        - links\n        - lovLinks\n        - marketplaceBusinessCode\n        - marketplaceIsoCountryCodeAlpha2\n        - marketplaceMarketPlaceId\n        - marketplaceTechnicalCode\n      type: object\n      properties:\n        apiSettingsStatus:\n          $ref: '#/components/schemas/BeezUP_Common_ApiSettingsStatus'\n        enabled:\n          type: boolean\n          description: The enabled status of the Channel Catalog\n          example: true\n        marketplaceTechnicalCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'\n        marketplaceBusinessCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'\n        marketplaceMarketPlaceId:\n          type: string\n          description: The marketplace identifier in the marketplace\n          example: '71'\n        marketplaceIsoCountryCodeAlpha2:\n          type: string\n          description: \u003e-\n            The marketplace country iso code alpha 2 (see\n            http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for\n            more details)\n          example: FR\n        beezUPMarketplaceName:\n          type: object\n          description: The marketplace name\n          example: ebay FRA\n        beezUPChannelId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        beezUPChannelCatalogId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelCatalogId'\n        beezUPStoreId:\n          $ref: '#/components/schemas/BeezUP_Common_StoreId'\n        beezUPStoreName:\n          type: string\n          description: The store name\n          example: My Store 1\n        marketplaceMerchantIdentifiers:\n          type: object\n          additionalProperties:\n            type: string\n          description: The marketplace merchant identifier list\n          example:\n            Ebay_PayPalEmailAddress: yourEbayId@paypal.com\n        marketplaceAccountId:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceAccountId'\n        lovLinks:\n          $ref: '#/components/schemas/marketplaceChannelCatalogLovLinks'\n        links:\n          $ref: '#/components/schemas/marketplaceChannelCatalogLinks'\n      description: \u003e-\n        This object indicates you the association between a channel catalog and\n        a marketplace. The account identifier will be automatically defined\n        based on your marketplace merchant identfier.\n    links.GetPublicationsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/channelcatalogs/publications/Amazon/123/history\n    links.PublishCatalogToMarketplaceLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/channelcatalogs/publications/Cdiscount/123/publish\n    marketplaceChannelCatalogLovLinks:\n      type: object\n      properties:\n        shippingMethodLOV:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        carrierCodeLOV:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        cancelationReasonCodeLOV:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        refundReasonCodeLOV:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        marketplaceStorePropertyLOV:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        marketplaceStorePropertyGroupLOV:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n      description: Indicates the List Of Values related to the marketplace\n    marketplaceChannelCatalogLinks:\n      required:\n        - properties\n        - settings\n      type: object\n      properties:\n        properties:\n          $ref: \u003e-\n            #/components/schemas/links.GetChannelCatalogMarketplacePropertiesLink\n        settings:\n          $ref: '#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink'\n        publications:\n          $ref: '#/components/schemas/links.GetPublicationsLink'\n        publishOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/marketplaceChannelCatalogPublicationOption'\n      description: \u003e-\n        Indicate the actions you can do on a channel catalog. If the settings\n        are valid, you will be able to access to the publication history.\n    marketplaceChannelCatalogPublicationOption:\n      required:\n        - feedType\n        - kind\n        - link\n        - strategy\n        - withUnpublish\n      type: object\n      properties:\n        kind:\n          $ref: '#/components/schemas/publicationStrategyKind'\n        feedType:\n          $ref: '#/components/schemas/feedType'\n        withUnpublish:\n          type: boolean\n        strategy:\n          $ref: '#/components/schemas/publicationStrategy'\n        link:\n          $ref: '#/components/schemas/links.PublishCatalogToMarketplaceLink'\n    BeezUP_Common_MarketplaceTechnicalCode:\n      type: string\n      description: The technical code of the marketplace.\n      example: Amazon\n      x-lov: OMMarketplaceTechnicalCode\n    BeezUP_Common_MarketplaceBusinessCode:\n      type: string\n      description: \u003e-\n        In an marketplace technical code like CDiscount you can have several\n        marketplaces like GO SPORT, etc. We identify them by a business code.\n      example: GOSPORT\n      x-lov: MarketplaceBusinessCode\n    BeezUP_Common_MarketplaceAccountId:\n      type: integer\n      description: \u003e-\n        The marketplace account identifier in BeezUP. This account identifier is\n        based on your api settings.\n      format: int32\n      example: 1234\n    beezUPOrderId:\n      type: string\n      description: The BeezUP Order identifier\n      format: uuid\n    accountId:\n      type: integer\n      description: \u003e-\n        The marketplace account identifier in BeezUP. This account identifier is\n        based on your api settings.\n      format: int32\n      example: 1234\n    order_MerchantOrderId:\n      type: string\n      description: The order merchant identifier\n      example: MyOrderMerchantId\n    order_MerchantECommerceSoftwareName:\n      type: string\n      description: The e-commerce software name of the merchant\n      example: Prestashop\n    order_MerchantECommerceSoftwareVersion:\n      type: string\n      description: The e-commece software version of the merchant\n      example: 123.0.1\n    orderExportationsLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetOrderExportationsLink'\n    links.GetOrderExportationsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/exportations\n            method: GET\n    links.ExportOrdersLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/exportations\n            method: POST\n            properties:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: exportOrderListRequest\n    orderExportations:\n      required:\n        - exportations\n        - links\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        exportations:\n          type: array\n          items:\n            $ref: '#/components/schemas/orderExportationReporting'\n        links:\n          $ref: '#/components/schemas/orderExportationsLinks'\n      description: |\n        The list of Order report exportations.\\\n        The paginationResult properties can be null if the list is empty.\n    orderExportationReporting:\n      required:\n        - enqueuedUtcDate\n        - executionUUID\n        - ipAddress\n        - processingStatus\n        - sourceType\n        - sourceUserName\n      type: object\n      properties:\n        abortionUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T13:10:12.000Z\n        beginUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T13:10:12.000Z\n        blobNameUri:\n          type: string\n          example: http://beezuporder2.blob.com/yourReport.csv\n        endUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T15:10:12.000Z\n        enqueuedUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T13:09:12.000Z\n        errorMessage:\n          type: string\n          example: You have an error here\n        executionUUID:\n          type: string\n          format: uuid\n        expirationUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T13:39:12.000Z\n        failureUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T13:39:12.000Z\n        ipAddress:\n          type: string\n          example: 127.0.0.1\n        jsonCriteria:\n          type: string\n          description: Raw representation of the JSON\n          example: \u003e-\n            {\"StartDate:\"2016-09-30T22:00:00Z\",\"EndDate:\"2016-10-30T23:00:00Z\",\"OrderListingFilterDateSearchType:0,\"MarketPlaceOrderIds:null,\"BeezUPOrderStatusNames:null,\"ResultByPage:20,\"MerchantOrderIds:null,\"PageIndex:0,\"MarketPlaceTechnicalCodes:[\"PriceMinister\",\"Amazon\",\"CDiscount\",\"Mirakl\"],\"MarketPlaceBusinessCodes:[\"PRICEMINISTER\"],\"AccountIds:[1234,987],\"StoreIds:[\"00000000-0000-0000-0000-00000000007c\"],\"BuyerFullName:null}\n        lastUpdateUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T15:10:12.000Z\n        orderCount:\n          type: integer\n          format: int32\n          example: 1024\n        processingStatus:\n          $ref: '#/components/schemas/orderExportationReportingProcessingStatus'\n        remainingOrderCount:\n          type: integer\n          format: int32\n          example: 0\n        resumedUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T13:39:12.000Z\n        sourceType:\n          $ref: '#/components/schemas/sourceType'\n        sourceUserId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        sourceUserName:\n          type: string\n          example: Marilyn monroe\n        suspendedUtcDate:\n          type: string\n          format: date-time\n          example: 2017-04-01T13:39:12.000Z\n        timeoutDuration:\n          type: string\n          example: '00:30:00'\n        warningMessage:\n          type: string\n          example: You have a warning here\n      description: Represent the reporting of the Order report exportations\n    dateSearchType:\n      type: string\n      description: Indicates on which date you want to make the filter\n      default: Modification\n      enum:\n        - Modification\n        - Purchase\n        - MarketPlaceModification\n    invoiceAvailabilityType:\n      type: string\n      description: Indicates on which invoice availability to filter\n      example: All\n      x-lov: InvoiceAvailabilityType\n    orderMerchantInfoSynchronizationStatus:\n      type: string\n      description: Indicates on which order merchant info synchronization status to filter\n      example: All\n      x-lov: OrderMerchantInfoSynchronizationStatus\n    pageSize:\n      maximum: 100\n      minimum: 25\n      type: integer\n      description: Indicate the order count per page\n      format: int32\n      example: 100\n      default: 100\n    pageNumber:\n      minimum: 1\n      type: integer\n      description: Indicates the page number\n      format: int32\n      example: 1\n      default: 1\n    order_Buyer_Name:\n      type: string\n      description: Buyer full name\n      example: Monroe\n    orderListRequestWithoutPagination:\n      required:\n        - beginPeriodUtcDate\n        - endPeriodUtcDate\n      type: object\n      properties:\n        marketplaceTechnicalCodes:\n          type: array\n          example:\n            - PriceMinister\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'\n        marketplaceBusinessCodes:\n          type: array\n          example:\n            - PRICEMINISTER\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'\n        accountIds:\n          type: array\n          description: Account Id list\n          example:\n            - '12345'\n          items:\n            $ref: '#/components/schemas/accountId'\n        storeIds:\n          type: array\n          description: Store Id list\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_StoreId'\n        beezUPOrderStatuses:\n          type: array\n          example:\n            - InProgress\n          items:\n            $ref: '#/components/schemas/beezUPOrderStatus'\n        dateSearchType:\n          $ref: '#/components/schemas/dateSearchType'\n        beginPeriodUtcDate:\n          type: string\n          description: |\n            The begin period you want to make the search. \\\n            The period MUST not be greater than 30 days.\n            The begin period MUST be lower than the end period.\n          format: date-time\n          example: 2017-03-01T13:10:01.000Z\n        endPeriodUtcDate:\n          type: string\n          description: |\n            The end period of you search. \\\n            The period MUST not be greater than 30 days. \\\n            The end period MUST be greater than the begin period.\n            The end period MUST be lower to the current date.\n          format: date-time\n          example: 2017-04-01T13:10:01.000Z\n        invoiceAvailabilityType:\n          $ref: '#/components/schemas/invoiceAvailabilityType'\n        order_Buyer_Name:\n          $ref: '#/components/schemas/order_Buyer_Name'\n        marketplaceOrderIds:\n          type: array\n          example:\n            - AmazonOrderId1234\n          items:\n            $ref: '#/components/schemas/marketplaceOrderId'\n        orderMerchantInfoSynchronizationStatus:\n          $ref: '#/components/schemas/orderMerchantInfoSynchronizationStatus'\n        order_MerchantOrderIds:\n          type: array\n          description: Merchant order id list\n          example:\n            - MyOrderId1234\n          items:\n            $ref: '#/components/schemas/order_MerchantOrderId'\n    orderListRequest:\n      allOf:\n        - $ref: '#/components/schemas/orderListRequestWithoutPagination'\n        - required:\n            - pageNumber\n            - pageSize\n          type: object\n          properties:\n            pageSize:\n              $ref: '#/components/schemas/pageSize'\n            pageNumber:\n              $ref: '#/components/schemas/pageNumber'\n    exportOrderListFormat:\n      type: string\n      description: The type of the file to export\n      example: csv\n      default: csv\n      enum:\n        - csv\n    exportOrderListRequest:\n      required:\n        - orderListRequestWithoutPagination\n        - storeId\n      type: object\n      properties:\n        format:\n          $ref: '#/components/schemas/exportOrderListFormat'\n        storeId:\n          $ref: '#/components/schemas/BeezUP_Common_StoreId'\n        orderListRequestWithoutPagination:\n          $ref: '#/components/schemas/orderListRequestWithoutPagination'\n      description: \u003e-\n        The message request to export order list. The store identifier is\n        requested to regroup the exportations.\n    orderExportationReportingProcessingStatus:\n      type: string\n      example: Done\n      enum:\n        - None\n        - InProgress\n        - Done\n        - Failed\n        - AlreadyInProgress\n        - Aborted\n        - Suspended\n    automaticTransitionInfoListLinks:\n      required:\n        - configure\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetAutomaticTransitionsLink'\n        configure:\n          $ref: '#/components/schemas/links.ConfigureAutomaticTransitionsLink'\n    automaticTransitionInfoList:\n      required:\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/automaticTransitionInfoListLinks'\n        automaticTransitionInfos:\n          type: array\n          items:\n            $ref: '#/components/schemas/automaticTransitionInfo'\n    businessOperationType:\n      type: string\n      example: ShipOrder\n      x-lov: OrderChangeBusinessOperationType\n    automaticTransitionInfoLinks:\n      required:\n        - configure\n      type: object\n      properties:\n        configure:\n          $ref: '#/components/schemas/links.ConfigureAutomaticTransitionsLink'\n    automaticTransitionInfo:\n      allOf:\n        - $ref: '#/components/schemas/automaticTransition'\n        - required:\n            - beezUPOrderStatus\n            - businessOperationType\n            - marketplaceBusinessCode\n          type: object\n          properties:\n            marketplaceBusinessCode:\n              $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'\n            beezUPOrderStatus:\n              $ref: '#/components/schemas/beezUPOrderStatus'\n            businessOperationType:\n              $ref: '#/components/schemas/businessOperationType'\n            links:\n              $ref: '#/components/schemas/automaticTransitionInfoLinks'\n    configureAutomaticTransitionRequest:\n      required:\n        - automaticTransitions\n      type: object\n      properties:\n        automaticTransitions:\n          type: array\n          items:\n            $ref: '#/components/schemas/automaticTransition'\n    automaticTransition:\n      required:\n        - accountId\n        - enabled\n        - marketplaceTechnicalCode\n        - orderStatusTransitionId\n      type: object\n      properties:\n        marketplaceTechnicalCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'\n        accountId:\n          $ref: '#/components/schemas/accountId'\n        orderStatusTransitionId:\n          type: integer\n          format: int32\n          example: 1234\n        enabled:\n          type: boolean\n          example: false\n    orderIdentifier:\n      required:\n        - accountId\n        - beezUPOrderId\n        - marketplaceTechnicalCode\n      type: object\n      properties:\n        marketplaceTechnicalCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'\n        accountId:\n          $ref: '#/components/schemas/accountId'\n        beezUPOrderId:\n          $ref: '#/components/schemas/beezUPOrderId'\n    clearMerchantOrderInfoListRequest:\n      required:\n        - orders\n      type: object\n      properties:\n        orders:\n          maxItems: 100\n          minItems: 1\n          uniqueItems: true\n          type: array\n          example:\n            - marketplaceTechnicalCode: Amazon\n              accountId: '1234'\n              beezUPOrderId: '0'\n            - marketplaceTechnicalCode: Amazon\n              accountId: '5678'\n              beezUPOrderId: '0'\n            - marketplaceTechnicalCode: Ebay\n              accountId: '9876'\n              beezUPOrderId: '0'\n          items:\n            $ref: '#/components/schemas/orderIdentifier'\n    setMerchantOrderInfoListRequest:\n      required:\n        - order_MerchantECommerceSoftwareName\n        - order_MerchantECommerceSoftwareVersion\n        - orders\n      type: object\n      properties:\n        order_MerchantECommerceSoftwareName:\n          $ref: '#/components/schemas/order_MerchantECommerceSoftwareName'\n        order_MerchantECommerceSoftwareVersion:\n          $ref: '#/components/schemas/order_MerchantECommerceSoftwareVersion'\n        orders:\n          maxItems: 100\n          minItems: 1\n          uniqueItems: true\n          type: array\n          example:\n            - marketplaceTechnicalCode: Amazon\n              accountId: '1234'\n              beezUPOrderId: 8D47FF1427A26B064ca98e95f644361ada5a5be0bbb3b53\n              order_MerchantOrderId: BX1234\n            - marketplaceTechnicalCode: Amazon\n              accountId: '5678'\n              beezUPOrderId: 8D47FF149F213D055f26e3c413e4c9ba5c5cfda460547a4\n              order_MerchantOrderId: BX5678\n            - marketplaceTechnicalCode: Ebay\n              accountId: '9876'\n              beezUPOrderId: 8D47FF150217B60bdec05ab61c445d1a59e3da050b52823\n              order_MerchantOrderId: BX9876\n          items:\n            $ref: '#/components/schemas/setMerchantOrderInfoListRequestItem'\n    setMerchantOrderInfoListRequestItem:\n      allOf:\n        - $ref: '#/components/schemas/orderIdentifier'\n        - required:\n            - order_MerchantOrderId\n          type: object\n          properties:\n            order_MerchantOrderId:\n              $ref: '#/components/schemas/order_MerchantOrderId'\n    setMerchantOrderInfoRequest:\n      required:\n        - order_MerchantECommerceSoftwareName\n        - order_MerchantECommerceSoftwareVersion\n        - order_MerchantOrderId\n      type: object\n      properties:\n        order_MerchantOrderId:\n          $ref: '#/components/schemas/order_MerchantOrderId'\n        order_MerchantECommerceSoftwareName:\n          $ref: '#/components/schemas/order_MerchantECommerceSoftwareName'\n        order_MerchantECommerceSoftwareVersion:\n          $ref: '#/components/schemas/order_MerchantECommerceSoftwareVersion'\n    accountSynchronizationList:\n      type: object\n      properties:\n        accountSynchronizations:\n          type: array\n          items:\n            $ref: '#/components/schemas/accountSynchronization'\n    accountSynchronization:\n      required:\n        - accountId\n        - marketplaceBusinessCode\n        - marketplaceTechnicalCode\n      type: object\n      properties:\n        accountId:\n          $ref: '#/components/schemas/accountId'\n        completedHarvestSynchroUtcDate:\n          type: string\n          format: date-time\n        marketplaceBusinessCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'\n        marketplaceTechnicalCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'\n    processing:\n      type: boolean\n      description: \u003e-\n        If true, there is currently a harvest or an order change in progress.\n        Otherwise false.\n      example: false\n    links.GetOrderLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000\n            method: GET\n    orderHeaderLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetOrderLink'\n    orderHeader:\n      required:\n        - accountId\n        - beezUPOrderId\n        - etag\n        - links\n        - marketplaceBusinessCode\n        - marketplaceTechnicalCode\n        - order_LastModificationUtcDate\n        - order_MarketplaceLastModificationUtcDate\n        - order_MarketplaceOrderId\n        - order_PurchaseUtcDate\n        - order_Status_BeezUPOrderStatus\n        - processing\n      type: object\n      properties:\n        marketplaceTechnicalCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'\n        accountId:\n          $ref: '#/components/schemas/accountId'\n        beezUPOrderId:\n          $ref: '#/components/schemas/beezUPOrderId'\n        beezUPOrderUrl:\n          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'\n        marketplaceBusinessCode:\n          $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'\n        order_MarketplaceOrderId:\n          $ref: '#/components/schemas/marketplaceOrderId'\n        order_Status_BeezUPOrderStatus:\n          $ref: '#/components/schemas/beezUPOrderStatus'\n        order_Status_MarketplaceOrderStatus:\n          $ref: '#/components/schemas/marketplaceOrderStatus'\n        order_MerchantOrderId:\n          $ref: '#/components/schemas/order_MerchantOrderId'\n        order_MerchantECommerceSoftwareName:\n          $ref: '#/components/schemas/order_MerchantECommerceSoftwareName'\n        order_MerchantECommerceSoftwareVersion:\n          $ref: '#/components/schemas/order_MerchantECommerceSoftwareVersion'\n        order_PurchaseUtcDate:\n          type: string\n          description: The purchase date of this order\n          format: date-time\n          example: 2017-03-31T21:30:23.000Z\n        order_LastModificationUtcDate:\n          type: string\n          description: The last modification UTC date done by BeezUP of this order\n          format: date-time\n          example: 2017-04-16T10:30:23.000Z\n        order_MarketplaceLastModificationUtcDate:\n          type: string\n          description: The last modification UTC date done by the marketplace on this order\n          format: date-time\n          example: 2017-04-16T10:25:23.000Z\n        order_Buyer_Name:\n          $ref: '#/components/schemas/order_Buyer_Name'\n        order_TotalPrice:\n          type: number\n          description: \u003e-\n            The total price of this order (corresponding to the amount paid by\n            the customer)\n          format: decimal\n          example: 101.42\n        order_CurrencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        order_Invoice_Number:\n          type: string\n          description: The order invoice number\n        order_Invoice_Uri:\n          type: string\n          description: The order invoice URI\n        processing:\n          $ref: '#/components/schemas/processing'\n        etag:\n          $ref: '#/components/schemas/etag'\n        links:\n          $ref: '#/components/schemas/orderHeaderLinks'\n      description: \u003e-\n        Describe the basic information related to an order. All properties with\n        the prefix order_ are translated in the list of values\n        /user/lov/OrderMetaInfoOrderDetails\n    etag:\n      type: string\n      description: \u003e\n        ETag value to identify the order.\\\n\n        This information is required for the operation GetOrder and\n        ChangeOrder.\\\n\n        For more details go to this link:\n        http://tools.ietf.org/html/rfc7232#section-2.3\n      example: '\"ca071a4580129f932a03971968ffef69\"'\n    orderItem:\n      required:\n        - beezUPOrderItemId\n        - orderItem_OrderItemType\n      type: object\n      properties:\n        beezUPOrderItemId:\n          type: string\n          description: The BeezUP identifier of the order Item\n          example: '1'\n        orderItem_OrderItemType:\n          type: string\n          description: The order item type of the order item\n          example: Product\n        orderItem_MerchantImportedProductId:\n          type: string\n          description: \u003e-\n            The product id indicated in the catalog importation in BeezUP system\n            for this order item. This property will help you to match the order\n            to the inventory system.\n          example: '73267'\n        orderItem_MerchantImportedProductIdColumnName:\n          type: string\n          description: \u003e-\n            The column name for the product id indicated in the catalog\n            importation in BeezUP system related to this order item. This\n            property will help you to match the order to the inventory system.\n          example: reference\n        orderItem_MerchantImportedProductUrl:\n          type: string\n          description: \u003e-\n            The product url indicated in the catalog importation in BeezUP\n            system related to this order item\n          example: http://blabla.com/my-folder/73267.html\n        orderItem_MerchantProductIdColumnName:\n          type: string\n          description: \u003e-\n            The column name indicate in the mapping for the product id related\n            to the order item\n          example: reference_produit\n        orderItem_BeezUPStoreId:\n          type: string\n          description: \u003e-\n            The store id in the beezup system related to the order item. This\n            property will help you to match the order to the inventory system.\n          example: 00000000-cceb-4c20-b2c9-000000000000\n        orderItem_ItemTax:\n          type: number\n          description: The tax of the order item\n          format: decimal\n          example: 0\n        orderItem_Title:\n          type: string\n          description: The title of the order item\n          example: bLA acide-plomb 6v-4.5ah 70x48x106mm\n        orderItem_ImageUrl:\n          type: string\n          description: The URL of the image of the order item\n          example: http://blabla.com//das6-45.jpg\n        orderItem_MerchantProductId:\n          type: string\n          description: The merchant product id of the order item\n          example: BlaLdas6-4.5\n        orderItem_MarketPlaceProductId:\n          type: string\n          description: The marketplace product identifier of the order item\n          example: ''\n        orderItem_gtin:\n          type: string\n          description: The order item gtin\n          example: gtin_sample\n        orderItem_ItemPrice:\n          type: number\n          description: The price of the order item\n          format: decimal\n          example: 6.86\n        orderItem_Quantity:\n          type: number\n          description: The quantity of the order item\n          format: decimal\n          example: 1\n        orderItem_TotalPrice:\n          type: number\n          description: The total price of the order item\n          format: decimal\n          example: 6.86\n        orderItem_Shipping_Price:\n          type: number\n          description: The shipping price of the order item\n          format: decimal\n          example: 0\n        orderItem_Condition:\n          type: string\n          description: The merchant product condition of the order item\n          example: New\n        orderItem_MarketplaceProductUri:\n          type: string\n          description: The merchant product uri of the order item\n          example: http://beezupblob.com/productLink.xml\n        orderItem_MarketplaceImageUri:\n          type: string\n          description: The marketplace image uri\n          example: http://beezupblob.com/marketplaceImg.jpg\n      description: \u003e-\n        Describe an order item. All properties with the prefix orderItem_ are\n        translated in the list of values /user/lov/OrderMetaInfoOrderItems\n    orderLinks:\n      allOf:\n        - $ref: '#/components/schemas/orderHeaderLinks'\n        - required:\n            - clearMerchantInfo\n            - harvest\n            - history\n            - setMerchantInfo\n          type: object\n          properties:\n            history:\n              $ref: '#/components/schemas/links.GetOrderHistoryLink'\n            harvest:\n              $ref: '#/components/schemas/links.HarvestOrderLink'\n            setMerchantInfo:\n              $ref: '#/components/schemas/links.SetMerchantOrderInfoLink'\n            clearMerchantInfo:\n              $ref: '#/components/schemas/links.ClearMerchantOrderInfoLink'\n    links.GetOrderHistoryLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/history\n            method: GET\n    links.SetMerchantOrderInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: setMerchantOrderInfoRequest\n    links.ClearMerchantOrderInfoLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo\n            method: POST\n    links.HarvestOrderLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/harvest\n            method: POST\n    order:\n      allOf:\n        - $ref: '#/components/schemas/orderHeader'\n        - required:\n            - links\n            - orderItems\n            - transitionLinks\n          type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/orderLinks'\n            order_MarketPlaceChannel:\n              type: string\n              description: \u003e-\n                Useful to identify the origin of the order. For example in\n                Amazon.\n              example: Amazon France\n            order_TotalTax:\n              type: number\n              description: The total tax of this order\n              format: decimal\n              example: 0\n            order_TotalCommission:\n              type: number\n              description: The total commission of this order\n              format: decimal\n              example: 0\n            order_PaymentMethod:\n              type: string\n              description: The payment method of this order\n              example: 1 / 1X\n            order_PayingUtcDate:\n              type: string\n              description: The UTC date of the payment of this order\n              format: date-time\n              example: 2017-04-01T13:22:01.000Z\n            order_Comment:\n              type: string\n              description: The comment associated to this order\n              example: This is a comment\n            order_Shipping_FirstName:\n              type: string\n              description: Order Shipping first name\n              example: Monroe\n            order_Shipping_LastName:\n              type: string\n              description: Order Shipping last name\n              example: Monroe\n            order_Shipping_Civility:\n              type: string\n              description: \u003e-\n                The civility of the person in the shipping address for this\n                order\n              example: MRS\n            order_Shipping_CompanyName:\n              type: string\n              description: The company name of the shipping address for this order\n              example: My Company\n            order_Shipping_AddressName:\n              type: string\n              description: The name of the person in the shipping address for this order\n              example: Jacques BAUREGARD\n            order_Shipping_Email:\n              type: string\n              description: The email of the person in the shipping address for this order\n              example: client_000000@manomano.fr\n            order_Shipping_AddressLine1:\n              type: string\n              description: The shipping address line 1 of this order\n              example: 5 rue amélie\n            order_Shipping_AddressLine2:\n              type: string\n              description: The shipping address line 2 of this order\n              example: BDR\n            order_Shipping_AddressLine3:\n              type: string\n              description: The shipping address line 3 of this order\n              example: RDC\n            order_Shipping_AddressPostalCode:\n              type: string\n              description: The shipping address postal code of this order\n              example: '13014'\n            order_Shipping_AddressCity:\n              type: string\n              description: The shipping address city of this order\n              example: Marseille\n            order_Shipping_AddressStateOrRegion:\n              type: string\n              description: The shipping address state or region of this order\n              example: BDR\n            order_Shipping_AddressCountryName:\n              type: string\n              description: The shipping address country name\n              example: France\n            order_Shipping_AddressCountryIsoCodeAlpha2:\n              type: string\n              description: \u003e-\n                The shipping address country iso code alpha 2 (see\n                http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table\n                for more details)\n              example: FR\n            order_Shipping_Phone:\n              type: string\n              description: \u003e-\n                The phone number of the person in the shipping address for this\n                order\n              example: 33000000041\n            order_Shipping_MobilePhone:\n              type: string\n              description: \u003e-\n                The mobile phone number of the person in the shipping address\n                for this order\n              example: 33000000042\n            order_Shipping_Price:\n              type: number\n              description: The shipping price of this order\n              format: decimal\n              example: 6.9\n            order_Shipping_Method:\n              type: string\n              description: The shipping method of this order\n              example: DPD Domicile\n            order_Shipping_ShippingTax:\n              type: number\n              description: The shipping tax for this order\n              format: decimal\n              example: 0\n            order_Shipping_EarliestShipUtcDate:\n              type: string\n              description: The UTC date of the earliest ship for this order\n              format: date-time\n              example: 2017-04-02T21:30:00.000Z\n            order_Shipping_LatestShipUtcDate:\n              type: string\n              description: The UTC date of the latest ship for this order\n              format: date-time\n              example: 2017-04-30T21:30:00.000Z\n            order_Buyer_Identifier:\n              type: string\n              description: The buyer identifier for this order\n              example: '1234567890'\n            order_Buyer_FirstName:\n              type: string\n              description: Order Buyer first name\n              example: Monroe\n            order_Buyer_LastName:\n              type: string\n              description: Order Buyer last name\n              example: Monroe\n            order_Buyer_Civility:\n              type: string\n              description: The buyer civility for this order\n              example: Marseille\n            order_Buyer_CompanyName:\n              type: string\n              description: The buyer company name for this order\n              example: Marsillia\n            order_Buyer_Email:\n              type: string\n              description: The email of the buyer for this order\n              example: client_000000@manomano.fr\n            order_Buyer_AddressLine1:\n              type: string\n              description: The Buyer address line 1 of this order\n              example: 5 rue amélie\n            order_Buyer_AddressLine2:\n              type: string\n              description: The Buyer address line 2 of this order\n              example: BDR\n            order_Buyer_AddressLine3:\n              type: string\n              description: The Buyer address line 3 of this order\n              example: RDC\n            order_Buyer_AddressPostalCode:\n              type: string\n              description: The Buyer address postal code of this order\n              example: '13014'\n            order_Buyer_AddressCity:\n              type: string\n              description: The Buyer address city of this order\n              example: Marseille\n            order_Buyer_AddressStateOrRegion:\n              type: string\n              description: The Buyer address state or region of this order\n              example: BDR\n            order_Buyer_AddressCountryName:\n              type: string\n              description: The Buyer address country name\n              example: France\n            order_Buyer_AddressCountryIsoCodeAlpha2:\n              type: string\n              description: \u003e-\n                The Buyer address country iso code alpha 2 (see\n                http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table\n                for more details)\n              example: FR\n            order_Buyer_Phone:\n              type: string\n              description: The phone number of the buyer for this order\n              example: 33000000101\n            order_Buyer_MobilePhone:\n              type: string\n              description: The mobile phone number of the buyer for this order\n              example: 33000000042\n            order_IsPrime:\n              type: boolean\n              description: Indicates if the order is considered as Prime (only on Amazon)\n              example: true\n            order_FulfilledBy:\n              type: string\n              description: The order FulfilledBy\n            order_IsBusiness:\n              type: boolean\n              description: The order IsBusiness\n            order_OrderSourceUri:\n              type: string\n              description: \u003e\n                Technical information: The url to the source of this order. We\n                received this information from the marketplace.\n              format: uri\n              example: http://beezupblob.com/order.xml\n            order_OrderItemsSourceUri:\n              type: string\n              description: \u003e\n                Technical information: The url to the source of this order\n                items. We received this information from the marketplace.\n              format: uri\n              example: http://beezupblob.com/orderItems.xml\n            orderItems:\n              type: array\n              items:\n                $ref: '#/components/schemas/orderItem'\n            transitionLinks:\n              $ref: '#/components/schemas/orderTransitionLinks'\n          description: \u003e-\n            Describe in details all informations related to an order. All\n            properties with the prefix order_ are translated in the list of\n            values /user/lov/OrderMetaInfoOrderDetails.\n    links.ChangeOrderLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          properties:\n            rel:\n              type: string\n              description: Indicate the relation name related to the link\n              example: self\n        - type: object\n          example:\n            rel: ShipOrder\n            href: \u003e-\n              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder\n            method: POST\n            templated: 'true'\n            parameters:\n              If-Match:\n                in: header\n                value: '\"ca071a4580129f932a03971968ffef69\"'\n                required: true\n                type: string\n              testMode:\n                in: query\n                type: boolean\n                required: false\n                value: 'false'\n              userName:\n                in: query\n                type: string\n                required: true\n              request:\n                in: body\n                type: object\n                schema: changeOrderRequest\n                properties:\n                  order_Shipping_FulfillmentDate:\n                    required: true\n                    type: date-time\n                  order_Shipping_ShipperTrackingNumber:\n                    required: true\n                    type: string\n                  order_Shipping_CarrierName:\n                    required: true\n                    type: string\n                    lovRequired: 'true'\n                    lovLink:\n                      href: /v2/user/PriceMinisterCarrierName\n                  order_Shipping_Method:\n                    required: true\n                    type: string\n                    lovRequired: 'false'\n                    lovLink:\n                      href: /v2/user/ShippingMethod_PriceMinister\n    orderTransitionLinks:\n      type: array\n      description: Contains the authorized change actions for an order\n      example:\n        - rel: ShipOrder\n          href: \u003e-\n            /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder\n          method: POST\n          templated: 'true'\n          parameters:\n            If-Match:\n              in: header\n              value: '\"ca071a4580129f932a03971968ffef69\"'\n              required: true\n              type: string\n            testMode:\n              in: query\n              type: boolean\n              required: false\n              value: 'false'\n            userName:\n              in: query\n              type: string\n              required: true\n            request:\n              in: body\n              type: object\n              schema: changeOrderRequest\n              properties:\n                order_Shipping_FulfillmentDate:\n                  required: true\n                  type: date-time\n                order_Shipping_ShipperTrackingNumber:\n                  required: true\n                  type: string\n                order_Shipping_CarrierName:\n                  required: true\n                  type: string\n                  lovRequired: 'true'\n                  lovLink:\n                    href: /v2/user/PriceMinisterCarrierName\n                order_Shipping_Method:\n                  required: true\n                  type: string\n                  lovRequired: 'false'\n                  lovLink:\n                    href: /v2/user/ShippingMethod_PriceMinister\n        - rel: CancelOrder\n          href: \u003e-\n            /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/CancelOrder\n          method: POST\n          templated: 'true'\n          parameters:\n            If-Match:\n              in: header\n              value: '\"ca071a4580129f932a03971968ffef69\"'\n              required: true\n              type: string\n            testMode:\n              in: query\n              type: boolean\n              required: false\n              value: 'false'\n            userName:\n              in: query\n              type: string\n              required: true\n            request:\n              in: body\n              type: object\n              schema: changeOrderRequest\n              properties:\n                order_Cancel_Reason:\n                  required: true\n                  type: string\n      items:\n        $ref: '#/components/schemas/links.ChangeOrderLink'\n    orderIndex:\n      required:\n        - links\n        - lovLinks\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/orderIndexLinks'\n        lovLinks:\n          $ref: '#/components/schemas/orderIndexLovLinks'\n    links.GetOrderIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders\n            method: GET\n    orderIndexLinks:\n      required:\n        - autoTransitions\n        - clearMerchantInfos\n        - export\n        - harvest\n        - lightOrders\n        - orders\n        - self\n        - setMerchantInfos\n        - status\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetOrderIndexLink'\n        status:\n          $ref: '#/components/schemas/links.GetMarketplaceAccountsSynchronizationLink'\n        harvest:\n          $ref: '#/components/schemas/links.HarvestAllLink'\n        setMerchantInfos:\n          $ref: '#/components/schemas/links.SetMerchantOrderInfoListLink'\n        clearMerchantInfos:\n          $ref: '#/components/schemas/links.ClearMerchantOrderInfoListLink'\n        export:\n          $ref: '#/components/schemas/links.ExportOrdersLink'\n        autoTransitions:\n          $ref: '#/components/schemas/links.GetAutomaticTransitionsLink'\n        exportations:\n          $ref: '#/components/schemas/links.GetOrderExportationsLink'\n        orders:\n          $ref: '#/components/schemas/links.GetOrderListFullLink'\n        lightOrders:\n          $ref: '#/components/schemas/links.GetOrderListLightLink'\n      description: Gives you all entry point operations you can do on this API\n    orderIndexLovLinks:\n      required:\n        - orderChangeBusinessOperationType\n        - orderProperty\n        - orderPropertyPosted\n        - orderState\n      type: object\n      properties:\n        orderChangeBusinessOperationType:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        orderState:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        orderProperty:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        orderPropertyPosted:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n      description: \u003e-\n        Gives you all the LOV to get the translations realated to operation\n        name, codes, property names and statuses.\n    links.GetOrderListFullLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/list/full\n            method: POST\n            properties:\n              Accept-Encoding:\n                in: header\n                required: true\n                type: ​array\n                schema: string\n              request:\n                in: body\n                required: false\n                type: object\n                schema: orderListRequest\n    links.GetOrderListLightLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/list/light\n            method: POST\n            properties:\n              request:\n                in: body\n                required: false\n                type: object\n                schema: orderListRequest\n    links.GetAutomaticTransitionsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/autoTransitions\n            method: GET\n    links.ConfigureAutomaticTransitionsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/autoTransitions\n            method: POST\n            parameters:\n              request:\n                in: body\n                request: 'true'\n                schema: configureAutomaticTransitionRequest\n    orderListLinks:\n      required:\n        - clearMerchantInfos\n        - export\n        - harvest\n        - setMerchantInfos\n        - status\n      type: object\n      properties:\n        harvest:\n          $ref: '#/components/schemas/links.HarvestAllLink'\n        setMerchantInfos:\n          $ref: '#/components/schemas/links.SetMerchantOrderInfoListLink'\n        clearMerchantInfos:\n          $ref: '#/components/schemas/links.ClearMerchantOrderInfoListLink'\n        export:\n          $ref: '#/components/schemas/links.ExportOrdersLink'\n        status:\n          $ref: '#/components/schemas/links.GetMarketplaceAccountsSynchronizationLink'\n      description: The list of actions you can do from the order list response\n    links.GetMarketplaceAccountsSynchronizationLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/status\n            method: GET\n    orderListLightLinks:\n      allOf:\n        - $ref: '#/components/schemas/orderListLinks'\n        - required:\n            - self\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/links.GetOrderListLightLink'\n    orderListFullLinks:\n      allOf:\n        - $ref: '#/components/schemas/orderListLinks'\n        - required:\n            - self\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/links.GetOrderListFullLink'\n    links.SetMerchantOrderInfoListLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/setMerchantOrderInfos\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: setMerchantOrderInfoRequest\n    links.ClearMerchantOrderInfoListLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/clearMerchantOrderInfos\n            method: POST\n    links.HarvestAllLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/marketplaces/orders/harvest\n            method: POST\n    orderListLight:\n      required:\n        - links\n        - orders\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/orderHeader'\n        links:\n          $ref: '#/components/schemas/orderListLightLinks'\n      description: |\n        The order list with minimum information we have from the orders.\\\n        The paginationResult properties can be null if the list is empty.\n    orderListFull:\n      required:\n        - links\n        - orders\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/order'\n        links:\n          $ref: '#/components/schemas/orderListFullLinks'\n      description: \u003e\n        The order list with all information we have from the orders and its\n        items.\\\n\n        The paginationResult properties can be null if the list is empty.\n    beezUPOrderStatus:\n      type: string\n      description: BeezUP order status. Unified for all marketplaces.\n      example: Shipped\n      x-lov: BeezUPOrderState\n    marketplaceOrderStatus:\n      type: string\n      description: The marketplace order state\n      example: In_progress_3\n    marketplaceOrderId:\n      type: string\n      description: The order marketplace identifier\n      example: AMAZON12345\n    orderHistory:\n      type: object\n      properties:\n        changeOrderReportings:\n          type: array\n          description: The list of change order operation\n          items:\n            $ref: '#/components/schemas/changeOrderReporting'\n        harvestOrderReportings:\n          type: array\n          items:\n            $ref: '#/components/schemas/harvestOrderReporting'\n        lastModificationUtcDate:\n          type: string\n          format: date-time\n      description: Describe the history related to an order\n    sourceType:\n      type: string\n      description: Indicates the origin of the operation\n      example: Api\n      enum:\n        - Api\n        - Go\n    executionUUID:\n      type: string\n      description: The execution identifier\n      format: uuid\n    changeOrderReporting:\n      type: object\n      properties:\n        executionUUID:\n          $ref: '#/components/schemas/executionUUID'\n        changeOrderType:\n          $ref: '#/components/schemas/businessOperationType'\n        sourceType:\n          $ref: '#/components/schemas/sourceType'\n        sourceUserId:\n          $ref: '#/components/schemas/BeezUP_Common_UserId'\n        sourceUserName:\n          type: string\n          example: Guillaume Tell\n        creationUtcDate:\n          type: string\n          description: The creation UTC date of the execution\n          format: date-time\n          example: 2017-04-01T13:10:03.000Z\n        processingStatus:\n          type: string\n          description: The processing status of the execution\n          example: Done\n        lastUpdateUtcDate:\n          type: string\n          description: The last update UTC date of the execution\n          format: date-time\n          example: 2017-04-01T13:10:05.000Z\n        errorMessage:\n          type: string\n          description: The error message during the execution\n          example: This is an error message\n        ipAddress:\n          type: string\n          description: The IP address who request this operation\n          example: 127.0.0.1\n        testMode:\n          type: boolean\n          description: This operation was a test\n          example: false\n        details:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n      description: The reporting related to a change order operation\n    harvestOrderReporting:\n      type: object\n      properties:\n        executionUUID:\n          $ref: '#/components/schemas/executionUUID'\n        creationUtcDate:\n          type: string\n          description: The creation UTC date of the execution\n          format: date-time\n          example: 2017-04-01T13:10:03.000Z\n        processingStatus:\n          type: string\n          description: The processing status of the execution\n          example: Done\n        lastUpdateUtcDate:\n          type: string\n          description: The last update UTC date of the execution\n          format: date-time\n          example: 2017-04-01T13:10:05.000Z\n        errorMessage:\n          type: string\n          description: The warning message during the execution\n          example: This is an error message\n        warningMessage:\n          type: string\n          description: The warning message during the execution\n          example: This is a warning\n        beezUPStatus:\n          $ref: '#/components/schemas/beezUPOrderStatus'\n        marketplaceStatus:\n          type: string\n          description: The order marketplace status\n          example: In_progress_3\n        beezUPForcedStatus:\n          type: string\n          description: \u003e-\n            The marketplace order status forced by BeezUP during the order\n            change oepration. This could happend when there is no status on the\n            marketplace side.\n          example: In_progress_3\n      description: The reporting related to a harvest order operation\n    changeOrderListRequest:\n      required:\n        - changeOrders\n      type: object\n      properties:\n        changeOrders:\n          type: array\n          description: The change order operations\n          items:\n            $ref: '#/components/schemas/changeOrderListRequestItem'\n      description: \u003e-\n        Contains all change order operations you want to make.  (max 100 items\n        per call)\n    changeOrderListRequestItem:\n      required:\n        - order\n      type: object\n      properties:\n        order:\n          $ref: '#/components/schemas/orderIdentifierWithETag'\n        changeOrderRequest:\n          $ref: '#/components/schemas/changeOrderRequest'\n      description: Contains the order identifier and the change order request\n    orderIdentifierWithETag:\n      allOf:\n        - $ref: '#/components/schemas/orderIdentifier'\n        - required:\n            - etag\n          type: object\n          properties:\n            etag:\n              $ref: '#/components/schemas/etag'\n    changeOrderRequest:\n      type: object\n      additionalProperties:\n        type: string\n      description: \u003e-\n        All properties with the prefix order_ are translated in the list of\n        values /user/lov#OrderMetaInfoPosted\n      example:\n        order_Shipping_ShipperTrackingNumber: 1H01845163783\n        order_Shipping_ShippingUrl: https://trackingpackage.com?number=1H01845163783\n        order_Shipping_CarrierName: La poste\n        order_Shipping_FulfillmentDate: 2014-09-23T09:58:00.000Z\n        order_Shipping_EstimatedDeliveryDate: 2014-09-24T09:58:00.000Z\n    batchOrderOperationResponse:\n      required:\n        - operations\n      type: object\n      properties:\n        operations:\n          type: array\n          items:\n            $ref: '#/components/schemas/orderOperationResponse'\n      description: The response given by the batch operation\n    orderOperationResponse:\n      required:\n        - order\n        - status\n        - success\n      type: object\n      properties:\n        order:\n          $ref: '#/components/schemas/orderIdentifier'\n        success:\n          type: boolean\n          description: Indicates if the operation succeed or not\n          example: true\n        status:\n          type: integer\n          description: Indicates the http status corresponding to the individual operation\n          example: 204\n        errors:\n          type: array\n          description: The error list\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'\n      description: The response given by the batch operation for an order\n    oMReadyMarketplaceBusinessCodeResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/listOfValueItem'\n    orderListFullWithLinks:\n      required:\n        - links\n        - orders\n        - paginationResult\n      type: object\n      properties:\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/orderWithLinks'\n        links:\n          $ref: '#/components/schemas/orderListFullLinks'\n        paginationResult:\n          $ref: '#/components/schemas/paginationResult'\n    orderListLightWithLinks:\n      required:\n        - links\n        - orders\n        - paginationResult\n      type: object\n      properties:\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/orderHeaderWithLinks'\n        links:\n          $ref: '#/components/schemas/orderListLightLinks'\n        paginationResult:\n          $ref: '#/components/schemas/paginationResult'\n    orderWithLinks:\n      allOf:\n        - $ref: '#/components/schemas/order'\n        - required:\n            - links\n            - transitionLinks\n          type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/orderLinks'\n            transitionLinks:\n              $ref: '#/components/schemas/orderTransitionLinks'\n    orderHeaderWithLinks:\n      allOf:\n        - $ref: '#/components/schemas/orderHeader'\n        - required:\n            - links\n          type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/orderHeaderLinks'\n    links.GetOrderV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: \u003e-\n              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000\n            method: GET\n    links.GetOrderHistoryV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: \u003e-\n              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/history\n            method: GET\n    links.HarvestOrderV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: \u003e-\n              /orders/v3/Amazon/1001#/00000000000000000000000000000000000000000000000/harvest\n            method: POST\n    links.SetMerchantOrderInfoV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: \u003e-\n              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: setMerchantOrderInfoRequest\n    links.ClearMerchantOrderInfoV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: \u003e-\n              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo\n            method: POST\n    links.GetOrderListLightV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: /orders/v3/list/light\n            method: POST\n            properties:\n              request:\n                in: body\n                required: false\n                type: object\n                schema: orderListRequest\n    links.HarvestAllV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: /orders/v3/harvest\n            method: POST\n    links.SetMerchantOrderInfoListV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: /orders/v3/setMerchantOrderInfos\n            method: POST\n            parameters:\n              request:\n                in: body\n                required: true\n                type: object\n                schema: setMerchantOrderInfoRequest\n    links.ClearMerchantOrderInfoListV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: /orders/v3/clearMerchantOrderInfos\n            method: POST\n    links.GetMarketplaceAccountsSynchronizationV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: /orders/v3/status\n            method: GET\n    links.ChangeOrderV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          properties:\n            rel:\n              type: string\n              description: Indicate the relation name related to the link\n              example: self\n        - type: object\n          example:\n            rel: ShipOrder\n            href: \u003e-\n              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder\n            method: POST\n            templated: 'true'\n            parameters:\n              If-Match:\n                in: header\n                value: '\"ca071a4580129f932a03971968ffef69\"'\n                required: true\n                type: string\n              testMode:\n                in: query\n                type: boolean\n                required: false\n                value: 'false'\n              userName:\n                in: query\n                type: string\n                required: true\n              request:\n                in: body\n                type: object\n                schema: changeOrderRequest\n                properties:\n                  order_Shipping_FulfillmentDate:\n                    required: true\n                    type: date-time\n                  order_Shipping_ShipperTrackingNumber:\n                    required: true\n                    type: string\n                  order_Shipping_CarrierName:\n                    required: true\n                    type: string\n                    lovRequired: 'true'\n                    lovLink:\n                      href: /v2/user/PriceMinisterCarrierName\n                  order_Shipping_Method:\n                    required: true\n                    type: string\n                    lovRequired: 'false'\n                    lovLink:\n                      href: /v2/user/ShippingMethod_PriceMinister\n    links.GetOrderListFullV3Link:\n      allOf:\n        - $ref: '#/components/schemas/link3'\n        - type: object\n          example:\n            href: /orders/v3/list/full\n            method: POST\n            properties:\n              Accept-Encoding:\n                in: header\n                required: true\n                type: string\n              request:\n                in: body\n                required: false\n                type: object\n                schema: orderListRequest\n    errorResponseMessage:\n      required:\n        - errors\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/userErrorMessage'\n      x-exclude: true\n    changeOrderListRequestV2:\n      required:\n        - changeOrders\n      type: object\n      properties:\n        changeOrders:\n          type: array\n          description: The change order operations\n          items:\n            $ref: '#/components/schemas/changeOrderListRequestItemV2'\n      description: \u003e-\n        Contains all change order operations you want to make.  (max 100 items\n        per call)\n    listOfValueItem:\n      required:\n        - codeIdentifier\n        - intIdentifier\n      type: object\n      properties:\n        position:\n          type: integer\n          format: int32\n          example: 1\n        codeIdentifier:\n          type: string\n          example: FRA\n        translationText:\n          type: string\n          example: France\n        intIdentifier:\n          type: integer\n          format: int32\n          example: 1\n      description: This object is used by LOV apis\n    userErrorMessage:\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        docUrl:\n          $ref: '#/components/schemas/docUrl'\n        code:\n          $ref: '#/components/schemas/errorCode'\n        message:\n          type: string\n          description: The error message\n          example: \u003e\n            There is already an importation in progress:\n            b24d0dd8-a561-478a-9b26-34f573f03527\n        cultureName:\n          $ref: '#/components/schemas/cultureName'\n        arguments:\n          $ref: '#/components/schemas/userErrorMessageArguments'\n      x-exclude: true\n    paginationResult:\n      required:\n        - entryCount\n        - links\n        - pageCount\n        - totalEntryCount\n      type: object\n      properties:\n        entryCount:\n          minimum: 0\n          type: integer\n          description: The entry count currently returned\n          example: 25\n        pageCount:\n          minimum: 0\n          type: integer\n          description: The page count\n          example: 38\n        totalEntryCount:\n          minimum: 0\n          type: integer\n          description: The total entry count\n          example: 943\n        links:\n          $ref: '#/components/schemas/paginationResultLinks'\n      example:\n        entryCount: '25'\n        pageCount: '38'\n        totalEntryCount: '943'\n        links:\n          first:\n            href: /merchant/orders/v1/list/full\n            method: POST\n            parameters:\n              - name: request\n                in: body\n                type: object\n                schema: orderListRequest\n                value:\n                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z\n                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z\n                  pageSize: '25'\n                  pageNumber: '1'\n          last:\n            href: /merchant/orders/v1/list/full\n            method: POST\n            parameters:\n              - name: request\n                in: body\n                type: object\n                schema: orderListRequest\n                value:\n                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z\n                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z\n                  pageSize: '25'\n                  pageNumber: '38'\n          next:\n            href: /merchant/orders/v1/list/full\n            method: POST\n            parameters:\n              - name: request\n                in: body\n                type: object\n                schema: orderListRequest\n                value:\n                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z\n                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z\n                  pageSize: '25'\n                  pageNumber: '2'\n      x-exclude: true\n    orderChangeType:\n      type: string\n      description: The business operation type that can be done on an order\n      x-lov: OrderChangeBusinessOperationType\n    changeOrderListRequestItemV2:\n      required:\n        - order\n      type: object\n      properties:\n        order:\n          $ref: '#/components/schemas/orderIdentifier'\n        changeOrderRequest:\n          $ref: '#/components/schemas/changeOrderRequest'\n      description: Contains the order identifier and the change order request\n    docUrl:\n      type: string\n      description: The documentation related to this operation.\n      format: uri\n      example: https://api-docs.imn.io/#operation/EnableChannelCatalog\n      x-exclude: true\n    cultureName:\n      type: string\n      description: If the error is translated, the culture name will be indicated\n      example: en\n      x-exclude: true\n      x-lov: Go2CultureName\n    userErrorMessageArguments:\n      type: object\n      additionalProperties:\n        type: object\n        properties: {}\n      description: a dictionary string/object\n      x-exclude: true\n    beezUPMarketplaceAccountId:\n      type: integer\n      description: \u003e-\n        The marketplace account identifier in BeezUP. This account identifier is\n        based on your api settings.\n      format: int32\n      example: 1234\n    beezUPMarketplaceBusinessCode:\n      type: string\n      description: \u003e-\n        In an marketplace technical code like CDiscount you can have several\n        marketplaces like GO SPORT, etc. We identify them by a business code.\n      example: GOSPORT\n      x-lov: MarketplaceBusinessCode\n    beezUPMarketplaceTechnicalCode:\n      type: string\n      description: The technical code of the marketplace.\n      example: Amazon\n      x-lov: MarketplaceTechnicalCode\n    storeId:\n      type: string\n      description: The store identifier\n      format: guid\n      x-exclude: true\n    orderListDateSearchType:\n      type: string\n      description: Indicates on which date you want to make the filter\n      default: Modification\n      enum:\n        - Modification\n        - Purchase\n        - MarketPlaceModification\n    paginationResultLinks:\n      required:\n        - first\n        - last\n      type: object\n      properties:\n        first:\n          $ref: '#/components/schemas/link3'\n        last:\n          $ref: '#/components/schemas/link3'\n        previous:\n          $ref: '#/components/schemas/link3'\n        next:\n          $ref: '#/components/schemas/link3'\n      description: The navigation links 'first', 'last', 'next', 'previous'\n      x-exclude: true\n    userId:\n      type: string\n      description: The user identifier\n      format: guid\n      example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8\n      x-exclude: true\n    exchangedMessagesItem:\n      required:\n        - operationName\n      type: object\n      properties:\n        operationName:\n          type: string\n        requestUri:\n          type: string\n          format: uri\n        responseUri:\n          type: string\n          format: uri\n        requestUtcDate:\n          type: string\n          format: date-time\n        responseUtcDate:\n          type: string\n          format: date-time\n    link3:\n      required:\n        - href\n      type: object\n      properties:\n        label:\n          type: string\n          description: \u003e-\n            The label corresponding to the link. This label is automatically\n            translated based on the Accept-Language http header.\n          example: The translated label\n        docUrl:\n          $ref: '#/components/schemas/docUrl'\n        description:\n          type: string\n          description: The description of the link\n          example: This is a description link\n        href:\n          $ref: '#/components/schemas/href'\n        operationId:\n          $ref: '#/components/schemas/operationId'\n        method:\n          $ref: '#/components/schemas/httpMethod'\n        parameters:\n          $ref: '#/components/schemas/linkParameter3Types'\n        urlTemplated:\n          type: boolean\n          description: indicates whether the href is templated or not\n        allRequiredParamsProvided:\n          type: boolean\n          description: indicates whether all required params have been provided\n        allOptionalParamsProvided:\n          type: boolean\n          description: indicates whether all optionals params have been provided\n        info:\n          $ref: '#/components/schemas/infoSummaries'\n        rel:\n          type: string\n          description: Indicate the relation name related to the link\n      x-exclude: true\n    orderHarvestErrors:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/orderHarvestErrorValue'\n      description: The key is the OrderMetaInfo.\n    httpUrl:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n      type: string\n      description: \u003e-\n        The URL \u003ca\n        href=\"https://en.wikipedia.org/wiki/URL\"\u003ehttps://en.wikipedia.org/wiki/URL\u003c/a\u003e\n      example: http://www.mydomain.com\n      x-exclude: true\n      x-pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\n    currencyCode:\n      pattern: ^[A-Z]{3}$\n      type: string\n      description: \u003e\n        The currency code \u003ca href=\"https://en.wikipedia.org/wiki/ISO_4217\"\u003e(ISO\n        4217)\u003c/a\u003e\n      example: EUR\n      x-exclude: true\n      x-pattern: ^[A-Z]{3}$\n    href:\n      type: string\n      description: Indicate the relative uri for this link\n      example: /merchant/orders/v1/{marketplaceCode}/{IMNOrderId}\n      x-exclude: true\n    operationId:\n      type: string\n      description: The operationId to call.\n      example: GetOrder\n      x-exclude: true\n    httpMethod:\n      type: string\n      description: Indicate the http method to use on this link\n      example: GET\n      default: GET\n      enum:\n        - GET\n        - POST\n        - PATCH\n        - DELETE\n        - PUT\n        - HEAD\n      x-exclude: true\n    linkParameter3Types:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/linkParameter3'\n    infoSummaries:\n      type: object\n      properties:\n        successes:\n          type: array\n          items:\n            $ref: '#/components/schemas/successSummary'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/errorSummary'\n        warnings:\n          type: array\n          items:\n            $ref: '#/components/schemas/warningSummary'\n        informations:\n          type: array\n          items:\n            $ref: '#/components/schemas/infoSummary'\n      x-exclude: true\n    orderHarvestErrorValue:\n      required:\n        - errorMessage\n        - technicalCodePropertyName\n      type: object\n      properties:\n        technicalCodePropertyName:\n          type: string\n        errorMessage:\n          type: string\n    linkParameter3:\n      required:\n        - in\n      type: object\n      properties:\n        label:\n          type: string\n          description: \u003e-\n            The label corresponding to the link parameter. This label is\n            automatically translated based on the Accept-Language http header.\n          example: The translated label\n        value:\n          type: object\n          properties: {}\n          description: \u003e-\n            The value of the parameter. It can be an integer a string or an\n            object.\n        required:\n          type: boolean\n          example: true\n          default: false\n        in:\n          $ref: '#/components/schemas/parameterIn'\n        lovLink:\n          $ref: '#/components/schemas/LOVLink3'\n        lovRequired:\n          type: boolean\n          description: \u003e-\n            If true, you MUST indicate a value from the list of values otherwise\n            it's a freetext\n          example: true\n        description:\n          type: string\n          description: description of the parameter\n          example: the store identifier\n        schema:\n          type: string\n          description: schema of the parameter\n          example: orderListRequest\n        pattern:\n          $ref: '#/components/schemas/validationPattern'\n        properties:\n          type: object\n          description: \u003e-\n            If the parameter is an object with flexible properties\n            (additionProperties/dictionary), we will describe the properties of\n            the object.\n      x-exclude: true\n    successSummary:\n      type: object\n      properties:\n        successCode:\n          type: string\n        successMessage:\n          type: string\n        successArguments:\n          type: object\n          additionalProperties:\n            type: string\n        propertyName:\n          type: string\n        propertyValue:\n          type: string\n        objectName:\n          type: string\n    errorSummary:\n      type: object\n      properties:\n        utcDate:\n          type: string\n          format: date-time\n        errorGuid:\n          type: string\n          format: uuid\n        errorCode:\n          type: string\n        errorMessage:\n          type: string\n        technicalErrorMessage:\n          type: string\n        exceptionDetail:\n          $ref: '#/components/schemas/exceptionDetail'\n        errorArguments:\n          type: object\n          additionalProperties:\n            type: string\n        propertyName:\n          type: string\n        propertyValue:\n          type: string\n        objectName:\n          type: string\n        source:\n          type: string\n    warningSummary:\n      type: object\n      properties:\n        technicalErrorMessage:\n          type: string\n        warningMessage:\n          type: string\n        warningCode:\n          type: string\n        warningArguments:\n          type: object\n          additionalProperties:\n            type: string\n    infoSummary:\n      type: object\n      properties:\n        informationCode:\n          type: string\n        informationMessage:\n          type: string\n        informationArguments:\n          type: object\n          additionalProperties:\n            type: string\n        propertyName:\n          type: string\n        propertyValue:\n          type: string\n        objectName:\n          type: string\n    parameterIn:\n      type: string\n      description: \u003e\n        * path: if the parameter must be pass in the path uri\n\n        * header: if the parameter must be passed in http header\n\n        * query: if the parameter must be passed in querystring\n\n        * body: if the parameter must be passed in the body\n\n        * file: if the parameter must be passed in a multipart/form-data\n        (https://swagger.io/docs/specification/2-0/file-upload/)\n      example: path\n      enum:\n        - path\n        - header\n        - query\n        - body\n        - file\n      x-exclude: true\n    LOVLink3:\n      required:\n        - href\n      type: object\n      properties:\n        href:\n          type: string\n          description: Indicate the uri to the list of value\n          format: uri\n          example: /merchant/lov/v1/Go2CultureName\n        method:\n          $ref: '#/components/schemas/httpMethod'\n      description: Describe the way you have to follow to get access to the LOV\n      x-exclude: true\n    validationPattern:\n      type: string\n      description: The regular expression to validate the value\n      example: '*.-api$'\n    linkParameterProperty3:\n      required:\n        - type\n      type: object\n      properties:\n        label:\n          type: string\n          description: \u003e-\n            The label corresponding to the link parameter property. This label\n            is automatically translated based on the Accept-Language http\n            header.\n          example: The translated label\n        value:\n          type: object\n          properties: {}\n          description: \u003e-\n            The value of the parameter. It can be an integer a string or an\n            object.\n        required:\n          type: boolean\n          example: true\n        type:\n          $ref: '#/components/schemas/parameterType'\n        lovLink:\n          $ref: '#/components/schemas/LOVLink3'\n        lovRequired:\n          type: boolean\n          description: \u003e-\n            If true, you MUST use indicate a value from the list of values\n            otherwise it's a freetext\n          example: true\n        description:\n          type: string\n          description: description of the parameter\n          example: the store identifier\n        schema:\n          type: string\n          description: schema of the parameter\n          example: orderListRequest\n        pattern:\n          $ref: '#/components/schemas/validationPattern'\n      x-exclude: true\n    exceptionDetail:\n      type: object\n      properties:\n        helpLink:\n          type: string\n        message:\n          type: string\n        stackTrace:\n          type: string\n        type:\n          type: string\n    parameterType:\n      type: string\n      description: The value type of the parameter\n      example: string\n      default: string\n      enum:\n        - string\n        - integer\n        - number\n        - boolean\n        - object\n        - array\n        - date\n        - date-time\n        - file\n      x-exclude: true\n    subscriptionLinks:\n      type: object\n      properties:\n        reporting:\n          $ref: '#/components/schemas/link3'\n        activate:\n          $ref: '#/components/schemas/link3'\n        deactivate:\n          $ref: '#/components/schemas/link3'\n        retry:\n          $ref: '#/components/schemas/link3'\n        delete:\n          $ref: '#/components/schemas/link3'\n    subscriptionIndex:\n      allOf:\n        - $ref: '#/components/schemas/subscription'\n        - type: object\n          properties:\n            links:\n              $ref: '#/components/schemas/subscriptionLinks'\n    createSubscriptionRequest:\n      required:\n        - merchantApplicationName\n        - merchantApplicationVersion\n        - name\n        - targetUrl\n      type: object\n      properties:\n        targetUrl:\n          $ref: '#/components/schemas/httpUrl'\n        name:\n          $ref: '#/components/schemas/subscriptionName'\n        merchantApplicationName:\n          $ref: '#/components/schemas/subscriptionMerchantApplicationName'\n        merchantApplicationVersion:\n          $ref: '#/components/schemas/subscriptionMerchantApplicationVersion'\n        merchantEmailAlert:\n          $ref: '#/components/schemas/email'\n      x-format: Message\n    subscriptionPushReporting:\n      required:\n        - duration\n        - eventId\n        - lastOrderModificationUtcDate\n        - orderCount\n        - subscriptionId\n        - succeed\n      type: object\n      properties:\n        subscriptionId:\n          $ref: '#/components/schemas/subscriptionId'\n        eventId:\n          $ref: '#/components/schemas/messageId'\n        succeed:\n          type: boolean\n          description: Indicates if the push operation has succeed\n        lastOrderModificationUtcDate:\n          type: string\n          description: \u003e-\n            This modification date correspond to the last order pushed by your\n            subscription consumer\n          format: date-time\n        retryCount:\n          type: integer\n          description: \u003e-\n            The retry count. When we the retry count will reach maximum retry\n            count, the subscription will be deactivated.\n        maxRetryCount:\n          type: integer\n          description: \u003e-\n            The maximum BeezUP will retry to push orders. When we the retry\n            count will reach maximum retry count, the subscription will be\n            deactivated.\n        nextScheduledRetryUtcDate:\n          type: string\n          description: The next scheduled  date we retry to send orders\n          format: date-time\n        errorMessage:\n          $ref: '#/components/schemas/errorResponseMessage'\n        requestUri:\n          $ref: '#/components/schemas/httpUrl'\n        responseUri:\n          $ref: '#/components/schemas/httpUrl'\n        orderCount:\n          type: integer\n          description: The order count sent\n          format: int32\n        duration:\n          type: string\n          description: The duration of the push operation\n          format: TimeSpan\n        httpStatus:\n          type: integer\n          description: The HTTP status received from the consumer\n          format: int32\n      description: The subscription push reporting\n    activateSubscriptionRequest:\n      type: object\n      properties:\n        recoverBeginPeriodOrderLastModificationUtcDate:\n          type: string\n          description: \u003e-\n            If set, the date must be in the past the subscription will recover\n            existing orders using the begin period order last modification date.\n            If not set then you will receive new/updated orders in real-time.\n          format: date-time\n        recoverEndPeriodOrderLastModificationUtcDate:\n          type: string\n          description: \u003e-\n            If end period set, first the date must be in the past, the\n            subscription will recover existing orders using the begin and the\n            end period order last modification date. \n\n            If end period is not set and the begin period is set, then you will\n            recover existing orders from the past using the begin period last\n            modification date and after than you will continue to receive\n            new/updated orders in real-time.\n\n            If begin/end period are not set then you will receive new/updated\n            orders in real-time.\n\n            REMARK: The begin period is required if the end period is fulfilled.\n\n            REMARK: If the end period is order last modification date is\n            indicated then once we have push all orders to your target url the\n            subscription will be desactivated.\n          format: date-time\n      x-format: Message\n    subscription:\n      required:\n        - id\n        - merchantApplicationName\n        - merchantApplicationVersion\n        - name\n        - status\n        - targetUrl\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/subscriptionId'\n        status:\n          $ref: '#/components/schemas/subscriptionStatus'\n        targetUrl:\n          $ref: '#/components/schemas/httpUrl'\n        name:\n          $ref: '#/components/schemas/subscriptionName'\n        merchantApplicationName:\n          $ref: '#/components/schemas/subscriptionMerchantApplicationName'\n        merchantApplicationVersion:\n          $ref: '#/components/schemas/subscriptionMerchantApplicationVersion'\n        recoverBeginPeriodOrderLastModificationUtcDate:\n          type: string\n          description: \u003e-\n            Recover existing orders using the begin period order last\n            modification date. If not set then you will receive new/updated\n            orders in real-time.\n          format: date-time\n        recoverEndPeriodOrderLastModificationUtcDate:\n          type: string\n          description: \u003e\n            Recover existing orders using the begin and the end period order\n            last modification date.\n\n            Otherwise, you will receive new/updated orders in real-time.\n          format: date-time\n        lastOrderPushedModificationUtcDate:\n          type: string\n          description: \u003e-\n            This modification date correspond to the last order pushed by your\n            subscription consumer\n          format: date-time\n        lastSuccessfulOrderPushedUtcDate:\n          type: string\n          description: \u003e-\n            The date of the last pushed order successfully received by your\n            subscription consumer\n          format: date-time\n        consumerHealthStatus:\n          $ref: '#/components/schemas/consumptionAvailabilityStatus'\n        consumerUnvailableSinceUtcDate:\n          type: string\n          description: \u003e-\n            This date indicates since when the subscription consumer is\n            unavailable\n          format: date-time\n        lastRetryUtcDate:\n          type: string\n          description: The last date we retry to send orders\n          format: date-time\n        retryCount:\n          type: integer\n          description: \u003e-\n            The retry count. When we the retry count will reach maximum retry\n            count, the subscription will be deactivated.\n        maxRetryCount:\n          type: integer\n          description: \u003e-\n            The maximum BeezUP will retry to push orders. When we the retry\n            count will reach maximum retry count, the subscription will be\n            deactivated.\n        nextScheduledRetryUtcDate:\n          type: string\n          description: The next scheduled  date we retry to send orders\n          format: date-time\n        merchantEmailAlert:\n          $ref: '#/components/schemas/email'\n        lastErrorMessage:\n          $ref: '#/components/schemas/errorResponseMessage'\n        consumerLastRequestSentUri:\n          $ref: '#/components/schemas/httpUrl'\n      description: The subscription definition\n    subscriptionName:\n      type: string\n      description: The subscription name you want to use\n      example: MySubscriptionName\n    subscriptionMerchantApplicationName:\n      type: string\n      description: The name of your application\n      example: MyApp\n    subscriptionMerchantApplicationVersion:\n      type: string\n      description: The version of your application\n      example: '1.0'\n      default: '1.0'\n    email:\n      pattern: ^(.+)@(.+)$\n      type: string\n      description: The email\n      format: email\n      example: paulsimon@mysupercompany.com\n      x-exclude: true\n      x-pattern: ^(.+)@(.+)$\n    subscriptionId:\n      type: string\n      description: The identifier of the subscription to the orders for a merchant\n      format: guid\n    messageId:\n      type: string\n      description: The message identifier. It's a guid.\n      format: MessageId\n      example: b0d3faea-f881-439f-ba92-02b1168511ea\n      x-exclude: true\n    subscriptionStatus:\n      type: string\n      description: The status of your subscription\n      example: active\n      enum:\n        - active\n        - inactive\n    consumptionAvailabilityStatus:\n      type: string\n      description: The subscription consumption status\n      enum:\n        - Available\n        - Degraded\n        - Unavailable\n    getOrderInvoiceGeneralSettingsResponse:\n      allOf:\n        - $ref: '#/components/schemas/orderInvoiceGeneralSettings'\n        - type: object\n          properties:\n            lastInvoiceSequenceNumber:\n              $ref: '#/components/schemas/invoiceSequenceNumber'\n    getOrderInvoiceDesignPreviewResponse:\n      required:\n        - invoiceHtmlContent\n      type: object\n      properties:\n        invoiceHtmlContent:\n          $ref: '#/components/schemas/invoiceContentHtml'\n    generateOrderInvoiceRequest:\n      type: object\n      properties:\n        invoiceSequenceNumber:\n          $ref: '#/components/schemas/invoiceSequenceNumber'\n    previewOrderInvoiceRequest:\n      type: object\n      properties:\n        invoiceSequenceNumber:\n          $ref: '#/components/schemas/invoiceSequenceNumber'\n    previewOrderInvoiceResponse:\n      required:\n        - invoiceHtmlContent\n      type: object\n      properties:\n        invoiceHtmlContent:\n          $ref: '#/components/schemas/invoiceContentHtml'\n    getOrderInvoicePdfFromHtmlInvoiceUrlRequest:\n      required:\n        - orderInvoiceUri\n      type: object\n      properties:\n        orderInvoiceUri:\n          $ref: '#/components/schemas/orderInvoiceUri'\n    orderInvoiceGeneralSettings:\n      required:\n        - cultureName\n        - invoicePrefix\n        - invoiceStartingSequenceNumber\n        - productVATPercent\n        - shippingVATPercent\n      type: object\n      properties:\n        cultureName:\n          $ref: '#/components/schemas/cultureName'\n        productVATPercent:\n          $ref: '#/components/schemas/productVATPercent'\n        shippingVATPercent:\n          $ref: '#/components/schemas/shippingVATPercent'\n        invoicePrefix:\n          $ref: '#/components/schemas/invoicePrefix'\n        invoiceStartingSequenceNumber:\n          $ref: '#/components/schemas/invoiceSequenceNumber'\n      description: Order Invoice General Settings\n    orderInvoiceDesignSettings:\n      type: object\n      properties:\n        headerContentHtml:\n          $ref: '#/components/schemas/headerContentHtml'\n        footerContentHtml:\n          $ref: '#/components/schemas/footerContentHtml'\n    productVATPercent:\n      maximum: 100\n      minimum: 0\n      type: number\n      description: Product VAT in percent\n      example: 4\n    shippingVATPercent:\n      maximum: 100\n      minimum: 0\n      type: number\n      description: Shipping cost VAT in percent\n      example: 8\n    invoicePrefix:\n      pattern: ^[a-zA-Z0-9#_-]{1,50}$\n      type: string\n      description: \u003e-\n        Invoice Prefix. Can contain 1 to 50 characters, with alphanumeric\n        characters in lowercase uppercase and #, _, -\n      example: TOTO\n      x-pattern: ^[a-zA-Z0-9#_-]{1,50}$\n    invoiceSequenceNumber:\n      minimum: 0\n      type: integer\n      description: Invoice Sequence Number\n      example: 879\n    headerContentHtml:\n      maxLength: 1000\n      type: string\n      description: Header Content HTML\n      x-minValueLength: '0'\n    footerContentHtml:\n      maxLength: 1000\n      type: string\n      description: Footer Content HTML\n      x-minValueLength: '0'\n    invoiceContentHtml:\n      type: string\n      description: Invoice Content HTML\n    orderInvoiceUri:\n      pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.?\u0026\\%-=])*\\/?$\n      type: string\n      description: order invoice url\n      example: http://www.mydomain.com\n      x-exclude: true\n      x-pattern: ^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.?\u0026\\%-=])*\\/?$\n    analyticsIndexLovLinks:\n      type: object\n      properties:\n        performanceIndicatorTypeLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        performanceIndicatorTypeForReportsByChannelLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        performanceIndicatorTypeForReportsByCategoryLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        performanceIndicatorTypeForReportsByProductLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        performanceIndicatorFormulaParameterTypeLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        performanceIndicatorFormulaOperatorNameLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        performanceIndicatorFilterOperatorNameLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        analyticsProductColumnFilterOperatorNameLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        analyticsNumericalProductColumnFilterOperatorNameLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        analyticsStringProductColumnFilterOperatorNameLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n        storeOptimisationRuleExecutionStatusLov:\n          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'\n    links.AnalyticsIndexLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/analytics\n            method: GET\n    links.GetTrackingStatusLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/analytics/tracking/status\n            method: GET\n    links.GetStoreTrackingStatusLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/status\n            method: GET\n    links.GetStoreTrackedClicksLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/clicks\n            method: GET\n    links.GetStoreTrackedOrdersLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/orders\n            method: GET\n    links.GetStoreTrackedExternalOrdersLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/externalorders\n            method: GET\n    links.GetStoreReportByDayLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/byday\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: reportByDayRequest\n    links.GetStoreReportByChannelLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/bychannel\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: reportByChannelRequest\n    links.GetStoreReportByCategoryLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/bycategory\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: reportByCategoryRequest\n    links.GetStoreReportByProductLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/byproduct\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: reportByProductRequest\n    links.OptimiseAllLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/all/enable\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: optimiseAllRequest\n                value:\n                  channelId: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28\n                  beginPeriodUtcDate: 2006-11-20T00:00:00.000Z\n                  endPeriodUtcDate: 2006-12-20T00:00:00.000Z\n                  categoryFilter:\n                    categoryPath:\n                      - Home\n                      - Bedroom\n                  performanceIndicatorFilters:\n                    - performanceIndicator: Cost\n                      operatorName: Equals\n                      value: '10'\n                  advancedFilters:\n                    marginType: Global\n                    globalmarginPercent: '10'\n                    linkClickToOrderType: OnClickDate\n                    linkClickToOrderMaxDay: '5'\n                    onlyPaymentValidatedOrders: 'true'\n                    onlyDirectSales: 'true'\n                    performanceIndicatorFormula:\n                      firstParameter: Cost\n                      operatorName: Multiply\n                      secondParamter: ROI\n                      thirdParameter: '100'\n                  productState: All\n                  analyticsProductColumnFilters:\n                    sku: M1234\n                    title: Refrigérateur\n                    additionalAnalyticsProductColumnFilters:\n                      - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c\n                        operatorName: NumericalGreaterThan\n                        values:\n                          - '100'\n    links.OptimiseLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/enable\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: optimiseRequest\n                value:\n                  channelId: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28\n                  beginPeriodUtcDate: 2006-11-20T00:00:00.000Z\n                  endPeriodUtcDate: 2006-12-20T00:00:00.000Z\n                  categoryFilter:\n                    categoryPath:\n                      - Home\n                      - Bedroom\n                  performanceIndicatorFilters:\n                    - performanceIndicator: Cost\n                      operatorName: Equals\n                      value: '10'\n                  advancedFilters:\n                    marginType: Global\n                    globalmarginPercent: '10'\n                    linkClickToOrderType: OnClickDate\n                    linkClickToOrderMaxDay: '5'\n                    onlyPaymentValidatedOrders: 'true'\n                    onlyDirectSales: 'true'\n                    performanceIndicatorFormula:\n                      firstParameter: Cost\n                      operatorName: Multiply\n                      secondParamter: ROI\n                      thirdParameter: '100'\n                  pageSize: '100'\n                  pageNumber: '1'\n                  productState: All\n                  analyticsProductColumnFilters:\n                    sku: M1234\n                    title: Refrigérateur\n                    additionalAnalyticsProductColumnFilters:\n                      - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c\n                        operatorName: NumericalGreaterThan\n                        values:\n                          - '100'\n    links.OptimiseByChannelLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byChannel/a2d38563-50f0-43f1-be2b-b16e7ec4f007/enable\n            method: POST\n    links.OptimiseByCategoryLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byCategory/4c376178-25b4-4656-a86e-e3bd3a25b139/enable\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: ​array\n                value:\n                  - a2d38563-50f0-43f1-be2b-b16e7ec4f007\n    links.OptimiseByProductLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byProduct/6d469a54-8426-4855-abc2-9e062e2056b9/enable\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: ​array\n                value:\n                  - a2d38563-50f0-43f1-be2b-b16e7ec4f007\n    links.GetReportFiltersLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters\n            method: GET\n    links.GetReportFilterLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd\n            method: GET\n    links.SaveReportFilterLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/{reportFilterId}\n            method: PUT\n            templated: 'true'\n            parameters:\n              - name: reportFilterId\n                type: string\n                in: path\n    links.DeleteReportFilterLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd\n            method: DELETE\n    links.GetRulesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules\n            method: GET\n    links.CreateRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules\n            method: POST\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: createRuleRequest\n                value:\n                  optimisationActionName: reenable\n                  ruleName: My rule\n                  reportFilterId: fb19c53c-2f63-4262-9d94-2d7faa500acd\n                  startUtcDate: 2016-08-29T09:12:33.001Z\n                  endUtcDate: 2017-09-30T10:42:40.001Z\n    links.GetRulesExecutionsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/executions\n            method: GET\n    links.RunRulesLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/run\n            method: POST\n    links.GetRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8\n            method: GET\n    links.UpdateRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8\n            method: PATCH\n            parameters:\n              request:\n                in: body\n                type: object\n                schema: updateRuleRequest\n                value:\n                  ruleName: My Rule Renamed\n                  startUtcDate: 2016-08-29T09:12:33.001Z\n                  endUtcDate\": 2016-08-29T09:12:33.001Z\n    links.DeleteRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8\n            method: DELETE\n    links.MoveUpRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/moveup\n            method: POST\n    links.MoveDownRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/movedown\n            method: POST\n    links.EnableRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/enable\n            method: POST\n    links.DisableRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/disable\n            method: POST\n    links.RunRuleLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/run\n            method: POST\n    analyticsIndexLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.AnalyticsIndexLink'\n        trackingStatus:\n          $ref: '#/components/schemas/links.GetTrackingStatusLink'\n    analyticsStoreIndexLinks:\n      required:\n        - reportFilters\n        - self\n        - trackedClicks\n        - trackedOrders\n        - trackingStatus\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.AnalyticsIndexLink'\n        trackingStatus:\n          $ref: '#/components/schemas/links.GetStoreTrackingStatusLink'\n        trackedClicks:\n          $ref: '#/components/schemas/links.GetStoreTrackedClicksLink'\n        trackedOrders:\n          $ref: '#/components/schemas/links.GetStoreTrackedOrdersLink'\n        trackedExternalOrders:\n          $ref: '#/components/schemas/links.GetStoreTrackedExternalOrdersLink'\n        reportByDay:\n          $ref: '#/components/schemas/links.GetStoreReportByDayLink'\n        reportByChannel:\n          $ref: '#/components/schemas/links.GetStoreReportByChannelLink'\n        reportByCategory:\n          $ref: '#/components/schemas/links.GetStoreReportByCategoryLink'\n        reportByProduct:\n          $ref: '#/components/schemas/links.GetStoreReportByProductLink'\n        optimiseAll:\n          $ref: '#/components/schemas/links.OptimiseAllLink'\n        optimise:\n          $ref: '#/components/schemas/links.OptimiseLink'\n        optimiseByChannel:\n          $ref: '#/components/schemas/links.OptimiseByChannelLink'\n        optimiseByCategory:\n          $ref: '#/components/schemas/links.OptimiseByCategoryLink'\n        optimiseByProduct:\n          $ref: '#/components/schemas/links.OptimiseByProductLink'\n        reportFilters:\n          $ref: '#/components/schemas/links.GetReportFiltersLink'\n        rules:\n          $ref: '#/components/schemas/links.GetRulesLink'\n    reportByCommonResponseLinks:\n      type: object\n      properties:\n        enableAllProducts:\n          $ref: '#/components/schemas/links.OptimiseAllLink'\n        disableAllProducts:\n          $ref: '#/components/schemas/links.OptimiseAllLink'\n        enableProducts:\n          $ref: '#/components/schemas/links.OptimiseLink'\n        disableProducts:\n          $ref: '#/components/schemas/links.OptimiseLink'\n    reportByChannelLinks:\n      type: object\n      properties:\n        enableProducts:\n          $ref: '#/components/schemas/links.OptimiseByChannelLink'\n        disableProducts:\n          $ref: '#/components/schemas/links.OptimiseByChannelLink'\n    reportByCategoryLinks:\n      type: object\n      properties:\n        enableProducts:\n          $ref: '#/components/schemas/links.OptimiseByCategoryLink'\n        disableProducts:\n          $ref: '#/components/schemas/links.OptimiseByCategoryLink'\n    reportByProductLinks:\n      type: object\n      properties:\n        oneChannelLinks:\n          $ref: '#/components/schemas/reportByProductOneChannelLinks'\n        allChannelsLinks:\n          $ref: '#/components/schemas/reportByProductAllChannelsLinks'\n      description: Depending if the report concerned multiple channels or one channel.\n    reportByProductOneChannelLinks:\n      required:\n        - disableProductForOneChannel\n        - enableProductForOneChannel\n        - productInfo\n      type: object\n      properties:\n        productInfo:\n          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoLink'\n        enableProductForOneChannel:\n          $ref: '#/components/schemas/links.OptimiseByProductLink'\n        disableProductForOneChannel:\n          $ref: '#/components/schemas/links.OptimiseByProductLink'\n      description: \u003e-\n        If the report concerned one product for one channel the channel catalog\n        product info will give you all you need to enable or disable the\n        product.\n    reportByProductAllChannelsLinks:\n      required:\n        - disableProductForAllChannels\n        - enableProductForAllChannels\n      type: object\n      properties:\n        enableProductForAllChannels:\n          $ref: '#/components/schemas/links.OptimiseByProductLink'\n        disableProductForAllChannels:\n          $ref: '#/components/schemas/links.OptimiseByProductLink'\n    reportByChannelResponseLinks:\n      allOf:\n        - $ref: '#/components/schemas/reportByCommonResponseLinks'\n    reportByCategoryResponseLinks:\n      allOf:\n        - $ref: '#/components/schemas/reportByCommonResponseLinks'\n    reportByProductResponseLinks:\n      allOf:\n        - $ref: '#/components/schemas/reportByCommonResponseLinks'\n    reportFiltersLinks:\n      required:\n        - save\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetReportFiltersLink'\n        save:\n          $ref: '#/components/schemas/links.SaveReportFilterLink'\n    reportFilterHeaderLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetReportFilterLink'\n    reportFilterLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetReportFilterLink'\n        save:\n          $ref: '#/components/schemas/links.SaveReportFilterLink'\n        delete:\n          $ref: '#/components/schemas/links.DeleteReportFilterLink'\n      description: Indicates the actions you can do on this report filter\n    ruleListLinks:\n      required:\n        - create\n        - history\n        - run\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetRulesLink'\n        create:\n          $ref: '#/components/schemas/links.CreateRuleLink'\n        history:\n          $ref: '#/components/schemas/links.GetRulesExecutionsLink'\n        run:\n          $ref: '#/components/schemas/links.RunRulesLink'\n      description: Links to know if the user can create a rule or run all rules\n    ruleLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetRuleLink'\n        update:\n          $ref: '#/components/schemas/links.UpdateRuleLink'\n        delete:\n          $ref: '#/components/schemas/links.DeleteRuleLink'\n        moveup:\n          $ref: '#/components/schemas/links.MoveUpRuleLink'\n        movedown:\n          $ref: '#/components/schemas/links.MoveDownRuleLink'\n        enable:\n          $ref: '#/components/schemas/links.EnableRuleLink'\n        disable:\n          $ref: '#/components/schemas/links.DisableRuleLink'\n        run:\n          $ref: '#/components/schemas/links.RunRuleLink'\n        reportFilter:\n          $ref: '#/components/schemas/links.GetReportFilterLink'\n      description: Links to retrieve/action on other entities\n    ruleExecutionReportingLinks:\n      type: object\n      properties:\n        rule:\n          $ref: '#/components/schemas/links.GetRuleLink'\n      description: Links to retrieve/action on this rule execution\n    analyticsIndex:\n      required:\n        - links\n        - stores\n      type: object\n      properties:\n        stores:\n          type: array\n          items:\n            $ref: '#/components/schemas/analyticsStoreIndex'\n        links:\n          $ref: '#/components/schemas/analyticsIndexLinks'\n        lovLinks:\n          $ref: '#/components/schemas/analyticsIndexLovLinks'\n      description: The Analytics API operation index.\n    analyticsStoreIndex:\n      required:\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/analyticsStoreIndexLinks'\n    trackingStatus:\n      required:\n        - clickSynchronizationUtcDate\n        - marketplaceOrderSynchonizationUtcDate\n        - orderSynchonizationUtcDate\n      type: object\n      properties:\n        clickSynchronizationUtcDate:\n          type: string\n          description: The utc date of the latest synchronized click\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        orderSynchonizationUtcDate:\n          type: string\n          description: The utc date of the latest synchronized order\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        marketplaceOrderSynchonizationUtcDate:\n          type: string\n          description: The utc date of the latest synchronized marketplace order\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n    storeTrackingStatus:\n      type: object\n      properties:\n        clickSynchronizationUtcDate:\n          type: string\n          description: The utc date of the latest synchronized click\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        orderSynchonizationUtcDate:\n          type: string\n          description: The utc date of the latest synchronized order\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        marketplaceOrderSynchonizationUtcDate:\n          type: string\n          description: The utc date of the latest synchronized marketplace order\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n    trackedClicks:\n      required:\n        - clicks\n      type: object\n      properties:\n        clicks:\n          type: array\n          items:\n            $ref: '#/components/schemas/trackedClick'\n    trackedClick:\n      required:\n        - channel\n        - ipAddress\n        - product\n        - utcDate\n      type: object\n      properties:\n        utcDate:\n          type: string\n          description: The utc date of the click\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        product:\n          $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'\n        ipAddress:\n          type: string\n          description: The user IP address for the click\n          example: 127.0.0.1\n        channel:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'\n    trackedOrders:\n      required:\n        - orders\n      type: object\n      properties:\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/trackedOrder'\n    trackedOrder:\n      required:\n        - channel\n        - currencyCode\n        - merchantOrderId\n        - paymentValidated\n        - products\n        - totalAmount\n        - utcDate\n      type: object\n      properties:\n        utcDate:\n          type: string\n          description: The utc date of the order\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        channel:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'\n        merchantOrderId:\n          type: string\n          description: The merchant order identifier\n          example: My_Merchant_Order_Id\n        totalAmount:\n          type: number\n          description: The total amount of the order\n          example: 101.42\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        paymentValidated:\n          type: boolean\n          description: Indicate if the payment of this order has been validated or not\n          example: false\n        products:\n          type: array\n          description: The product list of this order\n          example:\n            - productId: 00000000-0000-0000-0000-000000000000\n              productSku: SKU123345\n              productTitle: My super product title\n              productImageUrl: \u003e-\n                http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg\n              productActive: 'true'\n              unitPrice: '101'\n              quantity: '1'\n              margin: '9'\n          items:\n            $ref: '#/components/schemas/trackedOrderProduct'\n    trackedOrderProduct:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'\n        - required:\n            - margin\n            - quantity\n            - unitPrice\n          type: object\n          properties:\n            unitPrice:\n              type: number\n              description: The product's unit price for the order\n              example: 101.42\n            quantity:\n              type: number\n              description: The quantity of this product for the order\n              example: 1\n            margin:\n              type: number\n              description: The product's margin for the order\n              example: 9.66\n    trackedExternalOrders:\n      required:\n        - externalOrders\n      type: object\n      properties:\n        externalOrders:\n          type: array\n          items:\n            $ref: '#/components/schemas/trackedExternalOrder'\n    trackedExternalOrder:\n      required:\n        - currencyCode\n        - merchantOrderId\n        - paymentValidated\n        - totalAmount\n        - utcDate\n      type: object\n      properties:\n        utcDate:\n          type: string\n          description: The utc date of the external order\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        merchantOrderId:\n          type: string\n          description: The merchant order identifier\n          example: My_Order_Merchant_Id\n        visitorId:\n          type: string\n          description: Can be null. The visitor identifier of the external order\n          example: A_VISITOR_ID\n        totalAmount:\n          type: number\n          description: The total amount of the external order\n          example: 101.42\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        paymentValidated:\n          type: boolean\n          description: \u003e-\n            Indicate if the payment of this external order has been validated or\n            not\n          example: false\n        products:\n          type: array\n          description: Can be null. The product list included in the external order\n          example:\n            - productSku: something\n              productTitle: Something great\n              productImageUrl: \u003e-\n                http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051\n              productActive: 'true'\n              merchantOrderId: My_Merchant_Order_Id\n              unitPrice: '101'\n              quantity: '1'\n              margin: '9'\n          items:\n            $ref: '#/components/schemas/trackedExternalOrderProduct'\n    trackedExternalOrderProduct:\n      required:\n        - productSku\n      type: object\n      properties:\n        productSku:\n          type: string\n          description: The product sku received for the external order\n          example: something\n        productTitle:\n          type: string\n          description: \u003e-\n            We tried to get the catalog product title based on the product SKU.\n            This property can be null, if we cannot found the product. This is\n            possible if the product is not referenced in the imported catalog.\n          example: Something great\n        productImageUrl:\n          type: string\n          description: \u003e-\n            We tried to get the catalog product image Url based on the product\n            SKU. This property can be null, if we cannot found the product. This\n            is possible if the product is not referenced in the imported\n            catalog.\n          format: uri\n          example: \u003e-\n            http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051\n        productActive:\n          type: boolean\n          description: \u003e-\n            We tried to get the catalog product if it's still active based on\n            the product SKU. This property can be null, if we cannot found the\n            product. This is possible if the product is not referenced in the\n            imported catalog.\n          example: true\n        productId:\n          type: string\n          description: \u003e-\n            We tried to get the catalog product identifier based on the product\n            SKU. This property can be null, if we cannot found the product. This\n            is possible if the product is not referenced in the imported\n            catalog.\n          format: guid\n          example: 6d469a54-8426-4855-abc2-9e062e2056b9\n        unitPrice:\n          type: string\n          description: \u003e-\n            The product's unit price for the external order. This property is\n            voluntarily a string because the value could be an invalid one.\n          example: '101.42'\n        quantity:\n          type: string\n          description: \u003e-\n            The quantity of this product for the external order. This property\n            is voluntarily a string because the value could be an invalid one\n          example: '1.00'\n        margin:\n          type: string\n          description: \u003e-\n            The product's margin for the external order. This property is\n            voluntarily a string because the value could be an invalid one\n          example: '9.66'\n    reportAdvancedFilters:\n      required:\n        - linkClickToOrderType\n        - marginType\n        - onlyDirectSales\n        - onlyPaymentValidatedOrders\n        - performanceIndicatorFormula\n      type: object\n      properties:\n        marginType:\n          $ref: '#/components/schemas/marginType'\n        globalMarginPercent:\n          maximum: 100\n          minimum: 0\n          type: integer\n          description: \u003e-\n            If the margin type is 'Global', indicate the percentage of sale\n            price.\n          example: 10\n        linkClickToOrderType:\n          $ref: '#/components/schemas/linkClickToOrderType'\n        linkClickToOrderMaxDay:\n          maximum: 180\n          minimum: 0\n          type: integer\n          description: \u003e-\n            If the linkOrderType is OnClickDate, indicate the max day to search\n            the click from the order\n          example: 5\n        onlyPaymentValidatedOrders:\n          type: boolean\n          description: \u003e-\n            If true, you will get the only the orders with payment validated.\n            Otherwise, you will get all orders validated or not.\n          example: true\n          default: false\n        onlyDirectSales:\n          type: boolean\n          description: \u003e-\n            If true, you will get only direct sales. Otherwise the indirect\n            sales will be included.\n          example: true\n          default: false\n        performanceIndicatorFormula:\n          $ref: '#/components/schemas/performanceIndicatorFormula'\n    marginType:\n      type: string\n      example: Global\n      default: Tracker\n      enum:\n        - Tracker\n        - Global\n    linkClickToOrderType:\n      type: string\n      example: OnClickDate\n      default: OnPurchaseDate\n      enum:\n        - OnPurchaseDate\n        - OnClickDate\n    performanceIndicatorFormula:\n      type: object\n      properties:\n        firstParameter:\n          $ref: '#/components/schemas/performanceIndicatorFormulaParameterType'\n        operatorName:\n          $ref: '#/components/schemas/performanceIndicatorFormulaOperatorName'\n        secondParameter:\n          $ref: '#/components/schemas/performanceIndicatorFormulaParameterType'\n        thirdParameter:\n          type: integer\n          description: Indicate the value of the third parameter of your formula\n          example: 100\n      description: The KPI formula\n      example:\n        firstParameter: Cost\n        operatorName: Multiply\n        secondParamter: ROI\n        thirdParameter: '100'\n    performanceIndicatorFormulaParameterType:\n      type: string\n      description: Indicate on which indicator or value you want to make your formula\n      example: Cost\n      enum:\n        - Cost\n        - TotalSales\n        - Margin\n        - TotalSalesMinusCost\n        - MarginMinusCost\n        - OrderCount\n        - ClickCount\n        - SoldProductCount\n        - One\n    performanceIndicatorFormulaOperatorName:\n      type: string\n      example: Multiply\n      enum:\n        - Multiply\n        - Divide\n    reportByDayRequest:\n      required:\n        - beginPeriodUtcDate\n        - endPeriodUtcDate\n      type: object\n      properties:\n        channelIds:\n          type: array\n          description: Indicate the channel identifier list\n          example:\n            - 2dc136a7-0d3d-4cc9-a825-a28a42c53e28\n          items:\n            $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        productId:\n          $ref: '#/components/schemas/BeezUP_Common_ProductId'\n        catalogCategoryId:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'\n        beginPeriodUtcDate:\n          type: string\n          description: The begin date of the period for the report\n          format: date\n        endPeriodUtcDate:\n          type: string\n          description: The end date of the period for the report\n          format: date\n        advancedFilters:\n          $ref: '#/components/schemas/reportAdvancedFilters'\n    reportByDayPerStoreResponse:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/reportByDayResponse'\n      description: The key is the StoreId.\n    reportByDayResponse:\n      required:\n        - currencyCode\n        - days\n        - globalPerformanceIndicators\n      type: object\n      properties:\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        globalPerformanceIndicators:\n          $ref: '#/components/schemas/reportByDayGlobal'\n        days:\n          type: array\n          items:\n            $ref: '#/components/schemas/reportByDay'\n    reportByDayGlobal:\n      required:\n        - allChannels\n        - byChannels\n      type: object\n      properties:\n        allChannels:\n          $ref: '#/components/schemas/reportByDayGlobalAllChannels'\n        byChannels:\n          type: array\n          items:\n            $ref: '#/components/schemas/reportByDayGlobalByChannel'\n    reportByDayGlobalAllChannels:\n      required:\n        - performanceIndicator\n      type: object\n      properties:\n        performanceIndicator:\n          type: number\n          description: Indicates the global performance indicator\n          example: 10.42\n    reportByDayGlobalByChannel:\n      allOf:\n        - $ref: '#/components/schemas/reportByDayGlobalAllChannels'\n        - required:\n            - channel\n          type: object\n          properties:\n            channel:\n              $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'\n    reportByDay:\n      required:\n        - allChannels\n        - byChannels\n        - day\n      type: object\n      properties:\n        day:\n          type: string\n          format: date\n        allChannels:\n          $ref: '#/components/schemas/reportByDayAllChannels'\n        byChannels:\n          type: array\n          items:\n            $ref: '#/components/schemas/reportByDayByChannel'\n    reportByDayAllChannels:\n      required:\n        - clickCount\n        - cost\n        - margin\n        - orderCount\n        - performanceIndicator\n        - roi\n        - soldProductCount\n        - totalSales\n      type: object\n      properties:\n        clickCount:\n          type: integer\n          description: The click count\n          example: 101\n        cost:\n          type: number\n          description: The cost\n          example: 10.42\n        orderCount:\n          type: integer\n          description: The order count\n          example: 42\n        roi:\n          type: number\n          description: The Return On Investment\n          example: 23.11\n        margin:\n          type: number\n          description: The margin\n          example: 42.42\n        performanceIndicator:\n          type: number\n          description: \u003e-\n            The performance indicator based on the performance indicator formula\n            indicated in the request\n          example: 23.09\n        totalSales:\n          type: number\n          description: The total sales\n          example: 234.42\n        soldProductCount:\n          type: integer\n          description: The product sold count count\n          example: 2\n    reportByDayByChannel:\n      allOf:\n        - $ref: '#/components/schemas/reportByDayAllChannels'\n        - required:\n            - channel\n          type: object\n          properties:\n            channel:\n              $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'\n    reportFilterCommonParameters:\n      required:\n        - advancedFilters\n        - periodType\n      type: object\n      properties:\n        channelId:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        periodType:\n          $ref: '#/components/schemas/reportFilterPeriodType'\n        beginPeriodUtcDate:\n          type: string\n          description: \u003e-\n            The begin date period you want to get the report. It's required only\n            in case of custom period type !\n          format: date-time\n          example: 2006-11-20T00:00:00.000Z\n        endPeriodUtcDate:\n          type: string\n          description: \u003e-\n            The end date period you want to get the report. It's required only\n            in case of custom period type !\n          format: date-time\n          example: 2006-12-20T00:00:00.000Z\n        categoryFilter:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryFilter'\n        performanceIndicatorFilters:\n          type: array\n          example:\n            - indicator: Cost\n              operatorName: Equals\n              value: '10'\n          items:\n            $ref: '#/components/schemas/performanceIndicatorFilter'\n        advancedFilters:\n          $ref: '#/components/schemas/reportAdvancedFilters'\n      description: Contains common filter parameters\n    reportFilterPeriodType:\n      type: string\n      description: Indicates the period type we want use for the report filter\n      enum:\n        - Custom\n        - Yesterday\n        - Last7Days\n        - LastWeek\n        - ThisMonth\n        - Last30Days\n        - LastMonth\n        - Last60Days\n        - Last90Days\n        - Last3Months\n    performanceIndicatorFilter:\n      required:\n        - operatorName\n        - performanceIndicator\n        - value\n      type: object\n      properties:\n        performanceIndicator:\n          $ref: '#/components/schemas/performanceIndicatorType'\n        operatorName:\n          $ref: '#/components/schemas/performanceIndicatorFilterOperatorName'\n        value:\n          type: number\n          description: Indicates the filter value to apply on this indicator\n          example: 10.42\n    performanceIndicatorType:\n      type: string\n      description: Indicate on which indicator or value you want to make your formula\n      example: Cost\n      enum:\n        - ClickCount\n        - Cost\n        - OrderCount\n        - ProductCount\n        - SoldProductCount\n        - DisabledProductCount\n        - EnabledProductCount\n        - TotalSales\n        - Margin\n        - ROI\n        - PerformanceIndicator\n    performanceIndicatorFilterOperatorName:\n      type: string\n      description: Indicates the operator you want to apply on this indicator\n      example: Equals\n      x-lov: PerformanceIndicatorFilterOperatorName\n    orderedReportFilterCommonParameters:\n      description: Contains common filter parameters with Order By functionnality\n      allOf:\n        - $ref: '#/components/schemas/reportFilterCommonParameters'\n        - type: object\n          properties:\n            orderBy:\n              $ref: '#/components/schemas/performanceIndicatorType'\n            orderByDirection:\n              $ref: '#/components/schemas/orderByDirection'\n    orderByDirection:\n      type: string\n      description: Indicate which direction to order results by\n      example: Ascending\n      enum:\n        - Ascending\n        - Descending\n    paginationRequestParameters:\n      type: object\n      properties:\n        pageSize:\n          $ref: '#/components/schemas/BeezUP_Common_PageSize'\n        pageNumber:\n          $ref: '#/components/schemas/BeezUP_Common_PageNumber'\n    reportByChannelRequest:\n      allOf:\n        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'\n        - $ref: '#/components/schemas/paginationRequestParameters'\n    reportByChannelResponse:\n      required:\n        - channels\n        - currencyCode\n        - links\n        - paginationResult\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        channels:\n          type: array\n          items:\n            $ref: '#/components/schemas/reportByChannel'\n        links:\n          $ref: '#/components/schemas/reportByChannelResponseLinks'\n    reportByChannel:\n      required:\n        - catalogProductCount\n        - channel\n        - clickCount\n        - cost\n        - enabledProductCount\n        - links\n        - orderCount\n        - performanceIndicator\n        - soldProductCount\n        - totalSales\n      type: object\n      properties:\n        channel:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'\n        catalogProductCount:\n          type: integer\n          description: The catalog product count\n          example: 101\n        enabledProductCount:\n          type: integer\n          description: The enabled product count\n          example: 101\n        clickCount:\n          type: integer\n          description: The click count\n          example: 1024\n        cost:\n          type: number\n          description: The cost for\n          example: 1234.12\n        orderCount:\n          type: integer\n          description: The order count\n          example: 42\n        roi:\n          type: number\n          description: The Return On Investment\n          example: 42.42\n        margin:\n          type: number\n          description: The margin\n          example: 23.1\n        performanceIndicator:\n          type: number\n          description: \u003e-\n            The performance indicator based on the performance indicator formula\n            indicated in the request\n          example: 12.21\n        totalSales:\n          type: number\n          description: The total sales\n          example: 234.42\n        soldProductCount:\n          type: integer\n          description: The product sold count count\n          example: 2\n        links:\n          $ref: '#/components/schemas/reportByChannelLinks'\n    reportByCategoryRequest:\n      allOf:\n        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'\n        - $ref: '#/components/schemas/paginationRequestParameters'\n    reportByCategoryResponse:\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/reportByCategory'\n        links:\n          $ref: '#/components/schemas/reportByCategoryResponseLinks'\n    reportByCategory:\n      required:\n        - allProductCount\n        - catalogCategoryId\n        - catalogProductCount\n        - clickCount\n        - cost\n        - enabledProductCount\n        - links\n        - orderCount\n        - performanceIndicator\n        - soldProductCount\n        - totalSales\n      type: object\n      properties:\n        catalogCategoryId:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'\n        catalogCategoryPath:\n          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'\n        allProductCount:\n          type: integer\n          description: \u003e-\n            The product count for this category. This includes all the products\n            that have been imported and can still have associated clicks and\n            orders.\n          example: 101\n        catalogProductCount:\n          type: integer\n          description: \u003e-\n            The catalog product count for this category. This includes all\n            products that are still present in your imported catalog.\n          example: 101\n        enabledProductCount:\n          type: integer\n          description: \u003e-\n            The enabled product count for this category. This includes all\n            products that are still present in your imported catalog and have\n            not been disabled via the optimisation feature.\n          example: 101\n        clickCount:\n          type: integer\n          description: The click count for this category\n          example: 1001\n        cost:\n          type: number\n          description: The cost for this category\n          example: 12.42\n        orderCount:\n          type: integer\n          description: The order count for this category\n          example: 25\n        roi:\n          type: number\n          description: The Return On Investment for this category\n          example: 25.33\n        margin:\n          type: number\n          description: The margin for this category\n          example: 3.33\n        performanceIndicator:\n          type: number\n          description: \u003e-\n            The performance indicator based on the performance indicator formula\n            indicated in the request for this category\n          example: 25.33\n        totalSales:\n          type: number\n          description: The total sales for this category\n          example: 234.42\n        soldProductCount:\n          type: integer\n          description: The product sold count count for this category\n          example: 2\n        links:\n          $ref: '#/components/schemas/reportByCategoryLinks'\n    reportByProductRequest:\n      allOf:\n        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'\n        - $ref: '#/components/schemas/paginationRequestParameters'\n        - required:\n            - productState\n          type: object\n          properties:\n            productColumnsToDisplay:\n              $ref: '#/components/schemas/productColumnsToDisplay'\n            productState:\n              $ref: '#/components/schemas/productStateFilter'\n            analyticsProductColumnFilters:\n              $ref: '#/components/schemas/analyticsProductColumnFilters'\n    analyticsProductColumnFilters:\n      type: object\n      properties:\n        sku:\n          type: string\n          description: The product sku filter\n          example: M1234\n        title:\n          type: string\n          description: The product title filter\n          example: Refrigérateur\n        additionalAnalyticsProductColumnFilters:\n          $ref: '#/components/schemas/additionalAnalyticsProductColumnFilters'\n    additionalAnalyticsProductColumnFilters:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/analyticsProductColumnFilter'\n      description: |\n        Describes a filter on a product's column.\n        The key is the column identifier of your catalog or a custom column.\n    analyticsProductColumnFilter:\n      required:\n        - operatorName\n      type: object\n      properties:\n        operatorName:\n          $ref: '#/components/schemas/analyticsProductColumnFilterOperatorName'\n        values:\n          type: array\n          description: \u003e\n            Must be null if the operator is \"IsNull\" or \"IsNotNull\".\n\n            Can contains multiple value in case of \"InList\" operator. Otherwise\n            a single value is expected.\n          example:\n            - My value\n          items:\n            type: string\n      example:\n        672644c7-5bd0-4e25-88c1-1f732bda5e4c:\n          operatorName: NumericalGreaterThan\n          values:\n            - '100'\n    analyticsProductColumnFilterOperatorName:\n      type: string\n      description: Indicate the operator you want to apply on the columnId\n      x-lov: AnalyticsProductColumnFilterOperatorName\n    productColumnsToDisplay:\n      maxItems: 1\n      minItems: 0\n      type: array\n      example:\n        - 4b460e31-3d1f-4117-922d-b159a64ec1d2\n      items:\n        $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'\n    productStateFilter:\n      type: string\n      description: You can filter on the product state.\n      example: All\n      default: All\n      enum:\n        - All\n        - Enabled\n        - Disabled\n    reportByProductResponse:\n      required:\n        - currencyCode\n        - links\n        - paginationResult\n        - products\n      type: object\n      properties:\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n        currencyCode:\n          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'\n        products:\n          type: array\n          items:\n            $ref: '#/components/schemas/reportByProduct'\n        links:\n          $ref: '#/components/schemas/reportByProductResponseLinks'\n    reportByProduct:\n      required:\n        - channelCount\n        - clickCount\n        - cost\n        - enabledOnChannelCount\n        - links\n        - orderCount\n        - performanceIndicator\n        - product\n        - soldProductCount\n        - totalSales\n      type: object\n      properties:\n        product:\n          $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'\n        enabledOnChannelCount:\n          type: integer\n          description: The count of channel where this product is enabled\n          example: 1\n        channelCount:\n          type: integer\n          description: The channel count where this product can be enabled\n          example: 2\n        clickCount:\n          type: integer\n          description: The click count for this product\n          example: 1234\n        cost:\n          type: number\n          description: The cost for this product\n          example: 101.42\n        orderCount:\n          type: integer\n          description: The order count for this product\n          example: 234\n        roi:\n          type: number\n          description: The Return On Investment for this product\n          example: 42.01\n        margin:\n          type: number\n          description: The margin for this product\n          example: 50\n        performanceIndicator:\n          type: number\n          description: \u003e-\n            The performance indicator based on the performance indicator formula\n            indicated in the request for this product\n          example: 10.12\n        totalSales:\n          type: number\n          description: The total sales for this product\n          example: 234.42\n        soldProductCount:\n          type: integer\n          description: The product sold count count for this product\n          example: 2\n        links:\n          $ref: '#/components/schemas/reportByProductLinks'\n    optimiseAllRequest:\n      allOf:\n        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'\n        - required:\n            - reportType\n          type: object\n          properties:\n            reportType:\n              $ref: '#/components/schemas/reportType'\n            productColumnsToDisplay:\n              $ref: '#/components/schemas/productColumnsToDisplay'\n            productState:\n              $ref: '#/components/schemas/productStateFilter'\n            analyticsProductColumnFilters:\n              $ref: '#/components/schemas/analyticsProductColumnFilters'\n    optimiseRequest:\n      allOf:\n        - $ref: '#/components/schemas/optimiseAllRequest'\n        - $ref: '#/components/schemas/paginationRequestParameters'\n    copyOptimisationRequest:\n      required:\n        - channelIdSource\n        - channelIdTarget\n        - keepExistingOptimisation\n      type: object\n      properties:\n        channelIdSource:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        channelIdTarget:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelId'\n        keepExistingOptimisation:\n          type: boolean\n          description: If true the existing optimisation will be kept\n          example: false\n      description: Copy the optimisation between 2 channels\n    copyOptimisationResponse:\n      required:\n        - catalogProductCount\n        - channel\n        - enabledProductCount\n      type: object\n      properties:\n        channel:\n          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'\n        catalogProductCount:\n          type: integer\n          description: The catalog product count\n          example: 101\n        enabledProductCount:\n          type: integer\n          description: The enabled product count\n          example: 101\n      description: Products optimisatisation copied\n    reportType:\n      type: string\n      description: The report type\n      example: ByProduct\n      enum:\n        - ByChannel\n        - ByCategory\n        - ByProduct\n        - ByDay\n    reportFilterList:\n      required:\n        - links\n        - reportFilters\n      type: object\n      properties:\n        reportFilters:\n          type: array\n          items:\n            $ref: '#/components/schemas/reportFilterHeader'\n        links:\n          $ref: '#/components/schemas/reportFiltersLinks'\n    reportFilterHeader:\n      required:\n        - links\n        - reportFilterId\n        - reportFilterName\n        - reportType\n      type: object\n      properties:\n        reportFilterId:\n          type: string\n          description: Report filter identifier\n          format: guid\n          example: fb19c53c-2f63-4262-9d94-2d7faa500acd\n        reportFilterName:\n          type: string\n          description: Report filter name\n          example: My report filter\n        reportType:\n          $ref: '#/components/schemas/reportType'\n        links:\n          $ref: '#/components/schemas/reportFilterHeaderLinks'\n    reportFilter:\n      required:\n        - parameters\n        - reportFilterId\n        - reportFilterName\n      type: object\n      properties:\n        reportFilterId:\n          type: string\n          description: Report filter identifier\n          format: guid\n          example: fb19c53c-2f63-4262-9d94-2d7faa500acd\n        reportFilterName:\n          type: string\n          description: Report filter name\n          example: My report filter\n        parameters:\n          $ref: '#/components/schemas/reportFilterParameters'\n        links:\n          $ref: '#/components/schemas/reportFilterLinks'\n    saveReportFilterRequest:\n      required:\n        - parameters\n        - reportFilterName\n      type: object\n      properties:\n        reportFilterName:\n          type: string\n          description: Report filter name\n          example: My report filter\n        parameters:\n          $ref: '#/components/schemas/reportFilterParameters'\n    reportFilterParameters:\n      allOf:\n        - $ref: '#/components/schemas/reportFilterCommonParameters'\n        - required:\n            - reportType\n          type: object\n          properties:\n            reportType:\n              $ref: '#/components/schemas/reportType'\n            productColumnsToDisplay:\n              $ref: '#/components/schemas/productColumnsToDisplay'\n            productState:\n              $ref: '#/components/schemas/productStateFilter'\n            analyticsProductColumnFilters:\n              $ref: '#/components/schemas/analyticsProductColumnFilters'\n    ruleList:\n      required:\n        - links\n        - rules\n      type: object\n      properties:\n        rules:\n          type: array\n          description: Rule list\n          items:\n            $ref: '#/components/schemas/rule'\n        links:\n          $ref: '#/components/schemas/ruleListLinks'\n    rule:\n      required:\n        - actionName\n        - enabled\n        - links\n        - position\n        - reportFilterId\n        - ruleId\n        - ruleName\n      type: object\n      properties:\n        ruleId:\n          type: string\n          description: The identifier of the rule\n          format: guid\n          example: c38006b4-29d0-4b8a-978b-701a0b12d5a8\n        ruleName:\n          type: string\n          description: The name of the rule\n          example: My Rule\n        lastExecutionStatus:\n          $ref: '#/components/schemas/ruleLastExecutionStatus'\n        lastExecutionUtcDate:\n          type: string\n          description: The utc date of the last execution\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        actionName:\n          $ref: '#/components/schemas/optimisationActionName'\n        reportFilterId:\n          type: string\n          description: Report filter identifier linked to the rule\n          format: guid\n          example: fb19c53c-2f63-4262-9d94-2d7faa500acd\n        position:\n          type: integer\n          description: Rule execution position\n          example: 1\n        enabled:\n          type: boolean\n          description: Is the rule enabled\n          example: true\n        validityStartUtcDate:\n          type: string\n          description: Rule validity start utc date\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        validityEndUtcDate:\n          type: string\n          description: Rule validity end utc date\n          format: date-time\n          example: 3016-08-29T09:12:33.001Z\n        links:\n          $ref: '#/components/schemas/ruleLinks'\n    createRuleRequest:\n      required:\n        - optimisationActionName\n        - reportFilterId\n        - ruleName\n      type: object\n      properties:\n        optimisationActionName:\n          $ref: '#/components/schemas/optimisationActionName'\n        ruleName:\n          type: string\n          description: The name of the rule\n          example: My rule\n        reportFilterId:\n          type: string\n          description: The report filter to use for the rule\n          format: guid\n          example: fb19c53c-2f63-4262-9d94-2d7faa500acd\n        startUtcDate:\n          type: string\n          description: The start validity utc date of the rule\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        endUtcDate:\n          type: string\n          description: The end validity utc date of the rule\n          format: date-time\n          example: 2017-09-30T10:42:40.001Z\n    updateRuleRequest:\n      required:\n        - ruleName\n      type: object\n      properties:\n        ruleName:\n          type: string\n          description: The name of the rule\n          example: My Rule Renamed\n        startUtcDate:\n          type: string\n          description: Not required. The start validity utc date of the rule.\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        endUtcDate:\n          type: string\n          description: Not required. The end validity utc date of the rule\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n      description: This update will replace the following values.\n    optimisationActionName:\n      type: string\n      description: The optimisation action\n      example: reenable\n      enum:\n        - reenable\n        - disable\n    ruleExecutionReportings:\n      type: object\n      properties:\n        executions:\n          type: array\n          description: The rules executions history\n          items:\n            $ref: '#/components/schemas/ruleExecutionReporting'\n        paginationResult:\n          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'\n    ruleExecutionReporting:\n      required:\n        - executionSource\n        - ruleId\n        - ruleName\n        - status\n      type: object\n      properties:\n        ruleId:\n          type: string\n          description: The rule identifier\n          format: guid\n          example: fd9a23a1-569b-40af-af91-f7275a57bf89\n        ruleName:\n          type: string\n          description: The name of the rule\n          example: toto\n        startedUtcDate:\n          type: string\n          description: The start utc date of the execution of the rule\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        completedUtcDate:\n          type: string\n          description: The completed utc date of the execution of the rule\n          format: date-time\n          example: 2016-08-29T09:12:33.001Z\n        status:\n          $ref: '#/components/schemas/ruleExecutionReportingStatus'\n        errorType:\n          $ref: '#/components/schemas/ruleExecutionReportingErrorType'\n        affectedProductCount:\n          type: integer\n          description: The count of affected products, active or not\n          example: 1\n        activeAffectedProductCount:\n          type: integer\n          description: The count of affected active products\n          example: 1\n        affectedChannelCount:\n          type: integer\n          description: The count of affected Channels across all products\n          example: 1\n        optimisationActionName:\n          $ref: '#/components/schemas/optimisationActionName'\n        userId:\n          type: string\n          description: The userId that executed the rule if any\n          format: guid\n          example: e8289350-69f8-45a6-b0ca-b641c83e0422\n        executionSource:\n          $ref: '#/components/schemas/ruleExecutionReportingExecutionSource'\n        reportUrl:\n          type: string\n          description: The url for the excel report for this execution\n          example: http://www.google.com\n        links:\n          $ref: '#/components/schemas/ruleExecutionReportingLinks'\n    ruleLastExecutionStatus:\n      type: string\n      description: The status of the last execution\n      example: Succeeded\n      enum:\n        - InProgress\n        - Succeeded\n        - Failed\n        - Unknown\n    ruleExecutionReportingStatus:\n      type: string\n      description: The status of the execution of the rule\n      example: Succeeded\n      enum:\n        - InProgress\n        - Succeeded\n        - AlreadyInProgress\n        - Aborted\n        - Failed\n        - Unknown\n    ruleExecutionReportingExecutionSource:\n      type: string\n      description: The requestor type for the execution of the rule\n      example: User\n      enum:\n        - Scheduler\n        - User\n    ruleExecutionReportingErrorType:\n      type: string\n      description: The error type for this execution if any\n      example: ChannelNotPresent\n      enum:\n        - ChannelNotPresent\n        - StoreIsInSystemBlockState\n    links.GetLegacyTrackingChannelCatalogsLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: /v2/user/legacyTracking/channelCatalogs\n            method: GET\n    links.GetLegacyTrackingChannelCatalogLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/legacyTracking/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n            method: GET\n    links.MigrateLegacyTrackingChannelCatalogLink:\n      allOf:\n        - $ref: '#/components/schemas/BeezUP_Common_Link3'\n        - type: object\n          example:\n            href: \u003e-\n              /v2/user/legacyTracking/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/migrate\n            method: POST\n    legacyTrackingChannelCatalogListLinks:\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetLegacyTrackingChannelCatalogsLink'\n      description: \u003e\n        Indicates how global actions you can do like how to create a channel\n        catalog, exclusion filter operators, etc...\n    legacyTrackingChannelCatalogLinks:\n      required:\n        - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/links.GetLegacyTrackingChannelCatalogLink'\n        migrate:\n          $ref: '#/components/schemas/links.MigrateLegacyTrackingChannelCatalogLink'\n      description: Indicates the actions you can do on a channel catalog\n    legacyTrackingChannelCatalogList:\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/legacyTrackingChannelCatalogListLinks'\n        channelCatalogs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/legacyTrackingChannelCatalog'\n          description: The channel catalog list. The key is the channel catalog identifier\n      description: This is the index of the channel catalog API\n    legacyTrackingChannelCatalog:\n      required:\n        - links\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/legacyTrackingChannelCatalogLinks'\n      description: The channel catalog\n  responses:\n    304_NotModified:\n      description: \u003e-\n        The ETag sent in the http header If-None-Match did not change. So you\n        are up to date !\n      headers:\n        ETag:\n          description: \u003e\n            ETag value to identify the current version of the resource\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n        Last-Modified:\n          description: \u003e\n            Last modification UTC date of the resource\\\n\n            For more details go to this link:\n            https://tools.ietf.org/html/rfc7232#section-2.2\n          schema:\n            type: string\n            format: date-time\n      content: {}\n    412_PreConditionFailed:\n      description: \u003e-\n        The ETag sent in the http header If-Match did not match with the current\n        version. Please refresh the information related to this resource.\n      headers:\n        ETag:\n          description: \u003e\n            The ETag value to identify the resource.\\\n\n            For more details go to this link:\n            http://tools.ietf.org/html/rfc7232#section-2.3\n          schema:\n            type: string\n      content: {}\n    BadRequestResponse:\n      description: Invalid request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    GeneralError:\n      description: Occurs when something goes wrong\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    StoreNotFoundResponse:\n      description: Store or resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'\n    importAlreadyInProgress:\n      description: A catalog importation is already in progress!\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/importAlreadyInProgressResponse'\n    importStarted:\n      description: Catalog importation started\n      headers:\n        Retry-After:\n          description: The duration in second to wait before polling this resource\n          schema:\n            minimum: 5\n            type: integer\n        Location:\n          description: The location of the new resource to poll\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: \u003e-\n              #/components/schemas/links.Importation_GetImportationMonitoringLink\n    orderGenerateForbiddenResponse:\n      description: |\n        OwnerId not authorized\n        The required order invoice settings have not been set\n        BeezUPOrderStatus forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - UserNotOwnerException\n        - OrderInvoiceDesignSettingsNotFoundException\n        - OrderInvoiceGeneralSettingsNotFoundException\n        - OrderInvoiceGenerationBeezUPOrderStatusForbiddenException\n    orderGenerateTooManyRequestsResponse:\n      description: |\n        Too many Requests. Please retry in a few seconds\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderInvoiceTooManyRequestsException\n    orderInvoiceConflictResponse:\n      description: |\n        The InvoiceNumber is already used\n        There is already an invoice for this order\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderInvoiceNumberAlreadyUsedException\n        - OrderAlreadyHasInvoiceException\n    orderInvoiceDesignSettingsNotFoundResponse:\n      description: |\n        The order invoice design is not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderInvoiceDesignSettingsNotFoundException\n    orderInvoiceGeneralSettingsNotFoundResponse:\n      description: |\n        The order invoice general settings are not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderInvoiceGeneralSettingsNotFoundException\n    orderInvoiceNotFound:\n      description: |\n        The order invoice does not exist\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderInvoiceNotFoundException\n    orderNotFoundResponse:\n      description: |\n        The order cannot be retrieved\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderNotFoundException\n    orderSubscriptionTargetNotAvailableResponse:\n      description: The target url is not available\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderSubscriptionTargetNotAvailableException\n    ownerIdNotAuthorizedResponse:\n      description: The ownerId is not found or not authorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - UserNotOwnerException\n    processingResponse:\n      description: \u003e-\n        The marketplace configuration related to this channel catalog is\n        currently in progress. Please retry later.\n      headers:\n        Retry-After:\n          description: Indicate the duration to before the next retry in second.\n          schema:\n            type: integer\n            format: int32\n      content: {}\n    retryRejectedResponse:\n      description: \u003e-\n        The subscription is deactivated or your subscription consumption\n        availability status is available.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderSubscriptionRetryRejectedException\n    saveOrderInvoiceDesignSettingsBadRequestResponse:\n      description: |\n        The design did not pass the validation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderInvoiceDesignSettingsValidationFailedException\n    saveOrderInvoiceGeneralSettingsBadRequestResponse:\n      description: |\n        The settingsgeneral did not pass the validation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderInvoiceGeneralSettingsValidationFailedException\n    subscriptionAlreadyExistsResponse:\n      description: The subscription id is already used.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderSubscriptionAlreadyExistsException\n    subscriptionNotFoundResponse:\n      description: The subscription is not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponseMessage'\n      x-exceptions:\n        - OrderSubscriptionNotFoundException\n  parameters:\n    ifNoneMatchParameter:\n      name: If-None-Match\n      in: header\n      description: \u003e\n        ETag value to identify the last known version of requested resource.\\\n\n        To avoid useless exchange, we recommend you to indicate the ETag you\n        previously got from this operation.\\\n\n        If the ETag value does not match the response will be 200 to give you a\n        new content, otherwise the response will be: 304 Not Modified, without\n        any content.\\\n\n        For more details go to this link:\n        http://tools.ietf.org/html/rfc7232#section-2.3\n      schema:\n        type: string\n    acceptEncodingRequiredParameter:\n      name: Accept-Encoding\n      in: header\n      description: \u003e-\n        Allows the client to indicate whether it accepts a compressed encoding\n        to reduce traffic size.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n    acceptLanguageParameter:\n      name: Accept-Language\n      in: header\n      description: Indicates that the client accepts the following languages.\n      style: simple\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n    storeIdOnlyGeneralParameters:\n      name: storeId\n      in: path\n      description: Your store identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n    executionId:\n      name: executionId\n      in: path\n      description: The execution identifier of you catalog importation\n      required: true\n      schema:\n        type: string\n        format: guid\n    catalogColumnId:\n      name: columnId\n      in: path\n      description: The catalog column identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n    customColumnId:\n      name: columnId\n      in: path\n      description: The custom column identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n    productSampleIndex:\n      name: productSampleIndex\n      in: path\n      description: Index of the product sample. Starting from 0 to 99.\n      required: true\n      schema:\n        maximum: 99\n        minimum: 0\n        type: integer\n        format: int32\n    channelIdParameter:\n      name: channelId\n      in: path\n      description: The channel identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n      example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28\n    channelCatalogIdParameter:\n      name: channelCatalogId\n      in: path\n      description: The channel catalog identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n    productIdParameter:\n      name: productId\n      in: path\n      description: The product identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n      example: 578419df-1bbf-41a6-96fa-862e42182b67\n    exportFormatInQueryGeneralParameter:\n      name: format\n      in: query\n      description: The file type of the exportation\n      required: true\n      schema:\n        type: string\n        enum:\n          - xlsx\n          - csv\n    groupIdParameter:\n      name: groupId\n      in: path\n      description: The exclusion filter group identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0\n    pageNumberQueryStrngParameter:\n      name: pageNumber\n      in: query\n      description: The page number you want to get\n      required: true\n      schema:\n        minimum: 1\n        type: integer\n        format: int32\n      example: '1'\n    pageSizeQueryStrngParameter:\n      name: pageSize\n      in: query\n      description: The entry count you want to get\n      required: true\n      schema:\n        maximum: 100\n        minimum: 25\n        type: integer\n        format: int32\n      example: '25'\n    marketplaceTechnicalCodeParameter:\n      name: marketplaceTechnicalCode\n      in: path\n      description: The marketplace technical code\n      required: true\n      schema:\n        type: string\n      example: Amazon\n    accountIdParameter:\n      name: accountId\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: '1001'\n    beezUPOrderIdParameter:\n      name: beezUPOrderId\n      in: path\n      description: The BeezUP Order identifier\n      required: true\n      schema:\n        type: string\n        format: uuid\n      example: '00000000000000000000000000000000000000000000000'\n    changeOrderTypeParameter:\n      name: changeOrderType\n      in: path\n      description: The Order change type\n      required: true\n      schema:\n        type: string\n        x-lov: OrderChangeBusinessOperationType\n      x-lov: OrderChangeBusinessOperationType\n    userNameInQueryParameter:\n      name: userName\n      in: query\n      description: \u003e-\n        Sometimes the user in the e-commerce application is not the same as user\n        associated with the current subscription key. We recommend providing\n        your application's user login.\n      required: true\n      schema:\n        type: string\n    testModeInQueryParameter:\n      name: testMode\n      in: query\n      description: \u003e-\n        If true, the operation will be not be sent to marketplace. But the\n        validation will be taken in account.\n      schema:\n        type: boolean\n        default: false\n      example: 'false'\n    ifMatchParameter:\n      name: If-Match\n      in: header\n      description: \u003e\n        ETag value to identify the last known version of requested resource.\\\n\n        To ensure that you are making a change on the lastest version of the\n        resource.\\\n\n        For more details go to this link:\n        http://tools.ietf.org/html/rfc7232#section-2.3\n      required: true\n      schema:\n        type: string\n    storeIdsParameter:\n      name: storeIds\n      in: query\n      description: StoredIds to filter\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n    subscriptionIdPathParameter:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: string\n        format: SubscriptionId\n    marketplaceTechnicalCode:\n      name: marketplaceTechnicalCode\n      in: path\n      description: The Marketplace Technical Code\n      required: true\n      schema:\n        type: string\n        format: MarketplaceTechnicalCode\n    accountId:\n      name: accountId\n      in: path\n      description: The Account Identifier\n      required: true\n      schema:\n        type: string\n        format: MarketplaceAccountId\n    beezUPOrderUUID:\n      name: beezUPOrderUUID\n      in: path\n      description: The BeezUP Order UUID\n      required: true\n      schema:\n        type: string\n        format: BeezUPOrderUUID\n    optimisationActionNameGeneralParameters:\n      name: actionName\n      in: path\n      required: true\n      schema:\n        type: string\n        format: optimisationActionName\n        enum:\n          - reenable\n          - disable\n    reportFilterIdOnlyGeneralParameters:\n      name: reportFilterId\n      in: path\n      description: Your report filter identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n    ruleIdOnlyGeneralParameters:\n      name: ruleId\n      in: path\n      description: Your rule identifier\n      required: true\n      schema:\n        type: string\n        format: guid\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: Ocp-Apim-Subscription-Key\n      in: header\n      description: Represents API Key 'Ocp-Apim-Subscription-Key'\nx-tagGroups:\n  - name: Public - Security\n    tags:\n      - Public - Security - Security\n  - name: Public - Channels\n    tags:\n      - Public - Channels - Public Channels\n  - name: Public - List of Values\n    tags:\n      - Public - List of Values - LOV\n  - name: User - List of Values\n    tags:\n      - User - List of Values - LOV\n  - name: Customer\n    tags:\n      - Customer - Global\n      - Customer - Account\n      - Customer - Security\n      - Customer - Stores\n      - Customer - Shares\n      - Customer - Alerts\n      - Customer - Rights\n      - Customer - Friends\n      - Customer - Contracts\n      - Customer - Invoices\n  - name: Catalogs\n    tags:\n      - Catalogs - Auto\n      - Catalogs - Global\n      - Catalogs - Importation Process\n      - Catalogs - Importation Catalog Info\n      - Catalogs - Catalog\n  - name: Channels\n    tags:\n      - Channels - Channels Global\n  - name: Channel Catalogs\n    tags:\n      - Channel Catalogs - Global\n      - Channel Catalogs - Settings\n      - Channel Catalogs - Column Mappings\n      - Channel Catalogs - Categories\n      - Channel Catalogs - Exclusion Filters\n      - Channel Catalogs - Products\n      - Channel Catalogs - Products Overrides\n      - Channel Catalogs - Products Optimisation\n      - Channel Catalogs - Exportations\n  - name: Marketplaces - Channel catalogs\n    tags:\n      - Marketplaces - Channel catalogs - Global\n      - Marketplaces - Channel catalogs - Publications\n      - Marketplaces - Channel catalogs - Settings\n  - name: Marketplaces - Orders\n    tags:\n      - Marketplaces - Orders - Global\n      - Marketplaces - Orders - AutoTransitions\n      - Marketplaces - Orders - List\n      - Marketplaces - Orders - Order\n      - Marketplaces - Orders - Batches\n      - Marketplaces - Orders - Exports\n  - name: Marketplaces - Orders V3\n    tags:\n      - Marketplaces - Orders V3 - Global\n      - Marketplaces - Orders V3 - List\n      - Marketplaces - Orders V3 - Order\n      - Marketplaces - Orders V3 - Batches\n  - name: Marketplaces - Orders - Subscriptions\n    tags:\n      - Marketplaces - Orders - Subscriptions - Subscriptions\n  - name: OM Invoice - API\n    tags:\n      - OM Invoice - API - Settings\n      - OM Invoice - API - Generation\n  - name: Analytics\n    tags:\n      - Analytics - Global\n      - Analytics - Tracking\n      - Analytics - Statistics\n      - Analytics - Optimisations\n      - Analytics - Reports\n      - Analytics - Rules\n  - name: Channel Catalogs - Legacy Tracking\n    tags:\n      - Channel Catalogs - Legacy Tracking - Global\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/tool-tests/6-allOf/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/tool-tests/6-allOf/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v2/user/marketplaces/orders/list/full\": post: responses: code 200: contents: application/json: generate schema: field orders: item: allOf: merge properties: try to merge conflicting property schemas: schema type mismatch:  and object"
}