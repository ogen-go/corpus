{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/georust/ogcapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "ogcapi-services/assets/openapi/openapi.yaml",
			"byteSize": 29696,
			"content": "openapi: 3.0.3\ninfo:\n  title: OGC API\n  version: 0.1.0\n  description: |-\n    This is an OpenAPI definition of various OGC API specifications as well as\n    the SpatioTemporal Asset Catalog (STAC) API specification.\n  contact:\n    name: Balthasar Teuscher\n    email: balthasar.teuscher@gmail.com\n  license:\n    name: CC-BY 4.0 license\n    url: https://creativecommons.org/licenses/by/4.0/\nservers:\n  - url: http://localhost:8484\n    description: \"Development server\"\ntags:\n  - name: server\n  - name: Capabilities\n    description: essential characteristics of this API\n  - name: Data\n    description: access to data (features)\npaths:\n  /:\n    get:\n      description: \u003e-\n        The landing page provides links to the API definition and the\n        conformance statements for this API.\n      operationId: getLandingPage\n      responses:\n        200:\n          $ref: \"#/components/responses/LandingPage\"\n        400:\n          $ref: \"#/components/responses/400\"\n        500:\n          $ref: \"#/components/responses/500\"\n      summary: Landing page\n      tags:\n        - server\n  /api:\n    get:\n      description: This document\n      responses:\n        200:\n          $ref: \"#/components/responses/200\"\n        400:\n          $ref: \"#/components/responses/400\"\n        default:\n          $ref: \"#/components/responses/500\"\n      summary: This document\n      tags:\n        - server\n  /conformance:\n    get:\n      description: \u003e-\n        A list of all conformance classes specified in a standard that the\n        server conforms to.\n      operationId: getConformanceDeclaration\n      responses:\n        200:\n          $ref: \"#/components/responses/ConformanceDeclaration\"\n        400:\n          $ref: \"#/components/responses/400\"\n        500:\n          $ref: \"#/components/responses/500\"\n      summary: API conformance definition\n      tags:\n        - server\n  /collections:\n    get:\n      tags:\n        - Capabilities\n      summary: the feature collections in the dataset\n      operationId: getCollections\n      responses:\n        200:\n          $ref: \"#/components/schemas/collections\"\n        500:\n          $ref: \"#/components/schemas/exception\"\n  /collections/{collectionId}:\n    get:\n      tags:\n        - Capabilities\n      summary: describe the feature collection with id `collectionId`\n      operationId: describeCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionId\"\n      responses:\n        200:\n          $ref: \"#/components/schemas/collectionDesc\"\n        404:\n          $ref: \"#/components/schemas/exception\"\n        500:\n          $ref: \"#/components/schemas/exception\"\n  /collections/{collectionId}/items:\n    get:\n      tags:\n        - Data\n      summary: fetch features\n      description: |-\n        Fetch features of the feature collection with id `collectionId`.\n\n        Every feature in a dataset belongs to a collection. A dataset may\n        consist of multiple feature collections. A feature collection is often a\n        collection of features of a similar type, based on a common schema.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeatures\n      parameters:\n        - $ref: \"#/components/parameters/collectionId\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/bbox\"\n        - $ref: \"#/components/parameters/bbox-crs\"\n        - $ref: \"#/components/parameters/datetime\"\n        - $ref: \"#/components/parameters/crs\"\n      responses:\n        200:\n          $ref: \"#/components/responses/FeatureCollection\"\n        400:\n          $ref: \"#/components/schemas/exception\"\n        404:\n          $ref: \"#/components/schemas/exception\"\n        500:\n          $ref: \"#/components/schemas/exception\"\n  /collections/{collectionId}/items/{featureId}:\n    get:\n      tags:\n        - Data\n      summary: fetch a single feature\n      description: |-\n        Fetch the feature with id `featureId` in the feature collection\n        with id `collectionId`.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeature\n      parameters:\n        - $ref: \"#/components/parameters/collectionId\"\n        - $ref: \"#/components/parameters/featureId\"\n        - $ref: \"#/components/parameters/crs\"\n      responses:\n        200:\n          $ref: \"#/components/responses/Feature\"\n        404:\n          $ref: \"#/components/schemas/exception\"\n        500:\n          $ref: \"#/components/schemas/exception\"\ncomponents:\n  headers:\n    Content-Crs:\n      description: a URI, in angular brackets, identifying the coordinate reference system used in the content / payload\n      schema:\n        type: string\n      example: \"\u003chttp://www.opengis.net/def/crs/EPSG/0/3395\u003e\"\n  parameters:\n    bbox:\n      name: bbox\n      in: query\n      description: \u003e-\n        Only resources that have a geometry that intersects the bounding box are selected.\n        The bounding box is provided as four or six numbers, depending on whether the\n        coordinate reference system includes a vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Lower left corner, coordinate axis 3 (optional)\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n        * Upper right corner, coordinate axis 3 (optional)\n\n        If the value consists of four numbers, the coordinate reference system is\n        WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) \n        unless a different coordinate reference system is specified in the parameter `bbox-crs`.\n\n        If the value consists of six numbers, the coordinate reference system is WGS 84 \n        longitude/latitude/ellipsoidal height (http://www.opengis.net/def/crs/OGC/0/CRS84h)\n        unless a different coordinate reference system is specified in a parameter `bbox-crs`.\n\n        For WGS84 longitude/latitude the values are in most cases the sequence of\n        minimum longitude, minimum latitude, maximum longitude and maximum latitude.\n        However, in cases where the box spans the antimeridian the first value\n        (west-most box edge) is larger than the third value (east-most box edge).\n\n        If the vertical axis is included, the third and the sixth number are the\n        bottom and the top of the 3-dimensional bounding box.\n\n        If a resource has multiple spatial geometry properties, it is the decision of the server \n        whether only a single spatial geometry property is used to determine\n        the extent or all relevant geometries.\n      required: false\n      schema:\n        type: array\n        minItems: 4\n        maxItems: 6\n        items:\n          type: number\n      style: form\n      explode: false\n    bbox-crs:\n      name: bbox-crs\n      description: |-\n        Asserts the CRS used for the coordinate values of the bbox parameter.\n        The default is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)\n        for a value with 4 numbers and WGS 84 longitude/latitude/ellipsoidal\n        height (http://www.opengis.net/def/crs/OGC/0/CRS84h) for a value with 6 numbers.\n      in: query\n      required: false\n      schema:\n        type: string\n        format: uri\n      style: form\n      explode: false\n    collectionId:\n      name: collectionId\n      in: path\n      description: local identifier of a collection\n      required: true\n      schema:\n        type: string\n    crs:\n      name: crs\n      description: |-\n        If the parameter is specified, then the coordinates of all geometry-valued\n        properties in the response document are in the requested CRS. Otherwise\n        the coordinates are in the default CRS, that is http://www.opengis.net/def/crs/OGC/1.3/CRS84\n        for coordinates without height and http://www.opengis.net/def/crs/OGC/0/CRS84h\n        for coordinates with ellipsoidal height.\n      in: query\n      required: false\n      schema:\n        type: string\n        format: uri\n      style: form\n      explode: false\n    datetime:\n      name: datetime\n      in: query\n      description: \u003e-\n        Either a date-time or an interval, open or closed. Date and time expressions\n        adhere to RFC 3339. Open intervals are expressed using double-dots.\n\n        Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n        * Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\n        Only features that have a temporal property that intersects the value of\n        `datetime` are selected.\n\n        If a feature has multiple temporal properties, it is the decision of the\n        server whether only a single temporal property is used to determine\n        the extent or all relevant temporal properties.\n      required: false\n      schema:\n        type: string\n      style: form\n      explode: false\n    featureId:\n      name: featureId\n      in: path\n      description: local identifier of a feature\n      required: true\n      schema:\n        type: string\n    limit:\n      name: limit\n      in: query\n      description: |-\n        The optional limit parameter limits the number of items that are presented in the response document.\n\n        Only items are counted that are on the first level of the collection in the response document.\n        Nested objects contained within the explicitly requested items shall not be counted.\n\n        Minimum = 1. Maximum = 10000. Default = 10.\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 10000\n        default: 10\n      style: form\n      explode: false\n  responses:\n    ConformanceDeclaration:\n      description: |-\n        The URIs of all conformance classes supported by the server.\n        To support \"generic\" clients that want to access multiple\n        OGC API Features implementations - and not \"just\" a specific\n        API / server, the server declares the conformance\n        classes it implements and conforms to.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/confClasses\"\n          example:\n            conformsTo:\n              - \"http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core\"\n              - \"http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage\"\n              - \"http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30\"\n              - \"http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html\"\n              - \"http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json\"\n        text/html:\n          schema:\n            type: string\n    FeatureCollection:\n      description: Paginated GeoJSON feature collection\n      headers:\n        Content-Crs:\n          $ref: \"#/components/headers/Content-Crs\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/featureCollectionGeoJSON\"\n    Feature:\n      description: GeoJSON feature of a collection\n      headers:\n        Content-Crs:\n          $ref: \"#/components/headers/Content-Crs\"\n      content:\n        application/geo+json:\n          schema:\n            $ref: \"#/components/schemas/featureGeoJSON\"\n    LandingPage:\n      description: |-\n        The landing page provides links to the API definition\n        (link relations `service-desc` and `service-doc`),\n        and the Conformance declaration (path `/conformance`,\n        link relation `conformance`).\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/landingPage\"\n        text/html:\n          schema:\n            type: string\n    exception:\n      description: An error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/exception\"\n        text/html:\n          schema:\n            type: string\n    200:\n      description: |-\n        General Success response.\n    400:\n      description: |-\n        General HTTP error response.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/exception\"\n        text/html:\n          schema:\n            type: string\n    500:\n      description: |-\n        A server error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/exception\"\n        text/html:\n          schema:\n            type: string\n  schemas:\n    collectionDesc:\n      type: object\n      required:\n        - id\n        - links\n      properties:\n        id:\n          description: identifier of the collection used, for example, in URIs\n          type: string\n          example: address\n        title:\n          description: human readable title of the collection\n          type: string\n          example: address\n        description:\n          description: a description of the features in the collection\n          type: string\n          example: An address\n        attribution:\n          type: string\n          title: attribution for the collection\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/link\"\n        extent:\n          $ref: \"#/components/schemas/extent\"\n        itemType:\n          description: An indicator about the type of the items in the collection\n          type: string\n        crs:\n          description: |-\n            the list of coordinate reference systems supported by the API; the\n            first item is the default coordinate reference system\n          type: array\n          items:\n            type: string\n          default:\n            - http://www.opengis.net/def/crs/OGC/1.3/CRS84\n          example:\n            - http://www.opengis.net/def/crs/OGC/1.3/CRS84\n            - http://www.opengis.net/def/crs/EPSG/0/4326\n        storageCrs:\n          description: |-\n            the CRS identifier, from the list of supported CRS identifiers, \n            that may be used to retrieve features from a collection without the\n            need to apply a CRS transformation\n          type: string\n          format: uri\n        storageCrsCoordinateEpoch:\n          description: |-\n            point in time at which coordinates in the spatial feature \n            collection are referenced to the dynamic coordinate reference \n            system in `storageCrs`, that may be used to retrieve features from \n            a collection without the need to apply a change of coordinate \n            epoch. It is expressed as a decimal year in the Gregorian calendar\n          type: number\n          example: \"2017-03-25 in the Gregorian calendar is epoch 2017.23\"\n    collections:\n      type: object\n      required:\n        - links\n        - collections\n      properties:\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/link\"\n        timeStamp:\n          type: string\n          format: date-time\n        numberMatched:\n          type: integer\n          minimum: 0\n        numberReturned:\n          type: integer\n          minimum: 0\n        crs:\n          description: |-\n            a global list of CRS identifiers that are supported by spatial feature \n            collections offered by the service\n          type: array\n          items:\n            type: string\n            format: uri\n        collections:\n          type: array\n          items:\n            $ref: \"#/components/schemas/collectionDesc\"\n    confClasses:\n      type: object\n      required:\n        - conformsTo\n      properties:\n        conformsTo:\n          type: array\n          items:\n            type: string\n            example: http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core\n    exception:\n      title: Exception Schema\n      description: JSON schema for exceptions based on RFC 7807\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          type: integer\n        detail:\n          type: string\n        instance:\n          type: string\n    extent:\n      description: |-\n        The extent of the features in the collection. In the Core only spatial and temporal\n        extents are specified. Extensions may add additional members to represent other\n        extents, for example, thermal or pressure ranges.\n\n        The first item in the array describes the overall extent of\n        the data. All subsequent items describe more precise extents, \n        e.g., to identify clusters of data.\n        Clients only interested in the overall extent will only need to\n        access the first item in each array.\n      type: object\n      properties:\n        spatial:\n          description: |-\n            The spatial extent of the features in the collection.\n          type: object\n          properties:\n            bbox:\n              description: |-\n                One or more bounding boxes that describe the spatial extent of the dataset.\n                In the Core only a single bounding box is supported.\n\n                Extensions may support additional areas.\n                The first bounding box describes the overall spatial\n                extent of the data. All subsequent bounding boxes describe \n                more precise bounding boxes, e.g., to identify clusters of data.\n                Clients only interested in the overall spatial extent will\n                only need to access the first item in each array.\n              type: array\n              minItems: 1\n              items:\n                description: |-\n                  Each bounding box is provided as four or six numbers, depending on\n                  whether the coordinate reference system includes a vertical axis\n                  (height or depth):\n\n                  * Lower left corner, coordinate axis 1\n                  * Lower left corner, coordinate axis 2\n                  * Minimum value, coordinate axis 3 (optional)\n                  * Upper right corner, coordinate axis 1\n                  * Upper right corner, coordinate axis 2\n                  * Maximum value, coordinate axis 3 (optional)\n\n                  If the value consists of four numbers, the coordinate reference system is\n                  WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)\n                  unless a different coordinate reference system is specified in a parameter `bbox-crs`.\n\n                  If the value consists of six numbers, the coordinate reference system is\n                  WGS 84 longitude/latitude/height (http://www.opengis.net/def/crs/OGC/0/CRS84h)\n                  unless a different coordinate reference system is specified in a parameter `bbox-crs`.\n\n                  For WGS 84 longitude/latitude the values are in most cases the sequence of\n                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.\n                  However, in cases where the box spans the antimeridian the first value\n                  (west-most box edge) is larger than the third value (east-most box edge).\n\n                  If the vertical axis is included, the third and the sixth number are\n                  the bottom and the top of the 3-dimensional bounding box.\n\n                  If a feature has multiple spatial geometry properties, it is the decision of the\n                  server whether only a single spatial geometry property is used to determine\n                  the extent or all relevant geometries.\n                type: array\n                oneOf:\n                  - minItems: 4\n                    maxItems: 4\n                  - minItems: 6\n                    maxItems: 6\n                items:\n                  type: number\n                example:\n                  - -180\n                  - -90\n                  - 180\n                  - 90\n            crs:\n              description: |-\n                Coordinate reference system of the coordinates in the spatial extent\n                (property `bbox`). The default reference system is WGS 84 longitude/latitude.\n                In the Core the only other supported coordinate reference system is\n                WGS 84 longitude/latitude/height for coordinates with height.\n                Extensions may support additional coordinate reference systems and add\n                additional enum values.\n              type: string\n              enum:\n                - \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n                - \"http://www.opengis.net/def/crs/OGC/0/CRS84h\"\n              default: \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n        temporal:\n          description: |-\n            The temporal extent of the features in the collection.\n          type: object\n          properties:\n            interval:\n              description: |-\n                One or more time intervals that describe the temporal extent of the dataset.\n                In the Core only a single time interval is supported.\n\n                Extensions may support multiple intervals.\n                The first time interval describes the overall\n                temporal extent of the data. All subsequent time intervals describe \n                more precise time intervals, e.g., to identify clusters of data.\n                Clients only interested in the overall extent will only need\n                to access the first item in each array.\n              type: array\n              minItems: 1\n              items:\n                description: |-\n                  Begin and end times of the time interval. The timestamps are in the\n                  temporal coordinate reference system specified in `trs`. By default\n                  this is the Gregorian calendar.\n\n                  The value `null` is supported and indicates an open time interval.\n                type: array\n                minItems: 2\n                maxItems: 2\n                items:\n                  type: string\n                  format: date-time\n                  nullable: true\n                example:\n                  - \"2011-11-11T12:22:11Z\"\n                  - null\n            trs:\n              description: |-\n                Coordinate reference system of the coordinates in the temporal extent\n                (property `interval`). The default reference system is the Gregorian calendar.\n                In the Core this is the only supported temporal coordinate reference system.\n                Extensions may support additional temporal coordinate reference systems and add\n                additional enum values.\n              type: string\n              enum:\n                - \"http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\"\n              default: \"http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\"\n    featureCollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - features\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: \"#/components/schemas/featureGeoJSON\"\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/link\"\n        timeStamp:\n          type: string\n          format: date-time\n        numberMatched:\n          type: integer\n          minimum: 0\n        numberReturned:\n          type: integer\n          minimum: 0\n    featureGeoJSON:\n      type: object\n      required:\n        - type\n        - geometry\n        - properties\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          $ref: \"#/components/schemas/geometryGeoJSON\"\n        properties:\n          type: object\n          nullable: true\n        id:\n          oneOf:\n            - type: string\n            - type: integer\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/link\"\n    geometryGeoJSON:\n      oneOf:\n        - $ref: \"#/components/schemas/pointGeoJSON\"\n        - $ref: \"#/components/schemas/multipointGeoJSON\"\n        - $ref: \"#/components/schemas/linestringGeoJSON\"\n        - $ref: \"#/components/schemas/multilinestringGeoJSON\"\n        - $ref: \"#/components/schemas/polygonGeoJSON\"\n        - $ref: \"#/components/schemas/multipolygonGeoJSON\"\n        - $ref: \"#/components/schemas/geometrycollectionGeoJSON\"\n    geometrycollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - geometries\n      properties:\n        type:\n          type: string\n          enum:\n            - GeometryCollection\n        geometries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/geometryGeoJSON\"\n    landingPage:\n      type: object\n      required:\n        - links\n      properties:\n        title:\n          type: string\n          title: The title of the API.\n          description: While a title is not required, implementers are strongly advised to include one.\n          example: Buildings in Bonn\n        description:\n          type: string\n          example: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Common specification.\n        attribution:\n          type: string\n          title: attribution for the API\n          description: The `attribution` should be short and intended for presentation to a user, for example, in a corner of a map. Parts of the text can be links to other resources if additional information is needed. The string can include HTML markup.\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/link\"\n    linestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - LineString\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    link:\n      type: object\n      required:\n        - href\n        - rel\n      properties:\n        href:\n          type: string\n          description: Supplies the URI to a remote resource (or resource fragment).\n          example: http://data.example.com/buildings/123\n        rel:\n          type: string\n          description: The type or semantics of the relation.\n          example: alternate\n        type:\n          type: string\n          description: A hint indicating what the media type of the result of dereferencing the link should be.\n          example: application/geo+json\n        hreflang:\n          type: string\n          description: A hint indicating what the language of the result of dereferencing the link should be.\n          example: en\n        title:\n          type: string\n          description: Used to label the destination of a link such that it can be used as a human-readable identifier.\n          example: Trierer Strasse 70, 53115 Bonn\n        length:\n          type: integer\n    multilinestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiLineString\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    multipointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPoint\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    multipolygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPolygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              type: array\n              minItems: 4\n              items:\n                type: array\n                minItems: 2\n                items:\n                  type: number\n    numberMatched:\n      description: |-\n        The number of features of the feature type that match the selection\n        parameters like `bbox`.\n      type: integer\n      minimum: 0\n      example: 127\n    numberReturned:\n      description: |-\n        The number of features in the feature collection.\n\n        A server may omit this information in a response, if the information\n        about the number of features is not known or difficult to compute.\n\n        If the value is provided, the value shall be identical to the number\n        of items in the \"features\" array.\n      type: integer\n      minimum: 0\n      example: 10\n    pointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: number\n    polygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Polygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 4\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    timeStamp:\n      description: This property indicates the time and date when the response was generated.\n      type: string\n      format: date-time\n      example: \"2017-08-17T08:05:32Z\"\n",
			"canonicalURL": "/github.com/georust/ogcapi@61df22b7a7b4082f8a66df9599939c65c07992f5/-/blob/ogcapi-services/assets/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/georust/ogcapi/blob/61df22b7a7b4082f8a66df9599939c65c07992f5/ogcapi-services/assets/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: anonymous type name conflict: \"Exception\""
}