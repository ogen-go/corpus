{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tool-tests/5-deprecated/openapi.yaml",
			"byteSize": 96273,
			"content": "openapi: 3.0.1\nservers:\n  - url: \"https://api.soundcloud.com\"\ninfo:\n  x-ballerina-display:\n    label: SoundCloud\n    iconPath: \"icon.png\"\n  contact:\n    name: API issue tracker\n    url: \"https://github.com/soundcloud/api\"\n  termsOfService: \"https://developers.soundcloud.com/docs/api/terms-of-use\"\n  title: SoundCloud Public API Specification\n  version: 1.0.0\n  x-apisguru-categories:\n    - media\n  x-logo:\n    url: \"https://a-v2.sndcdn.com/assets/images/sc-icons/ios-a62dfc8fe7.png\"\n  x-providerName: soundcloud.com\n  x-ballerina-init-description: >-\n   The connector initialization requires setting the API credentials. \n   \n   Create an [SoundCloud account](https://soundcloud.com/) \n   and obtain tokens following [this guide](https://developers.soundcloud.com/docs/api/guide).\n  description: >-\n    This is a generated connector for [SoundCloud API v1.0.0](https://developers.soundcloud.com/) OpenAPI Specification.\n\n    SoundCloud API provides capability to access the online audio distribution platform and music sharing website that enables \n    you to upload,promote, and share audio, as well as a digital signal processor enabling listeners to stream audio. \ntags:\n  - description: Authentication and Authorization Endpoints.\n    name: oauth\n  - description: Own User Endpoints.\n    name: me\n  - description: Search Endpoints.\n    name: search\n  - description: Playlists Endpoints.\n    name: playlists\n  - description: Tracks Endpoints.\n    name: tracks\n  - description: SoundCloud Users Endpoints.\n    name: users\n  - description: Liking Tracks & Playlists.\n    name: likes\n  - description: Reposting Tracks & Playlists.\n    name: reposts\n  - description: Miscellaneous Endpoints.\n    name: miscellaneous\npaths:\n  \"/likes/playlists/{playlist_id}\":\n    delete:\n      operationId: unlikePlaylist\n      parameters:\n        - $ref: \"#/components/parameters/playlist_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Success\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n      summary: Unlikes a playlist.\n      tags:\n        - likes\n    post:\n      operationId: likePlaylist\n      parameters:\n        - $ref: \"#/components/parameters/playlist_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Success\"\n        \"201\":\n          $ref: \"#/components/responses/Created\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      security:\n        - AuthHeader: []\n\n      summary: Likes a playlist.\n      tags:\n        - likes\n  \"/likes/tracks/{track_id}\":\n    delete:\n      operationId: unlikeTrack\n      parameters:\n        - $ref: \"#/components/parameters/test_track_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Success\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Unlikes a track.\n      tags:\n        - likes\n    post:\n      operationId: likeTrack\n      parameters:\n        - $ref: \"#/components/parameters/test_track_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Success\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      security:\n        - AuthHeader: []\n\n      summary: Likes a track.\n      tags:\n        - likes\n  /me:\n    get:\n      operationId: getUserDetail\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CompleteUser\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns the authenticated user’s information.\n      tags:\n        - me\n  /me/activities:\n    get:\n      operationId: getActivities\n      parameters:\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Activities\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns the authenticated user's activities.\n      tags:\n        - me\n  /me/activities/all/own:\n    get:\n      operationId: getOwnActivities\n      parameters:\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Activities\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Recent the authenticated user's activities.\n      tags:\n        - me\n  /me/activities/tracks:\n    get:\n      operationId: getRecentTrackRelatedActivities\n      parameters:\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Activities\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns the authenticated user's recent track related activities.\n      tags:\n        - me\n  /me/connections:\n    get:\n      operationId: listConnectedSocialAccounts\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Connections\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of the authenticated user's connected social accounts.\n      tags:\n        - me\n  \"/me/connections/{connection_id}\":\n    get:\n      operationId: getConnectionByID\n      parameters:\n        - $ref: \"#/components/parameters/connection_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Connection\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns the authenticated user's connected social account.\n      tags:\n        - me\n  /me/followers:\n    get:\n      operationId: getFollowers\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Users\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of users who are following the authenticated user.\n      tags:\n        - me\n  /me/followings:\n    get:\n      operationId: listFollowings\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Users\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of users who are followed by the authenticated user.\n      tags:\n        - me\n  /me/followings/tracks:\n    get:\n      operationId: listRecentTracks\n      parameters:\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/TracksList\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: >-\n        Returns a list of recent tracks from users followed by the authenticated\n        user.\n      tags:\n        - me\n  \"/me/followings/{user_id}\":\n    delete:\n      operationId: deleteFollowing\n      parameters:\n        - $ref: \"#/components/parameters/user_id_to_follow\"\n      responses:\n        \"200\":\n          content:\n            application/json; charset=utf-8:\n              examples:\n                \"200\":\n                  $ref: \"#/components/examples/OK\"\n          description: Success\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n      security:\n        - AuthHeader: []\n\n      summary: Deletes a user who is followed by the authenticated user.\n      tags:\n        - me\n    put:\n      operationId: followUser\n      parameters:\n        - $ref: \"#/components/parameters/user_id_to_follow\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Successful\"\n        \"201\":\n          $ref: \"#/components/responses/User\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Follows a user.\n      tags:\n        - me\n  /me/likes/tracks:\n    get:\n      operationId: listLikedTracks\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Tracks\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of favorites or liked tracks of the authenticated user.\n      tags:\n        - me\n  /me/playlists:\n    get:\n      operationId: listPlaylist\n      description: \"Returns playlist info, playlist tracks and tracks owner info.\"\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/PlaylistsArray\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns user’s playlists (sets).\n      tags:\n        - me\n  /me/tracks:\n    get:\n      operationId: listTracks\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Tracks\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of user's tracks.\n      tags:\n        - me\n  /playlists:\n    get:\n      operationId: searchPlaylist\n      parameters:\n        - $ref: \"#/components/parameters/q\"\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Playlists\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Performs a playlist search based on a query\n      tags:\n        - search\n    post:\n      operationId: createPlaylist\n      requestBody:\n        content:\n          application/json:\n            examples:\n              default:\n                $ref: \"#/components/examples/CreateUpdatePlaylistRequest\"\n            schema:\n              $ref: \"#/components/schemas/CreateUpdatePlaylistRequest\"\n        description: Create Playlist request\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/LegacyPlaylist\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Creates a playlist.\n      tags:\n        - playlists\n  \"/playlists/{playlist_id}\":\n    delete:\n      operationId: deletePlaylist\n      parameters:\n        - $ref: \"#/components/parameters/fake_playlist_id\"\n      responses:\n        \"200\":\n          description: Success\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Deletes a playlist.\n      tags:\n        - playlists\n    get:\n      operationId: getPlaylist\n      parameters:\n        - $ref: \"#/components/parameters/playlist_id\"\n        - $ref: \"#/components/parameters/secret_token\"\n        - $ref: \"#/components/parameters/access\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Playlist\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a playlist.\n      tags:\n        - playlists\n    put:\n      operationId: updatePlaylist\n      parameters:\n        - $ref: \"#/components/parameters/fake_playlist_id\"\n      requestBody:\n        content:\n          application/json:\n            examples:\n              default:\n                $ref: \"#/components/examples/CreateUpdatePlaylistRequest\"\n            schema:\n              $ref: \"#/components/schemas/CreateUpdatePlaylistRequest\"\n        description: Playlist payload\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/LegacyPlaylist\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Updates a playlist.\n      tags:\n        - playlists\n  \"/playlists/{playlist_id}/reposters\":\n    get:\n      operationId: listReposts\n      parameters:\n        - $ref: \"#/components/parameters/playlist_id\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/MetaUsers\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n      summary: Returns a collection of playlist's reposters.\n      tags:\n        - playlists\n  \"/playlists/{playlist_id}/tracks\":\n    get:\n      operationId: getTracksUnderPlaylist\n      parameters:\n        - $ref: \"#/components/parameters/playlist_id\"\n        - $ref: \"#/components/parameters/secret_token\"\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Tracks\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns tracks under a playlist.\n      tags:\n        - playlists\n  \"/reposts/playlists/{playlist_id}\":\n    delete:\n      operationId: deleteRepost\n      parameters:\n        - $ref: \"#/components/parameters/repost_playlist_id\"\n      responses:\n        \"200\":\n          description: Success\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Removes a repost on a playlist as the authenticated user\n      tags:\n        - reposts\n    post:\n      operationId: repostPlaylist\n      parameters:\n        - $ref: \"#/components/parameters/repost_playlist_id\"\n      responses:\n        \"201\":\n          description: Created\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Reposts a playlist as the authenticated user\n      tags:\n        - reposts\n  \"/reposts/tracks/{track_id}\":\n    delete:\n      operationId: deleteRepostOnTrack\n      parameters:\n        - $ref: \"#/components/parameters/test_track_id\"\n      responses:\n        \"200\":\n          description: Success\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Removes a repost on a track as the authenticated user\n      tags:\n        - reposts\n    post:\n      operationId: repostTrackByTrackID\n      parameters:\n        - $ref: \"#/components/parameters/test_track_id\"\n      responses:\n        \"201\":\n          description: Created\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Reposts a track as the authenticated user\n      tags:\n        - reposts\n  /resolve:\n    get:\n      operationId: resolveSoundCloudURLToResourceURL\n      parameters:\n        - $ref: \"#/components/parameters/url\"\n      responses:\n        \"302\":\n          $ref: \"#/components/responses/Found\"\n      security:\n        - AuthHeader: []\n\n      summary: Resolves soundcloud.com URLs to Resource URLs to use with the API.\n      tags:\n        - miscellaneous\n  /tracks:\n    get:\n      operationId: searchTracks\n      parameters:\n        - $ref: \"#/components/parameters/q\"\n        - $ref: \"#/components/parameters/ids\"\n        - $ref: \"#/components/parameters/genres\"\n        - $ref: \"#/components/parameters/tags\"\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Tracks\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"500\":\n          description: Internal Server Error\n      security:\n        - AuthHeader: []\n\n      summary: Performs a track search based on a query\n      tags:\n        - search\n    # post:\n    #   operationId: uploadNewTrack\n    #   requestBody:\n    #     content:\n    #       multipart/form-data:\n    #         examples:\n    #           default:\n    #             $ref: \"#/components/examples/TrackDataRequest\"\n    #         schema:\n    #           $ref: \"#/components/schemas/TrackDataRequest\"\n    #       multipart/x-www-form-urlencoded:\n    #         schema:\n    #           $ref: \"#/components/schemas/TrackDataRequest\"\n    #   responses:\n    #     \"201\":\n    #       $ref: \"#/components/responses/Track\"\n    #     \"400\":\n    #       $ref: \"#/components/responses/BadRequest\"\n    #     \"401\":\n    #       $ref: \"#/components/responses/Unauthorized\"\n    #   security:\n    #     - AuthHeader: []\n\n    #   summary: Uploads a new track.\n    #   tags:\n    #     - tracks\n  \"/tracks/{track_id}\":\n    delete:\n      operationId: deleteTrack\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n      responses:\n        \"200\":\n          description: Success\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Deletes a track.\n      tags:\n        - tracks\n    get:\n      operationId: getTrackByID\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n        - $ref: \"#/components/parameters/secret_token\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Track\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a track.\n      tags:\n        - tracks\n    # put:\n    #   operationId: updateTrack\n    #   parameters:\n    #     - $ref: \"#/components/parameters/track_id\"\n    #   requestBody:\n    #     content:\n    #       application/json:\n    #         schema:\n    #           $ref: \"#/components/schemas/TrackMetadataRequest\"\n    #       multipart/form-data:\n    #         schema:\n    #           $ref: \"#/components/schemas/TrackDataRequest\"\n    #       multipart/x-www-form-urlencoded:\n    #         schema:\n    #           $ref: \"#/components/schemas/TrackDataRequest\"\n    #     description: Track payload\n    #   responses:\n    #     \"200\":\n    #       $ref: \"#/components/responses/Track\"\n    #     \"400\":\n    #       $ref: \"#/components/responses/BadRequest\"\n    #     \"401\":\n    #       $ref: \"#/components/responses/Unauthorized\"\n    #   security:\n    #     - AuthHeader: []\n\n    #   summary: Updates a track's information.\n    #   tags:\n    #     - tracks\n  \"/tracks/{track_id}/comments\":\n    get:\n      operationId: getCommentsOnTrack\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Comments\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns the comments posted on the track(track_id).\n      tags:\n        - tracks\n    post:\n      operationId: addComment\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n      requestBody:\n        content:\n          application/json; charset=utf-8:\n            schema:\n              properties:\n                comment:\n                  properties:\n                    body:\n                      description: Comment's content\n                      example: test comment\n                      type: string\n                    timestamp:\n                      description: >-\n                        Timestamp of a comment. String or float representation\n                        is supported\n                      oneOf:\n                        - type: string\n                        - type: number\n                  required:\n                    - body\n                  type: object\n              type: object\n        description: |\n          Body of a comment\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Comment\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns the newly created comment on success\n      tags:\n        - tracks\n  \"/tracks/{track_id}/favoriters\":\n    get:\n      operationId: getLikedUsersOfTrack\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UsersList\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of users who have favorited or liked the track.\n      tags:\n        - tracks\n  \"/tracks/{track_id}/related\":\n    get:\n      operationId: listRelatedTracksOfTrack\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n        - $ref: \"#/components/parameters/offset\"        \n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Tracks\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns all related tracks of track on SoundCloud.\n      tags:\n        - tracks\n  \"/tracks/{track_id}/reposters\":\n    get:\n      operationId: getRepostCollection\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/MetaUsers\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a collection of track's reposters.\n      tags:\n        - tracks\n  \"/tracks/{track_id}/streams\":\n    get:\n      operationId: getStreambleURL\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n        - $ref: \"#/components/parameters/secret_token\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Streams\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a track's streamable URLs\n      tags:\n        - tracks\n  /users:\n    get:\n      operationId: searchUser\n      parameters:\n        - $ref: \"#/components/parameters/q\"\n        - $ref: \"#/components/parameters/ids\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n        - $ref: \"#/components/parameters/offset\"        \n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Users\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Performs a user search based on a query\n      tags:\n        - search\n  \"/users/{user_id}\":\n    get:\n      operationId: getUserByID\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CompleteUser\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a user.\n      tags:\n        - users\n  \"/users/{user_id}/comments\":\n    get:\n      operationId: listUserComments\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CommentsList\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of user's comments.\n      tags:\n        - users\n  \"/users/{user_id}/followers\":\n    get:\n      operationId: listFollowers\n      description: Returns a list of users that follows (user_id).\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Users\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of user’s followers.\n      tags:\n        - users\n  \"/users/{user_id}/followings\":\n    get:\n      operationId: listUserFollowings\n      description: Returns list of users that (user_id) follows.\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Users\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of user’s followings.\n      tags:\n        - users\n  \"/users/{user_id}/likes/tracks\":\n    get:\n      operationId: listUserLikedTracks\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Tracks\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of user's liked tracks.\n      tags:\n        - users\n  \"/users/{user_id}/playlists\":\n    get:\n      operationId: listUserPlaylist\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Playlists\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of user's playlists.\n      tags:\n        - users\n  \"/users/{user_id}/tracks\":\n    get:\n      operationId: listUserTracks\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n        - $ref: \"#/components/parameters/access\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Tracks\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AuthHeader: []\n\n      summary: Returns a list of user's tracks.\n      tags:\n        - users\n  \"/users/{user_id}/web-profiles\":\n    get:\n      operationId: listUserLinks\n      parameters:\n        - $ref: \"#/components/parameters/user_id\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/WebProfiles\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - AuthHeader: []\n\n      summary: >-\n        Returns list of user's links added to their profile (website, facebook,\n        instagram).\n      tags:\n        - users\ncomponents:\n  examples:\n    Accepted:\n      value:\n        status: 202 - Accepted\n    Activities:\n      value:\n        collection:\n          - created_at: \"2020/10/12 12:02:44 +0000\"\n            origin:\n              allOf:\n                - $ref: \"#/components/examples/Track/value\"\n            type: \"track:repost\"\n          - created_at: \"2020/10/12 12:02:44 +0000\"\n            origin:\n              allOf:\n                - $ref: \"#/components/examples/Playlist/value\"\n            type: playlist\n        future_href: \"https://api.soundcloud.com/me/activities?limit=10&cursor=000001\"\n        next_href: \"https://api.soundcloud.com/me/activities?limit=10&cursor=00000\"\n    AuthorizationCode:\n      value:\n        client_id: CLIENT_ID\n        client_secret: CLIENT_SECRET\n        code: 1-123456-12345678-FAbcfbe9ir2wdj0\n        grant_type: authorization_code\n        redirect_uri: \"https://mywebsite/auth/soundcloud\"\n    BadRequest:\n      value:\n        code: 400\n        link: \"https://developers.soundcloud.com/docs/api/explorer/open-api\"\n        message: \"Detailed message of errors, when available\"\n    ClientCredentials:\n      value:\n        client_id: CLIENT_ID\n        client_secret: CLIENT_SECRET\n        grant_type: client_credentials\n    Comment:\n      value:\n        body: comment body\n        created_at: \"2007/09/11 15:40:24 +0000\"\n        id: 1234\n        kind: comment\n        timestamp: 4960\n        track_id: 123456\n        uri: \"https://api.soundcloud.com/comments/1234\"\n        user:\n          avatar_url: \"https://i1.sndcdn.com/avatars-large.jpg\"\n          followers_count: 138\n          followings_count: 172\n          id: 12345\n          kind: user\n          last_modified: \"2017/04/10 14:48:03 +0000\"\n          permalink: permalink\n          permalink_url: \"https://soundcloud.com/permalink\"\n          public_favorites_count: 5\n          reposts_count: 0\n          uri: \"https://api.soundcloud.com/users/12345\"\n          username: user name\n        user_id: 12345\n    Comments:\n      value:\n        collection:\n          $ref: \"#/components/examples/Comment/value\"\n        next_href: >-\n          https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567\n    CommentsList:\n      description: \"Deprecated, use Comments instead.\"\n      value:\n        $ref: \"#/components/examples/Comment/value\"\n    CompleteUser:\n      value:\n        avatar_url: \"https://i1.sndcdn.com/avatars.jpg\"\n        city: City\n        country: Country\n        description: null\n        discogs_name: null\n        first_name: First_name\n        followers_count: 0\n        followings_count: 0\n        full_name: Full Name\n        id: 12345\n        kind: user\n        last_modified: \"2020/01/03 12:08:25 +0000\"\n        last_name: Last_name\n        locale: en\n        myspace_name: null\n        permalink: permalink\n        permalink_url: \"https://soundcloud.com/permalink\"\n        plan: Free\n        playlist_count: 3\n        primary_email_confirmed: true\n        private_playlists_count: 0\n        private_tracks_count: 0\n        public_favorites_count: 20\n        quota:\n          unlimited_upload_quota: false\n          upload_seconds_left: 10800\n          upload_seconds_used: 0\n        reposts_count: 0\n        subscriptions:\n          - product:\n              id: some-id\n              name: some.name\n        track_count: 0\n        upload_seconds_left: 10800\n        uri: \"https://api.soundcloud.com/users/1234\"\n        username: some.user\n        website: null\n        website_title: null\n    Connection:\n      value:\n        created_at: \"1995/07/24 08:55:02 +0000\"\n        display_name: Full Name\n        id: 123456\n        kind: connection\n        post_favorite: true\n        post_publish: true\n        service: google_plus\n        type: google_plus\n        uri: \"https://api.soundcloud.com/connections/123456\"\n    Connections:\n      value:\n        $ref: \"#/components/examples/Connection/value\"\n    CreateUpdatePlaylistRequest:\n      value:\n        playlist:\n          description: Playlist for test purposes\n          sharing: private\n          title: Test Auto-created Playlist\n          tracks:\n            - id: 219787221\n            - id: 783019264\n            - id: 870073492\n    Created:\n      value:\n        status: 201 - Created\n    ErrorInvalidGrant:\n      value:\n        code: 400\n        link: \"https://developers.soundcloud.com/docs/api/guide#authentication\"\n        message: invalid_grant\n    ErrorUnsupportedGrant:\n      value:\n        code: 400\n        link: \"https://developers.soundcloud.com/docs/api/guide#authentication\"\n        message: unsupported_grant\n    ExpiringToken:\n      value:\n        access_token: some string\n        expires_in: 21599\n        refresh_token: some string\n        scope: \"\"\n    Forbidden:\n      value:\n        code: 403\n        link: \"https://developers.soundcloud.com/docs/api/explorer/open-api\"\n        message: \"Detailed message of errors, when available\"\n    MetaUsers:\n      value:\n        collection:\n          $ref: \"#/components/examples/UserOf/value\"\n        next_href: >-\n          https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567\n    NonExpiringToken:\n      value:\n        access_token: some string\n        scope: non-expiring\n    NotFound:\n      value:\n        code: 404\n        link: \"https://developers.soundcloud.com/docs/api/explorer/open-api\"\n        message: \"Detailed message of errors, when available\"\n    OK:\n      value:\n        status: Status(200) - OK\n    Password:\n      value:\n        client_id: CLIENT_ID\n        client_secret: CLIENT_SECRET\n        password: my-password\n        username: my-user-name\n    Playlist:\n      value:\n        artwork_url: \"\"\n        created_at: \"2020/07/16 16:09:54 +0000\"\n        description: null\n        downloadable: true\n        duration: 11000\n        ean: null\n        embeddable_by: all\n        genre: \"\"\n        id: 12345\n        kind: playlist\n        label: null\n        label_id: null\n        label_name: null\n        last_modified: \"2020/09/08 09:13:00 +0000\"\n        license: all-rights-reserved\n        likes_count: 0\n        permalink: permalink\n        permalink_url: \"https://soundcloud.com/userPermalink/sets/permalink\"\n        playlist_type: \"\"\n        purchase_title: null\n        purchase_url: null\n        release: null\n        release_day: null\n        release_month: null\n        release_year: null\n        sharing: public\n        streamable: true\n        tag_list: \"\"\n        tags: \"\"\n        title: permalink\n        track_count: 2\n        tracks:\n          $ref: \"#/components/examples/Track/value\"\n        tracks_uri: \"https://api.soundcloud.com/playlists/12345/tracks\"\n        type: \"\"\n        uri: \"https://api.soundcloud.com/playlists/12345\"\n        user:\n          $ref: \"#/components/examples/UserOf/value\"\n        user_id: 1234\n    Playlists:\n      value:\n        collection:\n          $ref: \"#/components/examples/Playlist/value\"\n        next_href: >-\n          https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567\n    PlaylistsArray:\n      description: \"Deprecated, use Playlists instead.\"\n      value:\n        $ref: \"#/components/examples/Playlist/value\"\n    RefreshToken:\n      value:\n        client_id: CLIENT_ID\n        client_secret: CLIENT_SECRET\n        grant_type: refresh_token\n        refresh_token: 1234c331329477150e7b6056ff212345\n    Streams:\n      value:\n        hls_mp3_128_url: \"https://cf-media.sndcdn.com/\"\n        hls_opus_64_url: \"https://cf-media.sndcdn.com/\"\n        http_mp3_128_url: \"https://cf-media.sndcdn.com/\"\n        preview_mp3_128_url: \"https://cf-media.sndcdn.com/\"\n    Success:\n      value:\n        status: 200 - OK\n    Successful:\n      value:\n        status: 200 - Successful\n    TooManyRequests:\n      value:\n        code: 429\n        link: \"https://developers.soundcloud.com/docs/api/rate-limits#errors\"\n        message: \"Detailed message of errors, when available\"\n        spam_warning_urn: \"soundcloud:spam-warnings:1\"\n    Track:\n      value:\n        access: playable\n        artwork_url: \"https://i1.sndcdn.com/artworks-large.jpg\"\n        available_country_codes: null\n        bpm: null\n        comment_count: 4\n        commentable: true\n        created_at: \"2019/01/15 15:40:49 +0000\"\n        description: null\n        download_count: 0\n        download_url: \"https://api.soundcloud.com/tracks/1234/download\"\n        downloadable: false\n        duration: 40000\n        embeddable_by: all\n        favoritings_count: 271\n        genre: Rock\n        id: 1234\n        isrc: null\n        key_signature: null\n        kind: track\n        label_name: some label\n        license: all-rights-reserved\n        permalink_url: \"https://soundcloud.com/userPermalink/trackPermalink\"\n        playback_count: 8027\n        purchase_title: null\n        purchase_url: null\n        release: null\n        release_day: 22\n        release_month: 8\n        release_year: 2019\n        reposts_count: 18\n        secret_uri: null\n        sharing: public\n        stream_url: \"https://api.soundcloud.com/tracks/1234/stream\"\n        streamable: true\n        tag_list: \"\"\n        title: Some title\n        uri: \"https://api.soundcloud.com/tracks/1234\"\n        user:\n          $ref: \"#/components/examples/UserOf/value\"\n        user_favorite: true\n        user_playback_count: 1\n        waveform_url: \"https://wave.sndcdn.com/someString.png\"\n    TrackDataRequest:\n      value:\n        \"track[artwork_data]\": null\n        \"track[asset_data]\": <binary string>\n        \"track[commentable]\": true\n        \"track[description]\": Public-api test sample upload\n        \"track[downloadable]\": false\n        \"track[embeddable_by]\": me\n        \"track[genre]\": Pop\n        \"track[isrc]\": null\n        \"track[label_name]\": null\n        \"track[license]\": no-rights-reserved\n        \"track[permalink]\": test-drum-sample\n        \"track[purchase_url]\": null\n        \"track[release]\": null\n        \"track[release_date]\": 2021-02-18T00:00:00.000Z\n        \"track[sharing]\": private\n        \"track[streamable]\": true\n        \"track[tag_list]\": null\n        \"track[title]\": Test drum sample\n    TrackMetadataRequest:\n      value:\n        \"track[title]\": Updated Test Track\n    Tracks:\n      value:\n        collection:\n          $ref: \"#/components/examples/Track/value\"\n        next_href: >-\n          https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567\n    TracksList:\n      description: \"Deprecated, use Tracks instead.\"\n      value:\n        $ref: \"#/components/examples/Track/value\"\n    Unauthorized:\n      value:\n        code: 401\n        link: \"https://developers.soundcloud.com/docs/api/explorer/open-api\"\n        message: \"Detailed message of errors, when available\"\n    UnprocessableEntity:\n      value:\n        code: 422\n        link: \"https://developers.soundcloud.com/docs/api/explorer/open-api\"\n        message: \"Detailed message of errors, when available\"\n    User:\n      value:\n        avatar_url: \"https://i1.sndcdn.com/avatars.jpg\"\n        city: City\n        country: Country\n        created_at: \"2018/01/01 12:08:25 +0000\"\n        description: null\n        discogs_name: null\n        first_name: First_name\n        followers_count: 0\n        followings_count: 0\n        full_name: Full Name\n        id: 12345\n        kind: user\n        last_modified: \"2020/01/03 12:08:25 +0000\"\n        last_name: Last_name\n        myspace_name: null\n        permalink: permalink\n        permalink_url: \"https://soundcloud.com/permalink\"\n        plan: Free\n        playlist_count: 3\n        public_favorites_count: 20\n        reposts_count: 0\n        subscriptions:\n          - product:\n              id: some-id\n              name: some.name\n        track_count: 0\n        upload_seconds_left: 10800\n        uri: \"https://api.soundcloud.com/users/1234\"\n        username: some.user\n        website: null\n        website_title: null\n    UserOf:\n      value:\n        avatar_url: \"https://i1.sndcdn.com/avatars-large.jpg\"\n        id: 12345\n        kind: user\n        last_modified: \"2020/09/03 14:08:25 +0000\"\n        permalink: permalink\n        permalink_url: \"https://soundcloud.com/permalink\"\n        uri: \"https://api.soundcloud.com/users/12345\"\n        username: user.name\n    Users:\n      value:\n        collection:\n          $ref: \"#/components/examples/User/value\"\n        next_href: >-\n          https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567\n    UsersList:\n      description: \"Deprecated, use Users instead.\"\n      value:\n        $ref: \"#/components/examples/User/value\"\n    WebProfiles:\n      value:\n        - created_at: \"1995/10/20 12:10:39 +0000\"\n          id: 1234\n          kind: web-profile\n          service: facebook\n          title: my facebook\n          url: \"http://facebook.com\"\n          username: username\n  parameters:\n    access:\n      description: >\n        Filters content by level of access the user (logged in or anonymous) has\n        to the track. The result list will include only tracks with the\n        specified access. Include all options if you'd like to see all possible\n        tracks. See `Track#access` schema for more details.\n      explode: false\n      in: query\n      name: access\n      schema:\n        items:\n          enum:\n            - playable\n            - preview\n            - blocked\n          type: string\n        type: array\n      style: form\n    client_id:\n      description: The client id belonging to your application\n      example: some client\n      in: query\n      name: client_id\n      required: true\n      schema:\n        type: string\n    comment_id:\n      description: SoundCloud comment id\n      example: 123456\n      in: path\n      name: comment_id\n      required: true\n      schema:\n        type: integer\n    connection_id:\n      description: SoundCloud connection id\n      example: 123456\n      in: path\n      name: connection_id\n      required: true\n      schema:\n        type: integer\n    fake_playlist_id:\n      description: SoundCloud playlist id\n      example: 10\n      in: path\n      name: playlist_id\n      required: true\n      schema:\n        type: integer\n    follower_id:\n      description: SoundCloud User id to denote a Follower\n      example: 743372812\n      in: path\n      name: follower_id\n      required: true\n      schema:\n        type: integer\n    following_id:\n      description: SoundCloud User id to denote a Following of a user\n      example: 25219981\n      in: path\n      name: following_id\n      required: true\n      schema:\n        type: integer\n    genres:\n      description: A comma separated list of genres\n      example: \"Pop,House\"\n      in: query\n      name: genres\n      required: false\n      schema:\n        type: string\n    ids:\n      description: A comma separated list of track ids to filter on\n      example: \"1,2,3\"\n      in: query\n      name: ids\n      required: false\n      schema:\n        type: string\n    limit:\n      description: Number of results to return in the collection.\n      example: 2\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 50\n        maximum: 200\n        minimum: 1\n        type: integer\n    linked_partitioning:\n      description: >-\n        Returns paginated collection of items (recommended, returning a list\n        without pagination is deprecated and should not be used)\n      example: true\n      in: query\n      name: linked_partitioning\n      required: false\n      schema:\n        type: boolean\n    offset:\n      deprecated: true\n      description: \"Offset of first result. Deprecated, use `linked_partitioning` instead.\"\n      example: 0\n      in: query\n      name: offset\n      required: false\n      schema:\n        default: 0\n        type: integer\n    playlist_id:\n      description: SoundCloud playlist id\n      example: 1212781357\n      in: path\n      name: playlist_id\n      required: true\n      schema:\n        type: integer\n    q:\n      description: search\n      example: hello\n      in: query\n      name: q\n      required: true\n      schema:\n        type: string\n    redirect_uri:\n      description: The redirect uri you have configured for your application\n      example: \"https://soundcloud.com\"\n      in: query\n      name: redirect_uri\n      required: true\n      schema:\n        type: string\n    repost_playlist_id:\n      description: SoundCloud playlist id\n      example: 1205584273\n      in: path\n      name: playlist_id\n      required: true\n      schema:\n        type: integer\n    response_type:\n      description: It's recommended to use \"code\" here\n      example: code\n      in: query\n      name: response_type\n      required: true\n      schema:\n        enum:\n          - code\n          - token\n          - code_and_token\n        type: string\n    scope:\n      description: Scope\n      example: default\n      in: query\n      name: scope\n      required: true\n      schema:\n        type: string\n    secret_token:\n      description: A secret token to fetch private playlists/tracks\n      in: query\n      name: secret_token\n      required: false\n      schema:\n        type: string\n    state:\n      description: >-\n        Any value included here will be appended to the redirect URI. Use this\n        for CSRF protection.\n      example: encrypted_session_info\n      in: query\n      name: state\n      required: false\n      schema:\n        type: string\n    tag:\n      description: tag\n      example: some tag\n      in: path\n      name: tag\n      required: true\n      schema:\n        type: string\n    tags:\n      description: A comma separated list of tags\n      example: test\n      in: query\n      name: tags\n      required: false\n      schema:\n        type: string\n    test_track_id:\n      description: SoundCloud Track id\n      example: 1015448728\n      in: path\n      name: track_id\n      required: true\n      schema:\n        type: integer\n    track_id:\n      description: SoundCloud Track id\n      example: 308946187\n      in: path\n      name: track_id\n      required: true\n      schema:\n        type: integer\n    url:\n      description: SoundCloud URL\n      example: \"https://soundcloud.com/user-434241656\"\n      in: query\n      name: url\n      required: true\n      schema:\n        type: string\n    user_id:\n      description: SoundCloud User id\n      example: 948745750\n      in: path\n      name: user_id\n      required: true\n      schema:\n        type: integer\n    user_id_to_follow:\n      description: SoundCloud User id\n      example: 743372812\n      in: path\n      name: user_id\n      required: true\n      schema:\n        type: integer\n  responses:\n    Accepted:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Accepted\"\n      description: Accepted\n    Activities:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Activities\"\n          schema:\n            $ref: \"#/components/schemas/Activities\"\n      description: Success\n    BadRequest:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/BadRequest\"\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Bad Request\n    Comment:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Comment\"\n          schema:\n            $ref: \"#/components/schemas/Comment\"\n      description: Success\n    Comments:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            commentsList:\n              $ref: \"#/components/examples/CommentsList\"\n            default:\n              $ref: \"#/components/examples/Comments\"\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/Comments\"\n              - $ref: \"#/components/schemas/CommentsList\"\n      description: Success\n    CommentsList:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/CommentsList\"\n          schema:\n            $ref: \"#/components/schemas/CommentsList\"\n      description: Success\n    CompleteUser:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/CompleteUser\"\n          schema:\n            $ref: \"#/components/schemas/CompleteUser\"\n      description: Success\n    Connection:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Connection\"\n          schema:\n            $ref: \"#/components/schemas/Connection\"\n      description: Success\n    Connections:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Connections\"\n          schema:\n            $ref: \"#/components/schemas/Connections\"\n      description: Success\n    Created:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Created\"\n      description: Created\n    Forbidden:\n      content:\n        application/json:\n          examples:\n            default:\n              $ref: \"#/components/examples/Forbidden\"\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Forbidden\n    Found:\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: \"#/components/schemas/Found\"\n      description: Found\n    FoundHtml:\n      content:\n        application/json; charset=utf-8:\n          schema:\n            type: string\n      description: Found\n    LegacyPlaylist:\n      content:\n        application/json; charset=utf-8:\n          schema:\n            description: Soundcloud Playlist Object\n            properties:\n              artwork_url:\n                description: URL to a JPEG image.\n                type: string\n              created_at:\n                description: Created timestamp.\n                type: string\n              description:\n                description: Playlist description.\n                type: string\n              downloadable:\n                description: is downloadable.\n                type: boolean\n              duration:\n                description: Playlist duration.\n                type: integer\n              ean:\n                description: European Article Number.\n                type: string\n              embeddable_by:\n                description: Embeddable by.\n                type: string\n              genre:\n                description: Playlist genre.\n                type: string\n              id:\n                description: Playlist identifier.\n                type: integer\n              kind:\n                description: Type of Soundcloud object (playlist).\n                type: string\n              label_id:\n                description: Label user identifier.\n                type: integer\n              label_name:\n                description: Label name.\n                type: string\n              last_modified:\n                description: Last modified timestamp.\n                type: string\n              license:\n                description: License.\n                type: string\n              permalink:\n                description: Playlist permalink.\n                type: string\n              permalink_url:\n                description: Playlist permalink URL.\n                type: string\n              playlist_type:\n                description: Type of playlist.\n                type: string\n              purchase_title:\n                description: Purchase title.\n                type: string\n              purchase_url:\n                description: Purchase URL.\n                type: string\n              release:\n                description: Release.\n                type: string\n              release_day:\n                description: Day of release.\n                type: integer\n              release_month:\n                description: Month of release.\n                type: integer\n              release_year:\n                description: Year of release.\n                type: integer\n              sharing:\n                description: Type of sharing (private/public).\n                type: string\n              streamable:\n                description: Is streamable.\n                type: boolean\n              tag_list:\n                description: Tags.\n                type: string\n              title:\n                description: Playlist title.\n                type: string\n              track_count:\n                description: Count of tracks.\n                type: integer\n              tracks:\n                description: List of tracks.\n                items:\n                  description: Soundcloud Track object.\n                  properties:\n                    artwork_url:\n                      description: URL to a JPEG image.\n                      type: string\n                    bpm:\n                      description: Tempo.\n                      type: integer\n                    comment_count:\n                      description: Number of comments.\n                      type: integer\n                    commentable:\n                      description: Is commentable.\n                      type: boolean\n                    created_at:\n                      description: Created timestamp.\n                      type: string\n                    description:\n                      description: Track description.\n                      type: string\n                    download_count:\n                      description: NUmber of downloads.\n                      type: integer\n                    downloadable:\n                      description: Is downloadable.\n                      type: string\n                    duration:\n                      description: Track duration.\n                      type: integer\n                    embeddable_by:\n                      deprecated: true\n                      description: Embeddable by.\n                      type: string\n                    favoritings_count:\n                      description: Number of favoritings.\n                      type: integer\n                    genre:\n                      description: Genre\n                      type: string\n                    id:\n                      description: Track identifier.\n                      type: integer\n                    isrc:\n                      description: ISRC code.\n                      type: string\n                    key_signature:\n                      description: Key signature.\n                      type: string\n                    kind:\n                      description: Type of object (track).\n                      type: string\n                    label_name:\n                      description: Label user name.\n                      type: string\n                    license:\n                      description: License\n                      type: string\n                    permalink_url:\n                      description: Permalink URL.\n                      type: string\n                    playback_count:\n                      description: Number of plays.\n                      type: integer\n                    purchase_title:\n                      description: Purchase title.\n                      type: string\n                    purchase_url:\n                      description: Purchase URL.\n                      type: string\n                    release:\n                      description: Release.\n                      type: string\n                    release_day:\n                      description: Day of release.\n                      type: integer\n                    release_month:\n                      description: Month of release.\n                      type: integer\n                    release_year:\n                      description: Year of release.\n                      type: integer\n                    sharing:\n                      description: Type of sharing (public/private).\n                      type: string\n                    stream_url:\n                      description: URL to stream.\n                      type: string\n                    streamable:\n                      description: Is streamable.\n                      type: boolean\n                    tag_list:\n                      description: Tags.\n                      type: string\n                    title:\n                      description: Track title.\n                      type: string\n                    uri:\n                      description: Track URI.\n                      type: string\n                    user:\n                      $ref: \"#/components/schemas/MetaUser\"\n                    user_favorite:\n                      description: Is user's favourite.\n                      type: boolean\n                    user_playback_count:\n                      description: Number of plays by a user.\n                      type: integer\n                    waveform_url:\n                      description: Waveform URL.\n                      type: string\n                  type: object\n                type: array\n              type:\n                description: Playlist type.\n                type: string\n              uri:\n                description: Playlist URI.\n                type: string\n              user:\n                $ref: \"#/components/schemas/MetaUser\"\n              user_id:\n                description: User identifier.\n                type: integer\n            type: object\n      description: Success\n    MetaUser:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/UserOf\"\n          schema:\n            $ref: \"#/components/schemas/MetaUser\"\n      description: Success\n    MetaUsers:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/MetaUsers\"\n          schema:\n            $ref: \"#/components/schemas/MetaUsers\"\n      description: Success\n    NotFound:\n      content:\n        application/json:\n          examples:\n            default:\n              $ref: \"#/components/examples/NotFound\"\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Not Found\n    Playlist:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Playlist\"\n          schema:\n            $ref: \"#/components/schemas/Playlist\"\n      description: Success\n    Playlists:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Playlists\"\n            playlistsArray:\n              $ref: \"#/components/examples/PlaylistsArray\"\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/Playlists\"\n              - $ref: \"#/components/schemas/PlaylistsArray\"\n      description: Success\n    PlaylistsArray:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/PlaylistsArray\"\n          schema:\n            $ref: \"#/components/schemas/PlaylistsArray\"\n      description: Success\n    Streams:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Streams\"\n          schema:\n            $ref: \"#/components/schemas/Streams\"\n      description: Success\n    Success:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Success\"\n      description: Success\n    Successful:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Successful\"\n      description: Success\n    TooManyRequests:\n      content:\n        application/json:\n          examples:\n            default:\n              $ref: \"#/components/examples/TooManyRequests\"\n          schema:\n            $ref: \"#/components/schemas/TooManyRequests\"\n      description: Too Many Requests\n    Track:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Track\"\n          schema:\n            $ref: \"#/components/schemas/Track\"\n      description: Success\n    Tracks:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Tracks\"\n            tracksList:\n              $ref: \"#/components/examples/TracksList\"\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/Tracks\"\n              - $ref: \"#/components/schemas/TracksList\"\n      description: Success\n    TracksList:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/TracksList\"\n          schema:\n            $ref: \"#/components/schemas/TracksList\"\n      description: Success\n    Unauthorized:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Unauthorized\"\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Unauthorized\n    UnprocessableEntity:\n      content:\n        application/json:\n          examples:\n            default:\n              $ref: \"#/components/examples/UnprocessableEntity\"\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Unprocessable Entity\n    User:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/User\"\n          schema:\n            $ref: \"#/components/schemas/User\"\n      description: Success\n    Users:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/Users\"\n            usersList:\n              $ref: \"#/components/examples/UsersList\"\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/Users\"\n              - $ref: \"#/components/schemas/UsersList\"\n      description: Success\n    UsersList:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/UsersList\"\n          schema:\n            $ref: \"#/components/schemas/UsersList\"\n      description: Success\n    WebProfiles:\n      content:\n        application/json; charset=utf-8:\n          examples:\n            default:\n              $ref: \"#/components/examples/WebProfiles\"\n          schema:\n            $ref: \"#/components/schemas/WebProfiles\"\n      description: Success\n  schemas:\n    Activities:\n      description: User's activities.\n      properties:\n        collection:\n          items:\n            properties:\n              created_at:\n                description: Created timestamp.\n                type: string\n              origin:\n                anyOf:\n                  - $ref: \"#/components/schemas/Track\"\n                  - $ref: \"#/components/schemas/Playlist\"\n                description: Origin.\n                type: object\n              type:\n                description: Type of activity (track).\n                type: string\n            type: object\n          type: array\n        future_href:\n          type: string\n        next_href:\n          type: string\n      type: object\n    Comment:\n      description: User's Comment\n      properties:\n        body:\n          description: Comment body.\n          type: string\n        created_at:\n          description: Created timestamp.\n          type: string\n        id:\n          description: Identifier.\n          type: integer\n        kind:\n          description: Kind (comment).\n          type: string\n        timestamp:\n          description: Timestamp.\n          type: string\n        track_id:\n          description: Track's identifier.\n          type: integer\n        uri:\n          description: Comment's URL.\n          type: string\n        user:\n          description: SoundCloud User object\n          properties:\n            avatar_url:\n              description: URL to a JPEG image.\n              type: string\n            followers_count:\n              description: number of followers.\n              type: integer\n            followings_count:\n              description: number of followed users.\n              type: integer\n            id:\n              description: unique identifier\n              type: integer\n            kind:\n              description: kind of resource.\n              type: string\n            last_modified:\n              description: last modified timestamp.\n              type: string\n            permalink:\n              description: permalink of the resource.\n              type: string\n            permalink_url:\n              description: URL to the SoundCloud.com page.\n              type: string\n            reposts_count:\n              description: number of reposts from user\n              type: integer\n            uri:\n              description: API resource URL.\n              type: string\n            username:\n              description: username\n              type: string\n          type: object\n        user_id:\n          description: User's identifier.\n          type: integer\n      type: object\n    Comments:\n      properties:\n        collection:\n          items:\n            $ref: \"#/components/schemas/Comment\"\n          type: array\n        next_href:\n          nullable: true\n          type: string\n      type: object\n    CommentsList:\n      deprecated: true\n      items:\n        $ref: \"#/components/schemas/Comment\"\n      type: array\n    CompleteUser:\n      description: SoundCloud Complete User object\n      properties:\n        avatar_url:\n          description: URL to a JPEG image.\n          type: string\n        city:\n          description: city.\n          type: string\n        country:\n          description: country.\n          type: string\n        description:\n          description: description.\n          type: string\n        discogs_name:\n          description: discogs name.\n          type: string\n        first_name:\n          description: first name.\n          type: string\n        followers_count:\n          description: number of followers.\n          type: integer\n        followings_count:\n          description: number of followed users.\n          type: integer\n        full_name:\n          description: first and last name.\n          type: string\n        id:\n          description: unique identifier\n          type: integer\n        kind:\n          description: kind of resource.\n          type: string\n        last_modified:\n          description: last modified timestamp.\n          type: string\n        last_name:\n          description: last name.\n          type: string\n        locale:\n          description: locale.\n          type: string\n        myspace_name:\n          deprecated: true\n          description: myspace name\n          type: string\n        permalink:\n          description: permalink of the resource.\n          type: string\n        permalink_url:\n          description: URL to the SoundCloud.com page.\n          type: string\n        plan:\n          description: subscription plan of the user.\n          type: string\n        playlist_count:\n          description: number of public playlists.\n          type: integer\n        primary_email_confirmed:\n          description: boolean if email is confirmed.\n          type: boolean\n        private_playlists_count:\n          description: number of private playlists.\n          type: integer\n        private_tracks_count:\n          description: number of private tracks.\n          type: integer\n        public_favorites_count:\n          description: number of favorited public tracks\n          type: integer\n        quota:\n          description: user's upload quota\n          properties:\n            unlimited_upload_quota:\n              description: unlimited upload quota.\n              type: boolean\n            upload_seconds_used:\n              description: upload seconds used.\n              type: integer\n          type: object\n        reposts_count:\n          description: number of reposts from user\n          type: integer\n        subscriptions:\n          description: a list subscriptions associated with the user\n          items:\n            anyOf:\n              - description: subscription\n                properties:\n                  product:\n                    description: product\n                    properties:\n                      id:\n                        description: subscription id instance.\n                        type: string\n                      name:\n                        description: subscription name instance.\n                        type: string\n                    type: object\n                  recurring:\n                    description: if the subscription is recurring or not\n                    type: boolean\n                type: object\n            items: {}\n            type: array\n        track_count:\n          description: number of public tracks.\n          type: integer\n        uri:\n          description: API resource URL.\n          type: string\n        username:\n          description: username\n          type: string\n        website:\n          description: a URL to the website.\n          type: string\n        website_title:\n          description: a custom title for the website.\n          type: string\n      type: object\n    Connection:\n      properties:\n        created_at:\n          description: Created timestamp.\n          type: string\n        display_name:\n          description: Full Name.\n          type: string\n        id:\n          description: Unique identifier\n          type: integer\n        kind:\n          description: Kind of resource.\n          type: string\n        post_favorite:\n          deprecated: true\n          type: boolean\n        post_publish:\n          deprecated: true\n          type: boolean\n        service:\n          description: Service.\n          type: string\n        type:\n          description: Type.\n          type: string\n        uri:\n          description: The external link URI.\n          type: string\n      type: object\n    Connections:\n      items:\n        $ref: \"#/components/schemas/Connection\"\n      type: array\n    CreateUpdatePlaylistRequest:\n      properties:\n        playlist:\n          properties:\n            description:\n              description: Description of the playlist\n              type: string\n            sharing:\n              description: public or private\n              enum:\n                - public\n                - private\n              type: string\n            title:\n              description: Title of the playlist\n              type: string\n            tracks:\n              description: List of tracks to add to playlist\n              items:\n                properties:\n                  id:\n                    description: SoundCloud track id\n                    type: string\n                required:\n                  - id\n                type: object\n              type: array\n          type: object\n      type: object\n    Error:\n      properties:\n        code:\n          type: integer\n        error:\n          deprecated: true\n          nullable: true\n          type: string\n        errors:\n          deprecated: true\n          items: {}\n          type: array\n        link:\n          type: string\n        message:\n          type: string\n        status:\n          deprecated: true\n          type: string\n      type: object\n    Found:\n      properties:\n        location:\n          description: Location URL of the resource.\n          type: string\n        status:\n          description: Status code.\n          type: string\n      type: object\n    MetaUser:\n      description: SoundCloud User object.\n      nullable: true\n      properties:\n        avatar_url:\n          description: URL to a JPEG image\n          type: string\n        created_at:\n          description: profile creation datetime\n          format: date-time\n          type: string\n        id:\n          description: unique identifier\n          type: integer\n        kind:\n          description: kind of resource\n          type: string\n        last_modified:\n          description: last modified datetime\n          format: date-time\n          type: string\n        permalink:\n          description: permalink of the resource\n          type: string\n        permalink_url:\n          description: URL to the SoundCloud.com page\n          type: string\n        uri:\n          description: API resource URL\n          type: string\n        username:\n          description: username\n          type: string\n      type: object\n    MetaUsers:\n      properties:\n        collection:\n          items:\n            $ref: \"#/components/schemas/MetaUser\"\n          type: array\n        next_href:\n          type: string\n      type: object\n    Playlist:\n      description: Soundcloud Playlist Object\n      properties:\n        artwork_url:\n          description: URL to a JPEG image.\n          type: string\n        created_at:\n          description: Created timestamp.\n          type: string\n        description:\n          description: Playlist description.\n          type: string\n        downloadable:\n          description: is downloadable.\n          type: boolean\n        duration:\n          description: Playlist duration.\n          type: integer\n        ean:\n          description: European Article Number.\n          type: string\n        embeddable_by:\n          description: Embeddable by.\n          type: string\n        genre:\n          description: Playlist genre.\n          type: string\n        id:\n          description: Playlist identifier.\n          type: integer\n        kind:\n          description: Type of Soundcloud object (playlist).\n          type: string\n        label:\n          $ref: \"#/components/schemas/MetaUser\"\n        label_id:\n          description: Label user identifier.\n          type: integer\n        label_name:\n          description: Label name.\n          type: string\n        last_modified:\n          description: Last modified timestamp.\n          type: string\n        license:\n          description: License.\n          type: string\n        likes_count:\n          description: Count of playlist likes.\n          type: integer\n        permalink:\n          description: Playlist permalink.\n          type: string\n        permalink_url:\n          description: Playlist permalink URL.\n          type: string\n        playlist_type:\n          description: Type of playlist.\n          type: string\n        purchase_title:\n          description: Purchase title.\n          type: string\n        purchase_url:\n          description: Purchase URL.\n          type: string\n        release:\n          description: Release.\n          type: string\n        release_day:\n          description: Day of release.\n          type: integer\n        release_month:\n          description: Month of release.\n          type: integer\n        release_year:\n          description: Year of release.\n          type: integer\n        sharing:\n          description: Type of sharing (private/public).\n          type: string\n        streamable:\n          description: Is streamable.\n          type: boolean\n        tag_list:\n          description: Tags.\n          type: string\n        tags:\n          description: Tags.\n          nullable: true\n          type: string\n        title:\n          description: Playlist title.\n          type: string\n        track_count:\n          description: Count of tracks.\n          type: integer\n        tracks:\n          description: List of tracks.\n          items:\n            $ref: \"#/components/schemas/Track\"\n          type: array\n        tracks_uri:\n          description: tracks URI.\n          nullable: true\n          type: string\n        type:\n          description: Playlist type.\n          type: string\n        uri:\n          description: Playlist URI.\n          type: string\n        user:\n          $ref: \"#/components/schemas/MetaUser\"\n        user_id:\n          description: User identifier.\n          type: integer\n      type: object\n    Playlists:\n      properties:\n        collection:\n          items:\n            $ref: \"#/components/schemas/Playlist\"\n          type: array\n        next_href:\n          type: string\n      type: object\n    PlaylistsArray:\n      deprecated: true\n      items:\n        $ref: \"#/components/schemas/Playlist\"\n      type: array\n    Streams:\n      properties:\n        hls_mp3_128_url:\n          type: string\n        hls_opus_64_url:\n          type: string\n        http_mp3_128_url:\n          type: string\n        preview_mp3_128_url:\n          type: string\n      type: object\n    TooManyRequests:\n      allOf:\n        - $ref: \"#/components/schemas/Error\"\n        - properties:\n            spam_warning_urn:\n              type: string\n          type: object\n    Track:\n      description: Soundcloud Track object.\n      properties:\n        access:\n          description: |\n            Level of access the user (logged in or anonymous) has to the track.\n              * `playable` - user is allowed to listen to a full track.\n              * `preview` - user is allowed to preview a track, meaning a snippet is available\n              * `blocked` - user can only see the metadata of a track, no streaming is possible\n          enum:\n            - playable\n            - preview\n            - blocked\n            - null\n          nullable: true\n          type: string\n        artwork_url:\n          description: URL to a JPEG image.\n          type: string\n        available_country_codes:\n          description: List of countries where track is available.\n          type: string\n        bpm:\n          description: Tempo.\n          type: integer\n        comment_count:\n          description: Number of comments.\n          type: integer\n        commentable:\n          description: Is commentable.\n          type: boolean\n        created_at:\n          description: Created timestamp.\n          type: string\n        description:\n          description: Track description.\n          type: string\n        download_count:\n          description: NUmber of downloads.\n          type: integer\n        download_url:\n          description: URL to download a track.\n          type: string\n        downloadable:\n          description: Is downloadable.\n          type: string\n        duration:\n          description: Track duration.\n          type: integer\n        embeddable_by:\n          deprecated: true\n          description: Embeddable by.\n          type: string\n        favoritings_count:\n          description: Number of favoritings.\n          type: integer\n        genre:\n          description: Genre\n          type: string\n        id:\n          description: Track identifier.\n          type: integer\n        isrc:\n          description: ISRC code.\n          type: string\n        key_signature:\n          description: Key signature.\n          type: string\n        kind:\n          description: Type of object (track).\n          type: string\n        label_name:\n          description: Label user name.\n          type: string\n        license:\n          description: License\n          type: string\n        permalink_url:\n          description: Permalink URL.\n          type: string\n        playback_count:\n          description: Number of plays.\n          type: integer\n        purchase_title:\n          description: Purchase title.\n          type: string\n        purchase_url:\n          description: Purchase URL.\n          type: string\n        release:\n          description: Release.\n          type: string\n        release_day:\n          description: Day of release.\n          type: integer\n        release_month:\n          description: Month of release.\n          type: integer\n        release_year:\n          description: Year of release.\n          type: integer\n        reposts_count:\n          description: Number of reposts.\n          type: integer\n        secret_uri:\n          description: Secret URL.\n          type: string\n        sharing:\n          description: Type of sharing (public/private).\n          type: string\n        stream_url:\n          description: URL to stream.\n          type: string\n        streamable:\n          description: Is streamable.\n          type: boolean\n        tag_list:\n          description: Tags.\n          type: string\n        title:\n          description: Track title.\n          type: string\n        uri:\n          description: Track URI.\n          type: string\n        user:\n          $ref: \"#/components/schemas/MetaUser\"\n        user_favorite:\n          description: Is user's favourite.\n          type: boolean\n        user_playback_count:\n          description: Number of plays by a user.\n          type: integer\n        waveform_url:\n          description: Waveform URL.\n          type: string\n      type: object\n    TrackDataRequest:\n      properties:\n        \"track[artwork_data]\":\n          format: binary\n          title: \"Only for uploading, for PRO users\"\n          type: string\n        \"track[asset_data]\":\n          format: binary\n          title: Only for uploading\n          type: string\n        \"track[commentable]\":\n          default: true\n          type: boolean\n        \"track[description]\":\n          type: string\n        \"track[downloadable]\":\n          default: true\n          type: boolean\n        \"track[embeddable_by]\":\n          description: 'who can embed this track \"all\", \"me\", or \"none\"'\n          enum:\n            - all\n            - me\n            - none\n          type: string\n        \"track[genre]\":\n          type: string\n        \"track[isrc]\":\n          type: string\n        \"track[label_name]\":\n          type: string\n        \"track[license]\":\n          description: >-\n            Possible values: no-rights-reserved, all-rights-reserved, cc-by,\n            cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa\n          enum:\n            - no-rights-reserved\n            - all-rights-reserved\n            - cc-by\n            - cc-by-nc\n            - cc-by-nd\n            - cc-by-sa\n            - cc-by-nc-nd\n            - cc-by-nc-sa\n          type: string\n        \"track[permalink]\":\n          type: string\n        \"track[purchase_url]\":\n          type: string\n        \"track[release]\":\n          type: string\n        \"track[release_date]\":\n          description: \"string, formatted as yyyy-mm-dd, representing release date\"\n          title: write only!\n          type: string\n        \"track[sharing]\":\n          default: public\n          enum:\n            - public\n            - private\n          type: string\n        \"track[streamable]\":\n          default: true\n          type: boolean\n        \"track[tag_list]\":\n          description: >-\n            The tag_list property contains a list of tags separated by spaces.\n            Multiword tags are quoted in double quotes. We also support machine\n            tags that follow the pattern NAMESPACE:KEY=VALUE. For example:\n            geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine\n            tags are not revealed to the user on the track pages.\n          type: string\n        \"track[title]\":\n          type: string\n      type: object\n    TrackMetadataRequest:\n      properties:\n        track:\n          properties:\n            commentable:\n              default: true\n              type: boolean\n            description:\n              type: string\n            downloadable:\n              default: true\n              type: boolean\n            embeddable_by:\n              description: 'who can embed this track \"all\", \"me\", or \"none\"'\n              enum:\n                - all\n                - me\n                - none\n              type: string\n            genre:\n              type: string\n            isrc:\n              type: string\n            label_name:\n              type: string\n            license:\n              description: >-\n                Possible values: no-rights-reserved, all-rights-reserved, cc-by,\n                cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa\n              enum:\n                - no-rights-reserved\n                - all-rights-reserved\n                - cc-by\n                - cc-by-nc\n                - cc-by-nd\n                - cc-by-sa\n                - cc-by-nc-nd\n                - cc-by-nc-sa\n              type: string\n            permalink:\n              type: string\n            purchase_url:\n              type: string\n            release:\n              type: string\n            release_date:\n              description: \"string, formatted as yyyy-mm-dd, representing release date\"\n              title: write only!\n              type: string\n            sharing:\n              default: public\n              enum:\n                - public\n                - private\n              type: string\n            streamable:\n              default: true\n              type: boolean\n            tag_list:\n              description: >-\n                The tag_list property contains a list of tags separated by\n                spaces. Multiword tags are quoted in double quotes. We also\n                support machine tags that follow the pattern\n                NAMESPACE:KEY=VALUE. For example: geo:lat=43.555\n                camel:size=medium “machine:tag=with space” Machine tags are not\n                revealed to the user on the track pages.\n              type: string\n            title:\n              type: string\n          type: object\n      type: object\n    Tracks:\n      properties:\n        collection:\n          items:\n            $ref: \"#/components/schemas/Track\"\n          type: array\n        next_href:\n          type: string\n      type: object\n    TracksList:\n      deprecated: true\n      items:\n        $ref: \"#/components/schemas/Track\"\n      type: array\n    User:\n      description: SoundCloud User object\n      properties:\n        avatar_url:\n          description: URL to a JPEG image\n          type: string\n        city:\n          description: city\n          type: string\n        country:\n          description: country\n          type: string\n        created_at:\n          description: profile creation datetime\n          format: date-time\n          type: string\n        description:\n          description: description\n          type: string\n        discogs_name:\n          description: discogs name\n          type: string\n        first_name:\n          description: first name\n          type: string\n        followers_count:\n          description: number of followers\n          type: integer\n        followings_count:\n          description: number of followed users\n          type: integer\n        full_name:\n          description: first and last name\n          type: string\n        id:\n          description: unique identifier\n          type: integer\n        kind:\n          description: kind of resource\n          type: string\n        last_modified:\n          description: last modified datetime\n          format: date-time\n          type: string\n        last_name:\n          description: last name\n          type: string\n        myspace_name:\n          deprecated: true\n          description: myspace name\n          type: string\n        permalink:\n          description: permalink of the resource\n          type: string\n        permalink_url:\n          description: URL to the SoundCloud.com page\n          type: string\n        plan:\n          description: subscription plan of the user\n          type: string\n        playlist_count:\n          description: number of public playlists\n          type: integer\n        public_favorites_count:\n          description: number of favorited public tracks\n          type: integer\n        reposts_count:\n          description: number of reposts from user\n          type: integer\n        subscriptions:\n          deprecated: true\n          description: a list subscriptions associated with the user\n          items:\n            anyOf:\n              - description: subscription\n                properties:\n                  product:\n                    description: product\n                    properties:\n                      id:\n                        description: subscription id instance.\n                        type: string\n                      name:\n                        description: subscription name instance.\n                        type: string\n                    type: object\n                  recurring:\n                    description: if the subscription is recurring or not\n                    type: boolean\n                type: object\n            items: {}\n            type: array\n        track_count:\n          description: number of public tracks\n          type: integer\n        uri:\n          description: API resource URL\n          type: string\n        username:\n          description: username\n          type: string\n        website:\n          description: a URL to the website\n          type: string\n        website_title:\n          description: a custom title for the website\n          type: string\n      type: object\n    Users:\n      properties:\n        collection:\n          items:\n            $ref: \"#/components/schemas/User\"\n          type: array\n        next_href:\n          type: string\n      type: object\n    UsersList:\n      deprecated: true\n      items:\n        description: SoundCloud User object\n        properties:\n          avatar_url:\n            description: URL to a JPEG image\n            type: string\n          city:\n            description: city\n            type: string\n          country:\n            description: country\n            type: string\n          description:\n            description: description\n            type: string\n          discogs_name:\n            description: discogs name\n            type: string\n          first_name:\n            description: first name\n            type: string\n          followers_count:\n            description: number of followers\n            type: integer\n          followings_count:\n            description: number of followed users\n            type: integer\n          full_name:\n            description: first and last name\n            type: string\n          id:\n            description: unique identifier\n            type: integer\n          kind:\n            description: kind of resource\n            type: string\n          last_modified:\n            description: last modified datetime\n            format: date-time\n            type: string\n          last_name:\n            description: last name\n            type: string\n          myspace_name:\n            deprecated: true\n            description: myspace name\n            type: string\n          permalink:\n            description: permalink of the resource\n            type: string\n          permalink_url:\n            description: URL to the SoundCloud.com page\n            type: string\n          plan:\n            description: subscription plan of the user\n            type: string\n          playlist_count:\n            description: number of public playlists\n            type: integer\n          public_favorites_count:\n            description: number of favorited public tracks\n            type: integer\n          reposts_count:\n            description: number of reposts from user\n            type: integer\n          subscriptions:\n            deprecated: true\n            description: a list subscriptions associated with the user\n            items:\n              anyOf:\n                - description: subscription\n                  properties:\n                    product:\n                      description: product\n                      properties:\n                        id:\n                          description: subscription id instance.\n                          type: string\n                        name:\n                          description: subscription name instance.\n                          type: string\n                      type: object\n                    recurring:\n                      description: if the subscription is recurring or not\n                      type: boolean\n                  type: object\n              items: {}\n              type: array\n          track_count:\n            description: number of public tracks\n            type: integer\n          uri:\n            description: API resource URL\n            type: string\n          username:\n            description: username\n            type: string\n          website:\n            description: a URL to the website\n            type: string\n          website_title:\n            description: a custom title for the website\n            type: string\n        type: object\n      type: array\n    WebProfiles:\n      description: User's links added to their profile\n      items:\n        properties:\n          created_at:\n            description: Timestamp of when the link was added to the profile.\n            type: string\n          id:\n            description: Id\n            type: integer\n          kind:\n            description: Kind\n            type: string\n          service:\n            description: Service or platform\n            type: string\n          title:\n            description: Link's title\n            type: string\n          url:\n            description: URL of the external link\n            type: string\n          username:\n            description: Username extracted from the external link\n            type: string\n        type: object\n      type: array\n  securitySchemes:\n    AuthHeader:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Represents API Key `Authorization`",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/tool-tests/5-deprecated/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/tool-tests/5-deprecated/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/tracks\": get: responses: 200: contents: application/json; charset=utf-8: generate schema: save schema types: save referenced type: reference \"#/components/schemas/Tracks\" type name conflict: \"Tracks\""
}