{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openl-tablets/openl-tablets"
		},
		"file": {
			"name": "allOf.yml",
			"size": 0,
			"path": "Util/openl-openapi-parser/test-resources/test.converter/inheritance_and_polymorphism/allOf.yml",
			"byteSize": 3536,
			"content": "openapi: 3.0.1\r\ninfo:\r\n  title: Example-Combined-AllOf\r\n  version: 1.0.0\r\nservers:\r\n  - url: /webservice/REST/combined-allOf\r\n    variables: {}\r\npaths:\r\n  /pets:\r\n    patch:\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              oneOf:\r\n                - $ref: '#/components/schemas/Cat'\r\n                - $ref: '#/components/schemas/Dog'\r\n              discriminator:\r\n                propertyName: pet_type\r\n      responses:\r\n        '200':\r\n          description: Updated\r\n  /myPets:\r\n    patch:\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              allOf:\r\n                - $ref: '#/components/schemas/Cat'\r\n                - $ref: '#/components/schemas/Dog'\r\n      responses:\r\n        '200':\r\n          description: Updated\r\n  /myPets3:\r\n    patch:\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/Response'\r\n      responses:\r\n        '200':\r\n          description: Updated\r\ncomponents:\r\n  schemas:\r\n    Animal:\r\n      type: object\r\n      properties:\r\n        kingdom:\r\n          type: string\r\n    Pet:\r\n      allOf:\r\n        - $ref: '#/components/schemas/Animal'\r\n        - type: object\r\n          required:\r\n            - pet_type\r\n          properties:\r\n            pet_type:\r\n              type: string\r\n          discriminator:\r\n            propertyName: pet_type\r\n    Dog:     # \"Dog\" is a value for the pet_type property (the discriminator value)\r\n      allOf: # Combines the main `Pet` schema with `Dog`-specific properties\r\n        - $ref: '#/components/schemas/Pet'\r\n        - type: object\r\n          # all other properties specific to a `Dog`\r\n          properties:\r\n            bark:\r\n              type: boolean\r\n            breed:\r\n              type: string\r\n              enum: [Dingo, Husky, Retriever, Shepherd]\r\n    Cat:     # \"Cat\" is a value for the pet_type property (the discriminator value)\r\n      allOf: # Combines the main `Pet` schema with `Cat`-specific properties\r\n        - $ref: '#/components/schemas/Pet'\r\n        - type: object\r\n          # all other properties specific to a `Cat`\r\n          properties:\r\n            hunts:\r\n              type: boolean\r\n            age:\r\n              type: integer\r\n    Insect:\r\n      oneOf:\r\n        - $ref: '#/components/schemas/Mosquito'\r\n        - $ref: '#/components/schemas/Spider'\r\n    Mosquito:\r\n      type: object\r\n      properties:\r\n        sound:\r\n          type: string\r\n        size:\r\n          type: integer\r\n    Spider:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n    BaseResponse:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n    ItemOne:\r\n      type: object\r\n      properties:\r\n        firstName:\r\n          type: string\r\n    ItemTwo:\r\n      type: object\r\n      properties:\r\n        secondName:\r\n          type: string\r\n    ItemThree:\r\n      type: object\r\n      properties:\r\n        thirdName:\r\n          type: string\r\n    Response:\r\n      allOf:\r\n        - $ref: '#/components/schemas/BaseResponse'\r\n        - type: object\r\n          title: A full response\r\n          required:\r\n            - things\r\n          properties:\r\n            things:\r\n              type: array\r\n              items:\r\n                anyOf:\r\n                  - $ref: '#/components/schemas/ItemOne'\r\n                  - $ref: '#/components/schemas/ItemTwo'\r\n                  - $ref: '#/components/schemas/ItemThree'\r\n",
			"canonicalURL": "/github.com/openl-tablets/openl-tablets@189882c7065bf92f231175e28b670c37b2e0a40d/-/blob/Util/openl-openapi-parser/test-resources/test.converter/inheritance_and_polymorphism/allOf.yml",
			"externalURLs": [
				{
					"url": "https://github.com/openl-tablets/openl-tablets/blob/189882c7065bf92f231175e28b670c37b2e0a40d/Util/openl-openapi-parser/test-resources/test.converter/inheritance_and_polymorphism/allOf.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/pets\": patch: requestBody: contents: application/json: generate schema: oneOf: collect variants: oneOf[0]: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"complex anyOf",
		"complex schema merging"
	]
}