{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Solar-network/core"
		},
		"file": {
			"name": "api.json",
			"size": 0,
			"path": "packages/core-api/src/www/api.json",
			"byteSize": 106681,
			"content": "{\n    \"openapi\": \"3.0.1\",\n    \"info\": {\n        \"title\": \"Solar Core: Public API\"\n    },\n    \"servers\": [],\n    \"tags\": [\n        {\n            \"name\": \"Blockchain\"\n        },\n        {\n            \"name\": \"Node\"\n        },\n        {\n            \"name\": \"Blocks\"\n        },\n        {\n            \"name\": \"Delegates\"\n        },\n        {\n            \"name\": \"Locks\"\n        },\n        {\n            \"name\": \"Rounds\"\n        },\n        {\n            \"name\": \"Transactions\"\n        },\n        {\n            \"name\": \"Votes\"\n        },\n        {\n            \"name\": \"Wallets\"\n        }\n    ],\n    \"paths\": {\n        \"/blockchain\": {\n            \"get\": {\n                \"tags\": [\n                    \"Blockchain\"\n                ],\n                \"summary\": \"Get general blockchain information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                }\n            }\n        },\n        \"/node/configuration\": {\n            \"get\": {\n                \"tags\": [\n                    \"Node\"\n                ],\n                \"summary\": \"Get node configuration information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                }\n            }\n        },\n        \"/node/configuration/crypto\": {\n            \"get\": {\n                \"tags\": [\n                    \"Node\"\n                ],\n                \"summary\": \"Get node crypto configuration information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                }\n            }\n        },\n        \"/node/fees\": {\n            \"get\": {\n                \"tags\": [\n                    \"Node\"\n                ],\n                \"summary\": \"Get node fee statistics\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                }\n            }\n        },\n        \"/node/status\": {\n            \"get\": {\n                \"tags\": [\n                    \"Node\"\n                ],\n                \"summary\": \"Get node status information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                }\n            }\n        },\n        \"/node/syncing\": {\n            \"get\": {\n                \"tags\": [\n                    \"Node\"\n                ],\n                \"summary\": \"Get node sync status information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                }\n            }\n        },\n        \"/peers\": {\n            \"get\": {\n                \"tags\": [\n                    \"Node\"\n                ],\n                \"summary\": \"See node peer status information\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    },\n                    {\n                        \"name\": \"version\",\n                        \"in\": \"query\",\n                        \"description\": \"The node version by which the resources will be filtered\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"height:asc\",\n                                \"height:desc\",\n                                \"latency:asc\",\n                                \"latency:desc\",\n                                \"version:asc\",\n                                \"version:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/peers/{ip}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Node\"\n                ],\n                \"summary\": \"Find a single peer by its IP address\",\n                \"parameters\": [\n                    {\n                        \"name\": \"ip\",\n                        \"in\": \"path\",\n                        \"description\": \"IP address of the peer\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/ip\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Peer not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/blocks\": {\n            \"get\": {\n                \"tags\": [\n                    \"Blocks\"\n                ],\n                \"summary\": \"List blocks or search for blocks meeting specific criteria\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    },\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"description\": \"ID of the block to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"version\",\n                        \"in\": \"query\",\n                        \"description\": \"Version of the block(s) to be returned\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"enum\": [\n                                0\n                            ]\n                        }\n                    },\n                    {\n                        \"name\": \"previousBlock\",\n                        \"in\": \"query\",\n                        \"description\": \"Previous block ID chained to the block to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"payloadHash\",\n                        \"in\": \"query\",\n                        \"description\": \"Hash of the transaction payload of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"generatorPublicKey\",\n                        \"in\": \"query\",\n                        \"description\": \"Public key of the delegate that forged the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/publicKey\"\n                        }\n                    },\n                    {\n                        \"name\": \"blockSignature\",\n                        \"in\": \"query\",\n                        \"description\": \"Signature of the block to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/signature\"\n                        }\n                    },\n                    {\n                        \"name\": \"height\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact height of the block to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"height.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest height of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"height.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest height of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact time, in seconds since the epoch, of the block to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest time, in seconds since the epoch, of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest time, in seconds since the epoch, of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"numberOfTransactions\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact number of transactions inside the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"numberOfTransactions.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum number of transactions inside the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"numberOfTransactions.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum number of transactions inside the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"totalAmount\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"totalAmount.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"totalAmount.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"totalFee\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of the fees of all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"totalFee.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of the fees of all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"totalFee.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of the fees of all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of the fees that were burned in all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of the fees that were burned in all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of the fees that were burned in all transactions in the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"reward\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact block reward amount of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"reward.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Lowest block reward amount of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"reward.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Highest block reward amount of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"payloadLength\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact transaction payload length of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"payloadLength.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum transaction payload length of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"payloadLength.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum transaction payload length of the block(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"blockSignature:asc\",\n                                \"blockSignature:desc\",\n                                \"burnedFee:asc\",\n                                \"burnedFee:desc\",\n                                \"generatorPublicKey:asc\",\n                                \"generatorPublicKey:desc\",\n                                \"height:asc\",\n                                \"height:desc\",\n                                \"id:asc\",\n                                \"id:desc\",\n                                \"numberOfTransactions:asc\",\n                                \"numberOfTransactions:desc\",\n                                \"payloadHash:asc\",\n                                \"payloadHash:desc\",\n                                \"payloadLength:asc\",\n                                \"payloadLength:desc\",\n                                \"previousBlock:asc\",\n                                \"previousBlock:desc\",\n                                \"reward:asc\",\n                                \"reward:desc\",\n                                \"timestamp:asc\",\n                                \"timestamp:desc\",\n                                \"totalAmount:asc\",\n                                \"totalAmount:desc\",\n                                \"totalFee:asc\",\n                                \"totalFee:desc\",\n                                \"version:asc\",\n                                \"version:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/blocks/{block}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Blocks\"\n                ],\n                \"summary\": \"Find a single block by its ID or height\",\n                \"parameters\": [\n                    {\n                        \"name\": \"block\",\n                        \"in\": \"path\",\n                        \"description\": \"ID or height of block to return\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/idOrHeight\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Block not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/blocks/last\": {\n            \"get\": {\n                \"tags\": [\n                    \"Blocks\"\n                ],\n                \"summary\": \"Get the most recent block in the blockchain\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    }\n                }\n            }\n        },\n        \"/blocks/{block}/transactions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Blocks\"\n                ],\n                \"summary\": \"Find transactions in a specific block\",\n                \"parameters\": [\n                    {\n                        \"name\": \"block\",\n                        \"in\": \"path\",\n                        \"description\": \"ID or height of block to get transactions\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/idOrHeight\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Block not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/delegates\": {\n            \"get\": {\n                \"tags\": [\n                    \"Delegates\"\n                ],\n                \"summary\": \"List delegates or search for delegates meeting specific criteria\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    },\n                    {\n                        \"name\": \"address\",\n                        \"in\": \"query\",\n                        \"description\": \"The address of the delegate to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/address\"\n                        }\n                    },\n                    {\n                        \"name\": \"publicKey\",\n                        \"in\": \"query\",\n                        \"description\": \"The public key of the delegate to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/publicKey\"\n                        }\n                    },\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"description\": \"The username of the delegate to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/username\"\n                        }\n                    },\n                    {\n                        \"name\": \"isResigned\",\n                        \"in\": \"query\",\n                        \"description\": \"Whether the delegate(s) to be returned are resigned and no longer able to forge\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"name\": \"production.approval\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact production approval rate of the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"minimum\": 0,\n                            \"maximum\": 1\n                        }\n                    },\n                    {\n                        \"name\": \"production.approval.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Lowest production approval rate of the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"minimum\": 0,\n                            \"maximum\": 1\n                        }\n                    },\n                    {\n                        \"name\": \"production.approval.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Highest production approval rate of the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"minimum\": 0,\n                            \"maximum\": 1\n                        }\n                    },\n                    {\n                        \"name\": \"forged.fees\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of all fees forged by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.fees.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of all fees forged by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.fees.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of all fees forged by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.burnedFees\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of all fees burned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.burnedFees.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of all fees burned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.burnedFees.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of all fees burned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.rewards\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of all block rewards earned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.rewards.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of all block rewards earned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.rewards.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of all block rewards earned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.devFunds\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of all development funds raised by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.devFunds.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of all development funds raised by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.devFunds.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of all all development funds raised by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },                    {\n                        \"name\": \"forged.total\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of all unburned fees plus block rewards earned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.total.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of all unburned fees plus block rewards earned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"forged.total.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of all unburned fees plus block rewards earned by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"votes\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount of vote weight for the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"votes.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount of vote weight for the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"votes.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount of vote weight for the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"voters\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact number of voters for the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"voters.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum number of voters for the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"voters.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum number of voters for the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"blocks.produced\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact number of blocks produced by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"blocks.produced.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum number of blocks produced by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"blocks.produced.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum number of blocks produced by the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"rank\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact rank of the delegate to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"rank.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Lowest rank of the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"rank.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Highest rank of the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"version\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact node version running on the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/semver\"\n                        }\n                    },\n                    {\n                        \"name\": \"version.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest node version running on the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/semver\"\n                        }\n                    },\n                    {\n                        \"name\": \"version.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest node version running on the delegate(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/semver\"\n                        }\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"address:asc\",\n                                \"address:desc\",\n                                \"blocks.produced:asc\",\n                                \"blocks.produced:desc\",\n                                \"forged.burnedFees:asc\",\n                                \"forged.burnedFees:desc\",\n                                \"forged.devFunds:asc\",\n                                \"forged.devFunds:desc\",\n                                \"forged.fees:asc\",\n                                \"forged.fees:desc\",\n                                \"forged.rewards:asc\",\n                                \"forged.rewards:desc\",\n                                \"forged.total:asc\",\n                                \"forged.total:desc\",\n                                \"isResigned:asc\",\n                                \"isResigned:desc\",\n                                \"production.approval:asc\",\n                                \"production.approval:desc\",\n                                \"publicKey:asc\",\n                                \"publicKey:desc\",\n                                \"rank:asc\",\n                                \"rank:desc\",\n                                \"version:asc\",\n                                \"version:desc\",\n                                \"votes:asc\",\n                                \"votes:desc\",\n                                \"voters:asc\",\n                                \"voters:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/delegates/{identifier}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Delegates\"\n                ],\n                \"summary\": \"Find a single delegate by its identifier\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Identifier for delegate (address, public key, username)\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Delegate not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/delegates/{identifier}/blocks\": {\n            \"get\": {\n                \"tags\": [\n                    \"Delegates\"\n                ],\n                \"summary\": \"Find blocks produced by a specific delegate\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Identifier for delegate (address, public key, username)\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Delegate not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/delegates/{identifier}/voters\": {\n            \"get\": {\n                \"tags\": [\n                    \"Delegates\"\n                ],\n                \"summary\": \"Find wallets currently voting for a specific delegate\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Identifier for delegate (address, public key, username)\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Delegate not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/locks\": {\n            \"get\": {\n                \"tags\": [\n                    \"Locks\"\n                ],\n                \"summary\": \"List HTLC transaction locks or search for locks meeting specific criteria\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    },\n                    {\n                        \"name\": \"lockId\",\n                        \"in\": \"query\",\n                        \"description\": \"The lock id to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"senderPublicKey\",\n                        \"in\": \"query\",\n                        \"description\": \"Public key of the sender of the lock(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/publicKey\"\n                        }\n                    },\n                    {\n                        \"name\": \"recipientId\",\n                        \"in\": \"query\",\n                        \"description\": \"Address of the recipient of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/address\"\n                        }\n                    },\n                    {\n                        \"name\": \"secretHash\",\n                        \"in\": \"query\",\n                        \"description\": \"Secret hash string of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"vendorField\",\n                        \"in\": \"query\",\n                        \"description\": \"Vendor field string of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"maxLength\": 255\n                        }\n                    },\n                    {\n                        \"name\": \"isExpired\",\n                        \"in\": \"query\",\n                        \"description\": \"Whether the lock(s) to be returned have expired\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"name\": \"expirationType\",\n                        \"in\": \"query\",\n                        \"description\": \"Expiration type (1 = timestamp, 2 = height) of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"enum\": [\n                                1,\n                                2\n                            ]\n                        }\n                    },\n                    {\n                        \"name\": \"expirationValue\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact expiration time or height of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"expirationValue.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest expiration time or height of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"expirationValue.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest expiration time or height of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"amount.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"amount.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.epoch\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact time, in seconds since the epoch, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.epoch.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest time, in seconds since the epoch, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.epoch.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest time, in seconds since the epoch, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.unix\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact time, in UNIX timestamp format, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.unix.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest time, in UNIX timestamp format, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.unix.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest time, in UNIX timestamp format, of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.human\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact time, in RFC 3339 human readable format (e.g. 2022-03-28T18:00:00.000Z), of the lock transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/time\"\n                        }\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"amount:asc\",\n                                \"amount:desc\",\n                                \"expirationType:asc\",\n                                \"expirationType:desc\",\n                                \"expirationValue:asc\",\n                                \"expirationValue:desc\",\n                                \"isExpired:asc\",\n                                \"isExpired:desc\",\n                                \"lockId:asc\",\n                                \"lockId:desc\",\n                                \"recipientId:asc\",\n                                \"recipientId:desc\",\n                                \"secretHash:asc\",\n                                \"secretHash:desc\",\n                                \"senderPublicKey:asc\",\n                                \"senderPublicKey:desc\",\n                                \"timestamp.epoch:asc\",\n                                \"timestamp.epoch:desc\",\n                                \"timestamp.human:asc\",\n                                \"timestamp.human:desc\",\n                                \"timestamp.unix:asc\",\n                                \"timestamp.unix:desc\",\n                                \"vendorField:asc\",\n                                \"vendorField:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/locks/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Locks\"\n                ],\n                \"summary\": \"Find a single HTLC transaction lock by its ID\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"Lock ID\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Lock not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/locks/unlocked\": {\n            \"post\": {\n                \"tags\": [\n                    \"Locks\"\n                ],\n                \"summary\": \"View unlocked HTLC transactions\",\n                \"parameters\": [\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"amount:asc\",\n                                \"amount:desc\",\n                                \"blockId:asc\",\n                                \"blockId:desc\",\n                                \"burnedFee:asc\",\n                                \"burnedFee:desc\",\n                                \"fee.epoch:asc\",\n                                \"fee.epoch:desc\",\n                                \"id:asc\",\n                                \"id:desc\",\n                                \"nonce:asc\",\n                                \"nonce:desc\",\n                                \"recipientId:asc\",\n                                \"recipientId:desc\",\n                                \"senderId:asc\",\n                                \"senderId:desc\",\n                                \"senderPublicKey:asc\",\n                                \"senderPublicKey:desc\",\n                                \"timestamp:asc\",\n                                \"timestamp:desc\",\n                                \"vendorField:asc\",\n                                \"vendorField:desc\",\n                                \"version:asc\",\n                                \"version:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"An ids object containing an array of lock IDs\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/lockIds\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/rounds/{id}/delegates\": {\n            \"get\": {\n                \"tags\": [\n                    \"Rounds\"\n                ],\n                \"summary\": \"Get delegate public keys forging in a specific round\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"The forging round number to retrieve the public keys of delegates\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Round not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/transactions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Transactions\"\n                ],\n                \"summary\": \"List transactions or search for transactions meeting specific criteria\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    },\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"description\": \"The transaction id to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"description\": \"The type of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/transactionTypes\"\n                        }\n                    },\n                    {\n                        \"name\": \"typeGroup\",\n                        \"in\": \"query\",\n                        \"description\": \"The type group of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/transactionTypeGroups\"\n                        }\n                    },\n                    {\n                        \"name\": \"version\",\n                        \"in\": \"query\",\n                        \"description\": \"The version of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/transactionVersions\"\n                        }\n                    },\n                    {\n                        \"name\": \"blockId\",\n                        \"in\": \"query\",\n                        \"description\": \"The block ID containing the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"senderPublicKey\",\n                        \"in\": \"query\",\n                        \"description\": \"Public key of the sender of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/publicKey\"\n                        }\n                    },\n                    {\n                        \"name\": \"senderId\",\n                        \"in\": \"query\",\n                        \"description\": \"Address of the sender of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/address\"\n                        }\n                    },\n                    {\n                        \"name\": \"recipientId\",\n                        \"in\": \"query\",\n                        \"description\": \"Address of the recipient of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/address\"\n                        }\n                    },\n                    {\n                        \"name\": \"vendorField\",\n                        \"in\": \"query\",\n                        \"description\": \"Vendor field string of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"maxLength\": 255\n                        }\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact amount, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"amount.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum amount, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"amount.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum amount, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"fee\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact fee, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"fee.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum fee, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"fee.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum fee, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact fee amount that was burned, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum fee amount that was burned, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum fee amount that was burned, in satoshis, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact time, in seconds since the epoch, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest time, in seconds since the epoch, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest time, in seconds since the epoch, of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"nonce\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact nonce of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"nonce.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum nonce of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"nonce.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum nonce of the transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"amount:asc\",\n                                \"amount:desc\",\n                                \"blockId:asc\",\n                                \"blockId:desc\",\n                                \"burnedFee:asc\",\n                                \"burnedFee:desc\",\n                                \"fee:asc\",\n                                \"fee:desc\",\n                                \"id:asc\",\n                                \"id:desc\",\n                                \"nonce:asc\",\n                                \"nonce:desc\",\n                                \"recipientId:asc\",\n                                \"recpientId:desc\",\n                                \"senderId:asc\",\n                                \"senderId:desc\",\n                                \"senderPublicKey:asc\",\n                                \"senderPublicKey:desc\",\n                                \"timestamp:asc\",\n                                \"timestamp:desc\",\n                                \"type:asc\",\n                                \"type:desc\",\n                                \"typeGroup:asc\",\n                                \"typeGroup:desc\",\n                                \"vendorField:asc\",\n                                \"vendorField:desc\",\n                                \"version:asc\",\n                                \"version:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Transactions\"\n                ],\n                \"summary\": \"Post transactions to be included in the blockchain\",\n                \"requestBody\": {\n                    \"description\": \"A transactions object containing an array of signed transactions\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/transactions\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/transactions/{transactionId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Transactions\"\n                ],\n                \"summary\": \"Find a single transaction by its ID\",\n                \"parameters\": [\n                    {\n                        \"name\": \"transactionId\",\n                        \"in\": \"path\",\n                        \"description\": \"Transaction ID\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Transaction not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/transactions/unconfirmed\": {\n            \"get\": {\n                \"tags\": [\n                    \"Transactions\"\n                ],\n                \"summary\": \"View unconfirmed transactions not yet in the blockchain\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/transactions/unconfirmed/{transactionId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Transactions\"\n                ],\n                \"summary\": \"Find a single unconfirmed transaction by its ID\",\n                \"parameters\": [\n                    {\n                        \"name\": \"transactionId\",\n                        \"in\": \"path\",\n                        \"description\": \"Transaction ID\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Transaction not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/transactions/types\": {\n            \"get\": {\n                \"tags\": [\n                    \"Transactions\"\n                ],\n                \"summary\": \"List transaction types\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/transactions/fees\": {\n            \"get\": {\n                \"tags\": [\n                    \"Transactions\"\n                ],\n                \"summary\": \"List transaction fees\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/votes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Votes\"\n                ],\n                \"summary\": \"List votes or search for votes meeting specific criteria\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    },\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"description\": \"The vote transaction id to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"blockId\",\n                        \"in\": \"query\",\n                        \"description\": \"The block ID containing the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    },\n                    {\n                        \"name\": \"senderPublicKey\",\n                        \"in\": \"query\",\n                        \"description\": \"Public key of the sender of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/publicKey\"\n                        }\n                    },\n                    {\n                        \"name\": \"senderId\",\n                        \"in\": \"query\",\n                        \"description\": \"Address of the sender of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/address\"\n                        }\n                    },\n                    {\n                        \"name\": \"fee\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact fee, in satoshis, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"fee.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum fee, in satoshis, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"fee.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum fee, in satoshis, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact fee amount that was burned, in satoshis, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum fee amount that was burned, in satoshis, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"burnedFee.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum fee amount that was burned, in satoshis, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact time, in seconds since the epoch, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Earliest time, in seconds since the epoch, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"timestamp.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Latest time, in seconds since the epoch, of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"nonce\",\n                        \"in\": \"query\",\n                        \"description\": \"Exact nonce of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"nonce.from\",\n                        \"in\": \"query\",\n                        \"description\": \"Minimum nonce of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"nonce.to\",\n                        \"in\": \"query\",\n                        \"description\": \"Maximum nonce of the vote transaction(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/oneOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"blockId:asc\",\n                                \"blockId:desc\",\n                                \"burnedFee:asc\",\n                                \"burnedFee:desc\",\n                                \"fee:asc\",\n                                \"fee:desc\",\n                                \"id:asc\",\n                                \"id:desc\",\n                                \"nonce:asc\",\n                                \"nonce:desc\",\n                                \"senderId:asc\",\n                                \"senderId:desc\",\n                                \"senderPublicKey:asc\",\n                                \"senderPublicKey:desc\",\n                                \"timestamp:asc\",\n                                \"timestamp:desc\",\n                                \"version:asc\",\n                                \"version:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/votes/{transactionId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Votes\"\n                ],\n                \"summary\": \"Find a single vote by its transaction ID\",\n                \"parameters\": [\n                    {\n                        \"name\": \"transactionId\",\n                        \"in\": \"path\",\n                        \"description\": \"Transaction ID\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Vote not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/wallets\": {\n            \"get\": {\n                \"tags\": [\n                    \"Wallets\"\n                ],\n                \"summary\": \"List wallets or search for wallets meeting specific criteria\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    },\n                    {\n                        \"name\": \"address\",\n                        \"in\": \"query\",\n                        \"description\": \"The address of the wallet to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/address\"\n                        }\n                    },\n                    {\n                        \"name\": \"balance\",\n                        \"in\": \"query\",\n                        \"description\": \"The exact balance of the wallet(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"balance.from\",\n                        \"in\": \"query\",\n                        \"description\": \"The minimum balance of the wallet(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"balance.to\",\n                        \"in\": \"query\",\n                        \"description\": \"The maximum balance of the wallet(s) to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/zeroOrMore\"\n                        }\n                    },\n                    {\n                        \"name\": \"publicKey\",\n                        \"in\": \"query\",\n                        \"description\": \"The public key of the wallet to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/publicKey\"\n                        }\n                    },\n                    {\n                        \"name\": \"attributes.secondPublicKey\",\n                        \"in\": \"query\",\n                        \"description\": \"The second public key of the wallet to be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/publicKey\"\n                        }\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Sorting method\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"address:asc\",\n                                \"address:desc\",\n                                \"attributes.secondPublicKey:asc\",\n                                \"attributes.secondPublicKey:desc\",\n                                \"balance:asc\",\n                                \"balance:desc\",\n                                \"publicKey:asc\",\n                                \"publicKey:desc\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Wallet not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/wallets/{identifier}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Wallets\"\n                ],\n                \"summary\": \"Find a single wallet by its identifier\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Can be address, public key or username of the wallet\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Wallet not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/wallets/{identifier}/transactions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Wallets\"\n                ],\n                \"summary\": \"List all transactions in a specific wallet\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Can be address, public key or username of the wallet\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Wallet not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/wallets/{identifier}/transactions/received\": {\n            \"get\": {\n                \"tags\": [\n                    \"Wallets\"\n                ],\n                \"summary\": \"List transactions received by a specific wallet\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Can be address, public key or username of the wallet\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Wallet not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/wallets/{identifier}/transactions/sent\": {\n            \"get\": {\n                \"tags\": [\n                    \"Wallets\"\n                ],\n                \"summary\": \"List transactions sent by a specific wallet\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Can be address, public key or username of the wallet\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Wallet not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/wallets/{identifier}/votes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Wallets\"\n                ],\n                \"summary\": \"List vote or unvote transactions from a specific wallet\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Can be address, public key or username of the wallet\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/walletIdentifier\"\n                        }\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Wallet not found\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        },\n        \"/wallets/top\": {\n            \"get\": {\n                \"tags\": [\n                    \"Wallets\"\n                ],\n                \"summary\": \"List wallets in descending order of balance\",\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of the page that will be returned\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/page\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"The number of results per page\",\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/limit\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\"\n                    },\n                    \"422\": {\n                        \"description\": \"Invalid parameter(s)\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"address\": {\n                \"type\": \"string\",\n                \"pattern\": \"^S([A-HJ-NP-Za-km-z1-9]{33})$\"\n            },\n            \"idOrHeight\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[0-9a-fA-F]{64}$|^[1-9][0-9]*$\"\n            },\n            \"ip\": {\n                \"type\": \"string\",\n                \"pattern\": \"(?:^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$)|(?:^(?:(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:)))(?:%[0-9a-zA-Z]{1,})?$)\"\n            },\n            \"limit\": {\n                \"type\": \"integer\",\n                \"default\": 100,\n                \"minimum\": 1,\n                \"maximum\": 100\n            },\n            \"lockIds\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"ids\"\n                ],\n                \"properties\": {\n                    \"ids\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/sha256\"\n                        }\n                    }\n                }\n            },\n            \"oneOrMore\": {\n                \"type\": \"integer\",\n                \"minimum\": 1\n            },\n            \"page\": {\n                \"type\": \"integer\",\n                \"default\": 1,\n                \"minimum\": 1\n            },\n            \"publicKey\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[0-9a-fA-F]{66}$\"\n            },\n            \"recipientId\": {\n                \"type\": \"string\",\n                \"pattern\": \"^S([A-HJ-NP-Za-km-z1-9]{33})$\"\n            },\n            \"semver\": {\n                \"type\": \"string\",\n                \"pattern\": \"^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\\+([0-9a-zA-Z-]+(?:\\\\.[0-9a-zA-Z-]+)*))?$\"\n            },\n            \"sha256\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[0-9a-f]{64}$\"\n            },\n            \"signature\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[0-9a-f]{128}$\"\n            },\n            \"time\": {\n                \"type\": \"string\",\n                \"pattern\": \"^(\\\\d{4}-\\\\d{2}-\\\\d{2})T(\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3})Z$\"\n            },\n            \"transaction\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"signature\",\n                    \"version\",\n                    \"type\",\n                    \"typeGroup\",\n                    \"fee\",\n                    \"senderPublicKey\",\n                    \"nonce\",\n                    \"amount\",\n                    \"recipientId\",\n                    \"vendorField\",\n                    \"expiration\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"$ref\": \"#/components/schemas/sha256\"\n                    },\n                    \"version\": {\n                        \"type\": \"integer\",\n                        \"example\": 2\n                    },\n                    \"type\": {\n                        \"type\": \"integer\",\n                        \"example\": 0\n                    },\n                    \"typeGroup\": {\n                        \"type\": \"integer\",\n                        \"example\": 1\n                    },\n                    \"expiration\": {\n                        \"type\": \"integer\",\n                        \"example\": 0\n                    },\n                    \"nonce\": {\n                        \"type\": \"integer\",\n                        \"example\": 1\n                    },\n                    \"amount\": {\n                        \"type\": \"integer\",\n                        \"example\": 100000000\n                    },\n                    \"fee\": {\n                        \"type\": \"integer\",\n                        \"example\": 2500000\n                    },\n                    \"recipientId\": {\n                        \"$ref\": \"#/components/schemas/recipientId\"\n                    },\n                    \"senderPublicKey\": {\n                        \"type\": \"string\",\n                        \"example\": \"022bcee076006120b24f145d495686d2afc880079daf2eb20d8be9bf0e434ca3e1\"\n                    },\n                    \"vendorField\": {\n                        \"type\": \"string\",\n                        \"example\": \"Welcome to Solar!\"\n                    },\n                    \"signature\": {\n                        \"$ref\": \"#/components/schemas/signature\"\n                    }\n                }\n            },\n            \"transactions\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"transactions\"\n                ],\n                \"properties\": {\n                    \"transactions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/transaction\"\n                        },\n                        \"minItems\": 1\n                    }\n                }\n            },\n            \"transactionTypeGroups\": {\n                \"type\": \"integer\",\n                \"enum\": []\n            },\n            \"transactionTypes\": {\n                \"type\": \"integer\",\n                \"enum\": []\n            },\n            \"transactionVersions\": {\n                \"type\": \"integer\",\n                \"enum\": []\n            },\n            \"username\": {\n                \"type\": \"string\",\n                \"pattern\": \"^(?=.*[a-z!@$\u0026_.])([a-z0-9!@$\u0026_.]?){1,20}$\"\n            },\n            \"walletIdentifier\": {\n                \"type\": \"string\",\n                \"pattern\": \"^S([A-HJ-NP-Za-km-z1-9]{33})$|^[0-9a-fA-F]{66}$|^(?=.*[a-z!@$\u0026_.])([a-z0-9!@$\u0026_.]?){1,20}$\"\n            },\n            \"zeroOrMore\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/Solar-network/core@1f2b8a0a2ae661e4818dcbac13698e749c7ee2f8/-/blob/packages/core-api/src/www/api.json",
			"externalURLs": [
				{
					"url": "https://github.com/Solar-network/core/blob/1f2b8a0a2ae661e4818dcbac13698e749c7ee2f8/packages/core-api/src/www/api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/delegates/{identifier}\": get: parameters: fail: \"identifier\": string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?=`"
}