{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nexmoinc/gosrvlib"
		},
		"file": {
			"name": "openapi_monitoring.yaml",
			"size": 0,
			"path": "examples/service/openapi_monitoring.yaml",
			"byteSize": 5003,
			"content": "openapi: 3.0.3\ninfo:\n  title: gosrvlibexample\n  description: Monitoring API\n  contact:\n    email: dev@example.com\n  license:\n    name: Internal use only. All rights reserved.\n    url: 'https://github.com/gosrvlibexampleowner/gosrvlibexample/blob/main/LICENSE'\n  version: 1.0.0\nservers:\n  - url: 'https://gosrvlibexample:8072/'\ntags:\n  - name: index\n    description: Service index\n  - name: ping\n    description: Ping this service\n  - name: status\n    description: Check this service health status\n  - name: metrics\n    description: Returns Prometheus metrics\n  - name: pprof\n    description: Returns pprof data\npaths:\n  /:\n    get:\n      tags:\n        - index\n      summary: Provides a summary of the service and available endpoints\n      responses:\n        '200':\n          description: The service is reachable\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/response'\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        description: content\n                        properties:\n                          duration:\n                            type: number\n                            description: service uptime in seconds\n                          routes:\n                            type: array\n                            items:\n                              type: object\n  /ping:\n    get:\n      tags:\n        - ping\n      summary: Check if the service is reachable\n      responses:\n        '200':\n          description: The service is reachable\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/response'\n                  - type: object\n                    properties:\n                      data:\n                        type: string\n                        description: OK\n  /status:\n    get:\n      tags:\n        - status\n      summary: Returns the health status of this service\n      responses:\n        '200':\n          description: The service is healthy\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/response'\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        description: content\n        '503':\n          description: One or more internal systems are not available\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/response'\n                  - type: object\n                    properties:\n                      data:\n                        type: object\n                        description: content\n  /metrics:\n    get:\n      tags:\n        - metrics\n      summary: Returns Prometheus metrics\n      responses:\n        '200':\n          description: Prometheus metrics\n  /pprof:\n    get:\n      tags:\n        - pprof\n      summary: Returns pprof profiling data\n      responses:\n        '200':\n          description: pprof profiling data\n  /ip:\n    get:\n      tags:\n        - status\n      summary: Returns the public IP address of this service instance\n      responses:\n        '200':\n          description: IP address of this service instance\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/response'\n                  - type: object\n                    properties:\n                      data:\n                        type: string\n                        description: Public IP address\n        '424':\n          description: Unable to connect to the ipify service\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/response'\n                  - type: object\n                    properties:\n                      data:\n                      data:\n                        type: string\n                        description: Error\ncomponents:\n  schemas:\n    response:\n      type: object\n      properties:\n        program:\n          type: string\n          description: program name (i.e. gosrvlibexample)\n        version:\n          type: string\n          description: service version number (e.g. \"1.2.3\")\n        release:\n          type: string\n          description: service release number (e.g. \"13\")\n        datetime:\n          type: string\n          description: readable date-time (RFC3339)\n        timestamp:\n          type: integer\n          description: timestamp in nanoseconds\n        status:\n          type: string\n          description: http status code description\n        code:\n          type: integer\n          description: http status code\n        message:\n          type: string\n          description: response message\n",
			"canonicalURL": "/github.com/nexmoinc/gosrvlib@95ac86b3b7ca2fc3b5c476257c17e98778325bc3/-/blob/examples/service/openapi_monitoring.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nexmoinc/gosrvlib/blob/95ac86b3b7ca2fc3b5c476257c17e98778325bc3/examples/service/openapi_monitoring.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/ip\": get: responses: code 424: contents: media: \"application/json\": generate schema: allOf: merge properties: try to merge conflicting property schemas: schema is null or empty"
}