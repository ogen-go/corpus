{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/action/v2alpha1/openapi.yaml",
			"byteSize": 23704,
			"content": "components:\n  parameters:\n    ActionName:\n      description: The name of the action as one or more identifier strings separated\n        by periods. Each identifier string consists of lowercase letters, digits,\n        and underscores, and cannot start with a digit.\n      in: path\n      name: action_name\n      required: true\n      schema:\n        pattern: ^[_a-z][_a-z0-9]*(?:\\.[_a-z][_a-z0-9]*)*$\n        type: string\n    AuthorizationHeaderParam:\n      description: The access token, which is obtained from a known identity provider.\n      in: header\n      name: Authorization\n      required: true\n      schema:\n        pattern: ^Bearer .+\n        type: string\n    EntryName:\n      description: The name of the trigger map entry.\n      in: path\n      name: entry_name\n      required: true\n      schema:\n        pattern: ^[_a-z][_a-z0-9]*(?:\\\\.[_a-z][_a-z0-9]*)*$\n        type: string\n    MessageId:\n      description: The id of the message\n      in: path\n      name: message_id\n      required: true\n      schema:\n        type: string\n    Tenant:\n      description: The tenant name.\n      example: wingdings-widgets\n      in: path\n      name: tenant\n      required: true\n      schema:\n        type: string\n    TriggerName:\n      description: The name of the trigger.\n      in: path\n      name: trigger_name\n      required: true\n      schema:\n        pattern: ^[_a-z][_a-z0-9]*(?:\\\\.[_a-z][_a-z0-9]*)*$\n        type: string\n  schemas:\n    Action:\n      discriminator:\n        mapping:\n          app-message: '#/components/schemas/AppMessageAction'\n          email: '#/components/schemas/EmailAction'\n          webhook: '#/components/schemas/WebhookAction'\n        propertyName: kind\n      oneOf:\n      - $ref: '#/components/schemas/EmailAction'\n      - $ref: '#/components/schemas/WebhookAction'\n      - $ref: '#/components/schemas/AppMessageAction'\n    ActionImmutable:\n      properties:\n        createdAt:\n          description: The date and time this action template was created (ISO-8601\n            date/time with zone).\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          description: The principal that created this action template.\n          readOnly: true\n          type: string\n        kind:\n          $ref: '#/components/schemas/ActionKind'\n        name:\n          description: The name of the action, as one or more identifier strings separated\n            by periods. Each identifier string consists of lowercase letters, digits,\n            and underscores, and cannot start with a digit.\n          pattern: ^[_a-z][_a-z0-9]*(?:\\.[_a-z][_a-z0-9]*)*$\n          type: string\n        updatedAt:\n          description: The date and time this action template was updated (ISO-8601\n            date/time with zone).\n          format: date-time\n          readOnly: true\n          type: string\n        updatedBy:\n          description: The principal that updated this action template.\n          readOnly: true\n          type: string\n      required:\n      - name\n      - kind\n      type: object\n    ActionKind:\n      enum:\n      - webhook\n      - email\n      - app-message\n      type: string\n    ActionMutable:\n      oneOf:\n      - $ref: '#/components/schemas/EmailActionMutable'\n      - $ref: '#/components/schemas/WebhookActionMutable'\n    AppMessage:\n      allOf:\n      - $ref: '#/components/schemas/AppMessageInternal'\n      - $ref: '#/components/schemas/AppMessageImmutable'\n      - $ref: '#/components/schemas/AppMessageMutable'\n      description: A message delivered to a tenant member from the platform or a subscribed\n        app.\n      type: object\n    AppMessageAction:\n      allOf:\n      - $ref: '#/components/schemas/ActionImmutable'\n      - $ref: '#/components/schemas/AppMessageActionMutable'\n    AppMessageActionMutable:\n      properties:\n        iconURL:\n          description: The icon URL to be displayed along with the message.\n          format: uri\n          maxLength: 2048\n          type: string\n        link:\n          description: Call to action link for this message.\n          format: uri\n          maxLength: 2048\n          type: string\n        message:\n          description: The main message that user needs to receive.\n          maxLength: 1024\n          type: string\n        title:\n          description: The title to be displayed for the message.\n          maxLength: 128\n          type: string\n      required:\n      - title\n      type: object\n    AppMessageImmutable:\n      properties:\n        clientId:\n          description: Application or service client ID that caused the message to\n            be created.\n          readOnly: true\n          type: string\n        clientKind:\n          $ref: '#/components/schemas/ClientKind'\n        clientName:\n          description: Human readable name for the entity that generated the message.\n          readOnly: true\n          type: string\n        iconURL:\n          description: The icon URL to be displayed along with the message.\n          format: uri\n          readOnly: true\n          type: string\n        link:\n          description: Call to action link for this message.\n          format: uri\n          readOnly: true\n          type: string\n        message:\n          description: The main message that user needs to receive.\n          readOnly: true\n          type: string\n        recipient:\n          description: The tenant member the message was delivered to.\n          readOnly: true\n          type: string\n        title:\n          description: The title to be displayed for the message.\n          readOnly: true\n          type: string\n      required:\n      - recipient\n      - title\n      - clientId\n      - clientName\n      - clientKind\n      type: object\n    AppMessageInternal:\n      properties:\n        createdAt:\n          description: The date and time this trigger map entry was created (ISO-8601\n            date/time with zone).\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          description: The principal that created this trigger map entry.\n          readOnly: true\n          type: string\n        id:\n          description: The id of this message.\n          readOnly: true\n          type: string\n        updatedAt:\n          description: The date and time this trigger map entry was updated (ISO-8601\n            date/time with zone).\n          format: date-time\n          readOnly: true\n          type: string\n        updatedBy:\n          description: The principal that updated this trigger map entry.\n          readOnly: true\n          type: string\n      required:\n      - id\n      - createdAt\n      - updatedAt\n      - createdBy\n      - updatedBy\n      type: object\n    AppMessageMutable:\n      properties:\n        state:\n          $ref: '#/components/schemas/AppMessageState'\n          description: Current state of this message\n      required:\n      - state\n      type: object\n    AppMessagePaginatedList:\n      description: A list of app messages delivered to the user. May also include\n        a next token which can be returned to the service to retrieve the next page\n        of messages.\n      properties:\n        items:\n          description: An array of app messages\n          items:\n            $ref: '#/components/schemas/AppMessage'\n          type: array\n        next:\n          description: A token that can be returned to the service to retrieve the\n            next page of messages\n          type: string\n      required:\n      - items\n      type: object\n    AppMessageState:\n      enum:\n      - unread\n      - read\n      type: string\n    ClientKind:\n      description: The kind of creator of an app message.\n      enum:\n      - app\n      - platform\n      type: string\n    EmailAction:\n      allOf:\n      - $ref: '#/components/schemas/ActionImmutable'\n      - $ref: '#/components/schemas/EmailActionMutable'\n    EmailActionMutable:\n      properties:\n        addresses:\n          description: |\n            An array of email addresses to include as recipients. Requires a special permission set for use. Please DO NOT include actual bouncing emails in automated testing.\n          items:\n            format: email\n            type: string\n          type: array\n        body:\n          description: HTML content to send as the body of the email. You can use\n            a template in this field.\n          example: \u003chtml\u003e\u003cbody\u003eHello, this is my test email.\u003c/body\u003e\u003c/html\u003e\n          type: string\n        bodyPlainText:\n          description: Optional text to send as the text/plain part of the email.\n            If this field is not set for an email action, the Action service converts\n            the value from the body field to text and sends that as the text/plain\n            part when triggering the action. You can use a template in this field.\n          example: Hello, this is my test email.\n          type: string\n        fromName:\n          description: Optional text providing a human-friendly name for the sender.\n            Must be less than or equal to 81 characters. You can use a template in\n            this field.\n          type: string\n        members:\n          description: An array of tenant member names, whose profile email addresses\n            will be included as recipients.\n          items:\n            type: string\n          type: array\n        subject:\n          description: The subject of the email. You can use a template in this field.\n          type: string\n        title:\n          description: A human-readable title for the action. Must be less than or\n            equal to 128 characters.\n          type: string\n      type: object\n    PublicWebhookKey:\n      properties:\n        key:\n          description: A PEM-formatted, ASN.1 DER-encoded PKCS#1 key.\n          type: string\n      required:\n      - key\n      type: object\n    RawJSONPayload:\n      additionalProperties: true\n      type: object\n    ServiceError:\n      properties:\n        code:\n          type: string\n        details:\n          type: object\n        message:\n          type: string\n        moreInfo:\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    TriggerEventImmutable:\n      properties:\n        createdAt:\n          description: string-ified ISO-8601 date/time with zone.\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          description: The principal that generated the trigger event.\n          readOnly: true\n          type: string\n        tenant:\n          description: The tenant within which the trigger event was generated.\n          pattern: ^[_a-z][_a-z0-9]*(?:\\\\.[_a-z][_a-z0-9]*)*$\n          readOnly: true\n          type: string\n      type: object\n    TriggerEventInput:\n      properties:\n        actionMetadata:\n          properties:\n            addresses:\n              description: |\n                An array of email addresses to include as recipients. Requires a special permission set for use. Please DO NOT include actual bouncing emails in automated testing.\n              items:\n                format: email\n                type: string\n              type: array\n            expiresAtUTCEpoch:\n              description: Unix epoch timestamp in UTC indicating when the message\n                expires.\n              type: integer\n            members:\n              description: An array of tenant member names, whose profile email addresses\n                will be included as recipients.\n              items:\n                type: string\n              type: array\n          type: object\n        id:\n          description: |\n            A unique identifier for this trigger event. Generated from a hash of all recursively sorted event field values.\n          type: string\n        payload:\n          $ref: '#/components/schemas/RawJSONPayload'\n        triggerName:\n          description: The name of the trigger for which this event was created.\n          pattern: ^[_a-z][_a-z0-9]*(?:\\\\.[_a-z][_a-z0-9]*)*$\n          type: string\n        ttlSeconds:\n          default: 3600\n          description: |\n            A time to live (TTL), expressed as seconds after createdAt, after which the trigger event will not be acted upon.\n          format: int32\n          minimum: 1\n          type: integer\n      required:\n      - triggerName\n      type: object\n    TriggerEventResponse:\n      allOf:\n      - $ref: '#/components/schemas/TriggerEventInput'\n      - $ref: '#/components/schemas/TriggerEventImmutable'\n      required:\n      - id\n      - triggerName\n      - tenant\n      - createdAt\n      - createdBy\n      type: object\n    TriggerMapEntry:\n      allOf:\n      - $ref: '#/components/schemas/TriggerMapEntryImmutable'\n      - $ref: '#/components/schemas/TriggerMapEntryMutable'\n      description: |\n        A trigger map entry describes a mapping between a named trigger and a set of actions. There can be multiple trigger map entries for each trigger within the system. The combination of trigger name and entry name must be unique.\n      type: object\n    TriggerMapEntryImmutable:\n      properties:\n        createdAt:\n          description: The date and time this trigger map entry was created (ISO-8601\n            date/time with zone).\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          description: The principal that created this trigger map entry.\n          readOnly: true\n          type: string\n        entryName:\n          default: default\n          description: The entry name for this trigger mapping.\n          pattern: ^[_a-z][_a-z0-9]*(?:\\.[_a-z][_a-z0-9]*)*$\n          type: string\n        triggerName:\n          description: The trigger name for this mapping entry.\n          pattern: ^[_a-z][_a-z0-9]*(?:\\.[_a-z][_a-z0-9]*)*$\n          type: string\n        updatedAt:\n          description: The date and time this trigger map entry was updated (ISO-8601\n            date/time with zone).\n          format: date-time\n          readOnly: true\n          type: string\n        updatedBy:\n          description: The principal that updated this trigger map entry.\n          readOnly: true\n          type: string\n      required:\n      - triggerName\n      - entryName\n      type: object\n    TriggerMapEntryMutable:\n      properties:\n        actionNames:\n          description: An array of action template names to invoke when the trigger\n            fires.\n          items:\n            type: string\n          type: array\n      required:\n      - actionNames\n      type: object\n    WebhookAction:\n      allOf:\n      - $ref: '#/components/schemas/ActionImmutable'\n      - $ref: '#/components/schemas/WebhookActionMutable'\n      required:\n      - webhookUrl\n      - webhookPayload\n    WebhookActionMutable:\n      properties:\n        title:\n          description: A human-readable title for the action. Must be less than 128\n            characters.\n          type: string\n        webhookHeaders:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          type: object\n        webhookPayload:\n          description: |\n            The (possibly) templated payload body, which is POSTed to the webhookUrl.\n          type: string\n        webhookUrl:\n          description: |\n            Only HTTPS is allowed.\n          format: uri\n          type: string\n      type: object\ninfo:\n  description: |\n    With the Splunk Cloud Action service, you can receive incoming trigger events and use pre-defined action templates to turn these events into meaningful actions.\n  title: Action Service\n  version: v2alpha1.12\nopenapi: 3.0.0\npaths:\n  /{tenant}/action/v2alpha1/actions:\n    get:\n      operationId: listActions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Action'\n                type: array\n          description: The action templates were returned successfully.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The operation isn't authorized.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: An error occurred.\n      summary: Returns the list of action templates.\n      tags:\n      - Actions\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeaderParam'\n    - $ref: '#/components/parameters/Tenant'\n    post:\n      operationId: createAction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Action'\n        description: The action template to create.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Action'\n          description: The action template was created successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The request isn't valid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The operation isn't authorized.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The action template already exists.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The provided fields aren't valid.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: An error occurred.\n      summary: Creates an action template.\n      tags:\n      - Actions\n      x-authz-scope: action.actions.create\n  /{tenant}/action/v2alpha1/actions/{action_name}:\n    delete:\n      operationId: deleteAction\n      responses:\n        \"204\":\n          description: The action template was removed successfully.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The operation isn't authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The resource wasn't found.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: An error occurred.\n      summary: Removes an action template.\n      tags:\n      - Actions\n      x-authz-scope: action.actions.modify\n    get:\n      operationId: getAction\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Action'\n          description: The action template was returned successfully.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The operation isn't authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The resource wasn't found.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: An error occurred.\n      summary: Returns a specific action template.\n      tags:\n      - Actions\n      x-authz-scope: action.actions.read\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeaderParam'\n    - $ref: '#/components/parameters/Tenant'\n    - $ref: '#/components/parameters/ActionName'\n    patch:\n      operationId: updateAction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActionMutable'\n        description: Updates to the action template.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Action'\n          description: The action was updated successfully.\n          headers:\n            Location:\n              description: The URL of the updated action.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The request isn't valid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The operation isn't authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The resource wasn't found.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: The provided fields aren't valid.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: An error occurred.\n      summary: Modifies an action template.\n      tags:\n      - Actions\n      x-authz-scope: action.actions.modify\n  /system/action/v2alpha1/webhook/keys:\n    get:\n      operationId: getPublicWebhookKeys\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PublicWebhookKey'\n                type: array\n          description: The public webhook keys were returned successfully.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: An error occurred.\n      summary: Get the current webhook key(s). If multiple keys were returned, one\n        is active and one is expired.\n      tags:\n      - Webhook Keys\n      x-auth-required: false\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: action/v2alpha1/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/action/v2alpha1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/action/v2alpha1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/{tenant}/action/v2alpha1/actions\": get: responses: code 200: contents: media: \"application/json\": generate schema: item: oneOf: discriminator: unable to map \"app-message\" to \"https://raw.githubusercontent.com/splunk/splunk-cloud-sdk-python/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/action/v2alpha1/openapi.yaml#/components/schemas/AppMessageAction\""
}