{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/grokify/go-ringcentral-client"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "engagedigital/v1/client/api/openapi.yaml",
			"byteSize": 274017,
			"content": "openapi: 3.0.0\ninfo:\n  termsOfService: https://developer.ringcentral.com\n  title: Engage Digital API\n  version: \"1.0\"\nservers:\n- url: https://DOMAIN.api.engagement.dimelo.com/1.0\ntags:\n- name: Agent Status\npaths:\n  /attachments:\n    get:\n      description: This method renders attachments ordered by creation date (descending).\n      operationId: getAllAttachments\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllAttachmentsResponse'\n          description: Success\n      summary: Getting all attachments\n      tags:\n      - Attachments\n    post:\n      description: This method allows you to create an new attachment.\n      operationId: createAttachment\n      requestBody:\n        content:\n          'multipart/form-data:':\n            schema:\n              properties:\n                file:\n                  format: binary\n                  type: string\n                private:\n                  enum:\n                  - \"true\"\n                  - =1\n                  type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attachment'\n          description: Success\n        422:\n          description: Compose is not supported on this source (compose_disabled_on_source)\n      summary: Creating an attachment\n      tags:\n      - Attachments\n  /attachments/{attachmentId}:\n    get:\n      description: This method renders an attachment from given id.\n      operationId: getAttachment\n      parameters:\n      - explode: false\n        in: path\n        name: attachmentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attachment'\n          description: Success\n      summary: Getting an attachment from its id\n      tags:\n      - Attachments\n  /categories:\n    get:\n      description: This method renders categories ordered by creation date (ascending).\n      operationId: getAllCategories\n      parameters:\n      - description: To filter categories on given category parent id.\n        explode: true\n        in: query\n        name: parent_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllCategoriesResponse'\n          description: Success\n      summary: Getting all categories\n      tags:\n      - Categories\n    post:\n      description: |-\n        This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code).\n\n        Note: The fields ​`mandatory`,​ `​multiple`,​ ​`post_qualification​`, `s​ource_ids`​ and `u​nselectable​` are accounted for only if the Category has no parent.\n\n        Authorization​: only users that can manage teams.\n      operationId: createCategory\n      parameters:\n      - description: Category name.\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: ID of parent category.\n        explode: true\n        in: query\n        name: parent_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'displayed color for the category, see Category colors. '\n        explode: true\n        in: query\n        name: color\n        required: false\n        schema:\n          enum:\n          - 0\n          - 1\n          - 2\n          - 3\n          - 4\n          - 5\n          - 6\n          type: integer\n        style: form\n      - description: mandatory categorization (Boolean).\n        explode: true\n        in: query\n        name: mandatory\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: allow to assign multiple child categories (Boolean).\n        explode: true\n        in: query\n        name: multiple\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: post qualification (Boolean).\n        explode: true\n        in: query\n        name: post_qualification\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: root category is unselectable (Boolean).\n        explode: true\n        in: query\n        name: unselectable\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: List of source id.\n        explode: true\n        in: query\n        name: source_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n          description: Success\n      summary: Creating a category\n      tags:\n      - Categories\n  /categories/{categoryId}:\n    delete:\n      description: This method destroys an existing category. It renders the category\n        itself. It renders a 404 if id is invalid.\n      operationId: deleteCategory\n      parameters:\n      - explode: false\n        in: path\n        name: categoryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of a category to recategorize (optional).\n        explode: true\n        in: query\n        name: take_over_category_id\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n          description: Success\n      summary: Deleting a category\n      tags:\n      - Categories\n    get:\n      description: This method renders a category from given id.\n      operationId: getCategory\n      parameters:\n      - explode: false\n        in: path\n        name: categoryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n          description: Success\n      summary: Getting a category from its id\n      tags:\n      - Categories\n    put:\n      description: |-\n        This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code).\n\n        Note: The fields ​`mandatory`,​ ​`multiple`,​ ​`post_qualification​`, `s​ource_ids​` and `u​nselectable​` are accounted for only if the Category has no parent.\n\n        Authorization​: only users that can manage teams.\n      operationId: updateCategory\n      parameters:\n      - explode: false\n        in: path\n        name: categoryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Category name.\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: ID of parent category.\n        explode: true\n        in: query\n        name: parent_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'displayed color for the category, see Category colors. '\n        explode: true\n        in: query\n        name: color\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: mandatory categorization (Boolean).\n        explode: true\n        in: query\n        name: mandatory\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: allow to assign multiple child categories (Boolean).\n        explode: true\n        in: query\n        name: multiple\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: post qualification (Boolean).\n        explode: true\n        in: query\n        name: post_qualification\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: root category is unselectable (Boolean).\n        explode: true\n        in: query\n        name: unselectable\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: List of source id.\n        explode: true\n        in: query\n        name: source_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n          description: Success\n      summary: Updating a category\n      tags:\n      - Categories\n  /channels:\n    get:\n      description: This method renders all channels ordered by date of creation.\n      operationId: getAllChannels\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllChannelsResponse'\n          description: Success\n      summary: Getting all channels\n      tags:\n      - Channels\n  /channels/{channelId}:\n    get:\n      description: This method renders a channel from given id.\n      operationId: getChannel\n      parameters:\n      - explode: false\n        in: path\n        name: channelId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: Success\n      summary: Getting a channel from its id\n      tags:\n      - Channels\n    put:\n      description: |-\n        This method updates an existing channel from given attributes and renders it in case of success.\n\n        Authorization​: only users that are able to update channels.\n      operationId: updateChannel\n      parameters:\n      - explode: false\n        in: path\n        name: channelId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The name of the channel.\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: An array containing id of each source assigned to a channel (multiple).\n        explode: true\n        in: query\n        name: source_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Number of tasks that can be assigned to agent by the routing\n          before they are considered \"occupied\".\n        explode: true\n        in: query\n        name: soft_capability\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: M​aximum number of tasks that can be assigned to agents.\n        explode: true\n        in: query\n        name: hard_capability\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: this field defines the time before a task expires (in seconds).\n        explode: true\n        in: query\n        name: task_timeout_seconds\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: Success\n      summary: Updating a channel\n      tags:\n      - Channels\n  /communities:\n    get:\n      description: This method renders communities ordered by creation date (ascending).\n      operationId: getAllCommunities\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllCommunitiesResponse'\n          description: Success\n      summary: Getting all communities\n      tags:\n      - Communities\n  /communities/{communityId}:\n    get:\n      description: This method renders a community from given id.\n      operationId: getCommunity\n      parameters:\n      - explode: false\n        in: path\n        name: communityId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Community'\n          description: Success\n      summary: Getting a community from its id\n      tags:\n      - Communities\n  /content_sources:\n    get:\n      description: This method renders sources ordered by creation date (ascending).\n      operationId: getAllSources\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllSourcesResponse'\n          description: Success\n      summary: Getting all sources\n      tags:\n      - Sources\n  /content_sources/{sourceId}:\n    get:\n      description: This method renders a source from given id.\n      operationId: getSource\n      parameters:\n      - explode: false\n        in: path\n        name: sourceId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n          description: Success\n      summary: Getting a source from its id\n      tags:\n      - Sources\n    put:\n      description: This method updates an existing source from given attributes and\n        renders it in case of success.\n      operationId: updateSource\n      parameters:\n      - explode: false\n        in: path\n        name: sourceId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Source name\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Activate/deactivate the source (Boolean)\n        explode: true\n        in: query\n        name: active\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Channel\n        explode: true\n        in: query\n        name: channel_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Color of the icon (see S​ ource colors​) (Integer)\n        explode: true\n        in: query\n        name: color\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Response time (seconds)\n        explode: true\n        in: query\n        name: sla_response\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: SLA expired strategy (\"max\", \"half\" or \"base\")\n        explode: true\n        in: query\n        name: sla_expired_strategy\n        required: false\n        schema:\n          enum:\n          - max\n          - half\n          - base\n          type: string\n        style: form\n      - description: Priority boost of messages with intervention (Integer)\n        explode: true\n        in: query\n        name: intervention_messages_boost\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Priority boost of transferred tasks (Integer)\n        explode: true\n        in: query\n        name: transferred_tasks_boost\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Hide from statistics (Boolean)\n        explode: true\n        in: query\n        name: hidden_from_stats\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Default categories\n        explode: true\n        in: query\n        name: default_category_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Default categories (agent messages)\n        explode: true\n        in: query\n        name: user_thread_default_category_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Default content language\n        explode: true\n        in: query\n        name: default_content_language\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Auto-detect content language (Boolean)\n        explode: true\n        in: query\n        name: auto_detect_content_language\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Automatic archiving of old contents (Boolean)\n        explode: true\n        in: query\n        name: content_archiving\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Archive contents older than (seconds)\n        explode: true\n        in: query\n        name: content_archiving_period\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n          description: Success\n      summary: Updating a source\n      tags:\n      - Sources\n  /content_threads:\n    get:\n      description: |-\n        This method renders threads ordered by last content date (descending). Only threads in sources where token’s user has “read” permission are returned.\n\n        Authorization​: no.\n      operationId: getAllThreads\n      parameters:\n      - description: A search query to filter threads. Please refer to ​Search \u0026 filtering\n          parameters​ for more details.\n        explode: true\n        in: query\n        name: q\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllThreadsResponse'\n          description: Success\n      summary: Getting all threads\n      tags:\n      - Threads\n  /content_threads/{threadId}:\n    get:\n      description: |-\n        This method renders a thread from given id. If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: getThread\n      parameters:\n      - explode: false\n        in: path\n        name: threadId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Thread'\n          description: Success\n      summary: Getting a thread from its id\n      tags:\n      - Threads\n  /content_threads/{threadId}/close:\n    put:\n      description: |-\n        Thread closure/opening is only available for the following sources:\n        * Emails\n        * Answers\n        * Ideas\n        * Facebook Messenger\n        * Google+\n        * Lithium\n        * Mobile Messaging\n\n        Starts a job to close a thread. It returns the thread but as the job is asynchronous, the state of the “close” attribute in the returned object do not is the one when the job started.\n\n        If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned. Returns a 403 if the thread cannot be closed or if the user does not have the permission to close a thread.\n\n        Authorization​: no.\n      operationId: closeThread\n      parameters:\n      - explode: false\n        in: path\n        name: threadId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Thread'\n          description: Success\n      summary: Close a thread\n      tags:\n      - Threads\n  /content_threads/{threadId}/ignore:\n    put:\n      description: |-\n        Archives the contents of a thread. If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned.\n\n        If the thread is already being archived, a 409 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: archiveThread\n      parameters:\n      - explode: false\n        in: path\n        name: threadId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Thread'\n          description: Success\n      summary: Archiving a thread\n      tags:\n      - Threads\n  /content_threads/{threadId}/open:\n    get:\n      description: |-\n        Thread closure/opening is only available for the following sources:\n\n        * Emails\n        * Answers\n        * Ideas\n        * Facebook Messenger\n        * Google+\n        * Lithium\n        * Mobile Messaging\n\n        Starts a job to open a thread. It returns the thread but as the job is asynchronous, the state of the “close” attribute in the returned object is the one when the job started.\n\n        If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned. Returns a 403 if the thread cannot be opened or if the user does not have the permission to open a thread.\n\n        Authorization​: no.\n      operationId: openThread\n      parameters:\n      - explode: false\n        in: path\n        name: threadId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Thread'\n          description: Success\n      summary: Open a thread\n      tags:\n      - Threads\n  /content_threads/{threadId}/update_categories:\n    put:\n      description: |-\n        This method updates the categories of a thread. If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned.\n\n        If the thread is already being categorized, a 409 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: categorizeThread\n      parameters:\n      - explode: false\n        in: path\n        name: threadId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: An array containing the new categories to set on the thread.\n        explode: true\n        in: query\n        name: thread_category_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Thread'\n          description: Success\n      summary: Categorizing a thread\n      tags:\n      - Threads\n  /contents:\n    get:\n      description: |-\n        This method renders contents ordered by creation date (descending). Only contents in sources where token’s user has “read” permission are returned.\n\n        Authorization​: no.\n      operationId: getAllContents\n      parameters:\n      - description: 'To filter contents on given query. Query works exactly like\n          threads query but only have those keywords: intervention,identity, identity_group,\n          source, status_in, thread or text. Order can be created_at.desc (default)\n          or created_at.asc. e.g. q=intervention:\"7f946431b6eebffafae642cc\"%20source:\"d19c81948c137d86dac77216\"\n          Please refer to ​Search \u0026 filtering parameters​ for more details.'\n        explode: true\n        in: query\n        name: q\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllContentsResponse'\n          description: Success\n      summary: Contents\n      tags:\n      - Contents\n    post:\n      description: |-\n        This method allows you to create an new content. It can be a reply to another content or a content that initiate discussion. It use token’s user as content user if he is authorized. Content will be created in Dimelo Digital and pushed asynchronously to the source.\n\n        Replying to a customer content is usually possible (unless the source/conversation is read only).\n\n        Composing a content on the contrary depend on the source itself:\n        * The source may not support it (and be purely reactive like Instagram, Messenger ...)\n        * Some sources (usually public account) like Twitter or Facebook page allows to publish content without targeting specific individuals.\n        * Some sources (usually non public media) require specific targeting (phone number for SMS, email address for email, customer_id ...) to be able to create a content. This is source specific and detailed under the generic parameters.\n\n        Authorization​: only users that can reply or initiate discussion (= compose) on given source. it renders also an error if in_reply_to isn’t synchronized or if in_reply_to content is not under an ​open intervention.\n      operationId: createContent\n      parameters:\n      - description: The identity id of content. This parameter is not mandatory,\n          by default it use the token’s user first identity on source.\n        explode: true\n        in: query\n        name: author_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The content’s body. This parameter is mandatory.\n        explode: true\n        in: query\n        name: body\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: The content’s id you want to reply to. If omitted, a new discussion\n          will be created. If source does not support to initiate discussion this\n          parameter is mandatory.\n        explode: true\n        in: query\n        name: in_reply_to_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Created contents are public by default, set this parameter to\n          \"1\" in order to create a private reply. It is NOT supported on every source.\n        explode: true\n        in: query\n        name: private\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The source to create content to. If you specify `in_reply_to_id`\n          parameter, source will be determined from it. Otherwise, this parameter\n          is mandatory.\n        explode: true\n        in: query\n        name: source_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: An array containing the attachments’ ids that need to be attached\n          to this content.\n        explode: true\n        in: query\n        name: attachment_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: For an email source. The subject of the email. This parameter\n          is mandatory when initiating a discussion.\n        explode: true\n        in: query\n        name: title\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'For an email or SMS source. For an email, an array containing\n          the email addresses used in the “To” section of the email. This parameter\n          is mandatory when initiating a discussion. For a SMS, the number the SMS\n          will be sent to. It must start with 00 or +, example: +33634231224 or 0033634231224.\n          This parameter is mandatory when initiating a discussion.'\n        explode: true\n        in: query\n        name: to[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: For an email source. An array containing the email addresses\n          used in the “Cc” section of the email.\n        explode: true\n        in: query\n        name: cc[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: For an email source. An array containing the email addresses\n          used in the “Bcc” section of the email.\n        explode: true\n        in: query\n        name: bcc[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Content'\n          description: Success\n        422:\n          description: Unprocessable Entity\n      summary: Creating a content\n      tags:\n      - Contents\n  /contents/{contentId}:\n    get:\n      description: |-\n        This method renders a content from given id. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: getContent\n      parameters:\n      - explode: false\n        in: path\n        name: contentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Content'\n          description: Success\n      summary: Getting a content from its id\n      tags:\n      - Contents\n  /contents/{contentId}/ignore:\n    put:\n      description: |-\n        Ignores a content. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: ignoreContent\n      parameters:\n      - explode: false\n        in: path\n        name: contentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Content'\n          description: Success\n        404:\n          description: Not Found\n      summary: Ignoring a content\n      tags:\n      - Contents\n  /contents/{contentId}/update_categories:\n    put:\n      description: |-\n        This method updates the categories of a content. If token’s user does not have “read” on this content’s source a 404 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: categorizeContent\n      parameters:\n      - explode: false\n        in: path\n        name: contentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: An array containing the new categories to set on the content.\n        explode: true\n        in: query\n        name: category_ids[]\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Content'\n          description: Success\n      summary: Categorizing a content\n      tags:\n      - Contents\n  /custom_fields:\n    get:\n      description: |-\n        This method renders custom fields ordered by position (ascending).\n\n        Authorization​: only users that can see custom fields in administration section.\n      operationId: getAllCustomFields\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllCustomFieldsResponse'\n          description: Success\n      summary: Getting all custom fields\n      tags:\n      - CustomFields\n    post:\n      description: |-\n        This method creates a custom field. In case of success it renders the custom field, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: only users that can create custom fields.\n      operationId: createCustomField\n      parameters:\n      - description: The associated type of custom field. It can be IdentityGroup\n          or Intervention.\n        explode: true\n        in: query\n        name: associated_type_name\n        required: true\n        schema:\n          enum:\n          - IdentityGroup\n          - Intervention\n          type: string\n        style: form\n      - description: The label of the custom field.\n        explode: true\n        in: query\n        name: label\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: 'The key of the custom field (example: customer_id). This is\n          used to determine how it is stored on identity groups.'\n        explode: true\n        in: query\n        name: key\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The type of the custom field. It can be string, boolean, text,\n          integer, float, single_choice,\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - string\n          - boolean\n          - text\n          - integer\n          - float\n          - single_choice\n          - multiple_choice\n          type: string\n        style: form\n      - description: A list of choices to be for single_choice, or multiple_choice\n          types. This must be given\n        explode: true\n        in: query\n        name: choices\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: true or false, this as no effect on single_choice, multiple_choice\n          or boolean types\n        explode: true\n        in: query\n        name: multiple\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: 'an integer that indicates custom field’s position between others\n          (default: -1).'\n        explode: true\n        in: query\n        name: position\n        required: false\n        schema:\n          default: -1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomField'\n          description: Success\n      summary: Creating a custom field\n      tags:\n      - CustomFields\n  /custom_fields/{customFieldId}:\n    delete:\n      description: |-\n        This method destroys an existing custom field. It renders custom field itself. It renders a 404 if id is invalid.\n\n        Authorization​: only users that are able to destroy custom fields..\n      operationId: deleteCustomField\n      parameters:\n      - explode: false\n        in: path\n        name: customFieldId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomField'\n          description: Success\n      summary: Deleting a custom field\n      tags:\n      - CustomFields\n    get:\n      description: |-\n        This method renders a custom field from given id.\n\n        Authorization​: only users that can see custom fields in administration section.\n      operationId: getCustomField\n      parameters:\n      - explode: false\n        in: path\n        name: customFieldId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomField'\n          description: Success\n      summary: Getting a custom field from its id\n      tags:\n      - CustomFields\n    put:\n      description: |-\n        This method updates an existing custom field from given attributes and renders it in case of success.\n\n        Authorization​: only users that are able to update custom fields.\n      operationId: updateCustomField\n      parameters:\n      - explode: false\n        in: path\n        name: customFieldId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Custom field’s label.\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: choices\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Custom field’s position.\n        explode: true\n        in: query\n        name: position\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomField'\n          description: Success\n      summary: Updating a custom field\n      tags:\n      - CustomFields\n  /events:\n    get:\n      description: |-\n        This method renders events ordered by creation date (descending).\n\n        Authorization​: Only users whose role can search event permission.\n      operationId: getAllEvents\n      parameters:\n      - description: |-\n          To filter events on given query. Query works exactly like threads query but only have those keywords: content, content_thread, name_in, created_before, created_after, user. Order can be created_at.desc (default) or created_at.asc. e.g. q=name_in:\"content.replied\"%20content_thread:\"7f946431b6eebffafae642cc\"%20created_after:\"2014-03-20\"%20user:\"4ee91f197aa58d01b500000f\"%20order:\"created_at.asc\"\n          * DateTime parameters should be ISO-8601\n          * you can specify multiple value for a given keyword: q=name_in:’content.replied’\u0026name_in:’content.ignored’\n          Please refer to ​Search \u0026 filtering parameters​ for more details.\n        explode: true\n        in: query\n        name: q\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllEventsResponse'\n          description: Success\n      summary: Getting all events\n      tags:\n      - Events\n  /events/{eventId}:\n    get:\n      description: |-\n        This method renders an event from given id. If token’s user role does not have “search event” permission a 404 HTTP response will be returned.\n\n        Authorization​: Only users who’s role can search event permission.\n      operationId: getEvent\n      parameters:\n      - explode: false\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Success\n      summary: Getting an event from its id\n      tags:\n      - Events\n  /folders:\n    get:\n      description: This method renders folders.\n      operationId: getAllFolders\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllFoldersResponse'\n          description: Success\n      summary: Getting all folders\n      tags:\n      - Folders\n    post:\n      description: This method creates a new folder. In case of success it renders\n        the created folder, otherwise an error (422 HTTP code).\n      operationId: createFolder\n      parameters:\n      - description: Folder’s label (mandatory).\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: ID of the parent folder.\n        explode: true\n        in: query\n        name: parent_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'position of the folder. '\n        explode: true\n        in: query\n        name: position\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: 'query of the folder as described in ​Search API documentation.​\\n\\nExample:\n          “​active_and_assigned_to_me:true”'\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'boolean describing display of the number of threads. '\n        explode: true\n        in: query\n        name: render_threads_count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: 'list of roles allowed to see this folder. This parameter has\n          to be a hash otherwise it will raise a 400 error. The key should be \"only\".\n          For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`'\n        explode: true\n        in: query\n        name: role_restriction[only][]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: 'list of teams allowed to see this folder. Same thing as role_restriction:\n          team_restriction parameter has to be a hash with the key \"only\".'\n        explode: true\n        in: query\n        name: team_restriction[only][]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n          description: Success\n      summary: Creating a folder\n      tags:\n      - Folders\n  /folders/{folderId}:\n    delete:\n      description: This method destroys an existing folder. It renders the folder\n        itself. It renders a 404 if id is invalid.\n      operationId: deleteFolder\n      parameters:\n      - explode: false\n        in: path\n        name: folderId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n          description: Success\n      summary: Deleting a folder\n      tags:\n      - Folders\n    get:\n      description: This method renders a folder from given id.\n      operationId: getFolder\n      parameters:\n      - explode: false\n        in: path\n        name: folderId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n          description: Success\n      summary: Getting a folder from its id\n      tags:\n      - Folders\n    put:\n      description: This method updates an existing folder from given attributes and\n        renders it in case of success.\n      operationId: updateFolder\n      parameters:\n      - explode: false\n        in: path\n        name: folderId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Folder’s label (mandatory).\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: ID of the parent folder.\n        explode: true\n        in: query\n        name: parent_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'position of the folder. '\n        explode: true\n        in: query\n        name: position\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: 'query of the folder as described in ​Search API documentation.​\\n\\nExample:\n          “​active_and_assigned_to_me:true”'\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'boolean describing display of the number of threads. '\n        explode: true\n        in: query\n        name: render_threads_count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: 'list of roles allowed to see this folder. This parameter has\n          to be a hash otherwise it will raise a 400 error. The key should be \"only\".\n          For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`'\n        explode: true\n        in: query\n        name: role_restriction[only][]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: 'list of teams allowed to see this folder. Same thing as role_restriction:\n          team_restriction parameter has to be a hash with the key \"only\".'\n        explode: true\n        in: query\n        name: team_restriction[only][]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n          description: Success\n      summary: Updating a folder\n      tags:\n      - Folders\n  /identities:\n    get:\n      description: This method renders identities ordered by creation date (descending).\n        Only identities in sources where token’s user has “read” permission are returned.\n      operationId: getAllIdentities\n      parameters:\n      - description: To filter identities on given community id.\n        explode: true\n        in: query\n        name: community_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter on given group id.\n        explode: true\n        in: query\n        name: identity_group_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter identities on given user id.\n        explode: true\n        in: query\n        name: user_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To change the criteria chosen to sort the identities. The value\n          can be “created_at” or\n        explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          enum:\n          - created_at\n          - updated_at\n          type: string\n        style: form\n      - description: To filter identities on given user id\n        explode: true\n        in: query\n        name: foreign_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter identities on given uuid\n        explode: true\n        in: query\n        name: uuid\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllIdentitiesResponse'\n          description: Success\n      summary: Getting all identities\n      tags:\n      - Identities\n  /identities/{identityId}:\n    get:\n      description: This method renders an identity from given id. If token’s user\n        does not have “read” on identity’s source community a 404 HTTP response will\n        be returned.\n      operationId: getIdentity\n      parameters:\n      - explode: false\n        in: path\n        name: identityId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Identity'\n          description: Success\n      summary: Getting an identity from its id\n      tags:\n      - Identities\n  /identity_groups:\n    get:\n      description: |-\n        This method renders identity groups ordered by creation date (descending). Note that identity_group are created in a lazily only when data are manually added to an identity OR a two identity are merged altogether. That means that some identity DON’T have identity_group, and identity_group do not cover all identities.\n\n        Authorization​: no.\n      operationId: getAllIdentityGroups\n      parameters:\n      - description: To filter groups on given firstname.\n        explode: true\n        in: query\n        name: firstname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter groups on given lastname.\n        explode: true\n        in: query\n        name: lastname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter groups that have given email.\n        explode: true\n        in: query\n        name: email\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter groups that have given uuid.\n        explode: true\n        in: query\n        name: uuid\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To change the criteria chosen to sort the identities. The value\n          can be “created_at” or “updated_at”.\n        explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          enum:\n          - created_at\n          - updated_at\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllIdentityGroupsResponse'\n          description: Success\n      summary: Getting all identity groups\n      tags:\n      - Identity Groups\n  /identity_groups/{identityGroupId}:\n    get:\n      description: This method renders an identity group from given id.\n      operationId: getIdentityGroup\n      parameters:\n      - explode: false\n        in: path\n        name: identityGroupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityGroup'\n          description: Success\n      summary: Getting an identity group from its id\n      tags:\n      - Identity Groups\n    put:\n      description: |-\n        This method updates an identity group from given attributes and renders it in case of success.\n\n        Authorization​: no.\n      operationId: updateIdentityGroup\n      parameters:\n      - explode: false\n        in: path\n        name: identityGroupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Identity company.\n        explode: true\n        in: query\n        name: company\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identity custom field with key « custom_field_key ». It\n        explode: true\n        in: query\n        name: custom_field_values[custom_field_key]\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identity emails (multiple).\n        explode: true\n        in: query\n        name: emails\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Identity firstname.\n        explode: true\n        in: query\n        name: firstname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identity’s gender. It can be \"man\", \"woman\" or empty.\n        explode: true\n        in: query\n        name: gender\n        required: false\n        schema:\n          enum:\n          - man\n          - woman\n          type: string\n        style: form\n      - description: Identity home phones (mutiple).\n        explode: true\n        in: query\n        name: home_phones\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Identity lastname.\n        explode: true\n        in: query\n        name: lastname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identity mobile phones (multiple).\n        explode: true\n        in: query\n        name: mobile_phones\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Identity notes.\n        explode: true\n        in: query\n        name: notes\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identity tag ids (multiple).\n        explode: true\n        in: query\n        name: tag_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityGroup'\n          description: Success\n      summary: Updating an identity group\n      tags:\n      - Identity Groups\n  /intervention_comments:\n    get:\n      description: |-\n        This method renders interventions comments ordered by creation date (descending). Only comments in sources where token’s user has “read” permission are returned.\n\n        Authorization​: no.\n      operationId: getAllInterventionComments\n      parameters:\n      - description: To filter comments on given intervention id.\n        explode: true\n        in: query\n        name: intervention_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter comments on given thread id.\n        explode: true\n        in: query\n        name: thread_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter comments on given user id.\n        explode: true\n        in: query\n        name: user_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter comments on given identity id.\n        explode: true\n        in: query\n        name: identity_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllInterventionCommentsResponse'\n          description: Success\n      summary: Getting all intervention comments\n      tags:\n      - Intervention Comments\n    post:\n      description: This method creates a new intervention comment. In case of success\n        it renders the created comment, otherwise, it renders an error (422 HTTP code).\n        It creates comment as token’s user. If token’s user does not have “read” on\n        given intervention’s source a 404 HTTP response will be returned.\n      operationId: createInterventionComment\n      parameters:\n      - description: The comment body (mandatory).\n        explode: true\n        in: query\n        name: body\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: The comment intervention id (mandatory).\n        explode: true\n        in: query\n        name: intervention_id\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: The comment user id (mandatory).\n        explode: true\n        in: query\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InterventionComment'\n          description: Success\n      summary: Creating an intervention comment\n      tags:\n      - Intervention Comments\n  /intervention_comments/{interventionCommentId}:\n    delete:\n      description: |-\n        This method destroys an intervention comment. It renders comment itself. If token’s user does not have “read” on comment’s source a 404 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: deleteInterventionComment\n      parameters:\n      - explode: false\n        in: path\n        name: interventionCommentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InterventionComment'\n          description: Success\n      summary: Deleting an intervention comment\n      tags:\n      - Intervention Comments\n    get:\n      description: This method renders an intervention comment from given id. If token’s\n        user does not have “read” on comment’s source a 404 HTTP response will be\n        returned.\n      operationId: getInterventionComment\n      parameters:\n      - explode: false\n        in: path\n        name: interventionCommentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InterventionComment'\n          description: Success\n      summary: Getting an intervention comment from its id\n      tags:\n      - Intervention Comments\n  /interventions:\n    get:\n      description: |-\n        This method renders interventions ordered by creation date (descending). Only interventions in sources where token’s user has “read” permission are returned.\n\n        Authorization​: no.\n      operationId: getAllInterventions\n      parameters:\n      - description: To filter interventions on given thread id.\n        explode: true\n        in: query\n        name: thread_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter interventions on given user id.\n        explode: true\n        in: query\n        name: user_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter interventions on given identity_group_id. This will\n          return interventions associated to any identity in the indentity_group.\n        explode: true\n        in: query\n        name: identity_group_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter interventions on given identity_id(s). Can be a single\n          value or an array.\n        explode: true\n        in: query\n        name: identity_id\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: To change the criteria chosen to sort the interventions. The\n          value can be “created_at” or “updated_at”.\n        explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          enum:\n          - created_at\n          - updated_at\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllInterventionsResponse'\n          description: Success\n      summary: Getting all interventions\n      tags:\n      - Interventions\n    post:\n      description: |-\n        This method creates a new intervention or reopen it. In case of success it renders the intervention, otherwise, it renders an error (422 HTTP code). This method opens intervention as access token’s user.\n\n        Authorization​: no, but it renders an error if intervention can’t be created or reopened (already opened, etc.).\n      operationId: createIntervention\n      parameters:\n      - description: The content to create intervention on (mandatory).\n        explode: true\n        in: query\n        name: content_id\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllInterventionsResponse'\n          description: Success\n        422:\n          description: Unprocessable Entity\n      summary: Creating an intervention\n      tags:\n      - Interventions\n  /interventions/{interventionId}:\n    get:\n      description: |-\n        This method renders an intervention from given id. If token’s user does not have “read” on intervention’s source a 404 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: getIntervention\n      parameters:\n      - explode: false\n        in: path\n        name: interventionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Intervention'\n          description: Success\n      summary: Getting an intervention from its id\n      tags:\n      - Interventions\n  /interventions/{interventionId}/cancel:\n    delete:\n      description: |-\n        This method cancels (destroys) an intervention. It renders intervention itself. If token’s user does not have “read” on intervention’s source a 404 HTTP response will be returned.\n\n        Caveats:\n\n        * If the intervention is already being canceled, it will return a 409 error.\n        * To be able to close an intervention, it must meet the following criteria otherwise a 403 will be raised:\n          * Intervention MUST NOT already be closed\n         * Intervention MUST NOT have agent replies\n          * Access-Token agent MUST have read access on the source\n\n        Authorization​: no, but it renders an error if intervention can’t be destroyed (see caveats).\n      operationId: cancelIntervention\n      parameters:\n      - explode: false\n        in: path\n        name: interventionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Intervention'\n          description: Success\n      summary: Cancelling an intervention\n      tags:\n      - Interventions\n  /interventions/{interventionId}/close:\n    put:\n      description: |-\n        This method closes an intervention. Caveats:\n\n        * If the intervention is already being closed, it will return a 409 error.\n        * To be able to close an intervention, it must meet the following criteria otherwise a 403 will be raised:\n\n          * Intervention MUST NOT already be closed\n\n          * Intervention MUST have agent replies\n          * Access-Token agent MUST be the owner of the intervention or have the permission to edit permissions\n\n          * Access-Token agent MUST have read access on the source\n\n        Authorization​: no, but it renders an error if intervention can’t be closed (see caveats)\n      operationId: closeIntervention\n      parameters:\n      - explode: false\n        in: path\n        name: interventionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Intervention'\n          description: Success\n        409:\n          description: If the intervention is already being closed, it will return\n            a 409 error.\n      summary: Closing an intervention\n      tags:\n      - Interventions\n  /interventions/{interventionId}/reassign:\n    put:\n      description: |-\n        This method updates the user in charge of the intervention\n\n        Authorization​: Only users who can update interventions.\n      operationId: reassignIntervention\n      parameters:\n      - explode: false\n        in: path\n        name: interventionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Intervention'\n          description: Success\n      summary: Reassigning an intervention\n      tags:\n      - Interventions\n  /interventions/{interventionId}/update_categories:\n    put:\n      description: |-\n        This method updates the categories of an intervention. If token’s user does not have “read” on the intervention’s source a 404 HTTP response will be returned.\n\n        Authorization​: no.\n      operationId: categorizeIntervention\n      parameters:\n      - explode: false\n        in: path\n        name: interventionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: category_ids[]\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Intervention'\n          description: Success\n      summary: Categorizing an intervention\n      tags:\n      - Interventions\n  /locales:\n    get:\n      description: This method renders all available locales.\n      operationId: getAllLocales\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Locale'\n                type: array\n          description: List of all locales\n      summary: Getting all locales\n      tags:\n      - Locales\n  /presence_status:\n    get:\n      description: This method renders all presence statuses ordered by name (in alphabetical\n        order).\n      operationId: getAllPresenceStatus\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllPresenceStatusResponse'\n          description: Success\n      summary: Getting all presence statuses\n      tags:\n      - Presence Status\n    post:\n      description: |-\n        This method creates a presence status. In case of success it renders the presence status, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: createPresenceStatus\n      parameters:\n      - description: The name of the presence status.\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PresenceStatus'\n          description: Success\n      summary: Creating a presence status\n      tags:\n      - Presence Status\n  /presence_status/{presenceStatusId}:\n    delete:\n      description: |-\n        This method destroys an existing presence status. It renders presence status itself. It renders a 404 if id is invalid.\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: deletePresenceStatus\n      parameters:\n      - explode: false\n        in: path\n        name: presenceStatusId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PresenceStatus'\n          description: Success\n      summary: Deleting a presence status\n      tags:\n      - Presence Status\n    get:\n      description: |-\n        This method renders a presence status from given id.\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: getPresenceStatus\n      parameters:\n      - explode: false\n        in: path\n        name: presenceStatusId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PresenceStatus'\n          description: Success\n      summary: Getting a presence status from its id\n      tags:\n      - Presence Status\n    put:\n      description: |-\n        This method updates an existing presence status from given attributes and renders it in case of success.\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: updatePresenceStatus\n      parameters:\n      - explode: false\n        in: path\n        name: presenceStatusId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The name of the presence status.\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PresenceStatus'\n          description: Success\n      summary: Updating a presence status\n      tags:\n      - Presence Status\n  /reply_assistant/entries:\n    get:\n      description: |-\n        This method renders all entries ordered by creation date (ascending).\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: getAllReplyAssistantEntries\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllReplyAssistantEntriesResponse'\n          description: Success\n      summary: Getting​ a​ll​ reply assistant e​ntries\n      tags:\n      - Reply Assistant Entries\n    post:\n      description: |-\n        This method creates a reply assistant entry. In case of success it renders the entry, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: createReplyAssistantEntry\n      parameters:\n      - description: The name of the entry.\n        explode: true\n        in: query\n        name: label\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantEntry'\n          description: Success\n      summary: Creating an entry\n      tags:\n      - Reply Assistant Entries\n  /reply_assistant/entries/{replyAssistantEntryId}:\n    delete:\n      description: |-\n        This method destroys an existing entry. It renders the entry itself. It renders a 404 if id is invalid.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: deleteReplyAssistantEntry\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantEntryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantEntry'\n          description: Success\n      summary: Deleting a reply assistant entry\n      tags:\n      - Reply Assistant Entries\n    get:\n      description: |-\n        This method renders an entry from given id.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: getReplyAssistantEntry\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantEntryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantEntry'\n          description: Success\n      summary: Getting a reply assistant entry from its id\n      tags:\n      - Reply Assistant Entries\n    put:\n      description: |-\n        This method updates an existing entry from given attributes and renders it in case of success.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: updateReplyAssistantEntry\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantEntryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The name of the entry.\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'The internal/company id of the entry. This is used to match\n          Engage Digital entry’s id with the company one. Example: KB042.'\n        explode: true\n        in: query\n        name: foreign_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To restrict the entry to a set of Engage Digital categories.\n          Then, KB entries that do not match message’s categories to which you are\n          replying will not be suggested.\n        explode: true\n        in: query\n        name: category_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: entry shortcuts\n        explode: true\n        in: query\n        name: shortcuts[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Entry group id.\n        explode: true\n        in: query\n        name: entry_group_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Source ids (array)\n        explode: true\n        in: query\n        name: source_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantEntry'\n          description: Success\n      summary: Updating a reply assistant entry\n      tags:\n      - Reply Assistant Entries\n  /reply_assistant/groups:\n    get:\n      description: |-\n        This method renders all groups ordered by creation date (ascending).\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: getAllReplyAssistantGroups\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllReplyAssistantGroupsResponse'\n          description: Success\n      summary: Getting​ a​ll​ reply assistant groups\n      tags:\n      - Reply Assistant Groups\n    post:\n      description: |-\n        This method creates an entry group. In case of success it renders the group, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: createReplyAssistantGroup\n      parameters:\n      - description: The name of the group.\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: List of the reply assistant entries in this group.\n        explode: true\n        in: query\n        name: entry_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Used for autocompletion in chat.\n        explode: true\n        in: query\n        name: autocomplete\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Used to determine the order of the groups in the interface, in\n          ascending order.\n        explode: true\n        in: query\n        name: position\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantGroup'\n          description: Success\n      summary: Creating a reply assistant group\n      tags:\n      - Reply Assistant Groups\n  /reply_assistant/groups/{replyAssistantGroupId}:\n    delete:\n      description: |-\n        This method destroys an existing group. It renders the group itself. It renders a 404 if id is invalid.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: deleteReplyAssistantGroup\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantGroupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantGroup'\n          description: Success\n      summary: Deleting a reply assistant group\n      tags:\n      - Reply Assistant Groups\n    get:\n      description: |-\n        This method renders an entry group from given id.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: getReplyAssistantGroup\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantGroupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantGroup'\n          description: Success\n      summary: Getting a reply assistant group from its id\n      tags:\n      - Reply Assistant Groups\n    put:\n      description: |-\n        This method updates an existing group from given attributes and renders it in case of success.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: updateReplyAssistantGroup\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantGroupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The name of the group.\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: List of the reply assistant entries in this group.\n        explode: true\n        in: query\n        name: entry_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Used for autocompletion in chat.\n        explode: true\n        in: query\n        name: autocomplete\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Used to determine the order of the groups in the interface, in\n          ascending order.\n        explode: true\n        in: query\n        name: position\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantGroup'\n          description: Success\n      summary: Updating a reply assistant group\n      tags:\n      - Reply Assistant Groups\n  /reply_assistant/versions:\n    get:\n      description: |-\n        This method renders all reply assistant versions ordered by creation date (ascending).\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: getAllReplyAssistantVersions\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllReplyAssistantVersionsResponse'\n          description: Success\n      summary: Getting​ a​ll​ reply assistant versions\n      tags:\n      - Reply Assistant Versions\n    post:\n      description: |-\n        This method creates a reply assistant version. In case of success it renders the version, otherwise, it renders an error (422 HTTP code, 404 if the entry_id is invalid).\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: createReplyAssistantVersion\n      parameters:\n      - description: Body of the version\n        explode: true\n        in: query\n        name: body\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Reply assistant entry id (mandatory)\n        explode: true\n        in: query\n        name: entry_id\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Source ids (array)\n        explode: true\n        in: query\n        name: source_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Either “text” or “html”\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          enum:\n          - text\n          - html\n          type: string\n        style: form\n      - description: 'Language (ex: “fr”)'\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantVersion'\n          description: Success\n      summary: Creating a reply assistant version\n      tags:\n      - Reply Assistant Versions\n  /reply_assistant/versions/{replyAssistantVersionId}:\n    delete:\n      description: |-\n        This method destroys an existing version. It renders the version itself. It renders a 404 if id is invalid.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: deleteReplyAssistantVersion\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantVersionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantVersion'\n          description: Success\n      summary: Deleting a reply assistant version\n      tags:\n      - Reply Assistant Versions\n    get:\n      description: |-\n        This method renders a version from given id.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: getReplyAssistantVersion\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantVersionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantVersion'\n          description: Success\n      summary: Getting a reply assistant version from its id\n      tags:\n      - Reply Assistant Versions\n    put:\n      description: |-\n        This method updates an existing version from given attributes and renders it in case of success.\n\n        Authorization​: only users that have the right to manage reply assistant.\n      operationId: updateReplyAssistantVersion\n      parameters:\n      - explode: false\n        in: path\n        name: replyAssistantVersionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Body of the version\n        explode: true\n        in: query\n        name: body\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Reply assistant entry id.\n        explode: true\n        in: query\n        name: entry_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Source ids (array)\n        explode: true\n        in: query\n        name: source_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Either “text” or “html”\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          enum:\n          - text\n          - html\n          type: string\n        style: form\n      - description: 'Language (ex: “fr”)'\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplyAssistantVersion'\n          description: Success\n      summary: Updating a reply assistant version\n      tags:\n      - Reply Assistant Versions\n  /roles:\n    get:\n      description: This method renders roles ordered by creation date (ascending).\n      operationId: getAllRoles\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllRolesResponse'\n          description: Success\n      summary: Getting all roles\n      tags:\n      - Roles\n    post:\n      description: This method creates a new role. In case of success it renders the\n        created role, otherwise, it renders an error (422 HTTP code).\n      operationId: createRole\n      parameters:\n      - explode: true\n        in: query\n        name: label\n        required: true\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: access_help_center\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: access_previous_messages\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: access_pull_mode\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: admin_stamp_answer\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: approve_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: assign_intervention\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: author_block_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: close_content_thread\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_and_destroy_extension\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_community\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_content_source\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: delay_export_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: delete_content_thread\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: impersonate_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: invite_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_api_access_tokens\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_app_sdk_applications\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_automatic_exports_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_categories\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_chat\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_custom_fields\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_custom_notifications\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_emails_templates\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_folders\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_ice\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_identities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_own_notifications\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_reply_assistant\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_roles\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_rules_engine_rules\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_surveys\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_tags\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_teams\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_topologies\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_users_of_my_teams\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: monitor_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: monitor_team_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: mute_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: open_content_thread\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: publish_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_community\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_content_source\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_event\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_export\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_identity\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_own_stats\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_presence\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_stats\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: read_surveys\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: receive_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: reply_with_assistant\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: search_contents\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: search_event\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_community\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_content_source\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_extension\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_identity\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_intervention\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_own_intervention\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_settings\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_time_sheet\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: use_emoji\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: Success\n      summary: Creating a role\n      tags:\n      - Roles\n  /roles/{roleId}:\n    get:\n      description: |-\n        This method renders a role from given id.\n\n        Authorization​: only users that can manage roles.\n      operationId: getRole\n      parameters:\n      - explode: false\n        in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: Success\n      summary: Getting a role from its id\n      tags:\n      - Roles\n    put:\n      description: |-\n        This method updates an existing role from given attributes and renders it in case of success.\n\n        Authorization​: A user can’t update roles with more permissions than himself and can’t give a role a permission he doesn’t have.\n\n        Any permission updated with a user that does not have this permission will be ignored (The update is done, just not the unallowed permission)\n      operationId: updateRole\n      parameters:\n      - explode: false\n        in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: access_help_center\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: access_previous_messages\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: access_pull_mode\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: admin_stamp_answer\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: approve_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: assign_intervention\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: author_block_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: close_content_thread\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_and_destroy_extension\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_community\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_content_source\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: create_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: delay_export_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: delete_content_thread\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: impersonate_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: invite_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_api_access_tokens\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_app_sdk_applications\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_automatic_exports_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_categories\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_chat\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_custom_fields\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_custom_notifications\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_emails_templates\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_folders\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_ice\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_identities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_own_notifications\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_reply_assistant\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_roles\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_rules_engine_rules\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: manage_surveys\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_tags\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_teams\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_topologies\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: manage_users_of_my_teams\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: monitor_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: monitor_team_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: mute_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: open_content_thread\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: publish_content\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_community\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_content_source\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_event\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_export\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_identity\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_own_stats\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_presence\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_stats\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: read_surveys\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: read_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: receive_tasks\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: permission only available with the corresponding extension enabled\n        explode: true\n        in: query\n        name: reply_with_assistant\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: search_contents\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: search_event\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_community\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_content_source\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_extension\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_identity\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_intervention\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_own_intervention\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_settings\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_time_sheet\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: update_user\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: use_emoji\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: Success\n      summary: Updating a role\n      tags:\n      - Roles\n  /settings:\n    get:\n      description: |-\n        This method renders all settings of your domain.\n\n        Authorization​: only users that can update settings.\n      operationId: getAllSettings\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n          description: Success\n      summary: Getting all settings\n      tags:\n      - Settings\n    put:\n      description: |-\n        This method updates the current domain settings.\n\n        Authorization​: only users that can update settings.\n      operationId: updateSettings\n      parameters:\n      - description: (in hours).\n        explode: true\n        in: query\n        name: activity_presence_threshold\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: ​Enable activity tracking (Boolean)\n        explode: true\n        in: query\n        name: activity_tracking\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: (Day of week)\n        explode: true\n        in: query\n        name: beginning_of_week\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: A​ ctivate the forced categorization by source.​ (Boolean)\n        explode: true\n        in: query\n        name: category_tagging\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: (See format)\n        explode: true\n        in: query\n        name: content_languages\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Activate the dashboard (Boolean)\n        explode: true\n        in: query\n        name: dashboard\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Prevent the DD to be embed by other websites (Boolean)\n        explode: true\n        in: query\n        name: deny_iframe_integration\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: (Boolean)\n        explode: true\n        in: query\n        name: disable_password_autocomplete\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: password expiration delay (in seconds)\n        explode: true\n        in: query\n        name: expire_password_after\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: enable password expiration (Boolean)\n        explode: true\n        in: query\n        name: expire_password_enabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: provide durations in seconds in export (Boolean)\n        explode: true\n        in: query\n        name: export_in_seconds\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: fold archived contents (Boolean)\n        explode: true\n        in: query\n        name: fold_useless_contents\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: FTE data period (in hours)\n        explode: true\n        in: query\n        name: fte_duration\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: enable identity merge (Boolean)\n        explode: true\n        in: query\n        name: identity_merge\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: (Array of times in seconds)\n        explode: true\n        in: query\n        name: intervention_defer_rates[]\n        required: false\n        schema:\n          items:\n            type: integer\n          type: array\n        style: form\n      - description: (in seconds)\n        explode: true\n        in: query\n        name: intervention_defer_threshold\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: (Array of times in seconds)\n        explode: true\n        in: query\n        name: intervention_rates\n        required: false\n        schema:\n          items:\n            type: integer\n          type: array\n        style: form\n      - description: locale code (String)\n        explode: true\n        in: query\n        name: locale\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: activate multi language support for messages (Boolean)\n        explode: true\n        in: query\n        name: multi_lang\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Name of the Dimelo Digital (String)\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: prohibit reusing old passwords (Boolean)\n        explode: true\n        in: query\n        name: password_archivable_enabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: number of archived passwords\n        explode: true\n        in: query\n        name: password_archivable_size\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: minimum character length\n        explode: true\n        in: query\n        name: password_min_length\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: should contain at least 1 non alphanumeric char (Boolean)\n        explode: true\n        in: query\n        name: password_non_word\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: should contain at least 1 number (Boolean)\n        explode: true\n        in: query\n        name: password_numbers\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: disable password recovery by email (Boolean)\n        explode: true\n        in: query\n        name: password_recovery_disabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Enable push mode (Boolean)\n        explode: true\n        in: query\n        name: push_enabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Enable reply as any identity (Boolean)\n        explode: true\n        in: query\n        name: reply_as_any_identity\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Enable right to left support (Boolean)\n        explode: true\n        in: query\n        name: rtl_support\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: ​Allow authors to ask approval of their messages (Boolean)\n        explode: true\n        in: query\n        name: self_approval_required\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Session timeout (in minutes)\n        explode: true\n        in: query\n        name: session_timeout\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Enable spellchecking (Boolean)\n        explode: true\n        in: query\n        name: spellchecking\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Defines the DD’s design (String)\n        explode: true\n        in: query\n        name: style\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Disable third-party services (tracking...) (Boolean)\n        explode: true\n        in: query\n        name: third_party_services_disabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Use the timezone endpoint to get the timezone name (String)\n        explode: true\n        in: query\n        name: timezone\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Track JS errors (Boolean)\n        explode: true\n        in: query\n        name: track_js\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Can be ‘demo’, ‘production’ or ‘archived’\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - demo\n          - production\n          - archived\n          type: string\n        style: form\n      - description: Chat max response time (in seconds)\n        explode: true\n        in: query\n        name: urgent_task_threshold\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Experimental (Boolean)\n        explode: true\n        in: query\n        name: use_system_font\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n          description: Success\n      summary: Updating settings\n      tags:\n      - Settings\n  /status:\n    get:\n      description: |-\n        This method get all currently connected agents \u0026 their status.\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: getAllAgentStatus\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AgentStatus'\n                type: array\n          description: Success\n      summary: Get all connected agents status\n      tags:\n      - Agent Status\n  /status/{agentId}:\n    get:\n      description: |-\n        This method get the status of a connected agent. Returns a 404 if the user does not exist (not_found) or if he’s not connected (disconnected).\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: getAgentStatus\n      parameters:\n      - explode: false\n        in: path\n        name: agentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentStatus'\n          description: Success\n      summary: Get a connected agent status\n      tags:\n      - Agent Status\n    put:\n      description: |-\n        This method updates an agent's availability. Can be used to set either channels statuses OR custom  status. If both parameters are provided, ignores custom status.The status parameter​ **MUST** b​e either “away” or “available”.\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: changeAgentStatus\n      parameters:\n      - explode: false\n        in: path\n        name: agentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: A hash of channel_id =\u003e availability (must contain all channels).\n        explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: id of presence status (optional)\n        explode: true\n        in: query\n        name: custom_status_id\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentStatus'\n          description: Success\n      summary: Changing an agent's status\n      tags:\n      - Agent Status\n  /tags:\n    get:\n      description: This method renders tags ordered by name (ascending).\n      operationId: getAllTags\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllTagsResponse'\n          description: Success\n      summary: Getting all tags\n      tags:\n      - Tags\n    post:\n      description: This method creates a new tag. In case of success it renders the\n        created tag, otherwise, it renders an error (422 HTTP code).\n      operationId: createTag\n      parameters:\n      - description: Tag name (mandatory).\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Success\n      summary: Creating a tag\n      tags:\n      - Tags\n  /tags/{tagId}:\n    delete:\n      description: |-\n        This method destroys an existing tag. It renders tag itself. It renders a 404 if id is invalid.\n\n        Authorization​: only users that are able to destroy tags.\n      operationId: deleteTag\n      parameters:\n      - explode: false\n        in: path\n        name: tagId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Success\n      summary: Deleting a tag\n      tags:\n      - Tags\n    get:\n      description: This method renders a tag from given id.\n      operationId: getTag\n      parameters:\n      - explode: false\n        in: path\n        name: tagId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Success\n      summary: Getting a tag from its id\n      tags:\n      - Tags\n    put:\n      description: |-\n        This method updates an existing tag from given attributes and renders it in case of success.\n\n        Authorization​: only users that are able to update tags.\n      operationId: updateTag\n      parameters:\n      - explode: false\n        in: path\n        name: tagId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Tag’s label.\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Success\n      summary: Updating a tag\n      tags:\n      - Tags\n  /tasks:\n    get:\n      description: |-\n        This method renders tasks ordered by priority (highest first) and then by creation date (latest first).\n\n        Authorization​: only users that can read tasks.\n      operationId: getAllTasks\n      parameters:\n      - description: 'To filter tasks on given queue name (filters on the “global”\n          queue by default).The most commonly used queues are: “global” (contains\n          every task pending assignation), “workbin_{agent_id}” (contains every tasks\n          assigned to the {agent_id} agent, “history” (contains every processed tasks),\n          and “undelivered” (contains every undelivered tasks). If queue is set to\n          “workbins” all the tasks currently in a workbin will be returned.'\n        explode: true\n        in: query\n        name: queue\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter tasks on given channel id.\n        explode: true\n        in: query\n        name: channel_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter tasks on the step they’re currently in.\n        explode: true\n        in: query\n        name: step\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllTasksResponse'\n          description: Success\n      summary: Getting all tasks\n      tags:\n      - Tasks\n  /tasks/{taskId}:\n    get:\n      description: This method renders a task from given id.\n      operationId: getTask\n      parameters:\n      - explode: false\n        in: path\n        name: taskId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: Success\n      summary: Getting a task from its id\n      tags:\n      - Tasks\n  /tasks/{taskId}/move:\n    delete:\n      description: |-\n        This method changes a task queue and renders it in case of success. Only accepts “undelivered” and special queue defined in topology (e.g. triage).\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: moveTask\n      parameters:\n      - explode: false\n        in: path\n        name: taskId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Name of the queue task has to be moved in.\n        explode: true\n        in: query\n        name: queue\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: Success\n      summary: Move a task to another queue\n      tags:\n      - Tasks\n  /tasks/{taskId}/transfer:\n    put:\n      description: |-\n        This method transfers an existing task and renders it in case of success.\n\n        Authorization​: only users that have the right to monitor the task view.\n      operationId: transferTask\n      parameters:\n      - explode: false\n        in: path\n        name: taskId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: List of agents to transfer the task to (multiple).\n        explode: true\n        in: query\n        name: agent_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Force the transfer to the first agent in agent_ids if set. When\n          bypass is used,\n        explode: true\n        in: query\n        name: bypass\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Filter agents receiving the task depending on their categories.\n        explode: true\n        in: query\n        name: category_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Filter agents receiving the task depending on their spoken languages.\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Filter agents receiving the task depending on their teams.\n        explode: true\n        in: query\n        name: team_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Add a comment to the task.\n        explode: true\n        in: query\n        name: comment\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: Success\n      summary: Transferring a task\n      tags:\n      - Tasks\n  /teams:\n    get:\n      description: This method renders teams ordered by creation date (ascending).\n      operationId: getAllTeams\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllTeamsResponse'\n          description: Success\n      summary: Getting all teams\n      tags:\n      - Teams\n    post:\n      description: This method creates a new team. In case of success it renders the\n        created tag, otherwise, it renders an error (422 HTTP code).\n      operationId: createTeam\n      parameters:\n      - description: Team name.\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: List of user id as leaders\n        explode: true\n        in: query\n        name: leader_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: List of user id as team members.\n        explode: true\n        in: query\n        name: user_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n          description: Success\n      summary: Creating a team\n      tags:\n      - Teams\n  /teams/{teamId}:\n    delete:\n      description: This method destroys an existing team. It renders the team itself.\n        It renders a 404 if id is invalid.\n      operationId: deleteTeam\n      parameters:\n      - explode: false\n        in: path\n        name: teamId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of a category to recategorize (optional).\n        explode: true\n        in: query\n        name: take_over_category_id\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n          description: Success\n      summary: Deleting a team\n      tags:\n      - Teams\n    get:\n      description: This method renders a team from given id.\n      operationId: getTeam\n      parameters:\n      - explode: false\n        in: path\n        name: teamId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n          description: Success\n      summary: Getting a team from its id\n      tags:\n      - Teams\n    put:\n      description: This method updates an existing team from given attributes and\n        renders it in case of success.\n      operationId: updateTeam\n      parameters:\n      - explode: false\n        in: path\n        name: teamId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Team name.\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: List of user id as leaders\n        explode: true\n        in: query\n        name: leader_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: List of user id as team members.\n        explode: true\n        in: query\n        name: user_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n          description: Success\n      summary: Updating a team\n      tags:\n      - Teams\n  /time_sheets:\n    get:\n      description: This method renders time sheets ordered by active and label.\n      operationId: getAllTimeSheets\n      parameters:\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllTimeSheetsResponse'\n          description: Success\n      summary: Getting all time sheets\n      tags:\n      - Time Sheets\n    post:\n      description: |-\n        This method creates a time sheet. In case of success it renders the time sheet, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: only users that can create time sheet.\n      operationId: createTimeSheet\n      parameters:\n      - description: true or false, this field is used to enable/disable a time sheet.\n        explode: true\n        in: query\n        name: active\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: The label of the time sheet.\n        explode: true\n        in: query\n        name: label\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: An array containing id of each source using your time sheet.\n        explode: true\n        in: query\n        name: source_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: 'A string containing the first two letters of your country (example:\n          \"fr\"/\"en\"/\"es\"), useful to bootstrap default holidays following to a country.'\n        explode: true\n        in: query\n        name: holidays_region\n        required: false\n        schema:\n          enum:\n          - de\n          - es\n          - fr\n          - gb\n          - it\n          - nl\n          - us\n          type: string\n        style: form\n      - description: An array containing one or more hash of holidays, a holiday must\n          contain a name (string) and a date (string), the date must be in a valid\n          format, a valid format is a format corresponding to your domain’s locale).\n        explode: true\n        in: query\n        name: holidays\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. For example:\n          “a-b,c-d”: “a” is the beginning of the first interval of the day, “b” is\n          the ending of the first interval of the day, “c” is the beginning of the\n          second interval of the day, “d” is the ending of the second interval of\n          the day'\n        explode: true\n        in: query\n        name: monday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: tuesday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: wednesday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: thursday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: friday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: saturday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: sunday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeSheet'\n          description: Success\n      summary: Creating a time sheet\n      tags:\n      - Time Sheets\n  /time_sheets/{timeSheetId}:\n    delete:\n      description: This method destroys an existing time sheet. It renders time sheet\n        itself. It renders a 404 if id is invalid.\n      operationId: deleteTimeSheet\n      parameters:\n      - explode: false\n        in: path\n        name: timeSheetId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeSheet'\n          description: Success\n      summary: Deleting a time sheet\n      tags:\n      - Time Sheets\n    get:\n      description: |-\n        This method renders a time sheet from given id.\n\n        Authorization​: only users that can see time sheets in administration section.\n      operationId: getTimeSheet\n      parameters:\n      - explode: false\n        in: path\n        name: timeSheetId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeSheet'\n          description: Success\n      summary: Getting a time sheet from its id\n      tags:\n      - Time Sheets\n    put:\n      description: This method updates an existing team from given attributes and\n        renders it in case of success.\n      operationId: updateTimeSheet\n      parameters:\n      - explode: false\n        in: path\n        name: timeSheetId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: true or false, this field is used to enable/disable a time sheet.\n        explode: true\n        in: query\n        name: active\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: The label of the time sheet.\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: An array containing id of each source using your time sheet.\n        explode: true\n        in: query\n        name: source_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: An array containing one or more hash of holidays, a holiday must\n          contain a name (string) and a date (string), the date must be in a valid\n          format, a valid format is a format corresponding to your domain’s locale).\n        explode: true\n        in: query\n        name: holidays\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. For example:\n          “a-b,c-d”: “a” is the beginning of the first interval of the day, “b” is\n          the ending of the first interval of the day, “c” is the beginning of the\n          second interval of the day, “d” is the ending of the second interval of\n          the day'\n        explode: true\n        in: query\n        name: monday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: tuesday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: wednesday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: thursday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: friday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: saturday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: this field define the time intervals of the day (in secs). An\n          empty string means that there are no business hours on this day. See `monday_hours`\n          for the format.\n        explode: true\n        in: query\n        name: sunday_hours\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeSheet'\n          description: Success\n      summary: Updating a time sheet\n      tags:\n      - Time Sheets\n  /timezones:\n    get:\n      description: This method renders all available timezones.\n      operationId: getAllTimezones\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Timezone'\n                type: array\n          description: List of all timezones\n      summary: Getting all timezones\n      tags:\n      - Timezones\n  /users:\n    get:\n      description: |-\n        This method renders users ordered by creation date (descending).\n\n        Authorization​: only users that can view users. If the user affiliated to the token has the manage_users_of_my_teams permission, only the users belonging to at least one of the teams he’s the leader of will be returned.\n      operationId: getAllUsers\n      parameters:\n      - description: To filter users on given email.\n        explode: true\n        in: query\n        name: email\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter users on given category id.\n        explode: true\n        in: query\n        name: category_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter users on given identity id.\n        explode: true\n        in: query\n        name: identity_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter users on given external id.\n        explode: true\n        in: query\n        name: external_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter users on given role id.\n        explode: true\n        in: query\n        name: role_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: To filter users on given team id.\n        explode: true\n        in: query\n        name: team_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllUsersResponse'\n          description: Success\n      summary: Getting all users\n      tags:\n      - Users\n    post:\n      description: This method creates a new user. In case of success it renders the\n        created user, otherwise, it renders an error (422 HTTP code).\n      operationId: createUser\n      parameters:\n      - description: User list of category ids (multiple).\n        explode: true\n        in: query\n        name: category_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: User email (mandatory).\n        explode: true\n        in: query\n        name: email\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Whether the user is enabled or not (boolean).\n        explode: true\n        in: query\n        name: enabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: User external id, used for SSO.\n        explode: true\n        in: query\n        name: external_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User firstname (mandatory).\n        explode: true\n        in: query\n        name: firstname\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: User gender (\"man\" or \"woman\").\n        explode: true\n        in: query\n        name: gender\n        required: false\n        schema:\n          enum:\n          - man\n          - woman\n          type: string\n        style: form\n      - description: User list of identity ids (multiple).\n        explode: true\n        in: query\n        name: identity_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: User lastname (mandatory).\n        explode: true\n        in: query\n        name: lastname\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Language for the user interface.\n        explode: true\n        in: query\n        name: locale\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User nickname.\n        explode: true\n        in: query\n        name: nickname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User plain password (mandatory).\n        explode: true\n        in: query\n        name: password\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: User role id (mandatory).\n        explode: true\n        in: query\n        name: role_id\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: User list of team ids (multiple).\n        explode: true\n        in: query\n        name: team_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Use the timezone endpoint to get the timezone name (String),\n          default is empty for domain timezone.\n        explode: true\n        in: query\n        name: timezone\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: List of locales corresponding to the languages spoken by the\n          user (multiple).\n        explode: true\n        in: query\n        name: spoken_languages[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      summary: Creating a user\n      tags:\n      - Users\n  /users/invite:\n    post:\n      description: |-\n        This method invites a new user. In case of success it renders the created user, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: only users that can invite other users. If the user affiliated to the token has the manage_users_of_my_teams permission, the invited user will need to belong to at least one of the teams he’s the leader of. It will not be possible to assign the user to other teams.\n      operationId: inviteUser\n      parameters:\n      - description: User list of category ids (multiple).\n        explode: true\n        in: query\n        name: category_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: User email (mandatory).\n        explode: true\n        in: query\n        name: email\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Whether the user is enabled or not (boolean).\n        explode: true\n        in: query\n        name: enabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: User external id.\n        explode: true\n        in: query\n        name: external_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User firstname (mandatory).\n        explode: true\n        in: query\n        name: firstname\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: User gender (\"man\" or \"woman\").\n        explode: true\n        in: query\n        name: gender\n        required: false\n        schema:\n          enum:\n          - man\n          - woman\n          type: string\n        style: form\n      - description: User list of identity ids (multiple).\n        explode: true\n        in: query\n        name: identity_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: User lastname (mandatory).\n        explode: true\n        in: query\n        name: lastname\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Language for the user interface.\n        explode: true\n        in: query\n        name: locale\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User nickname.\n        explode: true\n        in: query\n        name: nickname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User role id (mandatory).\n        explode: true\n        in: query\n        name: role_id\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: User list of team ids (multiple).\n        explode: true\n        in: query\n        name: team_ids\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Use the timezone endpoint to get the timezone name (String),\n          default is empty for\n        explode: true\n        in: query\n        name: timezone\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: List of locales corresponding to the languages spoken by the\n          user (multiple).\n        explode: true\n        in: query\n        name: spoken_languages\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n        422:\n          description: Unprocessable Entity\n      summary: Inviting a user\n      tags:\n      - Users\n  /users/{userId}:\n    delete:\n      description: |-\n        This method deletes the given user. In case of success it renders the deleted user, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: only users that can update users. The user affiliated to the token must have at least all the permissions of the other user. If the user affiliated to the token has the manage_users_of_my_teams permission, the deleted user will need to belong to at least one of the teams he’s the leader of.\n      operationId: deleteUser\n      parameters:\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      summary: Deleting a user\n      tags:\n      - Users\n    get:\n      description: This method renders a user from given id.\n      operationId: getUser\n      parameters:\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      summary: Getting a user from its id\n      tags:\n      - Users\n    put:\n      description: |-\n        This method updates users from given attributes and renders it in case of success.\n\n        Authorization​: only users that can update users. If the user affiliated to the token has the `manage_users_of_my_teams` permission, the updated user will need to belong to at least one of the teams he’s the leader of. The teams the user affiliated to the token is the leader of will be the only ones which can be added or removed.\n      operationId: updateUser\n      parameters:\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: User list of category ids (multiple).\n        explode: true\n        in: query\n        name: category_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: User email.\n        explode: true\n        in: query\n        name: email\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Whether the user is enabled or not (boolean).\n        explode: true\n        in: query\n        name: enabled\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: User external id, used for SSO.\n        explode: true\n        in: query\n        name: external_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User firstname.\n        explode: true\n        in: query\n        name: firstname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User gender (\"man\" or \"woman\").\n        explode: true\n        in: query\n        name: gender\n        required: false\n        schema:\n          enum:\n          - man\n          - woman\n          type: string\n        style: form\n      - description: User list of identity ids (multiple).\n        explode: true\n        in: query\n        name: identity_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: User lastname.\n        explode: true\n        in: query\n        name: lastname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Language for the user interface.\n        explode: true\n        in: query\n        name: locale\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User nickname.\n        explode: true\n        in: query\n        name: nickname\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User plain password.\n        explode: true\n        in: query\n        name: password\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User role id.\n        explode: true\n        in: query\n        name: role_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: User list of team ids (multiple).\n        explode: true\n        in: query\n        name: team_ids[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Use the timezone endpoint to get the timezone name (String),\n          default is empty for domain timezone.\n        explode: true\n        in: query\n        name: timezone\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: List of locales corresponding to the languages spoken by the\n          user (multiple).\n        explode: true\n        in: query\n        name: spoken_languages[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      summary: Updating a user\n      tags:\n      - Users\n  /webhooks:\n    get:\n      description: |-\n        This method renders webhooks ordered by active and staging_use (descending).\n\n        Authorization​: users having manage_api_access_tokens permission can see all webhooks / users don’t having the manage_api_access_tokens permission can see only the webhooks belonging to access token created by them.\n      operationId: getAllWebhooks\n      parameters:\n      - description: Access token.\n        explode: true\n        in: query\n        name: access_token\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: The record index to start. Default value is 0.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: The max number of records to return. Default value is 30, max\n          value is 150.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllWebhooksResponse'\n          description: Success\n      summary: Getting all webhooks\n      tags:\n      - Webhooks\n    post:\n      description: |-\n        This method creates a webhook. In case of success it renders the webhook, otherwise, it renders an error (422 HTTP code).\n\n        Authorization​: All users having the manage_api_access_tokens permission or all users having an api access token.\n      operationId: createWebhook\n      parameters:\n      - description: Access token.\n        explode: true\n        in: query\n        name: access_token\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: true or false, this field is used to enable/disable a webhook.\n        explode: true\n        in: query\n        name: active\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: The label of the webhook.\n        explode: true\n        in: query\n        name: label\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: true or false, this field is used to determine if a webhook will\n          be run in staging\n        explode: true\n        in: query\n        name: staging_use\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: The url of a webhook. This is used to determine the endpoint\n          of your webhook, where\n        explode: true\n        in: query\n        name: url\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: The token used in your webhook.\n        explode: true\n        in: query\n        name: verify_token\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The secret key that will be served as a ​`X-Dimelo-Secret​` header\n          in every request.\n        explode: true\n        in: query\n        name: secret\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: An array containing all the events that your webhook wants to\n          subscribe.\n        explode: true\n        in: query\n        name: registered_events[]\n        required: true\n        schema:\n          items:\n            enum:\n            - api_access_token.created\n            - api_access_token.destroyed\n            - api_access_token.updated\n            - automatic_exports_task.created\n            - automatic_exports_task.destroyed\n            - automatic_exports_task.failed\n            - automatic_exports_task.succeed\n            - automatic_exports_task.updated\n            - category.created\n            - category.destroyed\n            - category.updated\n            - community.created\n            - community.destroyed\n            - community.updated\n            - content.admin_stamped\n            - content.approved\n            - content.author_blocked\n            - content.author_stamped\n            - content.author_unblocked\n            - content.auto_categorization_infirmed\n            - content.auto_categorization_not_precise\n            - content.auto_categorized\n            - content.auto_ignored\n            - content.categorized\n            - content.destroyed\n            - content.discussion_initiated\n            - content.discussion_planned\n            - content.ice_nth_content_ignored\n            - content.ignored\n            - content.imported\n            - content.liked\n            - content.moderated_ban\n            - content.moderated_modif\n            - content.moderated_nok\n            - content.moderated_ok\n            - content.planned_discussion_synchronized\n            - content.published\n            - content.recategorized\n            - content.replied\n            - content.reply_assistant_used\n            - content.retried_synchronization\n            - content.retweeted\n            - content.source_changed\n            - content.stared\n            - content.thread_closed\n            - content.thread_opened\n            - content.unliked\n            - content.unpublished\n            - content.unstamped\n            - content.unstared\n            - content.updated\n            - content_source.created\n            - content_source.destroyed\n            - content_source.updated\n            - content_thread.categorized\n            - content_thread.destroyed\n            - content_thread.recategorized\n            - custom_field.created\n            - custom_field.destroyed\n            - custom_field.updated\n            - expired_data_purge.deleted\n            - extension.created\n            - extension.destroyed\n            - extension.updated\n            - folder.created\n            - folder.destroyed\n            - folder.updated\n            - identity.followed\n            - identity.unfollowed\n            - identity.updated\n            - intervention.assigned\n            - intervention.canceled\n            - intervention.closed\n            - intervention.deferred\n            - intervention.opened\n            - intervention.recategorized\n            - intervention.reopened\n            - intervention.updated\n            - intervention.user_updated\n            - intervention_comment.created\n            - intervention_comment.destroyed\n            - reply_assistant_knowledge_base_entry.created\n            - reply_assistant_knowledge_base_entry.destroyed\n            - reply_assistant_knowledge_base_entry.updated\n            - reply_assistant_knowledge_base_version.created\n            - reply_assistant_knowledge_base_version.destroyed\n            - reply_assistant_knowledge_base_version.updated\n            - reply_assistant_sentence_entry.created\n            - reply_assistant_sentence_entry.destroyed\n            - reply_assistant_sentence_entry.updated\n            - reply_assistant_sentence_version.created\n            - reply_assistant_sentence_version.destroyed\n            - reply_assistant_sentence_version.updated\n            - reply_assistant_version_permalink.created\n            - reply_assistant_version_permalink.destroyed\n            - reply_assistant_version_permalink.updated\n            - role.created\n            - role.destroyed\n            - role.updated\n            - security.updated\n            - session.created\n            - session.destroyed\n            - settings.updated\n            - survey.created\n            - survey.destroyed\n            - survey.updated\n            - tag.created\n            - tag.destroyed\n            - tag.updated\n            - team.created\n            - team.destroyed\n            - team.updated\n            - user.created\n            - user.destroyed\n            - user.disconnected\n            - user.impersonated\n            - user.invited\n            - user.notifications_updated\n            - user.updated\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: Success\n      summary: Creating a webhook\n      tags:\n      - Webhooks\n  /webhooks/{webhookId}:\n    delete:\n      description: |-\n        This method destroys an existing webhook. It renders webhook itself. It renders a 404 if id is invalid.\n\n        Authorization​: All users having the manage_api_access_tokens permission or all users having an api access token belonging to the webhook you’re deleting.\n      operationId: deleteWebhook\n      parameters:\n      - explode: false\n        in: path\n        name: webhookId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Access token.\n        explode: true\n        in: query\n        name: access_token\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: Success\n      summary: Deleting a webhook\n      tags:\n      - Webhooks\n    get:\n      description: |-\n        This method renders a webhook from given id.\n\n        Authorization​: users having manage_api_access_tokens permission can see any webhook / users don’t having the `manage_api_access_tokens` permission can see only the webhook in case the webhook is associated to an access token created by them.\n      operationId: getWebhook\n      parameters:\n      - explode: false\n        in: path\n        name: webhookId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Access token.\n        explode: true\n        in: query\n        name: access_token\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: Success\n      summary: Getting a webhook from its id\n      tags:\n      - Webhooks\n    put:\n      description: |-\n        This method updates an existing webhook from given attributes and renders it in case of success.\n\n        Authorization​: All users having the manage_api_access_tokens permission or all users having an api access token belonging to the webhook you’re updating.\n      operationId: updateWebhook\n      parameters:\n      - explode: false\n        in: path\n        name: webhookId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Access token.\n        explode: true\n        in: query\n        name: access_token\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: true or false, this field is used to enable/disable a webhook.\n        explode: true\n        in: query\n        name: active\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: The label of the webhook.\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: true or false, this field is used to determine if a webhook will\n          be run in staging\n        explode: true\n        in: query\n        name: staging_use\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: The url of a webhook. This is used to determine the endpoint\n          of your webhook, where\n        explode: true\n        in: query\n        name: url\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The token used in your webhook.\n        explode: true\n        in: query\n        name: verify_token\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The secret key that will be served as a ​`X-Dimelo-Secret​` header\n          in every request.\n        explode: true\n        in: query\n        name: secret\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: An array containing all the events that your webhook wants to\n          subscribe.\n        explode: true\n        in: query\n        name: registered_events[]\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: Success\n      summary: Updating a webhook\n      tags:\n      - Webhooks\ncomponents:\n  schemas:\n    AgentCustomStatus:\n      description: |-\n        The \"custom_status\" attribute represent the custom \"away\" status selected, it can either be:\n        * 1. null — ​The agent is available or in the generic \"Away\" status\n        2. { \"id\":\"5582b1f4776562af9b000008\" } — ​The id of the custom status\n      example:\n        id: id\n      properties:\n        id:\n          type: string\n    AgentStatus:\n      example:\n        agent_id: agent_id\n        channels:\n        - busyness: unoccupied\n          name: name\n          id: id\n          status: status\n        - busyness: unoccupied\n          name: name\n          id: id\n          status: status\n        custom_status:\n          id: id\n      properties:\n        agent_id:\n          type: string\n        channels:\n          items:\n            $ref: '#/components/schemas/AgentStatusChannel'\n          type: array\n        custom_status:\n          $ref: '#/components/schemas/AgentCustomStatus'\n    AgentStatusChannel:\n      example:\n        busyness: unoccupied\n        name: name\n        id: id\n        status: status\n      properties:\n        busyness:\n          enum:\n          - unoccupied\n          - ok\n          - busy\n          - full\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        status:\n          type: string\n    Attachment:\n      example:\n        foreign_id: foreign_id\n        video_metadata:\n        - video_metadata\n        - video_metadata\n        filename: filename\n        content_type: content_type\n        size: 5\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        created_at: 2000-01-23T04:56:07.000+00:00\n        embed: true\n        id: id\n        public?: true\n        url: url\n      properties:\n        content_type:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        embed:\n          type: boolean\n        filename:\n          type: string\n        foreign_id:\n          type: string\n        id:\n          type: string\n        public?:\n          type: boolean\n        size:\n          type: integer\n        updated_at:\n          format: date-time\n          type: string\n        url:\n          type: string\n        video_metadata:\n          items:\n            type: string\n          type: array\n    Category:\n      example:\n        source_ids:\n        - source_ids\n        - source_ids\n        color: 5\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        parent_id: parent_id\n        multiple: true\n        name: name\n        unselectable: true\n        created_at: 2000-01-23T04:56:07.000+00:00\n        post_qualification: true\n        id: id\n        mandatory: true\n      properties:\n        color:\n          type: integer\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        mandatory:\n          type: boolean\n        multiple:\n          type: boolean\n        name:\n          type: string\n        parent_id:\n          type: string\n        post_qualification:\n          type: boolean\n        source_ids:\n          items:\n            type: string\n          type: array\n        unselectable:\n          type: boolean\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    Channel:\n      example:\n        source_ids:\n        - source_ids\n        - source_ids\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        soft_capability: 5\n        id: id\n        label: label\n        task_timeout_seconds: 2\n        hard_capability: 5\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        hard_capability:\n          type: integer\n        id:\n          type: string\n        label:\n          type: string\n        name:\n          type: string\n        soft_capability:\n          type: integer\n        source_ids:\n          items:\n            type: string\n          type: array\n        task_timeout_seconds:\n          type: integer\n        updated_at:\n          format: date-time\n          type: string\n    Community:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        name: name\n        active: true\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n        type: type\n      properties:\n        active:\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n    Content:\n      example:\n        private_message: true\n        intervention_id: intervention_id\n        attachments:\n        - foreign_id: foreign_id\n          filename: filename\n          content_type: content_type\n          size: 5\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          created_at: 2000-01-23T04:56:07.000+00:00\n          embed: embed\n          id: id\n          public?: public?\n          url: url\n        - foreign_id: foreign_id\n          filename: filename\n          content_type: content_type\n          size: 5\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          created_at: 2000-01-23T04:56:07.000+00:00\n          embed: embed\n          id: id\n          public?: public?\n          url: url\n        in_reply_to_id: in_reply_to_id\n        created_at: 2000-01-23T04:56:07.000+00:00\n        language: language\n        body: body\n        title: title\n        type: type\n        source_url: source_url\n        synchronization_status: synchronization_status\n        thread_id: thread_id\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        body_input_format: text\n        category_ids:\n        - category_ids\n        - category_ids\n        id: id\n        remotely_deleted: true\n        approval_required: true\n        source_type: source_type\n        published: true\n        body_formatted:\n          html: html\n          text: text\n        foreign_id: foreign_id\n        context_data: '{}'\n        in_reply_to_author_id: in_reply_to_author_id\n        creator_id: creator_id\n        attachments_count: 5\n        source_id: source_id\n        author_id: author_id\n        created_from: created_from\n        status: status\n      properties:\n        approval_required:\n          type: boolean\n        attachments:\n          items:\n            $ref: '#/components/schemas/ContentAttachment'\n          type: array\n        attachments_count:\n          type: integer\n        author_id:\n          type: string\n        body:\n          type: string\n        body_formatted:\n          $ref: '#/components/schemas/ContentBodyFormatted'\n        body_input_format:\n          description: 'values can be: text or html.'\n          enum:\n          - text\n          - html\n          type: string\n        category_ids:\n          description: are content categories if none, they are default to intervention\n            categories or thread categories\n          items:\n            type: string\n          type: array\n        context_data:\n          description: is present only if the content has context_data associated.\n            The context_data hash keys are the custom fields keys.\n          type: object\n        created_at:\n          format: date-time\n          type: string\n        created_from:\n          type: string\n        creator_id:\n          type: string\n        foreign_id:\n          type: string\n        id:\n          type: string\n        in_reply_to_author_id:\n          type: string\n        in_reply_to_id:\n          type: string\n        intervention_id:\n          type: string\n        language:\n          type: string\n        private_message:\n          type: boolean\n        published:\n          type: boolean\n        remotely_deleted:\n          type: boolean\n        source_id:\n          type: string\n        source_type:\n          type: string\n        source_url:\n          type: string\n        status:\n          type: string\n        synchronization_status:\n          type: string\n        thread_id:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    ContentAttachment:\n      example:\n        foreign_id: foreign_id\n        filename: filename\n        content_type: content_type\n        size: 5\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        created_at: 2000-01-23T04:56:07.000+00:00\n        embed: embed\n        id: id\n        public?: public?\n        url: url\n      properties:\n        content_type:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        embed:\n          type: string\n        filename:\n          type: string\n        foreign_id:\n          type: string\n        id:\n          type: string\n        public?:\n          type: string\n        size:\n          type: integer\n        updated_at:\n          format: date-time\n          type: string\n        url:\n          description: 'You can download the attachments by using an API access token\n            with the following URL: https://[your-domain].engagement.dimelo.com/attachments/[attachment_id]?access_token=[your_​\n            access_token]'\n          type: string\n    ContentBodyFormatted:\n      description: always contains text a​nd​ html versions.\n      example:\n        html: html\n        text: text\n      properties:\n        html:\n          type: string\n        text:\n          type: string\n    CustomField:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        multiple: true\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n        label: label\n        position: 5\n        type: type\n        associated_type_name: associated_type_name\n        key: key\n      properties:\n        associated_type_name:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        key:\n          type: string\n        label:\n          type: string\n        multiple:\n          type: boolean\n        position:\n          type: integer\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n      - label\n    Event:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        extra_infos:\n          intervention_id: intervention_id\n          request_ip: request_ip\n          authentication_strategy: authentication_strategy\n          business/time_sheet_id: business/time_sheet_id\n          content_id: content_id\n          deletions: '{}'\n          deferred_duration: deferred_duration\n          task_id: task_id\n          closed_automatically: closed_automatically\n          content_thread_id: content_thread_id\n          foreign_id: foreign_id\n          user_id: user_id\n          content_source_id: content_source_id\n          category_ids:\n          - category_ids\n          - category_ids\n        user_id: user_id\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        extra_infos:\n          $ref: '#/components/schemas/EventExtraInfo'\n        id:\n          type: string\n        name:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        user_id:\n          type: string\n      required:\n      - id\n    EventExtraInfo:\n      description: attributes in extra_infos are optional and unspecified/not guaranteed,\n        don’t rely on it for critical tasks, this is provided as information only\n      example:\n        intervention_id: intervention_id\n        request_ip: request_ip\n        authentication_strategy: authentication_strategy\n        business/time_sheet_id: business/time_sheet_id\n        content_id: content_id\n        deletions: '{}'\n        deferred_duration: deferred_duration\n        task_id: task_id\n        closed_automatically: closed_automatically\n        content_thread_id: content_thread_id\n        foreign_id: foreign_id\n        user_id: user_id\n        content_source_id: content_source_id\n        category_ids:\n        - category_ids\n        - category_ids\n      properties:\n        authentication_strategy:\n          type: string\n        business/time_sheet_id:\n          type: string\n        category_ids:\n          items:\n            type: string\n          type: array\n        closed_automatically:\n          type: string\n        content_id:\n          type: string\n        content_source_id:\n          type: string\n        content_thread_id:\n          type: string\n        deferred_duration:\n          type: string\n        deletions:\n          type: object\n        foreign_id:\n          description: can be null\n          type: string\n        intervention_id:\n          type: string\n        request_ip:\n          type: string\n        task_id:\n          type: string\n        user_id:\n          type: string\n    Folder:\n      example:\n        render_threads_count: true\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        parent_id: parent_id\n        query: query\n        created_at: 2000-01-23T04:56:07.000+00:00\n        role_restriction:\n          only:\n          - only\n          - only\n        id: id\n        label: label\n        position: 5\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        label:\n          type: string\n        parent_id:\n          type: string\n        position:\n          type: integer\n        query:\n          type: string\n        render_threads_count:\n          type: boolean\n        role_restriction:\n          $ref: '#/components/schemas/Restriction'\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    GetAllAgentStatusResponse:\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/AgentStatus'\n          type: array\n    GetAllAttachmentsResponse:\n      example:\n        offset: 1\n        records:\n        - foreign_id: foreign_id\n          video_metadata:\n          - video_metadata\n          - video_metadata\n          filename: filename\n          content_type: content_type\n          size: 5\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          created_at: 2000-01-23T04:56:07.000+00:00\n          embed: true\n          id: id\n          public?: true\n          url: url\n        - foreign_id: foreign_id\n          video_metadata:\n          - video_metadata\n          - video_metadata\n          filename: filename\n          content_type: content_type\n          size: 5\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          created_at: 2000-01-23T04:56:07.000+00:00\n          embed: true\n          id: id\n          public?: true\n          url: url\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Attachment'\n          type: array\n    GetAllCategoriesResponse:\n      example:\n        offset: 1\n        records:\n        - source_ids:\n          - source_ids\n          - source_ids\n          color: 5\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          parent_id: parent_id\n          multiple: true\n          name: name\n          unselectable: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          post_qualification: true\n          id: id\n          mandatory: true\n        - source_ids:\n          - source_ids\n          - source_ids\n          color: 5\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          parent_id: parent_id\n          multiple: true\n          name: name\n          unselectable: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          post_qualification: true\n          id: id\n          mandatory: true\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Category'\n          type: array\n    GetAllChannelsResponse:\n      example:\n        offset: 1\n        records:\n        - source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          soft_capability: 5\n          id: id\n          label: label\n          task_timeout_seconds: 2\n          hard_capability: 5\n        - source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          soft_capability: 5\n          id: id\n          label: label\n          task_timeout_seconds: 2\n          hard_capability: 5\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Channel'\n          type: array\n    GetAllCommunitiesResponse:\n      example:\n        offset: 1\n        records:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          active: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          type: type\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          active: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          type: type\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Community'\n          type: array\n    GetAllContentsResponse:\n      example:\n        offset: 1\n        records:\n        - private_message: true\n          intervention_id: intervention_id\n          attachments:\n          - foreign_id: foreign_id\n            filename: filename\n            content_type: content_type\n            size: 5\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            embed: embed\n            id: id\n            public?: public?\n            url: url\n          - foreign_id: foreign_id\n            filename: filename\n            content_type: content_type\n            size: 5\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            embed: embed\n            id: id\n            public?: public?\n            url: url\n          in_reply_to_id: in_reply_to_id\n          created_at: 2000-01-23T04:56:07.000+00:00\n          language: language\n          body: body\n          title: title\n          type: type\n          source_url: source_url\n          synchronization_status: synchronization_status\n          thread_id: thread_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          body_input_format: text\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          remotely_deleted: true\n          approval_required: true\n          source_type: source_type\n          published: true\n          body_formatted:\n            html: html\n            text: text\n          foreign_id: foreign_id\n          context_data: '{}'\n          in_reply_to_author_id: in_reply_to_author_id\n          creator_id: creator_id\n          attachments_count: 5\n          source_id: source_id\n          author_id: author_id\n          created_from: created_from\n          status: status\n        - private_message: true\n          intervention_id: intervention_id\n          attachments:\n          - foreign_id: foreign_id\n            filename: filename\n            content_type: content_type\n            size: 5\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            embed: embed\n            id: id\n            public?: public?\n            url: url\n          - foreign_id: foreign_id\n            filename: filename\n            content_type: content_type\n            size: 5\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            embed: embed\n            id: id\n            public?: public?\n            url: url\n          in_reply_to_id: in_reply_to_id\n          created_at: 2000-01-23T04:56:07.000+00:00\n          language: language\n          body: body\n          title: title\n          type: type\n          source_url: source_url\n          synchronization_status: synchronization_status\n          thread_id: thread_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          body_input_format: text\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          remotely_deleted: true\n          approval_required: true\n          source_type: source_type\n          published: true\n          body_formatted:\n            html: html\n            text: text\n          foreign_id: foreign_id\n          context_data: '{}'\n          in_reply_to_author_id: in_reply_to_author_id\n          creator_id: creator_id\n          attachments_count: 5\n          source_id: source_id\n          author_id: author_id\n          created_from: created_from\n          status: status\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Content'\n          type: array\n    GetAllCustomFieldsResponse:\n      example:\n        offset: 1\n        records:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          multiple: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          label: label\n          position: 5\n          type: type\n          associated_type_name: associated_type_name\n          key: key\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          multiple: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          label: label\n          position: 5\n          type: type\n          associated_type_name: associated_type_name\n          key: key\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/CustomField'\n          type: array\n    GetAllEventsResponse:\n      example:\n        offset: 1\n        records:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          extra_infos:\n            intervention_id: intervention_id\n            request_ip: request_ip\n            authentication_strategy: authentication_strategy\n            business/time_sheet_id: business/time_sheet_id\n            content_id: content_id\n            deletions: '{}'\n            deferred_duration: deferred_duration\n            task_id: task_id\n            closed_automatically: closed_automatically\n            content_thread_id: content_thread_id\n            foreign_id: foreign_id\n            user_id: user_id\n            content_source_id: content_source_id\n            category_ids:\n            - category_ids\n            - category_ids\n          user_id: user_id\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          extra_infos:\n            intervention_id: intervention_id\n            request_ip: request_ip\n            authentication_strategy: authentication_strategy\n            business/time_sheet_id: business/time_sheet_id\n            content_id: content_id\n            deletions: '{}'\n            deferred_duration: deferred_duration\n            task_id: task_id\n            closed_automatically: closed_automatically\n            content_thread_id: content_thread_id\n            foreign_id: foreign_id\n            user_id: user_id\n            content_source_id: content_source_id\n            category_ids:\n            - category_ids\n            - category_ids\n          user_id: user_id\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Event'\n          type: array\n    GetAllFoldersResponse:\n      example:\n        offset: 1\n        records:\n        - render_threads_count: true\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          parent_id: parent_id\n          query: query\n          created_at: 2000-01-23T04:56:07.000+00:00\n          role_restriction:\n            only:\n            - only\n            - only\n          id: id\n          label: label\n          position: 5\n        - render_threads_count: true\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          parent_id: parent_id\n          query: query\n          created_at: 2000-01-23T04:56:07.000+00:00\n          role_restriction:\n            only:\n            - only\n            - only\n          id: id\n          label: label\n          position: 5\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Folder'\n          type: array\n    GetAllIdentitiesResponse:\n      example:\n        offset: 1\n        records:\n        - home_phone: home_phone\n          firstname: firstname\n          extra_values: '{}'\n          gender: gender\n          user_ids:\n          - user_ids\n          - user_ids\n          created_at: 2000-01-23T04:56:07.000+00:00\n          display_name: display_name\n          type: type\n          uuid: uuid\n          community_url: community_url\n          lastname: lastname\n          foreign_id: foreign_id\n          community_id: community_id\n          avatar_url: avatar_url\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          mobile_phone: mobile_phone\n          identity_group_id: identity_group_id\n          company: company\n          id: id\n          screenname: screenname\n          email: email\n        - home_phone: home_phone\n          firstname: firstname\n          extra_values: '{}'\n          gender: gender\n          user_ids:\n          - user_ids\n          - user_ids\n          created_at: 2000-01-23T04:56:07.000+00:00\n          display_name: display_name\n          type: type\n          uuid: uuid\n          community_url: community_url\n          lastname: lastname\n          foreign_id: foreign_id\n          community_id: community_id\n          avatar_url: avatar_url\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          mobile_phone: mobile_phone\n          identity_group_id: identity_group_id\n          company: company\n          id: id\n          screenname: screenname\n          email: email\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Identity'\n          type: array\n    GetAllIdentityGroupsResponse:\n      example:\n        offset: 1\n        records:\n        - firstname: firstname\n          tag_ids:\n          - tag_ids\n          - tag_ids\n          notes: notes\n          gender: gender\n          identity_ids:\n          - identity_ids\n          - identity_ids\n          created_at: 2000-01-23T04:56:07.000+00:00\n          mobile_phones:\n          - mobile_phones\n          - mobile_phones\n          lastname: lastname\n          emails:\n          - emails\n          - emails\n          home_phones:\n          - home_phones\n          - home_phones\n          avatar_url: avatar_url\n          custom_field_values: '{}'\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          company: company\n          id: id\n        - firstname: firstname\n          tag_ids:\n          - tag_ids\n          - tag_ids\n          notes: notes\n          gender: gender\n          identity_ids:\n          - identity_ids\n          - identity_ids\n          created_at: 2000-01-23T04:56:07.000+00:00\n          mobile_phones:\n          - mobile_phones\n          - mobile_phones\n          lastname: lastname\n          emails:\n          - emails\n          - emails\n          home_phones:\n          - home_phones\n          - home_phones\n          avatar_url: avatar_url\n          custom_field_values: '{}'\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          company: company\n          id: id\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/IdentityGroup'\n          type: array\n    GetAllInterventionCommentsResponse:\n      example:\n        offset: 1\n        records:\n        - intervention_id: intervention_id\n          thread_id: thread_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          user_id: user_id\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          body: body\n          videntity_id: videntity_id\n        - intervention_id: intervention_id\n          thread_id: thread_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          user_id: user_id\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          body: body\n          videntity_id: videntity_id\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/InterventionComment'\n          type: array\n    GetAllInterventionsResponse:\n      example:\n        offset: 1\n        records:\n        - closed_at: 2000-01-23T04:56:07.000+00:00\n          deferred_at: 2000-01-23T04:56:07.000+00:00\n          content_id: content_id\n          identity_id: identity_id\n          custom_fields: '{}'\n          created_at: 2000-01-23T04:56:07.000+00:00\n          first_user_reply_in_bh: 2\n          last_user_reply_in_bh: 9\n          thread_id: thread_id\n          first_user_reply_id: first_user_reply_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          last_user_reply_in: 7\n          user_id: user_id\n          comments_count: 5\n          user_replies_count: 3\n          closed: true\n          first_user_reply_in: 5\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          source_id: source_id\n          user_reply_in_average_count: 7\n          user_reply_in_average: 2\n          status: status\n          user_reply_in_average_bh: 4\n        - closed_at: 2000-01-23T04:56:07.000+00:00\n          deferred_at: 2000-01-23T04:56:07.000+00:00\n          content_id: content_id\n          identity_id: identity_id\n          custom_fields: '{}'\n          created_at: 2000-01-23T04:56:07.000+00:00\n          first_user_reply_in_bh: 2\n          last_user_reply_in_bh: 9\n          thread_id: thread_id\n          first_user_reply_id: first_user_reply_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          last_user_reply_in: 7\n          user_id: user_id\n          comments_count: 5\n          user_replies_count: 3\n          closed: true\n          first_user_reply_in: 5\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          source_id: source_id\n          user_reply_in_average_count: 7\n          user_reply_in_average: 2\n          status: status\n          user_reply_in_average_bh: 4\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Intervention'\n          type: array\n    GetAllPresenceStatusResponse:\n      example:\n        offset: 1\n        records:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/PresenceStatus'\n          type: array\n    GetAllReplyAssistantEntriesResponse:\n      example:\n        offset: 1\n        records:\n        - foreign_id: foreign_id\n          source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          entry_group_id: entry_group_id\n          version_ids:\n          - version_ids\n          - version_ids\n          shortcuts: shortcuts\n          created_at: 2000-01-23T04:56:07.000+00:00\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          label: label\n        - foreign_id: foreign_id\n          source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          entry_group_id: entry_group_id\n          version_ids:\n          - version_ids\n          - version_ids\n          shortcuts: shortcuts\n          created_at: 2000-01-23T04:56:07.000+00:00\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          label: label\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/ReplyAssistantEntry'\n          type: array\n    GetAllReplyAssistantGroupsResponse:\n      example:\n        offset: 1\n        records:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          autocomplete: true\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          entry_ids:\n          - entry_ids\n          - entry_ids\n          id: id\n          position: 5\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          autocomplete: true\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          entry_ids:\n          - entry_ids\n          - entry_ids\n          id: id\n          position: 5\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/ReplyAssistantGroup'\n          type: array\n    GetAllReplyAssistantVersionsResponse:\n      example:\n        offset: 1\n        records:\n        - source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          format: text\n          created_at: 2000-01-23T04:56:07.000+00:00\n          language: language\n          attachments_count: 5\n          id: id\n          body: body\n          entry_id: entry_id\n        - source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          format: text\n          created_at: 2000-01-23T04:56:07.000+00:00\n          language: language\n          attachments_count: 5\n          id: id\n          body: body\n          entry_id: entry_id\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/ReplyAssistantVersion'\n          type: array\n    GetAllRolesResponse:\n      example:\n        offset: 1\n        records:\n        - manage_ice: true\n          update_own_intervention: true\n          author_block_content: true\n          update_settings: true\n          receive_tasks: true\n          manage_reply_assistant: true\n          access_previous_messages: true\n          update_time_sheet: true\n          read_presence: true\n          search_event: true\n          manage_folders: true\n          id: id\n          publish_content: true\n          manage_custom_fields: true\n          manage_topologies: true\n          manage_chat: true\n          invite_user: true\n          read_community: true\n          update_extension: true\n          anonymize_identity: true\n          manage_emails_templates: true\n          export_identity: true\n          update_content_source: true\n          delay_export_content: true\n          read_stats: true\n          use_emoji: true\n          manage_roles: true\n          manage_own_notifications: true\n          read_export: true\n          open_content_thread: true\n          monitor_team_tasks: true\n          manage_teams: true\n          manage_api_access_tokens: true\n          create_user: true\n          manage_custom_notifications: true\n          update_identity: true\n          update_community: true\n          update_intervention: true\n          reply_with_assistant: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          read_content_source: true\n          use_cobrowsing: true\n          impersonate_user: true\n          manage_identities: true\n          read_identity: true\n          update_user: true\n          manage_app_sdk_applications: true\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          access_pull_mode: true\n          create_content_source: true\n          admin_stamp_answer: true\n          approve_content: true\n          delete_content_thread: true\n          mute_content: true\n          create_community: true\n          monitor_tasks: true\n          read_event: true\n          manage_tags: true\n          label: label\n          manage_categories: true\n          manage_users_of_my_teams: true\n          lock_identity: true\n          create_and_destroy_extension: true\n          close_content_thread: true\n          read_own_stats: true\n          read_user: true\n          access_help_center: true\n          manage_messaging: true\n          manage_rules_engine_rules: true\n          assign_intervention: true\n          search_contents: true\n        - manage_ice: true\n          update_own_intervention: true\n          author_block_content: true\n          update_settings: true\n          receive_tasks: true\n          manage_reply_assistant: true\n          access_previous_messages: true\n          update_time_sheet: true\n          read_presence: true\n          search_event: true\n          manage_folders: true\n          id: id\n          publish_content: true\n          manage_custom_fields: true\n          manage_topologies: true\n          manage_chat: true\n          invite_user: true\n          read_community: true\n          update_extension: true\n          anonymize_identity: true\n          manage_emails_templates: true\n          export_identity: true\n          update_content_source: true\n          delay_export_content: true\n          read_stats: true\n          use_emoji: true\n          manage_roles: true\n          manage_own_notifications: true\n          read_export: true\n          open_content_thread: true\n          monitor_team_tasks: true\n          manage_teams: true\n          manage_api_access_tokens: true\n          create_user: true\n          manage_custom_notifications: true\n          update_identity: true\n          update_community: true\n          update_intervention: true\n          reply_with_assistant: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          read_content_source: true\n          use_cobrowsing: true\n          impersonate_user: true\n          manage_identities: true\n          read_identity: true\n          update_user: true\n          manage_app_sdk_applications: true\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          access_pull_mode: true\n          create_content_source: true\n          admin_stamp_answer: true\n          approve_content: true\n          delete_content_thread: true\n          mute_content: true\n          create_community: true\n          monitor_tasks: true\n          read_event: true\n          manage_tags: true\n          label: label\n          manage_categories: true\n          manage_users_of_my_teams: true\n          lock_identity: true\n          create_and_destroy_extension: true\n          close_content_thread: true\n          read_own_stats: true\n          read_user: true\n          access_help_center: true\n          manage_messaging: true\n          manage_rules_engine_rules: true\n          assign_intervention: true\n          search_contents: true\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Role'\n          type: array\n    GetAllSourcesResponse:\n      example:\n        offset: 1\n        records:\n        - error_message: error_message\n          sla_response: 7\n          default_category_ids:\n          - default_category_ids\n          - default_category_ids\n          color: 5\n          default_content_language: default_content_language\n          sla_expired_strategy: max\n          active: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          content_archiving: true\n          content_languages:\n          - content_languages\n          - content_languages\n          type: type\n          auto_detect_content_language: true\n          content_archiving_period: 5\n          intervention_messages_boost: 2\n          community_id: community_id\n          time_sheet_ids:\n          - time_sheet_ids\n          - time_sheet_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          transferred_tasks_boost: 9\n          name: name\n          id: id\n          channel_id: channel_id\n          user_thread_default_category_ids:\n          - user_thread_default_category_ids\n          - user_thread_default_category_ids\n          hidden_from_stats: true\n          status: status\n        - error_message: error_message\n          sla_response: 7\n          default_category_ids:\n          - default_category_ids\n          - default_category_ids\n          color: 5\n          default_content_language: default_content_language\n          sla_expired_strategy: max\n          active: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          content_archiving: true\n          content_languages:\n          - content_languages\n          - content_languages\n          type: type\n          auto_detect_content_language: true\n          content_archiving_period: 5\n          intervention_messages_boost: 2\n          community_id: community_id\n          time_sheet_ids:\n          - time_sheet_ids\n          - time_sheet_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          transferred_tasks_boost: 9\n          name: name\n          id: id\n          channel_id: channel_id\n          user_thread_default_category_ids:\n          - user_thread_default_category_ids\n          - user_thread_default_category_ids\n          hidden_from_stats: true\n          status: status\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Source'\n          type: array\n    GetAllTagsResponse:\n      example:\n        offset: 1\n        records:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n    GetAllTasksResponse:\n      example:\n        offset: 1\n        records:\n        - intervention_id: intervention_id\n          content_id: content_id\n          created_at: 2000-01-23T04:56:07.000+00:00\n          transfered_at: 2000-01-23T04:56:07.000+00:00\n          priority: 5\n          accepted_at: 2000-01-23T04:56:07.000+00:00\n          completed_at: 2000-01-23T04:56:07.000+00:00\n          thread_id: thread_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          locked_at: 2000-01-23T04:56:07.000+00:00\n          expire_at: 2000-01-23T04:56:07.000+00:00\n          step: step\n          id: id\n          channel_id: channel_id\n          agent_ids:\n          - agent_ids\n          - agent_ids\n        - intervention_id: intervention_id\n          content_id: content_id\n          created_at: 2000-01-23T04:56:07.000+00:00\n          transfered_at: 2000-01-23T04:56:07.000+00:00\n          priority: 5\n          accepted_at: 2000-01-23T04:56:07.000+00:00\n          completed_at: 2000-01-23T04:56:07.000+00:00\n          thread_id: thread_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          locked_at: 2000-01-23T04:56:07.000+00:00\n          expire_at: 2000-01-23T04:56:07.000+00:00\n          step: step\n          id: id\n          channel_id: channel_id\n          agent_ids:\n          - agent_ids\n          - agent_ids\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Task'\n          type: array\n    GetAllTeamsResponse:\n      example:\n        offset: 1\n        records:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          user_ids:\n          - user_ids\n          - user_ids\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          leader_ids:\n          - leader_ids\n          - leader_ids\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          user_ids:\n          - user_ids\n          - user_ids\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          leader_ids:\n          - leader_ids\n          - leader_ids\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Team'\n          type: array\n    GetAllThreadsResponse:\n      example:\n        offset: 1\n        records:\n        - foreign_id: foreign_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          extra_data: '{}'\n          interventions_count: 5\n          thread_category_ids:\n          - thread_category_ids\n          - thread_category_ids\n          closed: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          source_id: source_id\n          title: title\n          contents_count: 5\n        - foreign_id: foreign_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          extra_data: '{}'\n          interventions_count: 5\n          thread_category_ids:\n          - thread_category_ids\n          - thread_category_ids\n          closed: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          source_id: source_id\n          title: title\n          contents_count: 5\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Thread'\n          type: array\n    GetAllTimeSheetsResponse:\n      example:\n        offset: 1\n        records:\n        - saturday_hours: saturday_hours\n          wednesday_hours: wednesday_hours\n          thursday_hours: thursday_hours\n          monday_hours: monday_hours\n          timezone: timezone\n          friday_hours: friday_hours\n          active: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          label: label\n          sunday_hours: sunday_hours\n          tuesday_hours: tuesday_hours\n          source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          holidays[]:\n          - date: date\n            name: name\n          - date: date\n            name: name\n        - saturday_hours: saturday_hours\n          wednesday_hours: wednesday_hours\n          thursday_hours: thursday_hours\n          monday_hours: monday_hours\n          timezone: timezone\n          friday_hours: friday_hours\n          active: true\n          created_at: 2000-01-23T04:56:07.000+00:00\n          label: label\n          sunday_hours: sunday_hours\n          tuesday_hours: tuesday_hours\n          source_ids:\n          - source_ids\n          - source_ids\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n          holidays[]:\n          - date: date\n            name: name\n          - date: date\n            name: name\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/TimeSheet'\n          type: array\n    GetAllUsersResponse:\n      example:\n        offset: 1\n        records:\n        - firstname: firstname\n          gender: gender\n          identity_ids:\n          - identity_ids\n          - identity_ids\n          team_ids:\n          - team_ids\n          - team_ids\n          timezone: timezone\n          created_at: 2000-01-23T04:56:07.000+00:00\n          external_id: external_id\n          locale: locale\n          enabled: true\n          invitation_pending: true\n          lastname: lastname\n          spoken_languages:\n          - spoken_languages\n          - spoken_languages\n          rc_user_id: rc_user_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          role_id: role_id\n          nickname: nickname\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          email: email\n        - firstname: firstname\n          gender: gender\n          identity_ids:\n          - identity_ids\n          - identity_ids\n          team_ids:\n          - team_ids\n          - team_ids\n          timezone: timezone\n          created_at: 2000-01-23T04:56:07.000+00:00\n          external_id: external_id\n          locale: locale\n          enabled: true\n          invitation_pending: true\n          lastname: lastname\n          spoken_languages:\n          - spoken_languages\n          - spoken_languages\n          rc_user_id: rc_user_id\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          role_id: role_id\n          nickname: nickname\n          category_ids:\n          - category_ids\n          - category_ids\n          id: id\n          email: email\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/User'\n          type: array\n    GetAllWebhooksResponse:\n      example:\n        offset: 1\n        records:\n        - registered_events:\n          - registered_events\n          - registered_events\n          staging_use: true\n          active: true\n          api_access_token:\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            id: id\n          id: id\n          verify_token: verify_token\n          url: url\n        - registered_events:\n          - registered_events\n          - registered_events\n          staging_use: true\n          active: true\n          api_access_token:\n            updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            id: id\n          id: id\n          verify_token: verify_token\n          url: url\n        count: 0\n        limit: 6\n      properties:\n        count:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int32\n          type: integer\n        records:\n          items:\n            $ref: '#/components/schemas/Webhook'\n          type: array\n    Identity:\n      example:\n        home_phone: home_phone\n        firstname: firstname\n        extra_values: '{}'\n        gender: gender\n        user_ids:\n        - user_ids\n        - user_ids\n        created_at: 2000-01-23T04:56:07.000+00:00\n        display_name: display_name\n        type: type\n        uuid: uuid\n        community_url: community_url\n        lastname: lastname\n        foreign_id: foreign_id\n        community_id: community_id\n        avatar_url: avatar_url\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        mobile_phone: mobile_phone\n        identity_group_id: identity_group_id\n        company: company\n        id: id\n        screenname: screenname\n        email: email\n      properties:\n        avatar_url:\n          type: string\n        community_id:\n          type: string\n        community_url:\n          type: string\n        company:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        display_name:\n          type: string\n        email:\n          type: string\n        extra_values:\n          type: object\n        firstname:\n          type: string\n        foreign_id:\n          type: string\n        gender:\n          type: string\n        home_phone:\n          type: string\n        id:\n          type: string\n        identity_group_id:\n          description: The identity group id references the identity group that contains\n            all informations (phone, notes, etc.). Many identities may belong to this\n            group. If the identity group id is null, it means that identity does not\n            have a group and any extra information. Please refer to identity groups\n            API for more informations.\n          type: string\n        lastname:\n          type: string\n        mobile_phone:\n          type: string\n        screenname:\n          type: string\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        user_ids:\n          items:\n            type: string\n          type: array\n        uuid:\n          type: string\n    IdentityGroup:\n      example:\n        firstname: firstname\n        tag_ids:\n        - tag_ids\n        - tag_ids\n        notes: notes\n        gender: gender\n        identity_ids:\n        - identity_ids\n        - identity_ids\n        created_at: 2000-01-23T04:56:07.000+00:00\n        mobile_phones:\n        - mobile_phones\n        - mobile_phones\n        lastname: lastname\n        emails:\n        - emails\n        - emails\n        home_phones:\n        - home_phones\n        - home_phones\n        avatar_url: avatar_url\n        custom_field_values: '{}'\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        company: company\n        id: id\n      properties:\n        avatar_url:\n          type: string\n        company:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        custom_field_values:\n          type: object\n        emails:\n          items:\n            type: string\n          type: array\n        firstname:\n          type: string\n        gender:\n          type: string\n        home_phones:\n          items:\n            type: string\n          type: array\n        id:\n          type: string\n        identity_ids:\n          items:\n            type: string\n          type: array\n        lastname:\n          type: string\n        mobile_phones:\n          items:\n            type: string\n          type: array\n        notes:\n          type: string\n        tag_ids:\n          items:\n            type: string\n          type: array\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    Intervention:\n      example:\n        closed_at: 2000-01-23T04:56:07.000+00:00\n        deferred_at: 2000-01-23T04:56:07.000+00:00\n        content_id: content_id\n        identity_id: identity_id\n        custom_fields: '{}'\n        created_at: 2000-01-23T04:56:07.000+00:00\n        first_user_reply_in_bh: 2\n        last_user_reply_in_bh: 9\n        thread_id: thread_id\n        first_user_reply_id: first_user_reply_id\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        last_user_reply_in: 7\n        user_id: user_id\n        comments_count: 5\n        user_replies_count: 3\n        closed: true\n        first_user_reply_in: 5\n        category_ids:\n        - category_ids\n        - category_ids\n        id: id\n        source_id: source_id\n        user_reply_in_average_count: 7\n        user_reply_in_average: 2\n        status: status\n        user_reply_in_average_bh: 4\n      properties:\n        category_ids:\n          items:\n            type: string\n          type: array\n        closed:\n          type: boolean\n        closed_at:\n          format: date-time\n          type: string\n        comments_count:\n          type: integer\n        content_id:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        custom_fields:\n          type: object\n        deferred_at:\n          format: date-time\n          type: string\n        first_user_reply_id:\n          type: string\n        first_user_reply_in:\n          type: integer\n        first_user_reply_in_bh:\n          type: integer\n        id:\n          type: string\n        identity_id:\n          type: string\n        last_user_reply_in:\n          type: integer\n        last_user_reply_in_bh:\n          type: integer\n        source_id:\n          type: string\n        status:\n          type: string\n        thread_id:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        user_id:\n          type: string\n        user_replies_count:\n          type: integer\n        user_reply_in_average:\n          type: integer\n        user_reply_in_average_bh:\n          type: integer\n        user_reply_in_average_count:\n          type: integer\n      required:\n      - id\n    InterventionComment:\n      example:\n        intervention_id: intervention_id\n        thread_id: thread_id\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        user_id: user_id\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n        body: body\n        videntity_id: videntity_id\n      properties:\n        body:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        intervention_id:\n          type: string\n        thread_id:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        user_id:\n          type: string\n        videntity_id:\n          type: string\n    Locale:\n      example:\n        code: code\n        name: name\n        interface: true\n      properties:\n        code:\n          type: string\n        interface:\n          type: boolean\n        name:\n          type: string\n    PresenceStatus:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n      - name\n    ReplyAssistantEntry:\n      example:\n        foreign_id: foreign_id\n        source_ids:\n        - source_ids\n        - source_ids\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        entry_group_id: entry_group_id\n        version_ids:\n        - version_ids\n        - version_ids\n        shortcuts: shortcuts\n        created_at: 2000-01-23T04:56:07.000+00:00\n        category_ids:\n        - category_ids\n        - category_ids\n        id: id\n        label: label\n      properties:\n        category_ids:\n          items:\n            type: string\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        entry_group_id:\n          type: string\n        foreign_id:\n          type: string\n        id:\n          type: string\n        label:\n          type: string\n        shortcuts:\n          type: string\n        source_ids:\n          items:\n            type: string\n          type: array\n        updated_at:\n          format: date-time\n          type: string\n        version_ids:\n          items:\n            type: string\n          type: array\n      required:\n      - id\n    ReplyAssistantGroup:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        autocomplete: true\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        entry_ids:\n        - entry_ids\n        - entry_ids\n        id: id\n        position: 5\n      properties:\n        autocomplete:\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        entry_ids:\n          items:\n            type: string\n          type: array\n        id:\n          type: string\n        name:\n          type: string\n        position:\n          type: integer\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    ReplyAssistantVersion:\n      example:\n        source_ids:\n        - source_ids\n        - source_ids\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        format: text\n        created_at: 2000-01-23T04:56:07.000+00:00\n        language: language\n        attachments_count: 5\n        id: id\n        body: body\n        entry_id: entry_id\n      properties:\n        attachments_count:\n          type: integer\n        body:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        entry_id:\n          type: string\n        format:\n          enum:\n          - text\n          - html\n          type: string\n        id:\n          type: string\n        language:\n          type: string\n        source_ids:\n          items:\n            type: string\n          type: array\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    Restriction:\n      example:\n        only:\n        - only\n        - only\n      properties:\n        only:\n          items:\n            type: string\n          type: array\n    Role:\n      example:\n        manage_ice: true\n        update_own_intervention: true\n        author_block_content: true\n        update_settings: true\n        receive_tasks: true\n        manage_reply_assistant: true\n        access_previous_messages: true\n        update_time_sheet: true\n        read_presence: true\n        search_event: true\n        manage_folders: true\n        id: id\n        publish_content: true\n        manage_custom_fields: true\n        manage_topologies: true\n        manage_chat: true\n        invite_user: true\n        read_community: true\n        update_extension: true\n        anonymize_identity: true\n        manage_emails_templates: true\n        export_identity: true\n        update_content_source: true\n        delay_export_content: true\n        read_stats: true\n        use_emoji: true\n        manage_roles: true\n        manage_own_notifications: true\n        read_export: true\n        open_content_thread: true\n        monitor_team_tasks: true\n        manage_teams: true\n        manage_api_access_tokens: true\n        create_user: true\n        manage_custom_notifications: true\n        update_identity: true\n        update_community: true\n        update_intervention: true\n        reply_with_assistant: true\n        created_at: 2000-01-23T04:56:07.000+00:00\n        read_content_source: true\n        use_cobrowsing: true\n        impersonate_user: true\n        manage_identities: true\n        read_identity: true\n        update_user: true\n        manage_app_sdk_applications: true\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        access_pull_mode: true\n        create_content_source: true\n        admin_stamp_answer: true\n        approve_content: true\n        delete_content_thread: true\n        mute_content: true\n        create_community: true\n        monitor_tasks: true\n        read_event: true\n        manage_tags: true\n        label: label\n        manage_categories: true\n        manage_users_of_my_teams: true\n        lock_identity: true\n        create_and_destroy_extension: true\n        close_content_thread: true\n        read_own_stats: true\n        read_user: true\n        access_help_center: true\n        manage_messaging: true\n        manage_rules_engine_rules: true\n        assign_intervention: true\n        search_contents: true\n      properties:\n        access_help_center:\n          type: boolean\n        access_previous_messages:\n          type: boolean\n        access_pull_mode:\n          type: boolean\n        admin_stamp_answer:\n          type: boolean\n        anonymize_identity:\n          type: boolean\n        approve_content:\n          type: boolean\n        assign_intervention:\n          type: boolean\n        author_block_content:\n          type: boolean\n        close_content_thread:\n          type: boolean\n        create_and_destroy_extension:\n          type: boolean\n        create_community:\n          type: boolean\n        create_content_source:\n          type: boolean\n        create_user:\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        delay_export_content:\n          type: boolean\n        delete_content_thread:\n          type: boolean\n        export_identity:\n          type: boolean\n        id:\n          type: string\n        impersonate_user:\n          type: boolean\n        invite_user:\n          type: boolean\n        label:\n          type: string\n        lock_identity:\n          type: boolean\n        manage_api_access_tokens:\n          type: boolean\n        manage_app_sdk_applications:\n          type: boolean\n        manage_categories:\n          type: boolean\n        manage_chat:\n          type: boolean\n        manage_custom_fields:\n          type: boolean\n        manage_custom_notifications:\n          type: boolean\n        manage_emails_templates:\n          type: boolean\n        manage_folders:\n          type: boolean\n        manage_ice:\n          type: boolean\n        manage_identities:\n          type: boolean\n        manage_messaging:\n          type: boolean\n        manage_own_notifications:\n          type: boolean\n        manage_reply_assistant:\n          type: boolean\n        manage_roles:\n          type: boolean\n        manage_rules_engine_rules:\n          type: boolean\n        manage_tags:\n          type: boolean\n        manage_teams:\n          type: boolean\n        manage_topologies:\n          type: boolean\n        manage_users_of_my_teams:\n          type: boolean\n        monitor_tasks:\n          type: boolean\n        monitor_team_tasks:\n          type: boolean\n        mute_content:\n          type: boolean\n        open_content_thread:\n          type: boolean\n        publish_content:\n          type: boolean\n        read_community:\n          type: boolean\n        read_content_source:\n          type: boolean\n        read_event:\n          type: boolean\n        read_export:\n          type: boolean\n        read_identity:\n          type: boolean\n        read_own_stats:\n          type: boolean\n        read_presence:\n          type: boolean\n        read_stats:\n          type: boolean\n        read_user:\n          type: boolean\n        receive_tasks:\n          type: boolean\n        reply_with_assistant:\n          type: boolean\n        search_contents:\n          type: boolean\n        search_event:\n          type: boolean\n        update_community:\n          type: boolean\n        update_content_source:\n          type: boolean\n        update_extension:\n          type: boolean\n        update_identity:\n          type: boolean\n        update_intervention:\n          type: boolean\n        update_own_intervention:\n          type: boolean\n        update_settings:\n          type: boolean\n        update_time_sheet:\n          type: boolean\n        update_user:\n          type: boolean\n        updated_at:\n          format: date-time\n          type: string\n        use_cobrowsing:\n          type: boolean\n        use_emoji:\n          type: boolean\n    Settings:\n      example:\n        intervention_defer_threshold: 2\n        password_non_word: true\n        multi_lang: true\n        activity_tracking: true\n        rtl_support: true\n        spellchecking: true\n        timezone: timezone\n        beginning_of_week: beginning_of_week\n        created_at: 2000-01-23T04:56:07.000+00:00\n        expire_password_after: 6\n        locale: locale\n        type: type\n        sharding_key: sharding_key\n        intervention_rates:\n        - 7\n        - 7\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        password_min_length: 3\n        password_numbers: true\n        intervention_defer_rates:\n        - 5\n        - 5\n        password_archivable_enabled: true\n        browser_notifications_disabled: true\n        dump_in_preprod: true\n        id: id\n        self_approval_required: true\n        use_two_letters_avatars: true\n        third_party_services_disabled: true\n        disable_password_autocomplete: true\n        deny_iframe_integration: true\n        password_recovery_disabled: true\n        urgent_task_threshold: 4\n        activity_presence_threshold: 0\n        fte_duration: 1\n        push_enabled: true\n        display_only_unknown_bbcode: true\n        identity_merge: true\n        name: name\n        content_languages[]:\n        - content_languages[]\n        - content_languages[]\n        style: style\n        reply_as_any_identity: true\n        password_archivable_size: 9\n        session_timeout: 2\n        expire_password_enabled: true\n        intervention_closing_period: 5\n      properties:\n        activity_presence_threshold:\n          type: integer\n        activity_tracking:\n          type: boolean\n        beginning_of_week:\n          type: string\n        browser_notifications_disabled:\n          type: boolean\n        content_languages[]:\n          items:\n            type: string\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        deny_iframe_integration:\n          type: boolean\n        disable_password_autocomplete:\n          type: boolean\n        display_only_unknown_bbcode:\n          type: boolean\n        dump_in_preprod:\n          type: boolean\n        expire_password_after:\n          type: integer\n        expire_password_enabled:\n          type: boolean\n        fte_duration:\n          type: integer\n        id:\n          type: string\n        identity_merge:\n          type: boolean\n        intervention_closing_period:\n          type: integer\n        intervention_defer_rates:\n          items:\n            type: integer\n          type: array\n        intervention_defer_threshold:\n          type: integer\n        intervention_rates:\n          items:\n            type: integer\n          type: array\n        locale:\n          type: string\n        multi_lang:\n          type: boolean\n        name:\n          type: string\n        password_archivable_enabled:\n          type: boolean\n        password_archivable_size:\n          type: integer\n        password_min_length:\n          type: integer\n        password_non_word:\n          type: boolean\n        password_numbers:\n          type: boolean\n        password_recovery_disabled:\n          type: boolean\n        push_enabled:\n          type: boolean\n        reply_as_any_identity:\n          type: boolean\n        rtl_support:\n          type: boolean\n        self_approval_required:\n          type: boolean\n        session_timeout:\n          type: integer\n        sharding_key:\n          type: string\n        spellchecking:\n          type: boolean\n        style:\n          type: string\n        third_party_services_disabled:\n          type: boolean\n        timezone:\n          type: string\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        urgent_task_threshold:\n          type: integer\n        use_two_letters_avatars:\n          type: boolean\n    Source:\n      example:\n        error_message: error_message\n        sla_response: 7\n        default_category_ids:\n        - default_category_ids\n        - default_category_ids\n        color: 5\n        default_content_language: default_content_language\n        sla_expired_strategy: max\n        active: true\n        created_at: 2000-01-23T04:56:07.000+00:00\n        content_archiving: true\n        content_languages:\n        - content_languages\n        - content_languages\n        type: type\n        auto_detect_content_language: true\n        content_archiving_period: 5\n        intervention_messages_boost: 2\n        community_id: community_id\n        time_sheet_ids:\n        - time_sheet_ids\n        - time_sheet_ids\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        transferred_tasks_boost: 9\n        name: name\n        id: id\n        channel_id: channel_id\n        user_thread_default_category_ids:\n        - user_thread_default_category_ids\n        - user_thread_default_category_ids\n        hidden_from_stats: true\n        status: status\n      properties:\n        active:\n          description: Activate/deactivate the source\n          type: boolean\n        auto_detect_content_language:\n          description: Auto-detect content language (Boolean)\n          type: boolean\n        channel_id:\n          type: string\n        color:\n          description: 'Color of the icon: Default: 0 Blue: 1 Green: 2 Turquoise:\n            3 Purple: 4 Yellow: 5 Orange: 6 Red: 7 Asphalt: 8 Grey: 9'\n          format: int32\n          type: integer\n        community_id:\n          type: string\n        content_archiving:\n          description: Automatic archiving of old contents (Boolean)\n          type: boolean\n        content_archiving_period:\n          description: Archive contents older than (seconds)\n          format: int64\n          type: integer\n        content_languages:\n          items:\n            type: string\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        default_category_ids:\n          description: Default categories\n          items:\n            type: string\n          type: array\n        default_content_language:\n          description: Default content language\n          type: string\n        error_message:\n          type: string\n        hidden_from_stats:\n          description: Hide from statistics\n          type: boolean\n        id:\n          type: string\n        intervention_messages_boost:\n          description: Priority boost of messages with intervention\n          format: int32\n          type: integer\n        name:\n          description: Source name\n          type: string\n        sla_expired_strategy:\n          description: SLA expired strategy (\"max\", \"half\" or \"base\")\n          enum:\n          - max\n          - half\n          - base\n          type: string\n        sla_response:\n          description: Response time (seconds)\n          format: int32\n          type: integer\n        status:\n          type: string\n        time_sheet_ids:\n          items:\n            type: string\n          type: array\n        transferred_tasks_boost:\n          description: Priority boost of transferred tasks\n          format: int32\n          type: integer\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        user_thread_default_category_ids:\n          description: Default categories (agent messages)\n          items:\n            type: string\n          type: array\n    Tag:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n      - name\n    Task:\n      example:\n        intervention_id: intervention_id\n        content_id: content_id\n        created_at: 2000-01-23T04:56:07.000+00:00\n        transfered_at: 2000-01-23T04:56:07.000+00:00\n        priority: 5\n        accepted_at: 2000-01-23T04:56:07.000+00:00\n        completed_at: 2000-01-23T04:56:07.000+00:00\n        thread_id: thread_id\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        locked_at: 2000-01-23T04:56:07.000+00:00\n        expire_at: 2000-01-23T04:56:07.000+00:00\n        step: step\n        id: id\n        channel_id: channel_id\n        agent_ids:\n        - agent_ids\n        - agent_ids\n      properties:\n        accepted_at:\n          format: date-time\n          type: string\n        agent_ids:\n          items:\n            type: string\n          type: array\n        channel_id:\n          type: string\n        completed_at:\n          format: date-time\n          type: string\n        content_id:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        expire_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        intervention_id:\n          type: string\n        locked_at:\n          format: date-time\n          type: string\n        priority:\n          type: integer\n        step:\n          type: string\n        thread_id:\n          type: string\n        transfered_at:\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    Team:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        user_ids:\n        - user_ids\n        - user_ids\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n        leader_ids:\n        - leader_ids\n        - leader_ids\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        leader_ids:\n          items:\n            type: string\n          type: array\n        name:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        user_ids:\n          items:\n            type: string\n          type: array\n      required:\n      - id\n    Thread:\n      example:\n        foreign_id: foreign_id\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        extra_data: '{}'\n        interventions_count: 5\n        thread_category_ids:\n        - thread_category_ids\n        - thread_category_ids\n        closed: true\n        created_at: 2000-01-23T04:56:07.000+00:00\n        category_ids:\n        - category_ids\n        - category_ids\n        id: id\n        source_id: source_id\n        title: title\n        contents_count: 5\n      properties:\n        category_ids:\n          items:\n            type: string\n          type: array\n        closed:\n          type: boolean\n        contents_count:\n          type: integer\n        created_at:\n          format: date-time\n          type: string\n        extra_data:\n          type: object\n        foreign_id:\n          type: string\n        id:\n          type: string\n        interventions_count:\n          type: integer\n        source_id:\n          type: string\n        thread_category_ids:\n          items:\n            type: string\n          type: array\n        title:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    TimeSheet:\n      example:\n        saturday_hours: saturday_hours\n        wednesday_hours: wednesday_hours\n        thursday_hours: thursday_hours\n        monday_hours: monday_hours\n        timezone: timezone\n        friday_hours: friday_hours\n        active: true\n        created_at: 2000-01-23T04:56:07.000+00:00\n        label: label\n        sunday_hours: sunday_hours\n        tuesday_hours: tuesday_hours\n        source_ids:\n        - source_ids\n        - source_ids\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n        holidays[]:\n        - date: date\n          name: name\n        - date: date\n          name: name\n      properties:\n        active:\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        friday_hours:\n          type: string\n        holidays[]:\n          items:\n            $ref: '#/components/schemas/TimeSheetHoliday'\n          type: array\n        id:\n          type: string\n        label:\n          type: string\n        monday_hours:\n          type: string\n        saturday_hours:\n          type: string\n        source_ids:\n          items:\n            type: string\n          type: array\n        sunday_hours:\n          type: string\n        thursday_hours:\n          type: string\n        timezone:\n          type: string\n        tuesday_hours:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        wednesday_hours:\n          type: string\n      required:\n      - id\n    TimeSheetHoliday:\n      example:\n        date: date\n        name: name\n      properties:\n        date:\n          type: string\n        name:\n          type: string\n    Timezone:\n      example:\n        utc_offset: \"\"\n        name: \"\"\n      properties:\n        name:\n          format: string\n        utc_offset:\n          format: integer\n    User:\n      example:\n        firstname: firstname\n        gender: gender\n        identity_ids:\n        - identity_ids\n        - identity_ids\n        team_ids:\n        - team_ids\n        - team_ids\n        timezone: timezone\n        created_at: 2000-01-23T04:56:07.000+00:00\n        external_id: external_id\n        locale: locale\n        enabled: true\n        invitation_pending: true\n        lastname: lastname\n        spoken_languages:\n        - spoken_languages\n        - spoken_languages\n        rc_user_id: rc_user_id\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        role_id: role_id\n        nickname: nickname\n        category_ids:\n        - category_ids\n        - category_ids\n        id: id\n        email: email\n      properties:\n        category_ids:\n          items:\n            type: string\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        email:\n          type: string\n        enabled:\n          type: boolean\n        external_id:\n          type: string\n        firstname:\n          type: string\n        gender:\n          type: string\n        id:\n          type: string\n        identity_ids:\n          items:\n            type: string\n          type: array\n        invitation_pending:\n          type: boolean\n        lastname:\n          type: string\n        locale:\n          type: string\n        nickname:\n          type: string\n        rc_user_id:\n          type: string\n        role_id:\n          type: string\n        spoken_languages:\n          items:\n            type: string\n          type: array\n        team_ids:\n          items:\n            type: string\n          type: array\n        timezone:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n    Webhook:\n      example:\n        registered_events:\n        - registered_events\n        - registered_events\n        staging_use: true\n        active: true\n        api_access_token:\n          updated_at: 2000-01-23T04:56:07.000+00:00\n          created_at: 2000-01-23T04:56:07.000+00:00\n          id: id\n        id: id\n        verify_token: verify_token\n        url: url\n      properties:\n        active:\n          type: boolean\n        api_access_token:\n          $ref: '#/components/schemas/WebhookAccessToken'\n        id:\n          type: string\n        registered_events:\n          items:\n            type: string\n          type: array\n        staging_use:\n          type: boolean\n        url:\n          type: string\n        verify_token:\n          type: string\n      required:\n      - id\n    WebhookAccessToken:\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        created_at: 2000-01-23T04:56:07.000+00:00\n        id: id\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - id\n  securitySchemes:\n    bearerAuth:\n      scheme: bearer\n      type: http\n"
		}
	},
	"Error": "buildIR: make ir: path \"/attachments\": post: requestBody: contents: filter most specific: parse content type \"multipart/form-data:\": mime: unexpected content after media subtype"
}