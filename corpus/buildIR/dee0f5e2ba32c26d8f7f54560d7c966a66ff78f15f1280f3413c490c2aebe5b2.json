{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/FactSetConcordance/v2/api/openapi.yaml",
			"byteSize": 160863,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: api@factset.com\n    name: FactSet Research Systems, Inc.\n  description: |\n    The FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a \"concorded\" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.\u003cp\u003e There are two types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.\u003c/p\u003e\n  title: FactSet Concordance API\n  version: 2.0.0\nservers:\n- description: Production Server\n  url: https://api.factset.com/content\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\ntags:\n- description: Retrieve a list of Entity Matches and Candidates for up to 25 names.\n  name: Entity Match\n- description: Submit a file with a large list of entity names and attributes and\n    retrieve decisions once mapped.\n  name: Entity Match - Bulk\n- description: Create, View, and Manage Universes where mappings are saved.\n  name: Universes\n- description: View all Saved Mappings in a Universe or update and save mappings made\n    of ClientIds and Names to FactSet Entity Ids\n  name: Mappings\n- description: The response is formatted specifically for Snowflake environment and\n    not used by consumers outside of Snowflake.\n  name: Snowflake\npaths:\n  /factset-concordance/v2/entity-match:\n    get:\n      description: |\n        Finds the best candidate entities matching the given entity name. Additional attributes can be supplied to narrow the search, such as State, URL, and Entity Types. \u003cp\u003e**Max of 1 Name permitted in a single GET request.** Use the POST method for /entity-match to fetch up to 25 names. Otherwise, use the \"Entity Match - Bulk\" workflow to submit larger universes of names to be concorded via a file.\u003c/p\u003e\u003cp\u003e\n      operationId: getEntityMatch\n      parameters:\n      - description: Name of Entity to match.\n        example: FactSet\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: ISO2 country code corresponding to the entity name that is used\n          when evaluating candidates for a match. For a list of ISO2 Country codes,\n          visit [OA 8754](https://my.apps.factset.com/oa/pages/8754).\n        example: US\n        explode: true\n        in: query\n        name: country\n        required: false\n        schema:\n          maxLength: 2\n          minLength: 2\n          type: string\n        style: form\n      - description: Two-character state code corresponding to the entity name that\n          is used when evaluating candidates for a match. Currently, only US state\n          codes are supported.\n        example: CT\n        explode: true\n        in: query\n        name: state\n        required: false\n        schema:\n          maxLength: 2\n          minLength: 2\n          type: string\n        style: form\n      - description: URL corresponding to the entity name that is used when evaluating\n          candidates for a match.\n        explode: true\n        in: query\n        name: url\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas.\n            |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|\n            |---|---|---|---|\n            |ABS|Asset-Backed||MED|Broadcast Call Sign|\n            |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|\n            |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|\n            |CMD|Commodity||MUT|Mutual Fd-Open End|\n            |COL|College/University||NPO|Non-Profit Organization|\n            |CUR|Currency||OPD|Operating Division|\n            |ESP|Emp Stk Ownership Plan||OTH|Other|\n            |EXT|Extinct||PEF|Pension Fund|\n            |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|\n            |FND|Foundation/Endowment||PUB|Public Company|\n            |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|\n            |FRX|ForEx||PVT|Private Company|\n            |GOV|Government||SOV|Sovereign Wealth Fund|\n            |HED|Hedge Fund||SUB|Subsidiary|\n            |HOL|Holding Company||TRU|Trust/Trustee|\n            |IDX|Index||UMB|Umbrella Fund|\n            |VEN|Venture Capital Fund||JVT|Joint Venture|\n        explode: true\n        in: query\n        name: includeEntityType\n        required: false\n        schema:\n          items:\n            example: PUB\n            maxLength: 3\n            minLength: 3\n            type: string\n          type: array\n        style: form\n      - description: |\n          Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Candidates with an entity type specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.\n            |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|\n            |---|---|---|---|\n          |ABS|Asset-Backed||MED|Broadcast Call Sign|\n          |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|\n          |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|\n          |CMD|Commodity||MUT|Mutual Fd-Open End|\n          |COL|College/University||NPO|Non-Profit Organization|\n          |CUR|Currency||OPD|Operating Division|\n          |ESP|Emp Stk Ownership Plan||OTH|Other|\n          |EXT|Extinct||PEF|Pension Fund|\n          |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|\n          |FND|Foundation/Endowment||PUB|Public Company|\n          |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|\n          |FRX|ForEx||PVT|Private Company|\n          |GOV|Government||SOV|Sovereign Wealth Fund|\n          |HED|Hedge Fund||SUB|Subsidiary|\n          |HOL|Holding Company||TRU|Trust/Trustee|\n          |IDX|Index||UMB|Umbrella Fund|\n          |VEN|Venture Capital Fund||JVT|Joint Venture|\n        explode: true\n        in: query\n        name: excludeEntityType\n        required: false\n        schema:\n          items:\n            example: EXT\n            maxLength: 3\n            minLength: 3\n            type: string\n          type: array\n        style: form\n      - description: |\n          Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas.\n            |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|\n            |---|---|---|---|\n            |AR|Arbitrage|IC|Investment Company|\n            |BM|Bank Investment Division|IN|Insurance Company|\n            |BR|Broker|MF|Mutual Fund Manager|\n            |CP|Corporate|ML|Master Ltd Part|\n            |CU|Custodial|MM|Market Maker|\n            |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|\n            |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|\n            |FO|Foundation/Endowment Manager|PP|Real Estate Manager|\n            |FS|Fund Distributor|RE|Research Firm|\n            |FU|Fund|SB|Subsidiary Branch|\n            |FY|Family Office|ST|Stock Borrowing/Lending|\n            |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|\n            |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|\n            |IA|Investment Adviser|\n            |IB|Investment Banking|\n        explode: true\n        in: query\n        name: includeEntitySubType\n        required: false\n        schema:\n          items:\n            example: PR\n            maxLength: 2\n            minLength: 2\n            type: string\n          type: array\n        style: form\n      - description: |\n          Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will not be considered for the final match result. Multiple types can be entered separated by commas.\n          |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|\n          |---|---|---|---|\n          |AR|Arbitrage|IC|Investment Company|\n          |BM|Bank Investment Division|IN|Insurance Company|\n          |BR|Broker|MF|Mutual Fund Manager|\n          |CP|Corporate|ML|Master Ltd Part|\n          |CU|Custodial|MM|Market Maker|\n          |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|\n          |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|\n          |FO|Foundation/Endowment Manager|PP|Real Estate Manager|\n          |FS|Fund Distributor|RE|Research Firm|\n          |FU|Fund|SB|Subsidiary Branch|\n          |FY|Family Office|ST|Stock Borrowing/Lending|\n          |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|\n          |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|\n          |IA|Investment Adviser|\n          |IB|Investment Banking|\n        explode: true\n        in: query\n        name: excludeEntitySubType\n        required: false\n        schema:\n          items:\n            example: HF\n            maxLength: 2\n            minLength: 2\n            type: string\n          type: array\n        style: form\n      - description: Flag to include parent entities in the list of candidates. This\n          parameter does not influence the match result.\n        explode: true\n        in: query\n        name: includeParent\n        required: false\n        schema:\n          default: false\n          example: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              examples:\n                Entity Matches:\n                  $ref: '#/components/examples/EntityMatches'\n              schema:\n                $ref: '#/components/schemas/EntityMatchesResponse'\n          description: Response containing Entity Match results.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Get Entity Candidates and Matches for a single name and attributes.\n      tags:\n      - Entity Match\n      x-accepts: application/json\n    post:\n      description: |\n        Finds the best candidate entities matching the given entity name. If a `universeId` is provided, any match for an input including a `clientId` will be saved to that universe. Additional attributes can be supplied to narrow the search, such as State, URL, and Entity Types. Finds the best candidate entities matching the given company name. Additional attributes can be supplied to narrow the search.  \u003cp\u003e**Max of 25 Names inputted.** Use the \"Entity Match - Bulk\" workflow to submit larger universes of names to be concorded via a file.\u003c/p\u003e\u003cp\u003e Supported types of Entities in which the names can match to include -\n          * Corporations, Joint Ventures, and Holding Companies\n          * Fund Managers and various Fund Types (Open-end, Closed End, Hedge, Soverign Wealth, Pension, Exchange Traded, and more).\u003c/p\u003e\n      operationId: getEntityMatchForList\n      requestBody:\n        $ref: '#/components/requestBodies/EntityMatchRequestV2'\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              examples:\n                Entity Matches:\n                  $ref: '#/components/examples/EntityMatches'\n              schema:\n                $ref: '#/components/schemas/EntityMatchesResponse'\n          description: Response containing Entity Match results.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Get a list of Entity Candidates and Matches for a requested list of\n        up to 25 names and attributes.\n      tags:\n      - Entity Match\n      x-contentType: application/json;charset=utf-8\n      x-accepts: application/json\n  /factset-concordance/v2/entity-task:\n    post:\n      description: |\n        Upload a Comma-Separated List file (.csv / UTF-8 encoding) with a list of names and attributes and receive a `taskId`. The taskId is then used for reference in the */entity-task-status* and */entity-decisions* endpoints to receive results once the task is successful.\u003cp\u003eThis is the first step in the overall \"Bulk\" workflow. Use the /entity-task-status endpoint to check the status.\u003c/p\u003e \u003cp\u003e A universeId must be included in request. If you do not have a universe created, reference the `/universe` endpoint.\n      operationId: getEntityTaskForList\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object'\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                universeId:\n                  description: The id of the universe that entities should be mapped\n                    to. Reference the `/universe` endpoint to create a universe, or\n                    view available universes via `/universes`.\n                  example: 1\n                  type: integer\n                taskName:\n                  description: User defined name for the task that will be used to\n                    name the output files.\n                  example: test31\n                  type: string\n                inputFile:\n                  description: |\n                    The UTF-8 encoded CSV File containing the entity names to be concorded to a FactSet Entity Identifier. The files first row **MUST** include headers as defined in the *Column parameters. Be mindful of casing and spacing in column headers. The input file is posted as a file object in the form. For this reason, the mime type of this post request must be multipart/form-data.\n                  format: binary\n                  type: string\n                clientIdColumn:\n                  description: |\n                    Header Name of the column in the input file that contains a unique identifier supplied by the user referred to as a \"clientId\". This clientId can be used to create custom mappings or references.\n                  example: ClientId\n                  type: string\n                nameColumn:\n                  description: |\n                    Header name of the column in the input file that contains the Entity Name to be matched.\n                  example: NAME\n                  type: string\n                countryColumn:\n                  description: |\n                    Header Name of the column in the input file that contains the country's ISO Code. This is used to filter the candidates before taking a match decision.\n                  example: COUNTRY\n                  type: string\n                urlColumn:\n                  description: |\n                    Header Name of the column in the input file that contains the Entity's URL. URL corresponding to the entity name that is used when evaluating candidates for a match.\n                  example: URL\n                  type: string\n                stateColumn:\n                  description: |\n                    Header Name of the column in the input file that contains the two letter State Code of the state or province where the Entity is located. Currently, only US state codes are supported.\n                  example: STATE\n                  type: string\n                includeEntityType:\n                  description: |\n                    Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**\n                  items:\n                    example: PUB\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                  type: array\n                excludeEntityType:\n                  description: |\n                    Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Entities with these types will be excluded from the decisions.\n                    It is a global option used to filter the candidates before taking a match decision.\n                    Candidates with an entity type specified will *not* be considered for the final match result.\n                    **Do not include within `inputFile`.**\n                  items:\n                    example: EXT\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                  type: array\n                includeEntitySubType:\n                  description: |\n                    Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**\n                  items:\n                    example: PR\n                    maxLength: 2\n                    minLength: 2\n                    type: string\n                  type: array\n                excludeEntitySubType:\n                  description: |\n                    Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.\n                    **Do not include within `inputFile`.**\n                  items:\n                    example: IB\n                    maxLength: 2\n                    minLength: 2\n                    type: string\n                  type: array\n              required:\n              - clientIdColumn\n              - inputFile\n              - nameColumn\n              - taskName\n              - universeId\n              type: object\n        description: Entity Request object. Used to create an Entity Task.\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              examples:\n                Pending Task:\n                  $ref: '#/components/examples/PendingTask'\n              schema:\n                $ref: '#/components/schemas/EntityTaskResponse'\n          description: OK. The Entity Task creation is submitted.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Input a file with names and attributes, creating a taskId.\n      tags:\n      - Entity Match - Bulk\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /factset-concordance/v2/entity-task-status:\n    get:\n      description: |\n        Pulls the **status** for ALL the Entity Tasks submitted by a client within the last 30 days, and related details such as task duration and decision rates. Specific Tasks can also be retrieved by using the _taskId_ parameter.\u003cp\u003eStatus types include -\n          * PENDING - The task has not yet started.\n          * IN_PROGRESS - The task is submitted and decisions are in progress.\n          * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.\n          * FAILURE - The task failed. Reach out to FactSet Support for assistance.\n          * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.\n          * ABORTED - The task was aborted.\n      operationId: getEntityTaskStatus\n      parameters:\n      - description: Concordance Task Identifier. The taskId is created in response\n          from the /entity-task endpoint.\n        example: 31589\n        explode: true\n        in: query\n        name: taskId\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Starting row for records to return or rows to skip.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: Limits the number of records in the response.\n        example: 10\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: |\n          Filter on the status of the Concordance Tasks. Default is no filter.\n            * PENDING - The task has not yet started\n            * IN_PROGRESS - The task is submitted and decisions are in progress.\n            * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.\n            * FAILURE - The task failed. Reach out to FactSet Support for assistance.\n            * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.\n            * ABORTED - The task was aborted.\n        explode: false\n        in: query\n        name: status\n        required: false\n        schema:\n          items:\n            enum:\n            - PENDING\n            - IN_PROGRESS\n            - SUCCESS\n            - FAILURE\n            - BAD_REQUEST\n            - ABORTED\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              examples:\n                Successful Entity Task:\n                  $ref: '#/components/examples/SuccessfulEntityTasks'\n                Pending Task:\n                  $ref: '#/components/examples/PendingTasks'\n                Bad Task:\n                  $ref: '#/components/examples/BadTasks'\n                Failed Task:\n                  $ref: '#/components/examples/FailedTasks'\n              schema:\n                $ref: '#/components/schemas/EntityTaskStatusResponse'\n          description: Response object for Task Status endpoint.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets the status of the requested taskId or all tasks for a User\n      tags:\n      - Entity Match - Bulk\n      x-accepts: application/json\n  /factset-concordance/v2/entity-decisions:\n    get:\n      description: |\n        Retrieves the `Decision` objects for an Entity Task (taskId). The decisions do not include all candidates, but rather the results of concording the requested list of names included in the input file. Mapped entities will include a FactSet Entity Identifier (-E). Results will be saved to the `universeId` specified in the input file.\n      operationId: getEntityDecisions\n      parameters:\n      - description: Concordance Task Identifier. The taskId is created in response\n          from the /entity-task endpoint.\n        example: 31589\n        explode: true\n        in: query\n        name: taskId\n        required: true\n        schema:\n          type: integer\n        style: form\n      - description: Starting row for records to return or rows to skip.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: Limits the number of records in the response.\n        example: 10\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              examples:\n                Entity Decisions:\n                  $ref: '#/components/examples/EntityDecisions'\n              schema:\n                $ref: '#/components/schemas/EntityDecisionsResponse'\n          description: Response object for Entity Decisions endpoint.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Get the decisions of matches for the requested taskId.\n      tags:\n      - Entity Match - Bulk\n      x-accepts: application/json\n  /factset-concordance/v2/universe:\n    post:\n      description: |\n        Create a new universe that is distinct from any existing universe\n      operationId: getUniverseForList\n      requestBody:\n        $ref: '#/components/requestBodies/CreateUniverseRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UniverseMetaResponse'\n          description: Metadata on a single universe\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n        default:\n          content:\n            application/json:\n              examples:\n                Not Found:\n                  $ref: '#/components/examples/NotFound'\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Error Response\n      summary: Create a new universe\n      tags:\n      - Universes\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-concordance/v2/entity-universe:\n    get:\n      description: |\n        Retrieves all entity mappings within a requested universe.\n      operationId: getEntityUniverse\n      parameters:\n      - description: Universe identifier. *To create a universe, use the `/universe'\n          endpoint.*\n        example: 1\n        explode: true\n        in: query\n        name: universeId\n        required: true\n        schema:\n          type: integer\n        style: form\n      - description: |\n          Filter by the clientId(s) created by the user in a previous mapping.\n        example:\n        - abc-123\n        - def-456\n        explode: false\n        in: query\n        name: clientId\n        required: false\n        schema:\n          items:\n            example: EXT\n            type: string\n          type: array\n        style: form\n      - description: |\n          Filter by the Entity Decisions that have the specified mapStatus, where -\n            * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)\n            * UNMAPPED - The requested Entity Name is unmapped by FactSet.\n            * INDETERMINATE - The requested Entity Name was unable to make a mapping.\n        explode: true\n        in: query\n        name: mapStatus\n        required: false\n        schema:\n          example: MAPPED\n          items:\n            enum:\n            - MAPPED\n            - UNMAPPED\n            - INDETERMINATE\n            type: string\n          type: array\n        style: form\n      - description: Starting row for records to return or rows to skip.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: Limits the number of records in the response.\n        example: 10\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                CompanyUniverse:\n                  $ref: '#/components/examples/EntityUniverse'\n              schema:\n                $ref: '#/components/schemas/EntityUniverseResponse'\n          description: Response object for FactSet Concordance Universe detail.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Retrieve all saved mappings within a requested universe\n      tags:\n      - Mappings\n      x-accepts: application/json\n    post:\n      description: |\n        Retrieves all entity mappings that were saved in a given universe. Supports filtering by a large number of `clientId`s\n      operationId: getEntityUniverseForList\n      requestBody:\n        $ref: '#/components/requestBodies/EntityUniverseRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                CompanyUniverse:\n                  $ref: '#/components/examples/EntityUniverse'\n              schema:\n                $ref: '#/components/schemas/EntityUniverseResponse'\n          description: Response object for FactSet Concordance Universe detail.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Retrieve all saved mappings within a requested universe or large list\n        of client ids\n      tags:\n      - Mappings\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-concordance/v2/update-universe:\n    post:\n      description: |\n        Update metadata for an existing universe\n      operationId: getUpdateUniverseForList\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateUniverseRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UniverseMetaResponse'\n          description: Metadata on a single universe\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n        default:\n          content:\n            application/json:\n              examples:\n                Not Found:\n                  $ref: '#/components/examples/NotFound'\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Error Response\n      summary: Update metadata for an existing universe\n      tags:\n      - Universes\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-concordance/v2/universes:\n    get:\n      description: |\n        Fetch information on active universes for the current user. Optionally filter for a specific universe given a `universeId`\n      operationId: getUniverses\n      parameters:\n      - description: Universe identifier. *To create a universe, use the `/universe'\n          endpoint.*\n        example: 1\n        explode: true\n        in: query\n        name: universeId\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UniversesResponse'\n          description: Metadata on multiple universes\n        default:\n          content:\n            application/json:\n              examples:\n                Not Found:\n                  $ref: '#/components/examples/NotFound'\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Error Response\n      summary: Fetch metadata for universes\n      tags:\n      - Universes\n      x-accepts: application/json\n  /factset-concordance/v2/entity-universe-statistics:\n    get:\n      description: |\n        Get the total number of mappings in a universe, as well as the number of mapped, unmapped and indeterminate mappings\n      operationId: getEntityUniverseStatistics\n      parameters:\n      - description: Universe identifier. *To create a universe, use the `/universe'\n          endpoint.*\n        example: 1\n        explode: true\n        in: query\n        name: universeId\n        required: true\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityUniverseStatisticsResponse'\n          description: Response object for mapping statistics for a universe\n        default:\n          content:\n            application/json:\n              examples:\n                Not Found:\n                  $ref: '#/components/examples/NotFound'\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Error Response\n      summary: Get statistics on a given universe\n      tags:\n      - Universes\n      x-accepts: application/json\n  /factset-concordance/v2/entity-mapping:\n    post:\n      description: |\n        Saves a Concordance Mapping to the client universe. When making a post, all exiting values are overwritten in the database with the values passed in the request. clientId and clientName are required.\n      operationId: getEntityMappingForList\n      requestBody:\n        $ref: '#/components/requestBodies/EntityMappingRequestV2'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                EntityResponse:\n                  $ref: '#/components/examples/EntityResponse'\n              schema:\n                $ref: '#/components/schemas/EntityResponse'\n          description: Response object for FactSet Concordance Entity.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Saves a single-mapping specified by the client.\n      tags:\n      - Mappings\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-concordance/v2/entity-mapping-delete:\n    post:\n      description: |\n        Delete a Concordance Mapping to the client universe. When making a post, all exiting values are overwritten in the database with the values passed in the request. clientId and universeId are required.\n      operationId: getEntityMappingDeleteForList\n      requestBody:\n        $ref: '#/components/requestBodies/EntityMappingDeleteRequestV2'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityMappingDeleteResponse'\n          description: Response object for the entity-match object in a snowflake\n            friendly response model.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - forbidden:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Unsupported Media Type:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Deletes mapping specified by the client.\n      tags:\n      - Mappings\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-concordance/v2/snowflake-entity-match:\n    post:\n      description: |\n        Finds the best candidate entities matching the given company name. Additional attributes can be supplied to narrow the search. *This endpoint is used natively within Snowflake and is not to be consumed directly by users. Reach out to your FactSet Account team to learn more about Concordance in Snowflake.*\n      operationId: getSnowflakeEntityMatchForList\n      requestBody:\n        $ref: '#/components/requestBodies/SnowflakeEntityMatchRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnowflakeEntityMatchResponse'\n          description: Response object for the entity-match object in a snowflake\n            friendly response model.\n      summary: Perform an entity search and return a snowflake-friendly response.\n        Up to 25 Names per request.\n      tags:\n      - Snowflake\n      x-contentType: application/json\n      x-accepts: application/json\ncomponents:\n  examples:\n    EntityRequests:\n      description: Example of a request to find a match for a list of Companies.\n      summary: Entity Match Request\n      value:\n        input:\n        - clientId: abc-123\n          name: FactSet\n          country: US\n          state: CT\n          url: www.factset.com\n        - clientId: def-453\n          name: FactSet\n          country: DE\n        includeEntityType:\n        - SUB\n        excludeEntityType:\n        - PVT\n        includeParent: true\n    EntityMatches:\n      description: Entity Matches\n      value:\n        data:\n        - taskId: null\n          rowIndex: 0\n          matchFlag: true\n          entityId: 0016YD-E\n          entityName: FactSet Research Systems, Inc.\n          url: www.factset.com\n          mapStatus: MAPPED\n          similarityScore: 1\n          confidenceScore: 1\n          countryCode: US\n          countryName: United States\n          stateProvinceCode: CT\n          stateName: Connecticut\n          sicCode: 7374\n          entityTypeCode: PUB\n          entityTypeDescription: Public Company\n          entitySubTypeCode: CP\n          locationCity: Norwalk\n          regionName: North America\n          factsetIndustryCode: 3305\n          factsetIndustryName: Data Processing Services\n          factsetSectorCode: 3300\n          factsetSectorName: Technology Services\n          parentName: null,\n          parentMatchFlag: null\n          clientId: abc-123\n          clientName: factset\n          clientCountry: US\n          clientState: CT\n          clientUrl: www.factset.com\n          nameMatchString: factset\n          nameMatchSource: Domain Name\n    SuccessfulEntityTasks:\n      description: Example of the status of a successful Entity Concordance Task.\n      summary: Successful Entity Task\n      value:\n        data:\n        - taskId: 31\n          taskName: test\n          taskAction: processfile\n          status: SUCCESS\n          inputFile: test_427608.csv\n          clientIdColumn: id\n          nameColumn: name\n          countryColumn: country\n          stateColumn: state\n          urlColumn: url\n          includeEntityType:\n          - PUB\n          excludeEntityType: null\n          includeEntitySubType:\n          - CP\n          excludeEntitySubType: null\n          hasResult: true\n          taskSubmitTime: 2020-12-16T16:22:06Z\n          message: null\n          inputCount: 4\n          mappedCount: 3\n          unmappedCount: 1\n          indeterminateCount: 0\n          processStartTime: 2020-12-16T16:22:09Z\n          processDuration: 38.68899\n          tryCount: null\n          decisionRate: 0.75\n          error: null\n          errorTitle: null\n          userSerial: FDSQAR_C-000000\n          userFullName: Jane Smith\n          universeId: 1\n          universeName: My Universe\n    PendingTask:\n      description: Example of the status of a Task pending input file.\n      summary: Status pending input file\n      value:\n        data:\n          taskId: 31\n          taskName: test\n          taskAction: processfile\n          status: PENDING\n          inputFile: test_427608.csv\n          clientIdColumn: id\n          nameColumn: name\n          countryColumn: country\n          stateColumn: state\n          urlColumn: url\n          includeEntityType:\n          - PUB\n          excludeEntityType: null\n          includeEntitySubType:\n          - CP\n          excludeEntitySubType: null\n          hasResult: false\n          taskSubmitTime: 2020-12-16T16:22:06Z\n          message: null\n          inputCount: null\n          mappedCount: null\n          unmappedCount: null\n          indeterminateCount: null\n          processStartTime: null\n          processDuration: null\n          tryCount: null\n          decisionRate: null\n          error: null\n          errorTitle: null\n          userSerial: FDSQAR_C-000000\n          userFullName: Jane Smith\n          universeId: 1\n          universeName: My Universe\n    PendingTasks:\n      description: Example of the status of a Task pending input file.\n      summary: Status pending input file\n      value:\n        data:\n        - taskId: 31\n          taskName: test\n          taskAction: processfile\n          status: PENDING\n          inputFile: test_427608.csv\n          clientIdColumn: id\n          nameColumn: name\n          countryColumn: country\n          stateColumn: state\n          urlColumn: url\n          includeEntityType:\n          - PUB\n          excludeEntityType: null\n          includeEntitySubType:\n          - CP\n          excludeEntitySubType: null\n          hasResult: false\n          taskSubmitTime: 2020-12-16T16:22:06Z\n          message: null\n          inputCount: null\n          mappedCount: null\n          unmappedCount: null\n          indeterminateCount: null\n          processStartTime: null\n          processDuration: null\n          tryCount: null\n          decisionRate: null\n          error: null\n          errorTitle: null\n          userSerial: FDSQAR_C-000000\n          userFullName: Jane Smith\n          universeId: 1\n          universeName: My Universe\n    BadTasks:\n      description: Example of the status of a Task with a bad request.\n      summary: Status for bad request\n      value:\n        data:\n        - taskId: 31\n          taskName: test\n          taskAction: processfile\n          status: BAD_REQUEST\n          inputFile: test_427608.csv\n          clientIdColumn: id\n          nameColumn: name\n          countryColumn: country\n          stateColumn: state\n          urlColumn: url\n          includeEntityType:\n          - PUB\n          excludeEntityType: null\n          includeEntitySubType:\n          - CP\n          excludeEntitySubType: null\n          hasResult: false\n          taskSubmitTime: 2020-12-17T20:43:42Z\n          message: null\n          inputCount: null\n          mappedCount: null\n          unmappedCount: null\n          indeterminateCount: null\n          processStartTime: 2020-12-17T20:44:00Z\n          processDuration: 0\n          tryCount: null\n          decisionRate: null\n          error: The Name column \"name\", passed as parameter, does not exist in the\n            input file.\n          errorTitle: Wrong parameter\n          userSerial: FDSQAR_C-000000\n          userFullName: Jane Smith\n          universeId: 1\n          universeName: My Universe\n    FailedTasks:\n      description: Example of the status of a Task with a failed request.\n      summary: Status for failed request\n      value:\n        data:\n        - taskId: 31\n          taskName: test\n          taskAction: processfile\n          status: FAILURE\n          inputFile: test_427608.csv\n          clientIdColumn: id\n          nameColumn: name\n          countryColumn: country\n          stateColumn: state\n          urlColumn: url\n          includeEntityType:\n          - PUB\n          excludeEntityType: null\n          includeEntitySubType:\n          - CP\n          excludeEntitySubType: null\n          hasResult: false\n          taskSubmitTime: 2020-12-17T20:43:42Z\n          message: null\n          inputCount: null\n          mappedCount: null\n          unmappedCount: null\n          indeterminateCount: null\n          processStartTime: 2020-12-17T20:44:00Z\n          processDuration: 0\n          tryCount: null\n          decisionRate: null\n          error: different refererence used by concordance service\n          errorTitle: compute_candidates\n          userSerial: FDSQAR_C-000000\n          userFullName: Jane Smith\n          universeId: 1\n          universeName: My Universe\n    EntityDecisionsFile:\n      description: An Entity Concordance Task Decision File.\n      value: |\n        rowIndex,clientId,requestName,requestCountry,name,requestUrl,entityType,mapStatus,similarityScore,confidenceScore\n        0,FDS-US,FactSet,\"FactSet Research Systems, Inc.\",US,www.factset.com,PUB,MATCHED,1.0,1.0\n        1,FDS-DE,FactSet,FactSet GmbH,DE,,SUB,MATCHED,1.0,1.0\n    EntityDecisions:\n      description: Entity Decisions\n      value:\n        data:\n        - taskId: 427749\n          rowIndex: 0\n          matchFlag: null\n          entityId: 0016YD-E\n          entityName: FactSet Research Systems, Inc.\n          url: www.factset.com\n          mapStatus: MAPPED\n          similarityScore: 1\n          confidenceScore: 1\n          countryCode: US\n          countryName: United States\n          stateProvinceCode: CT\n          stateName: Connecticut\n          sicCode: 7374\n          entityTypeCode: PUB\n          entityTypeDescription: Public Company\n          entitySubTypeCode: CP\n          locationCity: Norwalk\n          regionName: North America\n          factsetIndustryCode: 3305\n          factsetIndustryName: Data Processing Services\n          factsetSectorCode: 3300\n          factsetSectorName: Technology Services\n          parentName: null,\n          parentMatchFlag: null\n          clientId: abc-123\n          clientName: factset\n          clientCountry: US\n          clientState: CT\n          clientUrl: www.factset.com\n          nameMatchString: factset\n          nameMatchSource: Domain Name\n    NotFound:\n      description: 404 - Not Found\n      value:\n        status: Not Found\n        timestamp: 2019-11-01T11:09:41.918Z\n        path: /factset-concordance/v2/fakeendpoint\n        message: '''/factset-concordance/v2/fake-endpoint'' is not a valid endpoint'\n        subErrors: null\n    EntityUniverse:\n      description: Entity Universe response from v2 endpoint\n      value:\n        data:\n        - entityId: 00345-E\n          entityName: FactSet Inc.\n          clientId: abc-123\n          clientName: factset\n          clientCountry: us\n          clientState: ct\n          clientUrl: www.factset.com\n          createdTime: 2020-09-04T20:14:13.123Z\n          updatedTime: 2020-10-04T20:14:13.123Z\n          mapStatus: MAPPED\n          universeId: 1\n        - entityId: null\n          entityName: null\n          clientId: def-456\n          clientName: apple\n          clientCountry: us\n          clientState: ca\n          clientUrl: www.apple.com\n          createdTime: 2020-07-04T20:14:13.123Z\n          updatedTime: 2020-08-04T20:14:13.123Z\n          mapStatus: UNMAPPED\n          universeId: 1\n    EntityResponse:\n      description: Entity Response\n      value:\n        data:\n          entityId: 00345-E\n          entityName: FactSet Inc.\n          clientId: abc-123\n          clientName: factset\n          clientCountry: US\n          clientState: CT\n          clientUrl: www.factset.com\n          createdTime: 2020:09:04T20:14:13.123\n          updatedTime: 2020:10:04T20:14:13.123\n          mapStatus: MAPPED\n          universeId: 1\n    EntityMappingRequest:\n      description: Entity Mapping Request\n      value:\n        clientId: abc-123\n        entityId: 0016YD-E\n        clientName: FactSet\n        clientCountry: US\n        clientState: CT\n        clientUrl: www.factset.com\n    EntityUniverseStatsResponse:\n      description: |\n        Statistics on a universe\n      value:\n        data:\n          totalCount: 10\n          unmappedCount: 1\n          mappedCount: 8\n          indeterminateCount: 1\n          universeId: 1\n    badRequestRequiredParameter:\n      description: This error message occurs when the request does not include the\n        required parameters. Required parameters are indicated with a red asterisks\n        symbol in the specification file.\n      summary: Bad Request - Required Parameter Missing\n      value:\n        status: Bad Request\n        timestamp: 2020-06-30 13:22:09.053\n        path: /factset-concordance/v2/{endpoint}\n        message: The parameter 'name' is required and may not be empty.\n        subErrors: null\n    badRequestInvalidParameters:\n      description: This error message occurs when a request parameter is not recognized\n        by the service. Please revise your request to include only the parameters\n        listed in the specification. Typical errors are spelling mistakes and use\n        of improper casing.\n      summary: Bad Request - Passing Invalid Parameter\n      value:\n        status: Bad Request\n        timestamp: 2020-07-23 11:03:40.765\n        path: /factset-concordance/v2/{endpoint}\n        message: 'Invalid Parameter (s): fakeParameterName1 fakeParameterName2. Please\n          modify your request to use parameters outlined in the specification for\n          this endpoint.'\n        subErrors: null\n    badRequestMalformedJSON:\n      description: This error may be returned when the request body is specified as\n        JSON. But is not in proper JSON format.\n      summary: Bad Request - Malformed JSON Request\n      value:\n        status: Bad Request\n        timestamp: 2020-07-02 11:59:09.649\n        path: /factset-concordance/v2/{endpoint}\n        message: Malformed JSON Request\n        subErrors: null\n    badRequestReadTimeout:\n      description: This error may be returned if it takes more than 29 seconds to\n        complete.\n      summary: Bad Request - Read Timeout\n      value:\n        status: Bad Request\n        timestamp: 2020-07-02 16:18:38.949\n        path: /factset-concordance/v2/{endpoint}\n        message: The request took too long. Try again with a smaller request.\n        subErrors: null\n    unauthenticated:\n      description: This occurs when a user is not properly authenticated or recognized\n        by the service. Please double check the USERNAME-SERIAL and API-Key used to\n        request and ensure you are within the IP range specified for the Key. Report\n        Issue under 401 error for help with troubleshooting.\n      summary: User Authentication Failed\n      value:\n        status: User Authentication Failed\n        timestamp: 2020-07-02 16:08:07.945\n        path: /factset-concordance/v2/{endpoint}\n        message: User Authentication Failed.\n        subErrors: null\n    forbidden:\n      description: The USERNAME-SERIAL attempted to request the endpoint which is\n        not authorized to access. The request was a legal request, but the server\n        is refusing to respond. Please reach out to FactSet Account Team for assistance\n        with authorization.\n      summary: Forbidden\n      value:\n        status: Forbidden\n        timestamp: 2020-07-02 17:21:52.197\n        path: /factset-concordance/v2/{endpoint}\n        message: User is not authorized for the id requested, please reach out to\n          FactSet for support\n        subErrors: null\n    unsupportedMediaType:\n      description: This bad request occurs when the media type passed in the request\n        is not supported. Currently the APIs only support 'application/json'.\n      summary: Unsupported Media Type\n      value:\n        status: Unsupported Media Type\n        timestamp: 2020-07-02 09:42:27.237\n        path: /factset-concordance/v2/{endpoint}\n        message: text/html media type is not supported. Supported media types are\n          application/json.\n        subErrors: null\n    notWritable:\n      description: This error may be returned when the server encounters an error\n        writing the JSON response.\n      summary: Internal Server Error - Not Writable\n      value:\n        status: Internal Server Error\n        timestamp: 2020-07-02 09:48:29.18\n        path: /factset-concordance/v2/{endpoint}\n        message: Error writing JSON output\n        subErrors: null\n    generalException:\n      description: This is the most general error that can be returned to by the service.\n        Please `Report Issue` to FactSet.\n      summary: Internal Server Error - General Exception\n      value:\n        status: Internal Server Error\n        timestamp: 2020-07-02 10:36:01.944\n        path: /factset-concordance/v2/{endpoint}\n        message: Unexpected error\n        subErrors: null\n  parameters:\n    name:\n      description: Name of Entity to match.\n      example: FactSet\n      explode: true\n      in: query\n      name: name\n      required: true\n      schema:\n        type: string\n      style: form\n    country:\n      description: ISO2 country code corresponding to the entity name that is used\n        when evaluating candidates for a match. For a list of ISO2 Country codes,\n        visit [OA 8754](https://my.apps.factset.com/oa/pages/8754).\n      example: US\n      explode: true\n      in: query\n      name: country\n      required: false\n      schema:\n        maxLength: 2\n        minLength: 2\n        type: string\n      style: form\n    state:\n      description: Two-character state code corresponding to the entity name that\n        is used when evaluating candidates for a match. Currently, only US state codes\n        are supported.\n      example: CT\n      explode: true\n      in: query\n      name: state\n      required: false\n      schema:\n        maxLength: 2\n        minLength: 2\n        type: string\n      style: form\n    url:\n      description: URL corresponding to the entity name that is used when evaluating\n        candidates for a match.\n      explode: true\n      in: query\n      name: url\n      required: false\n      schema:\n        type: string\n      style: form\n    includeEntityType:\n      description: |\n        Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas.\n          |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|\n          |---|---|---|---|\n          |ABS|Asset-Backed||MED|Broadcast Call Sign|\n          |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|\n          |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|\n          |CMD|Commodity||MUT|Mutual Fd-Open End|\n          |COL|College/University||NPO|Non-Profit Organization|\n          |CUR|Currency||OPD|Operating Division|\n          |ESP|Emp Stk Ownership Plan||OTH|Other|\n          |EXT|Extinct||PEF|Pension Fund|\n          |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|\n          |FND|Foundation/Endowment||PUB|Public Company|\n          |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|\n          |FRX|ForEx||PVT|Private Company|\n          |GOV|Government||SOV|Sovereign Wealth Fund|\n          |HED|Hedge Fund||SUB|Subsidiary|\n          |HOL|Holding Company||TRU|Trust/Trustee|\n          |IDX|Index||UMB|Umbrella Fund|\n          |VEN|Venture Capital Fund||JVT|Joint Venture|\n      explode: true\n      in: query\n      name: includeEntityType\n      required: false\n      schema:\n        items:\n          example: PUB\n          maxLength: 3\n          minLength: 3\n          type: string\n        type: array\n      style: form\n    excludeEntityType:\n      description: |\n        Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Candidates with an entity type specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.\n          |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|\n          |---|---|---|---|\n        |ABS|Asset-Backed||MED|Broadcast Call Sign|\n        |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|\n        |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|\n        |CMD|Commodity||MUT|Mutual Fd-Open End|\n        |COL|College/University||NPO|Non-Profit Organization|\n        |CUR|Currency||OPD|Operating Division|\n        |ESP|Emp Stk Ownership Plan||OTH|Other|\n        |EXT|Extinct||PEF|Pension Fund|\n        |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|\n        |FND|Foundation/Endowment||PUB|Public Company|\n        |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|\n        |FRX|ForEx||PVT|Private Company|\n        |GOV|Government||SOV|Sovereign Wealth Fund|\n        |HED|Hedge Fund||SUB|Subsidiary|\n        |HOL|Holding Company||TRU|Trust/Trustee|\n        |IDX|Index||UMB|Umbrella Fund|\n        |VEN|Venture Capital Fund||JVT|Joint Venture|\n      explode: true\n      in: query\n      name: excludeEntityType\n      required: false\n      schema:\n        items:\n          example: EXT\n          maxLength: 3\n          minLength: 3\n          type: string\n        type: array\n      style: form\n    includeEntitySubType:\n      description: |\n        Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas.\n          |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|\n          |---|---|---|---|\n          |AR|Arbitrage|IC|Investment Company|\n          |BM|Bank Investment Division|IN|Insurance Company|\n          |BR|Broker|MF|Mutual Fund Manager|\n          |CP|Corporate|ML|Master Ltd Part|\n          |CU|Custodial|MM|Market Maker|\n          |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|\n          |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|\n          |FO|Foundation/Endowment Manager|PP|Real Estate Manager|\n          |FS|Fund Distributor|RE|Research Firm|\n          |FU|Fund|SB|Subsidiary Branch|\n          |FY|Family Office|ST|Stock Borrowing/Lending|\n          |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|\n          |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|\n          |IA|Investment Adviser|\n          |IB|Investment Banking|\n      explode: true\n      in: query\n      name: includeEntitySubType\n      required: false\n      schema:\n        items:\n          example: PR\n          maxLength: 2\n          minLength: 2\n          type: string\n        type: array\n      style: form\n    excludeEntitySubType:\n      description: |\n        Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will not be considered for the final match result. Multiple types can be entered separated by commas.\n        |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|\n        |---|---|---|---|\n        |AR|Arbitrage|IC|Investment Company|\n        |BM|Bank Investment Division|IN|Insurance Company|\n        |BR|Broker|MF|Mutual Fund Manager|\n        |CP|Corporate|ML|Master Ltd Part|\n        |CU|Custodial|MM|Market Maker|\n        |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|\n        |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|\n        |FO|Foundation/Endowment Manager|PP|Real Estate Manager|\n        |FS|Fund Distributor|RE|Research Firm|\n        |FU|Fund|SB|Subsidiary Branch|\n        |FY|Family Office|ST|Stock Borrowing/Lending|\n        |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|\n        |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|\n        |IA|Investment Adviser|\n        |IB|Investment Banking|\n      explode: true\n      in: query\n      name: excludeEntitySubType\n      required: false\n      schema:\n        items:\n          example: HF\n          maxLength: 2\n          minLength: 2\n          type: string\n        type: array\n      style: form\n    addParent:\n      description: Flag to include parent entities in the list of candidates. This\n        parameter does not influence the match result.\n      explode: true\n      in: query\n      name: includeParent\n      required: false\n      schema:\n        default: false\n        example: false\n        type: boolean\n      style: form\n    taskDecisionId:\n      description: Concordance Task Identifier. The taskId is created in response\n        from the /entity-task endpoint.\n      example: 31589\n      explode: true\n      in: query\n      name: taskId\n      required: true\n      schema:\n        type: integer\n      style: form\n    taskStatusId:\n      description: Concordance Task Identifier. The taskId is created in response\n        from the /entity-task endpoint.\n      example: 31589\n      explode: true\n      in: query\n      name: taskId\n      required: false\n      schema:\n        type: integer\n      style: form\n    offset:\n      description: Starting row for records to return or rows to skip.\n      explode: true\n      in: query\n      name: offset\n      required: false\n      schema:\n        default: 0\n        type: integer\n      style: form\n    limit:\n      description: Limits the number of records in the response.\n      example: 10\n      explode: true\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n      style: form\n    status:\n      description: |\n        Filter on the status of the Concordance Tasks. Default is no filter.\n          * PENDING - The task has not yet started\n          * IN_PROGRESS - The task is submitted and decisions are in progress.\n          * SUCCESS - The task was successful! Move to the /entity-decisions endpoint to retrieve decisions.\n          * FAILURE - The task failed. Reach out to FactSet Support for assistance.\n          * BAD_REQUEST - The task creation was unsuccesfull. Typically occurs with an incorrect input file format or column headers.\n          * ABORTED - The task was aborted.\n      explode: false\n      in: query\n      name: status\n      required: false\n      schema:\n        items:\n          enum:\n          - PENDING\n          - IN_PROGRESS\n          - SUCCESS\n          - FAILURE\n          - BAD_REQUEST\n          - ABORTED\n          type: string\n        type: array\n      style: form\n    mapStatus:\n      description: |\n        Filter by the Entity Decisions that have the specified mapStatus, where -\n          * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)\n          * UNMAPPED - The requested Entity Name is unmapped by FactSet.\n          * INDETERMINATE - The requested Entity Name was unable to make a mapping.\n      explode: true\n      in: query\n      name: mapStatus\n      required: false\n      schema:\n        example: MAPPED\n        items:\n          enum:\n          - MAPPED\n          - UNMAPPED\n          - INDETERMINATE\n          type: string\n        type: array\n      style: form\n    clientIdFilter:\n      description: |\n        Filter by the clientId(s) created by the user in a previous mapping.\n      example:\n      - abc-123\n      - def-456\n      explode: false\n      in: query\n      name: clientId\n      required: false\n      schema:\n        items:\n          example: EXT\n          type: string\n        type: array\n      style: form\n    clientId:\n      description: |\n        A unique identifer supplied by the user. The clientId is recorded to the user's mapped universe.\n      example: abc-123\n      explode: true\n      in: query\n      name: clientId\n      required: false\n      schema:\n        type: string\n      style: form\n    universeId:\n      description: Universe identifier. *To create a universe, use the `/universe'\n        endpoint.*\n      example: 1\n      explode: true\n      in: query\n      name: universeId\n      required: false\n      schema:\n        type: integer\n      style: form\n    universeIdRequired:\n      description: Universe identifier. *To create a universe, use the `/universe'\n        endpoint.*\n      example: 1\n      explode: true\n      in: query\n      name: universeId\n      required: true\n      schema:\n        type: integer\n      style: form\n  requestBodies:\n    EntityMatchRequestV2:\n      content:\n        application/json;charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/EntityMatchRequest'\n      description: A request to match a Entity.\n      required: true\n    EntityMappingRequestV2:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityMappingRequest'\n      description: A request to create a single mapping.\n      required: true\n    EntityMappingDeleteRequestV2:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityMappingDeleteRequest'\n      description: A request to delete entity mappings specified by the client\n      required: true\n    EntityUniverseRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityUniverseRequest'\n      description: A request to fetch all entities of a given universe\n      required: true\n    CreateUniverseRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateUniverseRequest'\n      description: A request to create a user's universe\n      required: true\n    UpdateUniverseRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateUniverseRequest'\n      description: A request to update a user's universe\n      required: true\n    SnowflakeEntityMatchRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SnowflakeEntityMatchRequest'\n      description: A request to match an entity name and its attributes within Snowflake.\n      required: true\n    inline_object:\n      content:\n        multipart/form-data:\n          schema:\n            $ref: '#/components/schemas/inline_object'\n  responses:\n    \"400\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Missing Required Parameter:\n              $ref: '#/components/examples/badRequestRequiredParameter'\n            Bad Request - Invalid Parameter:\n              $ref: '#/components/examples/badRequestInvalidParameters'\n            Bad Request - Malformed JSON:\n              $ref: '#/components/examples/badRequestMalformedJSON'\n            Bad Request - Read Timeout:\n              $ref: '#/components/examples/badRequestReadTimeout'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Bad Request. This can occur for several reasons. Please review\n        the \"message\" for more details.\n    \"401\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unauthenticated'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have\n        successfully generated an API KEY for the IP range you are connecting from.\n        For more help, select the **Report Issue** in the top right corner of this\n        Developer Portal specification card and choose Connectivity 401 or 403 Responses.\n    \"403\":\n      content:\n        application/json:\n          examples:\n            Bad Request - forbidden:\n              $ref: '#/components/examples/forbidden'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing to\n        respond. Please reach out to FactSet Account Team for assistance with authorization.\n    \"415\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Unsupported Media Type:\n              $ref: '#/components/examples/unsupportedMediaType'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Unsupported Media Type. This error may be returned when the caller\n        sends a resource in a format that is not accepted by the server. This can\n        be fixed by ensuring that Content-Type header is set to the correct value.\n        In this instance, \"application/json\" would be the appropriate value.\n    \"500\":\n      content:\n        application/json:\n          examples:\n            Internal Server Error - Not Writable:\n              $ref: '#/components/examples/notWritable'\n            Internal Server Error - General Exception:\n              $ref: '#/components/examples/generalException'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Internal Server Error.\n    EntityMatchResponse:\n      content:\n        application/json;charset=utf-8:\n          examples:\n            Entity Matches:\n              $ref: '#/components/examples/EntityMatches'\n          schema:\n            $ref: '#/components/schemas/EntityMatchesResponse'\n      description: Response containing Entity Match results.\n    EntityTaskResponse:\n      content:\n        application/json;charset=utf-8:\n          examples:\n            Pending Task:\n              $ref: '#/components/examples/PendingTask'\n          schema:\n            $ref: '#/components/schemas/EntityTaskResponse'\n      description: OK. The Entity Task creation is submitted.\n    EntityTaskStatusResponse:\n      content:\n        application/json;charset=utf-8:\n          examples:\n            Successful Entity Task:\n              $ref: '#/components/examples/SuccessfulEntityTasks'\n            Pending Task:\n              $ref: '#/components/examples/PendingTasks'\n            Bad Task:\n              $ref: '#/components/examples/BadTasks'\n            Failed Task:\n              $ref: '#/components/examples/FailedTasks'\n          schema:\n            $ref: '#/components/schemas/EntityTaskStatusResponse'\n      description: Response object for Task Status endpoint.\n    EntityDecisionsResponse:\n      content:\n        application/json;charset=utf-8:\n          examples:\n            Entity Decisions:\n              $ref: '#/components/examples/EntityDecisions'\n          schema:\n            $ref: '#/components/schemas/EntityDecisionsResponse'\n      description: Response object for Entity Decisions endpoint.\n    EntityUniverseResponse:\n      content:\n        application/json:\n          examples:\n            CompanyUniverse:\n              $ref: '#/components/examples/EntityUniverse'\n          schema:\n            $ref: '#/components/schemas/EntityUniverseResponse'\n      description: Response object for FactSet Concordance Universe detail.\n    EntityUniverseStatisticsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityUniverseStatisticsResponse'\n      description: Response object for mapping statistics for a universe\n    UniversesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UniversesResponse'\n      description: Metadata on multiple universes\n    UniverseMetaResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UniverseMetaResponse'\n      description: Metadata on a single universe\n    EntityMappingResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityMappingResponse'\n      description: Single entity mapping\n    EntityResponse:\n      content:\n        application/json:\n          examples:\n            EntityResponse:\n              $ref: '#/components/examples/EntityResponse'\n          schema:\n            $ref: '#/components/schemas/EntityResponse'\n      description: Response object for FactSet Concordance Entity.\n    SnowflakeEntityMatchResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SnowflakeEntityMatchResponse'\n      description: Response object for the entity-match object in a snowflake friendly\n        response model.\n    EntityMappingDeleteResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityMappingDeleteResponse'\n      description: Response object for the entity-match object in a snowflake friendly\n        response model.\n    ErrorResponse:\n      content:\n        application/json:\n          examples:\n            Not Found:\n              $ref: '#/components/examples/NotFound'\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n      description: Error Response\n  schemas:\n    EntityMatchRequest:\n      description: Request object for a requesting multiple Entity Matches.\n      example:\n        input:\n        - country: US\n          clientId: abc-123\n          name: Amazon\n          state: CT\n          url: www.amazon.com\n        - country: US\n          clientId: abc-123\n          name: Amazon\n          state: CT\n          url: www.amazon.com\n        - country: US\n          clientId: abc-123\n          name: Amazon\n          state: CT\n          url: www.amazon.com\n        - country: US\n          clientId: abc-123\n          name: Amazon\n          state: CT\n          url: www.amazon.com\n        - country: US\n          clientId: abc-123\n          name: Amazon\n          state: CT\n          url: www.amazon.com\n        includeParent: false\n        includeEntitySubType:\n        - PR\n        - PR\n        excludeEntitySubType:\n        - HF\n        - HF\n        includeEntityType:\n        - PUB\n        - PUB\n        universeId: 1\n        excludeEntityType:\n        - EXT\n        - EXT\n      properties:\n        input:\n          items:\n            $ref: '#/components/schemas/EntityMatchRequest_input'\n          maxItems: 25\n          minItems: 1\n          type: array\n        includeEntityType:\n          description: |\n            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas\n              |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|\n              |---|---|---|---|\n              |ABS|Asset-Backed||MED|Broadcast Call Sign|\n              |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|\n              |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|\n              |CMD|Commodity||MUT|Mutual Fd-Open End|\n              |COL|College/University||NPO|Non-Profit Organization|\n              |CUR|Currency||OPD|Operating Division|\n              |ESP|Emp Stk Ownership Plan||OTH|Other|\n              |EXT|Extinct||PEF|Pension Fund|\n              |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|\n              |FND|Foundation/Endowment||PUB|Public Company|\n              |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|\n              |FRX|ForEx||PVT|Private Company|\n              |GOV|Government||SOV|Sovereign Wealth Fund|\n              |HED|Hedge Fund||SUB|Subsidiary|\n              |HOL|Holding Company||TRU|Trust/Trustee|\n              |IDX|Index||UMB|Umbrella Fund|\n              |VEN|Venture Capital Fund||JVT|Joint Venture|\n          items:\n            example: PUB\n            maxLength: 3\n            minLength: 3\n            type: string\n          type: array\n        excludeEntityType:\n          description: |\n            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Candidates with an entity type specified will not be considered for the final match result. Multiple types can be entered separated by commas.\n              |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|\n              |---|---|---|---|\n              |ABS|Asset-Backed||MED|Broadcast Call Sign|\n              |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|\n              |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|\n              |CMD|Commodity||MUT|Mutual Fd-Open End|\n              |COL|College/University||NPO|Non-Profit Organization|\n              |CUR|Currency||OPD|Operating Division|\n              |ESP|Emp Stk Ownership Plan||OTH|Other|\n              |EXT|Extinct||PEF|Pension Fund|\n              |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|\n              |FND|Foundation/Endowment||PUB|Public Company|\n              |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|\n              |FRX|ForEx||PVT|Private Company|\n              |GOV|Government||SOV|Sovereign Wealth Fund|\n              |HED|Hedge Fund||SUB|Subsidiary|\n              |HOL|Holding Company||TRU|Trust/Trustee|\n              |IDX|Index||UMB|Umbrella Fund|\n              |VEN|Venture Capital Fund||JVT|Joint Venture|\n          items:\n            example: EXT\n            maxLength: 3\n            minLength: 3\n            type: string\n          type: array\n        includeEntitySubType:\n          description: |\n            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas.\n              |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|\n              |---|---|---|---|\n              |AR|Arbitrage|IC|Investment Company|\n              |BM|Bank Investment Division|IN|Insurance Company|\n              |BR|Broker|MF|Mutual Fund Manager|\n              |CP|Corporate|ML|Master Ltd Part|\n              |CU|Custodial|MM|Market Maker|\n              |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|\n              |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|\n              |FO|Foundation/Endowment Manager|PP|Real Estate Manager|\n              |FS|Fund Distributor|RE|Research Firm|\n              |FU|Fund|SB|Subsidiary Branch|\n              |FY|Family Office|ST|Stock Borrowing/Lending|\n              |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|\n              |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|\n              |IA|Investment Adviser|\n              |IB|Investment Banking|\n          items:\n            example: PR\n            maxLength: 2\n            minLength: 2\n            type: string\n          type: array\n        excludeEntitySubType:\n          description: |\n            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will not be considered for the final match result. Multiple types can be entered separated by commas.\n              |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|\n              |---|---|---|---|\n              |AR|Arbitrage|IC|Investment Company|\n              |BM|Bank Investment Division|IN|Insurance Company|\n              |BR|Broker|MF|Mutual Fund Manager|\n              |CP|Corporate|ML|Master Ltd Part|\n              |CU|Custodial|MM|Market Maker|\n              |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|\n              |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|\n              |FO|Foundation/Endowment Manager|PP|Real Estate Manager|\n              |FS|Fund Distributor|RE|Research Firm|\n              |FU|Fund|SB|Subsidiary Branch|\n              |FY|Family Office|ST|Stock Borrowing/Lending|\n              |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|\n              |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|\n              |IA|Investment Adviser|\n              |IB|Investment Banking|\n          items:\n            example: HF\n            maxLength: 2\n            minLength: 2\n            type: string\n          type: array\n        includeParent:\n          default: false\n          description: |\n            Flag to include parent entities in the list of candidates. This parameter does not influence the match result.\n          type: boolean\n        universeId:\n          description: |\n            The universeId to save this set of inputs to\n          example: 1\n          type: integer\n      required:\n      - input\n      title: Entity Match Request\n      type: object\n    EntityMappingRequest:\n      example:\n        clientId: FDS-USA\n        clientName: FactSet\n        clientUrl: www.factset.com\n        universeId: 1\n        entityId: 0016YD-E\n        clientState: CT\n        clientCountry: US\n      properties:\n        universeId:\n          description: The universe to save this mapping to.\n          example: 1\n          type: integer\n        clientId:\n          description: A unique identifier supplied by the user. ClientId is saved\n            to the user's Concordance universe and will be used as the identifier\n            for that entity within the universe.\n          example: FDS-USA\n          type: string\n        entityId:\n          description: FactSet Entity Identifier mapped to the submitted entity.\n          example: 0016YD-E\n          type: string\n        clientName:\n          description: Name of entity to match.\n          example: FactSet\n          type: string\n        clientCountry:\n          description: ISO2 country code corresponding to the Entity name.\n          example: US\n          maxLength: 2\n          minLength: 2\n          type: string\n        clientState:\n          description: ISO Code of State or Province location to map Entity.\n          example: CT\n          maxLength: 2\n          minLength: 2\n          type: string\n        clientUrl:\n          description: URL corresponding to the entity name.\n          example: www.factset.com\n          type: string\n      required:\n      - clientId\n      - clientName\n      - universeId\n      type: object\n    EntityMappingDeleteRequest:\n      example:\n        clientId:\n        - abc-123\n        - dfg-456\n        universeId: 1\n      properties:\n        universeId:\n          description: The universe to save this mapping to.\n          example: 1\n          type: integer\n        clientId:\n          description: A unique identifier supplied by the user. ClientId is saved\n            to the user's Concordance universe and will be used as the identifier\n            for that entity within the universe.\n          example:\n          - abc-123\n          - dfg-456\n          items:\n            type: string\n          type: array\n      required:\n      - clientId\n      - universeId\n      type: object\n    EntityUniverseRequest:\n      example:\n        clientId:\n        - abc-123\n        - dfg-456\n        offset: 0\n        universeId: 1\n        limit: 10\n        mapStatus:\n        - MAPPED\n      properties:\n        universeId:\n          description: the id of the universe that entities come from\n          example: 1\n          type: integer\n        offset:\n          description: starting row of the universe\n          example: 0\n          type: integer\n        limit:\n          description: Limits the number of records in the response.\n          example: 10\n          type: integer\n        mapStatus:\n          description: entity statuses to be filtered\n          example:\n          - MAPPED\n          items:\n            $ref: '#/components/schemas/MapStatus'\n          type: array\n        clientId:\n          description: fetch only the mappings that has client id included in the\n            specified list.\n          example:\n          - abc-123\n          - dfg-456\n          items:\n            type: string\n          type: array\n      required:\n      - universeId\n      type: object\n    CreateUniverseRequest:\n      example:\n        universeDescription: This is my universe\n        universeName: My Universe\n      properties:\n        universeName:\n          description: Universe name\n          example: My Universe\n          type: string\n        universeDescription:\n          description: Universe description\n          example: This is my universe\n          type: string\n      required:\n      - universeName\n      type: object\n    UpdateUniverseRequest:\n      example:\n        universeId: 1\n        universeDescription: This is my universe\n        universeName: My Universe\n      properties:\n        universeName:\n          description: Universe name\n          example: My Universe\n          type: string\n        universeDescription:\n          description: Universe description\n          example: This is my universe\n          type: string\n        universeId:\n          description: Universe identifier\n          example: 1\n          type: integer\n      required:\n      - universeId\n      type: object\n    SnowflakeEntityMatchRequest:\n      example:\n        data:\n        - - 0\n          - FactSet\n          - US\n          - CT\n          - www.factset.com\n          - 1\n        - - 0\n          - FactSet\n          - US\n          - CT\n          - www.factset.com\n          - 1\n        - - 0\n          - FactSet\n          - US\n          - CT\n          - www.factset.com\n          - 1\n        - - 0\n          - FactSet\n          - US\n          - CT\n          - www.factset.com\n          - 1\n        - - 0\n          - FactSet\n          - US\n          - CT\n          - www.factset.com\n          - 1\n      properties:\n        data:\n          description: Array of input rows\n          items:\n            description: One search row from Snowflake\n            example:\n            - 0\n            - FactSet\n            - US\n            - CT\n            - www.factset.com\n            - 1\n            items:\n              example: 0\n              type: object\n            maxItems: 7\n            minItems: 7\n            type: array\n          maxItems: 25\n          minItems: 1\n          type: array\n      required:\n      - data\n      title: Snowflake Company Match Request\n      type: object\n    EntityMatchesResponse:\n      description: Response object for Entity Matches.\n      example:\n        data:\n        - matchFlag: true\n          clientName: factset\n          regionName: North America\n          universeId: 1\n          factsetIndustryName: Data Processing Services\n          factsetSectorName: Technology Services\n          nameMatchString: factset\n          entityTypeDescription: Public Company\n          mapStatus: MAPPED\n          similarityScore: 1\n          parentMatchFlag: false\n          confidenceScore: 1\n          entitySubTypeCode: PR\n          factsetIndustryCode: \"3305\"\n          stateName: Connecticut\n          entityName: FactSet Research Systems, Inc.\n          countryCode: US\n          nameMatchSource: Domain Name\n          clientId: abc-123\n          clientUrl: www.factset.com\n          entityId: entityId\n          url: www.factset.com\n          factsetSectorCode: \"3300\"\n          clientCountry: US\n          parentName: parentName\n          sicCode: \"7374\"\n          entityTypeCode: PUB\n          rowIndex: 0\n          stateCode: CT\n          clientState: CT\n          countryName: United States\n          taskId: 31\n          locationCity: Norwalk\n        - matchFlag: true\n          clientName: factset\n          regionName: North America\n          universeId: 1\n          factsetIndustryName: Data Processing Services\n          factsetSectorName: Technology Services\n          nameMatchString: factset\n          entityTypeDescription: Public Company\n          mapStatus: MAPPED\n          similarityScore: 1\n          parentMatchFlag: false\n          confidenceScore: 1\n          entitySubTypeCode: PR\n          factsetIndustryCode: \"3305\"\n          stateName: Connecticut\n          entityName: FactSet Research Systems, Inc.\n          countryCode: US\n          nameMatchSource: Domain Name\n          clientId: abc-123\n          clientUrl: www.factset.com\n          entityId: entityId\n          url: www.factset.com\n          factsetSectorCode: \"3300\"\n          clientCountry: US\n          parentName: parentName\n          sicCode: \"7374\"\n          entityTypeCode: PUB\n          rowIndex: 0\n          stateCode: CT\n          clientState: CT\n          countryName: United States\n          taskId: 31\n          locationCity: Norwalk\n      properties:\n        data:\n          description: Candidate list of `Entity Match` objects.\n          items:\n            $ref: '#/components/schemas/EntityMatch'\n          type: array\n      title: Entity Matches Response\n      type: object\n    EntityTaskResponse:\n      example:\n        data:\n          clientIdColumn: ClientId\n          countryColumn: Country\n          universeId: 1\n          excludeEntityType:\n          - EXT\n          - EXT\n          error: error\n          userSerial: FDSQAR_C-000000\n          inputFile: test31.csv\n          nameColumn: Name\n          processStartTime: 2020-07-03T15:12:06.722Z\n          includeEntitySubType:\n          - PR\n          - PR\n          errorTitle: errorTitle\n          decisionRate: 0.7272727272727273\n          mappedCount: 8\n          unmappedCount: 2\n          universeName: My Universe\n          indeterminateCount: 1\n          excludeEntitySubType:\n          - IB\n          - IB\n          userFullName: Jane Smith\n          hasResult: true\n          message: Waiting for the input file\n          taskAction: processfile\n          stateColumn: State\n          urlColumn: URL\n          includeEntityType:\n          - PUB\n          - PUB\n          tryCount: 3\n          taskName: test31\n          taskSubmitTime: 2020-06-24T22:02:21Z\n          processDuration: 1.51603\n          taskId: 31\n          status: PENDING\n          inputCount: 11\n      properties:\n        data:\n          $ref: '#/components/schemas/EntityTaskStatus'\n      title: Entity Task Response\n      type: object\n    EntityTaskStatusResponse:\n      example:\n        data:\n        - clientIdColumn: ClientId\n          countryColumn: Country\n          universeId: 1\n          excludeEntityType:\n          - EXT\n          - EXT\n          error: error\n          userSerial: FDSQAR_C-000000\n          inputFile: test31.csv\n          nameColumn: Name\n          processStartTime: 2020-07-03T15:12:06.722Z\n          includeEntitySubType:\n          - PR\n          - PR\n          errorTitle: errorTitle\n          decisionRate: 0.7272727272727273\n          mappedCount: 8\n          unmappedCount: 2\n          universeName: My Universe\n          indeterminateCount: 1\n          excludeEntitySubType:\n          - IB\n          - IB\n          userFullName: Jane Smith\n          hasResult: true\n          message: Waiting for the input file\n          taskAction: processfile\n          stateColumn: State\n          urlColumn: URL\n          includeEntityType:\n          - PUB\n          - PUB\n          tryCount: 3\n          taskName: test31\n          taskSubmitTime: 2020-06-24T22:02:21Z\n          processDuration: 1.51603\n          taskId: 31\n          status: PENDING\n          inputCount: 11\n        - clientIdColumn: ClientId\n          countryColumn: Country\n          universeId: 1\n          excludeEntityType:\n          - EXT\n          - EXT\n          error: error\n          userSerial: FDSQAR_C-000000\n          inputFile: test31.csv\n          nameColumn: Name\n          processStartTime: 2020-07-03T15:12:06.722Z\n          includeEntitySubType:\n          - PR\n          - PR\n          errorTitle: errorTitle\n          decisionRate: 0.7272727272727273\n          mappedCount: 8\n          unmappedCount: 2\n          universeName: My Universe\n          indeterminateCount: 1\n          excludeEntitySubType:\n          - IB\n          - IB\n          userFullName: Jane Smith\n          hasResult: true\n          message: Waiting for the input file\n          taskAction: processfile\n          stateColumn: State\n          urlColumn: URL\n          includeEntityType:\n          - PUB\n          - PUB\n          tryCount: 3\n          taskName: test31\n          taskSubmitTime: 2020-06-24T22:02:21Z\n          processDuration: 1.51603\n          taskId: 31\n          status: PENDING\n          inputCount: 11\n      properties:\n        data:\n          description: Array of Concordance Entity Task `Status` objects.\n          items:\n            $ref: '#/components/schemas/EntityTaskStatus'\n          type: array\n      title: Entity Task Status Response\n      type: object\n    EntityDecisionsResponse:\n      example:\n        data:\n        - matchFlag: true\n          clientName: factset\n          regionName: North America\n          universeId: 1\n          factsetIndustryName: Data Processing Services\n          factsetSectorName: Technology Services\n          nameMatchString: factset\n          entityTypeDescription: Public Company\n          mapStatus: MAPPED\n          similarityScore: 1\n          parentMatchFlag: false\n          confidenceScore: 1\n          entitySubTypeCode: PR\n          factsetIndustryCode: \"3305\"\n          stateName: Connecticut\n          entityName: FactSet Research Systems, Inc.\n          countryCode: US\n          nameMatchSource: Domain Name\n          clientId: abc-123\n          clientUrl: www.factset.com\n          entityId: entityId\n          url: www.factset.com\n          factsetSectorCode: \"3300\"\n          clientCountry: US\n          parentName: parentName\n          sicCode: \"7374\"\n          entityTypeCode: PUB\n          rowIndex: 0\n          stateCode: CT\n          clientState: CT\n          countryName: United States\n          taskId: 31\n          locationCity: Norwalk\n        - matchFlag: true\n          clientName: factset\n          regionName: North America\n          universeId: 1\n          factsetIndustryName: Data Processing Services\n          factsetSectorName: Technology Services\n          nameMatchString: factset\n          entityTypeDescription: Public Company\n          mapStatus: MAPPED\n          similarityScore: 1\n          parentMatchFlag: false\n          confidenceScore: 1\n          entitySubTypeCode: PR\n          factsetIndustryCode: \"3305\"\n          stateName: Connecticut\n          entityName: FactSet Research Systems, Inc.\n          countryCode: US\n          nameMatchSource: Domain Name\n          clientId: abc-123\n          clientUrl: www.factset.com\n          entityId: entityId\n          url: www.factset.com\n          factsetSectorCode: \"3300\"\n          clientCountry: US\n          parentName: parentName\n          sicCode: \"7374\"\n          entityTypeCode: PUB\n          rowIndex: 0\n          stateCode: CT\n          clientState: CT\n          countryName: United States\n          taskId: 31\n          locationCity: Norwalk\n      properties:\n        data:\n          description: Array of `Entity Match` objects.\n          items:\n            $ref: '#/components/schemas/EntityMatch'\n          type: array\n      title: Entity Decisions Response\n      type: object\n    EntityUniverseResponse:\n      example:\n        data:\n        - updatedTime: 2020-06-24T22:02:21Z\n          clientId: abc-1234\n          clientName: factset\n          clientUrl: www.factset.com\n          entityName: FactSet Inc.\n          universeId: 1\n          createdTime: 2020-06-24T22:02:21Z\n          entityId: 00456-E\n          clientState: ct\n          clientCountry: us\n          mapStatus: MAPPED\n        - updatedTime: 2020-06-24T22:02:21Z\n          clientId: abc-1234\n          clientName: factset\n          clientUrl: www.factset.com\n          entityName: FactSet Inc.\n          universeId: 1\n          createdTime: 2020-06-24T22:02:21Z\n          entityId: 00456-E\n          clientState: ct\n          clientCountry: us\n          mapStatus: MAPPED\n      properties:\n        data:\n          items:\n            $ref: '#/components/schemas/EntityMapping'\n          type: array\n      title: Entity Universe Response\n      type: object\n    EntityResponse:\n      example:\n        data:\n          updatedTime: 2020-06-24T22:02:21Z\n          clientId: abc-1234\n          clientName: factset\n          clientUrl: www.factset.com\n          entityName: FactSet Inc.\n          universeId: 1\n          createdTime: 2020-06-24T22:02:21Z\n          entityId: 00456-E\n          clientState: ct\n          clientCountry: us\n          mapStatus: MAPPED\n      properties:\n        data:\n          $ref: '#/components/schemas/EntityMapping'\n      title: Entity Response\n      type: object\n    EntityMappingResponse:\n      properties:\n        data:\n          $ref: '#/components/schemas/EntityMapping'\n      title: Entity Mapping Response\n      type: object\n    UniverseMetaResponse:\n      example:\n        data:\n          updatedBy: FDSQAR_C-000000\n          createdBy: FDSQAR_C-000000\n          universeId: 1\n          universeDescription: This is a universe\n          updatedOn: 2020-01-01T00:00:00Z\n          selfManaged: true\n          createdOn: 2020-01-01T00:00:00Z\n          universeName: My Universe\n      properties:\n        data:\n          $ref: '#/components/schemas/UniverseMeta'\n      title: Metadata for a single universe\n      type: object\n    EntityUniverseStatisticsResponse:\n      example:\n        data:\n        - indeterminateCount: 1\n          universeId: 1\n          mappedCount: 8\n          totalCount: 10\n          unmappedCount: 1\n        - indeterminateCount: 1\n          universeId: 1\n          mappedCount: 8\n          totalCount: 10\n          unmappedCount: 1\n      properties:\n        data:\n          items:\n            $ref: '#/components/schemas/UniverseStatistics'\n          type: array\n      title: Entity Mapping Statistics Response\n      type: object\n    UniversesResponse:\n      example:\n        data:\n        - updatedBy: FDSQAR_C-000000\n          createdBy: FDSQAR_C-000000\n          universeId: 1\n          universeDescription: This is a universe\n          updatedOn: 2020-01-01T00:00:00Z\n          selfManaged: true\n          createdOn: 2020-01-01T00:00:00Z\n          universeName: My Universe\n        - updatedBy: FDSQAR_C-000000\n          createdBy: FDSQAR_C-000000\n          universeId: 1\n          universeDescription: This is a universe\n          updatedOn: 2020-01-01T00:00:00Z\n          selfManaged: true\n          createdOn: 2020-01-01T00:00:00Z\n          universeName: My Universe\n      properties:\n        data:\n          items:\n            $ref: '#/components/schemas/UniverseMeta'\n          type: array\n      title: Metadata on multiple universes\n      type: object\n    SnowflakeEntityMatchResponse:\n      example:\n        data:\n        - clientCountry: us,\n          clientId: null,\n          clientName: apple,\n          clientState: ca,\n          clientUrl: www.apple.com,\n          confidenceScore: 1.0,\n          countryCode: us,\n          countryName: United States,\n          entityId: 000C7F-E,\n          entityName: Apple, Inc.,\n          entitySubTypeCode: CP,\n          entityTypeCode: PUB,\n          entityTypeDescription: Public Company,\n          factsetIndustryCode: 1320,\n          factsetIndustryName: Telecommunications Equipment,\n          factsetSectorCode: 1300,\n          factsetSectorName: Electronic Technology,\n          locationCity: Cupertino,\n          mapStatus: MAPPED,\n          matchFlag: true,\n          nameMatchSource: Proper/ Legal Name,\n          nameMatchString: apple inc,\n          parentMatchFlag: false,\n          parentName: null,\n          regionName: North America,\n          rowIndex: 0,\n          sicCode: 3663,\n          similarityScore: 1.0,\n          stateCode: ca,\n          stateName: California,\n          taskId: null,\n          url: www.apple.com,\n        - clientCountry: null,\n          clientId: null,\n          clientName: factset,\n          clientState: null,\n          clientUrl: null,\n          confidenceScore: 1.0,\n          countryCode: us,\n          countryName: United States,\n          entityId: 0016YD-E,\n          entityName: FactSet Research Systems, Inc.,\n          entitySubTypeCode: CP,\n          entityTypeCode: PUB,\n          entityTypeDescription: Public Company,\n          factsetIndustryCode: 3305,\n          factsetIndustryName: Data Processing Services,\n          factsetSectorCode: 3300,\n          factsetSectorName: Technology Services,\n          locationCity: Norwalk,\n          mapStatus: MAPPED,\n          matchFlag: true,\n          nameMatchSource: Domain Name,\n          nameMatchString: factset,\n          parentMatchFlag: false,\n          parentName: null,\n          regionName: North America,\n          rowIndex: 1,\n          sicCode: 7374,\n          similarityScore: 1.0,\n          stateCode: ct,\n          stateName: Connecticut,\n          taskId: null,\n          url: www.factset.com\n      properties:\n        data:\n          description: JSON body to be parsed by snowflake\n          items:\n            items:\n              type: object\n            type: array\n          type: array\n      title: Snowflake Entity Search Response\n      type: object\n    EntityMappingDeleteResponse:\n      example:\n        data:\n        - updatedTime: 2020-06-24T22:02:21Z\n          clientId: abc-1234\n          clientName: factset\n          clientUrl: www.factset.com\n          entityName: FactSet Inc.\n          universeId: 1\n          createdTime: 2020-06-24T22:02:21Z\n          entityId: 00456-E\n          clientState: ct\n          clientCountry: us\n          mapStatus: MAPPED\n        - updatedTime: 2020-06-24T22:02:21Z\n          clientId: abc-1234\n          clientName: factset\n          clientUrl: www.factset.com\n          entityName: FactSet Inc.\n          universeId: 1\n          createdTime: 2020-06-24T22:02:21Z\n          entityId: 00456-E\n          clientState: ct\n          clientCountry: us\n          mapStatus: MAPPED\n      properties:\n        data:\n          description: Array of `Entity Mapping` objects that have been successfully\n            deleted.\n          items:\n            $ref: '#/components/schemas/EntityMapping'\n          type: array\n      title: Entity Delete Mapping Response\n      type: object\n    ErrorResponse:\n      properties:\n        status:\n          description: Status.\n          example: Bad Request\n          type: string\n        timestamp:\n          description: Timestamp in yyyy-mm-ddThh:mm:ss.sss format.\n          format: date-time\n          type: string\n        path:\n          description: The Endpoint path {package}/version/{endpoint}\n          example: /factset-concordance/v2/entity-match\n          type: string\n        message:\n          description: The plain text error message.\n          example: Validation Error\n          type: string\n        subErrors:\n          $ref: '#/components/schemas/ErrorResponse_subErrors'\n      title: Error Response\n      type: object\n    EntityMatch:\n      description: |\n        Entity Match object showing the decision reached for each Entity.\n      example:\n        matchFlag: true\n        clientName: factset\n        regionName: North America\n        universeId: 1\n        factsetIndustryName: Data Processing Services\n        factsetSectorName: Technology Services\n        nameMatchString: factset\n        entityTypeDescription: Public Company\n        mapStatus: MAPPED\n        similarityScore: 1\n        parentMatchFlag: false\n        confidenceScore: 1\n        entitySubTypeCode: PR\n        factsetIndustryCode: \"3305\"\n        stateName: Connecticut\n        entityName: FactSet Research Systems, Inc.\n        countryCode: US\n        nameMatchSource: Domain Name\n        clientId: abc-123\n        clientUrl: www.factset.com\n        entityId: entityId\n        url: www.factset.com\n        factsetSectorCode: \"3300\"\n        clientCountry: US\n        parentName: parentName\n        sicCode: \"7374\"\n        entityTypeCode: PUB\n        rowIndex: 0\n        stateCode: CT\n        clientState: CT\n        countryName: United States\n        taskId: 31\n        locationCity: Norwalk\n      properties:\n        universeId:\n          description: The id of the universe that entities should be mapped to\n          example: 1\n          type: integer\n        taskId:\n          description: |\n            Identifier denoting a specific Concordance task submitted by the user. This value will be null for /entity-match endpoint responses and is only available when using the \"Bulk\" workflow.\n          example: 31\n          type: integer\n        rowIndex:\n          description: Row number for match in the request or input file.\n          type: integer\n        matchFlag:\n          description: Flag denoting if the row is a match.\n          type: boolean\n        entityId:\n          description: |\n            FactSet Entity Identifier of the entity matched respective to the requested Name submitted. For more detail, visit [FactSet Permanent Security Identifier](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881)\n          type: string\n        entityName:\n          description: Full name corresponding to the matched entity.\n          example: FactSet Research Systems, Inc.\n          type: string\n        url:\n          description: URL of the matched entity.\n          example: www.factset.com\n          type: string\n        mapStatus:\n          description: \"Concordance status of the submitted, where - \\n  * MAPPED\\\n            \\ - The requested Entity Name is successfully mapped to a FactSet Entity\\\n            \\ Id (-E)\\n  * UNMAPPED - The requested Entity Name is unmapped by FactSet.\\n\\\n            \\  * INDETERMINATE - The requested Entity Name has unable to make a mapping.\\n\"\n          enum:\n          - MAPPED\n          - UNMAPPED\n          - INDETERMINATE\n          example: MAPPED\n          type: string\n        similarityScore:\n          description: |\n            Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity.\n          example: 1\n          format: double\n          type: number\n        confidenceScore:\n          description: |\n            Additional statistic calculated by the algorithm that is used to ensure the validity of the match result. A confidenceScore of 1 is the highest level of confidence.\n          example: 1\n          format: double\n          type: number\n        countryCode:\n          description: ISO2 country code corresponding to the location of the matched\n            entity.\n          example: US\n          type: string\n        countryName:\n          description: Country name corresponding to the location of the matched entity\n          example: United States\n          type: string\n        stateCode:\n          description: Two character state code corresponding to the location of the\n            matched entity.\n          example: CT\n          type: string\n        stateName:\n          description: State name corresponding to the location of the matched entity.\n          example: Connecticut\n          type: string\n        sicCode:\n          description: Standard Industrial Classification (SIC) Code of the matched\n            entity.\n          example: \"7374\"\n          type: string\n        entityTypeCode:\n          description: Code representing the entity type of the matched entity. See\n            the related request parameter for a table of all Codes and their respective\n            descriptions.\n          example: PUB\n          type: string\n        entityTypeDescription:\n          description: Description of of the matched entity's type.\n          example: Public Company\n          type: string\n        entitySubTypeCode:\n          description: Code representing the entity subtype of the matched entity.\n            See the related request parameter for a table of all Codes and their respective\n            descriptions.\n          example: PR\n          type: string\n        locationCity:\n          description: City where the matched entity is located.\n          example: Norwalk\n          type: string\n        regionName:\n          description: Region where the matched entity is located.\n          example: North America\n          type: string\n        factsetIndustryCode:\n          description: FactSet Industry Classification Code of the matched entity.\n          example: \"3305\"\n          type: string\n        factsetIndustryName:\n          description: Name of the matched entity's FactSet Industry Classification.\n          example: Data Processing Services\n          type: string\n        factsetSectorCode:\n          description: Name of the matched entity's FactSet Sector Classification\n            Code.\n          example: \"3300\"\n          type: string\n        factsetSectorName:\n          description: Name of the matched entity's FactSet Sector Classification.\n          example: Technology Services\n          type: string\n        parentName:\n          description: Name of the matched entity's parent entity.\n          type: string\n        parentMatchFlag:\n          description: Flag denoting that the matched entity is the parent of another\n            match.\n          example: false\n          type: boolean\n        clientId:\n          description: Unique Identifer provided by the user in the request to represent\n            the entity Name being requested.\n          example: abc-123\n          type: string\n        clientName:\n          description: Name of the entity to match as specified in the request\n          example: factset\n          type: string\n        clientCountry:\n          description: ISO2 country code specified in the request.\n          example: US\n          type: string\n        clientState:\n          description: State code specified in the request.\n          example: CT\n          type: string\n        clientUrl:\n          description: URL specified in the request.\n          example: www.factset.com\n          type: string\n        nameMatchString:\n          description: String on which the Concordance algorithm mapped the submitted\n            entity.\n          example: factset\n          type: string\n        nameMatchSource:\n          description: Type of name that the nameMatchString matched.\n          example: Domain Name\n          type: string\n      title: Entity Match\n      type: object\n    EntityTaskStatus:\n      description: |\n        Concordance Entity Task Status object. Shows the settings and status of a taskId and some statistics on the matches.\n      example:\n        clientIdColumn: ClientId\n        countryColumn: Country\n        universeId: 1\n        excludeEntityType:\n        - EXT\n        - EXT\n        error: error\n        userSerial: FDSQAR_C-000000\n        inputFile: test31.csv\n        nameColumn: Name\n        processStartTime: 2020-07-03T15:12:06.722Z\n        includeEntitySubType:\n        - PR\n        - PR\n        errorTitle: errorTitle\n        decisionRate: 0.7272727272727273\n        mappedCount: 8\n        unmappedCount: 2\n        universeName: My Universe\n        indeterminateCount: 1\n        excludeEntitySubType:\n        - IB\n        - IB\n        userFullName: Jane Smith\n        hasResult: true\n        message: Waiting for the input file\n        taskAction: processfile\n        stateColumn: State\n        urlColumn: URL\n        includeEntityType:\n        - PUB\n        - PUB\n        tryCount: 3\n        taskName: test31\n        taskSubmitTime: 2020-06-24T22:02:21Z\n        processDuration: 1.51603\n        taskId: 31\n        status: PENDING\n        inputCount: 11\n      properties:\n        taskId:\n          description: Identifier denoting a specific Concordance task submitted by\n            the user.\n          example: 31\n          type: integer\n        taskName:\n          description: User-defined name for the task used to name the output file.\n          example: test31\n          type: string\n        taskAction:\n          description: Action status for the Concordance Task process.\n          example: processfile\n          type: string\n        status:\n          description: Status of the Concordance Task. If the value is \"SUCCESS\",\n            you can move to the subsequent /entity-decisions endpoint to retrieve\n            the results.\n          enum:\n          - PENDING\n          - IN_PROGRESS\n          - SUCCESS\n          - FAILURE\n          - BAD_REQUEST\n          - ABORTED\n          type: string\n        inputFile:\n          description: |\n            The input file is posted as a file object in the form.\n          example: test31.csv\n          type: string\n        clientIdColumn:\n          description: Name of the column in the input file that contains a unique\n            identifier supplied by the user.\n          example: ClientId\n          type: string\n        nameColumn:\n          description: Name of the column in the input file that contains the entity\n            name to be matched.\n          example: Name\n          type: string\n        countryColumn:\n          description: |\n            Name of the column in the input file that contains the ISO2 country code corresponding to the entity name.  The country code is used when evaluating candidates for a match.\n          example: Country\n          type: string\n        stateColumn:\n          description: |\n            Name of the column in the input file that contains the Two-character state code corresponding to the entity name. The state code is used when evaluating candidates for a match.\n          example: State\n          type: string\n        urlColumn:\n          description: |\n            Name of the column in the input file that contains the URL corresponding to the entity name. The URL is used when evaluating candidates for a match.\n          example: URL\n          type: string\n        hasResult:\n          description: Flag denoting the taskId has a result.\n          example: true\n          type: boolean\n        taskSubmitTime:\n          description: Time the Task was submitted in UTC.\n          example: 2020-06-24T22:02:21Z\n          format: date-time\n          type: string\n        message:\n          description: Textual message for the status.\n          example: Waiting for the input file\n          type: string\n        inputCount:\n          description: Number of records in the Input File.\n          example: 11\n          type: integer\n        mappedCount:\n          description: Number of records with status of MAPPED the Input File.\n          example: 8\n          type: integer\n        unmappedCount:\n          description: Number of records with status of UNMAPPED the Input File.\n          example: 2\n          type: integer\n        indeterminateCount:\n          description: Number of records with status of INDETERMINATE the Input File.\n          example: 1\n          type: integer\n        processStartTime:\n          description: Process start time in UTC.\n          example: 2020-07-03T15:12:06.722Z\n          format: date-time\n          type: string\n        processDuration:\n          description: Process duration in seconds.\n          example: 1.51603\n          format: double\n          type: number\n        tryCount:\n          description: Number of tries made so far for the request.\n          example: 3\n          type: integer\n        decisionRate:\n          description: Percentage of mapped entities in the Input File.\n          example: 0.7272727272727273\n          format: double\n          type: number\n        error:\n          type: string\n        errorTitle:\n          type: string\n        includeEntityType:\n          description: |\n            Requested Entity types to include.\n          items:\n            example: PUB\n            type: string\n          type: array\n        excludeEntityType:\n          description: |\n            Requested Entity types to exclude.\n          items:\n            example: EXT\n            type: string\n          type: array\n        includeEntitySubType:\n          description: |\n            Requested Entity subtypes to include.\n          items:\n            example: PR\n            type: string\n          type: array\n        excludeEntitySubType:\n          description: |\n            Requested Entity subtypes to exclude.\n          items:\n            example: IB\n            type: string\n          type: array\n        userSerial:\n          description: user-serial of the person who initiated the entity task.\n          example: FDSQAR_C-000000\n          type: string\n        userFullName:\n          description: |\n            Full name of the person associated with the `userSerial`.\n          example: Jane Smith\n          type: string\n        universeId:\n          description: |\n            The universe id this task was submitted to.\n          example: 1\n          type: integer\n        universeName:\n          description: |\n            The name of the universe this task was submitted to.\n          example: My Universe\n          type: string\n      title: Entity Task Status\n      type: object\n    EntityMapping:\n      description: |\n        Concordance Company Entity Mapping object. Shows the mapping detail related to user's universe.\n      example:\n        updatedTime: 2020-06-24T22:02:21Z\n        clientId: abc-1234\n        clientName: factset\n        clientUrl: www.factset.com\n        entityName: FactSet Inc.\n        universeId: 1\n        createdTime: 2020-06-24T22:02:21Z\n        entityId: 00456-E\n        clientState: ct\n        clientCountry: us\n        mapStatus: MAPPED\n      properties:\n        entityId:\n          description: FactSet Entity Identifier of the entity matched to the submitted\n            entity\n          example: 00456-E\n          type: string\n        entityName:\n          description: Full name corresponding to the matched entity.\n          example: FactSet Inc.\n          type: string\n        clientId:\n          description: User-defined unique identifier provided by the user in the\n            request\n          example: abc-1234\n          type: string\n        clientName:\n          description: Name of the entity to match as specified in the request.\n          example: factset\n          type: string\n        clientCountry:\n          description: ISO2 country code specified in the request\n          example: us\n          type: string\n        clientState:\n          description: State code specified in the request\n          example: ct\n          type: string\n        clientUrl:\n          description: URL specified in the request\n          example: www.factset.com\n          type: string\n        createdTime:\n          description: Time when entity was created in UTC.\n          example: 2020-06-24T22:02:21Z\n          format: date-time\n          type: string\n        updatedTime:\n          description: Time when the submitted entity was last updated in UTC.\n          example: 2020-06-24T22:02:21Z\n          format: date-time\n          type: string\n        mapStatus:\n          description: Current status of the entity mapping.\n          enum:\n          - MAPPED\n          - UNMAPPED\n          - INDETERMINATE\n          type: string\n        universeId:\n          description: |\n            The universe this mapping belongs to. Only set in v2 endpoints\n          example: 1\n          type: integer\n      title: Entity Mapping\n      type: object\n    UniverseStatistics:\n      description: Mapping statistics for a given universe\n      example:\n        indeterminateCount: 1\n        universeId: 1\n        mappedCount: 8\n        totalCount: 10\n        unmappedCount: 1\n      properties:\n        totalCount:\n          example: 10\n          type: integer\n        mappedCount:\n          example: 8\n          type: integer\n        unmappedCount:\n          example: 1\n          type: integer\n        indeterminateCount:\n          example: 1\n          type: integer\n        universeId:\n          example: 1\n          type: integer\n      title: Universe Statistics\n      type: object\n    MapStatus:\n      description: Status of an entity mapping\n      enum:\n      - MAPPED\n      - UNMAPPED\n      - INDETERMINATE\n      example: MAPPED\n      type: string\n    UniverseMeta:\n      description: Metadata about a single universe\n      example:\n        updatedBy: FDSQAR_C-000000\n        createdBy: FDSQAR_C-000000\n        universeId: 1\n        universeDescription: This is a universe\n        updatedOn: 2020-01-01T00:00:00Z\n        selfManaged: true\n        createdOn: 2020-01-01T00:00:00Z\n        universeName: My Universe\n      properties:\n        universeId:\n          description: The universe identifier\n          example: 1\n          type: integer\n        universeName:\n          description: The user specified universe name\n          example: My Universe\n          type: string\n        universeDescription:\n          description: The user specified universe description\n          example: This is a universe\n          type: string\n        selfManaged:\n          description: False if the universe is managed by FactSet Managed Service,\n            True otherwise\n          example: true\n          type: boolean\n        createdBy:\n          description: The user who created the universe\n          example: FDSQAR_C-000000\n          type: string\n        createdOn:\n          description: When the universe was created\n          example: 2020-01-01T00:00:00Z\n          format: date-time\n          type: string\n        updatedBy:\n          description: The user who most recently updated the universe metadata\n          example: FDSQAR_C-000000\n          type: string\n        updatedOn:\n          description: When the universe metadata was most recently updated\n          example: 2020-01-01T00:00:00Z\n          format: date-time\n          type: string\n      title: Universe Meta\n      type: object\n    errorResponse:\n      properties:\n        status:\n          description: status\n          example: Bad Request\n          type: string\n        timestamp:\n          description: Timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          format: date-time\n          type: string\n        path:\n          description: The Endpoint path {package}/version/{endpoint}\n          example: /factset-concordance/v2/{endpoint}\n          type: string\n        message:\n          description: The plain text error message\n          example: Validation Error\n          type: string\n        subErrors:\n          $ref: '#/components/schemas/errorResponse_subErrors'\n      title: Error Response\n      type: object\n    inline_object:\n      properties:\n        universeId:\n          description: The id of the universe that entities should be mapped to. Reference\n            the `/universe` endpoint to create a universe, or view available universes\n            via `/universes`.\n          example: 1\n          type: integer\n        taskName:\n          description: User defined name for the task that will be used to name the\n            output files.\n          example: test31\n          type: string\n        inputFile:\n          description: |\n            The UTF-8 encoded CSV File containing the entity names to be concorded to a FactSet Entity Identifier. The files first row **MUST** include headers as defined in the *Column parameters. Be mindful of casing and spacing in column headers. The input file is posted as a file object in the form. For this reason, the mime type of this post request must be multipart/form-data.\n          format: binary\n          type: string\n        clientIdColumn:\n          description: |\n            Header Name of the column in the input file that contains a unique identifier supplied by the user referred to as a \"clientId\". This clientId can be used to create custom mappings or references.\n          example: ClientId\n          type: string\n        nameColumn:\n          description: |\n            Header name of the column in the input file that contains the Entity Name to be matched.\n          example: NAME\n          type: string\n        countryColumn:\n          description: |\n            Header Name of the column in the input file that contains the country's ISO Code. This is used to filter the candidates before taking a match decision.\n          example: COUNTRY\n          type: string\n        urlColumn:\n          description: |\n            Header Name of the column in the input file that contains the Entity's URL. URL corresponding to the entity name that is used when evaluating candidates for a match.\n          example: URL\n          type: string\n        stateColumn:\n          description: |\n            Header Name of the column in the input file that contains the two letter State Code of the state or province where the Entity is located. Currently, only US state codes are supported.\n          example: STATE\n          type: string\n        includeEntityType:\n          description: |\n            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**\n          items:\n            example: PUB\n            maxLength: 3\n            minLength: 3\n            type: string\n          type: array\n        excludeEntityType:\n          description: |\n            Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Entities with these types will be excluded from the decisions.\n            It is a global option used to filter the candidates before taking a match decision.\n            Candidates with an entity type specified will *not* be considered for the final match result.\n            **Do not include within `inputFile`.**\n          items:\n            example: EXT\n            maxLength: 3\n            minLength: 3\n            type: string\n          type: array\n        includeEntitySubType:\n          description: |\n            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas. **Do not include within `inputFile`.**\n          items:\n            example: PR\n            maxLength: 2\n            minLength: 2\n            type: string\n          type: array\n        excludeEntitySubType:\n          description: |\n            Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.\n            **Do not include within `inputFile`.**\n          items:\n            example: IB\n            maxLength: 2\n            minLength: 2\n            type: string\n          type: array\n      required:\n      - clientIdColumn\n      - inputFile\n      - nameColumn\n      - taskName\n      - universeId\n      type: object\n    EntityMatchRequest_input:\n      example:\n        country: US\n        clientId: abc-123\n        name: Amazon\n        state: CT\n        url: www.amazon.com\n      properties:\n        name:\n          description: The Name of the entity to match.\n          example: Amazon\n          type: string\n        clientId:\n          description: |\n            A unique identifier supplied by the user. ClientId is saved to the user's Concordance universe and will be used as the identifier for that entity within the universe.\n          example: abc-123\n          type: string\n        country:\n          description: |\n            ISO2 country code corresponding to the entity name that is used when evaluating candidates for a match. For a list of ISO Country codes, visit [OA 8754](https://my.apps.factset.com/oa/pages/8754).\n          example: US\n          maxLength: 2\n          minLength: 2\n          type: string\n        state:\n          description: |\n            Two-character state code corresponding to the entity name that is used when evaluating candidates for a match. Currently, only US state codes are supported.Two character state or province code to filter on.\n          example: CT\n          maxLength: 2\n          minLength: 2\n          type: string\n        url:\n          description: |\n            URL corresponding to the entity name that is used when evaluating candidates for a match.\n          example: www.amazon.com\n          type: string\n      required:\n      - name\n      type: object\n    ErrorResponse_subErrors:\n      description: Sub-errors related to the error message. Null if not applicable.\n      properties:\n        object:\n          description: the operation ID\n          type: string\n        field:\n          description: Parameter Field Name\n          type: string\n        message:\n          description: Error message\n          type: string\n        rejectedValue:\n          description: Rejected Values in an Array\n          items:\n            type: string\n          type: array\n      type: object\n    errorResponse_subErrors:\n      description: Sub-Errors related to the error message. Null if not applicable.\n      properties:\n        object:\n          description: The operation ID\n          type: string\n        field:\n          description: Parameter Field Name\n          type: string\n        message:\n          description: Error message\n          type: string\n        rejectedValue:\n          description: Rejected Values in an Array\n          items:\n            type: string\n          type: array\n      type: object\n  securitySchemes:\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\n    FactSetApiKey:\n      scheme: basic\n      type: http\n\n"
		}
	},
	"Error": "buildIR: make ir: path \"/factset-concordance/v2/universe\": post: responses: default: contents: application/json: schema: save referenced type: reference \"#/components/schemas/ErrorResponse\" type name conflict: \"ErrorResponse\"",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}