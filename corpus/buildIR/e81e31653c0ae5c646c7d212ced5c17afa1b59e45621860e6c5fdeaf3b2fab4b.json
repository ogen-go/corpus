{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aerospike/aerospike-rest-gateway"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "docs/openapi.json",
			"byteSize": 628650,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Aerospike REST Gateway\",\n    \"description\": \"REST Interface for Aerospike Database.\",\n    \"contact\": {\n      \"name\": \"Aerospike, Inc.\",\n      \"url\": \"https://www.aerospike.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0\"\n    },\n    \"version\": \"2.0.1\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:8080\",\n      \"description\": \"Generated server url\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Scan Operations\",\n      \"description\": \"Read records in specified namespace, set.\"\n    },\n    {\n      \"name\": \"Admin Operations\",\n      \"description\": \"Manage users and privileges.\"\n    },\n    {\n      \"name\": \"Secondary Index methods\",\n      \"description\": \"Manage secondary indexes.\"\n    },\n    {\n      \"name\": \"Key Value Operations\",\n      \"description\": \"Perform simple operations on a single record.\"\n    },\n    {\n      \"name\": \"Query Operations\",\n      \"description\": \"Read records in specified namespace, set.\"\n    },\n    {\n      \"name\": \"Cluster information operations\",\n      \"description\": \"Retrieve basic information about the Aerospike cluster.\"\n    },\n    {\n      \"name\": \"Execute Operations\",\n      \"description\": \"Execute operations in background scan/query.\"\n    },\n    {\n      \"name\": \"Info Operations\",\n      \"description\": \"Send info commands to nodes in the Aerospike cluster.\"\n    },\n    {\n      \"name\": \"Document API Operations\",\n      \"description\": \"Perform operations on records using JSONPath queries.\"\n    },\n    {\n      \"name\": \"Truncate Operations\",\n      \"description\": \"Remove multiple records from the server.\"\n    },\n    {\n      \"name\": \"Batch Operations\",\n      \"description\": \"Retrieve multiple records from the server.\"\n    },\n    {\n      \"name\": \"Operate operations\",\n      \"description\": \"Perform multiple operations atomically on a single record.\"\n    }\n  ],\n  \"paths\": {\n    \"/v1/kvs/{namespace}/{set}/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Return the metadata and bins for a record.\",\n        \"operationId\": \"getRecordNamespaceSetKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Metadata and bins for a record returned successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Replace the bins of the specified record.\",\n        \"operationId\": \"replaceRecordNamespaceSetKey_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"requestParams\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"examples\": {\n                \"Bins request body example\": {\n                  \"description\": \"Bins request body example\",\n                  \"value\": {\n                    \"bin1\": 5,\n                    \"bin2\": \"hello\",\n                    \"bin3\": [\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\": {\n                      \"one\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation mismatch for operation.\",\n            \"content\": {\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Modified record successfully, no content expected.\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Create a new record with the provided bins into the record.\",\n        \"operationId\": \"createRecordNamespaceSetKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"examples\": {\n                \"Bins request body example\": {\n                  \"description\": \"Bins request body example\",\n                  \"value\": {\n                    \"bin1\": 5,\n                    \"bin2\": \"hello\",\n                    \"bin3\": [\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\": {\n                      \"one\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Created a new record successfully.\"\n          },\n          \"404\": {\n            \"description\": \"Namespace does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Record Already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Delete the specified record.\",\n        \"operationId\": \"deleteRecordNamespaceSetKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation mismatch for operation.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Deleted a record successfully, no content expected.\"\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"head\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"recordExistsNamespaceSetKey\",\n        \"operationId\": \"Check if a record exists\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Record exists indication returned successfully.\"\n          },\n          \"404\": {\n            \"description\": \"Record does not exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Merge the provided bins into the record.\",\n        \"operationId\": \"updateRecordNamespaceSetKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"examples\": {\n                \"Bins request body example\": {\n                  \"description\": \"Bins request body example\",\n                  \"value\": {\n                    \"bin1\": 5,\n                    \"bin2\": \"hello\",\n                    \"bin3\": [\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\": {\n                      \"one\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation mismatch for operation.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record does not exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Modified record successfully, no content expected.\"\n          }\n        }\n      }\n    },\n    \"/v1/kvs/{namespace}/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Return the metadata and bins for a record.\",\n        \"operationId\": \"getRecordNamespaceKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Metadata and bins for a record returned successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Replace the bins of the specified record.\",\n        \"operationId\": \"replaceRecordNamespaceKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"examples\": {\n                \"Bins request body example\": {\n                  \"description\": \"Bins request body example\",\n                  \"value\": {\n                    \"bin1\": 5,\n                    \"bin2\": \"hello\",\n                    \"bin3\": [\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\": {\n                      \"one\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation mismatch for operation.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Modified record successfully, no content expected.\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Create a new record with the provided bins into the record.\",\n        \"operationId\": \"createRecordNamespaceKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"examples\": {\n                \"Bins request body example\": {\n                  \"description\": \"Bins request body example\",\n                  \"value\": {\n                    \"bin1\": 5,\n                    \"bin2\": \"hello\",\n                    \"bin3\": [\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\": {\n                      \"one\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Created a new record successfully.\"\n          },\n          \"404\": {\n            \"description\": \"Namespace does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Record Already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Delete the specified record.\",\n        \"operationId\": \"deleteRecordNamespaceKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation mismatch for operation.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Deleted a record successfully, no content expected.\"\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"head\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Check if a record exists\",\n        \"operationId\": \"recordExistsNamespaceKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Record exists indication returned successfully.\"\n          },\n          \"404\": {\n            \"description\": \"Record does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Key Value Operations\"\n        ],\n        \"summary\": \"Merge the provided bins into the record.\",\n        \"operationId\": \"updateRecordNamespaceKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"examples\": {\n                \"Bins request body example\": {\n                  \"description\": \"Bins request body example\",\n                  \"value\": {\n                    \"bin1\": 5,\n                    \"bin2\": \"hello\",\n                    \"bin3\": [\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\": {\n                      \"one\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to access the resource\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation mismatch for operation.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record does not exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Modified record successfully, no content expected.\"\n          }\n        }\n      }\n    },\n    \"/v1/document/{namespace}/{set}/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Retrieve the object in the document with key documentKey that is referenced by the JSON path.\",\n        \"operationId\": \"getDocumentObjectSet\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Document read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"examples\": {\n                  \"Get document object response example\": {\n                    \"description\": \"Get document object response example\",\n                    \"value\": {\n                      \"docBin2\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"examples\": {\n                  \"Get document object response example\": {\n                    \"description\": \"Get document object response example\",\n                    \"value\": {\n                      \"docBin2\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Put a document.\",\n        \"operationId\": \"putDocumentObjectSet\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"JSON Object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"examples\": {\n                \"JSON object request body example\": {\n                  \"description\": \"JSON object request body example\",\n                  \"value\": \"str3\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to put a document has been accepted.\"\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Append an object to a list in a document specified by a JSON path.\",\n        \"operationId\": \"appendDocumentObjectSet\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"JSON Object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"examples\": {\n                \"JSON object request body example\": {\n                  \"description\": \"JSON object request body example\",\n                  \"value\": \"str3\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to append an object to a list in a document has been accepted.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Delete an object in a document specified by a JSON path.\",\n        \"operationId\": \"deleteDocumentObjectSet\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Deleted an object in a document successfully, no content expected.\"\n          }\n        }\n      }\n    },\n    \"/v1/document/{namespace}/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Retrieve the object in the document with key documentKey that is referenced by the JSON path.\",\n        \"operationId\": \"getDocumentObject\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Document read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"examples\": {\n                  \"Get document object response example\": {\n                    \"description\": \"Get document object response example\",\n                    \"value\": {\n                      \"docBin2\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"examples\": {\n                  \"Get document object response example\": {\n                    \"description\": \"Get document object response example\",\n                    \"value\": {\n                      \"docBin2\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\": [\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Put a document.\",\n        \"operationId\": \"putDocumentObject\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"JSON Object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"examples\": {\n                \"JSON object request body example\": {\n                  \"description\": \"JSON object request body example\",\n                  \"value\": \"str3\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to put a document has been accepted.\"\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Append an object to a list in a document specified by a JSON path.\",\n        \"operationId\": \"appendDocumentObject\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"JSON Object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"examples\": {\n                \"JSON object request body example\": {\n                  \"description\": \"JSON object request body example\",\n                  \"value\": \"str3\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to append an object to a list in a document has been accepted.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Document API Operations\"\n        ],\n        \"summary\": \"Delete an object in a document specified by a JSON path.\",\n        \"operationId\": \"deleteDocumentObject\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"User key for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"jsonPath\",\n            \"in\": \"query\",\n            \"description\": \"JSONPath query parameter.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Specify a set of bins to handle the JSONPath query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"Deleted an object in a document successfully, no content expected.\"\n          }\n        }\n      }\n    },\n    \"/v2/operate/{namespace}/{set}/{key}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform multiple operations atomically on the specified record.\",\n        \"operationId\": \"operateNamespaceSetKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations on a record performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OperateResponseRecordBody\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OperateResponseRecordBody\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/operate/{namespace}/{key}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform multiple operations atomically on the specified record.\",\n        \"operationId\": \"operateNamespaceKey\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations on a record performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OperateResponseRecordBody\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OperateResponseRecordBody\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/operate/read/{namespace}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform read operations on multiple records.\",\n        \"operationId\": \"operateBatchNamespace\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"allowInline\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"allowInlineSSD\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread for SSD namespaces. If false, the batch will always be processed in separate service threads. Server versions \\u003c 6.0 ignore this field.\\nInline processing can introduce the possibility of unfairness because the server can process the entire batch before moving onto the next command.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentThreads\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"respondAllKeys\",\n            \"in\": \"query\",\n            \"description\": \"Should all batch keys be attempted regardless of errors. This field is used on both the client and server. The client handles node specific errors and the server handles key specific errors.\\nIf true, every batch key is attempted regardless of previous key specific errors. Node specific errors such as timeouts stop keys to that node, but keys directed at other nodes will continue to be processed.\\nIf false, the server will stop the batch to its node on most key specific errors. The exceptions are com.aerospike.client.ResultCode.KEY_NOT_FOUND_ERROR and com.aerospike.client.ResultCode.FILTERED_OUT which never stop the batch. The client will stop the entire batch on node specific errors for sync commands that are run in sequence (maxConcurrentThreads \\u003d\\u003d 1). The client will not stop the entire batch for async commands or sync commands run in parallel.\\nServer versions \\u003c 6.0 do not support this field and treat this value as false for key specific errors.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Record keys to perform operations on.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Read operations on multiple records performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/operate/read/{namespace}/{set}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform read operations on multiple records.\",\n        \"operationId\": \"operateBatchNamespaceSet\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"allowInline\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"allowInlineSSD\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread for SSD namespaces. If false, the batch will always be processed in separate service threads. Server versions \\u003c 6.0 ignore this field.\\nInline processing can introduce the possibility of unfairness because the server can process the entire batch before moving onto the next command.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentThreads\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"respondAllKeys\",\n            \"in\": \"query\",\n            \"description\": \"Should all batch keys be attempted regardless of errors. This field is used on both the client and server. The client handles node specific errors and the server handles key specific errors.\\nIf true, every batch key is attempted regardless of previous key specific errors. Node specific errors such as timeouts stop keys to that node, but keys directed at other nodes will continue to be processed.\\nIf false, the server will stop the batch to its node on most key specific errors. The exceptions are com.aerospike.client.ResultCode.KEY_NOT_FOUND_ERROR and com.aerospike.client.ResultCode.FILTERED_OUT which never stop the batch. The client will stop the entire batch on node specific errors for sync commands that are run in sequence (maxConcurrentThreads \\u003d\\u003d 1). The client will not stop the entire batch for async commands or sync commands run in parallel.\\nServer versions \\u003c 6.0 do not support this field and treat this value as false for key specific errors.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Record keys to perform operations on.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OperateRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Read operations on multiple records performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/execute/scan/{namespace}\": {\n      \"post\": {\n        \"tags\": [\n          \"Execute Operations\"\n        ],\n        \"summary\": \"Perform multiple operations in background scan/query.\",\n        \"operationId\": \"executeScanNamespace\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ExecuteRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ExecuteRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations in background scan/query run successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/execute/scan/{namespace}/{set}\": {\n      \"post\": {\n        \"tags\": [\n          \"Execute Operations\"\n        ],\n        \"summary\": \"Perform multiple operations in background scan/query.\",\n        \"operationId\": \"executeScanNamespaceSet\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ExecuteRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ExecuteRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations in background scan/query run successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/query/{namespace}\": {\n      \"post\": {\n        \"tags\": [\n          \"Query Operations\"\n        ],\n        \"summary\": \"Return multiple records from the server in a query request.\",\n        \"operationId\": \"performNamespaceQuery\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"includeBinData\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"failOnClusterChange\",\n            \"in\": \"query\",\n            \"description\": \"Terminate query if cluster is in migration state. If the server supports partition queries or the query filter is null (scan), this field is ignored.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"shortQuery\",\n            \"in\": \"query\",\n            \"description\": \"Is query expected to return less than 100 records. If true, the server will optimize the query for a small record set. This field is ignored for aggregation queries, background queries and server versions \\u003c 6.0.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"indexName\",\n            \"in\": \"query\",\n            \"description\": \"Optional query index filter. This filter is applied to the secondary index on query. Query index filters must reference a bin which has a secondary index defined.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxRecords\",\n            \"in\": \"query\",\n            \"description\": \"Number of records to return. Required for pagination. This number is divided by the number of nodes involved in the query. The actual number of records returned may be less than maxRecords if node record counts are small and unbalanced across nodes.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10000\n            }\n          },\n          {\n            \"name\": \"recordsPerSecond\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Scan multiple records successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/query/{namespace}/{set}\": {\n      \"post\": {\n        \"tags\": [\n          \"Query Operations\"\n        ],\n        \"summary\": \"Return multiple records from the server in a query request.\",\n        \"operationId\": \"performNamespaceSetQuery\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"includeBinData\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"failOnClusterChange\",\n            \"in\": \"query\",\n            \"description\": \"Terminate query if cluster is in migration state. If the server supports partition queries or the query filter is null (scan), this field is ignored.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"shortQuery\",\n            \"in\": \"query\",\n            \"description\": \"Is query expected to return less than 100 records. If true, the server will optimize the query for a small record set. This field is ignored for aggregation queries, background queries and server versions \\u003c 6.0.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"indexName\",\n            \"in\": \"query\",\n            \"description\": \"Optional query index filter. This filter is applied to the secondary index on query. Query index filters must reference a bin which has a secondary index defined.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxRecords\",\n            \"in\": \"query\",\n            \"description\": \"Number of records to return. Required for pagination. This number is divided by the number of nodes involved in the query. The actual number of records returned may be less than maxRecords if node record counts are small and unbalanced across nodes.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10000\n            }\n          },\n          {\n            \"name\": \"recordsPerSecond\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Query multiple records successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/query/{namespace}/{set}/{begin}/{count}\": {\n      \"post\": {\n        \"tags\": [\n          \"Query Operations\"\n        ],\n        \"summary\": \"Return multiple records from the server in a query request using the provided partition range.\",\n        \"operationId\": \"performNamespaceSetRangeQuery\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"begin\",\n            \"in\": \"path\",\n            \"description\": \"Start partition id (0 - 4095)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"count\",\n            \"in\": \"path\",\n            \"description\": \"Number of partitions\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"includeBinData\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"failOnClusterChange\",\n            \"in\": \"query\",\n            \"description\": \"Terminate query if cluster is in migration state. If the server supports partition queries or the query filter is null (scan), this field is ignored.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"shortQuery\",\n            \"in\": \"query\",\n            \"description\": \"Is query expected to return less than 100 records. If true, the server will optimize the query for a small record set. This field is ignored for aggregation queries, background queries and server versions \\u003c 6.0.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"indexName\",\n            \"in\": \"query\",\n            \"description\": \"Optional query index filter. This filter is applied to the secondary index on query. Query index filters must reference a bin which has a secondary index defined.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxRecords\",\n            \"in\": \"query\",\n            \"description\": \"Number of records to return. Required for pagination. This number is divided by the number of nodes involved in the query. The actual number of records returned may be less than maxRecords if node record counts are small and unbalanced across nodes.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10000\n            }\n          },\n          {\n            \"name\": \"recordsPerSecond\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Query multiple records successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/query/{namespace}/{begin}/{count}\": {\n      \"post\": {\n        \"tags\": [\n          \"Query Operations\"\n        ],\n        \"summary\": \"Return multiple records from the server in a query request using the provided partition range.\",\n        \"operationId\": \"performNamespaceRangeQuery\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"begin\",\n            \"in\": \"path\",\n            \"description\": \"Start partition id (0 - 4095)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"count\",\n            \"in\": \"path\",\n            \"description\": \"Number of partitions\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"includeBinData\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"failOnClusterChange\",\n            \"in\": \"query\",\n            \"description\": \"Terminate query if cluster is in migration state. If the server supports partition queries or the query filter is null (scan), this field is ignored.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"shortQuery\",\n            \"in\": \"query\",\n            \"description\": \"Is query expected to return less than 100 records. If true, the server will optimize the query for a small record set. This field is ignored for aggregation queries, background queries and server versions \\u003c 6.0.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"indexName\",\n            \"in\": \"query\",\n            \"description\": \"Optional query index filter. This filter is applied to the secondary index on query. Query index filters must reference a bin which has a secondary index defined.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxRecords\",\n            \"in\": \"query\",\n            \"description\": \"Number of records to return. Required for pagination. This number is divided by the number of nodes involved in the query. The actual number of records returned may be less than maxRecords if node record counts are small and unbalanced across nodes.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10000\n            }\n          },\n          {\n            \"name\": \"recordsPerSecond\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"recordBins\",\n            \"in\": \"query\",\n            \"description\": \"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequestBody\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Scan multiple records successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponseBody\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operate/{namespace}/{set}/{key}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform multiple operations atomically on the specified record.\",\n        \"operationId\": \"operateNamespaceSetKey_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations on a record performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/v1/operate/{namespace}/{key}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform multiple operations atomically on the specified record.\",\n        \"operationId\": \"operateNamespaceKey_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"Userkey for the record.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations on a record performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/v1/operate/read/{namespace}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform read operations on multiple records.\",\n        \"operationId\": \"operateBatchNamespace_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"allowInline\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"allowInlineSSD\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread for SSD namespaces. If false, the batch will always be processed in separate service threads. Server versions \\u003c 6.0 ignore this field.\\nInline processing can introduce the possibility of unfairness because the server can process the entire batch before moving onto the next command.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentThreads\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"respondAllKeys\",\n            \"in\": \"query\",\n            \"description\": \"Should all batch keys be attempted regardless of errors. This field is used on both the client and server. The client handles node specific errors and the server handles key specific errors.\\nIf true, every batch key is attempted regardless of previous key specific errors. Node specific errors such as timeouts stop keys to that node, but keys directed at other nodes will continue to be processed.\\nIf false, the server will stop the batch to its node on most key specific errors. The exceptions are com.aerospike.client.ResultCode.KEY_NOT_FOUND_ERROR and com.aerospike.client.ResultCode.FILTERED_OUT which never stop the batch. The client will stop the entire batch on node specific errors for sync commands that are run in sequence (maxConcurrentThreads \\u003d\\u003d 1). The client will not stop the entire batch for async commands or sync commands run in parallel.\\nServer versions \\u003c 6.0 do not support this field and treat this value as false for key specific errors.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Record keys to perform operations on.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Read operations on multiple records performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/v1/operate/read/{namespace}/{set}\": {\n      \"post\": {\n        \"tags\": [\n          \"Operate operations\"\n        ],\n        \"summary\": \"Perform read operations on multiple records.\",\n        \"operationId\": \"operateBatchNamespaceSet_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"keytype\",\n            \"in\": \"query\",\n            \"description\": \"The Type of the userKey.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\": \"allowInline\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"allowInlineSSD\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread for SSD namespaces. If false, the batch will always be processed in separate service threads. Server versions \\u003c 6.0 ignore this field.\\nInline processing can introduce the possibility of unfairness because the server can process the entire batch before moving onto the next command.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentThreads\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"respondAllKeys\",\n            \"in\": \"query\",\n            \"description\": \"Should all batch keys be attempted regardless of errors. This field is used on both the client and server. The client handles node specific errors and the server handles key specific errors.\\nIf true, every batch key is attempted regardless of previous key specific errors. Node specific errors such as timeouts stop keys to that node, but keys directed at other nodes will continue to be processed.\\nIf false, the server will stop the batch to its node on most key specific errors. The exceptions are com.aerospike.client.ResultCode.KEY_NOT_FOUND_ERROR and com.aerospike.client.ResultCode.FILTERED_OUT which never stop the batch. The client will stop the entire batch on node specific errors for sync commands that are run in sequence (maxConcurrentThreads \\u003d\\u003d 1). The client will not stop the entire batch for async commands or sync commands run in parallel.\\nServer versions \\u003c 6.0 do not support this field and treat this value as false for key specific errors.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Record keys to perform operations on.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Read operations on multiple records performed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/v1/info\": {\n      \"post\": {\n        \"tags\": [\n          \"Info Operations\"\n        ],\n        \"summary\": \"Send a list of info commands to a random node in the cluster\",\n        \"operationId\": \"infoAny\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"timeout\",\n            \"in\": \"query\",\n            \"description\": \"Info command socket timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"An array of info commands to send to the server. See https://www.aerospike.com/docs/reference/info/ for a list of valid commands.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"Array of info commands request body example\": {\n                  \"description\": \"Array of info commands request body example\",\n                  \"value\": [\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"Array of info commands request body example\": {\n                  \"description\": \"Array of info commands request body example\",\n                  \"value\": [\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to perform the info command.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Commands sent successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"examples\": {\n                  \"Info response example\": {\n                    \"description\": \"Info response example\",\n                    \"value\": {\n                      \"edition\": \"Aerospike Enterprise Edition\",\n                      \"name\": \"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"examples\": {\n                  \"Info response example\": {\n                    \"description\": \"Info response example\",\n                    \"value\": {\n                      \"edition\": \"Aerospike Enterprise Edition\",\n                      \"name\": \"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/info/{node}\": {\n      \"post\": {\n        \"tags\": [\n          \"Info Operations\"\n        ],\n        \"summary\": \"Send a list of info commands to a specific node in the cluster.\",\n        \"operationId\": \"infoNode\",\n        \"parameters\": [\n          {\n            \"name\": \"node\",\n            \"in\": \"path\",\n            \"description\": \"The node ID for the node which will receive the info commands.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"An array of info commands to send to the server. See https://www.aerospike.com/docs/reference/info/ for a list of valid commands.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"Array of info commands request body example\": {\n                  \"description\": \"Array of info commands request body example\",\n                  \"value\": [\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"Array of info commands request body example\": {\n                  \"description\": \"Array of info commands request body example\",\n                  \"value\": [\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to perform the info command\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The specified Node does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Commands sent successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"examples\": {\n                  \"Info response example\": {\n                    \"description\": \"Info response example\",\n                    \"value\": {\n                      \"edition\": \"Aerospike Enterprise Edition\",\n                      \"name\": \"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"examples\": {\n                  \"Info response example\": {\n                    \"description\": \"Info response example\",\n                    \"value\": {\n                      \"edition\": \"Aerospike Enterprise Edition\",\n                      \"name\": \"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/index\": {\n      \"get\": {\n        \"tags\": [\n          \"Secondary Index methods\"\n        ],\n        \"summary\": \"Return information about multiple secondary indexes.\",\n        \"operationId\": \"indexInformation\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"namespace\",\n            \"in\": \"query\",\n            \"description\": \"If specified, the list of returned indices will only contain entries from this namespace.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Information about secondary indexes read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientIndex\"\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientIndex\"\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified namespace not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Secondary Index methods\"\n        ],\n        \"summary\": \"Create a secondary index.\",\n        \"operationId\": \"createIndex\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientIndex\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientIndex\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"409\": {\n            \"description\": \"Index with the same name already exists, or equivalent index exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid index creation parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to create a secondary index has been accepted.\"\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/execute/scan/{namespace}\": {\n      \"post\": {\n        \"tags\": [\n          \"Execute Operations\"\n        ],\n        \"summary\": \"Perform multiple operations in background scan/query.\",\n        \"operationId\": \"executeScanNamespace_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations in background scan/query run successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/v1/execute/scan/{namespace}/{set}\": {\n      \"post\": {\n        \"tags\": [\n          \"Execute Operations\"\n        ],\n        \"summary\": \"Perform multiple operations in background scan/query.\",\n        \"operationId\": \"executeScanNamespaceSet_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expiration\",\n            \"in\": \"query\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"generation\",\n            \"in\": \"query\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"durableDelete\",\n            \"in\": \"query\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"respondAllOps\",\n            \"in\": \"query\",\n            \"description\": \"For client operate(), return a result for every operation.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"commitLevel\",\n            \"in\": \"query\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COMMIT_ALL\",\n                \"COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"generationPolicy\",\n            \"in\": \"query\",\n            \"description\": \"Qualify how to handle record writes based on record generation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"NONE\",\n                \"EXPECT_GEN_EQUAL\",\n                \"EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\": \"recordExistsAction\",\n            \"in\": \"query\",\n            \"description\": \"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"UPDATE\",\n                \"UPDATE_ONLY\",\n                \"REPLACE\",\n                \"REPLACE_ONLY\",\n                \"CREATE_ONLY\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"description\": \"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Multiple operations in background scan/query run successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Generation conflict.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/v1/batch\": {\n      \"post\": {\n        \"tags\": [\n          \"Batch Operations\"\n        ],\n        \"summary\": \"Return multiple records from the server in a single request.\",\n        \"operationId\": \"performBatchGet\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"allowInline\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"allowInlineSSD\",\n            \"in\": \"query\",\n            \"description\": \"Allow batch to be processed immediately in the server\\u0027s receiving thread for SSD namespaces. If false, the batch will always be processed in separate service threads. Server versions \\u003c 6.0 ignore this field.\\nInline processing can introduce the possibility of unfairness because the server can process the entire batch before moving onto the next command.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentThreads\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"respondAllKeys\",\n            \"in\": \"query\",\n            \"description\": \"Should all batch keys be attempted regardless of errors. This field is used on both the client and server. The client handles node specific errors and the server handles key specific errors.\\nIf true, every batch key is attempted regardless of previous key specific errors. Node specific errors such as timeouts stop keys to that node, but keys directed at other nodes will continue to be processed.\\nIf false, the server will stop the batch to its node on most key specific errors. The exceptions are com.aerospike.client.ResultCode.KEY_NOT_FOUND_ERROR and com.aerospike.client.ResultCode.FILTERED_OUT which never stop the batch. The client will stop the entire batch on node specific errors for sync commands that are run in sequence (maxConcurrentThreads \\u003d\\u003d 1). The client will not stop the entire batch for async commands or sync commands run in parallel.\\nServer versions \\u003c 6.0 do not support this field and treat this value as false for key specific errors.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/BatchDelete\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/BatchRead\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/BatchUDF\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/BatchWrite\"\n                    }\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/BatchDelete\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/BatchRead\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/BatchUDF\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/BatchWrite\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Non existent namespace used in one or more key.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Batch Operation completed successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BatchRecordResponse\"\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BatchRecordResponse\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/user\": {\n      \"get\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Return a list of information about users.\",\n        \"operationId\": \"getUsers\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to read user information.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Users information read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                },\n                \"examples\": {\n                  \"Users response example\": {\n                    \"description\": \"Users response example\",\n                    \"value\": [\n                      {\n                        \"name\": \"user1\",\n                        \"roles\": [\n                          \"sys-admin\"\n                        ],\n                        \"readInfo\": [\n                          0\n                        ],\n                        \"writeInfo\": [\n                          0\n                        ],\n                        \"connsInUse\": 0\n                      }\n                    ]\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                },\n                \"examples\": {\n                  \"Users response example\": {\n                    \"description\": \"Users response example\",\n                    \"value\": [\n                      {\n                        \"name\": \"user1\",\n                        \"roles\": [\n                          \"sys-admin\"\n                        ],\n                        \"readInfo\": [\n                          0\n                        ],\n                        \"writeInfo\": [\n                          0\n                        ],\n                        \"connsInUse\": 0\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Create a new user.\",\n        \"operationId\": \"createUser\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientUserModel\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientUserModel\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Request to create a user has been accepted.\"\n          },\n          \"400\": {\n            \"description\": \"Invalid user creation parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"User already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to create users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/user/{user}/role\": {\n      \"post\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Grant a set of roles to the specified user.\",\n        \"operationId\": \"grantRoles\",\n        \"parameters\": [\n          {\n            \"name\": \"user\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"List of roles request body example\": {\n                  \"description\": \"List of roles request body example\",\n                  \"value\": [\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"List of roles request body example\": {\n                  \"description\": \"List of roles request body example\",\n                  \"value\": [\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid role parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to grant set of roles to a user has been accepted.\"\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified user not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to modify users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role\": {\n      \"get\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Return a list of all roles registered with the Aerospike cluster.\",\n        \"operationId\": \"getRoles\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Roles information read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRole\"\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RestClientRole\"\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to read role information.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Create a role on the Aerospike cluster.\",\n        \"operationId\": \"createRole\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientRole\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientRole\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid role creation parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to create roles.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Role already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to create a role has been accepted.\"\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}/quota\": {\n      \"post\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Set maximum reads/writes per second limits for a role.\",\n        \"operationId\": \"setRoleQuotas\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the role to which quotas will be set.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientRoleQuota\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestClientRoleQuota\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid role creation parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to create roles.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to modify a role has been accepted.\"\n          },\n          \"409\": {\n            \"description\": \"Role already exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}/privilege\": {\n      \"post\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Grant a list of privileges to a specific role.\",\n        \"operationId\": \"grantPrivileges\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the role to which privileges will be granted.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to modify roles.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified role not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to modify a role has been accepted.\"\n          },\n          \"400\": {\n            \"description\": \"Invalid privilege parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/user/{user}\": {\n      \"get\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Return information about a specific user.\",\n        \"operationId\": \"getUser\",\n        \"parameters\": [\n          {\n            \"name\": \"user\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified user not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"User information read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"examples\": {\n                  \"User response example\": {\n                    \"description\": \"User response example\",\n                    \"value\": {\n                      \"name\": \"user1\",\n                      \"roles\": [\n                        \"sys-admin\"\n                      ],\n                      \"readInfo\": [\n                        0\n                      ],\n                      \"writeInfo\": [\n                        0\n                      ],\n                      \"connsInUse\": 0\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"examples\": {\n                  \"User response example\": {\n                    \"description\": \"User response example\",\n                    \"value\": {\n                      \"name\": \"user1\",\n                      \"roles\": [\n                        \"sys-admin\"\n                      ],\n                      \"readInfo\": [\n                        0\n                      ],\n                      \"writeInfo\": [\n                        0\n                      ],\n                      \"connsInUse\": 0\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to read user information.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Remove a user.\",\n        \"operationId\": \"dropUser\",\n        \"parameters\": [\n          {\n            \"name\": \"user\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to delete users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified user not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to delete a user has been accepted.\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Change the password of the specified user.\",\n        \"operationId\": \"changePassword\",\n        \"parameters\": [\n          {\n            \"name\": \"user\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified user not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to change user\\u0027s password has been accepted.\"\n          },\n          \"403\": {\n            \"description\": \"Not authorized to modify users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/user/{user}/role/delete\": {\n      \"patch\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Revoke a set of roles from the specified user.\",\n        \"operationId\": \"revokeRoles\",\n        \"parameters\": [\n          {\n            \"name\": \"user\",\n            \"in\": \"path\",\n            \"description\": \"The user from which to revoke roles\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"List of roles request body example\": {\n                  \"description\": \"List of roles request body example\",\n                  \"value\": [\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": {\n                \"List of roles request body example\": {\n                  \"description\": \"List of roles request body example\",\n                  \"value\": [\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid role parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified user not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to revoke set of roles from a user has been accepted.\"\n          },\n          \"403\": {\n            \"description\": \"Not authorized to modify users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}/privilege/delete\": {\n      \"patch\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Remove a list of privileges from a specific role.\",\n        \"operationId\": \"revokePrivileges\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the role from which privileges will be removed.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            },\n            \"application/msgpack\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not authorized to modify roles.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified role not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to modify a role has been accepted.\"\n          },\n          \"400\": {\n            \"description\": \"Invalid privilege parameters.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/execute/scan/status/{taskId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Execute Operations\"\n        ],\n        \"description\": \"Get status of background scan by task id.\",\n        \"operationId\": \"executeScanStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"taskId\",\n            \"in\": \"path\",\n            \"description\": \"Background scan task id.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Status of background scan read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTaskStatus\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTaskStatus\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/scan/{namespace}\": {\n      \"get\": {\n        \"tags\": [\n          \"Scan Operations\"\n        ],\n        \"summary\": \"Return multiple records from the server in a scan request.\",\n        \"operationId\": \"performScan\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxRecords\",\n            \"in\": \"query\",\n            \"description\": \"Number of records to return. Required for pagination. This number is divided by the number of nodes involved in the query. The actual number of records returned may be less than maxRecords if node record counts are small and unbalanced across nodes.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"recordsPerSecond\",\n            \"in\": \"query\",\n            \"description\": \"Limit returned records per second (rps) rate for each server.\\nDo not apply rps limit if recordsPerSecond is zero.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"concurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Should scan requests be issued in parallel.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"includeBinData\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Scan multiple records successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientScanResponse\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientScanResponse\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/scan/{namespace}/{set}\": {\n      \"get\": {\n        \"tags\": [\n          \"Scan Operations\"\n        ],\n        \"summary\": \"Return multiple records from the server in a scan request.\",\n        \"operationId\": \"performScan_1\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"Namespace for the record; equivalent to database name.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"Set for the record; equivalent to database table.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxRecords\",\n            \"in\": \"query\",\n            \"description\": \"Number of records to return. Required for pagination. This number is divided by the number of nodes involved in the query. The actual number of records returned may be less than maxRecords if node record counts are small and unbalanced across nodes.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"recordsPerSecond\",\n            \"in\": \"query\",\n            \"description\": \"Limit returned records per second (rps) rate for each server.\\nDo not apply rps limit if recordsPerSecond is zero.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxConcurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"concurrentNodes\",\n            \"in\": \"query\",\n            \"description\": \"Should scan requests be issued in parallel.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"includeBinData\",\n            \"in\": \"query\",\n            \"description\": \"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"sendKey\",\n            \"in\": \"query\",\n            \"description\": \"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"replica\",\n            \"in\": \"query\",\n            \"description\": \"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MASTER\",\n                \"MASTER_PROLES\",\n                \"SEQUENCE\",\n                \"PREFER_RACK\",\n                \"RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeSC\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SESSION\",\n                \"LINEARIZE\",\n                \"ALLOW_REPLICA\",\n                \"ALLOW_UNAVAILABLE\"\n              ]\n            }\n          },\n          {\n            \"name\": \"readModeAP\",\n            \"in\": \"query\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ONE\",\n                \"ALL\"\n              ]\n            }\n          },\n          {\n            \"name\": \"totalTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Total transaction timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"socketTimeout\",\n            \"in\": \"query\",\n            \"description\": \"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"sleepBetweenRetries\",\n            \"in\": \"query\",\n            \"description\": \"Milliseconds to sleep between retries.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"maxRetries\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"filterexp\",\n            \"in\": \"query\",\n            \"description\": \"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"compress\",\n            \"in\": \"query\",\n            \"description\": \"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Scan multiple records successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientScanResponse\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientScanResponse\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Namespace or set does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/index/{namespace}/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Secondary Index methods\"\n        ],\n        \"summary\": \"Get Information about a single secondary index.\",\n        \"operationId\": \"getIndexStats\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"The namespace containing the index\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the index\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"timeout\",\n            \"in\": \"query\",\n            \"description\": \"Info command socket timeout in milliseconds.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Specified Index does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Information about secondary index read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"examples\": {\n                  \"Secondary index response example\": {\n                    \"description\": \"Secondary index response example\",\n                    \"value\": {\n                      \"loadtime\": 0,\n                      \"delete_success\": 0,\n                      \"keys\": 0,\n                      \"nbtr_memory_used\": 0,\n                      \"delete_error\": 0,\n                      \"load_pct\": 100,\n                      \"stat_gc_recs\": 0,\n                      \"query_basic_abort\": 0,\n                      \"histogram\": false,\n                      \"entries\": 0,\n                      \"query_basic_error\": 0,\n                      \"query_basic_complete\": 0,\n                      \"ibtr_memory_used\": 18432,\n                      \"write_error\": 0,\n                      \"query_basic_avg_rec_count\": 0,\n                      \"write_success\": 0\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"examples\": {\n                  \"Secondary index response example\": {\n                    \"description\": \"Secondary index response example\",\n                    \"value\": {\n                      \"loadtime\": 0,\n                      \"delete_success\": 0,\n                      \"keys\": 0,\n                      \"nbtr_memory_used\": 0,\n                      \"delete_error\": 0,\n                      \"load_pct\": 100,\n                      \"stat_gc_recs\": 0,\n                      \"query_basic_abort\": 0,\n                      \"histogram\": false,\n                      \"entries\": 0,\n                      \"query_basic_error\": 0,\n                      \"query_basic_complete\": 0,\n                      \"ibtr_memory_used\": 18432,\n                      \"write_error\": 0,\n                      \"query_basic_avg_rec_count\": 0,\n                      \"write_success\": 0\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Secondary Index methods\"\n        ],\n        \"summary\": \"Remove a secondary Index\",\n        \"operationId\": \"dropIndex\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"The namespace containing the index\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the index\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Specified Index does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to remove a secondary index has been accepted.\"\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/execute/scan/status/{taskId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Execute Operations\"\n        ],\n        \"description\": \"Get status of background scan by task id.\",\n        \"operationId\": \"executeScanStatus_1\",\n        \"parameters\": [\n          {\n            \"name\": \"taskId\",\n            \"in\": \"path\",\n            \"description\": \"Background scan task id.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Status of background scan read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTaskStatus\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientExecuteTaskStatus\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/v1/cluster\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster information operations\"\n        ],\n        \"summary\": \"Return an object containing information about the Aerospike cluster.\",\n        \"operationId\": \"getClusterInfo\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Cluster information read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"examples\": {\n                  \"Cluster info response example\": {\n                    \"description\": \"Cluster info response example\",\n                    \"value\": {\n                      \"nodes\": [\n                        {\n                          \"name\": \"BB9020011AC4202\"\n                        }\n                      ],\n                      \"namespaces\": [\n                        {\n                          \"sets\": [\n                            {\n                              \"objectCount\": 1,\n                              \"name\": \"junit\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"msgpack\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"executeSet\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"scanSet\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"auth\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"idxDemo\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"truncate\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"otherset\"\n                            }\n                          ],\n                          \"name\": \"test\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\": {\n                \"examples\": {\n                  \"Cluster info response example\": {\n                    \"description\": \"Cluster info response example\",\n                    \"value\": {\n                      \"nodes\": [\n                        {\n                          \"name\": \"BB9020011AC4202\"\n                        }\n                      ],\n                      \"namespaces\": [\n                        {\n                          \"sets\": [\n                            {\n                              \"objectCount\": 1,\n                              \"name\": \"junit\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"msgpack\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"executeSet\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"scanSet\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"auth\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"idxDemo\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"truncate\"\n                            },\n                            {\n                              \"objectCount\": 0,\n                              \"name\": \"otherset\"\n                            }\n                          ],\n                          \"name\": \"test\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Get information about a specific role.\",\n        \"operationId\": \"getRole\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the role whose information should be retrieved.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to read role information.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified role not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Role read successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRole\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientRole\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Admin Operations\"\n        ],\n        \"summary\": \"Remove a specific role from the Aerospike cluster.\",\n        \"operationId\": \"dropRole\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the role to remove.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Specified role not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to remove roles.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to remove a role has been accepted.\"\n          }\n        }\n      }\n    },\n    \"/v1/truncate/{namespace}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Truncate Operations\"\n        ],\n        \"summary\": \"Truncate records in a specified namespace.\",\n        \"operationId\": \"truncateNamespace\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"The namespace whose records will be truncated.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"date\",\n            \"in\": \"query\",\n            \"description\": \"All records last updated before this date/time will be truncated. If not specified, all records will be truncated.\\n This is a string representation of a date time utilizing the ISO-8601 extended offset date-time format. example: 2019-12-03T10:15:30+01:00\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"2019-12-03T10:15:30+01:00\"\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to truncate record has been accepted.\"\n          }\n        }\n      }\n    },\n    \"/v1/truncate/{namespace}/{set}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Truncate Operations\"\n        ],\n        \"summary\": \"Truncate records in a specified namespace and set.\",\n        \"operationId\": \"truncateSet\",\n        \"parameters\": [\n          {\n            \"name\": \"namespace\",\n            \"in\": \"path\",\n            \"description\": \"The namespace whose records will be truncated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"set\",\n            \"in\": \"path\",\n            \"description\": \"The set, in the specified namespace, whose records will be truncated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"date\",\n            \"in\": \"query\",\n            \"description\": \"All records last updated before this date/time will be truncated. If not specified, all records will be truncated.\\n This is a string representation of a date time utilizing the ISO-8601 extended offset date-time format. example: 2019-12-03T10:15:30+01:00\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"2019-12-03T10:15:30+01:00\"\n          },\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid parameters or request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"REST Gateway encountered an error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not authorized to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Request to truncate record has been accepted.\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"RestClientError\": {\n        \"required\": [\n          \"inDoubt\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"A message describing the cause of the error.\",\n            \"example\": \"Error Message\"\n          },\n          \"inDoubt\": {\n            \"type\": \"boolean\",\n            \"description\": \"A boolean specifying whether it was possible that the operation succeeded. This is only included if true.\",\n            \"example\": false\n          },\n          \"internalErrorCode\": {\n            \"type\": \"integer\",\n            \"description\": \"An internal error code for diagnostic purposes. This may be null\",\n            \"format\": \"int32\",\n            \"example\": -3\n          }\n        }\n      },\n      \"AddOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Increment the value of an item in the specified `binName` by the value of `incr`\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"incr\": {\n                \"type\": \"number\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"AppendOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Append a `value` to the item in the specified `binName`\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitAddOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server adds value to byte[] bin starting at bitOffset for bitSize. BitSize must be \\u003c\\u003d 64. Signed indicates if bits should be treated as a signed number. If add overflows/underflows, BitOverflowAction is used. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\",\n                \"writeOnly\": true\n              },\n              \"signed\": {\n                \"type\": \"boolean\"\n              },\n              \"action\": {\n                \"type\": \"string\",\n                \"default\": \"FAIL\",\n                \"enum\": [\n                  \"FAIL\",\n                  \"SATURATE\",\n                  \"WRAP\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"BitAndOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server performs bitwise \\\"and\\\" on value and byte[] bin at bitOffset for bitSize.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"string\",\n                  \"format\": \"byte\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"BitCountOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns integer count of set bits from byte[] bin starting at bitOffset for bitSize.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitGetIntOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns integer from byte[] bin starting at bitOffset for bitSize. Signed indicates if bits should be treated as a signed number.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"signed\": {\n                \"type\": \"boolean\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitGetOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns bits from byte[] bin starting at bitOffset for bitSize.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitInsertOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server inserts value bytes into byte[] bin at byteOffset. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"byteOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"string\",\n                  \"format\": \"byte\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"BitLScanOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns integer bit offset of the first specified value bit in byte[] bin starting at bitOffset for bitSize.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"boolean\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitLShiftOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server shifts left byte[] bin starting at bitOffset for bitSize. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"shift\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitNotOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server negates byte[] bin starting at bitOffset for bitSize. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitOperation\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"The base type for describing all bit operations. Should not be used directly.\",\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"type\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitResizeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitInsertOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitRemoveOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitSetOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitOrOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitXOrOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitAndOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitNotOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitLShiftOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitRShiftOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitAddOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitSubtractOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitGetOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitCountOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitLScanOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitRScanOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitSetIntOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BitGetIntOperation\"\n          }\n        ]\n      },\n      \"BitOrOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server performs bitwise \\\"or\\\" on value and byte[] bin at bitOffset for bitSize. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"string\",\n                  \"format\": \"byte\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"BitRScanOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns integer bit offset of the last specified value bit in byte[] bin starting at bitOffset for bitSize.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"boolean\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitRShiftOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server shifts right byte[] bin starting at bitOffset for bitSize. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"shift\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitRemoveOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server removes bytes from byte[] bin at byteOffset for byteSize. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"byteOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"byteSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitResizeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server resizes byte[] to byteSize according to resizeFlags (See BitResizeFlags). Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"byteSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"resizeFlags\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitSetIntOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server sets value to byte[] bin starting at bitOffset for bitSize. Size must be \\u003c\\u003d 64. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BitSetOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server sets value on byte[] bin at bitOffset for bitSize. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"string\",\n                  \"format\": \"byte\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"BitSubtractOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server subtracts value from byte[] bin starting at bitOffset for bitSize. BitSize must be \\u003c\\u003d 64. Signed indicates if bits should be treated as a signed number. If add overflows/underflows, BitOverflowAction is used. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\",\n                \"writeOnly\": true\n              },\n              \"signed\": {\n                \"type\": \"boolean\"\n              },\n              \"action\": {\n                \"type\": \"string\",\n                \"default\": \"FAIL\",\n                \"enum\": [\n                  \"FAIL\",\n                  \"SATURATE\",\n                  \"WRAP\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"BitXOrOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server performs bitwise \\\"xor\\\" on value and byte[] bin at bitOffset for bitSize.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/BitOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BitOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bitOffset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"bitSize\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"string\",\n                  \"format\": \"byte\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"CTX\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"The base type for describing a nested CDT context. Identifies the location of nested list/map to apply the operation.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListIndexCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRankCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListValueCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapIndexCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRankCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapKeyCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapValueCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapKeyCreateCTX\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListIndexCreateCTX\"\n          }\n        ]\n      },\n      \"DeleteOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Delete a record.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          }\n        ]\n      },\n      \"GetHeaderOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return metadata about a record.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          }\n        ]\n      },\n      \"GetOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return the contents of a record\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"HLLAddOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server adds values to HLL set. If HLL bin does not exist, use indexBitCount and optionally minHashBitCount to create HLL bin. Server returns number of entries that caused HLL to update a register.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"indexBitCount\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"minHashBitCount\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"HLLDescribeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns indexBitCount and minHashBitCount used to create HLL bin in a list of longs. The list size is 2.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"HLLFoldOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Servers folds indexBitCount to the specified value. This can only be applied when minHashBitCount on the HLL bin is 0. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"indexBitCount\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"HLLGetCountOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns estimated number of elements in the HLL bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"HLLGetIntersectionCountOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns estimated number of elements that would be contained by the intersection of these HLL objects.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"format\": \"byte\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"HLLGetSimilarityOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns estimated similarity of these HLL objects. Return type is a double.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"format\": \"byte\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"HLLGetUnionCountOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns estimated number of elements that would be contained by the union of these HLL objects.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"format\": \"byte\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"HLLGetUnionOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server returns an HLL object that is the union of all specified HLL objects in the list with the HLL bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"format\": \"byte\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"HLLInitOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server creates a new HLL or resets an existing HLL. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"indexBitCount\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"minHashBitCount\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"HLLOperation\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"The base type for describing all HLL operations. Should not be used directly.\",\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLInitOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLAddOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLSetUnionOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLRefreshCountOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLFoldOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLGetCountOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLGetUnionOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLGetUnionCountOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLGetIntersectionCountOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLGetSimilarityOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/HLLDescribeOperation\"\n          }\n        ]\n      },\n      \"HLLRefreshCountOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server updates the cached count (if stale) and returns the count.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"HLLSetUnionOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Server sets union of specified HLL objects with HLL bin. Server does not return a value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/operation/HLLOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/HLLOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"format\": \"byte\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"ListAppendItemsOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Append multiple items to a list stored in the specified bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"listPolicy\": {\n                \"$ref\": \"#/components/schemas/ListPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListAppendOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Append a `value` to a list stored in the specified `binName`.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"listPolicy\": {\n                \"$ref\": \"#/components/schemas/ListPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListClearOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Empty a list stored in the specified bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          }\n        ]\n      },\n      \"ListCreateOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Create a list in the specified bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"order\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"UNORDERED\",\n                  \"ORDERED\"\n                ]\n              },\n              \"pad\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByIndexOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return an item, located a specific index, from a list in the specified bin. The value of `listReturnType` determines what will be returned. Requires Aerospike Server `3.16.0.1` or greater.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByIndexRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return a specified amount of items beginning at a specific index, from a list in the specified bin. If `count` is not provided, all items from `index` until the end of the list will be returned. Requires Aerospike Server `3.16.0.1` or later\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByRankOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return a list item with the specified `rank`. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByRankRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return `count` items beginning with the specified rank. If `count` is omitted, all items beginning with specified rank will be returned. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByValueListOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return all items in a list with values that are contained in the specified list of values. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByValueOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return all items in a list with a value matching a specified value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByValueRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return all items in a list with values between `valueBegin` and `valueEnd`. If `valueBegin` is omitted, all items with a value less than `valueEnd` will be returned. If `valueEnd` is omitted, all items with a value greater than `valueBegin` will be returned. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"valueBegin\": {\n                \"type\": \"object\"\n              },\n              \"valueEnd\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetByValueRelativeRankRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"TODO\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return an item, located a specific index, from a list in the specified bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"ListGetRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Get `count` items from the list beginning with the specified index. If `count` is omitted, all items from `index` to the end of the list will be returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListIncrementOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Increment the value of a an item of a list at the specified index, by the value of `incr`\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"incr\": {\n                \"type\": \"number\",\n                \"writeOnly\": true\n              },\n              \"listPolicy\": {\n                \"$ref\": \"#/components/schemas/ListPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListIndexCTX\": {\n        \"required\": [\n          \"index\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup list by index offset.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always listIndex\",\n                \"enum\": [\n                  \"listIndex\"\n                ]\n              },\n              \"index\": {\n                \"type\": \"integer\",\n                \"description\": \"If the index is negative, the resolved index starts backwards from end of list. If an index is out of bounds, a parameter error will be returned. Examples:\\n* 0: First item.\\n* 4: Fifth item.\\n* -1: Last item.\\n* -3: Third to last item.\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListIndexCreateCTX\": {\n        \"required\": [\n          \"index\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup list by base list\\u0027s index offset. If the list at index offset is not found, create it with the given sort order at that index offset.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always listIndexCreate\",\n                \"enum\": [\n                  \"listIndexCreate\"\n                ]\n              },\n              \"index\": {\n                \"type\": \"integer\",\n                \"description\": \"If the index is negative, the resolved index starts backwards from end of list. If an index is out of bounds, a parameter error will be returned. Examples:\\n* 0: First item.\\n* 4: Fifth item.\\n* -1: Last item.\\n* -3: Third to last item.\",\n                \"format\": \"int32\"\n              },\n              \"order\": {\n                \"type\": \"string\",\n                \"description\": \"List storage order.\",\n                \"default\": \"UNORDERED\",\n                \"enum\": [\n                  \"UNORDERED\",\n                  \"ORDERED\"\n                ]\n              },\n              \"pad\": {\n                \"type\": \"boolean\",\n                \"description\": \"If pad is true and the index offset is greater than the bounds of the base list, nil entries will be inserted before the newly created list.\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListInsertItemsOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Insert multiple items into a list at the specified `index`.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"listPolicy\": {\n                \"$ref\": \"#/components/schemas/ListPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListInsertOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Insert a value into a list at the specified index.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"listPolicy\": {\n                \"$ref\": \"#/components/schemas/ListPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListOperation\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"The base type for describing all cdt list operations. Should not be used directly.\",\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"ctx\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/CTX\"\n                }\n              },\n              \"type\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListAppendOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListAppendItemsOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListCreateOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListClearOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByIndexOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByIndexRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByRankOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByRankRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByValueRelativeRankRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByValueOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByValueRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetByValueListOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListGetRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListIncrementOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListInsertOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListInsertItemsOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListPopOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListPopRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByIndexOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByIndexRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByRankOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByRankRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByValueRelativeRankRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByValueOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByValueRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveByValueListOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListRemoveRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListSetOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListSetOrderOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListSizeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListSortOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ListTrimOperation\"\n          }\n        ]\n      },\n      \"ListPolicy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"order\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"UNORDERED\",\n              \"ORDERED\"\n            ]\n          },\n          \"writeFlags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"DEFAULT\",\n                \"ADD_UNIQUE\",\n                \"INSERT_BOUNDED\",\n                \"NO_FAIL\",\n                \"PARTIAL\"\n              ]\n            }\n          }\n        }\n      },\n      \"ListPopOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return a list value at the specified `index`.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"ListPopRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return `count` items beginning at the specified `index` from the list. If `count` is omitted, all items beginning from `index` will be removed and returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRankCTX\": {\n        \"required\": [\n          \"rank\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup list by rank\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always listRank\",\n                \"enum\": [\n                  \"listRank\"\n                ]\n              },\n              \"rank\": {\n                \"type\": \"integer\",\n                \"description\": \"* 0 \\u003d smallest value\\n* N \\u003d Nth smallest value\\n* -1 \\u003d largest value\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByIndexOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove a list item at the specified index. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByIndexRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return `count` items beginning at the specified `index` from the list. If `count` is omitted, all items beginning from `index` will be removed and returned. Requires Aerospike Server 3.16.0.1 or later\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByRankOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove a list item with the specified rank. Requires Aerospike Server `3.16.0.1` or later\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByRankRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove `count` items from a list, beginning with the item with the specified `rank`. If `count` is omitted, all items beginning with the specified `rank` will be removed and returned. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByValueListOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove all items from the list with values contained in the specified list of values. Requires Aerospike Server `3.16.0.1` or later\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByValueOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return list entries with a value equal to the specified value. Requires Aerospike Server `3.16.0.`1 or later\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByValueRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove all items from the list with values between `valueBegin` and `valueEnd`. If `valueBegin` is omitted all items with a value less than `valueEnd` will be removed. If `valueEnd` is omitted all items with a value greater than `valueBegin` will be removed. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"valueBegin\": {\n                \"type\": \"object\"\n              },\n              \"valueEnd\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveByValueRelativeRankRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"TODO\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"listReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"EXISTS\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove a list item at the specified index.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"ListRemoveRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove `count` items beginning at the specified `index` from the list. If `count` is omitted, all items beginning from `index` will be removed and returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListSetOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Set the value at the specified index to the specified value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"listPolicy\": {\n                \"$ref\": \"#/components/schemas/ListPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"ListSetOrderOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Set an ordering for the list.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"listOrder\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"UNORDERED\",\n                  \"ORDERED\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"ListSizeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return the size of the list.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          }\n        ]\n      },\n      \"ListSortOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Perform a sort operation on the list. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"sortFlags\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"DEFAULT\",\n                    \"DROP_DUPLICATES\"\n                  ]\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"ListTrimOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Trim the list to the specified range. Items with indexes in the range `[index, index + count)` will be retained.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/ListOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"ListValueCTX\": {\n        \"required\": [\n          \"type\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup list by value\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always listValue\",\n                \"enum\": [\n                  \"listValue\"\n                ]\n              },\n              \"value\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapClearOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Empty the specified map.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          }\n        ]\n      },\n      \"MapCreateOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Empty the specified map.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapOrder\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"UNORDERED\",\n                  \"KEY_ORDERED\",\n                  \"KEY_VALUE_ORDERED\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByIndexOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Get the map item at the specified `index`.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByIndexRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Get all map items with indexes in the range `[index, index + count)` . If `count` is omitted, all items beginning with the item at the specified index will be returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByKeyListOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove values with the specified keys from the map. Requires Aerospike Server `3.16.0.1` or later\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"keys\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByKeyOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return the value with the specified key from the map.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByKeyRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return map values with keys in the specified range. If `keyBegin` is omitted, all map values with key values less than `keyEnd` will be returned. If `keyEnd` is omitted, all map values with a key greater than or equal to `keyBegin` will be returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"keyBegin\": {\n                \"type\": \"object\"\n              },\n              \"keyEnd\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByKeyRelativeIndexRange\": {\n        \"type\": \"object\",\n        \"description\": \"TODO\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByRankOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return the map value with the specified rank.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByRankRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return `count` values from the map beginning with the value with the specified `rank`. If `count` is omitted, all items with a `rank` greater than or equal to the specified `rank` will be returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByValueListOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return all map items with a value contained in the provided list of values.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByValueOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return all map values with the specified value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByValueRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return all map items with value in the range [`valueBegin`, `valueEnd`). If `valueBegin` is omitted, all map items with a value less than `valueEnd` will be returned. If `valueEnd` is omitted, all map items with a value greater than or equal to `valueBegin` will be returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"valueBegin\": {\n                \"type\": \"object\"\n              },\n              \"valueEnd\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapGetByValueRelativeRankRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"TODO\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapIncrementOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Increment the map value with the specified key by the specified amount.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"incr\": {\n                \"type\": \"number\",\n                \"writeOnly\": true\n              },\n              \"key\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapPolicy\": {\n                \"$ref\": \"#/components/schemas/MapPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapIndexCTX\": {\n        \"required\": [\n          \"index\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup map by index offset.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always mapIndex\",\n                \"enum\": [\n                  \"mapIndex\"\n                ]\n              },\n              \"index\": {\n                \"type\": \"integer\",\n                \"description\": \"If the index is negative, the resolved index starts backwards from end of list. If an index is out of bounds, a parameter error will be returned. Examples:\\n\\n* 0: First item.\\n* 4: Fifth item.\\n* -1: Last item.\\n* -3: Third to last item.\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapKeyCTX\": {\n        \"required\": [\n          \"key\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup map by key.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always mapKey\",\n                \"enum\": [\n                  \"mapKey\"\n                ]\n              },\n              \"key\": {\n                \"type\": \"object\",\n                \"description\": \"String, Integer, or ByteArraySpecifiedType\",\n                \"example\": \"my-user-key\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapKeyCreateCTX\": {\n        \"required\": [\n          \"key\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup map by base map\\u0027s key. If the map at key is not found, create it with the given sort order at that key.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always mapKeyCreate\",\n                \"enum\": [\n                  \"mapKeyCreate\"\n                ]\n              },\n              \"key\": {\n                \"type\": \"object\",\n                \"description\": \"String, Integer, or ByteArraySpecifiedType\",\n                \"example\": \"my-user-key\"\n              },\n              \"order\": {\n                \"type\": \"string\",\n                \"description\": \"Map storage order.\",\n                \"externalDocs\": {\n                  \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOrder.html\"\n                },\n                \"enum\": [\n                  \"UNORDERED\",\n                  \"KEY_ORDERED\",\n                  \"KEY_VALUE_ORDERED\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"MapOperation\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"The base type for describing all cdt map operations. Should not be used directly.\",\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"ctx\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/CTX\"\n                }\n              },\n              \"type\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapCreateOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapClearOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByIndexOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByIndexRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByKeyOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByKeyListOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByKeyRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByRankOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByRankRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByValueOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByValueRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByValueListOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByValueRelativeRankRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapGetByKeyRelativeIndexRange\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapIncrementOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapPutOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapPutItemsOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByIndexOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByIndexRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByKeyOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByKeyRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByRankOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByRankRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByValueOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByValueRangeOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByValueListOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapRemoveByValueRelativeRankRange\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapSetPolicyOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/MapSizeOperation\"\n          }\n        ]\n      },\n      \"MapPolicy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"order\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"UNORDERED\",\n              \"KEY_ORDERED\",\n              \"KEY_VALUE_ORDERED\"\n            ]\n          },\n          \"writeFlags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"DEFAULT\",\n                \"CREATE_ONLY\",\n                \"UPDATE_ONLY\",\n                \"NO_FAIL\",\n                \"PARTIAL\"\n              ]\n            }\n          }\n        }\n      },\n      \"MapPutItemsOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Store multiple values into the map with the specified keys.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"map\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                },\n                \"writeOnly\": true\n              },\n              \"mapPolicy\": {\n                \"$ref\": \"#/components/schemas/MapPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapPutOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Store the specified value into the map in the specified bin with the specified key. Equivalent to `Map[key] \\u003d value`.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapPolicy\": {\n                \"$ref\": \"#/components/schemas/MapPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRankCTX\": {\n        \"required\": [\n          \"rank\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup map by rank.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always mapRank\",\n                \"enum\": [\n                  \"mapRank\"\n                ]\n              },\n              \"rank\": {\n                \"type\": \"integer\",\n                \"description\": \"* 0 \\u003d smallest value\\n* N \\u003d Nth smallest value\\n* -1 \\u003d largest value\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByIndexOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return the map item at the specified index.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByIndexRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove all map items with indexes in the range `[index, index + count)` . If `count` is omitted, all items beginning with the item at the specified index will be removed.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"index\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByKeyOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return the map item with the specified key from the map.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByKeyRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return map values with keys in the specified range. If `keyBegin` is omitted, all map values with key values less than `keyEnd` will be removed and returned. If `keyEnd` is omitted, all map values with a key greater than or equal to `keyBegin` will be removed and returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"keyBegin\": {\n                \"type\": \"object\"\n              },\n              \"keyEnd\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByRankOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return the map value with the specified rank.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByRankRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return `count` values from the map beginning with the value with the specified rank. If `count` is omitted, all items beginning with the specified `rank` will be removed and returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByValueListOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return all map items with a value contained in the provided list of values. Requires Aerospike Server `3.16.0.1` or later.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"values\": {\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByValueOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return all map items with a value equal to the specified value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByValueRangeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Remove and return all map items with value in the range `[valueBegin, valueEnd)`. If `valueBegin` is omitted, all map items with a value less than `valueEnd` will be removed and returned. If `valueEnd` is omitted, all map items with a value greater than or equal to `valueBegin` will be removed and returned.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"valueBegin\": {\n                \"type\": \"object\"\n              },\n              \"valueEnd\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapRemoveByValueRelativeRankRange\": {\n        \"type\": \"object\",\n        \"description\": \"TODO\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rank\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              },\n              \"mapReturnType\": {\n                \"type\": \"string\",\n                \"writeOnly\": true,\n                \"enum\": [\n                  \"COUNT\",\n                  \"INDEX\",\n                  \"KEY\",\n                  \"KEY_VALUE\",\n                  \"NONE\",\n                  \"RANK\",\n                  \"REVERSE_INDEX\",\n                  \"REVERSE_RANK\",\n                  \"VALUE\",\n                  \"EXISTS\"\n                ]\n              },\n              \"inverted\": {\n                \"type\": \"boolean\"\n              },\n              \"count\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapSetPolicyOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Set the policy for the map in the specified bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mapPolicy\": {\n                \"$ref\": \"#/components/schemas/MapPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"MapSizeOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return the size of the map in the specified bin.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/MapOperation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/MapOperation\"\n          }\n        ]\n      },\n      \"MapValueCTX\": {\n        \"required\": [\n          \"type\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Lookup map by value.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CTX\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of context this object represents. It is always mapValue\",\n                \"enum\": [\n                  \"mapValue\"\n                ]\n              },\n              \"value\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        ]\n      },\n      \"OperateRequestBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"opsList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AddOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/AppendOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/BitOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/DeleteOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/GetHeaderOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/GetOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/HLLOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ListOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MapOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/PrependOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/PutOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ReadOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/TouchOperation\"\n                }\n              ]\n            }\n          }\n        },\n        \"description\": \"An array of operation objects specifying the operations to perform on the record\",\n        \"example\": {\n          \"opsList\": [\n            {\n              \"type\": \"ADD\",\n              \"binName\": \"intBin\",\n              \"incr\": 2\n            },\n            {\n              \"type\": \"GET\",\n              \"binName\": \"intBin\"\n            }\n          ]\n        }\n      },\n      \"Operation\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"The base type for describing all operations. Should not be used directly.\",\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        }\n      },\n      \"PrependOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Prepend a `value` to the item in the specified `binName`\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"PutOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Store a `value` in the specified `binName`.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              },\n              \"value\": {\n                \"type\": \"object\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"ReadOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Return the value of a specified `binName`.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"binName\": {\n                \"type\": \"string\",\n                \"writeOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"TouchOperation\": {\n        \"type\": \"object\",\n        \"description\": \"Reset a record’s TTL and increment its generation.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/Operation.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          }\n        ]\n      },\n      \"OperateResponseRecordBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"record\": {\n            \"$ref\": \"#/components/schemas/RestClientRecord\"\n          }\n        }\n      },\n      \"RestClientRecord\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"generation\": {\n            \"type\": \"integer\",\n            \"description\": \"The generation of the record.\",\n            \"format\": \"int32\",\n            \"example\": 2\n          },\n          \"ttl\": {\n            \"type\": \"integer\",\n            \"description\": \"The time to live for the record, in seconds from now.\",\n            \"format\": \"int32\",\n            \"example\": 1000\n          },\n          \"bins\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"description\": \"A mapping from binName to binValue\",\n              \"example\": {\n                \"bin1\": \"val1\",\n                \"pi\": \"3.14\"\n              }\n            },\n            \"description\": \"A mapping from binName to binValue\",\n            \"example\": {\n              \"bin1\": \"val1\",\n              \"pi\": \"3.14\"\n            }\n          }\n        },\n        \"description\": \"Record associated with the key. Null if the record was not found.\"\n      },\n      \"ExecuteRequestBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"opsList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AddOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/AppendOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/BitOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/DeleteOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/GetHeaderOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/GetOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/HLLOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ListOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MapOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/PrependOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/PutOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ReadOperation\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/TouchOperation\"\n                }\n              ]\n            }\n          }\n        },\n        \"description\": \"An array of operation objects specifying the operations to perform on the record.\"\n      },\n      \"RestClientExecuteTask\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"taskId\": {\n            \"type\": \"integer\",\n            \"description\": \"The task ID value.\",\n            \"format\": \"int64\"\n          },\n          \"scan\": {\n            \"type\": \"boolean\",\n            \"description\": \"The scan indicator.\"\n          }\n        }\n      },\n      \"LngLat\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"longitude\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"latitude\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        },\n        \"description\": \"A 2 element array describing a position of the form [longitude, latitude]\",\n        \"example\": [\n          37.421331,\n          -122.09882\n        ]\n      },\n      \"LngLatRad\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"latLng\": {\n            \"$ref\": \"#/components/schemas/LngLat\"\n          },\n          \"radius\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        },\n        \"description\": \"A 2 element array describing a circle of the form [[longitude, latitude], radius].\",\n        \"example\": [\n          [\n            37.421331,\n            -122.09882\n          ],\n          3.14159\n        ]\n      },\n      \"QueryContainsLongFilter\": {\n        \"required\": [\n          \"binName\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Filter for CDTs that contain a long value. Only allowed on bins which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"collectionType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"DEFAULT\",\n                  \"LIST\",\n                  \"MAPKEYS\",\n                  \"MAPVALUES\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"QueryContainsStringFilter\": {\n        \"required\": [\n          \"binName\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Filter for CDTs that contain a string value. Only allowed on bins which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\"\n              },\n              \"collectionType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"DEFAULT\",\n                  \"LIST\",\n                  \"MAPKEYS\",\n                  \"MAPVALUES\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"QueryEqualLongFilter\": {\n        \"required\": [\n          \"binName\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Filter for values that equal the provided value.  Only allowed on bins which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              }\n            }\n          }\n        ]\n      },\n      \"QueryEqualsStringFilter\": {\n        \"required\": [\n          \"binName\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Filter for values that equal the provided value.  Only allowed on bins which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ]\n      },\n      \"QueryFilter\": {\n        \"required\": [\n          \"binName\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"binName\": {\n            \"type\": \"string\",\n            \"description\": \"The bin for which a secondary-index is defined.\"\n          },\n          \"ctx\": {\n            \"type\": \"array\",\n            \"description\": \"An optional context for elements within a CDT which a secondary-index is defined.\",\n            \"externalDocs\": {\n              \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/cdt/CTX.html\"\n            },\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ListIndexCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ListIndexCreateCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ListRankCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/ListValueCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MapIndexCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MapKeyCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MapKeyCreateCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MapRankCTX\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/MapValueCTX\"\n                }\n              ]\n            }\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"QueryFilter base type. Only allowed on bin which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryEqualsStringFilter\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QueryEqualLongFilter\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QueryRangeFilter\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QueryContainsStringFilter\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QueryContainsLongFilter\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QueryGeoWithinPolygonFilter\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QueryGeoWithinRadiusFilter\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/QueryGeoContainsPointFilter\"\n          }\n        ]\n      },\n      \"QueryGeoContainsPointFilter\": {\n        \"required\": [\n          \"binName\",\n          \"point\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Geospatial filter for regions that contain a point.  Only allowed on bins which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"point\": {\n                \"$ref\": \"#/components/schemas/LngLat\"\n              },\n              \"collectionType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"DEFAULT\",\n                  \"LIST\",\n                  \"MAPKEYS\",\n                  \"MAPVALUES\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"QueryGeoWithinPolygonFilter\": {\n        \"required\": [\n          \"binName\",\n          \"polygon\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Geospatial filter for points contained inside and AeroCircle object.  Only allowed on bin which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"polygon\": {\n                \"type\": \"array\",\n                \"description\": \"Array of longitude and latitude describing a region.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/LngLat\"\n                }\n              },\n              \"collectionType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"DEFAULT\",\n                  \"LIST\",\n                  \"MAPKEYS\",\n                  \"MAPVALUES\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"QueryGeoWithinRadiusFilter\": {\n        \"required\": [\n          \"binName\",\n          \"circle\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Geospatial filter for points contained inside and AeroCircle object.  Only allowed on bin which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"circle\": {\n                \"$ref\": \"#/components/schemas/LngLatRad\"\n              }\n            }\n          }\n        ]\n      },\n      \"QueryRangeFilter\": {\n        \"required\": [\n          \"begin\",\n          \"binName\",\n          \"end\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"Filter values numeric values within a range. Only allowed on bin which has a secondary index defined.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/query/Filter.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/QueryFilter\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"begin\": {\n                \"type\": \"integer\",\n                \"description\": \"Filter begin value inclusive.\",\n                \"format\": \"int64\"\n              },\n              \"end\": {\n                \"type\": \"integer\",\n                \"description\": \"Filter end value inclusive.\",\n                \"format\": \"int64\"\n              },\n              \"collectionType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"DEFAULT\",\n                  \"LIST\",\n                  \"MAPKEYS\",\n                  \"MAPVALUES\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"QueryRequestBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filter\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/QueryContainsLongFilter\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/QueryContainsStringFilter\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/QueryEqualLongFilter\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/QueryEqualsStringFilter\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/QueryGeoContainsPointFilter\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/QueryGeoWithinPolygonFilter\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/QueryGeoWithinRadiusFilter\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/QueryRangeFilter\"\n              }\n            ]\n          },\n          \"from\": {\n            \"type\": \"string\",\n            \"description\": \"Pagination token returned from last query request used to retrieve the next page. Use \\\"getToken\\\" to retrieve this token.\"\n          }\n        },\n        \"description\": \"Body of Query request.\"\n      },\n      \"Pagination\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"nextToken\": {\n            \"type\": \"string\",\n            \"description\": \"The next page token.\"\n          },\n          \"totalRecords\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of records in page.\",\n            \"format\": \"int64\"\n          }\n        },\n        \"description\": \"Pagination details.\"\n      },\n      \"QueryResponseBody\": {\n        \"required\": [\n          \"records\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"records\": {\n            \"type\": \"array\",\n            \"description\": \"Records returned from query.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RestClientKeyRecord\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"description\": \"Body of query response.\"\n      },\n      \"RestClientKeyRecord\": {\n        \"required\": [\n          \"userKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userKey\": {\n            \"type\": \"object\",\n            \"description\": \"The user key, it may be a string, integer, or URL safe Base64 encoded bytes.\",\n            \"example\": \"userKey\"\n          },\n          \"generation\": {\n            \"type\": \"integer\",\n            \"description\": \"The generation of the record.\",\n            \"format\": \"int32\",\n            \"example\": 2\n          },\n          \"ttl\": {\n            \"type\": \"integer\",\n            \"description\": \"The time to live for the record, in seconds from now.\",\n            \"format\": \"int32\",\n            \"example\": 1000\n          },\n          \"bins\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"description\": \"A mapping from binName to binValue\",\n              \"example\": {\n                \"bin1\": \"val1\",\n                \"pi\": \"3.14\"\n              }\n            },\n            \"description\": \"A mapping from binName to binValue\",\n            \"example\": {\n              \"bin1\": \"val1\",\n              \"pi\": \"3.14\"\n            }\n          }\n        },\n        \"description\": \"Records returned from query.\"\n      },\n      \"RestClientOperation\": {\n        \"required\": [\n          \"opValues\",\n          \"operation\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"operation\": {\n            \"type\": \"string\",\n            \"description\": \"Aerospike operation to perform on the record\",\n            \"example\": \"LIST_APPEND_ITEMS\",\n            \"enum\": [\n              \"ADD\",\n              \"APPEND\",\n              \"GET\",\n              \"PREPEND\",\n              \"READ\",\n              \"GET_HEADER\",\n              \"TOUCH\",\n              \"PUT\",\n              \"DELETE\",\n              \"LIST_APPEND\",\n              \"LIST_APPEND_ITEMS\",\n              \"LIST_CLEAR\",\n              \"LIST_GET\",\n              \"LIST_GET_BY_INDEX\",\n              \"LIST_GET_BY_INDEX_RANGE\",\n              \"LIST_GET_BY_RANK\",\n              \"LIST_GET_BY_RANK_RANGE\",\n              \"LIST_GET_BY_VALUE_REL_RANK_RANGE\",\n              \"LIST_GET_BY_VALUE\",\n              \"LIST_GET_BY_VALUE_RANGE\",\n              \"LIST_GET_BY_VALUE_LIST\",\n              \"LIST_GET_RANGE\",\n              \"LIST_INCREMENT\",\n              \"LIST_INSERT\",\n              \"LIST_INSERT_ITEMS\",\n              \"LIST_POP\",\n              \"LIST_POP_RANGE\",\n              \"LIST_REMOVE\",\n              \"LIST_REMOVE_BY_INDEX\",\n              \"LIST_REMOVE_BY_INDEX_RANGE\",\n              \"LIST_REMOVE_BY_RANK\",\n              \"LIST_REMOVE_BY_RANK_RANGE\",\n              \"LIST_REMOVE_BY_VALUE_REL_RANK_RANGE\",\n              \"LIST_REMOVE_BY_VALUE\",\n              \"LIST_REMOVE_BY_VALUE_RANGE\",\n              \"LIST_REMOVE_BY_VALUE_LIST\",\n              \"LIST_REMOVE_RANGE\",\n              \"LIST_SET\",\n              \"LIST_SET_ORDER\",\n              \"LIST_SIZE\",\n              \"LIST_SORT\",\n              \"LIST_TRIM\",\n              \"LIST_CREATE\",\n              \"MAP_CLEAR\",\n              \"MAP_DECREMENT\",\n              \"MAP_GET_BY_INDEX\",\n              \"MAP_GET_BY_INDEX_RANGE\",\n              \"MAP_GET_BY_KEY\",\n              \"MAP_GET_BY_KEY_LIST\",\n              \"MAP_GET_BY_KEY_RANGE\",\n              \"MAP_GET_BY_RANK\",\n              \"MAP_GET_BY_RANK_RANGE\",\n              \"MAP_GET_BY_VALUE\",\n              \"MAP_GET_BY_VALUE_RANGE\",\n              \"MAP_GET_BY_VALUE_LIST\",\n              \"MAP_GET_BY_KEY_REL_INDEX_RANGE\",\n              \"MAP_GET_BY_VALUE_REL_RANK_RANGE\",\n              \"MAP_INCREMENT\",\n              \"MAP_PUT\",\n              \"MAP_PUT_ITEMS\",\n              \"MAP_REMOVE_BY_INDEX\",\n              \"MAP_REMOVE_BY_INDEX_RANGE\",\n              \"MAP_REMOVE_BY_KEY\",\n              \"MAP_REMOVE_BY_KEY_RANGE\",\n              \"MAP_REMOVE_BY_RANK\",\n              \"MAP_REMOVE_BY_RANK_RANGE\",\n              \"MAP_REMOVE_BY_KEY_REL_INDEX_RANGE\",\n              \"MAP_REMOVE_BY_VALUE_REL_RANK_RANGE\",\n              \"MAP_REMOVE_BY_VALUE\",\n              \"MAP_REMOVE_BY_VALUE_RANGE\",\n              \"MAP_REMOVE_BY_VALUE_LIST\",\n              \"MAP_SET_MAP_POLICY\",\n              \"MAP_SIZE\",\n              \"MAP_CREATE\",\n              \"BIT_RESIZE\",\n              \"BIT_INSERT\",\n              \"BIT_REMOVE\",\n              \"BIT_SET\",\n              \"BIT_OR\",\n              \"BIT_XOR\",\n              \"BIT_AND\",\n              \"BIT_NOT\",\n              \"BIT_LSHIFT\",\n              \"BIT_RSHIFT\",\n              \"BIT_ADD\",\n              \"BIT_SUBTRACT\",\n              \"BIT_SET_INT\",\n              \"BIT_GET\",\n              \"BIT_COUNT\",\n              \"BIT_LSCAN\",\n              \"BIT_RSCAN\",\n              \"BIT_GET_INT\",\n              \"HLL_INIT\",\n              \"HLL_ADD\",\n              \"HLL_SET_UNION\",\n              \"HLL_SET_COUNT\",\n              \"HLL_FOLD\",\n              \"HLL_COUNT\",\n              \"HLL_UNION\",\n              \"HLL_UNION_COUNT\",\n              \"HLL_INTERSECT_COUNT\",\n              \"HLL_SIMILARITY\",\n              \"HLL_DESCRIBE\"\n            ]\n          },\n          \"opValues\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"example\": {\n                \"bin\": \"listbin\",\n                \"values\": [\n                  1,\n                  2,\n                  3\n                ]\n              }\n            },\n            \"example\": {\n              \"bin\": \"listbin\",\n              \"values\": [\n                1,\n                2,\n                3\n              ]\n            }\n          }\n        },\n        \"description\": \"Deprecated in favor of more descriptive models.  The documentation for the old models can be found in the external documentation.\",\n        \"externalDocs\": {\n          \"url\": \"@Schema(description \\u003d \\\"Deprecated in favor of more descriptive models.  The documentation for the old models can be found in the external documentation.\\\", externalDocs \\u003d @ExternalDocumentation(url\\u003d \\\"\\\"))\\n\"\n        }\n      },\n      \"RestClientIndex\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"namespace\": {\n            \"type\": \"string\",\n            \"example\": \"testNS\"\n          },\n          \"set\": {\n            \"type\": \"string\",\n            \"example\": \"testSet\"\n          },\n          \"bin\": {\n            \"type\": \"string\",\n            \"description\": \"The bin which is indexed\",\n            \"example\": \"ageBin\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the index. This must be unique per set\",\n            \"example\": \"ageIndex\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"NUMERIC\",\n              \"STRING\",\n              \"GEO2DSPHERE\"\n            ]\n          },\n          \"collection_type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"DEFAULT\",\n              \"LIST\",\n              \"MAPKEYS\",\n              \"MAPVALUES\"\n            ]\n          }\n        }\n      },\n      \"BatchDelete\": {\n        \"required\": [\n          \"key\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"An object that describes a batch delete operation to be used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/BatchDelete.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BatchRecord\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of batch request. It is always DELETE\",\n                \"enum\": [\n                  \"DELETE\"\n                ]\n              },\n              \"policy\": {\n                \"$ref\": \"#/components/schemas/BatchDeletePolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"BatchDeletePolicy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filterExp\": {\n            \"type\": \"string\",\n            \"description\": \"Optional expression filter. If filterExp exists and evaluates to false, the specific batch key request is not performed and RecordClientBatchRecordResponse.ResultCode is set to FILTERED_OUT. If exists, this filter overrides the batch parent policy filterExp for the specific key in batch commands that allow a different policy per key. Otherwise, this filter is ignored.\"\n          },\n          \"commitLevel\": {\n            \"type\": \"string\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server. The default (COMMIT_ALL) indicates that the server should wait for master and all replica commits to be successful before returning success to the client.\",\n            \"enum\": [\n              \"COMMIT_ALL\",\n              \"COMMIT_MASTER\"\n            ]\n          },\n          \"generationPolicy\": {\n            \"type\": \"string\",\n            \"description\": \"Qualify how to handle record deletes based on record generation. The default (NONE) indicates that the generation is not used to restrict deletes.\",\n            \"enum\": [\n              \"NONE\",\n              \"EXPECT_GEN_EQUAL\",\n              \"EXPECT_GEN_GT\"\n            ]\n          },\n          \"generation\": {\n            \"type\": \"integer\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\\nThis field is only relevant when generationPolicy is not NONE.\",\n            \"format\": \"int32\"\n          },\n          \"durableDelete\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record. This prevents deleted records from reappearing after node failures. Valid for Aerospike Server Enterprise Edition only.\"\n          },\n          \"sendKey\": {\n            \"type\": \"boolean\",\n            \"description\": \"Send user defined key in addition to hash digest. If true, the key will be stored with the record on the server.\"\n          }\n        },\n        \"description\": \"An object that describes a policy for a delete operation used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/policy/BatchDeletePolicy.html\"\n        }\n      },\n      \"BatchRead\": {\n        \"required\": [\n          \"key\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"An object that describes a batch read operation to be used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/BatchRead.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BatchRecord\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The type of batch request. It is always READ\",\n                \"enum\": [\n                  \"READ\"\n                ]\n              },\n              \"readAllBins\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether all bins should be returned with this record.\"\n              },\n              \"opsList\": {\n                \"type\": \"array\",\n                \"description\": \"List of operation. Useful for reading from nested CDTs.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Operation\"\n                }\n              },\n              \"binNames\": {\n                \"type\": \"array\",\n                \"description\": \"List of bins to limit the record response to.\",\n                \"example\": [\n                  \"bin1\"\n                ],\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"List of bins to limit the record response to.\",\n                  \"example\": \"[\\\"bin1\\\"]\"\n                }\n              },\n              \"policy\": {\n                \"$ref\": \"#/components/schemas/BatchReadPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"BatchReadPolicy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filterExp\": {\n            \"type\": \"string\",\n            \"description\": \"Optional expression filter. If filterExp exists and evaluates to false, the specific batch key request is not performed and RecordClientBatchRecordResponse.ResultCode is set to FILTERED_OUT. If exists, this filter overrides the batch parent policy filterExp for the specific key in batch commands that allow a different policy per key. Otherwise, this filter is ignored.\"\n          },\n          \"readModeAP\": {\n            \"type\": \"string\",\n            \"description\": \"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"enum\": [\n              \"ONE\",\n              \"ALL\"\n            ]\n          },\n          \"readModeSC\": {\n            \"type\": \"string\",\n            \"description\": \"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"enum\": [\n              \"SESSION\",\n              \"LINEARIZE\",\n              \"ALLOW_REPLICA\",\n              \"ALLOW_UNAVAILABLE\"\n            ]\n          }\n        },\n        \"description\": \"An object that describes a policy for a read operation used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/policy/BatchReadPolicy.html\"\n        }\n      },\n      \"BatchRecord\": {\n        \"required\": [\n          \"key\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"$ref\": \"#/components/schemas/RestClientKey\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"The batch operation base type.\",\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BatchRead\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BatchWrite\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BatchDelete\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/BatchUDF\"\n          }\n        ]\n      },\n      \"BatchUDF\": {\n        \"required\": [\n          \"functionName\",\n          \"key\",\n          \"packageName\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"An object that describes a batch udf operation to be used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/BatchUDF.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BatchRecord\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"List of bins to limit the record response to.\",\n                \"enum\": [\n                  \"UDF\"\n                ]\n              },\n              \"packageName\": {\n                \"type\": \"string\",\n                \"description\": \"Package or lua module name.\"\n              },\n              \"functionName\": {\n                \"type\": \"string\",\n                \"description\": \"Package or lua module name.\"\n              },\n              \"functionArgs\": {\n                \"type\": \"array\",\n                \"description\": \"Optional arguments to lua function.\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"description\": \"Optional arguments to lua function.\"\n                }\n              },\n              \"policy\": {\n                \"$ref\": \"#/components/schemas/BatchUDFPolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"BatchUDFPolicy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filterExp\": {\n            \"type\": \"string\",\n            \"description\": \"Optional expression filter. If filterExp exists and evaluates to false, the specific batch key request is not performed and RecordClientBatchRecordResponse.ResultCode is set to FILTERED_OUT. If exists, this filter overrides the batch parent policy filterExp for the specific key in batch commands that allow a different policy per key. Otherwise, this filter is ignored.\"\n          },\n          \"commitLevel\": {\n            \"type\": \"string\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server. The default (COMMIT_ALL) indicates that the server should wait for master and all replica commits to be successful before returning success to the client.\",\n            \"enum\": [\n              \"COMMIT_ALL\",\n              \"COMMIT_MASTER\"\n            ]\n          },\n          \"expiration\": {\n            \"type\": \"integer\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\\nExpiration values:\\n   1. -2: Do not change ttl when record is updated.\\n   2. -1: Never expire.\\n   3. 0: Default to namespace configuration variable \\\"default-ttl\\\" on the server.\\n   4. greater than 0: Actual ttl in seconds.\",\n            \"format\": \"int32\"\n          },\n          \"durableDelete\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record. This prevents deleted records from reappearing after node failures. Valid for Aerospike Server Enterprise Edition only.\"\n          },\n          \"sendKey\": {\n            \"type\": \"boolean\",\n            \"description\": \"Send user defined key in addition to hash digest. If true, the key will be stored with the record on the server.\"\n          }\n        },\n        \"description\": \"An object that describes a policy for a udf operation used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/policy/BatchUDFPolicy.html\"\n        }\n      },\n      \"BatchWrite\": {\n        \"required\": [\n          \"key\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"description\": \"An object that describes a batch write operation to be used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/BatchWrite.html\"\n        },\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BatchRecord\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"List of bins to limit the record response to.\",\n                \"enum\": [\n                  \"WRITE\"\n                ]\n              },\n              \"opsList\": {\n                \"type\": \"array\",\n                \"description\": \"List of operation.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Operation\"\n                }\n              },\n              \"policy\": {\n                \"$ref\": \"#/components/schemas/BatchWritePolicy\"\n              }\n            }\n          }\n        ]\n      },\n      \"BatchWritePolicy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filterExp\": {\n            \"type\": \"string\",\n            \"description\": \"Optional expression filter. If filterExp exists and evaluates to false, the specific batch key request is not performed and RecordClientBatchRecordResponse.ResultCode is set to FILTERED_OUT. If exists, this filter overrides the batch parent policy filterExp for the specific key in batch commands that allow a different policy per key. Otherwise, this filter is ignored.\"\n          },\n          \"recordExistsAction\": {\n            \"type\": \"string\",\n            \"description\": \"Qualify how to handle writes where the record already exists.\",\n            \"enum\": [\n              \"UPDATE\",\n              \"UPDATE_ONLY\",\n              \"REPLACE\",\n              \"REPLACE_ONLY\",\n              \"CREATE_ONLY\"\n            ]\n          },\n          \"commitLevel\": {\n            \"type\": \"string\",\n            \"description\": \"Desired consistency guarantee when committing a transaction on the server. The default (COMMIT_ALL) indicates that the server should wait for master and all replica commits to be successful before returning success to the client.\",\n            \"enum\": [\n              \"COMMIT_ALL\",\n              \"COMMIT_MASTER\"\n            ]\n          },\n          \"generationPolicy\": {\n            \"type\": \"string\",\n            \"description\": \"Qualify how to handle record deletes based on record generation. The default (NONE) indicates that the generation is not used to restrict deletes.\",\n            \"enum\": [\n              \"NONE\",\n              \"EXPECT_GEN_EQUAL\",\n              \"EXPECT_GEN_GT\"\n            ]\n          },\n          \"generation\": {\n            \"type\": \"integer\",\n            \"description\": \"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\\nThis field is only relevant when generationPolicy is not NONE.\",\n            \"format\": \"int32\"\n          },\n          \"expiration\": {\n            \"type\": \"integer\",\n            \"description\": \"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\\nExpiration values:\\n   1. -2: Do not change ttl when record is updated.\\n   2. -1: Never expire.\\n   3. 0: Default to namespace configuration variable \\\"default-ttl\\\" on the server.\\n   4. greater than 0: Actual ttl in seconds.\",\n            \"format\": \"int32\"\n          },\n          \"durableDelete\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the transaction results in a record deletion, leave a tombstone for the record. This prevents deleted records from reappearing after node failures. Valid for Aerospike Server Enterprise Edition only.\"\n          },\n          \"sendKey\": {\n            \"type\": \"boolean\",\n            \"description\": \"Send user defined key in addition to hash digest. If true, the key will be stored with the record on the server.\"\n          }\n        },\n        \"description\": \"An object that describes a policy for a write operation used in a batch request.\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/policy/BatchWritePolicy.html\"\n        }\n      },\n      \"RestClientKey\": {\n        \"required\": [\n          \"namespace\",\n          \"userKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"namespace\": {\n            \"type\": \"string\",\n            \"example\": \"testNS\"\n          },\n          \"userKey\": {\n            \"type\": \"object\",\n            \"description\": \"The user key, it may be a string, integer, or URL safe Base64 encoded bytes.\",\n            \"example\": \"userKey\"\n          },\n          \"setName\": {\n            \"type\": \"string\",\n            \"example\": \"testSet\"\n          },\n          \"keytype\": {\n            \"type\": \"string\",\n            \"description\": \"Enum describing the type of the userKey. This field is omitted in MessagePack responses.\",\n            \"example\": \"STRING\",\n            \"enum\": [\n              \"STRING\",\n              \"INTEGER\",\n              \"BYTES\",\n              \"DIGEST\"\n            ]\n          }\n        },\n        \"description\": \"Key to retrieve a record.\"\n      },\n      \"BatchRecordResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"resultCode\": {\n            \"type\": \"integer\",\n            \"description\": \"Result code for this returned record.\",\n            \"format\": \"int32\"\n          },\n          \"resultCodeString\": {\n            \"type\": \"string\",\n            \"description\": \"Message associated with resultCode.\"\n          },\n          \"record\": {\n            \"$ref\": \"#/components/schemas/RestClientRecord\"\n          },\n          \"key\": {\n            \"$ref\": \"#/components/schemas/RestClientKey\"\n          },\n          \"inDoubt\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is it possible that the write transaction may have completed even though an error occurred for this record.\"\n          }\n        },\n        \"description\": \"Object returned in from a single batch operation\",\n        \"externalDocs\": {\n          \"url\": \"https://javadoc.io/doc/com.aerospike/aerospike-client/6.1.2/com/aerospike/client/BatchRecord.html\"\n        }\n      },\n      \"RestClientUserModel\": {\n        \"required\": [\n          \"password\",\n          \"roles\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"RestClientPrivilege\": {\n        \"required\": [\n          \"code\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"user-admin\",\n              \"sys-admin\",\n              \"data-admin\",\n              \"udf-admin\",\n              \"sindex-admin\",\n              \"read\",\n              \"read-write\",\n              \"read-write-udf\",\n              \"write\",\n              \"truncate\"\n            ]\n          },\n          \"namespace\": {\n            \"type\": \"string\",\n            \"description\": \"Namespace Scope\",\n            \"example\": \"testNS\"\n          },\n          \"set\": {\n            \"type\": \"string\",\n            \"description\": \"setName Scope\",\n            \"example\": \"testSet\"\n          }\n        },\n        \"description\": \"List of assigned privileges.\"\n      },\n      \"RestClientRole\": {\n        \"required\": [\n          \"name\",\n          \"privileges\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Role name.\",\n            \"example\": \"customRole\"\n          },\n          \"privileges\": {\n            \"type\": \"array\",\n            \"description\": \"List of assigned privileges.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RestClientPrivilege\"\n            }\n          },\n          \"whitelist\": {\n            \"type\": \"array\",\n            \"description\": \"List of allowable IP addresses.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"List of allowable IP addresses.\"\n            }\n          },\n          \"readQuota\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum reads per second limit.\",\n            \"format\": \"int32\"\n          },\n          \"writeQuota\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum writes per second limit.\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"RestClientRoleQuota\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"readQuota\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum reads per second limit.\",\n            \"format\": \"int32\"\n          },\n          \"writeQuota\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum writes per second limit.\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"RestClientExecuteTaskStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"task\": {\n            \"$ref\": \"#/components/schemas/RestClientExecuteTask\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The ExecuteTask status.\"\n          }\n        }\n      },\n      \"RestClientScanResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"records\": {\n            \"type\": \"array\",\n            \"description\": \"List of records for current page.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RestClientKeyRecord\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"readInfo\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"writeInfo\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"connsInUse\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/aerospike/aerospike-rest-gateway@8d6e7e9368f07dc1c17270bd1af9fe2dd6eedd7e/-/blob/docs/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/aerospike/aerospike-rest-gateway/blob/8d6e7e9368f07dc1c17270bd1af9fe2dd6eedd7e/docs/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/v1/batch\": post: requestBody: contents: media: \"application/json\": generate schema: item: oneOf: oneOf \"\" [0]: allOf \"https://raw.githubusercontent.com/aerospike/aerospike-rest-gateway/8d6e7e9368f07dc1c17270bd1af9fe2dd6eedd7e/docs/openapi.json#/components/schemas/BatchDelete\" [0]: oneOf \"https://raw.githubusercontent.com/aerospike/aerospike-rest-gateway/8d6e7e9368f07dc1c17270bd1af9fe2dd6eedd7e/docs/openapi.json#/components/schemas/BatchRecord\" [0]: allOf \"https://raw.githubusercontent.com/aerospike/aerospike-rest-gateway/8d6e7e9368f07dc1c17270bd1af9fe2dd6eedd7e/docs/openapi.json#/components/schemas/BatchRead\" [0]: reference \"https://raw.githubusercontent.com/aerospike/aerospike-rest-gateway/8d6e7e9368f07dc1c17270bd1af9fe2dd6eedd7e/docs/openapi.json#/components/schemas/BatchRecord\" [0] leads to infinite recursion",
	"NotImplemented": [
		"empty schema"
	]
}