{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FederatedAI/FATE-Flow"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "doc/swagger/swagger.yaml",
			"byteSize": 140314,
			"content": "openapi: 3.0.3\ninfo:\n  version: '1.8.0'\n  title: Fate Flow\n\npaths:\n  '/data/upload':\n    post:\n      summary: upload\n      tags:\n        - data-access\n      parameters:\n        - in: query\n          name: id_delimiter\n          description: data delimiter\n          required: false\n          schema:\n            type: string\n            example: \",\"\n        - in: query\n          name: head\n          description: data head\n          required: true\n          schema:\n            type: integer\n            example: 0, 1\n        - in: query\n          name: partition\n          description: compoting table partitions\n          required: true\n          schema:\n            type: integer\n            example: 16, ...\n        - in: query\n          name: table_name\n          description: fate table name\n          required: true\n          schema:\n            type: string\n            example: breast_hetero_guest\n        - in: query\n          name: namespace\n          description: fate table namespace\n          required: true\n          schema:\n            type: string\n            example: experiment\n        - in: query\n          name: storage_engine\n          description: data storage engin\n          required: false\n          schema:\n            type: string\n            example: eggroll, localfs, hdfs, ...\n        - in: query\n          name: destory\n          description: destory old table and upload new table\n          required: false\n          schema:\n            type: integer\n            example: 0, 1\n        - in: query\n          name: extend_sid\n          description: extend sid to first column\n          required: false\n          schema:\n            type: integer\n            example: 0, 1\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: upload success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"board_url\": \"http://xxx:8080/index.html#/dashboard?job_id=xxx\u0026role=local\u0026party_id=0\",\n                        \"code\": 0,\n                        \"dsl_path\": \"/data/projects/fate/fateflow/jobs/xxx/job_dsl.json\",\n                        \"job_id\": xxx,\n                        \"logs_directory\": \"/data/projects/fate/fateflow/logs/xxx\",\n                        \"message\": \"success\",\n                        \"model_info\": {\n                          \"model_id\": \"local-0#model\",\n                          \"model_version\": xxx\n                        },\n                        \"namespace\": \"experiment\",\n                        \"pipeline_dsl_path\": \"/data/projects/fate/fateflow/jobs/xxx/pipeline_dsl.json\",\n                        \"runtime_conf_on_party_path\": \"/data/projects/fate/fateflow/jobs/xxx/local/0/job_runtime_on_party_conf.json\",\n                        \"runtime_conf_path\": \"/data/projects/fate/fateflow/jobs/xxx/job_runtime_conf.json\",\n                        \"table_name\": \"breast_hetero_guest\",\n                        \"train_runtime_conf_path\": \"/data/projects/fate/fateflow/jobs/xxx/train_runtime_conf.json\"\n                      }\n        '404':\n          description: upload failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: required parameters are missing\n\n  '/data/download':\n    post:\n      summary: download data\n      tags:\n        - data-access\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - table_name\n                - namespace\n                - output_path\n              properties:\n                table_name:\n                  type: string\n                  example: breast_hetero_guest\n                namespace:\n                  type: string\n                  example: experiment\n                output_path:\n                  type: string\n                  example: /data/projects/fate/fateflow/experiment_download_breast_guest.csv\n                delimiter:\n                  type: string\n                  example: \",\"\n      responses:\n        '200':\n          description: download success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"board_url\": \"http://xxx:8080/index.html#/dashboard?job_id=xxx\u0026role=local\u0026party_id=0\",\n                        \"code\": 0,\n                        \"dsl_path\": \"/data/projects/fate/fateflow/jobs/xxx/job_dsl.json\",\n                        \"job_id\": xxx,\n                        \"logs_directory\": \"/data/projects/fate/fateflow/logs/xxx\",\n                        \"message\": \"success\",\n                        \"model_info\": {\n                          \"model_id\": \"local-0#model\",\n                          \"model_version\": xxx\n                        },\n                        \"namespace\": \"experiment\",\n                        \"pipeline_dsl_path\": \"/data/projects/fate/fateflow/jobs/xxx/pipeline_dsl.json\",\n                        \"runtime_conf_on_party_path\": \"/data/projects/fate/fateflow/jobs/xxx/local/0/job_runtime_on_party_conf.json\",\n                        \"runtime_conf_path\": \"/data/projects/fate/fateflow/jobs/xxx/job_runtime_conf.json\",\n                        \"table_name\": \"breast_hetero_guest\",\n                        \"train_runtime_conf_path\": \"/data/projects/fate/fateflow/jobs/xxx/train_runtime_conf.json\"\n                      }\n        '404':\n          description: download failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: required parameters are missing\n\n  '/data/upload/history':\n    post:\n      summary: history of upload job info\n      tags:\n        - data-access\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                job_id:\n                  type: string\n                  example: 202103241706521313480\n                limit:\n                  type: integer\n                  description: limit output\n                  example: 1\n      responses:\n        '200':\n          description: get success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      example:\n                        {\n                          \"202103241706521313480\": {\n                            \"notes\": \"\",\n                            \"schema\": {\n                                \"header\": \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\",\n                                \"sid\": \"id\"\n                            },\n                            \"upload_info\": {\n                              \"namespace\": \"experiment\",\n                              \"partition\": 4,\n                              \"table_name\": \"breast_hetero_guest\",\n                              \"upload_count\": 569\n                            }\n                          }\n                        }\n        '404':\n          description: get failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 100\n                  retmsg:\n                    type: string\n                    example: server error\n\n  '/table/bind':\n    post:\n      summary: bind a storage address to fate table\n      tags:\n        - table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - engine\n                - address\n                - namespace\n                - name\n                - head\n                - id_delimiter\n                - partitions\n              properties:\n                engine:\n                  type: string\n                  example: mysql\n                name:\n                  type: string\n                  example: breast_hetero_guest\n                namespace:\n                  type: string\n                  example: experiment\n                address:\n                  type: object\n                  description: storage address\n                  example:\n                    user: fate\n                    passwd: fate\n                    host: 127.0.0.1\n                    port: 3306\n                    db: xxx\n                    name: xxx\n                partitions:\n                  type: integer\n                  description: fate computing table partitions\n                  example: 16\n                head:\n                  type: integer\n                  description: 1 means data have head\n                  example: 0,1\n                id_delimiter:\n                  type: string\n                  description: data table or intermediate storage table delimiter\n                  example: \",\"\n                in_serialized:\n                  type: integer\n                  description: data serialized, standlone/eggroll/mysql/path storage default 1, others default 0\n                  example: 0, 1\n                drop:\n                  type: integer\n                  description: if table is exist, will delete it\n                  example: 0,1\n                id_column:\n                  type: string\n                  example: \"id\"\n                feature_column:\n                  type: string\n                  description: delimited by \",\"\n                  example: x1,x2,x3\n      responses:\n        '200':\n          description: bind table success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    properties:\n                      table_name:\n                        type: string\n                        example: breast_hetero_guest\n                      namespace:\n                        type: string\n                        example: experiment\n        '404':\n          description: bind table failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 100\n                  retmsg:\n                    type: string\n                    example: engine xxx address xxx check failed\n\n  '/table/delete':\n    post:\n      summary: delete fate table\n      tags:\n        - table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - table_name\n                - namespace\n              properties:\n                table_name:\n                  type: string\n                  example: breast_hetero_guest\n                namespace:\n                  type: string\n                  example: experiment\n      responses:\n        '200':\n          description: delete table success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    properties:\n                      table_name:\n                        type: string\n                        example: breast_hetero_guest\n                      namespace:\n                        type: string\n                        example: experiment\n        '404':\n          description: delete table failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find table\n\n  '/table/list':\n    post:\n      summary: get job all tables\n      tags:\n        - table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n                - role\n                - party_id\n              properties:\n                job_id:\n                  type: string\n                  example: 202101251515021092240\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: string\n                  example: 10000\n      responses:\n        '200':\n          description: get tables success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"DataIO_0\":\n                        {\n                          \"input\":\n                          {\n                            \"Reader_0.data_0\":\n                            {\n                              \"name\": xxx,\n                              \"namespace\": xxx\n                            }\n                          },\n                          \"output\":\n                          {\n                            \"data_0\":\n                            {\n                              \"name\": xxx,\n                              \"namespace\": xxx\n                            }\n                          }\n                        },\n                        \"Intersection_0\":\n                        {\n                          \"input\":\n                          {\n                            \"DataIO_0.data_0\":\n                            {\n                              \"name\": xxx,\n                              \"namespace\": xxx\n                            }\n                          },\n                          \"output\":\n                          {\n                            \"data_0\":\n                            {\n                              \"name\": xxx,\n                              \"namespace\": xxx\n                            }\n                          }\n                        },\n                        \"Reader_0\":\n                        {\n                          \"input\":\n                          {\n                            \"table\":\n                            {\n                              \"name\": xxx,\n                              \"namespace\": \"xxxx\"\n                            }\n                          },\n                          \"output\":\n                          {\n                            \"data_0\":\n                            {\n                              \"name\": xxx,\n                              \"namespace\": xxx\n                            }\n                          }\n                        }\n                      }\n        '404':\n          description: delete table failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find table\n\n  '/table/table_info':\n    post:\n      summary: query table info\n      tags:\n        - table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - table_name\n                - namespace\n              properties:\n                table_name:\n                  type: string\n                  example: breast_hetero_guest\n                namespace:\n                  type: string\n                  example: experiment\n      responses:\n        '200':\n          description: get tables success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"address\":\n                        {},\n                        \"count\": 569,\n                        \"exist\": 1,\n                        \"namespace\": \"experiment\",\n                        \"partition\": 16,\n                        \"schema\":\n                        {\n                          \"header\": \"id,y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\",\n                          \"sid\": \"id\"\n                        },\n                        \"table_name\": \"breast_hetero_guest\"\n                      }\n        '404':\n          description: query table failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find table\n\n  '/table/tracking/source':\n    post:\n      summary: tracking table source\n      tags:\n        - table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - table_name\n                - namespace\n              properties:\n                table_name:\n                  type: string\n                  example: breast_hetero_guest\n                namespace:\n                  type: string\n                  example: experiment\n      responses:\n        '200':\n          description: tracking success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      example:\n                        {\n                          \"parent_table_name\": xxx,\n                          \"parent_table_namespace\": xxx,\n                          \"source_table_name\": xxx,\n                          \"source_table_namespace\": xxx\n                        }\n        '404':\n          description: tracking failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find table\n\n  '/table/tracking/job':\n    post:\n      summary: tracking using table job\n      tags:\n        - table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - table_name\n                - namespace\n              properties:\n                table_name:\n                  type: string\n                  example: breast_hetero_guest\n                namespace:\n                  type: string\n                  example: experiment\n      responses:\n        '200':\n          description: tracking success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      example:\n                        {\n                          \"count\": 5,\n                          \"job\":\n                          [\n                            \"202104212104472450460\",\n                            \"202104212127150470680\",\n                            \"202104220937051579910\",\n                            \"202104212038599210200\",\n                            \"202104212131462630720\"\n                          ]\n                        }\n        '404':\n          description: tracking failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find table\n\n  '/job/submit':\n    post:\n      summary: submit job\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dsl\n                - runtime_conf\n              properties:\n                dsl:\n                  type: object\n                  example:\n                    {\n                      \"components\":\n                      {\n                        \"dataio_0\":\n                        {\n                          \"input\":\n                          {\n                            \"data\":\n                            {\n                              \"data\":\n                              [\n                                \"reader_0.table\"\n                              ]\n                            }\n                          },\n                          \"module\": \"DataIO\",\n                          \"need_deploy\": true,\n                          \"output\":\n                          {\n                            \"data\":\n                            [\n                              \"train\"\n                            ],\n                            \"model\":\n                            [\n                              \"dataio\"\n                            ]\n                          }\n                        },\n                        \"evaluation_0\":\n                        {\n                          \"input\":\n                          {\n                            \"data\":\n                            {\n                              \"data\":\n                              [\n                                \"hetero_lr_0.train\"\n                              ]\n                            }\n                          },\n                          \"module\": \"Evaluation\",\n                          \"output\":\n                          {\n                            \"data\":\n                            [\n                              \"evaluate\"\n                            ]\n                          }\n                        },\n                        \"hetero_feature_binning_0\":\n                        {\n                          \"input\":\n                          {\n                            \"data\":\n                            {\n                              \"data\":\n                              [\n                                \"intersection_0.train\"\n                              ]\n                            }\n                          },\n                          \"module\": \"HeteroFeatureBinning\",\n                          \"output\":\n                          {\n                            \"data\":\n                            [\n                              \"train\"\n                            ],\n                            \"model\":\n                            [\n                              \"hetero_feature_binning\"\n                            ]\n                          }\n                        },\n                        \"hetero_feature_selection_0\":\n                        {\n                          \"input\":\n                          {\n                            \"data\":\n                            {\n                              \"data\":\n                              [\n                                \"hetero_feature_binning_0.train\"\n                              ]\n                            },\n                            \"isometric_model\":\n                            [\n                              \"hetero_feature_binning_0.hetero_feature_binning\"\n                            ]\n                          },\n                          \"module\": \"HeteroFeatureSelection\",\n                          \"output\":\n                          {\n                            \"data\":\n                            [\n                              \"train\"\n                            ],\n                            \"model\":\n                            [\n                              \"selected\"\n                            ]\n                          }\n                        },\n                        \"hetero_lr_0\":\n                        {\n                          \"input\":\n                          {\n                            \"data\":\n                            {\n                              \"train_data\":\n                              [\n                                \"hetero_feature_selection_0.train\"\n                              ]\n                            }\n                          },\n                          \"module\": \"HeteroLR\",\n                          \"output\":\n                          {\n                            \"data\":\n                            [\n                              \"train\"\n                            ],\n                            \"model\":\n                            [\n                              \"hetero_lr\"\n                            ]\n                          }\n                        },\n                        \"intersection_0\":\n                        {\n                          \"input\":\n                          {\n                            \"data\":\n                            {\n                              \"data\":\n                              [\n                                \"dataio_0.train\"\n                              ]\n                            }\n                          },\n                          \"module\": \"Intersection\",\n                          \"output\":\n                          {\n                            \"data\":\n                            [\n                              \"train\"\n                            ]\n                          }\n                        },\n                        \"reader_0\":\n                        {\n                          \"module\": \"Reader\",\n                          \"output\":\n                          {\n                            \"data\":\n                            [\n                              \"table\"\n                            ]\n                          }\n                        }\n                      }\n                    }\n                runtime_conf:\n                  type: object\n                  example:\n                    {\n                      \"component_parameters\":\n                      {\n                        \"common\":\n                        {\n                          \"hetero_lr_0\":\n                          {\n                            \"alpha\": 0.01,\n                            \"batch_size\": 320,\n                            \"init_param\":\n                            {\n                              \"init_method\": \"random_uniform\"\n                            },\n                            \"learning_rate\": 0.15,\n                            \"max_iter\": 3,\n                            \"optimizer\": \"rmsprop\",\n                            \"penalty\": \"L2\"\n                          },\n                          \"intersection_0\":\n                          {\n                            \"intersect_method\": \"raw\",\n                            \"only_output_key\": false,\n                            \"sync_intersect_ids\": true\n                          }\n                        },\n                        \"role\":\n                        {\n                          \"guest\":\n                          {\n                            \"0\":\n                            {\n                              \"dataio_0\":\n                              {\n                                \"label_name\": \"y\",\n                                \"label_type\": \"int\",\n                                \"output_format\": \"dense\",\n                                \"with_label\": true\n                              },\n                              \"reader_0\":\n                              {\n                                \"table\":\n                                {\n                                  \"name\": \"breast_hetero_guest\",\n                                  \"namespace\": \"experiment\"\n                                }\n                              }\n                            }\n                          },\n                          \"host\":\n                          {\n                            \"0\":\n                            {\n                              \"dataio_0\":\n                              {\n                                \"output_format\": \"dense\",\n                                \"with_label\": false\n                              },\n                              \"evaluation_0\":\n                              {\n                                \"need_run\": false\n                              },\n                              \"reader_0\":\n                              {\n                                \"table\":\n                                {\n                                  \"name\": \"breast_hetero_host\",\n                                  \"namespace\": \"experiment\"\n                                }\n                              }\n                            }\n                          }\n                        }\n                      },\n                      \"dsl_version\": \"2\",\n                      \"initiator\":\n                      {\n                        \"party_id\": 9999,\n                        \"role\": \"guest\"\n                      },\n                      \"job_parameters\":\n                      {\n                        \"common\":\n                        {\n                          \"auto_retries\": 1,\n                          \"computing_partitions\": 8,\n                          \"task_cores\": 4,\n                          \"task_parallelism\": 2\n                        }\n                      },\n                      \"role\":\n                      {\n                        \"arbiter\":\n                        [\n                          10000\n                        ],\n                        \"guest\":\n                        [\n                          9999\n                        ],\n                        \"host\":\n                        [\n                          10000\n                        ]\n                      }\n                    }\n      responses:\n        '200':\n          description: submit job success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"board_url\": xxx,\n                        \"code\": 0,\n                        \"dsl_path\": xxx,\n                        \"job_id\": xxx,\n                        \"logs_directory\": xxx,\n                        \"message\": \"success\",\n                        \"model_info\":\n                        {\n                          \"model_id\": xxx,\n                          \"model_version\": xxx\n                        },\n                        \"pipeline_dsl_path\": xxx,\n                        \"runtime_conf_on_party_path\": xxx,\n                        \"runtime_conf_path\": xxx,\n                        \"train_runtime_conf_path\": xxx\n                      }\n        '404':\n          description: submit job failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: \"config error\"\n\n  '/job/stop':\n    post:\n      summary: stop job\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n                  example: 202103231958539401540\n                stop_status:\n                  type: string\n                  default: cancel\n                  example: \"failed\"\n                  description: \"failed or cancel\"\n      responses:\n        '200':\n          description: stop job success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: stop job failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find job\n\n  '/job/rerun':\n    post:\n      summary: rerun job\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n                  example: 202103231958539401540\n      responses:\n        '200':\n          description: rerun job success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: rerun job failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find job\n\n  '/job/query':\n    post:\n      summary: query job\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n      responses:\n        '200':\n          description: query job success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      example:\n                        {\n                          \"f_apply_resource_time\": xxx,\n                          \"f_cancel_signal\": false,\n                          \"f_cancel_time\": xxx,\n                          \"f_cores\": 8,\n                          \"f_create_date\": xxx,\n                          \"f_create_time\": xxx,\n                          \"f_description\": \"\",\n                          \"f_dsl\": {},\n                          \"f_elapsed\": 14380,\n                          \"f_end_date\": xxx,\n                          \"f_end_scheduling_updates\": 1,\n                          \"f_end_time\": xxx,\n                          \"f_engine_name\": \"EGGROLL\",\n                          \"f_engine_type\": \"computing\",\n                          \"f_initiator_party_id\": \"20001\",\n                          \"f_initiator_role\": \"guest\",\n                          \"f_is_initiator\": true,\n                          \"f_job_id\": xxx,\n                          \"f_memory\": 0,\n                          \"f_name\": \"\",\n                          \"f_party_id\": \"20001\",\n                          \"f_progress\": 14,\n                          \"f_ready_signal\": false,\n                          \"f_ready_time\": null,\n                          \"f_remaining_cores\": 8,\n                          \"f_remaining_memory\": 0,\n                          \"f_rerun_signal\": false,\n                          \"f_resource_in_use\": false,\n                          \"f_return_resource_time\": xxx,\n                          \"f_role\": \"guest\",\n                          \"f_roles\": {},\n                          \"f_runtime_conf\": {},\n                          \"f_runtime_conf_on_party\": {},\n                          \"f_start_date\": xxx,\n                          \"f_start_time\": xxx,\n                          \"f_status\": \"failed\",\n                          \"f_status_code\": null,\n                          \"f_tag\": \"job_end\",\n                          \"f_train_runtime_conf\": {},\n                          \"f_update_date\": xxx,\n                          \"f_update_time\": xxx,\n                          \"f_user\": {},\n                          \"f_user_id\": \"\"\n                        }\n        '404':\n          description: query job failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find job\n\n  '/job/list/job':\n    post:\n      summary: list jobs\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                limit:\n                  type: integer\n                  description: '`0` means no limit'\n                  example: 20\n                page:\n                  type: integer\n                  example: 1\n                job_id:\n                  type: string\n                  example: '202112020129140220090'\n                party_id:\n                  type: integer\n                  example: 9999\n                role:\n                  type: array\n                  items:\n                    type: string\n                    enum:\n                      - guest\n                      - host\n                      - arbiter\n                      - local\n                status:\n                  type: array\n                  items:\n                    type: string\n                    enum:\n                      - success\n                      - running\n                      - waiting\n                      - failed\n                      - canceled\n                description:\n                  type: string\n                  description: '`notes` on front-end'\n                order_by:\n                  type: string\n                  description: 'defaults `create_time`'\n                  enum:\n                      - create_time\n                      - start_time\n                      - end_time\n                      - elapsed\n                order:\n                  type: string\n                  description: 'defaults `desc`'\n                  enum:\n                      - asc\n                      - desc\n      responses:\n        '200':\n          description: jobs list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        type: integer\n                        example: 1\n                      jobs:\n                        type: array\n                        items:\n                          type: object\n                          example:\n                            apply_resource_time: 1638379762883\n                            cancel_signal: false\n                            cancel_time:\n                            cores: 4\n                            create_date: '2021-12-02 01:29:18'\n                            create_time: 1638379758581\n                            description: ''\n                            dsl:\n                              components:\n                                dataio_0:\n                                  input:\n                                    data:\n                                      data:\n                                        - reader_0.data\n                                  module: DataIO\n                                  output:\n                                    data:\n                                      - data\n                                    model:\n                                      - model\n                                hetero_feature_binning_0:\n                                  input:\n                                    data:\n                                      data:\n                                        - intersection_0.data\n                                  module: HeteroFeatureBinning\n                                  output:\n                                    data:\n                                      - data\n                                    model:\n                                      - model\n                                intersection_0:\n                                  input:\n                                    data:\n                                      data:\n                                        - dataio_0.data\n                                  module: Intersection\n                                  output:\n                                    cache:\n                                      - cache\n                                    data:\n                                      - data\n                                reader_0:\n                                  module: Reader\n                                  output:\n                                    data:\n                                      - data\n                                  provider: fate_flow@1.7.0\n                            elapsed: 116548\n                            end_date: '2021-12-02 01:31:19'\n                            end_scheduling_updates: 1\n                            end_time: 1638379879547\n                            engine_name: STANDALONE\n                            engine_type: computing\n                            initiator_party_id: '10000'\n                            initiator_role: guest\n                            is_initiator: true\n                            job_id: '202112020129140220090'\n                            memory: 0\n                            name: ''\n                            partners:\n                              - 9999\n                            party_id: 10000\n                            progress: 100\n                            ready_signal: false\n                            ready_time:\n                            remaining_cores: 4\n                            remaining_memory: 0\n                            rerun_signal: false\n                            resource_in_use: false\n                            return_resource_time: 1638379879568\n                            role: guest\n                            roles:\n                              guest:\n                                - 10000\n                              host:\n                                - 9999\n                            runtime_conf:\n                              component_parameters:\n                                common:\n                                  hetero_feature_binning_0:\n                                    adjustment_factor: 0.5\n                                    bin_indexes: -1\n                                    bin_names:\n                                    bin_num: 10\n                                    category_indexes:\n                                    category_names:\n                                    compress_thres: 10000\n                                    error: 0.001\n                                    head_size: 10000\n                                    local_only: false\n                                    method: quantile\n                                    transform_param:\n                                      transform_cols:\n                                        - 0\n                                        - 1\n                                        - 2\n                                      transform_names:\n                                      transform_type: woe\n                                role:\n                                  guest:\n                                    '0':\n                                      dataio_0:\n                                        with_label: true\n                                      reader_0:\n                                        table:\n                                          name: breast_hetero_guest\n                                          namespace: experiment\n                                  host:\n                                    '0':\n                                      dataio_0:\n                                        with_label: false\n                                      hetero_feature_binning_0:\n                                        transform_param:\n                                          transform_type:\n                                      reader_0:\n                                        table:\n                                          name: breast_hetero_host\n                                          namespace: experiment\n                              conf_path: \"/tmp/tmp2zc5tf8b/job_runtime_conf.json\"\n                              dsl_path: \"/tmp/tmp2zc5tf8b/job_dsl.json\"\n                              dsl_version: 2\n                              initiator:\n                                party_id: 10000\n                                role: guest\n                              job_parameters:\n                                common:\n                                  adaptation_parameters:\n                                    if_initiator_baseline: true\n                                    request_task_cores: 4\n                                    task_cores_per_node: 4\n                                    task_memory_per_node: 0\n                                    task_nodes: 1\n                                  auto_retries: 0\n                                  auto_retry_delay: 1\n                                  computing_engine: STANDALONE\n                                  computing_partitions: 4\n                                  eggroll_run: { }\n                                  engines_address: { }\n                                  federated_mode: SINGLE\n                                  federated_status_collect_type: PUSH\n                                  federation_engine: STANDALONE\n                                  job_type: train\n                                  model_id: guest-10000#host-9999#model\n                                  model_version: '202112020129140220090'\n                                  pulsar_run: { }\n                                  rabbitmq_run: { }\n                                  spark_run: { }\n                                  storage_engine: STANDALONE\n                                  task_parallelism: 1\n                              role:\n                                guest:\n                                  - 10000\n                                host:\n                                  - 9999\n                            runtime_conf_on_party:\n                              component_parameters:\n                                common:\n                                  hetero_feature_binning_0:\n                                    adjustment_factor: 0.5\n                                    bin_indexes: -1\n                                    bin_names:\n                                    bin_num: 10\n                                    category_indexes:\n                                    category_names:\n                                    compress_thres: 10000\n                                    error: 0.001\n                                    head_size: 10000\n                                    local_only: false\n                                    method: quantile\n                                    transform_param:\n                                      transform_cols:\n                                        - 0\n                                        - 1\n                                        - 2\n                                      transform_names:\n                                      transform_type: woe\n                                role:\n                                  guest:\n                                    '0':\n                                      dataio_0:\n                                        with_label: true\n                                      reader_0:\n                                        table:\n                                          name: breast_hetero_guest\n                                          namespace: experiment\n                                  host:\n                                    '0':\n                                      dataio_0:\n                                        with_label: false\n                                      hetero_feature_binning_0:\n                                        transform_param:\n                                          transform_type:\n                                      reader_0:\n                                        table:\n                                          name: breast_hetero_host\n                                          namespace: experiment\n                              conf_path: \"/tmp/tmp2zc5tf8b/job_runtime_conf.json\"\n                              dsl_path: \"/tmp/tmp2zc5tf8b/job_dsl.json\"\n                              dsl_version: 2\n                              initiator:\n                                party_id: 10000\n                                role: guest\n                              job_parameters:\n                                adaptation_parameters:\n                                  if_initiator_baseline: false\n                                  request_task_cores: 4\n                                  task_cores_per_node: 4\n                                  task_memory_per_node: 0\n                                  task_nodes: 1\n                                auto_retries: 0\n                                auto_retry_delay: 1\n                                computing_engine: STANDALONE\n                                computing_partitions: 4\n                                eggroll_run:\n                                  eggroll.session.processors.per.node: 4\n                                engines_address:\n                                  computing:\n                                    cores_per_node: 20\n                                    nodes: 1\n                                  federation:\n                                    cores_per_node: 20\n                                    nodes: 1\n                                  storage:\n                                    cores_per_node: 20\n                                    nodes: 1\n                                federated_mode: SINGLE\n                                federated_status_collect_type: PUSH\n                                federation_engine: STANDALONE\n                                job_type: train\n                                model_id: guest-10000#host-9999#model\n                                model_version: '202112020129140220090'\n                                pulsar_run: { }\n                                rabbitmq_run: { }\n                                spark_run: { }\n                                storage_engine: STANDALONE\n                                task_parallelism: 1\n                              role:\n                                guest:\n                                  - 10000\n                                host:\n                                  - 9999\n                            start_date: '2021-12-02 01:29:22'\n                            start_time: 1638379762999\n                            status: success\n                            status_code:\n                            tag: job_end\n                            train_runtime_conf: { }\n                            update_date: '2021-12-02 01:32:04'\n                            update_time: 1638379924749\n                            user:\n                              guest:\n                                '10000': ''\n                              host:\n                                '9999': ''\n                            user_id: ''\n\n  '/job/list/task':\n    post:\n      summary: list tasks\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                limit:\n                  type: integer\n                  description: '`0` means no limit'\n                  example: 20\n                page:\n                  type: integer\n                  example: 1\n                job_id:\n                  type: string\n                  example: '202112020129140220090'\n                party_id:\n                  type: integer\n                  example: 9999\n                role:\n                  type: string\n                  enum:\n                    - guest\n                    - host\n                    - arbiter\n                    - local\n                component_name:\n                  type: string\n                  example: upload_0\n                order_by:\n                  type: string\n                  description: 'defaults `create_time`'\n                  enum:\n                      - create_time\n                      - start_time\n                      - end_time\n                      - elapsed\n                order:\n                  type: string\n                  description: 'defaults `asc`'\n                  enum:\n                      - asc\n                      - desc\n      responses:\n        '200':\n          description: jobs list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        type: integer\n                        example: 1\n                      tasks:\n                        type: array\n                        items:\n                          type: object\n                          example:\n                            auto_retries: 0\n                            auto_retry_delay: 1\n                            cmd:\n                              - \"/root/Codes/FATE/venv/bin/python3.6\"\n                              - \"/root/Codes/FATE/fateflow/python/fate_flow/worker/task_executor.py\"\n                              - \"--job_id\"\n                              - '202112020129140220090'\n                              - \"--component_name\"\n                              - hetero_feature_binning_0\n                              - \"--task_id\"\n                              - 202112020129140220090_hetero_feature_binning_0\n                              - \"--task_version\"\n                              - 0\n                              - \"--role\"\n                              - guest\n                              - \"--party_id\"\n                              - '10000'\n                              - \"--config\"\n                              - \"/root/Codes/FATE/fateflow/jobs/202112020129140220090/guest/10000/hetero_feature_binning_0/202112020129140220090_hetero_feature_binning_0/0/task_executor/6b6f4b1852cc11ec8a8700155d13c16c/config.json\"\n                              - \"--result\"\n                              - \"/root/Codes/FATE/fateflow/jobs/202112020129140220090/guest/10000/hetero_feature_binning_0/202112020129140220090_hetero_feature_binning_0/0/task_executor/6b6f4b1852cc11ec8a8700155d13c16c/result.json\"\n                              - \"--log_dir\"\n                              - \"/root/Codes/FATE/fateflow/logs/202112020129140220090/guest/10000/hetero_feature_binning_0\"\n                              - \"--parent_log_dir\"\n                              - \"/root/Codes/FATE/fateflow/logs/202112020129140220090/guest/10000\"\n                              - \"--worker_id\"\n                              - 6b6f4b1852cc11ec8a8700155d13c16c\n                              - \"--run_ip\"\n                              - 127.0.0.1\n                              - \"--job_server\"\n                              - 127.0.0.1:9380\n                              - \"--session_id\"\n                              - 202112020129140220090_hetero_feature_binning_0_0_guest_10000\n                              - \"--federation_session_id\"\n                              - 202112020129140220090_hetero_feature_binning_0_0\n                            component_module: HeteroFeatureBinning\n                            component_name: hetero_feature_binning_0\n                            component_parameters:\n                              CodePath: HeteroFeatureBinningGuest\n                              ComponentParam:\n                                _feeded_deprecated_params: [ ]\n                                _is_raw_conf: false\n                                _name: HeteroFeatureBinning#hetero_feature_binning_0\n                                _user_feeded_params:\n                                  - head_size\n                                  - category_names\n                                  - bin_num\n                                  - transform_param.transform_names\n                                  - transform_param\n                                  - compress_thres\n                                  - error\n                                  - method\n                                  - bin_indexes\n                                  - transform_param.transform_type\n                                  - bin_names\n                                  - category_indexes\n                                  - local_only\n                                  - transform_param.transform_cols\n                                  - adjustment_factor\n                                adjustment_factor: 0.5\n                                bin_indexes: -1\n                                bin_names:\n                                bin_num: 10\n                                category_indexes:\n                                category_names:\n                                compress_thres: 10000\n                                encrypt_param:\n                                  key_length: 1024\n                                  method: Paillier\n                                error: 0.001\n                                head_size: 10000\n                                local_only: false\n                                method: quantile\n                                need_run: true\n                                optimal_binning_param:\n                                  adjustment_factor:\n                                  init_bin_nums: 1000\n                                  init_bucket_method: quantile\n                                  max_bin:\n                                  max_bin_pct: 1\n                                  metric_method: iv\n                                  min_bin_pct: 0.05\n                                  mixture: true\n                                skip_static: false\n                                transform_param:\n                                  transform_cols:\n                                    - 0\n                                    - 1\n                                    - 2\n                                  transform_names:\n                                  transform_type: woe\n                              conf_path: \"/tmp/tmp2zc5tf8b/job_runtime_conf.json\"\n                              dsl_path: \"/tmp/tmp2zc5tf8b/job_dsl.json\"\n                              dsl_version: 2\n                              initiator:\n                                party_id: 10000\n                                role: guest\n                              job_parameters:\n                                common:\n                                  adaptation_parameters:\n                                    if_initiator_baseline: true\n                                    request_task_cores: 4\n                                    task_cores_per_node: 4\n                                    task_memory_per_node: 0\n                                    task_nodes: 1\n                                  auto_retries: 0\n                                  auto_retry_delay: 1\n                                  computing_engine: STANDALONE\n                                  computing_partitions: 4\n                                  eggroll_run: { }\n                                  engines_address: { }\n                                  federated_mode: SINGLE\n                                  federated_status_collect_type: PUSH\n                                  federation_engine: STANDALONE\n                                  job_type: train\n                                  model_id: guest-10000#host-9999#model\n                                  model_version: '202112020129140220090'\n                                  pulsar_run: { }\n                                  rabbitmq_run: { }\n                                  spark_run: { }\n                                  storage_engine: STANDALONE\n                                  task_parallelism: 1\n                              local:\n                                party_id: 10000\n                                role: guest\n                              module: HeteroFeatureBinning\n                              role:\n                                guest:\n                                  - 10000\n                                host:\n                                  - 9999\n                            create_date: '2021-12-02 01:29:21'\n                            create_time: 1638379761918\n                            elapsed: 9095\n                            end_date: '2021-12-02 01:31:04'\n                            end_time: 1638379864051\n                            engine_conf:\n                              computing_engine: STANDALONE\n                            federated_mode: SINGLE\n                            federated_status_collect_type: PUSH\n                            initiator_party_id: '10000'\n                            initiator_role: guest\n                            job_id: '202112020129140220090'\n                            party_id: '10000'\n                            party_status: success\n                            provider_info:\n                              class_path:\n                                feature_instance: feature.instance.Instance\n                                feature_vector: feature.sparse_vector.SparseVector\n                                homo_model_convert: protobuf.homo_model_convert.homo_model_convert\n                                interface: components.components.Components\n                                model: protobuf.generated\n                                model_migrate: protobuf.model_migrate.model_migrate\n                              env:\n                                PYTHONPATH: \"/root/Codes/FATE/python\"\n                              name: fate\n                              path: \"/root/Codes/FATE/python/federatedml\"\n                              version: 1.7.0\n                            role: guest\n                            run_ip: 127.0.0.1\n                            run_on_this_party: true\n                            run_pid: 29934\n                            start_date: '2021-12-02 01:30:47'\n                            start_time: 1638379847118\n                            status: success\n                            status_code:\n                            task_id: 202112020129140220090_hetero_feature_binning_0\n                            task_version: 0\n                            update_date: '2021-12-02 01:31:06'\n                            update_time: 1638379866439\n                            worker_id: 6b6f4b1852cc11ec8a8700155d13c16c\n\n  '/job/update':\n    post:\n      summary: job notes\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n                - role\n                - party_id\n                - notes\n              properties:\n                job_id:\n                  type: string\n                  example: \"2022xxx\"\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                notes:\n                  type: string\n                  example: this is a test\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find job\n\n  '/job/parameter/update':\n    post:\n      summary: update job parameter\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n                  example: \"2022xxx\"\n                component_parameters:\n                  type: object\n                  example:\n                    {\n                      \"common\":\n                      {\n                        \"hetero_lr_0\":\n                        {\n                          \"max_iter\": 10\n                        }\n                      }\n                    }\n                job_parameters:\n                  type: object\n                  example:\n                    {\n                      \"common\":\n                      {\n                        \"auto_retries\": 2\n                      }\n                    }\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"component_parameters\":\n                        {\n                          \"common\":\n                          {\n                            \"hetero_lr_0\":\n                            {\n                              \"alpha\": 0.01,\n                              \"batch_size\": 320,\n                              \"init_param\":\n                              {\n                                \"init_method\": \"random_uniform\"\n                              },\n                              \"learning_rate\": 0.15,\n                              \"max_iter\": 10,\n                              \"optimizer\": \"rmsprop\",\n                              \"penalty\": \"L2\"\n                            },\n                            \"intersection_0\":\n                            {\n                              \"intersect_method\": \"raw\",\n                              \"only_output_key\": false,\n                              \"sync_intersect_ids\": true\n                            }\n                          },\n                          \"role\":\n                          {\n                            \"guest\":\n                            {\n                              \"0\":\n                              {\n                                \"dataio_0\":\n                                {\n                                  \"label_name\": \"y\",\n                                  \"label_type\": \"int\",\n                                  \"output_format\": \"dense\",\n                                  \"with_label\": true\n                                },\n                                \"reader_0\":\n                                {\n                                  \"table\":\n                                  {\n                                    \"name\": \"breast_hetero_guest\",\n                                    \"namespace\": \"experiment\"\n                                  }\n                                }\n                              }\n                            },\n                            \"host\":\n                            {\n                              \"0\":\n                              {\n                                \"dataio_0\":\n                                {\n                                  \"output_format\": \"dense\",\n                                  \"with_label\": false\n                                },\n                                \"evaluation_0\":\n                                {\n                                  \"need_run\": false\n                                },\n                                \"reader_0\":\n                                {\n                                  \"table\":\n                                  {\n                                    \"name\": \"breast_hetero_host\",\n                                    \"namespace\": \"experiment\"\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n                        \"components\":\n                        [],\n                        \"job_parameters\":\n                        {\n                          \"common\":\n                          {\n                            \"adaptation_parameters\":\n                            {\n                              \"if_initiator_baseline\": true,\n                              \"request_task_cores\": 4,\n                              \"task_cores_per_node\": 4,\n                              \"task_memory_per_node\": 0,\n                              \"task_nodes\": 1\n                            },\n                            \"auto_retries\": 2,\n                            \"auto_retry_delay\": 1,\n                            \"computing_engine\": \"EGGROLL\",\n                            \"computing_partitions\": 4,\n                            \"eggroll_run\":\n                            {},\n                            \"engines_address\":\n                            {},\n                            \"federated_mode\": \"MULTIPLE\",\n                            \"federated_status_collect_type\": \"PUSH\",\n                            \"inheritance_info\":\n                            {},\n                            \"job_type\": \"train\",\n                            \"model_id\": \"arbiter-10001#guest-20001#host-10001#model\",\n                            \"model_version\": \"202204251958539401540\",\n                            \"pulsar_run\":\n                            {},\n                            \"rabbitmq_run\":\n                            {},\n                            \"spark_run\":\n                            {},\n                            \"task_parallelism\": 1\n                          }\n                        },\n                        \"src_party_id\": \"20001\",\n                        \"src_role\": \"guest\"\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find job\n\n  '/job/config':\n    post:\n      summary: job config\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n                  example: \"2022xxx\"\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"dsl\":\n                        {},\n                        \"job_id\": \"2022xxx\",\n                        \"model_info\":\n                        {},\n                        \"runtime_conf\":\n                        {},\n                        \"train_runtime_conf\":\n                        {}\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find job\n\n  '/job/log/download':\n    post:\n      summary: download job log (tar.gz)\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n      responses:\n        '200':\n          description: get job log success\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                description: file xxx_log.tar.gz\n        '404':\n          description: get job list failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 404\n                  retmsg:\n                    type: string\n                    example: Log file path xxx not found. Please check if the job id is valid.\n\n  '/job/log/path':\n    post:\n      summary: job log path\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"logs_directory\": \"/data/projects/fate/fateflow/logs/xxx\"\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find job\n\n  '/job/task/query':\n    post:\n      summary: query task\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - job_id\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: reader_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: array\n                    description: tasks list\n                    items:\n                      type: object\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find task\n\n  '/job/clean':\n    post:\n      summary: clean job\n      tags:\n        - job\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: reader_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no find task\n\n  '/job/clean/queue':\n    post:\n      summary: cancel waiting job\n      tags:\n        - job\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"202204261616186991350\": 0,\n                        \"202204261616198643190\": 0,\n                        \"202204261616210073410\": 0\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: server error\n\n  '/tracking/job/data_view':\n    post:\n      summary: data view\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"dataset\":\n                        {\n                          \"guest\":\n                          {\n                            \"9999\":\n                            {\n                              \"Reader_0\": \"xxx.xxx\"\n                            }\n                          },\n                          \"host\":\n                          {\n                            \"10000\":\n                            {\n                              \"Reader_0\": \"xxx.xxx\"\n                            }\n                          }\n                        },\n                        \"model_summary\":\n                        {},\n                        \"partner\":\n                        {\n                          \"host\":\n                          [\n                            10000\n                          ]\n                        },\n                        \"roles\":\n                        {\n                          \"guest\":\n                          [\n                            9999\n                          ],\n                          \"host\":\n                          [\n                            10000\n                          ]\n                        }\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/metric/all':\n    post:\n      summary: get component all metric\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: HeteroSecureBoost_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"train\":\n                        {\n                          \"loss\":\n                          {\n                            \"data\":\n                            [\n                              [\n                                0,\n                                0.6076415445876732\n                              ],\n                              [\n                                1,\n                                0.5374539452565573\n                              ],\n                              [\n                                2,\n                                0.4778598986135903\n                              ],\n                              [\n                                3,\n                                0.42733599866560723\n                              ],\n                              [\n                                4,\n                                0.38433409799127843\n                              ]\n                            ],\n                            \"meta\":\n                            {\n                              \"Best\": 0.38433409799127843,\n                              \"curve_name\": \"loss\",\n                              \"metric_type\": \"LOSS\",\n                              \"name\": \"train\",\n                              \"unit_name\": \"iters\"\n                            }\n                          }\n                        }\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/metrics':\n    post:\n      summary: get component metric name and namespace\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"train\":\n                        [\n                          \"intersection\"\n                        ]\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/metric_data':\n    post:\n      summary: get component metric data\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n                - metric_name\n                - metric_namespace\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n                metric_name:\n                  type: string\n                  example: intersection\n                metric_namespace:\n                  type: string\n                  example: train\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"data\":\n                        [\n                          [\n                            \"intersect_count\",\n                            569\n                          ],\n                          [\n                            \"intersect_rate\",\n                            1.0\n                          ],\n                          [\n                            \"unmatched_count\",\n                            0\n                          ],\n                          [\n                            \"unmatched_rate\",\n                            0.0\n                          ]\n                        ],\n                        \"meta\":\n                        {\n                          \"intersect_method\": \"raw\",\n                          \"join_method\": \"inner_join\",\n                          \"metric_type\": \"INTERSECTION\",\n                          \"name\": \"intersection\"\n                        }\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/parameters':\n    post:\n      summary: get component parameters\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"ComponentParam\":\n                        {\n                          \"_feeded_deprecated_params\":\n                          [\n                            \"repeated_id_owner\",\n                            \"intersect_cache_param\",\n                            \"join_role\",\n                            \"encode_params\",\n                            \"allow_info_share\",\n                            \"repeated_id_process\",\n                            \"random_bit\",\n                            \"with_encode\",\n                            \"info_owner\"\n                          ],\n                          \"_is_raw_conf\": false,\n                          \"_name\": \"Intersection#Intersection_0\",\n                          \"_user_feeded_params\":\n                          [\n                            \"repeated_id_owner\",\n                            \"encode_params.salt\",\n                            \"intersect_method\",\n                            \"intersect_cache_param.encrypt_type\",\n                            \"encode_params.encode_method\",\n                            \"encode_params\",\n                            \"intersect_cache_param\",\n                            \"intersect_cache_param.id_type\",\n                            \"intersect_cache_param.use_cache\",\n                            \"join_role\",\n                            \"allow_info_share\",\n                            \"repeated_id_process\",\n                            \"sync_intersect_ids\",\n                            \"random_bit\",\n                            \"only_output_key\",\n                            \"with_encode\",\n                            \"encode_params.base64\",\n                            \"info_owner\"\n                          ],\n                          \"allow_info_share\": false,\n                          \"cardinality_only\": false,\n                          \"dh_params\":\n                          {\n                            \"hash_method\": \"sha256\",\n                            \"key_length\": 1024,\n                            \"salt\": \"\"\n                          },\n                          \"encode_params\":\n                          {\n                            \"base64\": false,\n                            \"encode_method\": \"none\",\n                            \"salt\": \"\"\n                          },\n                          \"info_owner\": \"guest\",\n                          \"intersect_cache_param\":\n                          {\n                            \"encrypt_type\": \"sha256\",\n                            \"id_type\": \"phone\",\n                            \"use_cache\": false\n                          },\n                          \"intersect_method\": \"raw\",\n                          \"intersect_preprocess_params\":\n                          {\n                            \"encrypt_method\": \"rsa\",\n                            \"false_positive_rate\": 0.001,\n                            \"filter_owner\": \"guest\",\n                            \"hash_method\": \"sha256\",\n                            \"preprocess_method\": \"sha256\",\n                            \"preprocess_salt\": \"\",\n                            \"random_state\": null\n                          },\n                          \"join_method\": \"inner_join\",\n                          \"join_role\": \"guest\",\n                          \"new_sample_id\": false,\n                          \"only_output_key\": false,\n                          \"random_bit\": 128,\n                          \"raw_params\":\n                          {\n                            \"base64\": false,\n                            \"hash_method\": \"none\",\n                            \"join_role\": \"guest\",\n                            \"salt\": \"\",\n                            \"use_hash\": false\n                          },\n                          \"repeated_id_owner\": \"guest\",\n                          \"repeated_id_process\": false,\n                          \"rsa_params\":\n                          {\n                            \"final_hash_method\": \"sha256\",\n                            \"hash_method\": \"sha256\",\n                            \"key_length\": 1024,\n                            \"random_base_fraction\": null,\n                            \"random_bit\": 128,\n                            \"salt\": \"\",\n                            \"split_calculation\": false\n                          },\n                          \"run_cache\": false,\n                          \"run_preprocess\": false,\n                          \"sample_id_generator\": \"guest\",\n                          \"sync_cardinality\": false,\n                          \"sync_intersect_ids\": true,\n                          \"with_encode\": false,\n                          \"with_sample_id\": false\n                        },\n                        \"module\": \"Intersection\"\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/summary/download':\n    post:\n      summary: get component summary\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"cardinality_only\": false,\n                        \"intersect_num\": 569,\n                        \"intersect_rate\": 1.0\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/output/model':\n    post:\n      summary: get component output model\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/output/data':\n    post:\n      summary: get component output data\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      [\n                        [\n                          [\n                            \"58\",\n                            1,\n                            -0.422281,\n                            -0.558102,\n                            -0.506991,\n                            -0.450875,\n                            -1.326851,\n                            -1.223647,\n                            -1.296979,\n                            -1.575895,\n                            -0.747019,\n                            -1.166825\n                          ],\n                          [\n                            \"66\",\n                            1,\n                            -1.213336,\n                            0.957974,\n                            -1.19832,\n                            -0.966647,\n                            0.983301,\n                            -0.558944,\n                            -0.854288,\n                            -0.752745,\n                            -0.036814,\n                            0.452425\n                          ]\n                        ]\n                      ]\n                  meta:\n                    type: object\n                    example:\n                      {\n                        \"header\":\n                        [\n                          [\n                            \"id\",\n                            \"y\",\n                            \"x0\",\n                            \"x1\",\n                            \"x2\",\n                            \"x3\",\n                            \"x4\",\n                            \"x5\",\n                            \"x6\",\n                            \"x7\",\n                            \"x8\",\n                            \"x9\"\n                          ]\n                        ],\n                        \"names\":\n                        [\n                          \"data_0\"\n                        ],\n                        \"total\":\n                        [\n                          569\n                        ]\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/output/data/download':\n    post:\n      summary: download component output data (tar.gz)\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                example: \"\"\n                description: file data.tar.gz\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/tracking/component/output/data/table':\n    post:\n      summary: get component output data table info\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n                - role\n                - party_id\n                - component_name\n              type: object\n              properties:\n                job_id:\n                  type: string\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 10000\n                component_name:\n                  type: string\n                  example: Intersection_0\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      example:\n                        [\n                          {\n                            \"data_name\": \"data_0\",\n                            \"table_name\": \"ab035e12b09711ec943e525400c367ed\",\n                            \"table_namespace\": \"output_data_202203311009181495690_Intersection_0_0\"\n                          }\n                        ]\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: No found table, please check if the parameters are correct\n\n  '/tracking/component/list':\n    post:\n      summary: get component list\n      tags:\n        - tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n              type: object\n              properties:\n                job_id:\n                  type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example:\n                      {\n                        \"components\":\n                        [\n                          \"HeteroFeatureSelection_0\",\n                          \"DataIO_0\",\n                          \"Reader_0\",\n                          \"HeteroSecureBoost_0\",\n                          \"HeteroFeatureBinning_0\",\n                          \"Intersection_0\",\n                          \"Evaluation_0\"\n                        ]\n                      }\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/resource/query':\n    post:\n      summary: query conputing engine resource\n      tags:\n        - resource\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - engine_name\n              type: object\n              properties:\n                engine_name:\n                  type: string\n                  example: EGGROLL, SPARK\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example: {\"computing_engine_resource\":{\"f_cores\":16,\"f_create_date\":\"2022-02-10 16:14:03\",\"f_create_time\":1644480843818,\"f_engine_config\":{\"cores_per_node\":16,\"nodes\":1},\"f_engine_entrance\":\"fate_on_eggroll\",\"f_engine_name\":\"EGGROLL\",\"f_engine_type\":\"computing\",\"f_memory\":0,\"f_nodes\":1,\"f_remaining_cores\":16,\"f_remaining_memory\":0,\"f_update_date\":\"2022-04-27 15:48:33\",\"f_update_time\":1651045713996},\"use_resource_job\":[]}\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/resource/return':\n    post:\n      summary: return job resource\n      tags:\n        - resource\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - job_id\n              type: object\n              properties:\n                engine_name:\n                  type: string\n                  example: 202204261616175720130\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example: [{\"job_id\":\"202204261616175720130\",\"party_id\":\"20001\",\"resource_in_use\":true,\"resource_return_status\":ture,\"role\":\"guest\"}]\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: no found job\n\n  '/permission/grant/privilege':\n    post:\n      summary: grant privilege\n      tags:\n        - permission\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - src_role\n                - src_party_id\n              type: object\n              properties:\n                src_role:\n                  type: string\n                  example: \"guest\"\n                src_party_id:\n                  type: string\n                  example: 9999\n                privilege_role:\n                  type: string\n                  description: multiple separated by \",\". like \"guest, host, arbiter\" or \"all\"\n                  example: all\n                privilege_component:\n                  type: string\n                  description: multiple separated by \",\". like \"create, run, stop\" or \"all\"\n                  example: all\n                privilege_command:\n                  type: string\n                  description: multiple separated bu \",\". like \"reader, dataio, ...\" or \"all\"\n                  example: all\n\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/permission/delete/privilege':\n    post:\n      summary: delete privilege\n      tags:\n        - permission\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - src_role\n                - src_party_id\n              type: object\n              properties:\n                src_role:\n                  type: string\n                  example: \"guest\"\n                src_party_id:\n                  type: string\n                  example: 9999\n                privilege_role:\n                  type: string\n                  description: multiple separated by \",\". like \"guest, host, arbiter\" or \"all\"\n                  example: all\n                privilege_component:\n                  type: string\n                  description: multiple separated by \",\". like \"create, run, stop\" or \"all\"\n                  example: all\n                privilege_command:\n                  type: string\n                  description: multiple separated bu \",\". like \"reader, dataio, ...\" or \"all\"\n                  example: all\n\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n  '/permission/query/privilege':\n    post:\n      summary: query privilege\n      tags:\n        - permission\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - src_role\n                - src_party_id\n              type: object\n              properties:\n                src_role:\n                  type: string\n                  example: \"guest\"\n                src_party_id:\n                  type: string\n                  example: 9999\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    example: {\"privilege_command\":[\"stop\",\"run\",\"create\"],\"privilege_component\":[\"reader\", \"dataio\",\"heterolinr\", \"heterolr\", \"localbaseline\",\"columnexpand\",\"heteropearson\",\"featurescale\",\"datastatistics\",\"feldmanverifiablesum\"],\"privilege_role\":[\"host\",\"guest\",\"arbiter\"],\"role\":\"guest\",\"src_party_id\":\"9999\"}\n        '404':\n          description: failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 101\n                  retmsg:\n                    type: string\n                    example: error\n\n\n  '/info/fateboard':\n    post:\n      summary: get fateboard host and port\n      tags:\n        - information\n      responses:\n        '200':\n          description: fateboard host and port\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    properties:\n                      host:\n                        type: string\n                        example: 127.0.0.1\n                      port:\n                        type: integer\n                        example: 8080\n        '404':\n          description: fateboard is not configured\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 404\n                  retmsg:\n                    type: string\n                    example: fateboard is not configured\n\n  '/info/mysql':\n    post:\n      summary: test mysql connection\n      tags:\n        - information\n      responses:\n        '200':\n          description: connect to mysql successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: mysql only available on cluster mode\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 404\n                  retmsg:\n                    type: string\n                    example: mysql only available on cluster mode\n        '503':\n          description: connect to mysql failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 503\n                  retmsg:\n                    type: string\n                    description: error message\n\n  '/info/eggroll':\n    post:\n      summary: test eggroll connection\n      tags:\n        - information\n      responses:\n        '200':\n          description: connect to eggroll successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '404':\n          description: eggroll only available on cluster mode\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 404\n                  retmsg:\n                    type: string\n                    example: eggroll only available on cluster mode\n        '503':\n          description: connect to eggroll failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 503\n                  retmsg:\n                    type: string\n                    description: error message\n\n  '/model/deploy':\n    post:\n      summary: deploy a model for predict\n      tags:\n        - model\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - model_id\n                - model_version\n              properties:\n                model_id:\n                  type: string\n                  example: 'arbiter-10000#guest-9999#host-10000#model'\n                model_version:\n                  type: string\n                  example: '202111032155391167400'\n                components_checkpoint:\n                  type: object\n                  description: specify a checkpoint model to replace the pipeline model\n                  example:\n                    hetero_lr_0:\n                      step_index: 5\n                  additionalProperties:\n                    type: object\n                    description: use step_index or step_name to specity a checkpoint\n                    properties:\n                      step_index:\n                        type: integer\n                        example: 5\n                      step_name:\n                        type: string\n                        example: round_5\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    properties:\n                      model_id:\n                        type: string\n                        example: 'arbiter-9999#guest-10000#host-9999#model'\n                      model_version:\n                        type: string\n                        example: '202111032227378766180'\n                      arbiter:\n                        type: object\n                        properties:\n                          party_id:\n                            type: integer\n                            example: 9999\n                      guest:\n                        type: object\n                        properties:\n                          party_id:\n                            type: integer\n                            example: 10000\n                      host:\n                        type: object\n                        properties:\n                          party_id:\n                            type: integer\n                            example: 9999\n                      detail:\n                        type: object\n                        properties:\n                          arbiter:\n                            type: object\n                            properties:\n                              party_id:\n                                type: object\n                                properties:\n                                  retcode:\n                                    type: integer\n                                    example: 0\n                                  retmsg:\n                                    type: string\n                                    example: deploy model of role arbiter 9999 success\n                          guest:\n                            type: object\n                            properties:\n                              party_id:\n                                type: object\n                                properties:\n                                  retcode:\n                                    type: integer\n                                    example: 0\n                                  retmsg:\n                                    type: string\n                                    example: deploy model of role guest 10000 success\n                          host:\n                            type: object\n                            properties:\n                              party_id:\n                                type: object\n                                properties:\n                                  retcode:\n                                    type: integer\n                                    example: 0\n                                  retmsg:\n                                    type: string\n                                    example: deploy model of role host 9999 success\n\n  '/model/transfer/{model_id}/{model_version}':\n    post:\n      summary: download a model by model_id and model_version\n      tags:\n        - model\n      parameters:\n        - name: model_id\n          in: path\n          required: true\n          description: 'model id (replace # with ~)'\n          schema:\n            type : string\n            example: 'host~10000~arbiter-10000~guest-9999~host-10000~model'\n        - name: model_version\n          in: path\n          required: true\n          description: model version\n          schema:\n            type : string\n            example: '202105060929263278441'\n      responses:\n        '200':\n          description: model data\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    description: base64 encoded model data\n        '404':\n          description: model not found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 404\n                  retmsg:\n                    type: string\n                    example: model not found\n\n  '/checkpoint/list':\n    post:\n      summary: list checkpoints\n      tags:\n        - checkpoint\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - model_id\n                - model_version\n                - role\n                - party_id\n                - component_name\n              properties:\n                model_id:\n                  type: string\n                  example: 'arbiter-10000#guest-9999#host-10000#model'\n                model_version:\n                  type: string\n                  example: '202111032155391167400'\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 9999\n                component_name:\n                  type: string\n                  example: hetero_lr_0\n      responses:\n        '200':\n          description: checkpoints list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        create_time:\n                          type: string\n                          example: '2021-11-07T02:34:54.683015'\n                        step_index:\n                          type: integer\n                          example: 0\n                        step_name:\n                          type: string\n                          example: step_name\n                        models:\n                          type: object\n                          example:\n                            HeteroLogisticRegressionMeta:\n                              buffer_name: LRModelMeta\n                              sha1: 6871508f6e6228341b18031b3623f99a53a87147\n                            HeteroLogisticRegressionParam:\n                              buffer_name: LRModelParam\n                              sha1: e3cb636fc93675684bff27117943f5bfa87f3029\n                          additionalProperties:\n                            type: object\n                            properties:\n                              buffer_name:\n                                type: string\n                                example: HeteroLogisticRegressionMeta\n                              sha1:\n                                type: string\n                                example: 6871508f6e6228341b18031b3623f99a53a87147\n\n  '/checkpoint/get':\n    post:\n      summary: get a checkpoint\n      tags:\n        - checkpoint\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - model_id\n                - model_version\n                - role\n                - party_id\n                - component_name\n              properties:\n                model_id:\n                  type: string\n                  example: 'arbiter-10000#guest-9999#host-10000#model'\n                model_version:\n                  type: string\n                  example: '202111032155391167400'\n                role:\n                  type: string\n                  example: guest\n                party_id:\n                  type: integer\n                  example: 9999\n                component_name:\n                  type: string\n                  example: hetero_lr_0\n                step_index:\n                  type: integer\n                  example: 0\n      responses:\n        '200':\n          description: checkpoint data\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n                  data:\n                    type: object\n                    properties:\n                      create_time:\n                        type: string\n                        example: '2021-11-07T02:34:54.683015'\n                      step_index:\n                        type: integer\n                        example: 0\n                      step_name:\n                        type: string\n                        example: step_name\n                      models:\n                        type: object\n                        example:\n                          HeteroLogisticRegressionMeta: 'CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ=='\n                          HeteroLogisticRegressionParam: 'Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B'\n                        additionalProperties:\n                          type: string\n                          description: base64 encoded model data\n        '404':\n          description: checkpoint not found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 404\n                  retmsg:\n                    type: string\n                    example: The checkpoint was not found.\n\n  '/component/validate':\n    post:\n      summary: validate component parameters\n      tags:\n        - component\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                dsl_version:\n                  type: integer\n                  example: 2\n                component_name:\n                  type: string\n                  example: dataio_0\n                component_module_name:\n                  type: string\n                  example: DataIO\n                role:\n                  type: object\n                  example:\n                    guest:\n                      - 10000\n                    host:\n                      - 9999\n                    arbiter:\n                      - 9999\n                component_parameters:\n                  type: object\n                  description: required if `dsl_version` == 2\n                  example:\n                    common:\n                      dataio_0:\n                        output_format: dense\n                      role:\n                        guest:\n                          '0':\n                            dataio_0:\n                              with_label: true\n                        host:\n                          '0':\n                            dataio_0:\n                              with_label: false\n                              output_format: dense\n                role_parameters:\n                  type: object\n                  description: required if `dsl_version` == 1\n                  example:\n                    guest:\n                      dataio_0:\n                        with_label:\n                          - true\n                        label_name:\n                          - y\n                        label_type:\n                          - int\n                        output_format:\n                          - dense\n                        missing_fill:\n                          - true\n                        outlier_replace:\n                          - true\n                    host:\n                      dataio_0:\n                        with_label:\n                          - false\n                        output_format:\n                          - dense\n                        outlier_replace:\n                          - true\n                algorithm_parameters:\n                  type: object\n                  description: required if `dsl_version` == 1\n                  example:\n                    hetero_feature_binning_0:\n                      method: quantile\n                      compress_thres: 10000\n                      head_size: 10000\n                      error: 0.001\n                      bin_num: 10\n                      adjustment_factor: 0.5\n                      local_only: false\n                      transform_param:\n                        transform_cols: -1\n                        transform_type: bin_num\n      responses:\n        '200':\n          description: validation passed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 0\n                  retmsg:\n                    type: string\n                    example: success\n        '400':\n          description: validation failed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  retcode:\n                    type: integer\n                    example: 400\n                  retmsg:\n                    type: string\n                    description: error message\n                    example: \"Component dataio_0, module DataIO, does not pass component check, error msg is dataio param's dendse not supported, should be one of ['dense', 'sparse']\"\n\ntags:\n  - name: data-access\n  - name: table\n  - name: job\n  - name: tracking\n  - name: information\n  - name: model\n  - name: checkpoint\n  - name: component\n\nservers:\n  - description: Default Server URL\n    url: http://localhost:9380/v1\n"
		}
	},
	"Error": "buildIR: make ir: path \"/data/upload\": post: requestBody: contents: application/octet-stream: octet stream with \"string\" schema not supported"
}