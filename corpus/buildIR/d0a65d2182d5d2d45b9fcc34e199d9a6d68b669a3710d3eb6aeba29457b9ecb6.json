{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ZenWave360/zenwave-code-generator"
		},
		"file": {
			"name": "oas-controllers-with-no-jdl.yml",
			"size": 0,
			"path": "zenwave-code-generator-test-resources/src/test/resources/io/zenwave360/generator/resources/openapi/oas-controllers-with-no-jdl.yml",
			"byteSize": 5159,
			"content": "---\nopenapi: 3.0.2\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\npaths:\n  \"/pet\":\n    get:\n      tags:\n        - pet\n      summary: Get all pets\n      operationId: getAllPets\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/PetPaginated\"\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: Update an existing pet by Id\n      operationId: updatePet\n      requestBody:\n        description: Update an existent pet in the store\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Pet\"\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pet\"\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Pet not found\n        '405':\n          description: Validation exception\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: Add a new pet to the store\n      operationId: addPet\n      requestBody:\n        description: Create a new pet in the store\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Pet\"\n        required: true\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pet\"\n        '400':\n          description: Invalid input\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\n  \"/pet/{petId}\":\n    parameters:\n      - name: petId\n        in: path\n        description: ID of pet to return\n        required: true\n        schema:\n          type: integer\n          format: int64\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        '404':\n          description: Pet not found\n      security:\n        - api_key: []\n        - petstore_auth:\n            - write:pets\n            - read:pets\n    post:\n      tags:\n        - pet\n      summary: Updates a pet\n      description: ''\n      operationId: updatePetWithForm\n      requestBody:\n        description: Updates a pet\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Pet\"\n        required: true\n      responses:\n        '405':\n          description: Invalid input\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - name\n        - photoUrls\n      type: object\n      x-business-entity: Pet\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 10\n        name:\n          type: string\n          example: doggie\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n    PetPaginated:\n      allOf:\n        - $ref: \"#/components/schemas/Page\"\n        - x-business-entity-paginated: \"Pet\"\n        - properties:\n            content:\n              items:\n                $ref: \"#/components/schemas/Pet\"\n              type: \"array\"\n    Page:\n      type: object\n      required:\n        - \"content\"\n        - \"totalElements\"\n        - \"totalPages\"\n        - \"size\"\n        - \"number\"\n      properties:\n        number:\n          type: integer\n          minimum: 0\n        numberOfElements:\n          type: integer\n          minimum: 0\n        size:\n          type: integer\n          minimum: 0\n          maximum: 200\n          multipleOf: 25\n        totalElements:\n          type: integer\n        totalPages:\n          type: integer\n  requestBodies:\n    Pet:\n      description: Pet object that needs to be added to the store\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            \"$ref\": \"#/components/schemas/Pet\"\n  securitySchemes:\n    petstore_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://petstore3.swagger.io/oauth/authorize\n          scopes:\n            write:pets: modify pets in your account\n            read:pets: read your pets\n    api_key:\n      type: apiKey\n      name: api_key\n      in: header\n",
			"canonicalURL": "/github.com/ZenWave360/zenwave-code-generator@e45c99c645f058ed10db288dd814eec05b6d6c2c/-/blob/zenwave-code-generator-test-resources/src/test/resources/io/zenwave360/generator/resources/openapi/oas-controllers-with-no-jdl.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ZenWave360/zenwave-code-generator/blob/e45c99c645f058ed10db288dd814eec05b6d6c2c/zenwave-code-generator-test-resources/src/test/resources/io/zenwave360/generator/resources/openapi/oas-controllers-with-no-jdl.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/pet\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: schema type mismatch: object and "
}