{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws-solutions/automated-data-analytics-on-aws"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "source/packages/@ada/api/spec.yaml",
			"byteSize": 297520,
			"content": "openapi: 3.0.1\ninfo:\n  description: Automated Data Analytics on AWS simplifies the management and analysis\n    of data, providing an end-to-end platform used for ingesting, transforming, governing,\n    and querying datasets through a standalone user interface\n  title: Automated Data Analytics on AWS API\n  version: 1.1.0\nservers:\n- url: https://{apigId}.execute-api.{region}.amazonaws.com/{stage}\n  variables:\n    apigId:\n      default: APIG_ID\n      description: AWS API Gateway ID of deployed RestApi\n    region:\n      default: ap-southeast-1\n      description: AWS region the api is deployed in\n    stage:\n      default: prod\n      description: AWS API Gateway Stage\npaths:\n  /administration/start-tear-down/destroy-data:\n    delete:\n      description: Delete administration start tear down destroy data\n      operationId: DeleteAdministrationStartTearDownDestroyData\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TearDownDetails'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /administration/start-tear-down/retain-data:\n    delete:\n      description: Delete administration start tear down retain data\n      operationId: DeleteAdministrationStartTearDownRetainData\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TearDownDetails'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /api-access-policy:\n    get:\n      description: List api access policies\n      operationId: ListApiAccessPolicies\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApiAccessPoliciesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /api-access-policy/{apiAccessPolicyId}:\n    delete:\n      description: Delete api access policy\n      operationId: DeleteApiAccessPolicy\n      parameters:\n      - explode: false\n        in: path\n        name: apiAccessPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiAccessPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get api access policy\n      operationId: GetApiAccessPolicy\n      parameters:\n      - explode: false\n        in: path\n        name: apiAccessPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiAccessPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put api access policy\n      operationId: PutApiAccessPolicy\n      parameters:\n      - explode: false\n        in: path\n        name: apiAccessPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApiAccessPolicyInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiAccessPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /cost:\n    get:\n      description: List costs\n      operationId: listCosts\n      parameters:\n      - explode: true\n        in: query\n        name: startTimestamp\n        required: true\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: endTimestamp\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetCostOutput'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /data-product-preview/domain/{domainId}/data-product/{dataProductId}:\n    post:\n      description: Post data product preview domain data product\n      operationId: PostDataProductPreviewDomainDataProduct\n      parameters:\n      - explode: true\n        in: query\n        name: sampleSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataProductPreviewInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductPreviewIdentifier'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /data-product-preview/domain/{domainId}/data-product/{dataProductId}/{previewId}:\n    get:\n      description: Get data product preview domain data product\n      operationId: GetDataProductPreviewDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: previewId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductPreview'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /data-product/domain:\n    get:\n      description: List data product domains\n      operationId: ListDataProductDomains\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataProductDomainsResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /data-product/domain/{domainId}:\n    delete:\n      description: Delete data product domain\n      operationId: DeleteDataProductDomain\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get data product domain\n      operationId: GetDataProductDomain\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put data product domain\n      operationId: PutDataProductDomain\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /data-product/domain/{domainId}/data-product:\n    get:\n      description: List data product domain data products\n      operationId: ListDataProductDomainDataProducts\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataProductDomainDataProductsResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /data-product/domain/{domainId}/data-product/{dataProductId}:\n    delete:\n      description: Delete data product domain data product\n      operationId: DeleteDataProductDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get data product domain data product\n      operationId: GetDataProductDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GovernedDataProductEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    post:\n      description: Post data product domain data product\n      operationId: PostDataProductDomainDataProduct\n      parameters:\n      - explode: true\n        in: query\n        name: initialFullAccessGroups\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataProductInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put data product domain data product\n      operationId: PutDataProductDomainDataProduct\n      parameters:\n      - explode: true\n        in: query\n        name: initialFullAccessGroups\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataProductInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /data-product/domain/{domainId}/data-product/{dataProductId}/file/upload/{fileName}:\n    get:\n      description: Get data product domain data product file upload\n      operationId: GetDataProductDomainDataProductFileUpload\n      parameters:\n      - explode: true\n        in: query\n        name: contentType\n        required: true\n        schema:\n          enum:\n          - application/octet-stream\n          - application/json\n          - text/csv\n          - application/gzip\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: uploadId\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: partNumber\n        required: false\n        schema:\n          type: number\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: fileName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductFileUpload'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    post:\n      description: Post data product domain data product file upload\n      operationId: PostDataProductDomainDataProductFileUpload\n      parameters:\n      - explode: true\n        in: query\n        name: contentType\n        required: true\n        schema:\n          enum:\n          - application/octet-stream\n          - application/json\n          - text/csv\n          - application/gzip\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: fileName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductMultipartFileUploadStarted'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put data product domain data product file upload\n      operationId: PutDataProductDomainDataProductFileUpload\n      parameters:\n      - explode: true\n        in: query\n        name: uploadId\n        required: true\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: fileName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileUploadInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/S3Location'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /data-product/domain/{domainId}/data-product/{dataProductId}/start-data-update:\n    put:\n      description: Put data product domain data product start data update\n      operationId: PutDataProductDomainDataProductStartDataUpdate\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /data-product/scripts:\n    get:\n      description: List data product scripts\n      operationId: ListDataProductScripts\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDataProductScriptsResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /data-product/scripts/namespace/{namespace}/script/{scriptId}:\n    delete:\n      description: Delete data product scripts namespace script\n      operationId: DeleteDataProductScriptsNamespaceScript\n      parameters:\n      - explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: scriptId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get data product scripts namespace script\n      operationId: GetDataProductScriptsNamespaceScript\n      parameters:\n      - explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: scriptId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put data product scripts namespace script\n      operationId: PutDataProductScriptsNamespaceScript\n      parameters:\n      - explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: scriptId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /data-product/scripts/validate:\n    post:\n      description: Post data product scripts validate\n      operationId: PostDataProductScriptsValidate\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptSourceValidationInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptSourceValidationOutput'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /governance/policy/attribute-values:\n    get:\n      description: Get governance policy attribute values\n      operationId: GetGovernancePolicyAttributeValues\n      parameters:\n      - explode: true\n        in: query\n        name: namespaceAndAttributeIds\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - explode: true\n        in: query\n        name: group\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGovernancePolicyAttributeValuesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put governance policy attribute values\n      operationId: PutGovernancePolicyAttributeValues\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutGovernancePolicyAttributeValuesRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutGovernancePolicyAttributeValuesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /governance/policy/attribute-values/{ontologyNamespace}/{attributeId}/group/{group}:\n    delete:\n      description: Delete governance policy attribute values group\n      operationId: DeleteGovernancePolicyAttributeValuesGroup\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: attributeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: group\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributeValuePolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n    get:\n      description: Get governance policy attribute values group\n      operationId: GetGovernancePolicyAttributeValuesGroup\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: attributeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: group\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributeValuePolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n    put:\n      description: Put governance policy attribute values group\n      operationId: PutGovernancePolicyAttributeValuesGroup\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: attributeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: group\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeValuePolicyInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributeValuePolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /governance/policy/attributes:\n    delete:\n      description: Delete governance policy attributes\n      operationId: DeleteGovernancePolicyAttributes\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteGovernancePolicyAttributesRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteGovernancePolicyAttributesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n    get:\n      description: Get governance policy attributes\n      operationId: GetGovernancePolicyAttributes\n      parameters:\n      - explode: true\n        in: query\n        name: namespaceAndAttributeIds\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - explode: true\n        in: query\n        name: group\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGovernancePolicyAttributesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put governance policy attributes\n      operationId: PutGovernancePolicyAttributes\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutGovernancePolicyAttributesRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutGovernancePolicyAttributesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /governance/policy/attributes/{ontologyNamespace}/{attributeId}/group/{group}:\n    delete:\n      description: Delete governance policy attributes group\n      operationId: DeleteGovernancePolicyAttributesGroup\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: attributeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: group\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributePolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n    get:\n      description: Get governance policy attributes group\n      operationId: GetGovernancePolicyAttributesGroup\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: attributeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: group\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributePolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n    put:\n      description: Put governance policy attributes group\n      operationId: PutGovernancePolicyAttributesGroup\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: attributeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: group\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributePolicyInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributePolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /governance/policy/default-lens/domain/{domainId}/data-product/{dataProductId}:\n    delete:\n      description: Delete governance policy default lens domain data product\n      operationId: DeleteGovernancePolicyDefaultLensDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultLensPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get governance policy default lens domain data product\n      operationId: GetGovernancePolicyDefaultLensDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultLensPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put governance policy default lens domain data product\n      operationId: PutGovernancePolicyDefaultLensDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultLensPolicyInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultLensPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /governance/policy/domain/{domainId}/data-product/{dataProductId}:\n    delete:\n      description: Delete governance policy domain data product\n      operationId: DeleteGovernancePolicyDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get governance policy domain data product\n      operationId: GetGovernancePolicyDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put governance policy domain data product\n      operationId: PutGovernancePolicyDomainDataProduct\n      parameters:\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataProductPolicyInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductPolicyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /governance/policy/domain/{domainId}/data-product/{dataProductId}/permissions:\n    get:\n      description: Get governance policy domain data product permissions\n      operationId: GetGovernancePolicyDomainDataProductPermissions\n      parameters:\n      - explode: true\n        in: query\n        name: groups\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataProductPermissionsEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/attributes:\n    get:\n      description: Get identity attributes\n      operationId: GetIdentityAttributes\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityAttributes'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/group:\n    get:\n      description: List identity groups\n      operationId: ListIdentityGroups\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIdentityGroupsResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /identity/group/{groupId}:\n    delete:\n      description: Delete identity group\n      operationId: DeleteIdentityGroup\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get identity group\n      operationId: GetIdentityGroup\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put identity group\n      operationId: PutIdentityGroup\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/group/{groupId}/members:\n    put:\n      description: Put identity group members\n      operationId: PutIdentityGroupMembers\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupMembersInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/machine:\n    get:\n      description: List identity machines\n      operationId: ListIdentityMachines\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIdentityMachinesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /identity/machine/{machineId}:\n    delete:\n      description: Delete identity machine\n      operationId: DeleteIdentityMachine\n      parameters:\n      - explode: false\n        in: path\n        name: machineId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MachineEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get identity machine\n      operationId: GetIdentityMachine\n      parameters:\n      - explode: false\n        in: path\n        name: machineId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MachineEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put identity machine\n      operationId: PutIdentityMachine\n      parameters:\n      - explode: false\n        in: path\n        name: machineId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MachineInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MachineEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/machine/{machineId}/token:\n    get:\n      description: List identity machine tokens\n      operationId: ListIdentityMachineTokens\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: false\n        in: path\n        name: machineId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIdentityMachineTokensResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/machine/{machineId}/token/{tokenId}:\n    delete:\n      description: Delete identity machine token\n      operationId: DeleteIdentityMachineToken\n      parameters:\n      - explode: false\n        in: path\n        name: machineId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get identity machine token\n      operationId: GetIdentityMachineToken\n      parameters:\n      - explode: false\n        in: path\n        name: machineId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put identity machine token\n      operationId: PutIdentityMachineToken\n      parameters:\n      - explode: false\n        in: path\n        name: machineId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/provider:\n    get:\n      description: List identity providers\n      operationId: ListIdentityProviders\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIdentityProvidersResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /identity/provider/{identityProviderId}:\n    delete:\n      description: Delete identity provider\n      operationId: DeleteIdentityProvider\n      parameters:\n      - explode: false\n        in: path\n        name: identityProviderId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get identity provider\n      operationId: GetIdentityProvider\n      parameters:\n      - explode: false\n        in: path\n        name: identityProviderId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put identity provider\n      operationId: PutIdentityProvider\n      parameters:\n      - explode: false\n        in: path\n        name: identityProviderId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProviderInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/request:\n    get:\n      description: List identity requests\n      operationId: ListIdentityRequests\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIdentityRequestsResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/request/{groupId}/{userId}:\n    delete:\n      description: Delete identity request\n      operationId: DeleteIdentityRequest\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessRequestEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get identity request\n      operationId: GetIdentityRequest\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessRequestEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put identity request\n      operationId: PutIdentityRequest\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccessRequestInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessRequestEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/request/{groupId}/{userId}/{action}:\n    put:\n      description: Put identity request action\n      operationId: PutIdentityRequestAction\n      parameters:\n      - explode: false\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: action\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutIdentityRequestActionRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutIdentityRequestActionResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /identity/user:\n    get:\n      description: List identity users\n      operationId: ListIdentityUsers\n      parameters:\n      - explode: true\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIdentityUsersResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /notification:\n    get:\n      description: List notifications\n      operationId: ListNotifications\n      parameters:\n      - explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNotificationsResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /notification/{notificationId}/action:\n    put:\n      description: Put notification action\n      operationId: PutNotificationAction\n      parameters:\n      - explode: false\n        in: path\n        name: notificationId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PersistedNotificationStatus'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PersistedNotificationEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /ontology:\n    get:\n      description: List ontologies\n      operationId: ListOntologies\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOntologiesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /ontology/{ontologyNamespace}/{ontologyId}:\n    delete:\n      description: Delete ontology\n      operationId: DeleteOntology\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: ontologyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OntologyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get ontology\n      operationId: GetOntology\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: ontologyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OntologyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put ontology\n      operationId: PutOntology\n      parameters:\n      - explode: false\n        in: path\n        name: ontologyNamespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: ontologyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OntologyInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OntologyEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /ontology/findByAlias:\n    get:\n      description: List ontology find by aliases\n      operationId: ListOntologyFindByAliases\n      parameters:\n      - explode: true\n        in: query\n        name: aliases\n        required: true\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOntologyFindByAliasesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /permission/user/{userId}:\n    get:\n      description: Get permission user\n      operationId: GetPermissionUser\n      parameters:\n      - explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPermissionUserResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query:\n    post:\n      description: Post query\n      operationId: PostQuery\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryExecution'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /query-parse-render/discover:\n    post:\n      description: Post query parse render discover\n      operationId: PostQueryParseRenderDiscover\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostQueryParseRenderDiscoverResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /query-parse-render/rewrite:\n    post:\n      description: Post query parse render rewrite\n      operationId: PostQueryParseRenderRewrite\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryRewriteInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Query'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /query-parse-render/validate-attribute-value-policy:\n    post:\n      description: Post query parse render validate attribute value policy\n      operationId: PostQueryParseRenderValidateAttributeValuePolicy\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostQueryParseRenderValidateAttributeValuePolicyRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostQueryParseRenderValidateAttributeValuePolicyResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /query/{executionId}/result:\n    get:\n      description: List query results\n      operationId: ListQueryResults\n      parameters:\n      - explode: true\n        in: query\n        name: retrieveDataIntegrity\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: false\n        in: path\n        name: executionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedQueryResult'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query/{executionId}/result-as-athena:\n    get:\n      description: List query results as athena results\n      operationId: listQueryResultsAsAthenaResults\n      parameters:\n      - explode: true\n        in: query\n        name: maxResults\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: executionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedQueryResultAsAthena'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query/{executionId}/result/download:\n    get:\n      description: Get query result download\n      operationId: GetQueryResultDownload\n      parameters:\n      - explode: false\n        in: path\n        name: executionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryDownload'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query/{executionId}/status:\n    get:\n      description: Get query status\n      operationId: GetQueryStatus\n      parameters:\n      - explode: false\n        in: path\n        name: executionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryStatus'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query/generate:\n    post:\n      description: Post query generate\n      operationId: PostQueryGenerate\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneratedQuery'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /query/history:\n    get:\n      description: List query histories\n      operationId: ListQueryHistories\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListQueryHistoriesResponse'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /query/saved-query:\n    get:\n      description: List query saved queries\n      operationId: ListQuerySavedQueries\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SavedQueryList'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n  /query/saved-query/{namespace}:\n    get:\n      description: List query namespace saved queries\n      operationId: listQueryNamespaceSavedQueries\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SavedQueryList'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query/saved-query/{namespace}/{queryId}:\n    delete:\n      description: Delete query saved query\n      operationId: DeleteQuerySavedQuery\n      parameters:\n      - explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: queryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SavedQueryEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    get:\n      description: Get query saved query\n      operationId: GetQuerySavedQuery\n      parameters:\n      - explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: queryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SavedQueryEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n    put:\n      description: Put query saved query\n      operationId: PutQuerySavedQuery\n      parameters:\n      - explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: queryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SavedQueryInput'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SavedQueryEntity'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query/schema/{domainId}/data-product/{dataProductId}:\n    get:\n      description: Get query schema data product\n      operationId: GetQuerySchemaDataProduct\n      parameters:\n      - explode: true\n        in: query\n        name: dataSetId\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: domainId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: dataProductId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuerySchema'\n          description: 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 404 response\n  /query/sync:\n    get:\n      description: Get query sync\n      operationId: GetQuerySync\n      parameters:\n      - explode: true\n        in: query\n        name: query\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"303\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetQuerySyncResponse'\n          description: 303 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\n  /query/sync/{executionId}/result:\n    get:\n      description: Get query sync result\n      operationId: GetQuerySyncResult\n      parameters:\n      - explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pageSize\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: retrieveDataIntegrity\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: false\n        in: path\n        name: executionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResult'\n          description: 200 response\n        \"303\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetQuerySyncResultResponse'\n          description: 303 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 400 response\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n          description: 403 response\ncomponents:\n  schemas:\n    AccessEnum:\n      description: Access control value\n      enum:\n      - READ_ONLY\n      - FULL\n      type: string\n    AccessRequest:\n      properties:\n        groupId:\n          description: The id of group the user wants access to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        message:\n          description: Access Request Notes\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        userId:\n          description: UserId of user requesting access\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n      required:\n      - groupId\n      - userId\n      type: object\n    AccessRequestEntity:\n      example:\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        groupId: groupId\n        message: message\n        updatedTimestamp: updatedTimestamp\n        userId: userId\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        groupId:\n          description: The id of group the user wants access to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        message:\n          description: Access Request Notes\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        userId:\n          description: UserId of user requesting access\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n      required:\n      - groupId\n      - userId\n      type: object\n    AccessRequestIdentifier:\n      properties:\n        groupId:\n          description: The id of group the user wants access to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        userId:\n          description: UserId of user requesting access\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n      required:\n      - groupId\n      - userId\n      type: object\n    AccessRequestInput:\n      description: Details about the new AccessRequest\n      example:\n        groupId: groupId\n        message: message\n        updatedTimestamp: updatedTimestamp\n        userId: userId\n      properties:\n        groupId:\n          description: The id of group the user wants access to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        message:\n          description: Access Request Notes\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        userId:\n          description: UserId of user requesting access\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n      title: AccessRequestInput\n      type: object\n    ApiAccessPolicy:\n      properties:\n        apiAccessPolicyId:\n          description: Identifier for an api access policy\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        description:\n          description: Description of the api access policy\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        name:\n          description: Name of the api access policy\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        resources:\n          items:\n            description: Resource arn for execute-api:Invoke permission associated\n              with the policy\n            maxLength: 2048\n            pattern: ^arn:[^:]+:execute-api:[^:]+:[0-9]+:[^\\/]+\\/.*$\n            type: string\n          type: array\n      required:\n      - apiAccessPolicyId\n      - name\n      - resources\n      type: object\n    ApiAccessPolicyEntity:\n      example:\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        name: name\n        description: description\n        resources:\n        - resources\n        - resources\n        updatedTimestamp: updatedTimestamp\n        apiAccessPolicyId: apiAccessPolicyId\n      properties:\n        apiAccessPolicyId:\n          description: Identifier for an api access policy\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          description: Description of the api access policy\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        name:\n          description: Name of the api access policy\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        resources:\n          items:\n            description: Resource arn for execute-api:Invoke permission associated\n              with the policy\n            maxLength: 2048\n            pattern: ^arn:[^:]+:execute-api:[^:]+:[0-9]+:[^\\/]+\\/.*$\n            type: string\n          type: array\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - apiAccessPolicyId\n      - name\n      - resources\n      type: object\n    ApiAccessPolicyIdentifier:\n      properties:\n        apiAccessPolicyId:\n          description: Identifier for an api access policy\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - apiAccessPolicyId\n      type: object\n    ApiAccessPolicyInput:\n      description: Details of the api access policy to create/update\n      example:\n        name: name\n        description: description\n        resources:\n        - resources\n        - resources\n        updatedTimestamp: updatedTimestamp\n        apiAccessPolicyId: apiAccessPolicyId\n      properties:\n        apiAccessPolicyId:\n          description: Identifier for an api access policy\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        description:\n          description: Description of the api access policy\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        name:\n          description: Name of the api access policy\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        resources:\n          items:\n            description: Resource arn for execute-api:Invoke permission associated\n              with the policy\n            maxLength: 2048\n            pattern: ^arn:[^:]+:execute-api:[^:]+:[0-9]+:[^\\/]+\\/.*$\n            type: string\n          type: array\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - apiAccessPolicyId\n      - name\n      - resources\n      title: ApiAccessPolicyInput\n      type: object\n    ApiError:\n      example:\n        name: name\n        cause: cause\n        details: details\n        errorId: errorId\n        message: message\n      properties:\n        cause:\n          type: string\n        details:\n          type: string\n        errorId:\n          type: string\n        message:\n          type: string\n        name:\n          type: string\n      required:\n      - message\n      title: GenericError\n      type: object\n    AttributePolicy:\n      example:\n        namespaceAndAttributeId: namespaceAndAttributeId\n        group: group\n      properties:\n        group:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        lensId:\n          $ref: '#/components/schemas/LensEnum'\n        namespaceAndAttributeId:\n          maxLength: 512\n          minLength: 5\n          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - group\n      - lensId\n      - namespaceAndAttributeId\n      type: object\n    AttributePolicyEntity:\n      description: The attribute policy for the given group and attribute id\n      example:\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        namespaceAndAttributeId: namespaceAndAttributeId\n        updatedTimestamp: updatedTimestamp\n        group: group\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        group:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        lensId:\n          $ref: '#/components/schemas/LensEnum'\n        namespaceAndAttributeId:\n          maxLength: 512\n          minLength: 5\n          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - group\n      - lensId\n      - namespaceAndAttributeId\n      title: AttributePolicyEntity\n      type: object\n    AttributePolicyIdentifier:\n      example:\n        namespaceAndAttributeId: namespaceAndAttributeId\n        group: group\n      properties:\n        group:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        namespaceAndAttributeId:\n          maxLength: 512\n          minLength: 5\n          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - group\n      - namespaceAndAttributeId\n      type: object\n    AttributePolicyInput:\n      description: Details of new Attribute Policy\n      example:\n        namespaceAndAttributeId: namespaceAndAttributeId\n        updatedTimestamp: updatedTimestamp\n        group: group\n      properties:\n        group:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        lensId:\n          $ref: '#/components/schemas/LensEnum'\n        namespaceAndAttributeId:\n          maxLength: 512\n          minLength: 5\n          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - lensId\n      title: AttributePolicyInput\n      type: object\n    AttributeValuePolicy:\n      example:\n        sqlClause: sqlClause\n        namespaceAndAttributeId: namespaceAndAttributeId\n        description: description\n        group: group\n      properties:\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        group:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        namespaceAndAttributeId:\n          maxLength: 512\n          minLength: 5\n          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$\n          type: string\n        sqlClause:\n          description: An SQL WHERE clause for row level governance on the attribute\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n      required:\n      - group\n      - namespaceAndAttributeId\n      - sqlClause\n      type: object\n    AttributeValuePolicyEntity:\n      description: The attribute value policy for the given attribute id and group\n      example:\n        updatedBy: updatedBy\n        createdBy: createdBy\n        sqlClause: sqlClause\n        createdTimestamp: createdTimestamp\n        namespaceAndAttributeId: namespaceAndAttributeId\n        description: description\n        updatedTimestamp: updatedTimestamp\n        group: group\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        group:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        namespaceAndAttributeId:\n          maxLength: 512\n          minLength: 5\n          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$\n          type: string\n        sqlClause:\n          description: An SQL WHERE clause for row level governance on the attribute\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - group\n      - namespaceAndAttributeId\n      - sqlClause\n      title: AttributeValuePolicyEntity\n      type: object\n    AttributeValuePolicyInput:\n      description: Details of new Attribute Value Policy\n      example:\n        sqlClause: sqlClause\n        namespaceAndAttributeId: namespaceAndAttributeId\n        description: description\n        updatedTimestamp: updatedTimestamp\n        group: group\n      properties:\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        group:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        namespaceAndAttributeId:\n          maxLength: 512\n          minLength: 5\n          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$\n          type: string\n        sqlClause:\n          description: An SQL WHERE clause for row level governance on the attribute\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - sqlClause\n      title: AttributeValuePolicyInput\n      type: object\n    ColumnMetadata:\n      properties:\n        dataType:\n          description: The data type of the column\n          maxLength: 2048\n          pattern: ^[\\w _\\{\\}\"\u003c\u003e:,-]*$\n          type: string\n        description:\n          description: A description of the column\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        ontologyAttributeId:\n          description: The ontology attribute the column maps to (if any)\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        ontologyNamespace:\n          description: The ontologyNamespace of the ontology attribute\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        piiClassification:\n          description: Pii classification of the column\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        sortOrder:\n          description: The order in which this column should appear in the schema\n            and results\n          type: number\n      required:\n      - dataType\n      type: object\n    ColumnsMetadata:\n      additionalProperties:\n        $ref: '#/components/schemas/ColumnMetadata'\n      description: A map of column name to metadata about the column\n      type: object\n    CreateAndUpdateDetails:\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      type: object\n    DataIntegrityEnum:\n      description: Data Integrity value\n      enum:\n      - stale\n      - current\n      type: string\n    DataProduct:\n      example:\n        latestDataUpdateTimestamp: latestDataUpdateTimestamp\n        enableAutomaticPii: true\n        cloudFormationStackId: cloudFormationStackId\n        updateTrigger:\n          scheduleRate: scheduleRate\n        description: description\n        parentDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        childDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        dataImportStateMachineArn: dataImportStateMachineArn\n        domainId: domainId\n        enableAutomaticTransforms: true\n        dataProductId: dataProductId\n        infrastructureStatusDetails: infrastructureStatusDetails\n        name: name\n        sourceDataStatusDetails: sourceDataStatusDetails\n        dataStatusDetails: dataStatusDetails\n        sourceDetails: '{}'\n      properties:\n        childDataProducts:\n          description: Any child data products, ie data products that use this data\n            product as a source for their data\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        cloudFormationStackId:\n          description: The id of the cloudformation stack for all resources pertaining\n            to this data product\n          maxLength: 2048\n          pattern: ^arn:[\\w]+:[\\w-]+:[\\w-]+:[\\d]+:[*-\\/\\w]+$\n          type: string\n        dataImportStateMachineArn:\n          description: The arn of the state machine for importing data product data\n            (if any)\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSets:\n          $ref: '#/components/schemas/DataSets'\n        dataStatus:\n          $ref: '#/components/schemas/DataProductDataStatus'\n        dataStatusDetails:\n          description: Details about the data status of the data product, eg error\n            message if data import failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        description:\n          description: A description of the data product\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        enableAutomaticPii:\n          description: Whether or not to automatically apply pii detection and redaction\n          type: boolean\n        enableAutomaticTransforms:\n          description: Whether or not to automatically apply transforms based on the\n            type of data in the data product\n          type: boolean\n        infrastructureStatus:\n          $ref: '#/components/schemas/DataProductInfrastructureStatus'\n        infrastructureStatusDetails:\n          description: Details about the infrastructure status of the data product,\n            eg error message if creation failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        latestDataUpdateTimestamp:\n          description: The time at which the data product data was last updated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        name:\n          description: The name of the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        parentDataProducts:\n          description: Any parent data products, ie data products that are used as\n            a source for data in this data product\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        sourceDataSets:\n          $ref: '#/components/schemas/DataSets'\n        sourceDataStatus:\n          $ref: '#/components/schemas/DataProductSourceDataStatus'\n        sourceDataStatusDetails:\n          description: Details about the raw source data status of the data product,\n            eg error message if data source inference failed\n          type: string\n        sourceDetails:\n          type: object\n        sourceType:\n          $ref: '#/components/schemas/SourceTypeEnum'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        transforms:\n          $ref: '#/components/schemas/DataProductTransforms'\n        updateTrigger:\n          $ref: '#/components/schemas/DataProductUpdateTrigger'\n      required:\n      - childDataProducts\n      - dataProductId\n      - dataSets\n      - domainId\n      - name\n      - parentDataProducts\n      - sourceType\n      - tags\n      - transforms\n      - updateTrigger\n      type: object\n    DataProductAccessLevel:\n      properties:\n        access:\n          $ref: '#/components/schemas/AccessEnum'\n      required:\n      - access\n      type: object\n    DataProductBase:\n      properties:\n        childDataProducts:\n          description: Any child data products, ie data products that use this data\n            product as a source for their data\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        cloudFormationStackId:\n          description: The id of the cloudformation stack for all resources pertaining\n            to this data product\n          maxLength: 2048\n          pattern: ^arn:[\\w]+:[\\w-]+:[\\w-]+:[\\d]+:[*-\\/\\w]+$\n          type: string\n        dataImportStateMachineArn:\n          description: The arn of the state machine for importing data product data\n            (if any)\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataStatus:\n          $ref: '#/components/schemas/DataProductDataStatus'\n        dataStatusDetails:\n          description: Details about the data status of the data product, eg error\n            message if data import failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        description:\n          description: A description of the data product\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        enableAutomaticPii:\n          description: Whether or not to automatically apply pii detection and redaction\n          type: boolean\n        enableAutomaticTransforms:\n          description: Whether or not to automatically apply transforms based on the\n            type of data in the data product\n          type: boolean\n        infrastructureStatus:\n          $ref: '#/components/schemas/DataProductInfrastructureStatus'\n        infrastructureStatusDetails:\n          description: Details about the infrastructure status of the data product,\n            eg error message if creation failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        latestDataUpdateTimestamp:\n          description: The time at which the data product data was last updated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        name:\n          description: The name of the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        parentDataProducts:\n          description: Any parent data products, ie data products that are used as\n            a source for data in this data product\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        sourceDataSets:\n          $ref: '#/components/schemas/DataSets'\n        sourceDataStatus:\n          $ref: '#/components/schemas/DataProductSourceDataStatus'\n        sourceDataStatusDetails:\n          description: Details about the raw source data status of the data product,\n            eg error message if data source inference failed\n          type: string\n        sourceDetails:\n          type: object\n        sourceType:\n          $ref: '#/components/schemas/SourceTypeEnum'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        transforms:\n          $ref: '#/components/schemas/DataProductTransforms'\n        updateTrigger:\n          $ref: '#/components/schemas/DataProductUpdateTrigger'\n      required:\n      - childDataProducts\n      - dataProductId\n      - domainId\n      - name\n      - parentDataProducts\n      - sourceType\n      - tags\n      - transforms\n      - updateTrigger\n      type: object\n    DataProductDataStatus:\n      description: Status of data product data\n      enum:\n      - NO_DATA\n      - UPDATING\n      - READY\n      - FAILED\n      type: string\n    DataProductEntity:\n      example:\n        latestDataUpdateTimestamp: latestDataUpdateTimestamp\n        updateTrigger:\n          scheduleRate: scheduleRate\n        description: description\n        parentDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        updatedTimestamp: updatedTimestamp\n        enableAutomaticTransforms: true\n        dataProductId: dataProductId\n        infrastructureStatusDetails: infrastructureStatusDetails\n        dataStatusDetails: dataStatusDetails\n        sourceDetails: '{}'\n        enableAutomaticPii: true\n        updatedBy: updatedBy\n        cloudFormationStackId: cloudFormationStackId\n        createdTimestamp: createdTimestamp\n        childDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        dataImportStateMachineArn: dataImportStateMachineArn\n        domainId: domainId\n        createdBy: createdBy\n        name: name\n        sourceDataStatusDetails: sourceDataStatusDetails\n      properties:\n        childDataProducts:\n          description: Any child data products, ie data products that use this data\n            product as a source for their data\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        cloudFormationStackId:\n          description: The id of the cloudformation stack for all resources pertaining\n            to this data product\n          maxLength: 2048\n          pattern: ^arn:[\\w]+:[\\w-]+:[\\w-]+:[\\d]+:[*-\\/\\w]+$\n          type: string\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        dataImportStateMachineArn:\n          description: The arn of the state machine for importing data product data\n            (if any)\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSets:\n          $ref: '#/components/schemas/DataSets'\n        dataStatus:\n          $ref: '#/components/schemas/DataProductDataStatus'\n        dataStatusDetails:\n          description: Details about the data status of the data product, eg error\n            message if data import failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        description:\n          description: A description of the data product\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        enableAutomaticPii:\n          description: Whether or not to automatically apply pii detection and redaction\n          type: boolean\n        enableAutomaticTransforms:\n          description: Whether or not to automatically apply transforms based on the\n            type of data in the data product\n          type: boolean\n        infrastructureStatus:\n          $ref: '#/components/schemas/DataProductInfrastructureStatus'\n        infrastructureStatusDetails:\n          description: Details about the infrastructure status of the data product,\n            eg error message if creation failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        latestDataUpdateTimestamp:\n          description: The time at which the data product data was last updated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        name:\n          description: The name of the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        parentDataProducts:\n          description: Any parent data products, ie data products that are used as\n            a source for data in this data product\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        sourceDataSets:\n          $ref: '#/components/schemas/DataSets'\n        sourceDataStatus:\n          $ref: '#/components/schemas/DataProductSourceDataStatus'\n        sourceDataStatusDetails:\n          description: Details about the raw source data status of the data product,\n            eg error message if data source inference failed\n          type: string\n        sourceDetails:\n          type: object\n        sourceType:\n          $ref: '#/components/schemas/SourceTypeEnum'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        transforms:\n          $ref: '#/components/schemas/DataProductTransforms'\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        updateTrigger:\n          $ref: '#/components/schemas/DataProductUpdateTrigger'\n      required:\n      - childDataProducts\n      - dataProductId\n      - dataSets\n      - domainId\n      - name\n      - parentDataProducts\n      - sourceType\n      - tags\n      - transforms\n      - updateTrigger\n      type: object\n    DataProductFileUpload:\n      description: An upload url to be used to store the file\n      example:\n        bucket: bucket\n        signedUrl: signedUrl\n        key: key\n      properties:\n        bucket:\n          type: string\n        key:\n          type: string\n        signedUrl:\n          type: string\n      required:\n      - bucket\n      - key\n      - signedUrl\n      title: DataProductFileUpload\n      type: object\n    DataProductIdentifier:\n      example:\n        dataProductId: dataProductId\n        domainId: domainId\n      properties:\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - dataProductId\n      - domainId\n      type: object\n    DataProductInfrastructureStatus:\n      description: Status of data product infrastructure\n      enum:\n      - PROVISIONING\n      - READY\n      - FAILED\n      type: string\n    DataProductInput:\n      description: Details about the new data product\n      example:\n        latestDataUpdateTimestamp: latestDataUpdateTimestamp\n        updateTrigger:\n          scheduleRate: scheduleRate\n        description: description\n        parentDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        updatedTimestamp: updatedTimestamp\n        enableAutomaticTransforms: true\n        dataProductId: dataProductId\n        infrastructureStatusDetails: infrastructureStatusDetails\n        dataStatusDetails: dataStatusDetails\n        sourceDetails: '{}'\n        enableAutomaticPii: true\n        cloudFormationStackId: cloudFormationStackId\n        childDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        dataImportStateMachineArn: dataImportStateMachineArn\n        domainId: domainId\n        name: name\n        sourceDataStatusDetails: sourceDataStatusDetails\n      properties:\n        childDataProducts:\n          description: Any child data products, ie data products that use this data\n            product as a source for their data\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        cloudFormationStackId:\n          description: The id of the cloudformation stack for all resources pertaining\n            to this data product\n          maxLength: 2048\n          pattern: ^arn:[\\w]+:[\\w-]+:[\\w-]+:[\\d]+:[*-\\/\\w]+$\n          type: string\n        dataImportStateMachineArn:\n          description: The arn of the state machine for importing data product data\n            (if any)\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSets:\n          $ref: '#/components/schemas/DataSets'\n        dataStatus:\n          $ref: '#/components/schemas/DataProductDataStatus'\n        dataStatusDetails:\n          description: Details about the data status of the data product, eg error\n            message if data import failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        description:\n          description: A description of the data product\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        enableAutomaticPii:\n          description: Whether or not to automatically apply pii detection and redaction\n          type: boolean\n        enableAutomaticTransforms:\n          description: Whether or not to automatically apply transforms based on the\n            type of data in the data product\n          type: boolean\n        infrastructureStatus:\n          $ref: '#/components/schemas/DataProductInfrastructureStatus'\n        infrastructureStatusDetails:\n          description: Details about the infrastructure status of the data product,\n            eg error message if creation failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        latestDataUpdateTimestamp:\n          description: The time at which the data product data was last updated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        name:\n          description: The name of the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        parentDataProducts:\n          description: Any parent data products, ie data products that are used as\n            a source for data in this data product\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        sourceDataSets:\n          $ref: '#/components/schemas/DataSets'\n        sourceDataStatus:\n          $ref: '#/components/schemas/DataProductSourceDataStatus'\n        sourceDataStatusDetails:\n          description: Details about the raw source data status of the data product,\n            eg error message if data source inference failed\n          type: string\n        sourceDetails:\n          type: object\n        sourceType:\n          $ref: '#/components/schemas/SourceTypeEnum'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        transforms:\n          $ref: '#/components/schemas/DataProductTransforms'\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        updateTrigger:\n          $ref: '#/components/schemas/DataProductUpdateTrigger'\n      required:\n      - name\n      - sourceType\n      - tags\n      - transforms\n      - updateTrigger\n      title: DataProductInput\n      type: object\n    DataProductMultipartFileUploadStarted:\n      description: An uploadId to be used for the subsequent invocations\n      example:\n        bucket: bucket\n        uploadId: uploadId\n        key: key\n      properties:\n        bucket:\n          type: string\n        key:\n          type: string\n        uploadId:\n          type: string\n      required:\n      - bucket\n      - key\n      - uploadId\n      title: DataProductMultipartFileUploadStarted\n      type: object\n    DataProductPermissions:\n      additionalProperties:\n        $ref: '#/components/schemas/DataProductAccessLevel'\n      type: object\n    DataProductPermissionsEntity:\n      additionalProperties:\n        $ref: '#/components/schemas/DataProductAccessLevel'\n      description: Get permissions for a group and associated data product policy\n      example:\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        updatedTimestamp: updatedTimestamp\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      title: DataProductPermissionsEntity\n      type: object\n    DataProductPolicy:\n      properties:\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        permissions:\n          $ref: '#/components/schemas/DataProductPermissions'\n      required:\n      - dataProductId\n      - domainId\n      - permissions\n      type: object\n    DataProductPolicyEntity:\n      description: Get a policy for a data product\n      example:\n        dataProductId: dataProductId\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        updatedTimestamp: updatedTimestamp\n        domainId: domainId\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        permissions:\n          $ref: '#/components/schemas/DataProductPermissions'\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - dataProductId\n      - domainId\n      - permissions\n      title: DataProductPolicyEntity\n      type: object\n    DataProductPolicyInput:\n      description: Details of new data product policy\n      example:\n        dataProductId: dataProductId\n        updatedTimestamp: updatedTimestamp\n        domainId: domainId\n      properties:\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        permissions:\n          $ref: '#/components/schemas/DataProductPermissions'\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - permissions\n      title: DataProductPolicyInput\n      type: object\n    DataProductPreview:\n      description: The data product preview, or just its status if the preview is\n        ongoing\n      example:\n        durationMilliseconds: 0.8008281904610115\n        transformedDataSets:\n          key:\n            schema:\n              dataType: dataType\n              fields:\n              - name: name\n              - name: name\n            metadata: '{}'\n            data:\n            - '{}'\n            - '{}'\n            s3Path: s3Path\n            s3SamplePath: s3SamplePath\n            classification: classification\n        initialDataSets:\n          key:\n            schema:\n              dataType: dataType\n              fields:\n              - name: name\n              - name: name\n            metadata: '{}'\n            data:\n            - '{}'\n            - '{}'\n            s3Path: s3Path\n            s3SamplePath: s3SamplePath\n            classification: classification\n        error:\n          name: name\n          cause: cause\n          details: details\n          errorId: errorId\n          message: message\n        previewId: previewId\n        status: RUNNING\n      properties:\n        durationMilliseconds:\n          description: The time taken to complete the preview\n          type: number\n        error:\n          $ref: '#/components/schemas/ApiError'\n        initialDataSets:\n          additionalProperties:\n            $ref: '#/components/schemas/DataSetPreview'\n          description: Data sets discovered from the source data, keyed by dataset\n            id\n          type: object\n        previewId:\n          description: The id of the data product preview\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        status:\n          description: The status of the preview execution\n          enum:\n          - RUNNING\n          - SUCCEEDED\n          - FAILED\n          - TIMED_OUT\n          - ABORTED\n          type: string\n        transformedDataSets:\n          additionalProperties:\n            $ref: '#/components/schemas/DataSetPreview'\n          description: Data set previews after transforms have been applied, keyed\n            by dataset id\n          type: object\n        transformsApplied:\n          $ref: '#/components/schemas/DataProductTransforms'\n      required:\n      - previewId\n      - status\n      title: DataProductPreview\n      type: object\n    DataProductPreviewIdentifier:\n      example:\n        previewId: previewId\n      properties:\n        previewId:\n          description: The id of the data product preview\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - previewId\n      type: object\n    DataProductPreviewInput:\n      description: Details about the data product to preview\n      example:\n        latestDataUpdateTimestamp: latestDataUpdateTimestamp\n        enableAutomaticPii: true\n        cloudFormationStackId: cloudFormationStackId\n        updateTrigger:\n          scheduleRate: scheduleRate\n        description: description\n        parentDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        childDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        dataImportStateMachineArn: dataImportStateMachineArn\n        domainId: domainId\n        enableAutomaticTransforms: true\n        dataProductId: dataProductId\n        infrastructureStatusDetails: infrastructureStatusDetails\n        name: name\n        sourceDataStatusDetails: sourceDataStatusDetails\n        dataStatusDetails: dataStatusDetails\n        sourceDetails: '{}'\n      properties:\n        childDataProducts:\n          description: Any child data products, ie data products that use this data\n            product as a source for their data\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        cloudFormationStackId:\n          description: The id of the cloudformation stack for all resources pertaining\n            to this data product\n          maxLength: 2048\n          pattern: ^arn:[\\w]+:[\\w-]+:[\\w-]+:[\\d]+:[*-\\/\\w]+$\n          type: string\n        dataImportStateMachineArn:\n          description: The arn of the state machine for importing data product data\n            (if any)\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSets:\n          $ref: '#/components/schemas/DataSets'\n        dataStatus:\n          $ref: '#/components/schemas/DataProductDataStatus'\n        dataStatusDetails:\n          description: Details about the data status of the data product, eg error\n            message if data import failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        description:\n          description: A description of the data product\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        enableAutomaticPii:\n          description: Whether or not to automatically apply pii detection and redaction\n          type: boolean\n        enableAutomaticTransforms:\n          description: Whether or not to automatically apply transforms based on the\n            type of data in the data product\n          type: boolean\n        infrastructureStatus:\n          $ref: '#/components/schemas/DataProductInfrastructureStatus'\n        infrastructureStatusDetails:\n          description: Details about the infrastructure status of the data product,\n            eg error message if creation failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        latestDataUpdateTimestamp:\n          description: The time at which the data product data was last updated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        name:\n          description: The name of the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        parentDataProducts:\n          description: Any parent data products, ie data products that are used as\n            a source for data in this data product\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        sourceDataSets:\n          $ref: '#/components/schemas/DataSets'\n        sourceDataStatus:\n          $ref: '#/components/schemas/DataProductSourceDataStatus'\n        sourceDataStatusDetails:\n          description: Details about the raw source data status of the data product,\n            eg error message if data source inference failed\n          type: string\n        sourceDetails:\n          type: object\n        sourceType:\n          $ref: '#/components/schemas/SourceTypeEnum'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        transforms:\n          $ref: '#/components/schemas/DataProductTransforms'\n        updateTrigger:\n          $ref: '#/components/schemas/DataProductUpdateTrigger'\n      required:\n      - sourceType\n      - transforms\n      title: DataProductPreviewInput\n      type: object\n    DataProductSourceDataStatus:\n      description: Status of raw source data product data\n      enum:\n      - NO_DATA\n      - UPDATING\n      - READY\n      - FAILED\n      type: string\n    DataProductTransform:\n      description: Uniquely identifies the script. Used to calculate the script path\n        in s3\n      properties:\n        inlineScriptContent:\n          description: Inline script content for use in schema previews. Data products\n            cannot be created with inline scripts.\n          maxLength: 262144\n          pattern: ^[\\s\\S]*def apply_transform\\([\\s\\S]*$\n          type: string\n        inputArgs:\n          description: Arguments to pass to the script\n          type: object\n        namespace:\n          description: The namespace in which the script resides, eg the domain.\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        scriptId:\n          description: Identifies the script within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - namespace\n      - scriptId\n      type: object\n    DataProductTransforms:\n      description: Ordered list of transformations applied to data in the data product\n      items:\n        $ref: '#/components/schemas/DataProductTransform'\n      type: array\n    DataProductUpdatePolicyType:\n      description: Update types for a data product data\n      enum:\n      - APPEND\n      - REPLACE\n      type: string\n    DataProductUpdateTrigger:\n      description: The trigger for a data update\n      example:\n        scheduleRate: scheduleRate\n      properties:\n        scheduleRate:\n          description: Cron schedule for data update (if triggerType is scheduled)\n          maxLength: 64\n          pattern: (?:(?:^rate\\((\\d+) (minutes?|hours?|days?)\\)$)|(?:^cron\\(([\\w,/\\-*?#]{1,20}\n            ?){1,6}\\)$))\n          type: string\n        triggerType:\n          $ref: '#/components/schemas/DataProductUpdateTriggerType'\n        updatePolicy:\n          $ref: '#/components/schemas/DataProductUpdatePolicyType'\n      required:\n      - triggerType\n      type: object\n    DataProductUpdateTriggerType:\n      description: Trigger types for a data product data\n      enum:\n      - ON_DEMAND\n      - SCHEDULE\n      - AUTOMATIC\n      type: string\n    DataSet:\n      properties:\n        columnMetadata:\n          $ref: '#/components/schemas/ColumnsMetadata'\n        description:\n          description: A description of the dataset\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        identifiers:\n          $ref: '#/components/schemas/DataSetIdentifiers'\n        name:\n          description: The name of the dataset within the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - columnMetadata\n      - identifiers\n      type: object\n    DataSetDetails:\n      properties:\n        description:\n          description: A description of the dataset\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        identifiers:\n          $ref: '#/components/schemas/DataSetIdentifiers'\n        name:\n          description: The name of the dataset within the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - identifiers\n      type: object\n    DataSetIdentifier:\n      properties:\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSetId:\n          description: The id of the data set\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - dataProductId\n      - dataSetId\n      - domainId\n      type: object\n    DataSetIdentifiers:\n      description: Details specific to attributes that identify the dataset\n      properties:\n        catalog:\n          description: The catalog of the dataset\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        database:\n          description: The database where the detaset is located\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        table:\n          description: The name of the table that contains the data of the dataset\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      type: object\n    DataSetPreview:\n      example:\n        schema:\n          dataType: dataType\n          fields:\n          - name: name\n          - name: name\n        metadata: '{}'\n        data:\n        - '{}'\n        - '{}'\n        s3Path: s3Path\n        s3SamplePath: s3SamplePath\n        classification: classification\n      properties:\n        classification:\n          description: The classification of the data stored for this dataset in s3\n            (if any)\n          type: string\n        data:\n          items:\n            type: object\n          type: array\n        metadata:\n          description: Any metadata that may have been discovered by the preview\n          type: object\n        s3Path:\n          description: The path to the data for this dataset in s3 (if any)\n          type: string\n        s3SamplePath:\n          description: The path to the sample data for this dataset in s3 (if any)\n          type: string\n        schema:\n          $ref: '#/components/schemas/DataSetPreviewSchema'\n      required:\n      - data\n      - schema\n      type: object\n    DataSetPreviewNamedSchema:\n      example:\n        name: name\n      properties:\n        container:\n          $ref: '#/components/schemas/DataSetPreviewSchema'\n        name:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - name\n      type: object\n    DataSetPreviewSchema:\n      example:\n        dataType: dataType\n        fields:\n        - name: name\n        - name: name\n      properties:\n        dataType:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        elementType:\n          $ref: '#/components/schemas/DataSetPreviewSchema'\n        fields:\n          items:\n            $ref: '#/components/schemas/DataSetPreviewNamedSchema'\n          type: array\n      required:\n      - dataType\n      type: object\n    DataSets:\n      additionalProperties:\n        $ref: '#/components/schemas/DataSet'\n      description: Map of datasets by id\n      type: object\n    DefaultLensPolicy:\n      properties:\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        defaultLensId:\n          $ref: '#/components/schemas/LensEnum'\n        defaultLensOverrides:\n          additionalProperties:\n            $ref: '#/components/schemas/LensEnum'\n          type: object\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - dataProductId\n      - defaultLensId\n      - defaultLensOverrides\n      - domainId\n      type: object\n    DefaultLensPolicyEntity:\n      description: Get default lens policy by data product id\n      example:\n        dataProductId: dataProductId\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        defaultLensOverrides: {}\n        updatedTimestamp: updatedTimestamp\n        domainId: domainId\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        defaultLensId:\n          $ref: '#/components/schemas/LensEnum'\n        defaultLensOverrides:\n          additionalProperties:\n            $ref: '#/components/schemas/LensEnum'\n          type: object\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - dataProductId\n      - defaultLensId\n      - defaultLensOverrides\n      - domainId\n      title: DefaultLensPolicyEntity\n      type: object\n    DefaultLensPolicyInput:\n      description: Details of new default lens policy\n      example:\n        dataProductId: dataProductId\n        defaultLensOverrides: {}\n        updatedTimestamp: updatedTimestamp\n        domainId: domainId\n      properties:\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        defaultLensId:\n          $ref: '#/components/schemas/LensEnum'\n        defaultLensOverrides:\n          additionalProperties:\n            $ref: '#/components/schemas/LensEnum'\n          type: object\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - defaultLensId\n      - defaultLensOverrides\n      title: DefaultLensPolicyInput\n      type: object\n    DeleteGovernancePolicyAttributesRequest:\n      description: List of attribute policies to delete\n      example:\n        policies:\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n      properties:\n        policies:\n          items:\n            $ref: '#/components/schemas/AttributePolicyIdentifier'\n          type: array\n      required:\n      - policies\n      title: DeleteGovernancePolicyAttributesRequest\n      type: object\n    DeleteGovernancePolicyAttributesResponse:\n      description: The deleted attribute policies\n      example:\n        policies:\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n      properties:\n        policies:\n          items:\n            $ref: '#/components/schemas/AttributePolicy'\n          type: array\n      required:\n      - policies\n      title: DeleteGovernancePolicyAttributesResponse\n      type: object\n    Domain:\n      properties:\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        name:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - domainId\n      - name\n      type: object\n    DomainEntity:\n      example:\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        name: name\n        description: description\n        updatedTimestamp: updatedTimestamp\n        domainId: domainId\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        name:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - domainId\n      - name\n      type: object\n    DomainIdentifier:\n      properties:\n        domainId:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - domainId\n      type: object\n    DomainInput:\n      description: Details about the new domain\n      example:\n        name: name\n        description: description\n        updatedTimestamp: updatedTimestamp\n        domainId: domainId\n      properties:\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        name:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - name\n      title: DomainInput\n      type: object\n    FileUploadInput:\n      description: Details about the uploaded parts\n      example:\n        parts:\n        - etag: etag\n          partNumber: 0.8008281904610115\n        - etag: etag\n          partNumber: 0.8008281904610115\n      properties:\n        parts:\n          items:\n            $ref: '#/components/schemas/FileUploadInput_parts'\n          type: array\n      required:\n      - parts\n      title: FileUploadInput\n      type: object\n    GeneratedQuery:\n      description: The generated query (ie. translated to include governance)\n      example:\n        query: query\n        dataProducts:\n        - latestDataUpdateTimestamp: latestDataUpdateTimestamp\n          enableAutomaticPii: true\n          cloudFormationStackId: cloudFormationStackId\n          updateTrigger:\n            scheduleRate: scheduleRate\n          description: description\n          parentDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          childDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          dataImportStateMachineArn: dataImportStateMachineArn\n          domainId: domainId\n          enableAutomaticTransforms: true\n          dataProductId: dataProductId\n          infrastructureStatusDetails: infrastructureStatusDetails\n          name: name\n          sourceDataStatusDetails: sourceDataStatusDetails\n          dataStatusDetails: dataStatusDetails\n          sourceDetails: '{}'\n        - latestDataUpdateTimestamp: latestDataUpdateTimestamp\n          enableAutomaticPii: true\n          cloudFormationStackId: cloudFormationStackId\n          updateTrigger:\n            scheduleRate: scheduleRate\n          description: description\n          parentDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          childDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          dataImportStateMachineArn: dataImportStateMachineArn\n          domainId: domainId\n          enableAutomaticTransforms: true\n          dataProductId: dataProductId\n          infrastructureStatusDetails: infrastructureStatusDetails\n          name: name\n          sourceDataStatusDetails: sourceDataStatusDetails\n          dataStatusDetails: dataStatusDetails\n          sourceDetails: '{}'\n      properties:\n        dataProducts:\n          description: The data products involved in the query\n          items:\n            $ref: '#/components/schemas/DataProduct'\n          type: array\n        governedDataSets:\n          $ref: '#/components/schemas/GovernedDataSets'\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n      required:\n      - dataProducts\n      - governedDataSets\n      - query\n      title: GeneratedQuery\n      type: object\n    GetCostOutput:\n      description: Details about the cost\n      example:\n        groupDefinitions:\n        - type: type\n          key: key\n        - type: type\n          key: key\n        dimensionValueAttributes:\n        - type: type\n          key: key\n        - type: type\n          key: key\n        resultsByTime:\n        - total:\n            usageQuantity:\n              key:\n                amount: amount\n                unit: unit\n            blendedCost:\n              key:\n                amount: amount\n                unit: unit\n          estimated: true\n          timePeriod:\n            start: start\n            end: end\n          groups:\n          - keys:\n            - keys\n            - keys\n            metrics:\n              key:\n                amount: amount\n                unit: unit\n          - keys:\n            - keys\n            - keys\n            metrics:\n              key:\n                amount: amount\n                unit: unit\n        - total:\n            usageQuantity:\n              key:\n                amount: amount\n                unit: unit\n            blendedCost:\n              key:\n                amount: amount\n                unit: unit\n          estimated: true\n          timePeriod:\n            start: start\n            end: end\n          groups:\n          - keys:\n            - keys\n            - keys\n            metrics:\n              key:\n                amount: amount\n                unit: unit\n          - keys:\n            - keys\n            - keys\n            metrics:\n              key:\n                amount: amount\n                unit: unit\n      properties:\n        dimensionValueAttributes:\n          description: Group by function\n          items:\n            $ref: '#/components/schemas/GetCostOutput_dimensionValueAttributes'\n          type: array\n        groupDefinitions:\n          description: Group by function\n          items:\n            $ref: '#/components/schemas/GetCostOutput_groupDefinitions'\n          type: array\n        resultsByTime:\n          description: Results by time\n          items:\n            $ref: '#/components/schemas/GetCostOutput_resultsByTime'\n          type: array\n      required:\n      - dimensionValueAttributes\n      - groupDefinitions\n      - resultsByTime\n      title: GetCostOutput\n      type: object\n    GetGovernancePolicyAttributesResponse:\n      description: A map of attribute id to the lens id that applies for the given\n        group and attributes\n      example:\n        attributeIdToLensId: {}\n      properties:\n        attributeIdToLensId:\n          additionalProperties:\n            $ref: '#/components/schemas/LensEnum'\n          type: object\n      required:\n      - attributeIdToLensId\n      title: GetGovernancePolicyAttributesResponse\n      type: object\n    GetGovernancePolicyAttributeValuesResponse:\n      description: The attribute value policies discovered from the given attributesId\n        and group\n      example:\n        attributeIdToSqlClause:\n          key: attributeIdToSqlClause\n      properties:\n        attributeIdToSqlClause:\n          additionalProperties:\n            description: The sql clause to apply for the attribute\n            type: string\n          type: object\n      required:\n      - attributeIdToSqlClause\n      title: GetGovernancePolicyAttributeValuesResponse\n      type: object\n    GetPermissionUserResponse:\n      description: The list of APIs that the user has access to\n      example: {}\n      properties:\n        permissions:\n          $ref: '#/components/schemas/UserPermission'\n      required:\n      - permissions\n      title: GetPermissionUserResponse\n      type: object\n    GetQuerySyncResponse:\n      description: A redirect to the query result api\n      title: GetQuerySyncResponse\n      type: object\n    GetQuerySyncResultResponse:\n      description: A redirect to the query result api\n      title: GetQuerySyncResultResponse\n      type: object\n    GovernedColumnMetadata:\n      properties:\n        dataType:\n          description: The data type of the column\n          maxLength: 2048\n          pattern: ^[\\w _\\{\\}\"\u003c\u003e:,-]*$\n          type: string\n        description:\n          description: A description of the column\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        lensToApply:\n          $ref: '#/components/schemas/LensEnum'\n        ontologyAttributeId:\n          description: The ontology attribute the column maps to (if any)\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        ontologyNamespace:\n          description: The ontologyNamespace of the ontology attribute\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        piiClassification:\n          description: Pii classification of the column\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        sortOrder:\n          description: The order in which this column should appear in the schema\n            and results\n          type: number\n        sqlClauses:\n          items:\n            maxLength: 262144\n            pattern: ^([\\s\\S]+)$\n            type: string\n          type: array\n      required:\n      - dataType\n      - lensToApply\n      - sqlClauses\n      type: object\n    GovernedColumnsMetadata:\n      additionalProperties:\n        $ref: '#/components/schemas/GovernedColumnMetadata'\n      type: object\n    GovernedDataProduct:\n      properties:\n        childDataProducts:\n          description: Any child data products, ie data products that use this data\n            product as a source for their data\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        cloudFormationStackId:\n          description: The id of the cloudformation stack for all resources pertaining\n            to this data product\n          maxLength: 2048\n          pattern: ^arn:[\\w]+:[\\w-]+:[\\w-]+:[\\d]+:[*-\\/\\w]+$\n          type: string\n        dataImportStateMachineArn:\n          description: The arn of the state machine for importing data product data\n            (if any)\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSets:\n          $ref: '#/components/schemas/GovernedDataSetsDetails'\n        dataStatus:\n          $ref: '#/components/schemas/DataProductDataStatus'\n        dataStatusDetails:\n          description: Details about the data status of the data product, eg error\n            message if data import failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        description:\n          description: A description of the data product\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        enableAutomaticPii:\n          description: Whether or not to automatically apply pii detection and redaction\n          type: boolean\n        enableAutomaticTransforms:\n          description: Whether or not to automatically apply transforms based on the\n            type of data in the data product\n          type: boolean\n        infrastructureStatus:\n          $ref: '#/components/schemas/DataProductInfrastructureStatus'\n        infrastructureStatusDetails:\n          description: Details about the infrastructure status of the data product,\n            eg error message if creation failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        latestDataUpdateTimestamp:\n          description: The time at which the data product data was last updated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        name:\n          description: The name of the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        parentDataProducts:\n          description: Any parent data products, ie data products that are used as\n            a source for data in this data product\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        sourceDataSets:\n          $ref: '#/components/schemas/DataSets'\n        sourceDataStatus:\n          $ref: '#/components/schemas/DataProductSourceDataStatus'\n        sourceDataStatusDetails:\n          description: Details about the raw source data status of the data product,\n            eg error message if data source inference failed\n          type: string\n        sourceDetails:\n          type: object\n        sourceType:\n          $ref: '#/components/schemas/SourceTypeEnum'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        transforms:\n          $ref: '#/components/schemas/DataProductTransforms'\n        updateTrigger:\n          $ref: '#/components/schemas/DataProductUpdateTrigger'\n      required:\n      - childDataProducts\n      - dataProductId\n      - dataSets\n      - domainId\n      - name\n      - parentDataProducts\n      - sourceType\n      - tags\n      - transforms\n      - updateTrigger\n      type: object\n    GovernedDataProductEntity:\n      description: The data product with the given id\n      example:\n        latestDataUpdateTimestamp: latestDataUpdateTimestamp\n        updateTrigger:\n          scheduleRate: scheduleRate\n        description: description\n        parentDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        updatedTimestamp: updatedTimestamp\n        enableAutomaticTransforms: true\n        dataProductId: dataProductId\n        infrastructureStatusDetails: infrastructureStatusDetails\n        dataStatusDetails: dataStatusDetails\n        sourceDetails: '{}'\n        enableAutomaticPii: true\n        updatedBy: updatedBy\n        cloudFormationStackId: cloudFormationStackId\n        createdTimestamp: createdTimestamp\n        childDataProducts:\n        - dataProductId: dataProductId\n          domainId: domainId\n        - dataProductId: dataProductId\n          domainId: domainId\n        dataImportStateMachineArn: dataImportStateMachineArn\n        domainId: domainId\n        createdBy: createdBy\n        name: name\n        sourceDataStatusDetails: sourceDataStatusDetails\n      properties:\n        childDataProducts:\n          description: Any child data products, ie data products that use this data\n            product as a source for their data\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        cloudFormationStackId:\n          description: The id of the cloudformation stack for all resources pertaining\n            to this data product\n          maxLength: 2048\n          pattern: ^arn:[\\w]+:[\\w-]+:[\\w-]+:[\\d]+:[*-\\/\\w]+$\n          type: string\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        dataImportStateMachineArn:\n          description: The arn of the state machine for importing data product data\n            (if any)\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSets:\n          $ref: '#/components/schemas/GovernedDataSetsDetails'\n        dataStatus:\n          $ref: '#/components/schemas/DataProductDataStatus'\n        dataStatusDetails:\n          description: Details about the data status of the data product, eg error\n            message if data import failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        description:\n          description: A description of the data product\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        enableAutomaticPii:\n          description: Whether or not to automatically apply pii detection and redaction\n          type: boolean\n        enableAutomaticTransforms:\n          description: Whether or not to automatically apply transforms based on the\n            type of data in the data product\n          type: boolean\n        infrastructureStatus:\n          $ref: '#/components/schemas/DataProductInfrastructureStatus'\n        infrastructureStatusDetails:\n          description: Details about the infrastructure status of the data product,\n            eg error message if creation failed\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        latestDataUpdateTimestamp:\n          description: The time at which the data product data was last updated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        name:\n          description: The name of the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        parentDataProducts:\n          description: Any parent data products, ie data products that are used as\n            a source for data in this data product\n          items:\n            $ref: '#/components/schemas/DataProductIdentifier'\n          type: array\n        sourceDataSets:\n          $ref: '#/components/schemas/DataSets'\n        sourceDataStatus:\n          $ref: '#/components/schemas/DataProductSourceDataStatus'\n        sourceDataStatusDetails:\n          description: Details about the raw source data status of the data product,\n            eg error message if data source inference failed\n          type: string\n        sourceDetails:\n          type: object\n        sourceType:\n          $ref: '#/components/schemas/SourceTypeEnum'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        transforms:\n          $ref: '#/components/schemas/DataProductTransforms'\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        updateTrigger:\n          $ref: '#/components/schemas/DataProductUpdateTrigger'\n      required:\n      - childDataProducts\n      - dataProductId\n      - dataSets\n      - domainId\n      - name\n      - parentDataProducts\n      - sourceType\n      - tags\n      - transforms\n      - updateTrigger\n      title: GovernedDataProductEntity\n      type: object\n    GovernedDataSet:\n      properties:\n        addressedAs:\n          type: string\n        dataProductId:\n          type: string\n        dataSet:\n          $ref: '#/components/schemas/GovernedDataSetDetails'\n        dataSetId:\n          type: string\n        domainId:\n          type: string\n      required:\n      - addressedAs\n      - dataProductId\n      - dataSet\n      - dataSetId\n      - domainId\n      type: object\n    GovernedDataSetDetails:\n      properties:\n        columnMetadata:\n          $ref: '#/components/schemas/GovernedColumnsMetadata'\n        description:\n          description: A description of the dataset\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        identifiers:\n          $ref: '#/components/schemas/DataSetIdentifiers'\n        name:\n          description: The name of the dataset within the data product\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - columnMetadata\n      - identifiers\n      type: object\n    GovernedDataSets:\n      description: The data sets involved in the query, with their applied governance\n        details\n      items:\n        $ref: '#/components/schemas/GovernedDataSet'\n      type: array\n    GovernedDataSetsDetails:\n      additionalProperties:\n        $ref: '#/components/schemas/GovernedDataSetDetails'\n      description: Map of datasets by id\n      type: object\n    Group:\n      properties:\n        apiAccessPolicyIds:\n          description: The api access policies associated with the group. These policy\n            ids map to sets of api paths to define what apis the group may call.\n          items:\n            maxLength: 256\n            minLength: 2\n            pattern: ^[a-z][a-z_0-9]*$\n            type: string\n          type: array\n        autoAssignUsers:\n          description: Flag to automatically add users to this group\n          type: boolean\n        claims:\n          description: The identity provider claims or machine ids associated with\n            this group. If a user has one or more of these claims, they are considered\n            part of the group\n          items:\n            maxLength: 256\n            minLength: 2\n            pattern: ^[a-z][a-z_0-9]*$\n            type: string\n          type: array\n        description:\n          description: A description of the group\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        groupId:\n          description: Identifier for the group\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        members:\n          description: The members that belong to this group, defined by values of\n            preferred_username.\n          items:\n            type: string\n          type: array\n      required:\n      - apiAccessPolicyIds\n      - claims\n      - groupId\n      - members\n      type: object\n    GroupEntity:\n      example:\n        autoAssignUsers: true\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        groupId: groupId\n        members:\n        - members\n        - members\n        apiAccessPolicyIds:\n        - apiAccessPolicyIds\n        - apiAccessPolicyIds\n        claims:\n        - claims\n        - claims\n        description: description\n        updatedTimestamp: updatedTimestamp\n      properties:\n        apiAccessPolicyIds:\n          description: The api access policies associated with the group. These policy\n            ids map to sets of api paths to define what apis the group may call.\n          items:\n            maxLength: 256\n            minLength: 2\n            pattern: ^[a-z][a-z_0-9]*$\n            type: string\n          type: array\n        autoAssignUsers:\n          description: Flag to automatically add users to this group\n          type: boolean\n        claims:\n          description: The identity provider claims or machine ids associated with\n            this group. If a user has one or more of these claims, they are considered\n            part of the group\n          items:\n            maxLength: 256\n            minLength: 2\n            pattern: ^[a-z][a-z_0-9]*$\n            type: string\n          type: array\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          description: A description of the group\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        groupId:\n          description: Identifier for the group\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        members:\n          description: The members that belong to this group, defined by values of\n            preferred_username.\n          items:\n            type: string\n          type: array\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - apiAccessPolicyIds\n      - claims\n      - groupId\n      - members\n      type: object\n    GroupIdentifier:\n      properties:\n        groupId:\n          description: Identifier for the group\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - groupId\n      type: object\n    GroupInput:\n      description: Details about the new group\n      example:\n        autoAssignUsers: true\n        groupId: groupId\n        members:\n        - members\n        - members\n        apiAccessPolicyIds:\n        - apiAccessPolicyIds\n        - apiAccessPolicyIds\n        claims:\n        - claims\n        - claims\n        description: description\n        updatedTimestamp: updatedTimestamp\n      properties:\n        apiAccessPolicyIds:\n          description: The api access policies associated with the group. These policy\n            ids map to sets of api paths to define what apis the group may call.\n          items:\n            maxLength: 256\n            minLength: 2\n            pattern: ^[a-z][a-z_0-9]*$\n            type: string\n          type: array\n        autoAssignUsers:\n          description: Flag to automatically add users to this group\n          type: boolean\n        claims:\n          description: The identity provider claims or machine ids associated with\n            this group. If a user has one or more of these claims, they are considered\n            part of the group\n          items:\n            maxLength: 256\n            minLength: 2\n            pattern: ^[a-z][a-z_0-9]*$\n            type: string\n          type: array\n        description:\n          description: A description of the group\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        groupId:\n          description: Identifier for the group\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        members:\n          description: The members that belong to this group, defined by values of\n            preferred_username.\n          items:\n            type: string\n          type: array\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - apiAccessPolicyIds\n      - claims\n      title: GroupInput\n      type: object\n    GroupMembers:\n      properties:\n        members:\n          description: The members that belong to this group, defined by values of\n            preferred_username.\n          items:\n            type: string\n          type: array\n      required:\n      - members\n      type: object\n    GroupMembersInput:\n      description: Details about the members to include\n      example:\n        members:\n        - members\n        - members\n      properties:\n        members:\n          description: The members that belong to this group, defined by values of\n            preferred_username.\n          items:\n            type: string\n          type: array\n      required:\n      - members\n      title: GroupMembersInput\n      type: object\n    IdentityAttribute:\n      example:\n        name: name\n        type: type\n        required: true\n      properties:\n        name:\n          description: The name of the attribute\n          type: string\n        required:\n          description: Flag that determine if the attribute is required or not\n          type: boolean\n        type:\n          description: The data type of the attribute\n          type: string\n      required:\n      - name\n      - required\n      - type\n      type: object\n    IdentityAttributes:\n      description: Details about the identity attributes\n      example:\n        attributes:\n        - name: name\n          type: type\n          required: true\n        - name: name\n          type: type\n          required: true\n      properties:\n        attributes:\n          items:\n            $ref: '#/components/schemas/IdentityAttribute'\n          type: array\n      title: IdentityAttributes\n      type: object\n    IdentityProvider:\n      properties:\n        attributeMapping:\n          additionalProperties:\n            type: string\n          description: The identity provider attribute mapping\n          type: object\n        description:\n          description: A description of the identity provider\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        details:\n          description: Parameters to configure the identity provider\n          type: object\n        enabled:\n          default: true\n          description: Specify if the identity provider is enabled or not\n          type: boolean\n        identifiers:\n          description: A list of identity provider identifiers\n          items:\n            maxLength: 256\n            pattern: '[\\w\\s+=.@-]+'\n            type: string\n          type: array\n        identityProviderId:\n          description: The id of identity provider\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        name:\n          description: The name of the identity provider\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        type:\n          $ref: '#/components/schemas/IdentityProviderTypeEnum'\n      required:\n      - details\n      - identityProviderId\n      - name\n      - type\n      type: object\n    IdentityProviderEntity:\n      example:\n        attributeMapping:\n          key: attributeMapping\n        updatedBy: updatedBy\n        createdBy: createdBy\n        identifiers:\n        - identifiers\n        - identifiers\n        createdTimestamp: createdTimestamp\n        name: name\n        description: description\n        details: '{}'\n        updatedTimestamp: updatedTimestamp\n        enabled: true\n        identityProviderId: identityProviderId\n      properties:\n        attributeMapping:\n          additionalProperties:\n            type: string\n          description: The identity provider attribute mapping\n          type: object\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          description: A description of the identity provider\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        details:\n          description: Parameters to configure the identity provider\n          type: object\n        enabled:\n          default: true\n          description: Specify if the identity provider is enabled or not\n          type: boolean\n        identifiers:\n          description: A list of identity provider identifiers\n          items:\n            maxLength: 256\n            pattern: '[\\w\\s+=.@-]+'\n            type: string\n          type: array\n        identityProviderId:\n          description: The id of identity provider\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        name:\n          description: The name of the identity provider\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        type:\n          $ref: '#/components/schemas/IdentityProviderTypeEnum'\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - details\n      - identityProviderId\n      - name\n      - type\n      type: object\n    IdentityProviderIdentifier:\n      properties:\n        identityProviderId:\n          description: The id of identity provider\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - identityProviderId\n      type: object\n    IdentityProviderInput:\n      description: Details about the identity provider to connect\n      example:\n        attributeMapping:\n          key: attributeMapping\n        identifiers:\n        - identifiers\n        - identifiers\n        name: name\n        description: description\n        details: '{}'\n        updatedTimestamp: updatedTimestamp\n        enabled: true\n        identityProviderId: identityProviderId\n      properties:\n        attributeMapping:\n          additionalProperties:\n            type: string\n          description: The identity provider attribute mapping\n          type: object\n        description:\n          description: A description of the identity provider\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        details:\n          description: Parameters to configure the identity provider\n          type: object\n        enabled:\n          default: true\n          description: Specify if the identity provider is enabled or not\n          type: boolean\n        identifiers:\n          description: A list of identity provider identifiers\n          items:\n            maxLength: 256\n            pattern: '[\\w\\s+=.@-]+'\n            type: string\n          type: array\n        identityProviderId:\n          description: The id of identity provider\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        name:\n          description: The name of the identity provider\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        type:\n          $ref: '#/components/schemas/IdentityProviderTypeEnum'\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - details\n      - name\n      - type\n      title: IdentityProviderInput\n      type: object\n    IdentityProviderTypeEnum:\n      description: The type of identity provider, SAML, OIDC, etc\n      enum:\n      - SAML\n      - OIDC\n      - Google\n      - LoginWithAmazon\n      type: string\n    LensEnum:\n      description: Lens value\n      enum:\n      - clear\n      - hidden\n      - hashed\n      - ada_detect_pii_types\n      type: string\n    ListApiAccessPoliciesResponse:\n      description: Available api access policies to associate with groups\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        policies:\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          resources:\n          - resources\n          - resources\n          updatedTimestamp: updatedTimestamp\n          apiAccessPolicyId: apiAccessPolicyId\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          resources:\n          - resources\n          - resources\n          updatedTimestamp: updatedTimestamp\n          apiAccessPolicyId: apiAccessPolicyId\n      properties:\n        nextToken:\n          type: string\n        policies:\n          items:\n            $ref: '#/components/schemas/ApiAccessPolicyEntity'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - policies\n      title: ListApiAccessPoliciesResponse\n      type: object\n    ListDataProductDomainDataProductsResponse:\n      description: The list of all data products\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        dataProducts:\n        - latestDataUpdateTimestamp: latestDataUpdateTimestamp\n          updateTrigger:\n            scheduleRate: scheduleRate\n          description: description\n          parentDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          updatedTimestamp: updatedTimestamp\n          enableAutomaticTransforms: true\n          dataProductId: dataProductId\n          infrastructureStatusDetails: infrastructureStatusDetails\n          dataStatusDetails: dataStatusDetails\n          sourceDetails: '{}'\n          enableAutomaticPii: true\n          updatedBy: updatedBy\n          cloudFormationStackId: cloudFormationStackId\n          createdTimestamp: createdTimestamp\n          childDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          dataImportStateMachineArn: dataImportStateMachineArn\n          domainId: domainId\n          createdBy: createdBy\n          name: name\n          sourceDataStatusDetails: sourceDataStatusDetails\n        - latestDataUpdateTimestamp: latestDataUpdateTimestamp\n          updateTrigger:\n            scheduleRate: scheduleRate\n          description: description\n          parentDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          updatedTimestamp: updatedTimestamp\n          enableAutomaticTransforms: true\n          dataProductId: dataProductId\n          infrastructureStatusDetails: infrastructureStatusDetails\n          dataStatusDetails: dataStatusDetails\n          sourceDetails: '{}'\n          enableAutomaticPii: true\n          updatedBy: updatedBy\n          cloudFormationStackId: cloudFormationStackId\n          createdTimestamp: createdTimestamp\n          childDataProducts:\n          - dataProductId: dataProductId\n            domainId: domainId\n          - dataProductId: dataProductId\n            domainId: domainId\n          dataImportStateMachineArn: dataImportStateMachineArn\n          domainId: domainId\n          createdBy: createdBy\n          name: name\n          sourceDataStatusDetails: sourceDataStatusDetails\n      properties:\n        dataProducts:\n          items:\n            $ref: '#/components/schemas/DataProductEntity'\n          type: array\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      required:\n      - dataProducts\n      title: ListDataProductDomainDataProductsResponse\n      type: object\n    ListDataProductDomainsResponse:\n      description: The list of all domains\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        domains:\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          updatedTimestamp: updatedTimestamp\n          domainId: domainId\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          updatedTimestamp: updatedTimestamp\n          domainId: domainId\n      properties:\n        domains:\n          items:\n            $ref: '#/components/schemas/DomainEntity'\n          type: array\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      required:\n      - domains\n      title: ListDataProductDomainsResponse\n      type: object\n    ListDataProductScriptsResponse:\n      description: The list of all scripts\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        scripts:\n        - scriptId: scriptId\n          versionId: versionId\n          inputSchema: '{}'\n          name: name\n          namespace: namespace\n          description: description\n          source: source\n          helperText: helperText\n        - scriptId: scriptId\n          versionId: versionId\n          inputSchema: '{}'\n          name: name\n          namespace: namespace\n          description: description\n          source: source\n          helperText: helperText\n      properties:\n        nextToken:\n          type: string\n        scripts:\n          items:\n            $ref: '#/components/schemas/Script'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - scripts\n      title: ListDataProductScriptsResponse\n      type: object\n    ListIdentityGroupsResponse:\n      description: The list of all groups\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        groups:\n        - autoAssignUsers: true\n          updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          groupId: groupId\n          members:\n          - members\n          - members\n          apiAccessPolicyIds:\n          - apiAccessPolicyIds\n          - apiAccessPolicyIds\n          claims:\n          - claims\n          - claims\n          description: description\n          updatedTimestamp: updatedTimestamp\n        - autoAssignUsers: true\n          updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          groupId: groupId\n          members:\n          - members\n          - members\n          apiAccessPolicyIds:\n          - apiAccessPolicyIds\n          - apiAccessPolicyIds\n          claims:\n          - claims\n          - claims\n          description: description\n          updatedTimestamp: updatedTimestamp\n      properties:\n        groups:\n          items:\n            $ref: '#/components/schemas/GroupEntity'\n          type: array\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      required:\n      - groups\n      title: ListIdentityGroupsResponse\n      type: object\n    ListIdentityMachinesResponse:\n      description: The list of all machines\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        machines:\n        - machineId: machineId\n          updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          description: description\n          updatedTimestamp: updatedTimestamp\n        - machineId: machineId\n          updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          description: description\n          updatedTimestamp: updatedTimestamp\n      properties:\n        machines:\n          items:\n            $ref: '#/components/schemas/MachineEntity'\n          type: array\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      required:\n      - machines\n      title: ListIdentityMachinesResponse\n      type: object\n    ListIdentityMachineTokensResponse:\n      description: The machine tokens with the given id\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        tokens:\n        - clientId: clientId\n          updatedBy: updatedBy\n          tokenId: tokenId\n          authToken: authToken\n          createdTimestamp: createdTimestamp\n          updatedTimestamp: updatedTimestamp\n          enabled: true\n          authUrl: authUrl\n          machineId: machineId\n          createdBy: createdBy\n          clientSecret: clientSecret\n          expiration: expiration\n          username: username\n        - clientId: clientId\n          updatedBy: updatedBy\n          tokenId: tokenId\n          authToken: authToken\n          createdTimestamp: createdTimestamp\n          updatedTimestamp: updatedTimestamp\n          enabled: true\n          authUrl: authUrl\n          machineId: machineId\n          createdBy: createdBy\n          clientSecret: clientSecret\n          expiration: expiration\n          username: username\n      properties:\n        nextToken:\n          type: string\n        tokens:\n          items:\n            $ref: '#/components/schemas/TokenEntity'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - tokens\n      title: ListIdentityMachineTokensResponse\n      type: object\n    ListIdentityProvidersResponse:\n      description: The list of all providers\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        providers:\n        - attributeMapping:\n            key: attributeMapping\n          updatedBy: updatedBy\n          createdBy: createdBy\n          identifiers:\n          - identifiers\n          - identifiers\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          details: '{}'\n          updatedTimestamp: updatedTimestamp\n          enabled: true\n          identityProviderId: identityProviderId\n        - attributeMapping:\n            key: attributeMapping\n          updatedBy: updatedBy\n          createdBy: createdBy\n          identifiers:\n          - identifiers\n          - identifiers\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          details: '{}'\n          updatedTimestamp: updatedTimestamp\n          enabled: true\n          identityProviderId: identityProviderId\n      properties:\n        nextToken:\n          type: string\n        providers:\n          items:\n            $ref: '#/components/schemas/IdentityProviderEntity'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - providers\n      title: ListIdentityProvidersResponse\n      type: object\n    ListIdentityRequestsResponse:\n      description: The access requests with the given id\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        accessRequests:\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          groupId: groupId\n          message: message\n          updatedTimestamp: updatedTimestamp\n          userId: userId\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          groupId: groupId\n          message: message\n          updatedTimestamp: updatedTimestamp\n          userId: userId\n      properties:\n        accessRequests:\n          items:\n            $ref: '#/components/schemas/AccessRequestEntity'\n          type: array\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      required:\n      - accessRequests\n      title: ListIdentityRequestsResponse\n      type: object\n    ListIdentityUsersResponse:\n      description: The list of the users currently available in Cognito\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        users:\n        - customGroups: customGroups\n          sub: sub\n          address: address\n          updatedBy: updatedBy\n          preferredUsername: preferredUsername\n          createdTimestamp: createdTimestamp\n          givenName: givenName\n          updatedTimestamp: updatedTimestamp\n          phoneNumber: phoneNumber\n          createdBy: createdBy\n          familyName: familyName\n          name: name\n          nickname: nickname\n          middleName: middleName\n          email: email\n          username: username\n        - customGroups: customGroups\n          sub: sub\n          address: address\n          updatedBy: updatedBy\n          preferredUsername: preferredUsername\n          createdTimestamp: createdTimestamp\n          givenName: givenName\n          updatedTimestamp: updatedTimestamp\n          phoneNumber: phoneNumber\n          createdBy: createdBy\n          familyName: familyName\n          name: name\n          nickname: nickname\n          middleName: middleName\n          email: email\n          username: username\n      properties:\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n        users:\n          items:\n            $ref: '#/components/schemas/UserEntity'\n          type: array\n      required:\n      - users\n      title: ListIdentityUsersResponse\n      type: object\n    ListNotificationsResponse:\n      description: The notifications for the calling user (optionally filtered by\n        status)\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        notifications:\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          payload: '{}'\n          targetAndStatus: targetAndStatus\n          createdTimestamp: createdTimestamp\n          notificationId: notificationId\n          source: source\n          type: type\n          updatedTimestamp: updatedTimestamp\n          status: PENDING\n          target: target\n        - updatedBy: updatedBy\n          createdBy: createdBy\n          payload: '{}'\n          targetAndStatus: targetAndStatus\n          createdTimestamp: createdTimestamp\n          notificationId: notificationId\n          source: source\n          type: type\n          updatedTimestamp: updatedTimestamp\n          status: PENDING\n          target: target\n      properties:\n        nextToken:\n          type: string\n        notifications:\n          items:\n            $ref: '#/components/schemas/PersistedNotificationEntity'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - notifications\n      title: ListNotificationsResponse\n      type: object\n    ListOntologiesResponse:\n      description: The list of all ontologies\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        ontologies:\n        - aliases:\n          - name: name\n          - name: name\n          updatedBy: updatedBy\n          ontologyNamespace: ontologyNamespace\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          ontologyId: ontologyId\n          updatedTimestamp: updatedTimestamp\n        - aliases:\n          - name: name\n          - name: name\n          updatedBy: updatedBy\n          ontologyNamespace: ontologyNamespace\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          name: name\n          description: description\n          ontologyId: ontologyId\n          updatedTimestamp: updatedTimestamp\n      properties:\n        nextToken:\n          type: string\n        ontologies:\n          items:\n            $ref: '#/components/schemas/OntologyEntity'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - ontologies\n      title: ListOntologiesResponse\n      type: object\n    ListOntologyFindByAliasesResponse:\n      description: The matching ontology for each given alias\n      example:\n        totalItems: 0.8008281904610115\n        aliases:\n          key:\n            aliases:\n            - name: name\n            - name: name\n            updatedBy: updatedBy\n            ontologyNamespace: ontologyNamespace\n            createdBy: createdBy\n            createdTimestamp: createdTimestamp\n            name: name\n            description: description\n            ontologyId: ontologyId\n            updatedTimestamp: updatedTimestamp\n        nextToken: nextToken\n      properties:\n        aliases:\n          additionalProperties:\n            $ref: '#/components/schemas/OntologyEntity'\n          description: A map of alias to the matching ontology attribute\n          type: object\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      required:\n      - aliases\n      title: ListOntologyFindByAliasesResponse\n      type: object\n    ListQueryHistoriesResponse:\n      description: The list of queries performed by a specific user, order by execution\n        date (desc)\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        queries:\n        - executionId: executionId\n          updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          query: query\n          updatedTimestamp: updatedTimestamp\n        - executionId: executionId\n          updatedBy: updatedBy\n          createdBy: createdBy\n          createdTimestamp: createdTimestamp\n          query: query\n          updatedTimestamp: updatedTimestamp\n      properties:\n        nextToken:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/QueryHistoryEntity'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - queries\n      title: ListQueryHistoriesResponse\n      type: object\n    Machine:\n      properties:\n        description:\n          description: A description of the machine\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - machineId\n      type: object\n    MachineEntity:\n      example:\n        machineId: machineId\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        description: description\n        updatedTimestamp: updatedTimestamp\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          description: A description of the machine\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - machineId\n      type: object\n    MachineIdentifier:\n      properties:\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - machineId\n      type: object\n    MachineInput:\n      description: Details about the new machine\n      example:\n        machineId: machineId\n        description: description\n        updatedTimestamp: updatedTimestamp\n      properties:\n        description:\n          description: A description of the machine\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      title: MachineInput\n      type: object\n    MetricValue:\n      example:\n        amount: amount\n        unit: unit\n      properties:\n        amount:\n          description: The actual number that represents the metric.\n          type: string\n        unit:\n          description: The unit that the metric is given in.\n          type: string\n      type: object\n    Notification:\n      description: A notification as sent throughout the system\n      properties:\n        payload:\n          description: Payload to send in the notification, can be any object\n          type: object\n        source:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        target:\n          description: Specified if the notification should target a particular recipient,\n            for example a user id.\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        type:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - payload\n      - source\n      - type\n      type: object\n    Ontology:\n      description: Uniquely identifies the ontology attribute.\n      properties:\n        aliases:\n          description: Alternate names for the ontology attribute, used for ontology\n            suggestions\n          items:\n            $ref: '#/components/schemas/OntologyAlias'\n          type: array\n        defaultLens:\n          $ref: '#/components/schemas/LensEnum'\n        description:\n          description: A description of the ontology attribute\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        name:\n          description: The name of the ontology attribute\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        ontologyId:\n          description: Identifies the ontology attribute within the ontologyNamespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        ontologyNamespace:\n          description: The namespace the ontology attribute belongs to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - aliases\n      - name\n      - ontologyId\n      - ontologyNamespace\n      type: object\n    OntologyAlias:\n      example:\n        name: name\n      properties:\n        name:\n          description: The name of an alias for this ontology attribute\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - name\n      type: object\n    OntologyEntity:\n      description: Uniquely identifies the ontology attribute.\n      example:\n        aliases:\n        - name: name\n        - name: name\n        updatedBy: updatedBy\n        ontologyNamespace: ontologyNamespace\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        name: name\n        description: description\n        ontologyId: ontologyId\n        updatedTimestamp: updatedTimestamp\n      properties:\n        aliases:\n          description: Alternate names for the ontology attribute, used for ontology\n            suggestions\n          items:\n            $ref: '#/components/schemas/OntologyAlias'\n          type: array\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        defaultLens:\n          $ref: '#/components/schemas/LensEnum'\n        description:\n          description: A description of the ontology attribute\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        name:\n          description: The name of the ontology attribute\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        ontologyId:\n          description: Identifies the ontology attribute within the ontologyNamespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        ontologyNamespace:\n          description: The namespace the ontology attribute belongs to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - aliases\n      - name\n      - ontologyId\n      - ontologyNamespace\n      type: object\n    OntologyIdentifier:\n      description: Uniquely identifies the ontology attribute.\n      properties:\n        ontologyId:\n          description: Identifies the ontology attribute within the ontologyNamespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        ontologyNamespace:\n          description: The namespace the ontology attribute belongs to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - ontologyId\n      - ontologyNamespace\n      type: object\n    OntologyInput:\n      description: Uniquely identifies the ontology attribute.\n      example:\n        aliases:\n        - name: name\n        - name: name\n        ontologyNamespace: ontologyNamespace\n        name: name\n        description: description\n        ontologyId: ontologyId\n        updatedTimestamp: updatedTimestamp\n      properties:\n        aliases:\n          description: Alternate names for the ontology attribute, used for ontology\n            suggestions\n          items:\n            $ref: '#/components/schemas/OntologyAlias'\n          type: array\n        defaultLens:\n          $ref: '#/components/schemas/LensEnum'\n        description:\n          description: A description of the ontology attribute\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        name:\n          description: The name of the ontology attribute\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        ontologyId:\n          description: Identifies the ontology attribute within the ontologyNamespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        ontologyNamespace:\n          description: The namespace the ontology attribute belongs to\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - aliases\n      - name\n      title: OntologyInput\n      type: object\n    PaginatedQueryResult:\n      description: The result of a query execution\n      example:\n        totalItems: 1.4658129805029452\n        data:\n        - null\n        - null\n        columns:\n        - nullable: nullable\n          caseSensitive: true\n          precision: 0.8008281904610115\n          name: name\n          scale: 6.027456183070403\n          label: label\n          type: type\n        - nullable: nullable\n          caseSensitive: true\n          precision: 0.8008281904610115\n          name: name\n          scale: 6.027456183070403\n          label: label\n          type: type\n        nextToken: nextToken\n        error: error\n      properties:\n        columns:\n          items:\n            $ref: '#/components/schemas/QueryResultColumnMetadata'\n          type: array\n        data:\n          items:\n            $ref: '#/components/schemas/QueryResultData'\n          type: array\n        dataIntegrity:\n          $ref: '#/components/schemas/DataIntegrityEnum'\n        error:\n          type: string\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      required:\n      - columns\n      - data\n      title: PaginatedQueryResult\n      type: object\n    PaginatedQueryResultAsAthena:\n      description: The result of a query execution\n      example:\n        updateCount: 0\n        nextToken: nextToken\n        resultSet: '{}'\n      properties:\n        nextToken:\n          type: string\n        resultSet:\n          type: object\n        updateCount:\n          type: integer\n      title: PaginatedQueryResultAsAthena\n      type: object\n    PaginatedResponse:\n      properties:\n        nextToken:\n          type: string\n        totalItems:\n          type: number\n      type: object\n    Permission:\n      description: Define the permission for the given route\n      properties:\n        access:\n          description: A flag that define whether the user can call this route or\n            not\n          type: boolean\n      type: object\n    PersistedNotification:\n      description: An object containing a persisted notification status\n      properties:\n        notificationId:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        payload:\n          description: Payload to send in the notification, can be any object\n          type: object\n        source:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        status:\n          enum:\n          - PENDING\n          - ACKNOWLEDGED\n          - DISMISSED\n          type: string\n        target:\n          description: The target of the notification, for example the userId\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        targetAndStatus:\n          description: Composite key for index of notification by target and status.\n            Delimited by .\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        type:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - notificationId\n      - payload\n      - source\n      - status\n      - target\n      - targetAndStatus\n      - type\n      type: object\n    PersistedNotificationEntity:\n      description: An object containing a persisted notification status\n      example:\n        updatedBy: updatedBy\n        createdBy: createdBy\n        payload: '{}'\n        targetAndStatus: targetAndStatus\n        createdTimestamp: createdTimestamp\n        notificationId: notificationId\n        source: source\n        type: type\n        updatedTimestamp: updatedTimestamp\n        status: PENDING\n        target: target\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        notificationId:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        payload:\n          description: Payload to send in the notification, can be any object\n          type: object\n        source:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        status:\n          enum:\n          - PENDING\n          - ACKNOWLEDGED\n          - DISMISSED\n          type: string\n        target:\n          description: The target of the notification, for example the userId\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        targetAndStatus:\n          description: Composite key for index of notification by target and status.\n            Delimited by .\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        type:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - notificationId\n      - payload\n      - source\n      - status\n      - target\n      - targetAndStatus\n      - type\n      type: object\n    PersistedNotificationIdentifier:\n      properties:\n        notificationId:\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        target:\n          description: The target of the notification, for example the userId\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - notificationId\n      - target\n      type: object\n    PersistedNotificationStatus:\n      description: An object containing a persisted notification status\n      example:\n        status: PENDING\n      properties:\n        status:\n          enum:\n          - PENDING\n          - ACKNOWLEDGED\n          - DISMISSED\n          type: string\n      required:\n      - status\n      type: object\n    PostQueryParseRenderDiscoverResponse:\n      description: The data products discovered from the query\n      example:\n        tables:\n        - identifierParts:\n          - identifierParts\n          - identifierParts\n        - identifierParts:\n          - identifierParts\n          - identifierParts\n      properties:\n        tables:\n          items:\n            $ref: '#/components/schemas/PostQueryParseRenderDiscoverResponse_tables'\n          type: array\n      required:\n      - tables\n      title: PostQueryParseRenderDiscoverResponse\n      type: object\n    PostQueryParseRenderValidateAttributeValuePolicyRequest:\n      description: The attribute value policy to validate\n      example:\n        clause: clause\n        attribute: attribute\n      properties:\n        attribute:\n          description: The attribute to be replaced in the sql clause\n          type: string\n        clause:\n          description: The SQL clause to validate\n          type: string\n      required:\n      - attribute\n      - clause\n      title: PostQueryParseRenderValidateAttributeValuePolicyRequest\n      type: object\n    PostQueryParseRenderValidateAttributeValuePolicyResponse:\n      description: An empty response if validation is successful\n      properties: {}\n      title: PostQueryParseRenderValidateAttributeValuePolicyResponse\n      type: object\n    PutGovernancePolicyAttributesRequest:\n      description: List of attribute policies to write\n      example:\n        policies:\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n      properties:\n        policies:\n          items:\n            $ref: '#/components/schemas/AttributePolicy'\n          type: array\n      required:\n      - policies\n      title: PutGovernancePolicyAttributesRequest\n      type: object\n    PutGovernancePolicyAttributesResponse:\n      description: The written attribute policies\n      example:\n        policies:\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n        - namespaceAndAttributeId: namespaceAndAttributeId\n          group: group\n      properties:\n        policies:\n          items:\n            $ref: '#/components/schemas/AttributePolicy'\n          type: array\n      required:\n      - policies\n      title: PutGovernancePolicyAttributesResponse\n      type: object\n    PutGovernancePolicyAttributeValuesRequest:\n      description: List of attribute value policies to write\n      example:\n        policies:\n        - sqlClause: sqlClause\n          namespaceAndAttributeId: namespaceAndAttributeId\n          description: description\n          group: group\n        - sqlClause: sqlClause\n          namespaceAndAttributeId: namespaceAndAttributeId\n          description: description\n          group: group\n      properties:\n        policies:\n          items:\n            $ref: '#/components/schemas/AttributeValuePolicy'\n          type: array\n      required:\n      - policies\n      title: PutGovernancePolicyAttributeValuesRequest\n      type: object\n    PutGovernancePolicyAttributeValuesResponse:\n      description: The written attribute value policies\n      example:\n        policies:\n        - sqlClause: sqlClause\n          namespaceAndAttributeId: namespaceAndAttributeId\n          description: description\n          group: group\n        - sqlClause: sqlClause\n          namespaceAndAttributeId: namespaceAndAttributeId\n          description: description\n          group: group\n      properties:\n        policies:\n          items:\n            $ref: '#/components/schemas/AttributeValuePolicy'\n          type: array\n      required:\n      - policies\n      title: PutGovernancePolicyAttributeValuesResponse\n      type: object\n    PutIdentityRequestActionRequest:\n      description: Approve or Deny AccessRequest\n      example:\n        reason: reason\n      properties:\n        reason:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n      required:\n      - reason\n      title: PutIdentityRequestActionRequest\n      type: object\n    PutIdentityRequestActionResponse:\n      description: The new details of the AccessRequest\n      example:\n        reason: reason\n      properties:\n        reason:\n          type: string\n      required:\n      - reason\n      title: PutIdentityRequestActionResponse\n      type: object\n    Query:\n      example:\n        query: query\n      properties:\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n      required:\n      - query\n      type: object\n    QueryDownload:\n      description: A download url for the full result of a query\n      example:\n        signedUrl: signedUrl\n      properties:\n        signedUrl:\n          type: string\n      required:\n      - signedUrl\n      title: QueryDownload\n      type: object\n    QueryExecution:\n      description: An execution id to track the status or retrieve the result of a\n        query\n      example:\n        executionId: executionId\n      properties:\n        executionId:\n          type: string\n      required:\n      - executionId\n      title: QueryExecution\n      type: object\n    QueryExecutionStatusEnum:\n      description: Status for a query execution\n      enum:\n      - RUNNING\n      - SUCCEEDED\n      - FAILED\n      - TIMED_OUT\n      - ABORTED\n      - QUEUED\n      - CANCELLED\n      type: string\n    QueryHistory:\n      properties:\n        executionId:\n          type: string\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n      required:\n      - executionId\n      - query\n      type: object\n    QueryHistoryEntity:\n      example:\n        executionId: executionId\n        updatedBy: updatedBy\n        createdBy: createdBy\n        createdTimestamp: createdTimestamp\n        query: query\n        updatedTimestamp: updatedTimestamp\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        executionId:\n          type: string\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - executionId\n      - query\n      type: object\n    QueryResult:\n      example:\n        data:\n        - null\n        - null\n        columns:\n        - nullable: nullable\n          caseSensitive: true\n          precision: 0.8008281904610115\n          name: name\n          scale: 6.027456183070403\n          label: label\n          type: type\n        - nullable: nullable\n          caseSensitive: true\n          precision: 0.8008281904610115\n          name: name\n          scale: 6.027456183070403\n          label: label\n          type: type\n      properties:\n        columns:\n          items:\n            $ref: '#/components/schemas/QueryResultColumnMetadata'\n          type: array\n        data:\n          items:\n            $ref: '#/components/schemas/QueryResultData'\n          type: array\n        dataIntegrity:\n          $ref: '#/components/schemas/DataIntegrityEnum'\n      required:\n      - columns\n      - data\n      type: object\n    QueryResultColumnMetadata:\n      example:\n        nullable: nullable\n        caseSensitive: true\n        precision: 0.8008281904610115\n        name: name\n        scale: 6.027456183070403\n        label: label\n        type: type\n      properties:\n        caseSensitive:\n          type: boolean\n        label:\n          type: string\n        name:\n          type: string\n        nullable:\n          type: string\n        precision:\n          description: For decimal data types, specifies the total number of digits\n          type: number\n        scale:\n          description: For decimal data types, specifies the total number of digits\n            in the fractional part of the value\n          type: number\n        type:\n          type: string\n      required:\n      - name\n      - type\n      type: object\n    QueryResultData:\n      additionalProperties:\n        type: string\n      type: object\n    QueryRewriteInput:\n      description: Input for a query rewrite request\n      example:\n        querySubstitutions:\n          key:\n            query: query\n        query: query\n        dataProducts:\n          key:\n            columns:\n            - clauses:\n              - clauses\n              - clauses\n              name: name\n              udfs:\n              - name: name\n                outputType: outputType\n                inputType: inputType\n              - name: name\n                outputType: outputType\n                inputType: inputType\n              attribute: attribute\n            - clauses:\n              - clauses\n              - clauses\n              name: name\n              udfs:\n              - name: name\n                outputType: outputType\n                inputType: inputType\n              - name: name\n                outputType: outputType\n                inputType: inputType\n              attribute: attribute\n            tableName: tableName\n      properties:\n        dataProducts:\n          additionalProperties:\n            $ref: '#/components/schemas/QueryRewriteInput_dataProducts'\n          description: Map of data product (as referenced in the query) to details\n            about the data product for governance\n          type: object\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n        querySubstitutions:\n          additionalProperties:\n            $ref: '#/components/schemas/QueryRewriteInput_querySubstitutions'\n          description: A map of query name (as referenced in the input query) to the\n            query to be substituted. Recursive references are allowed so long as they\n            are not circular.\n          type: object\n      required:\n      - dataProducts\n      - query\n      title: QueryRewriteInput\n      type: object\n    QuerySchema:\n      description: The schema for a data product\n      example: {}\n      properties:\n        schema:\n          $ref: '#/components/schemas/Schema'\n      required:\n      - schema\n      title: QuerySchema\n      type: object\n    QueryStatus:\n      description: The status of a query execution\n      example:\n        reason: reason\n      properties:\n        reason:\n          description: Failure status reason\n          type: string\n        status:\n          $ref: '#/components/schemas/QueryExecutionStatusEnum'\n      required:\n      - status\n      title: QueryStatus\n      type: object\n    ReferencedDataSetIdentifier:\n      example:\n        dataProductId: dataProductId\n        dataSetId: dataSetId\n        addressedAs: addressedAs\n        domainId: domainId\n      properties:\n        addressedAs:\n          description: How the data set was referenced in a query\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataProductId:\n          description: The id of the data product\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        dataSetId:\n          description: The id of the data set\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        domainId:\n          description: The id of the domain to which this data product belongs\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - addressedAs\n      - dataProductId\n      - dataSetId\n      - domainId\n      type: object\n    S3Location:\n      description: Details about the bucket and the object that have been stored\n      example:\n        bucket: bucket\n        key: key\n      properties:\n        bucket:\n          maxLength: 63\n          minLength: 3\n          pattern: ^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$\n          type: string\n        key:\n          maxLength: 1024\n          minLength: 1\n          pattern: ^[a-zA-Z0-9!_.*'()-]+(/[a-zA-Z0-9!_.*'()-]+)*$\n          type: string\n      required:\n      - bucket\n      - key\n      title: S3Location\n      type: object\n    SavedQuery:\n      properties:\n        addressedAs:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        namespace:\n          description: The namespace for this query\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n        queryId:\n          description: The id of the query within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        referencedDataSets:\n          items:\n            $ref: '#/components/schemas/ReferencedDataSetIdentifier'\n          type: array\n        referencedQueries:\n          items:\n            $ref: '#/components/schemas/SavedQueryIdentifier'\n          type: array\n        tags:\n          $ref: '#/components/schemas/Tags'\n        type:\n          enum:\n          - PUBLIC\n          - PRIVATE\n          type: string\n      required:\n      - addressedAs\n      - namespace\n      - query\n      - queryId\n      - referencedDataSets\n      - referencedQueries\n      - type\n      type: object\n    SavedQueryEntity:\n      example:\n        referencedDataSets:\n        - dataProductId: dataProductId\n          dataSetId: dataSetId\n          addressedAs: addressedAs\n          domainId: domainId\n        - dataProductId: dataProductId\n          dataSetId: dataSetId\n          addressedAs: addressedAs\n          domainId: domainId\n        updatedBy: updatedBy\n        createdTimestamp: createdTimestamp\n        query: query\n        description: description\n        addressedAs: addressedAs\n        type: PUBLIC\n        updatedTimestamp: updatedTimestamp\n        queryId: queryId\n        createdBy: createdBy\n        namespace: namespace\n        referencedQueries:\n        - namespace: namespace\n          queryId: queryId\n        - namespace: namespace\n          queryId: queryId\n      properties:\n        addressedAs:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        namespace:\n          description: The namespace for this query\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n        queryId:\n          description: The id of the query within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        referencedDataSets:\n          items:\n            $ref: '#/components/schemas/ReferencedDataSetIdentifier'\n          type: array\n        referencedQueries:\n          items:\n            $ref: '#/components/schemas/SavedQueryIdentifier'\n          type: array\n        tags:\n          $ref: '#/components/schemas/Tags'\n        type:\n          enum:\n          - PUBLIC\n          - PRIVATE\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - addressedAs\n      - namespace\n      - query\n      - queryId\n      - referencedDataSets\n      - referencedQueries\n      - type\n      type: object\n    SavedQueryIdentifier:\n      example:\n        namespace: namespace\n        queryId: queryId\n      properties:\n        namespace:\n          description: The namespace for this query\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        queryId:\n          description: The id of the query within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - namespace\n      - queryId\n      type: object\n    SavedQueryInput:\n      description: The query to save\n      example:\n        referencedDataSets:\n        - dataProductId: dataProductId\n          dataSetId: dataSetId\n          addressedAs: addressedAs\n          domainId: domainId\n        - dataProductId: dataProductId\n          dataSetId: dataSetId\n          addressedAs: addressedAs\n          domainId: domainId\n        query: query\n        namespace: namespace\n        description: description\n        addressedAs: addressedAs\n        type: PUBLIC\n        updatedTimestamp: updatedTimestamp\n        queryId: queryId\n        referencedQueries:\n        - namespace: namespace\n          queryId: queryId\n        - namespace: namespace\n          queryId: queryId\n      properties:\n        addressedAs:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        description:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        namespace:\n          description: The namespace for this query\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        query:\n          description: An SQL query\n          maxLength: 262144\n          pattern: ^([\\s\\S]+)$\n          type: string\n        queryId:\n          description: The id of the query within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        referencedDataSets:\n          items:\n            $ref: '#/components/schemas/ReferencedDataSetIdentifier'\n          type: array\n        referencedQueries:\n          items:\n            $ref: '#/components/schemas/SavedQueryIdentifier'\n          type: array\n        tags:\n          $ref: '#/components/schemas/Tags'\n        type:\n          enum:\n          - PUBLIC\n          - PRIVATE\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n      required:\n      - query\n      title: SavedQueryInput\n      type: object\n    SavedQueryList:\n      description: The list of all public saved queries\n      example:\n        totalItems: 0.8008281904610115\n        nextToken: nextToken\n        queries:\n        - referencedDataSets:\n          - dataProductId: dataProductId\n            dataSetId: dataSetId\n            addressedAs: addressedAs\n            domainId: domainId\n          - dataProductId: dataProductId\n            dataSetId: dataSetId\n            addressedAs: addressedAs\n            domainId: domainId\n          updatedBy: updatedBy\n          createdTimestamp: createdTimestamp\n          query: query\n          description: description\n          addressedAs: addressedAs\n          type: PUBLIC\n          updatedTimestamp: updatedTimestamp\n          queryId: queryId\n          createdBy: createdBy\n          namespace: namespace\n          referencedQueries:\n          - namespace: namespace\n            queryId: queryId\n          - namespace: namespace\n            queryId: queryId\n        - referencedDataSets:\n          - dataProductId: dataProductId\n            dataSetId: dataSetId\n            addressedAs: addressedAs\n            domainId: domainId\n          - dataProductId: dataProductId\n            dataSetId: dataSetId\n            addressedAs: addressedAs\n            domainId: domainId\n          updatedBy: updatedBy\n          createdTimestamp: createdTimestamp\n          query: query\n          description: description\n          addressedAs: addressedAs\n          type: PUBLIC\n          updatedTimestamp: updatedTimestamp\n          queryId: queryId\n          createdBy: createdBy\n          namespace: namespace\n          referencedQueries:\n          - namespace: namespace\n            queryId: queryId\n          - namespace: namespace\n            queryId: queryId\n      properties:\n        nextToken:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/SavedQueryEntity'\n          type: array\n        totalItems:\n          type: number\n      required:\n      - queries\n      title: SavedQueryList\n      type: object\n    Schema:\n      additionalProperties:\n        type: string\n      type: object\n    Script:\n      description: Uniquely identifies the script. Used to calculate the script path\n        in s3\n      example:\n        scriptId: scriptId\n        versionId: versionId\n        inputSchema: '{}'\n        name: name\n        namespace: namespace\n        description: description\n        source: source\n        helperText: helperText\n      properties:\n        description:\n          description: Description of the script\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        helperText:\n          description: helper text for the script definition\n          type: string\n        inputSchema:\n          description: input args definition\n          type: object\n        name:\n          description: Name of the script\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        namespace:\n          description: The namespace in which the script resides, eg the domain.\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        scriptId:\n          description: Identifies the script within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        source:\n          description: The script content, supplied when creating a script and returned\n            when retrieving an individual script\n          maxLength: 262144\n          pattern: ^[\\s\\S]*def apply_transform\\([\\s\\S]*$\n          type: string\n        versionId:\n          description: The version of the script\n          type: string\n      required:\n      - name\n      - namespace\n      - scriptId\n      type: object\n    ScriptEntity:\n      description: Uniquely identifies the script. Used to calculate the script path\n        in s3\n      example:\n        scriptId: scriptId\n        versionId: versionId\n        updatedBy: updatedBy\n        createdBy: createdBy\n        inputSchema: '{}'\n        createdTimestamp: createdTimestamp\n        name: name\n        namespace: namespace\n        description: description\n        source: source\n        helperText: helperText\n        updatedTimestamp: updatedTimestamp\n      properties:\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        description:\n          description: Description of the script\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        helperText:\n          description: helper text for the script definition\n          type: string\n        inputSchema:\n          description: input args definition\n          type: object\n        name:\n          description: Name of the script\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        namespace:\n          description: The namespace in which the script resides, eg the domain.\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        scriptId:\n          description: Identifies the script within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        source:\n          description: The script content, supplied when creating a script and returned\n            when retrieving an individual script\n          maxLength: 262144\n          pattern: ^[\\s\\S]*def apply_transform\\([\\s\\S]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        versionId:\n          description: The version of the script\n          type: string\n      required:\n      - name\n      - namespace\n      - scriptId\n      title: ScriptEntity\n      type: object\n    ScriptIdentifier:\n      description: Uniquely identifies the script. Used to calculate the script path\n        in s3\n      properties:\n        namespace:\n          description: The namespace in which the script resides, eg the domain.\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        scriptId:\n          description: Identifies the script within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - namespace\n      - scriptId\n      type: object\n    ScriptInput:\n      description: Uniquely identifies the script. Used to calculate the script path\n        in s3\n      example:\n        scriptId: scriptId\n        versionId: versionId\n        inputSchema: '{}'\n        name: name\n        namespace: namespace\n        description: description\n        source: source\n        helperText: helperText\n        updatedTimestamp: updatedTimestamp\n      properties:\n        description:\n          description: Description of the script\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        helperText:\n          description: helper text for the script definition\n          type: string\n        inputSchema:\n          description: input args definition\n          type: object\n        name:\n          description: Name of the script\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        namespace:\n          description: The namespace in which the script resides, eg the domain.\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        scriptId:\n          description: Identifies the script within the namespace\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        source:\n          description: The script content, supplied when creating a script and returned\n            when retrieving an individual script\n          maxLength: 262144\n          pattern: ^[\\s\\S]*def apply_transform\\([\\s\\S]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        versionId:\n          description: The version of the script\n          type: string\n      required:\n      - name\n      - source\n      title: ScriptInput\n      type: object\n    ScriptSource:\n      description: The script content, supplied when creating a script and returned\n        when retrieving an individual script\n      maxLength: 262144\n      pattern: ^[\\s\\S]*def apply_transform\\([\\s\\S]*$\n      type: string\n    ScriptSourceValidationInput:\n      description: Validate user provided script for vulnerabilities\n      example:\n        scriptSource: scriptSource\n      properties:\n        scriptSource:\n          description: The script source to validate\n          maxLength: 262144\n          pattern: ^[\\s\\S]*def apply_transform\\([\\s\\S]*$\n          type: string\n      required:\n      - scriptSource\n      title: ScriptSourceValidationInput\n      type: object\n    ScriptSourceValidationOutput:\n      description: Report containing the vulnerabilities of a script after scanning\n      example:\n        scriptSource: scriptSource\n        report:\n          generatedAt: generatedAt\n          metrics:\n            severity:\n              HIGH: 0\n              MEDIUM: 1\n              LOW: 6\n            loc: 5\n            skippedTests: 2\n            nosec: 5\n            confidence:\n              HIGH: 0\n              MEDIUM: 1\n              LOW: 6\n          passed: true\n          results:\n          - cwe:\n              link: link\n              id: 9\n            columnOffset: 7\n            code: code\n            filename: filename\n            issueText: issueText\n            testId: testId\n            lineRange:\n            - 2\n            - 2\n            lineNumber: 3\n            moreInfo: moreInfo\n            testName: testName\n          - cwe:\n              link: link\n              id: 9\n            columnOffset: 7\n            code: code\n            filename: filename\n            issueText: issueText\n            testId: testId\n            lineRange:\n            - 2\n            - 2\n            lineNumber: 3\n            moreInfo: moreInfo\n            testName: testName\n          errors:\n          - '{}'\n          - '{}'\n      properties:\n        report:\n          $ref: '#/components/schemas/ScriptVulnerabilityReport'\n        scriptSource:\n          description: The script source that was validated\n          maxLength: 262144\n          pattern: ^[\\s\\S]*def apply_transform\\([\\s\\S]*$\n          type: string\n      required:\n      - report\n      - scriptSource\n      title: ScriptSourceValidationOutput\n      type: object\n    ScriptVulnerabilityLevel:\n      description: Bandit level enum\n      enum:\n      - LOW\n      - MEDIUM\n      - HIGH\n      type: string\n    ScriptVulnerabilityReport:\n      description: Bandit python vulnerability scan output\n      example:\n        generatedAt: generatedAt\n        metrics:\n          severity:\n            HIGH: 0\n            MEDIUM: 1\n            LOW: 6\n          loc: 5\n          skippedTests: 2\n          nosec: 5\n          confidence:\n            HIGH: 0\n            MEDIUM: 1\n            LOW: 6\n        passed: true\n        results:\n        - cwe:\n            link: link\n            id: 9\n          columnOffset: 7\n          code: code\n          filename: filename\n          issueText: issueText\n          testId: testId\n          lineRange:\n          - 2\n          - 2\n          lineNumber: 3\n          moreInfo: moreInfo\n          testName: testName\n        - cwe:\n            link: link\n            id: 9\n          columnOffset: 7\n          code: code\n          filename: filename\n          issueText: issueText\n          testId: testId\n          lineRange:\n          - 2\n          - 2\n          lineNumber: 3\n          moreInfo: moreInfo\n          testName: testName\n        errors:\n        - '{}'\n        - '{}'\n      properties:\n        errors:\n          items:\n            type: object\n          type: array\n        generatedAt:\n          description: Timestamp when results were generated\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        metrics:\n          $ref: '#/components/schemas/ScriptVulnerabilityReport_metrics'\n        passed:\n          type: boolean\n        results:\n          items:\n            $ref: '#/components/schemas/ScriptVulnerabilityReport_results'\n          type: array\n      required:\n      - errors\n      - generatedAt\n      - metrics\n      - passed\n      - results\n      type: object\n    SouceDetailsSchema:\n      type: object\n    SourceTypeEnum:\n      description: Source type value\n      enum:\n      - UPLOAD\n      - S3\n      - KINESIS\n      - GOOGLE_ANALYTICS\n      - GOOGLE_BIGQUERY\n      - GOOGLE_STORAGE\n      - CLOUDWATCH\n      - MYSQL5\n      - POSTGRESQL\n      - SQLSERVER\n      type: string\n    Tag:\n      properties:\n        key:\n          maxLength: 128\n          minLength: 1\n          pattern: ^([a-zA-Z][a-zA-Z0-9_.:/=+-@]{0,127})$\n          type: object\n        value:\n          maxLength: 256\n          minLength: 0\n          pattern: ^([a-zA-Z0-9_.:/=+-@]{0,256})$\n          type: object\n      required:\n      - key\n      type: object\n    Tags:\n      items:\n        $ref: '#/components/schemas/Tag'\n      type: array\n    TearDownDetails:\n      description: Details about the tear down that has been started\n      example:\n        mode: retain-data\n        coreStackId: coreStackId\n        retainedResources:\n        - retainedResources\n        - retainedResources\n        message: message\n      properties:\n        coreStackId:\n          type: string\n        message:\n          type: string\n        mode:\n          description: Indicates the teardown mode being performed.\n          enum:\n          - retain-data\n          - destroy-data\n          type: string\n        retainedResources:\n          description: List of resource arns that will be retained after deletion\n            has completed, unless mode is destroy data.\n          items:\n            type: string\n          type: array\n      required:\n      - coreStackId\n      - message\n      - mode\n      - retainedResources\n      title: TearDownDetails\n      type: object\n    Token:\n      properties:\n        authToken:\n          description: The base64 encoded clientId and clientSecret, only available\n            during initial create response.\n          type: string\n        authUrl:\n          description: The authentication url used to authorize the token\n          type: string\n        clientId:\n          description: The clientId of the token.\n          type: string\n        clientSecret:\n          description: The clientSecret of the token, only available during initial\n            create response.\n          type: string\n        enabled:\n          description: Define whether the token is active or not\n          type: boolean\n        expiration:\n          description: The expiration date of the token\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        tokenId:\n          description: Identifier of the token\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        username:\n          description: The username associated with the token.\n          type: string\n      required:\n      - clientId\n      - enabled\n      - expiration\n      - machineId\n      - tokenId\n      - username\n      type: object\n    TokenEntity:\n      example:\n        clientId: clientId\n        updatedBy: updatedBy\n        tokenId: tokenId\n        authToken: authToken\n        createdTimestamp: createdTimestamp\n        updatedTimestamp: updatedTimestamp\n        enabled: true\n        authUrl: authUrl\n        machineId: machineId\n        createdBy: createdBy\n        clientSecret: clientSecret\n        expiration: expiration\n        username: username\n      properties:\n        authToken:\n          description: The base64 encoded clientId and clientSecret, only available\n            during initial create response.\n          type: string\n        authUrl:\n          description: The authentication url used to authorize the token\n          type: string\n        clientId:\n          description: The clientId of the token.\n          type: string\n        clientSecret:\n          description: The clientSecret of the token, only available during initial\n            create response.\n          type: string\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        enabled:\n          description: Define whether the token is active or not\n          type: boolean\n        expiration:\n          description: The expiration date of the token\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        tokenId:\n          description: Identifier of the token\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        username:\n          description: The username associated with the token.\n          type: string\n      required:\n      - clientId\n      - enabled\n      - expiration\n      - machineId\n      - tokenId\n      - username\n      type: object\n    TokenIdentifier:\n      properties:\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        tokenId:\n          description: Identifier of the token\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n      required:\n      - machineId\n      - tokenId\n      type: object\n    TokenInput:\n      description: Details about the new machine token\n      example:\n        authUrl: authUrl\n        clientId: clientId\n        machineId: machineId\n        tokenId: tokenId\n        authToken: authToken\n        clientSecret: clientSecret\n        expiration: expiration\n        updatedTimestamp: updatedTimestamp\n        enabled: true\n        username: username\n      properties:\n        authToken:\n          description: The base64 encoded clientId and clientSecret, only available\n            during initial create response.\n          type: string\n        authUrl:\n          description: The authentication url used to authorize the token\n          type: string\n        clientId:\n          description: The clientId of the token.\n          type: string\n        clientSecret:\n          description: The clientSecret of the token, only available during initial\n            create response.\n          type: string\n        enabled:\n          description: Define whether the token is active or not\n          type: boolean\n        expiration:\n          description: The expiration date of the token\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        machineId:\n          description: Identifier for the machine\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        tokenId:\n          description: Identifier of the token\n          maxLength: 256\n          minLength: 2\n          pattern: ^[a-z][a-z_0-9]*$\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        username:\n          description: The username associated with the token.\n          type: string\n      required:\n      - enabled\n      - expiration\n      title: TokenInput\n      type: object\n    UDF:\n      example:\n        name: name\n        outputType: outputType\n        inputType: inputType\n      properties:\n        inputType:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        name:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n        outputType:\n          maxLength: 2048\n          minLength: 2\n          pattern: ^[\\w _-]*$\n          type: string\n      required:\n      - inputType\n      - name\n      - outputType\n      type: object\n    User:\n      properties:\n        address:\n          description: The address of the user\n          type: string\n        customGroups:\n          description: List of groups that the user belongs to, separated by comma\n          type: string\n        email:\n          description: The user's email address\n          type: string\n        familyName:\n          description: The family name of the user\n          type: string\n        givenName:\n          description: The given name of the user\n          type: string\n        middleName:\n          description: The middle name of the user\n          type: string\n        name:\n          description: The name of the user\n          type: string\n        nickname:\n          description: The nickname of the user\n          type: string\n        phoneNumber:\n          description: The phone number of the user\n          type: string\n        preferredUsername:\n          description: The preferred_username attribute that is used to identity the\n            user\n          type: string\n        sub:\n          description: The Cognito sub of the user, equivalent to the ID\n          type: string\n        username:\n          description: The username of the user\n          type: string\n      required:\n      - username\n      type: object\n    UserEntity:\n      example:\n        customGroups: customGroups\n        sub: sub\n        address: address\n        updatedBy: updatedBy\n        preferredUsername: preferredUsername\n        createdTimestamp: createdTimestamp\n        givenName: givenName\n        updatedTimestamp: updatedTimestamp\n        phoneNumber: phoneNumber\n        createdBy: createdBy\n        familyName: familyName\n        name: name\n        nickname: nickname\n        middleName: middleName\n        email: email\n        username: username\n      properties:\n        address:\n          description: The address of the user\n          type: string\n        createdBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        createdTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        customGroups:\n          description: List of groups that the user belongs to, separated by comma\n          type: string\n        email:\n          description: The user's email address\n          type: string\n        familyName:\n          description: The family name of the user\n          type: string\n        givenName:\n          description: The given name of the user\n          type: string\n        middleName:\n          description: The middle name of the user\n          type: string\n        name:\n          description: The name of the user\n          type: string\n        nickname:\n          description: The nickname of the user\n          type: string\n        phoneNumber:\n          description: The phone number of the user\n          type: string\n        preferredUsername:\n          description: The preferred_username attribute that is used to identity the\n            user\n          type: string\n        sub:\n          description: The Cognito sub of the user, equivalent to the ID\n          type: string\n        updatedBy:\n          maxLength: 256\n          pattern: '[\\w\\s+=.@-]+'\n          type: string\n        updatedTimestamp:\n          maxLength: 64\n          pattern: ^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?))?$\n          type: string\n        username:\n          description: The username of the user\n          type: string\n      required:\n      - username\n      type: object\n    UserIdentifier:\n      properties:\n        username:\n          description: The username of the user\n          type: string\n      required:\n      - username\n      type: object\n    UserPermission:\n      additionalProperties:\n        $ref: '#/components/schemas/Permission'\n      description: Map of route by name\n      type: object\n    FileUploadInput_parts:\n      example:\n        etag: etag\n        partNumber: 0.8008281904610115\n      properties:\n        etag:\n          maxLength: 2048\n          pattern: ^[\\w+ _.:,\\/*\u0026%$#=+-@?!|()\"'\\]\\[]*$\n          type: string\n        partNumber:\n          type: number\n      required:\n      - etag\n      - partNumber\n      type: object\n    GetCostOutput_dimensionValueAttributes:\n      example:\n        type: type\n        key: key\n      properties:\n        key:\n          description: The key to group by\n          type: string\n        type:\n          description: Group Definition type.  \"DIMENSION\"|\"TAG\"|\"COST_CATEGORY\"\n          type: string\n      type: object\n    GetCostOutput_groupDefinitions:\n      example:\n        type: type\n        key: key\n      properties:\n        key:\n          description: The key to group by\n          type: string\n        type:\n          description: Group Definition type. \"DIMENSION\"|\"TAG\"|\"COST_CATEGORY\"\n          type: string\n      type: object\n    GetCostOutput_groups:\n      example:\n        keys:\n        - keys\n        - keys\n        metrics:\n          key:\n            amount: amount\n            unit: unit\n      properties:\n        keys:\n          items:\n            type: string\n          type: array\n        metrics:\n          additionalProperties:\n            $ref: '#/components/schemas/MetricValue'\n          type: object\n      type: object\n    GetCostOutput_timePeriod:\n      example:\n        start: start\n        end: end\n      properties:\n        end:\n          description: end timestamp\n          type: string\n        start:\n          description: start timestamp\n          type: string\n      type: object\n    GetCostOutput_total:\n      description: Total\n      example:\n        usageQuantity:\n          key:\n            amount: amount\n            unit: unit\n        blendedCost:\n          key:\n            amount: amount\n            unit: unit\n      properties:\n        blendedCost:\n          additionalProperties:\n            $ref: '#/components/schemas/MetricValue'\n          type: object\n        usageQuantity:\n          additionalProperties:\n            $ref: '#/components/schemas/MetricValue'\n          type: object\n      type: object\n    GetCostOutput_resultsByTime:\n      example:\n        total:\n          usageQuantity:\n            key:\n              amount: amount\n              unit: unit\n          blendedCost:\n            key:\n              amount: amount\n              unit: unit\n        estimated: true\n        timePeriod:\n          start: start\n          end: end\n        groups:\n        - keys:\n          - keys\n          - keys\n          metrics:\n            key:\n              amount: amount\n              unit: unit\n        - keys:\n          - keys\n          - keys\n          metrics:\n            key:\n              amount: amount\n              unit: unit\n      properties:\n        estimated:\n          description: Whether it is an estimation or not\n          type: boolean\n        groups:\n          description: Groups\n          items:\n            $ref: '#/components/schemas/GetCostOutput_groups'\n          type: array\n        timePeriod:\n          $ref: '#/components/schemas/GetCostOutput_timePeriod'\n        total:\n          $ref: '#/components/schemas/GetCostOutput_total'\n      type: object\n    PostQueryParseRenderDiscoverResponse_tables:\n      example:\n        identifierParts:\n        - identifierParts\n        - identifierParts\n      properties:\n        identifierParts:\n          description: Each identifier part as referenced in the query\n          items:\n            type: string\n          type: array\n      required:\n      - identifierParts\n      type: object\n    QueryRewriteInput_columns:\n      example:\n        clauses:\n        - clauses\n        - clauses\n        name: name\n        udfs:\n        - name: name\n          outputType: outputType\n          inputType: inputType\n        - name: name\n          outputType: outputType\n          inputType: inputType\n        attribute: attribute\n      properties:\n        attribute:\n          description: Optional ontology attribute associated with this column\n          type: string\n        clauses:\n          description: Additional SQL where clauses to apply for this column (written\n            in terms of the ontology attribute)\n          items:\n            type: string\n          type: array\n        name:\n          description: Column name\n          type: string\n        udfs:\n          description: User-defined functions to apply to this column for governance\n          items:\n            $ref: '#/components/schemas/UDF'\n          type: array\n      required:\n      - clauses\n      - name\n      - udfs\n      type: object\n    QueryRewriteInput_dataProducts:\n      example:\n        columns:\n        - clauses:\n          - clauses\n          - clauses\n          name: name\n          udfs:\n          - name: name\n            outputType: outputType\n            inputType: inputType\n          - name: name\n            outputType: outputType\n            inputType: inputType\n          attribute: attribute\n        - clauses:\n          - clauses\n          - clauses\n          name: name\n          udfs:\n          - name: name\n            outputType: outputType\n            inputType: inputType\n          - name: name\n            outputType: outputType\n            inputType: inputType\n          attribute: attribute\n        tableName: tableName\n      properties:\n        columns:\n          items:\n            $ref: '#/components/schemas/QueryRewriteInput_columns'\n          type: array\n        tableName:\n          description: The qualified table name referencable in Athena\n          type: string\n      required:\n      - columns\n      - tableName\n      type: object\n    QueryRewriteInput_querySubstitutions:\n      example:\n        query: query\n      properties:\n        query:\n          type: string\n      type: object\n    ScriptVulnerabilityReport_metrics_confidence:\n      example:\n        HIGH: 0\n        MEDIUM: 1\n        LOW: 6\n      properties:\n        HIGH:\n          type: integer\n        LOW:\n          type: integer\n        MEDIUM:\n          type: integer\n      required:\n      - HIGH\n      - LOW\n      - MEDIUM\n      type: object\n    ScriptVulnerabilityReport_metrics:\n      example:\n        severity:\n          HIGH: 0\n          MEDIUM: 1\n          LOW: 6\n        loc: 5\n        skippedTests: 2\n        nosec: 5\n        confidence:\n          HIGH: 0\n          MEDIUM: 1\n          LOW: 6\n      properties:\n        confidence:\n          $ref: '#/components/schemas/ScriptVulnerabilityReport_metrics_confidence'\n        loc:\n          type: integer\n        nosec:\n          type: integer\n        severity:\n          $ref: '#/components/schemas/ScriptVulnerabilityReport_metrics_confidence'\n        skippedTests:\n          type: integer\n      required:\n      - confidence\n      - loc\n      - nosec\n      - severity\n      - skippedtests\n      type: object\n    ScriptVulnerabilityReport_cwe:\n      example:\n        link: link\n        id: 9\n      properties:\n        id:\n          type: integer\n        link:\n          type: string\n      required:\n      - id\n      - link\n      type: object\n    ScriptVulnerabilityReport_results:\n      example:\n        cwe:\n          link: link\n          id: 9\n        columnOffset: 7\n        code: code\n        filename: filename\n        issueText: issueText\n        testId: testId\n        lineRange:\n        - 2\n        - 2\n        lineNumber: 3\n        moreInfo: moreInfo\n        testName: testName\n      properties:\n        code:\n          type: string\n        columnOffset:\n          type: integer\n        cwe:\n          $ref: '#/components/schemas/ScriptVulnerabilityReport_cwe'\n        filename:\n          type: string\n        issueConfidence:\n          $ref: '#/components/schemas/ScriptVulnerabilityLevel'\n        issueSeverity:\n          $ref: '#/components/schemas/ScriptVulnerabilityLevel'\n        issueText:\n          type: string\n        lineNumber:\n          type: integer\n        lineRange:\n          items:\n            type: integer\n          type: array\n        moreInfo:\n          type: string\n        testId:\n          type: string\n        testName:\n          type: string\n      required:\n      - code\n      - columnOffset\n      - cwe\n      - filename\n      - issueConfidence\n      - issueSeverity\n      - issueText\n      - lineNumber\n      - lineRange\n      - moreInfo\n      - testId\n      - testName\n      type: object\n  securitySchemes:\n    authorizer:\n      in: header\n      name: Authorization\n      type: apiKey\n      x-amazon-apigateway-authtype: custom\n",
			"canonicalURL": "/github.com/aws-solutions/automated-data-analytics-on-aws@dae128b65182985f62f3c6c7acb6fd889b0a3ac6/-/blob/source/packages/@ada/api/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aws-solutions/automated-data-analytics-on-aws/blob/dae128b65182985f62f3c6c7acb6fd889b0a3ac6/source/packages/@ada/api/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/query-parse-render/rewrite\": post: requestBody: contents: media: \"application/json\": generate schema: save schema types: save referenced type: reference \"https://raw.githubusercontent.com/aws-solutions/automated-data-analytics-on-aws/dae128b65182985f62f3c6c7acb6fd889b0a3ac6/source/packages/@ada/api/spec.yaml#/components/schemas/QueryRewriteInput_dataProducts\" type name conflict: \"QueryRewriteInputDataProducts\""
}