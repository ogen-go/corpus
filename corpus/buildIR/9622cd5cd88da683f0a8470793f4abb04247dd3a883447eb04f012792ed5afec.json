{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/mediawiki-services-eventstreams"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "spec.yaml",
			"byteSize": 2824,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.3.0\n  title: Wikimedia EventStreams\n  description: Streaming Wikimedia event data over HTTP SSE / EventSource\n  termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use\n  license:\n    name: Apache2\n    url: http://www.apache.org/licenses/LICENSE-2.0\nexternalDocs:\n  url: https://wikitech.wikimedia.org/wiki/EventStreams\n\npaths:\n\n  /v2/stream/{streams}:\n    get:\n      x-monitor: false\n      tags: [streams]\n      summary: Subscribe to one or multiple streams.\n      description: \u003e\n        Use this route to subscribe to a comma separated list of configured streams.\n      parameters:\n        - name: streams\n          in: path\n          description: Comma separated list of stream names to subscribe to.\n          schema: { type: array, items: { type: string } }\n          required: true\n        - name: Last-Event-ID\n          in: header\n          description: \u003e\n            Specifies the Kafka topics, partitions and offsets from which to begin\n            streaming. You may not specify topics that are not configured\n            to be part of this stream endpoint.\n            Example: `[{topic: datacenter1.topic, partition: 0, offset: 12345}, ...]`\n          schema:\n            type: array\n            items:\n              type: object\n              properties:\n                topic:\n                  type: string\n                partition:\n                  type: integer\n                offset:\n                  type: integer\n                timestamp:\n                  type: string\n        - name: since\n          in: query\n          description: \u003e\n            If given, this timestamp will be used as the historical starting position in\n            each the requested streams. since should either be an integer UTC milliseconds\n            unix epoch timestamp, or a string timestamp parseable by `Date.parse()`.\n            If the timestamp given does not have any corresponding offsets, it will be ignored,\n            and the data will begin streaming from the latest position in the stream.\n            This parameter is ignored if `Last-Event-ID` is set with offsets (or timestamps)\n            for individual topic partition assignments, e.g. when resuming after a disconnect.\n            NOTE: Historical timestamp assignment is not supported indefinitely. Depending\n            on backend stream configuration, will likely be only one or a few weeks.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n            text/event-stream:\n              schema:\n                type: string\n# NOTE:  Specific /v2/stream/* routes are configured in the routes/stream.js\n# dynamically from the stream_config_uri.\n",
			"canonicalURL": "/github.com/wikimedia/mediawiki-services-eventstreams@7f6dba5abf8f60ea5320af158bfc0283f3626184/-/blob/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wikimedia/mediawiki-services-eventstreams/blob/7f6dba5abf8f60ea5320af158bfc0283f3626184/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v2/stream/{streams}\": get: parameters: \"Last-Event-ID\": nested objects not allowed"
}