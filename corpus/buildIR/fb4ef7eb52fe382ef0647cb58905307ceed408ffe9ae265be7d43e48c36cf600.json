{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/pan.dev"
		},
		"file": {
			"name": "InsightsResources.yaml",
			"size": 0,
			"path": "static/sase/spec/mt-monitor/InsightsResources.yaml",
			"byteSize": 4477,
			"content": "components:\n  schemas:\n    RequestBody_UpgradesList:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/UpgradeListFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/UpgradeListProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    TimeFilter:\n      properties:\n        operator: {description: Filter operator that is one of the example values\n            and is run on the property field, example: 'gt, lt, last_n_minutes, last_n_hours,\n            last_n_days', type: string}\n        property: {description: Filter property field that is one of the example values,\n          example: 'event_time, update_time, updated_time', type: string}\n        values:\n          description: Filter property value\n          example: minute, hour or day counts if property is event_time\n          items: {type: string}\n          type: array\n      type: object\n    UpgradeListFilter:\n      description: \"Upgrade list filter. Consists of a required operator and an array\\\n        \\ of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          description: 'See [TimeFilter](/sase/docs/filters#timefilter).\n\n            '\n          items: {$ref: '#/components/schemas/TimeFilter'}\n          type: array\n      required: [operator]\n      type: object\n    UpgradeListProperty:\n      properties:\n        alias: {type: string}\n        property: {description: \"Upgrade list property. See [UpgradeListProperty](/sase/docs/filters#upgradelistproperty).\\\n            \\   \\n\", example: 'sub_tenant_id, amiversion, current_software_version,\n            last_upgrade_date, next_upgrade_scheduled_str, status, error, next_upgrade_scheduled',\n          type: string}\n      type: object\n  securitySchemes:\n    Bearer: {scheme: bearer, type: http}\ninfo:\n  contact: {}\n  description: 'Use the Insights Resource API for retrieving the upgrade status.\n\n    '\n  title: Insights Resource API\n  version: '1.0'\nopenapi: 3.0.2\npaths:\n  /mt/monitor/v1/agg/custom/upgrades/list:\n    post:\n      description: 'Retrieve an aggregated list of all upgrade statuses across tenants.\n\n        '\n      operationId: post-mt-monitor-v1-agg-custom-upgrades-list\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: 'Must be one of the following: `de`, `americas`, `europe`, `uk`,\n          `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\n          (CDL) region specified.    '\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Upgrade List:\n                value:\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: amiversion}\n                  - {property: current_software_version}\n                  - {property: last_upgrade_date}\n                  - {property: next_upgrade_scheduled_str}\n                  - {property: status}\n                  - {property: error}\n                  - {property: next_upgrade_scheduled}\n            schema: {$ref: '#/components/schemas/RequestBody_UpgradesList'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Upgrade List:\n                  value:\n                  - {amiversion: \u003camiversion\u003e, current_software_version: \u003ccurrent_software_version\u003e,\n                    error: \u003cerror\u003e, last_upgrade_date: \u003clast_upgrade_date\u003e, next_upgrade_scheduled: \u003cnext_upgrade_scheduled\u003e,\n                    next_upgrade_scheduled_str: \u003cnext_upgrade_scheduled_str\u003e, status: \u003cstatus\u003e,\n                    sub_tenant_id: \u003csub_tenant_id\u003e}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List upgrades\n      tags: [InsightsResources]\nservers:\n- {url: 'https://api.sase.paloaltonetworks.com'}\ntags:\n- {name: InsightsResources}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/pan.dev@3dde0e6dc06db0738da25c12387df8c8695eb954/-/blob/static/sase/spec/mt-monitor/InsightsResources.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/pan.dev/blob/3dde0e6dc06db0738da25c12387df8c8695eb954/static/sase/spec/mt-monitor/InsightsResources.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/mt/monitor/v1/agg/custom/upgrades/list\": post: requestBody: contents: media: \"application/json\": generate schema: field filter: allOf: schema type mismatch: object and "
}