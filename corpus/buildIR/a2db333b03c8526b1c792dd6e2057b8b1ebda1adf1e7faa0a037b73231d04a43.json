{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openintegrationhub/openintegrationhub"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "lib/component-repository/docs/swagger/openapi.json",
			"byteSize": 16436,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"Component repository is a service used to manage components in the Open Integration Hub.\",\n    \"version\": \"1.0.0\",\n    \"title\": \"Component Repository\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [{\n    \"name\": \"components\",\n    \"description\": \"Component management\"\n  }],\n  \"paths\": {\n    \"/components/\": {\n      \"get\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Retrieve all components\",\n        \"description\": \"Retrieve all components from the repository.\",\n        \"operationId\": \"getComponents\",\n        \"parameters\": [{\n          \"name\": \"page[size]\",\n          \"description\": \"The amount of components per page returned. Defaults to 50.\",\n          \"in\": \"query\",\n          \"schema\": {\n            \"type\": \"integer\"\n          }\n        }, {\n          \"name\": \"page[number]\",\n          \"description\": \"The number of the page to be returned. Defaults to 1.\",\n          \"in\": \"query\",\n          \"schema\": {\n            \"type\": \"integer\"\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/MutableComponent\"\n                      }\n                    },\n                    \"meta\": {\n                      \"$ref\": \"#/components/schemas/Meta\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Create a component\",\n        \"description\": \"Create a component\",\n        \"operationId\": \"createComponent\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MutableComponent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/MutableComponent\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/components/{id}\": {\n      \"get\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Find component by ID\",\n        \"description\": \"Returns a component with given ID\",\n        \"operationId\": \"getComponentById\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of component to return\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/MutableComponent\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"description\": \"Component with given ID not found\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Update a component\",\n        \"description\": \"Update a component\",\n        \"operationId\": \"updateComponent\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of component to update\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MutableComponent\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/MutableComponent\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"description\": \"Component with given ID not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Delete a component\",\n        \"description\": \"Delete a component\",\n        \"operationId\": \"deleteComponent\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of component to update\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The component was deleted successfully\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"description\": \"Component with given ID not found\"\n          }\n        }\n      }\n    },\n    \"/components/global/{id}/start\": {\n      \"post\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Start a global component by ID\",\n        \"description\": \"Returns a success message\",\n        \"operationId\": \"startGlobalComponentById\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of global component to start\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/GlobalComponentStart\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"description\": \"Component with given ID not found\"\n          }\n        }\n      }\n    },\n    \"/components/global/{id}/stop\": {\n      \"post\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Stop a global component by ID\",\n        \"description\": \"Returns a success message\",\n        \"operationId\": \"stopGlobalComponentById\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of global component to stop\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/GlobalComponentStop\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"description\": \"Component with given ID not found\"\n          }\n        }\n      }\n    },\n    \"/components/global/restart/all\": {\n      \"post\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Restarts all currently running global components\",\n        \"description\": \"First stops all global components, then restarts them in the same order. Speed of the operation can be adjusted depending on cluster requirements.\",\n        \"operationId\": \"restartAllGlobalComponents\",\n        \"parameters\": [{\n          \"name\": \"emitThrottle\",\n          \"in\": \"query\",\n          \"description\": \"Amount of time in seconds between emmission of   each stopping and starting event, defaults to 10\",\n          \"required\": false,\n          \"schema\": {\n            \"type\": \"number\"\n          }\n        },\n        {\n          \"name\": \"restartDelay\",\n          \"in\": \"query\",\n          \"description\": \"Length of pause (in seconds) between stopping the last component and beginning the restarting process, defaults to 2\",\n          \"required\": false,\n          \"schema\": {\n            \"type\": \"number\"\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/GlobalComponentRestart\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/components/enrich/{id}\": {\n      \"patch\": {\n        \"tags\": [\"components\"],\n        \"summary\": \"Automatically enrich component metadata\",\n        \"description\": \"Fetches component data from its repository, if available\",\n        \"operationId\": \"enrichComponent\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"ID of global component to stop\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n          {\n            \"name\": \"repository\",\n            \"in\": \"query\",\n            \"description\": \"Absolute url of component repository. Will use component's saved repository if none is provided\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Operation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"404\": {\n            \"description\": \"Component with given ID not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"description\": \"Token issued by IAM\"\n      }\n    },\n    \"responses\": {\n      \"UnauthorizedError\": {\n        \"description\": \"Access token is missing or invalid\"\n      }\n    },\n    \"schemas\": {\n      \"MutableComponent\": {\n        \"type\": \"object\",\n        \"required\": [\"name\", \"distribution\"],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"My Component\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"My Component\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique component ID\"\n          },\n          \"access\": {\n            \"type\": \"string\",\n            \"enum\": [\"private\", \"public\"],\n            \"default\": \"private\",\n            \"example\": \"public\"\n          },\n          \"applicationUid\": {\n            \"type\": \"string\",\n            \"description\": \"Unique application ID\",\n            \"example\": \"3f57d4cc-9a6b-40c9-8db6-0657c116e97c\"\n          },\n          \"logo\": {\n            \"type\": \"string\",\n            \"description\": \"Component Logo URL\",\n            \"example\": \"https://my-component.com/logo.png\"\n          },\n          \"descriptor\": {\n            \"type\": \"object\",\n            \"description\": \"Component descriptor (component.json) which contains a component meta information.\"\n          },\n          \"distribution\": {\n            \"$ref\": \"#/components/schemas/ComponentDistribution\"\n          },\n          \"isGlobal\": {\n            \"type\": \"boolean\"\n          },\n          \"active\": {\n            \"type\": \"boolean\"\n          },\n          \"owners\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Owner\"\n            }\n          }\n        }\n      },\n      \"ComponentDistribution\": {\n        \"allOf\": [{\n          \"type\": \"object\",\n          \"required\": [\"type\"],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\"docker\", \"slug\"]\n            }\n          }\n        }, {\n          \"oneOf\": [{\n            \"$ref\": \"#/components/schemas/ComponentDockerDistribution\"\n          }, {\n            \"$ref\": \"#/components/schemas/ComponentSlugDistribution\"\n          }]\n        }],\n        \"example\": {\n          \"type\": \"docker\",\n          \"image\": \"openintegrationhub/email\",\n          \"registrySecretId\": \"5b62c919fd98ea00112d52e7\"\n        }\n      },\n      \"ComponentDockerDistribution\": {\n        \"type\": \"object\",\n        \"required\": [\"image\"],\n        \"properties\": {\n          \"image\": {\n            \"type\": \"string\",\n            \"description\": \"Docker image\",\n            \"example\": \"openintegrationhub/email:v1.0.0\"\n          },\n          \"registrySecretId\": {\n            \"type\": \"string\",\n            \"description\": \"ID of a secret, which contains Docker registry credentials\",\n            \"example\": \"5b62c919fd98ea00112d52e7\"\n          }\n        }\n      },\n      \"ComponentSlugDistribution\": {\n        \"type\": \"object\",\n        \"required\": [\"slugUrl\"],\n        \"properties\": {\n          \"slugUrl\": {\n            \"type\": \"string\",\n            \"description\": \"URL to a slug, containing a compomponent source code\"\n          }\n        }\n      },\n      \"Owner\": {\n        \"type\": \"object\",\n        \"required\": [\"id\", \"type\"],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"External id of the owner\",\n            \"example\": \"123\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Type to discriminate owner's type\",\n            \"example\": \"user\"\n          }\n        }\n      },\n      \"Meta\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"Current page (1-based numbering)\"\n          },\n          \"perPage\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of objects per page\"\n          },\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of objects\"\n          },\n          \"totalPages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of pages\"\n          }\n        }\n      },\n      \"GlobalComponentStart\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"example\": \"Component started\"\n          },\n          \"code\": {\n            \"type\": \"string\",\n            \"example\": 200\n          }\n        }\n      },\n      \"GlobalComponentStop\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"example\": \"Component stopped\"\n          },\n          \"code\": {\n            \"type\": \"string\",\n            \"example\": 200\n          }\n        }\n      },\n      \"GlobalComponentRestart\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"example\": \"2 Components will be restarted\"\n          },\n          \"code\": {\n            \"type\": \"string\",\n            \"example\": 200\n          }\n        }\n      }\n    }\n  },\n  \"security\": [{\n    \"bearerAuth\": []\n  }]\n}\n",
			"canonicalURL": "/github.com/openintegrationhub/openintegrationhub@a3b4e9f8fe6662d72adcbf022abfd6429ed724b3/-/blob/lib/component-repository/docs/swagger/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/openintegrationhub/openintegrationhub/blob/a3b4e9f8fe6662d72adcbf022abfd6429ed724b3/lib/component-repository/docs/swagger/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/components/\": get: responses: code 200: contents: media: \"application/json\": generate schema: field data: item: field distribution: allOf: schema type mismatch: object and "
}