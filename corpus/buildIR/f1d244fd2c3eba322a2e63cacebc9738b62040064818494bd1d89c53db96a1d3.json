{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/ndhm.gov.in/ndhm-hiu/0.5/openapi.yaml",
			"byteSize": 109542,
			"content": "openapi: 3.0.0\nservers:\n  - description: Sandbox\n    url: https://dev.ndhm.gov.in/gateway\ninfo:\n  contact:\n    name: National Health Authority\n    url: https://ndhm.gov.in/\n  description: |\n    The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIU. The specs are essentially duplicates from the Gateway and Bridge, but put together so as to make it clear to *HIUs* which set of APIs they should implement to participate in the network. \n\n      1. The APIs are organized by the flows - **identification**, **consent flow**, **data flow** and **monitoring**. They represent the APIs that are expected to be available at the HIU end by the Gateway. \n      2. For majority of the APIs, if Gateway has initiated a call, there are corresponding callback APIs on the Gateway. e.g for **/consents/hiu/notify** API on HIU end, its expected that a corresponding callback API **/consents/hiu/on-notify** on Gateway is called. Such APIs are organized under the **Gateway** label. \n      3. Gateway relevant APIs for HIUs are grouped under **Gateway** label. These include the APIs that HIPs are required to call on the Gateway. For example, to request a CM for consent, HIU would call **/consent-requests/init** API on gateway. \n      4. **NOTE**, in some of the API documentations below, **X-HIP-ID** is mentioned in header (for example in /auth/on-init). These are the cases, when a particular API is applicable for both HIU and HIP (e.g an entity is playing the role of HRP representing both HIU and HIP). If you are only playing the role of HIP, then only X-HIU-ID header will be sent \n  title: Health Repository Provider Specifications for HIU\n  version: \"0.5\"\n  x-apisguru-categories:\n    - open_data\n  x-origin:\n    - format: openapi\n      url: https://apisetu.gov.in/api_specification_v8/ndhm-hiu.yaml\n      version: \"3.0\"\n  x-providerName: ndhm.gov.in\n  x-serviceName: ndhm-hiu\ntags:\n  - name: user auth\n  - name: identification\n  - name: consent flow\n  - name: data flow\n  - name: subscriptions\n  - name: monitoring\n  - name: Gateway\npaths:\n  /v0.5/.well-known/openid-configuration:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenIdConfiguration\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/OpenIdConfiguration\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid consent request id\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Get openid configuration\n      tags:\n        - Gateway\n  /v0.5/certs:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Certs\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Certs\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid consent request id\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Get certs for JWT verification\n      tags:\n        - Gateway\n  /v0.5/consent-requests/init:\n    post:\n      description: Creates a consent request to get data about a patient by HIU user.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConsentRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/ConsentRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent \n              * Required attributes not mentioned\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Create consent request\n      tags:\n        - Gateway\n  /v0.5/consent-requests/on-init:\n    post:\n      description: |\n        Result of consent request creation for a patient. **id** represents the consentrequest id created by CM. The result must contain either **id** or the **error** caused. \u003cbr/\u003e\n          Reasons for error may be\n          * Invalid references (e.g patient id, hiu id), purpose, hiTypes, ranges, persmission\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConsentRequestInitResponse\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/ConsentRequestInitResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Response to consent request\n      tags:\n        - consent flow\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/consent-requests/on-status:\n    post:\n      description: |\n        Result of consent request done previously. Status of request can be GRANTED,  DENIED, EXPIRED. If the request was GRANTED, then \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUConsentRequestStatus\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/HIUConsentRequestStatus\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Result of consent request status\n      tags:\n        - consent flow\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/consent-requests/status:\n    post:\n      description: Get status of consent request done previously\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConsentRequestStatusRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/ConsentRequestStatusRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Get consent request status\n      tags:\n        - Gateway\n  /v0.5/consents/fetch:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConsentFetchRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Get consent artefact\n      tags:\n        - Gateway\n  /v0.5/consents/hiu/notify:\n    post:\n      description: |\n        Health information user will get notified about the consent request granted or denied, consent revoked, consent expired. \n        1. For consent request grant, status=GRANTED, consentRequestId=\u003cconsent-request-id\u003e, and consentArtefacts is an array of generated consent artefact Ids.\n        2. For consent request expiry, status=EXPIRED, consentRequestId=\u003cconsent-request-id\u003e\n        3. For consent request denied, status=DENIED, consentRequestId=\u003cconsent-request-id\u003e\n        4. For consent revocation, status=REVOKED, consentArtefacts is an array of revoked consent artefact ids\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUConsentNotificationEvent\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid/Expired/Empty token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream services are down\n      summary: Consent notification\n      tags:\n        - consent flow\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/consents/hiu/on-notify:\n    post:\n      description: |\n        This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUConsentNotificationResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid/Expired/Empty token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream services are down\n      summary: Consent notification\n      tags:\n        - Gateway\n  /v0.5/consents/on-fetch:\n    post:\n      description: |\n        Must contain either consent or error. Possible reason of errors are \n        1. consentId passed through /fetch is invalid\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConsentArtefactResponse\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/ConsentArtefactResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Result of fetch request for a consent artefact\n      tags:\n        - consent flow\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/health-information/cm/request:\n    post:\n      description: |\n        Request for Health information against a consent id. CM would generate a transactionId against each consent and pass it as trnasaction context / correlation id to the HIP and also return the same to HIU via /on-request. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/HIRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Token is invalid or Link has expired\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Health information data request\n      tags:\n        - Gateway\n  /v0.5/health-information/hiu/on-request:\n    post:\n      description: |\n        Callback API for acknowledgement of Health information request made by HIU. Gateway calls this API when request has validated for the specified  consent id. Either the **hiRequest** or **error** would be specified. If the health info request was valid, then the ***hiRequest.transactionId*** specifies the transaction context against which HIP would send over the data.  Possible cases of errors are\n          1. **Invalid consent artefact id**\n          2. **Consent has expired**\n          3. **Date ranges are invalid**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUHealthInformationRequestResponse\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/HIUHealthInformationRequestResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Token is invalid or Link has expired\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Health information data request\n      tags:\n        - data flow\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/health-information/notify:\n    post:\n      description: |\n        API called by HIU and HIP during data-transfer.\n        1. HIP on transfer of data would send **sessionStatus** - one of [TRANSFERRED, FAILED]\n        2. HIP would also send **hiStatus** for each *careContextReference* - on of [DELIVERED, ERRORED]\n        3. HIU on receipt of data would send **sessionStatus** - one of [TRANSFERRED, FAILED]. For example, FAILED when if data was not sent or if invalid data was sent\n        4. HIU would also send **hiStatus** for each *careContextReference* - one of [OK, ERRORED]\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HealthInformationNotification\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/HealthInformationNotification\"\n        required: true\n      responses:\n        \"204\":\n          description: Notification is Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Notifications corresponding to events during data flow\n      tags:\n        - Gateway\n  /v0.5/health-information/transfer:\n    post:\n      description: |\n        **NOTE**: This API is actually the callback URL that is passed as **dataPushUrl** in the data request API - /v0.5/health-information/hip/request. This API is directly called by HIP Data Bridge and is not mediated via CM, and hence not routed through the Gateway. \n          1. This API should be implemented at HIU side. It maybe implemented by the Data Bridge representing the HIU. \n          2. Entry elements maybe ***content*** or ***link***, although for version 1, entry ***content*** is preferred. \n          3. Entry ***content*** (or even link reference content) must be encrypted by means of Elliptic-curve Diffie–Hellman Key Exchange, utilizing the HIU keymaterials that are passed through the data request API - /v0.5/health-information/hip/request. \n          4. Media contains the mimetype of content, and for v1, it is \"application/fhir+json\"\n          5. checksum is Md5 checksum of the data conent, before encryption\n          6. Please refer to the NDHM Sandbox documentation for the format of FHIR bundle that is passed through content \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DataNotification\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/DataNotification\"\n        required: true\n      responses:\n        \"202\":\n          description: Data accepted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid/Expired/Empty token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream services are down\n      summary: health information transfer API\n      tags:\n        - data flow\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/heartbeat:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HeartbeatResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/HeartbeatResponse\"\n          description: OK\n      summary: Get consent request status\n      tags:\n        - monitoring\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/patients/find:\n    post:\n      description: |\n        This API is meant for identify to patient given her consent-manager-user-id\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientIdentificationRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientIdentificationRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            Invalid request, required attributes not provided\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Identify a patient by her consent-manager user-id\n      tags:\n        - Gateway\n  /v0.5/patients/on-find:\n    post:\n      description: |\n        If a patient is found then patient.name contains the patients name. \n        Otherwise, patient is not provided, and possibly error is raised for invalid requests\n        Note in addition to the \"Authorization\" header, one of the following headers must be specified\n        1. specify **X-HIU-ID** if the requester is HIU (identified from /find requester.id)\n        2. specify **X-HIP-ID** if the requester is HIP (identified from /find requester.id)\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientIdentificationResponse\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientIdentificationResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            Invalid request, required attributes not provided\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Identification result for a consent-manager user-id\n      tags:\n        - identification\n    servers:\n      - url: https://dev.ndhm.gov.in/hiu\n  /v0.5/sessions:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SessionRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SessionRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SessionResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SessionResponse\"\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid client Id or secret.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid consent request id\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Get access token\n      tags:\n        - Gateway\n  /v0.5/subscription-requests/cm/init:\n    post:\n      description: creates a request for subscription. The subscription categories can be for care-contexts linkages or availability of data against existing care-contexts. Note that the requester must have HIU role\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent \n              * Required attributes not mentioned\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Request for subscription\n      tags:\n        - Gateway\n  /v0.5/subscription-requests/hiu/notify:\n    post:\n      description: |\n        This API is used by CM to notify a HIU to grant or deny a request for subscription, and also to notify that in case an existing subscription is revoked or expired. For notifying that a particular subscription request was GRANTED or DENIED, the **subscriptionRequestId** is passed. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionApprovalNotification\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionApprovalNotification\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent \n              * Required attributes not mentioned\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Notification for subscription grant/deny/revoke\n      tags:\n        - subscriptions\n  /v0.5/subscription-requests/hiu/on-init:\n    post:\n      description: |\n        This callback API acknowledges the request for subscription from a HIU, and sends back a \"id\" that will be used when the patient/user approves or denies the subscription. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUSubscriptionRequestReceipt\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid/Expired/Empty token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream services are down\n      summary: callback API for the /subscription-requests/cm/init to notify a HIU on acceptance/acknowledgement of the request for subscription.\n      tags:\n        - subscriptions\n  /v0.5/subscription-requests/hiu/on-notify:\n    post:\n      description: |\n        This API is called by HIU as acknowledgement to subscription request relevant notifications. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUSubscriptionRequestNotificationAcknowledgement\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid/Expired/Empty token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream services are down\n      summary: Callback API for /subscription-requests/hiu/notify to acknowledge receipt of notification.\n      tags:\n        - Gateway\n  /v0.5/subscriptions/hiu/notify:\n    post:\n      description: |\n        This API is used by CM to notify a HIU for notification relevant to subscription. Notifications are sent to subscribed HIUs whenever a new care-context is linked or new data is available on an existing linked care-context. \n        1. if event.category = LINK, then only care-contexts are passed when new care-contexts are linked for patient. \n        2. If event.category = DATA, then hiTypes are passed. Care-context is passed only if the subscribed HIU has any valid consent for that care-context\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUSubscriptionNotification\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/HIUSubscriptionNotification\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid data sent \n              * Required attributes not mentioned\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Expired/Invalid token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Notification to HIU on basis of a granted subscription\n      tags:\n        - subscriptions\n  /v0.5/subscriptions/hiu/on-notify:\n    post:\n      description: |\n        This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/HIUSubscriptionNotificationAcknowledgment\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Invalid/Expired/Empty token.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream services are down\n      summary: Callback API for /subscriptions/hiu/notify to acknowledge receipt of notification.\n      tags:\n        - Gateway\n  /v0.5/users/auth/confirm:\n    post:\n      description: |\n        This API is called by HIP/HIUs to confirm authentication of users. The transactionId returned by the previous callback API /users/auth/on-init must be sent. If Authentication is successful the callback API will send an \"access token\" for subsequent purpose specific API calls. Note only **credential.authCode** or **credential.demographic** should be sent\n          1. demographic details are only required for  demographic auth as of now. \n          2. demographic details are required only in MEDIATED cases and if the **auth.mode** so demands. e.g. if **auth.mode** is DEMOGRAPHICS. Usually for demographic authentication, the name, gender and DOB must be exactly as specified in User Account.\n          3. demographic.identifier is optional, however maybe required if authentication so mandates. \n          4. credential.authCode is required for other MEDIATED authentication like MOBILE_OTP, AADHAAR_OTP. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthConfirmRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthConfirmRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * transaction id is not provided or invalid\n              * token or other auth confirmation details not provided or invalid\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Confirmation request sending token, otp or other authentication details from HIP/HIU for confirmation\n      tags:\n        - Gateway\n  /v0.5/users/auth/fetch-modes:\n    post:\n      description: |\n        This API is meant for identify supported authentication modes for a patient given a specific purpose\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthModeQueryRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthModeQueryRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            Invalid request, required attributes not provided\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Get a patient's authentication modes relevant to specified purpose\n      tags:\n        - Gateway\n  /v0.5/users/auth/init:\n    post:\n      description: |\n        This API is called by HIPs to initiate authentication of users. A transactionId is retuned by the corresponding callback API for confirmation of user auth.\n          1. **NOTE**, only **KYC** purpose is applicable for HIU. Hence HIU should only sent KYC in **query.authMode** in the request\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthInitRequest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthInitRequest\"\n        required: true\n      responses:\n        \"202\":\n          description: Request accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * patient id is not provided\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Initialize authentication from HIP\n      tags:\n        - Gateway\n  /v0.5/users/auth/notify:\n    post:\n      description: |\n        This API is called by CM to confirm authentication of users. The transactionId returned is same as that passed in /auth/on-init. The \"auth.status\" conveys whether the request was GRANTED or DENIED.\n\n          1. **auth.accessToken** - is specific to the purpose mentioned in the /auth/init. This token needs to be used for initiating the intended action. For example for HIP initiated linking of care-contexts\n          2. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both.\n          3. The payload is conditional to the purpose of auth. If purpose specified in /auth/init is KYC or KYC_AND_LINK, then patient details are passed. **auth.accessToken** is passed only if the purpose is LINK or KYC_AND_LINK.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthNotification\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthNotification\"\n        required: true\n      responses:\n        \"202\":\n          description: Request accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * required details not provided\n              * neither auth nor error specified \n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: notification API in case of DIRECT mode of authentication by the CM\n      tags:\n        - user auth\n  /v0.5/users/auth/on-confirm:\n    post:\n      description: |\n        This API is called by CM to confirm authentication of users.\n\n          1. **auth.accessToken** - is specific to the purpose mentioned in the /auth/init. This token needs to be used for initiating the intended action. For example for HIP initiated linking of care-contexts\n          2. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both.     \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthConfirmResponse\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthConfirmResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * required details not provided\n              * neither auth nor error specified \n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: callback API for /auth/confirm (in case of MEDIATED auth) to confirm user authentication or not\n      tags:\n        - user auth\n  /v0.5/users/auth/on-fetch-modes:\n    post:\n      description: |\n        If a patient is found then **auth** attribute contains the supported modes for the specified purpose. \n        Otherwise, error is raised for invalid requests or for non-existent id.\n        Note in addition to the \"Authorization\" header, one of the following headers must be specified\n        1. **X-HIU-ID** if the requester is HIU (identified from /auth/fetch-modes requester.id)\n        2. **X-HIP-ID** if the requester is HIP (identified from /auth/fetch-modes requester.id)\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthModeQueryResponse\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthModeQueryResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            Invalid request, required attributes not provided\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Identification result for a consent-manager user-id\n      tags:\n        - user auth\n  /v0.5/users/auth/on-init:\n    post:\n      description: |\n        If the patient's id is valid, CM will return a transactionId as initialization of user auth. If the request is valid, then 'auth.mode' will convey how the authentication should be done. The authentication can be *mediated* or *direct*. For mediated authentication modes, HIP or HIU is epected to send over relevant code (OTP/token) or demographic info via subsequent API call to /auth/confirm. for direct authentication case, CM will notify requester through/users/auth/notify API. \n\n          1. **auth.mode** conveys whats the mode of authentication is, and what is expected from HIP/HIU in the subsequent /auth/confirm API call. Possible values \n              1. MOBILE_OTP - auth via OTP to registered mobile. Mediated. \n              2. AADHAAR_OTP - auth initiated with Aadhaar with OTP. Mediated. \n              3. DEMOGRAPHICS - auth initiated with demographic verification\n              4. DIRECT - for authentication directly with the patient. e.g. Mobile App, SMS. In this case, the HIP/HIU is not expected to call subsequent /auth/confirm call. CM will do direct authentication with the User (e.g. Mobile App, SMS etc) and will notify requester\n          2. **meta.expiry** conveys the expiry time of the token and the authentication session\n          3. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both. \n          4. **NOTE**, only KYC purpose is applicable for HIU\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          \n        The error section in the body, represents the potential errors that may have occurred. Possible reasons:\n          1. Patient id is invalid\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthInitResponse\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthInitResponse\"\n        required: true\n      responses:\n        \"202\":\n          description: Request accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * required information not provided\n              * neither authInit nor error specified \n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: Response to user authentication initialization from HIP\n      tags:\n        - user auth\n  /v0.5/users/auth/on-notify:\n    post:\n      description: |\n        This API is called by HIU/HIPs to confirm acknowledgement for receipt of auth notification is case of DIRECT authentication. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthNotificationAcknowledgement\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/PatientAuthNotificationAcknowledgement\"\n        required: true\n      responses:\n        \"202\":\n          description: Request accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * required details not provided\n              * neither auth nor error specified \n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Unauthorized request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: |\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n      summary: callback API by HIU/HIPs as acknowledgement of auth notification\n      tags:\n        - Gateway\ncomponents:\n  parameters:\n    ConsentId:\n      description: Consent request's identifier\n      in: path\n      name: consentId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    ConsentRequestId:\n      description: Consent request's identifier\n      in: path\n      name: consentRequestId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    LinkRefNumber:\n      description: Reference number for the link request made earlier.\n      in: path\n      name: linkRefNumber\n      required: true\n      schema:\n        $ref: \"#/components/schemas/UuidSchema\"\n    X-CM-ID:\n      description: Suffix of the consent manager to which the request was intended.\n      in: header\n      name: X-CM-ID\n      required: true\n      schema:\n        type: string\n    X-HIP-ID:\n      description: Identifier of the health information provider to which the request was intended.\n      in: header\n      name: X-HIP-ID\n      required: true\n      schema:\n        type: string\n    X-HIU-ID:\n      description: Identifier of the health information user to which the request was intended.\n      in: header\n      name: X-HIU-ID\n      required: true\n      schema:\n        type: string\n    X-Origin-ID:\n      description: |\n        Identifier of the health information provider user from which the request came. (Necessity of this header depends on the authentication at the Bridge) If gateway uses JWT authentication, from access token itself originator can be identified.\n      in: header\n      name: X-Origin-ID\n      schema:\n        type: string\n    authorization:\n      description: Access token which was issued after successful login with gateway auth server, which will be sent by gateway to authenticate itself with API bridge.\n      in: header\n      name: Authorization\n      required: true\n      schema:\n        type: string\n  schemas:\n    AccessTokenValidity:\n      properties:\n        expiry:\n          $ref: \"#/components/schemas/TimestampSchema\"\n        limit:\n          description: number of times, the token can be used\n          example: \"1\"\n          type: integer\n        purpose:\n          $ref: \"#/components/schemas/PatientAuthPurpose\"\n        requester:\n          $ref: \"#/components/schemas/PatientAuthRequester\"\n      required:\n        - purpose\n        - requester\n        - expiry\n        - limit\n      type: object\n    AuthConfirmIdentifier:\n      properties:\n        type:\n          $ref: \"#/components/schemas/AuthConfirmIdentifierType\"\n        value:\n          example: \"+919800083232\"\n          type: string\n      required:\n        - type\n        - value\n      type: object\n      xml:\n        name: AuthConfirmIdentifier\n    AuthConfirmIdentifierType:\n      enum:\n        - MOBILE\n      type: string\n    AuthMeta:\n      properties:\n        expiry:\n          example: 2019-12-30T12:01:55Z\n          type: string\n        hint:\n          type: string\n      type: object\n      xml:\n        name: Meta\n    AuthenticationMode:\n      description: |\n        Subjected to CM specific capability\n         1. MOBILE_OTP - for SMS OTP\n         2. DIRECT - for authentication directly with the patient. e.g. Mobile App, SMS\n         3. AADHAAR_OTP - for auth using OTP sent to Aadhaar number\n         4. DEMOGRAPHICS - for auth using demographic verification.\n      enum:\n        - MOBILE_OTP\n        - DIRECT\n        - DEMOGRAPHICS\n        - AADHAAR_OTP\n      type: string\n    CareContextDefinition:\n      properties:\n        careContextReference:\n          example: Episode1\n          type: string\n        patientReference:\n          example: batman@tmh\n          type: string\n      required:\n        - patientReference\n        - careContextReference\n      type: object\n    CertificateOrKeyGetSchema:\n      properties:\n        alg:\n          type: string\n        e:\n          type: string\n        kid:\n          type: string\n        kty:\n          type: string\n        n:\n          type: string\n        use:\n          type: string\n        x5c:\n          items:\n            description: A PKIX certificate [RFC5280]\n            type: string\n          type: array\n        x5t:\n          type: string\n        x5t#S256:\n          type: string\n      type: object\n    Certs:\n      properties:\n        keys:\n          items:\n            $ref: \"#/components/schemas/CertificateOrKeyGetSchema\"\n          type: array\n      type: object\n    ConsentAcknowledgement:\n      properties:\n        consentId:\n          example: \u003cconsent-artefact-id\u003e\n          type: string\n        status:\n          enum:\n            - OK\n            - UNKNOWN\n          type: string\n      required:\n        - status\n        - consentId\n      type: object\n    ConsentArtefactReference:\n      properties:\n        id:\n          example: \u003cconsent-artefact-id\u003e\n          type: string\n      required:\n        - id\n      type: object\n    ConsentArtefactResponse:\n      properties:\n        consent:\n          properties:\n            consentDetail:\n              properties:\n                careContexts:\n                  items:\n                    properties:\n                      careContextReference:\n                        example: Episode1\n                        type: string\n                      patientReference:\n                        example: hinapatel79@hospital\n                        type: string\n                    required:\n                      - patientReference\n                      - careContextReference\n                    type: object\n                  type: array\n                consentId:\n                  format: uuid\n                  type: string\n                consentManager:\n                  allOf:\n                    - $ref: \"#/components/schemas/OrganizationRepresentation\"\n                    - xml:\n                        name: consentManager\n                  type: object\n                createdAt:\n                  format: date-time\n                  type: string\n                hiTypes:\n                  items:\n                    $ref: \"#/components/schemas/HITypeEnum\"\n                  type: array\n                hip:\n                  allOf:\n                    - $ref: \"#/components/schemas/OrganizationRepresentation\"\n                    - xml:\n                        name: hip\n                  type: object\n                hiu:\n                  allOf:\n                    - $ref: \"#/components/schemas/OrganizationRepresentation\"\n                    - xml:\n                        name: hiu\n                  type: object\n                patient:\n                  $ref: \"#/components/schemas/ConsentManagerPatientID\"\n                permission:\n                  $ref: \"#/components/schemas/Permission\"\n                purpose:\n                  $ref: \"#/components/schemas/UsePurpose\"\n                requester:\n                  $ref: \"#/components/schemas/Requester\"\n                schemaVersion:\n                  format: string\n                  type: string\n              required:\n                - consentId\n                - createdAt\n                - patient\n                - careContexts\n                - purpose\n                - hip\n                - hiu\n                - consentManager\n                - requester\n                - permission\n                - hiTypes\n              type: object\n            signature:\n              example: Signature of CM as defined in W3C standards; Base64 encoded\n              type: string\n            status:\n              $ref: \"#/components/schemas/ConsentStatus\"\n          required:\n            - consentDetail\n            - status\n            - signature\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    ConsentFetchRequest:\n      properties:\n        consentId:\n          type: string\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - consentId\n        - requestId\n        - timestamp\n      type: object\n    ConsentManagerPatientID:\n      properties:\n        id:\n          example: hinapatel@ndhm\n          format: \u003cuser-id\u003e@ndhm\n          type: string\n          xml:\n            attribute: true\n      required:\n        - id\n      type: object\n    ConsentRequest:\n      properties:\n        consent:\n          properties:\n            careContexts:\n              items:\n                $ref: \"#/components/schemas/CareContextDefinition\"\n              type: array\n            hiTypes:\n              items:\n                $ref: \"#/components/schemas/HITypeEnum\"\n              type: array\n            hip:\n              allOf:\n                - $ref: \"#/components/schemas/OrganizationRepresentation\"\n                - xml:\n                    name: hip\n              type: object\n            hiu:\n              allOf:\n                - $ref: \"#/components/schemas/OrganizationRepresentation\"\n                - xml:\n                    name: hiu\n              type: object\n            patient:\n              allOf:\n                - $ref: \"#/components/schemas/ConsentManagerPatientID\"\n                - xml:\n                    name: patient\n              type: object\n            permission:\n              $ref: \"#/components/schemas/Permission\"\n            purpose:\n              $ref: \"#/components/schemas/UsePurpose\"\n            requester:\n              $ref: \"#/components/schemas/Requester\"\n          required:\n            - purpose\n            - patient\n            - hiu\n            - requester\n            - hiTypes\n            - permission\n            - consentNotificationUrl\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request.\n          example: 499a5a4a-7dda-4f20-9b67-e24589627061\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - consent\n      type: object\n    ConsentRequestInitResponse:\n      properties:\n        consentRequest:\n          properties:\n            id:\n              description: id of the consent-request created\n              example: f29f0e59-8388-4698-9fe6-05db67aeac46\n              format: uuid\n              type: string\n          required:\n            - id\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n      xml:\n        name: ConsentRequestInitResponse\n    ConsentRequestStatusRequest:\n      properties:\n        consentRequestId:\n          type: string\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - consentRequestId\n        - requestId\n        - timestamp\n      type: object\n    ConsentStatus:\n      enum:\n        - GRANTED\n        - EXPIRED\n        - DENIED\n        - REQUESTED\n        - REVOKED\n      type: string\n    DataNotification:\n      properties:\n        entries:\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/EntryContent\"\n              - $ref: \"#/components/schemas/EntryLink\"\n          type: array\n        keyMaterial:\n          $ref: \"#/components/schemas/KeyMaterial\"\n        pageCount:\n          description: Total number of pages.\n          type: integer\n        pageNumber:\n          description: Current page number.\n          type: integer\n        transactionId:\n          description: Transaction Id issued when data requested.\n          format: uuid\n          type: string\n      required:\n        - transactionId\n        - entries\n        - keyMaterial\n        - pageNumber\n        - pageCount\n      type: object\n    DateRange:\n      properties:\n        from:\n          format: date-time\n          type: string\n        to:\n          format: date-time\n          type: string\n      required:\n        - from\n        - to\n      type: object\n    EntryContent:\n      properties:\n        careContextReference:\n          description: care context reference number.\n          example: RVH1008\n          type: string\n        checksum:\n          description: Md5 checksum of the content before encryption\n          type: string\n        content:\n          description: Encrypted content\n          example: Encrypted content of data packaged in FHIR bundle\n          type: string\n        media:\n          description: mimetype of the content.\n          enum:\n            - application/fhir+json\n          type: string\n      required:\n        - content\n        - media\n        - checksum\n        - careContextReference\n      type: object\n    EntryLink:\n      properties:\n        careContextReference:\n          description: care context reference number.\n          example: NCC1701\n          type: string\n        checksum:\n          description: Md5 checksum of the content before encryption\n          type: string\n        link:\n          description: Encrypted content\n          example: https://data-from.net/sa2321afaf12e13\n          type: string\n        media:\n          description: mimetype of the content.\n          enum:\n            - application/fhir+json\n          type: string\n      required:\n        - link\n        - media\n        - checksum\n        - careContextReference\n      type: object\n    Error:\n      properties:\n        code:\n          enum:\n            - 1000\n            - 10001\n          type: integer\n        message:\n          type: string\n      required:\n        - code\n        - message\n      type: object\n      xml:\n        name: Error\n    ErrorResponse:\n      properties:\n        error:\n          $ref: \"#/components/schemas/Error\"\n      type: object\n    EventCategoryDetail:\n      properties:\n        careContext:\n          $ref: \"#/components/schemas/CareContextDefinition\"\n        hiTypes:\n          items:\n            $ref: \"#/components/schemas/HITypeEnum\"\n          type: array\n      required:\n        - hiTypes\n        - careContext\n      type: object\n    HIRequest:\n      properties:\n        hiRequest:\n          properties:\n            consent:\n              $ref: \"#/components/schemas/consent\"\n            dataPushUrl:\n              type: string\n            dateRange:\n              $ref: \"#/components/schemas/DateRange\"\n            keyMaterial:\n              $ref: \"#/components/schemas/KeyMaterial\"\n          required:\n            - consent\n            - dataPushUrl\n            - keyMaterial\n            - dateRange\n          type: object\n        requestId:\n          $ref: \"#/components/schemas/UuidSchema\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - hiRequest\n      type: object\n    HITypeEnum:\n      enum:\n        - OPConsultation\n        - Prescription\n        - DischargeSummary\n        - DiagnosticReport\n      type: string\n      xml:\n        name: HIType\n    HIUConsentNotificationEvent:\n      properties:\n        notification:\n          properties:\n            consentArtefacts:\n              description: if the status is GRANTED or REVOKED, then the consentArtefact references (Ids) must be specified.\n              items:\n                $ref: \"#/components/schemas/ConsentArtefactReference\"\n              type: array\n            consentRequestId:\n              example: \u003cconsent-request-id\u003e\n              type: string\n            status:\n              $ref: \"#/components/schemas/ConsentStatus\"\n          required:\n            - status\n            - consentRequestId\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - notification\n      type: object\n    HIUConsentNotificationResponse:\n      properties:\n        acknowledgement:\n          items:\n            $ref: \"#/components/schemas/ConsentAcknowledgement\"\n          type: array\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    HIUConsentRequestStatus:\n      properties:\n        consentRequest:\n          properties:\n            consentArtefacts:\n              items:\n                $ref: \"#/components/schemas/ConsentArtefactReference\"\n              type: array\n            id:\n              example: \u003cconsent-request-id\u003e\n              type: string\n            status:\n              $ref: \"#/components/schemas/ConsentStatus\"\n          required:\n            - id\n            - status\n            - consentArtefacts\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    HIUHealthInformationRequestResponse:\n      properties:\n        error:\n          $ref: \"#/components/schemas/Error\"\n        hiRequest:\n          properties:\n            sessionStatus:\n              enum:\n                - REQUESTED\n                - ACKNOWLEDGED\n              type: string\n            transactionId:\n              $ref: \"#/components/schemas/UuidSchema\"\n          required:\n            - transactionId\n            - sessionStatus\n          type: object\n        requestId:\n          $ref: \"#/components/schemas/UuidSchema\"\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    HIUSubscription:\n      properties:\n        hiu:\n          $ref: \"#/components/schemas/OrganizationRepresentation\"\n        id:\n          example: subscription Id\n          type: string\n        patient:\n          $ref: \"#/components/schemas/ConsentManagerPatientID\"\n        sources:\n          items:\n            $ref: \"#/components/schemas/HIUSubscriptionContext\"\n          type: array\n      required:\n        - id\n        - patient\n        - hiu\n        - sources\n      type: object\n    HIUSubscriptionContext:\n      properties:\n        categories:\n          items:\n            $ref: \"#/components/schemas/SubscriptionCategory\"\n          type: array\n        hip:\n          $ref: \"#/components/schemas/OrganizationRepresentation\"\n        period:\n          $ref: \"#/components/schemas/SubscriptionPeriod\"\n      required:\n        - categories\n        - period\n      type: object\n    HIUSubscriptionEventContent:\n      properties:\n        context:\n          items:\n            $ref: \"#/components/schemas/EventCategoryDetail\"\n          type: array\n        hip:\n          $ref: \"#/components/schemas/OrganizationRepresentation\"\n        patient:\n          $ref: \"#/components/schemas/ConsentManagerPatientID\"\n      required:\n        - patient\n        - hip\n        - context\n      type: object\n    HIUSubscriptionNotification:\n      properties:\n        event:\n          properties:\n            category:\n              $ref: \"#/components/schemas/SubscriptionCategory\"\n            content:\n              $ref: \"#/components/schemas/HIUSubscriptionEventContent\"\n            id:\n              $ref: \"#/components/schemas/UuidSchema\"\n            published:\n              $ref: \"#/components/schemas/TimestampSchema\"\n            subscriptionId:\n              example: subscription Id\n              type: string\n          required:\n            - id\n            - published\n            - subscriptionId\n            - category\n            - content\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - event\n      type: object\n    HIUSubscriptionNotificationAcknowledgment:\n      properties:\n        acknowledgement:\n          properties:\n            eventId:\n              example: subscription event Id\n              type: string\n            status:\n              enum:\n                - OK\n              type: string\n          required:\n            - status\n            - eventId\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    HIUSubscriptionRequestNotificationAcknowledgement:\n      properties:\n        acknowledgement:\n          properties:\n            status:\n              enum:\n                - OK\n              type: string\n            subscriptionRequestId:\n              example: subscription Id\n              type: string\n          required:\n            - status\n            - subscriptionRequestId\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    HIUSubscriptionRequestReceipt:\n      properties:\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        subscriptionRequest:\n          properties:\n            id:\n              description: id of the consent-request created\n              example: f29f0e59-8388-4698-9fe6-05db67aeac46\n              format: uuid\n              type: string\n          required:\n            - id\n          type: object\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n      xml:\n        name: ConsentRequestInitResponse\n    HealthInformationNotification:\n      properties:\n        notification:\n          properties:\n            consentId:\n              $ref: \"#/components/schemas/UuidSchema\"\n            doneAt:\n              format: date-time\n              type: string\n            notifier:\n              properties:\n                id:\n                  example: tmh\n                  type: string\n                type:\n                  enum:\n                    - HIU\n                    - HIP\n                  type: string\n              required:\n                - type\n                - id\n              type: object\n            statusNotification:\n              properties:\n                hipId:\n                  example: max\n                  type: string\n                sessionStatus:\n                  enum:\n                    - TRANSFERRED\n                    - FAILED\n                  type: string\n                statusResponses:\n                  items:\n                    properties:\n                      careContextReference:\n                        type: string\n                      description:\n                        type: string\n                      hiStatus:\n                        enum:\n                          - DELIVERED\n                          - OK\n                          - ERRORED\n                        example: OK\n                        type: string\n                    required:\n                      - careContextReference\n                      - hiStatus\n                    type: object\n                  type: array\n              required:\n                - sessionStatus\n                - hipId\n              type: object\n            transactionId:\n              $ref: \"#/components/schemas/UuidSchema\"\n          required:\n            - consentId\n            - transactionId\n            - doneAt\n            - notifier\n            - statusNotification\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request.\n          example: 499a5a4a-7dda-4f20-9b67-e24589627061\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - notification\n      type: object\n    HeartbeatResponse:\n      properties:\n        error:\n          $ref: \"#/components/schemas/Error\"\n        status:\n          enum:\n            - UP\n            - DOWN\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - timestamp\n        - status\n      type: object\n      xml:\n        name: HeartbeatResponse\n    Identifier:\n      properties:\n        type:\n          $ref: \"#/components/schemas/IdentifierType\"\n        value:\n          example: \"+919800083232\"\n          type: string\n      type: object\n      xml:\n        name: Identifier\n    IdentifierType:\n      enum:\n        - MOBILE\n        - MR\n        - NDHM_HEALTH_NUMBER\n        - HEALTH_ID\n      type: string\n    KeyMaterial:\n      properties:\n        cryptoAlg:\n          example: ECDH\n          format: string\n          type: string\n        curve:\n          example: Curve25519\n          format: string\n          type: string\n        dhPublicKey:\n          $ref: \"#/components/schemas/keyObject\"\n        nonce:\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n          format: 32 byte string\n          type: string\n      required:\n        - cryptoAlg\n        - curve\n        - dhPublicKey\n        - nonce\n      type: object\n    OpenIdConfiguration:\n      properties:\n        jwks_uri:\n          example: https://ncg-gateway/certs\n          format: uri\n          type: string\n      type: object\n    OrganizationRepresentation:\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n      required:\n        - id\n      type: object\n      xml:\n        name: OrganizationResponse\n    PatientAddress:\n      properties:\n        district:\n          type: string\n        line:\n          type: string\n        pincode:\n          type: string\n        state:\n          type: string\n      type: object\n    PatientAuthConfirmRequest:\n      properties:\n        credential:\n          description: note, demographic details are only required for demographic auth at this point.\n          properties:\n            authCode:\n              type: string\n            demographic:\n              $ref: \"#/components/schemas/PatientDemographic\"\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n        transactionId:\n          type: string\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - credential\n      type: object\n    PatientAuthConfirmResponse:\n      properties:\n        auth:\n          description: |\n            depending on the purpose of auth, as specified in /auth/init, the response may include the following \n              1. LINK - only returns **accessToken**\n              2. KYC - only returns **patient**\n              3. KYC_AND_LINK - returns both **accessToken** and **patient**\n          properties:\n            accessToken:\n              description: access token for initialization of subsequent action.\n              type: string\n            patient:\n              $ref: \"#/components/schemas/PatientDemographicResponse\"\n            validity:\n              $ref: \"#/components/schemas/AccessTokenValidity\"\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    PatientAuthInitRequest:\n      properties:\n        query:\n          properties:\n            authMode:\n              $ref: \"#/components/schemas/AuthenticationMode\"\n            id:\n              description: id  of the patient understood by the CM\n              example: hinapatel@ndhm\n              type: string\n            purpose:\n              $ref: \"#/components/schemas/PatientAuthPurpose\"\n            requester:\n              description: identification of requester\n              properties:\n                id:\n                  example: 100005\n                  type: string\n                type:\n                  enum:\n                    - HIP\n                    - HIU\n                  type: string\n              required:\n                - type\n                - id\n              type: object\n          required:\n            - id\n            - requester\n            - purpose\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - query\n      type: object\n    PatientAuthInitResponse:\n      properties:\n        auth:\n          properties:\n            meta:\n              $ref: \"#/components/schemas/AuthMeta\"\n            mode:\n              $ref: \"#/components/schemas/AuthenticationMode\"\n            transactionId:\n              type: string\n          required:\n            - transactionId\n            - mode\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    PatientAuthModeQueryRequest:\n      properties:\n        query:\n          properties:\n            id:\n              example: hinapatel79@ndhm\n              type: string\n            purpose:\n              $ref: \"#/components/schemas/PatientAuthPurpose\"\n            requester:\n              properties:\n                id:\n                  example: \"100005\"\n                  type: string\n                type:\n                  enum:\n                    - HIP\n                    - HIU\n                  type: string\n              required:\n                - id\n                - type\n              type: object\n          required:\n            - id\n            - purpose\n            - requester\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - query\n      type: object\n    PatientAuthModeQueryResponse:\n      properties:\n        auth:\n          properties:\n            modes:\n              items:\n                $ref: \"#/components/schemas/AuthenticationMode\"\n              type: array\n            purpose:\n              $ref: \"#/components/schemas/PatientAuthPurpose\"\n          required:\n            - purpose\n            - modes\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    PatientAuthNotification:\n      properties:\n        auth:\n          description: |\n            depending on the purpose of auth, as specified in /auth/init, the response may include the following \n              1. LINK - only returns **accessToken**\n              2. KYC - only returns **patient**\n              3. KYC_AND_LINK - returns both **accessToken** and **patient**\n          properties:\n            accessToken:\n              description: access token for initialization of subsequent action.\n              type: string\n            patient:\n              $ref: \"#/components/schemas/PatientDemographicResponse\"\n            status:\n              enum:\n                - GRANTED\n                - DENIED\n              type: string\n            transactionId:\n              description: transaction id for auth session\n              type: string\n            validity:\n              $ref: \"#/components/schemas/AccessTokenValidity\"\n          required:\n            - transactionId\n            - status\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n      type: object\n    PatientAuthNotificationAcknowledgement:\n      properties:\n        acknowledgement:\n          properties:\n            status:\n              enum:\n                - OK\n              type: string\n          required:\n            - status\n          type: object\n        error:\n          $ref: \"#/components/schemas/Error\"\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n    PatientAuthPurpose:\n      description: what is the purpose of user auth\n      enum:\n        - LINK\n        - KYC\n        - KYC_AND_LINK\n      type: string\n    PatientAuthRequester:\n      description: identification of requester\n      properties:\n        id:\n          example: 100005\n          type: string\n        type:\n          enum:\n            - HIP\n            - HIU\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    PatientDemographic:\n      description: Demographic details are only required for demographic auth at this point. Demographic details must be same as registered\n      properties:\n        dateOfBirth:\n          description: date of birth in YYYY-MM-DD format.\n          example: 1972-02-29\n          type: string\n        gender:\n          $ref: \"#/components/schemas/PatientGender\"\n        identifier:\n          $ref: \"#/components/schemas/AuthConfirmIdentifier\"\n        name:\n          example: janki das\n          type: string\n      required:\n        - name\n        - gender\n        - dateOfBirth\n      type: object\n    PatientDemographicResponse:\n      properties:\n        address:\n          $ref: \"#/components/schemas/PatientAddress\"\n        gender:\n          $ref: \"#/components/schemas/PatientGender\"\n        id:\n          description: PHR Identifier of patient at consent manager\n          example: \u003cpatient-id\u003e@\u003cconsent-manager-id\u003e\n          type: string\n        identifiers:\n          items:\n            $ref: \"#/components/schemas/Identifier\"\n          type: array\n          xml:\n            name: identifiers\n            wrapped: true\n        name:\n          example: Hina Patel\n          type: string\n        yearOfBirth:\n          example: 2000\n          type: integer\n      required:\n        - id\n        - name\n        - gender\n        - yearOfBirth\n      type: object\n    PatientGender:\n      enum:\n        - M\n        - F\n        - O\n        - U\n      type: string\n    PatientIdentificationRequest:\n      properties:\n        query:\n          properties:\n            patient:\n              properties:\n                id:\n                  example: hinapatel79@ndhm\n                  type: string\n              required:\n                - id\n              type: object\n            requester:\n              properties:\n                id:\n                  example: 100005\n                  type: string\n                type:\n                  enum:\n                    - HIU\n                    - HIP\n                  type: string\n              required:\n                - type\n                - id\n              type: object\n          required:\n            - patient\n            - requester\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - query\n      type: object\n    PatientIdentificationResponse:\n      properties:\n        error:\n          $ref: \"#/components/schemas/Error\"\n        patient:\n          properties:\n            id:\n              example: hinapatel79@ndhm\n              type: string\n            name:\n              example: Hina Patel\n              type: string\n          required:\n            - id\n            - name\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        resp:\n          $ref: \"#/components/schemas/RequestReference\"\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - resp\n      type: object\n      xml:\n        name: PatientIdentificationResponse\n    Permission:\n      properties:\n        accessMode:\n          enum:\n            - VIEW\n            - STORE\n            - QUERY\n            - STREAM\n          type: string\n        dataEraseAt:\n          format: date-time\n          type: string\n        dateRange:\n          properties:\n            from:\n              format: date-time\n              type: string\n            to:\n              format: date-time\n              type: string\n          required:\n            - from\n            - to\n          type: object\n        frequency:\n          properties:\n            repeats:\n              type: integer\n            unit:\n              enum:\n                - HOUR\n                - WEEK\n                - DAY\n                - MONTH\n                - YEAR\n              type: string\n            value:\n              type: integer\n          required:\n            - unit\n            - value\n            - repeats\n          type: object\n      required:\n        - accessMode\n        - dateRange\n        - dataEraseAt\n        - frequency\n      type: object\n      xml:\n        name: Permission\n    RequestReference:\n      properties:\n        requestId:\n          description: the requestId that was passed\n          format: uuid\n          type: string\n      required:\n        - requestId\n      type: object\n    Requester:\n      properties:\n        identifier:\n          properties:\n            system:\n              example: https://www.mciindia.org\n              type: string\n            type:\n              example: REGNO\n              type: string\n            value:\n              example: MH1001\n              type: string\n          required:\n            - type\n            - value\n          type: object\n        name:\n          example: Dr. Manju\n          type: string\n      required:\n        - name\n      type: object\n    SessionRequest:\n      properties:\n        clientId:\n          type: string\n        clientSecret:\n          type: string\n      required:\n        - clientId\n        - clientSecret\n      type: object\n    SessionResponse:\n      properties:\n        accessToken:\n          example: eyJhbGciOiJSUzI1Ni.IsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrVVp.2MXJQMjRyYXN1UW9wU2lWbkdZQUZIVFowYVZGVWpYNXFLMnNibTk0In0\n          type: string\n        expiresIn:\n          description: In Minutes\n          example: 1800\n          type: integer\n        refreshExpiresIn:\n          description: In Minutes\n          example: 1800\n          type: integer\n        refreshToken:\n          example: eyJhbGciOiJSUzI1Ni.IsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrVVp.2MXJQMjRyYXN1UW9wU2lWbkdZQUZIVFowYVZGVWpYNXFLMnNibTk0In0\n          type: string\n        tokenType:\n          example: bearer\n          type: string\n      type: object\n    SubscriptionApprovalNotification:\n      properties:\n        notification:\n          properties:\n            status:\n              $ref: \"#/components/schemas/SubscriptionStatus\"\n            subscription:\n              $ref: \"#/components/schemas/HIUSubscription\"\n            subscriptionRequestId:\n              example: request id of the subscription\n              type: string\n          required:\n            - status\n          type: object\n        requestId:\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n          format: uuid\n          type: string\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - notification\n      type: object\n    SubscriptionCategory:\n      enum:\n        - LINK\n      type: string\n    SubscriptionPeriod:\n      properties:\n        from:\n          format: date-time\n          type: string\n        to:\n          format: date-time\n          type: string\n      required:\n        - from\n        - to\n      type: object\n    SubscriptionRequest:\n      properties:\n        requestId:\n          description: a nonce, unique for each HTTP request.\n          example: 499a5a4a-7dda-4f20-9b67-e24589627061\n          format: uuid\n          type: string\n        subscription:\n          properties:\n            categories:\n              items:\n                $ref: \"#/components/schemas/SubscriptionCategory\"\n              type: array\n            hips:\n              items:\n                $ref: \"#/components/schemas/OrganizationRepresentation\"\n              type: array\n            hiu:\n              $ref: \"#/components/schemas/OrganizationRepresentation\"\n            patient:\n              $ref: \"#/components/schemas/ConsentManagerPatientID\"\n            period:\n              $ref: \"#/components/schemas/SubscriptionPeriod\"\n            purpose:\n              $ref: \"#/components/schemas/UsePurpose\"\n          required:\n            - purpose\n            - patient\n            - hiu\n            - categories\n            - period\n          type: object\n        timestamp:\n          $ref: \"#/components/schemas/TimestampSchema\"\n      required:\n        - requestId\n        - timestamp\n        - subscription\n      type: object\n    SubscriptionStatus:\n      enum:\n        - GRANTED\n        - DENIED\n      type: string\n    TimestampSchema:\n      description: Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ\n      format: date-time\n      type: string\n    UsePurpose:\n      properties:\n        code:\n          description: From the fixed set, documented at refUri\n          type: string\n        refUri:\n          format: uri\n          type: string\n        text:\n          type: string\n      required:\n        - text\n        - code\n      type: object\n    UuidSchema:\n      example: a1s2c932-2f70-3ds3-a3b5-2sfd46b12a18d\n      format: uuid\n      type: string\n    consent:\n      properties:\n        id:\n          type: string\n      required:\n        - id\n      type: object\n    keyObject:\n      properties:\n        expiry:\n          format: date-time\n          type: string\n        keyValue:\n          format: string\n          type: string\n        parameters:\n          example: Curve25519/32byte random key\n          format: string\n          type: string\n      required:\n        - expiry\n        - parameters\n        - keyValue\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/ndhm.gov.in/ndhm-hiu/0.5/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/ndhm.gov.in/ndhm-hiu/0.5/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v0.5/consent-requests/init\": post: requestBody: contents: application/json: generate schema: field consent: field hip: allOf: schema type mismatch: object and "
}