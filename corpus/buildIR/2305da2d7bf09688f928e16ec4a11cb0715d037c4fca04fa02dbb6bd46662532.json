{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/International-Data-Spaces-Association/DataspaceConnector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 194427,
			"content": "#\n# Copyright 2020-2022 Fraunhofer Institute for Software and Systems Engineering\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nopenapi: 3.0.1\ninfo:\n  title: Dataspace Connector\n  description: IDS Connector originally developed by the Fraunhofer ISST\n  contact:\n    name: Dataspace Connector\n    url: https://www.dataspace-connector.io/\n    email: info@dataspace-connector.de\n  license:\n    name: \"Apache License, Version 2.0\"\n    url: https://www.apache.org/licenses/LICENSE-2.0.txt\n  version: 7.0.3\nservers:\n  - url: https://localhost:8080\n    description: Generated server url\nsecurity:\n  - basicAuth: []\ntags:\n  - name: Catalogs\n    description: Endpoints for operations on catalogs.\n  - name: Subscriptions\n    description: Endpoints for operations on subscriptions.\n  - name: Representations\n    description: Endpoints for operations on representations.\n  - name: Apps\n    description: Endpoints for app handling.\n  - name: Artifacts\n    description: Endpoints for operations on artifacts.\n  - name: _Messaging\n    description: Endpoints for invoke sending messages.\n  - name: Endpoints\n    description: Endpoints for operations on endpoints.\n  - name: _Connector\n    description: Endpoints for general information.\n  - name: Rules\n    description: Endpoints for operations on rules.\n  - name: Offered Resources\n    description: Endpoints for operations on offered resources.\n  - name: Brokers\n    description: Endpoints for operations on brokers.\n  - name: Contracts\n    description: Endpoints for operations on contracts (+ agreements).\n  - name: _Utils\n  - name: App Stores\n    description: Endpoints for app store handling.\n  - name: _Configurations\n    description: Endpoints for operations on configurations.\n  - name: Requested Resources\n    description: Endpoints for operations on requested resources.\n  - name: Data Sources\n    description: Endpoints for operations on data sources/sinks.\n  - name: Routes\n    description: Endpoints for operations on routes.\n  - name: Routes (Apache Camel)\n    description: Endpoints for dynamically managing Camel routes.\n  - name: Contracts\n    description: Endpoints for contract agreement handling.\npaths:\n  /api/subscriptions/{id}:\n    get:\n      tags:\n        - Subscriptions\n      summary: Get a base resource by id.\n      operationId: get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SubscriptionView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SubscriptionView'\n    put:\n      tags:\n        - Subscriptions\n      summary: Update a base resource by id.\n      operationId: update\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SubscriptionView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SubscriptionView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SubscriptionView'\n    delete:\n      tags:\n        - Subscriptions\n      summary: Delete a base resource by id.\n      operationId: delete\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/rules/{id}:\n    get:\n      tags:\n        - Rules\n      summary: Get a base resource by id.\n      operationId: get_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractRuleView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractRuleView'\n    put:\n      tags:\n        - Rules\n      summary: Update a base resource by id.\n      operationId: update_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractRuleDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractRuleView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractRuleView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractRuleView'\n    delete:\n      tags:\n        - Rules\n      summary: Delete a base resource by id.\n      operationId: delete_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/rules/{id}/contracts:\n    get:\n      tags:\n        - Rules\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n    put:\n      tags:\n        - Rules\n      summary: Replace the children of a base resource.\n      operationId: replaceResources\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Rules\n      summary: Add a list of children to a base resource.\n      operationId: addResources\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n    delete:\n      tags:\n        - Rules\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/routes/{id}:\n    get:\n      tags:\n        - Routes\n      summary: Get a base resource by id.\n      operationId: get_2\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n    put:\n      tags:\n        - Routes\n      summary: Update a base resource by id.\n      operationId: update_2\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RouteDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n    delete:\n      tags:\n        - Routes\n      summary: Delete a base resource by id.\n      operationId: delete_2\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/routes/{id}/steps:\n    get:\n      tags:\n        - Routes\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRouteView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRouteView'\n    put:\n      tags:\n        - Routes\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Routes\n      summary: Add a list of children to a base resource.\n      operationId: addResources_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRouteView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRouteView'\n    delete:\n      tags:\n        - Routes\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/routes/{id}/endpoint/start:\n    put:\n      tags:\n        - Routes\n      summary: Creates the start endpoint for a route.\n      operationId: createStartEndpoint\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                type: object\n    delete:\n      tags:\n        - Routes\n      summary: Deletes the start endpoint of a route.\n      operationId: deleteStartEndpoint\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/routes/{id}/endpoint/end:\n    put:\n      tags:\n        - Routes\n      summary: Creates the last endpoint for the route.\n      operationId: createLastEndpoint\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                type: object\n    delete:\n      tags:\n        - Routes\n      summary: Deletes the start endpoint of the route.\n      operationId: deleteLastEndpoint\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/requests/{id}:\n    get:\n      tags:\n        - Requested Resources\n      summary: Get a base resource by id.\n      operationId: get_3\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RequestedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RequestedResourceView'\n    put:\n      tags:\n        - Requested Resources\n      summary: Update a base resource by id.\n      operationId: update_3\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RequestedResourceDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RequestedResourceView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RequestedResourceView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RequestedResourceView'\n    delete:\n      tags:\n        - Requested Resources\n      summary: Delete a base resource by id.\n      operationId: delete_3\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/requests/{id}/representations:\n    get:\n      tags:\n        - Requested Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_3\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n    put:\n      tags:\n        - Requested Resources\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_2\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Requested Resources\n      summary: Add a list of children to a base resource.\n      operationId: addResources_2\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n    delete:\n      tags:\n        - Requested Resources\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_2\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/requests/{id}/catalogs:\n    get:\n      tags:\n        - Requested Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_5\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n    put:\n      tags:\n        - Requested Resources\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_3\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Requested Resources\n      summary: Add a list of children to a base resource.\n      operationId: addResources_3\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n    delete:\n      tags:\n        - Requested Resources\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_3\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/representations/{id}:\n    get:\n      tags:\n        - Representations\n      summary: Get a base resource by id.\n      operationId: get_4\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepresentationView'\n    put:\n      tags:\n        - Representations\n      summary: Update a base resource by id.\n      operationId: update_4\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RepresentationDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepresentationView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepresentationView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepresentationView'\n    delete:\n      tags:\n        - Representations\n      summary: Delete a base resource by id.\n      operationId: delete_4\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/representations/{id}/requests:\n    get:\n      tags:\n        - Representations\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_7\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n    put:\n      tags:\n        - Representations\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_4\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Representations\n      summary: Add a list of children to a base resource.\n      operationId: addResources_4\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n    delete:\n      tags:\n        - Representations\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_4\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/representations/{id}/offers:\n    get:\n      tags:\n        - Representations\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_8\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n    put:\n      tags:\n        - Representations\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_5\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Representations\n      summary: Add a list of children to a base resource.\n      operationId: addResources_5\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n    delete:\n      tags:\n        - Representations\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_5\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/representations/{id}/artifacts:\n    get:\n      tags:\n        - Representations\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_9\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n    put:\n      tags:\n        - Representations\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_6\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Representations\n      summary: Add a list of children to a base resource.\n      operationId: addResources_6\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n    delete:\n      tags:\n        - Representations\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_6\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/offers/{id}:\n    get:\n      tags:\n        - Offered Resources\n      summary: Get a base resource by id.\n      operationId: get_5\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OfferedResourceView'\n    put:\n      tags:\n        - Offered Resources\n      summary: Update a base resource by id.\n      operationId: update_5\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OfferedResourceDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OfferedResourceView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OfferedResourceView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OfferedResourceView'\n    delete:\n      tags:\n        - Offered Resources\n      summary: Delete a base resource by id.\n      operationId: delete_5\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/offers/{id}/representations:\n    get:\n      tags:\n        - Offered Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_11\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n    put:\n      tags:\n        - Offered Resources\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_7\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Offered Resources\n      summary: Add a list of children to a base resource.\n      operationId: addResources_7\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n    delete:\n      tags:\n        - Offered Resources\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_7\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/offers/{id}/contracts:\n    get:\n      tags:\n        - Offered Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_12\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n    put:\n      tags:\n        - Offered Resources\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_8\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Offered Resources\n      summary: Add a list of children to a base resource.\n      operationId: addResources_8\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n    delete:\n      tags:\n        - Offered Resources\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_8\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/offers/{id}/catalogs:\n    get:\n      tags:\n        - Offered Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_13\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n    put:\n      tags:\n        - Offered Resources\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_9\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Offered Resources\n      summary: Add a list of children to a base resource.\n      operationId: addResources_9\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n    delete:\n      tags:\n        - Offered Resources\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_9\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/notify:\n    put:\n      tags:\n        - _Messaging\n      summary: Notify all subscribers.\n      description: \"Can be used to manually notify all subscribers about a resource\\\n        \\ offer, representation, or artifact update.\"\n      operationId: sendMessage\n      parameters:\n        - name: elementId\n          in: query\n          description: The element id.\n          required: true\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                type: object\n        \"204\":\n          description: No Content\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/endpoints/{id}:\n    get:\n      tags:\n        - Endpoints\n      summary: Get a base resource by id.\n      operationId: get_6\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n    put:\n      tags:\n        - Endpoints\n      summary: Update a base resource by id.\n      operationId: update_6\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/EndpointDesc'\n                - $ref: '#/components/schemas/AppEndpointDesc'\n                - $ref: '#/components/schemas/GenericEndpointDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                type: object\n    delete:\n      tags:\n        - Endpoints\n      summary: Delete a base resource by id.\n      operationId: delete_6\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/endpoints/{id}/datasource/{dataSourceId}:\n    put:\n      tags:\n        - Endpoints\n      summary: Creates start endpoint for a route.\n      operationId: linkDataSource\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: dataSourceId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/datasources/{id}:\n    get:\n      tags:\n        - Data Sources\n      summary: Get a base resource by id.\n      operationId: get_7\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataSourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataSourceView'\n    put:\n      tags:\n        - Data Sources\n      summary: Update a base resource by id.\n      operationId: update_7\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/DatabaseDataSourceDesc'\n                - $ref: '#/components/schemas/RestDataSourceDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataSourceView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataSourceView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataSourceView'\n    delete:\n      tags:\n        - Data Sources\n      summary: Delete a base resource by id.\n      operationId: delete_7\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/contracts/{id}:\n    get:\n      tags:\n        - Contracts\n      summary: Get a base resource by id.\n      operationId: get_8\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractView'\n    put:\n      tags:\n        - Contracts\n      summary: Update a base resource by id.\n      operationId: update_8\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractView'\n    delete:\n      tags:\n        - Contracts\n      summary: Delete a base resource by id.\n      operationId: delete_8\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/contracts/{id}/rules:\n    get:\n      tags:\n        - Contracts\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_15\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractRuleView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractRuleView'\n    put:\n      tags:\n        - Contracts\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_10\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Contracts\n      summary: Add a list of children to a base resource.\n      operationId: addResources_10\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractRuleView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractRuleView'\n    delete:\n      tags:\n        - Contracts\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_10\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/contracts/{id}/offers:\n    get:\n      tags:\n        - Contracts\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_17\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n    put:\n      tags:\n        - Contracts\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_11\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Contracts\n      summary: Add a list of children to a base resource.\n      operationId: addResources_11\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n    delete:\n      tags:\n        - Contracts\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_11\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/configurations/{id}:\n    get:\n      tags:\n        - _Configurations\n      summary: Get a base resource by id.\n      operationId: get_9\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n    put:\n      tags:\n        - _Configurations\n      summary: Update a base resource by id.\n      operationId: update_9\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigurationDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n    delete:\n      tags:\n        - _Configurations\n      summary: Delete a base resource by id.\n      operationId: delete_9\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/configurations/{id}/active:\n    put:\n      tags:\n        - _Configurations\n      summary: Update current configuration.\n      operationId: setConfiguration\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        \"415\":\n          description: Unsupported media type\n          content:\n            application/json:\n              schema:\n                type: object\n        \"204\":\n          description: No content\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/configuration/pattern:\n    get:\n      tags:\n        - _Configurations\n      summary: Get pattern validation status.\n      description: Return whether unsupported patterns are ignored when requesting\n        data.\n      operationId: getPatternStatus\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n    put:\n      tags:\n        - _Configurations\n      summary: Allow unsupported patterns.\n      description: Allow requesting data without policy enforcement if an unsupported\n        pattern is recognized.\n      operationId: setPatternStatus\n      parameters:\n        - name: status\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n  /api/configuration/negotiation:\n    get:\n      tags:\n        - _Configurations\n      summary: Get contract negotiation status.\n      operationId: getNegotiationStatus\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n    put:\n      tags:\n        - _Configurations\n      summary: Set contract negotiation status.\n      operationId: setNegotiationStatus\n      parameters:\n        - name: status\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n  /api/catalogs/{id}:\n    get:\n      tags:\n        - Catalogs\n      summary: Get a base resource by id.\n      operationId: get_10\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CatalogView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CatalogView'\n    put:\n      tags:\n        - Catalogs\n      summary: Update a base resource by id.\n      operationId: update_10\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CatalogView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CatalogView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CatalogView'\n    delete:\n      tags:\n        - Catalogs\n      summary: Delete a base resource by id.\n      operationId: delete_10\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/catalogs/{id}/offers:\n    get:\n      tags:\n        - Catalogs\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_18\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n    put:\n      tags:\n        - Catalogs\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_12\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Catalogs\n      summary: Add a list of children to a base resource.\n      operationId: addResources_12\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n    delete:\n      tags:\n        - Catalogs\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_12\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/brokers/{id}:\n    get:\n      tags:\n        - Brokers\n      summary: Get a base resource by id.\n      operationId: get_11\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BrokerView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BrokerView'\n    put:\n      tags:\n        - Brokers\n      summary: Update a base resource by id.\n      operationId: update_11\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BrokerDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BrokerView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BrokerView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BrokerView'\n    delete:\n      tags:\n        - Brokers\n      summary: Delete a base resource by id.\n      operationId: delete_11\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/artifacts/{id}:\n    get:\n      tags:\n        - Artifacts\n      summary: Get a base resource by id.\n      operationId: get_12\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n    put:\n      tags:\n        - Artifacts\n      summary: Update a base resource by id.\n      operationId: update_12\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArtifactDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n    delete:\n      tags:\n        - Artifacts\n      summary: Delete a base resource by id.\n      operationId: delete_12\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/artifacts/{id}/representations:\n    get:\n      tags:\n        - Artifacts\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_21\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n    put:\n      tags:\n        - Artifacts\n      summary: Replace the children of a base resource.\n      operationId: replaceResources_13\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n    post:\n      tags:\n        - Artifacts\n      summary: Add a list of children to a base resource.\n      operationId: addResources_13\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n    delete:\n      tags:\n        - Artifacts\n      summary: Remove a list of children from a base resource.\n      operationId: removeResources_13\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/artifacts/{id}/data:\n    put:\n      tags:\n        - Artifacts\n      operationId: putData\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: array\n              items:\n                type: string\n                format: byte\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"200\":\n          description: Ok\n    post:\n      tags:\n        - Artifacts\n      summary: Get data by artifact id with query input.\n      operationId: getData\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: routeIds\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uri\n      requestBody:\n        content:\n          application/json: {}\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StreamingResponseBody'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StreamingResponseBody'\n  /api/appstores/{id}:\n    get:\n      tags:\n        - App Stores\n      summary: Get a base resource by id.\n      operationId: get_13\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppStoreView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppStoreView'\n    put:\n      tags:\n        - App Stores\n      summary: Update a base resource by id.\n      operationId: update_13\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppStoreView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppStoreView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppStoreView'\n    delete:\n      tags:\n        - App Stores\n      summary: Delete a base resource by id.\n      operationId: delete_13\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/apps/{id}/actions:\n    put:\n      tags:\n        - Apps\n      summary: Actions on apps\n      description: Can be used for managing apps.\n      operationId: containerManagement\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: type\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - START\n              - STOP\n              - DELETE\n              - DESCRIBE\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                type: object\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/subscriptions:\n    get:\n      tags:\n        - Subscriptions\n      summary: Get a list of base resources with pagination.\n      operationId: getAll\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n    post:\n      tags:\n        - Subscriptions\n      summary: Create a base resource.\n      operationId: create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SubscriptionView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SubscriptionView'\n  /api/rules:\n    get:\n      tags:\n        - Rules\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_1\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractRuleView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractRuleView'\n    post:\n      tags:\n        - Rules\n      summary: Create a base resource.\n      operationId: create_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractRuleDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractRuleView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractRuleView'\n  /api/routes:\n    get:\n      tags:\n        - Routes\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_2\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRouteView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRouteView'\n    post:\n      tags:\n        - Routes\n      summary: Create a base resource.\n      operationId: create_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RouteDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n  /api/representations:\n    get:\n      tags:\n        - Representations\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_4\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRepresentationView'\n    post:\n      tags:\n        - Representations\n      summary: Create a base resource.\n      operationId: create_3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RepresentationDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepresentationView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RepresentationView'\n  /api/offers:\n    get:\n      tags:\n        - Offered Resources\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_5\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n    post:\n      tags:\n        - Offered Resources\n      summary: Create a base resource.\n      operationId: create_4\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OfferedResourceDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OfferedResourceView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OfferedResourceView'\n  /api/ids/unsubscribe:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS request message for unsubscribe from an element.\n      operationId: unsubscribe\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n        - name: elementId\n          in: query\n          description: The subscription object.\n          required: true\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/subscribe:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS request message for subscribing to (meta)data updates.\n      operationId: subscribe\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/search:\n    post:\n      tags:\n        - _Messaging\n      summary: Perform full-text search.\n      description: Can be used for full text search at an IDS component (e.g. the\n        Broker).\n      operationId: sendSearchMessage\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n        - name: limit\n          in: query\n          description: The limit value.\n          required: true\n          schema:\n            type: integer\n            format: int32\n            default: 50\n        - name: offset\n          in: query\n          description: The offset value.\n          required: true\n          schema:\n            type: integer\n            format: int32\n            default: 0\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: The search term.\n        required: true\n      responses:\n        \"504\":\n          description: Gateway timeout\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/resource/update:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS ResourceUpdateMessage.\n      description: Can be used to register or update an IDS resource at an IDS Broker\n        or consumer connector.\n      operationId: sendMessage_1\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n        - name: resourceId\n          in: query\n          description: The resource id.\n          required: true\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"504\":\n          description: Gateway timeout\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/resource/unavailable:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS ResourceUnavailableMessage.\n      description: Can be used for e.g. unregistering an IDS resource at an IDS Broker.\n      operationId: sendMessage_2\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n        - name: resourceId\n          in: query\n          description: The resource id.\n          required: true\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"504\":\n          description: Gateway timeout\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/query:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS QueryMessage.\n      description: Can be used for querying an IDS component (e.g. the IDS Broker).\n      operationId: sendQueryMessage\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: Database query (SparQL)\n              example: |-\n                SELECT ?subject ?predicate ?object\n                FROM \u003curn:x-arq:UnionGraph\u003e\n                WHERE {\n                  ?subject ?predicate ?object\n                };\n        required: true\n      responses:\n        \"504\":\n          description: Gateway timeout\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/description:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS DescriptionRequestMessage to query metadata.\n      operationId: sendMessage_3\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n        - name: elementId\n          in: query\n          description: The id of the requested resource.\n          required: false\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/contract:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS ContractRequestMessage to start the contract negotiation.\n      operationId: sendMessage_4\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n        - name: resourceIds\n          in: query\n          description: List of ids resource that should be requested.\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n              format: uri\n        - name: artifactIds\n          in: query\n          description: List of ids artifacts that should be requested.\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n              format: uri\n        - name: download\n          in: query\n          description: Indicates whether the connector should automatically download\n            data of an artifact.\n          required: true\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              description: List of ids rules with an artifact id as target.\n              items:\n                oneOf:\n                  - $ref: '#/components/schemas/Duty'\n                  - $ref: '#/components/schemas/Permission'\n                  - $ref: '#/components/schemas/Prohibition'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/connector/update:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS ConnectorUpdateMessage.\n      description: Can be used for registering or updating the connector at an IDS\n        Broker.\n      operationId: sendMessage_5\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"504\":\n          description: Gateway timeout\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/connector/unavailable:\n    post:\n      tags:\n        - _Messaging\n      summary: Send an IDS ConnectorUnavailableMessage.\n      description: Can be used for unregistering the connector at an IDS Broker.\n      operationId: sendMessage_6\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"504\":\n          description: Gateway timeout\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/ids/app:\n    post:\n      tags:\n        - _Messaging\n      summary: Download an IDS app from an IDS AppStore.\n      operationId: sendMessage_7\n      parameters:\n        - name: recipient\n          in: query\n          description: The recipient url.\n          required: true\n          schema:\n            type: string\n            format: uri\n        - name: appId\n          in: query\n          description: The app id.\n          required: true\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                type: object\n        \"502\":\n          description: Bad gateway\n          content:\n            application/json:\n              schema:\n                type: object\n        \"417\":\n          description: Expectation failed\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/examples/validation:\n    post:\n      tags:\n        - _Utils\n      summary: Get the policy pattern represented by a given JSON string.\n      operationId: getPolicyPattern\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: The JSON string representing a policy.\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/examples/policy:\n    post:\n      tags:\n        - _Utils\n      summary: Get an example policy for a given policy pattern.\n      operationId: getExampleUsagePolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/PatternDesc'\n                - $ref: '#/components/schemas/ConnectorRestrictionDesc'\n                - $ref: '#/components/schemas/DeletionDesc'\n                - $ref: '#/components/schemas/DurationDesc'\n                - $ref: '#/components/schemas/IntervalDesc'\n                - $ref: '#/components/schemas/LoggingDesc'\n                - $ref: '#/components/schemas/NotificationDesc'\n                - $ref: '#/components/schemas/PermissionDesc'\n                - $ref: '#/components/schemas/ProhibitionDesc'\n                - $ref: '#/components/schemas/SecurityRestrictionDesc'\n                - $ref: '#/components/schemas/UsageNumberDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/ld+json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/ld+json:\n              schema:\n                type: object\n  /api/endpoints:\n    get:\n      tags:\n        - Endpoints\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_6\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelObject'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelObject'\n    post:\n      tags:\n        - Endpoints\n      summary: Create a base resource.\n      operationId: create_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/EndpointDesc'\n                - $ref: '#/components/schemas/AppEndpointDesc'\n                - $ref: '#/components/schemas/GenericEndpointDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                type: object\n  /api/datasources:\n    get:\n      tags:\n        - Data Sources\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_7\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelDataSourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelDataSourceView'\n    post:\n      tags:\n        - Data Sources\n      summary: Create a base resource.\n      operationId: create_6\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/DatabaseDataSourceDesc'\n                - $ref: '#/components/schemas/RestDataSourceDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataSourceView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DataSourceView'\n  /api/contracts:\n    get:\n      tags:\n        - Contracts\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_8\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n    post:\n      tags:\n        - Contracts\n      summary: Create a base resource.\n      operationId: create_7\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContractView'\n  /api/configurations:\n    get:\n      tags:\n        - _Configurations\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_9\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelConfigurationView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelConfigurationView'\n    post:\n      tags:\n        - _Configurations\n      summary: Create a base resource.\n      operationId: create_8\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigurationDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n  /api/catalogs:\n    get:\n      tags:\n        - Catalogs\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_10\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelCatalogView'\n    post:\n      tags:\n        - Catalogs\n      summary: Create a base resource.\n      operationId: create_9\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CatalogView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CatalogView'\n  /api/camel/routes:\n    post:\n      tags:\n        - Routes (Apache Camel)\n      summary: Add a route to the Camel context.\n      operationId: addRoutes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - file\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/brokers:\n    get:\n      tags:\n        - Brokers\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_11\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelBrokerView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelBrokerView'\n    post:\n      tags:\n        - Brokers\n      summary: Create a base resource.\n      operationId: create_10\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BrokerDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BrokerView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BrokerView'\n  /api/beans:\n    post:\n      tags:\n        - Routes (Apache Camel)\n      summary: Add a bean to the application context.\n      operationId: addBeans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - file\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/artifacts:\n    get:\n      tags:\n        - Artifacts\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_12\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n    post:\n      tags:\n        - Artifacts\n      summary: Create a base resource.\n      operationId: create_11\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArtifactDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n  /api/appstores:\n    get:\n      tags:\n        - App Stores\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_13\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppStoreView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppStoreView'\n    post:\n      tags:\n        - App Stores\n      summary: Create a base resource.\n      operationId: create_12\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreDesc'\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppStoreView'\n        \"201\":\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppStoreView'\n  /api:\n    get:\n      tags:\n        - _Connector\n      summary: Entrypoint for REST resources\n      operationId: root\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/RepresentationModelObject'\n        \"200\":\n          description: Ok\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/RepresentationModelObject'\n  /api/utils/enums:\n    get:\n      tags:\n        - _Utils\n      summary: Get a list of enums by value name.\n      operationId: getEnums\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONObject'\n  /api/subscriptions/owning:\n    get:\n      tags:\n        - Subscriptions\n      summary: Get all subscriptions owned by this connector.\n      operationId: getAllFiltered\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n        \"405\":\n          description: Not allowed\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n  /api/routes/{id}/output:\n    get:\n      tags:\n        - Routes\n      summary: Returns the output of the route\n      operationId: getOutput\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n        \"204\":\n          description: No content\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ArtifactView'\n  /api/requests:\n    get:\n      tags:\n        - Requested Resources\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_3\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n  /api/requests/{id}/subscriptions:\n    get:\n      tags:\n        - Requested Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_2\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n  /api/requests/{id}/contracts:\n    get:\n      tags:\n        - Requested Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_4\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelContractView'\n  /api/representations/{id}/subscriptions:\n    get:\n      tags:\n        - Representations\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_6\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n  /api/offers/{id}/subscriptions:\n    get:\n      tags:\n        - Offered Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_10\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n  /api/offers/{id}/brokers:\n    get:\n      tags:\n        - Offered Resources\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_14\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelBrokerView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelBrokerView'\n  /api/contracts/{id}/requests:\n    get:\n      tags:\n        - Contracts\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_16\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelRequestedResourceView'\n  /api/connector:\n    get:\n      tags:\n        - _Connector\n      summary: Get the private IDS self-description.\n      operationId: getPrivateSelfDescription\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/ld+json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/ld+json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/ld+json:\n              schema:\n                type: object\n  /api/configurations/active:\n    get:\n      tags:\n        - _Configurations\n      summary: Get current configuration.\n      operationId: getConfiguration\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n        \"200\":\n          description: Ok\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationView'\n  /api/camel/routes/error:\n    get:\n      tags:\n        - Routes (Apache Camel)\n      summary: Get new route related errors.\n      operationId: getRouteErrors\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/brokers/{id}/offers:\n    get:\n      tags:\n        - Brokers\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_19\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelOfferedResourceView'\n  /api/artifacts/{id}/subscriptions:\n    get:\n      tags:\n        - Artifacts\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_20\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelSubscriptionView'\n  /api/artifacts/{id}/route:\n    get:\n      tags:\n        - Artifacts\n      summary: Get route associated with artifact by id.\n      operationId: getRoute\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RouteView'\n  /api/artifacts/{id}/data/**:\n    get:\n      tags:\n        - Artifacts\n      summary: Get data by artifact id with query input.\n      operationId: getData_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: download\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: agreementUri\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uri\n        - name: routeIds\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uri\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StreamingResponseBody'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/StreamingResponseBody'\n  /api/artifacts/{id}/agreements:\n    get:\n      tags:\n        - Artifacts\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_22\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAgreementView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAgreementView'\n  /api/appstores/{id}/apps:\n    get:\n      tags:\n        - App Stores\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_23\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppView'\n  /api/apps:\n    get:\n      tags:\n        - Apps\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_14\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppView'\n  /api/apps/{id}:\n    get:\n      tags:\n        - Apps\n      summary: Get a base resource by id.\n      operationId: get_14\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AppView'\n    delete:\n      tags:\n        - Apps\n      summary: Delete a base resource by id.\n      operationId: delete_14\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"204\":\n          description: No content\n  /api/apps/{id}/endpoints:\n    get:\n      tags:\n        - Apps\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_24\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppEndpointView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAppEndpointView'\n  /api/apps/{id}/appstore:\n    get:\n      tags:\n        - Apps\n      summary: Get appstore by app id\n      description: Get appstore holding this app.\n      operationId: relatedAppStore\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/hal+json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/hal+json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/hal+json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/hal+json:\n              schema:\n                type: object\n  /api/agreements:\n    get:\n      tags:\n        - Contracts\n      summary: Get a list of base resources with pagination.\n      operationId: getAll_15\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAgreementView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelAgreementView'\n  /api/agreements/{id}:\n    get:\n      tags:\n        - Contracts\n      summary: Get a base resource by id.\n      operationId: get_15\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AgreementView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AgreementView'\n  /api/agreements/{id}/artifacts:\n    get:\n      tags:\n        - Contracts\n      summary: Get all children of a base resource with pagination.\n      operationId: getResource_25\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 30\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PagedModelArtifactView'\n  /:\n    get:\n      tags:\n        - _Connector\n      summary: Get the public IDS self-description.\n      operationId: getPublicSelfDescription_1\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/ld+json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/ld+json:\n              schema:\n                type: object\n      security: []\n  /api/camel/routes/{routeId}:\n    delete:\n      tags:\n        - Routes (Apache Camel)\n      summary: Delete a route from the Camel context.\n      operationId: removeRoute\n      parameters:\n        - name: routeId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/beans/{beanId}:\n    delete:\n      tags:\n        - Routes (Apache Camel)\n      summary: Remove a bean from the application context.\n      operationId: removeBean\n      parameters:\n        - name: beanId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\ncomponents:\n  schemas:\n    SubscriptionDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        target:\n          type: string\n          format: uri\n        location:\n          type: string\n          format: uri\n        subscriber:\n          type: string\n          format: uri\n        pushData:\n          type: boolean\n        idsProtocol:\n          type: boolean\n          readOnly: true\n      description: The subscription object.\n    Links:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Link'\n    SubscriptionView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        title:\n          type: string\n        description:\n          type: string\n        target:\n          type: string\n          format: uri\n        location:\n          type: string\n          format: uri\n        subscriber:\n          type: string\n          format: uri\n        pushData:\n          type: boolean\n        idsProtocol:\n          type: boolean\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    ContractRuleDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        remoteId:\n          type: string\n          format: uri\n          readOnly: true\n        value:\n          type: string\n    ContractRuleView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        title:\n          type: string\n        description:\n          type: string\n        value:\n          type: string\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    RouteDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        configuration:\n          type: string\n        deploy:\n          type: string\n          enum:\n            - None\n            - Camel\n    Endpoint:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        deleted:\n          type: boolean\n        bootstrapId:\n          type: string\n          format: uri\n        location:\n          type: string\n        docs:\n          type: string\n          format: uri\n        info:\n          type: string\n        type:\n          type: string\n    RouteView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        title:\n          type: string\n        description:\n          type: string\n        configuration:\n          type: string\n        deploy:\n          type: string\n          enum:\n            - None\n            - Camel\n        start:\n          $ref: '#/components/schemas/Endpoint'\n        end:\n          $ref: '#/components/schemas/Endpoint'\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    RequestedResourceDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        publisher:\n          type: string\n          format: uri\n        language:\n          type: string\n        license:\n          type: string\n          format: uri\n        sovereign:\n          type: string\n          format: uri\n        endpointDocumentation:\n          type: string\n          format: uri\n        samples:\n          type: array\n          items:\n            type: string\n            format: uri\n        remoteId:\n          type: string\n          format: uri\n          readOnly: true\n        paymentMethod:\n          type: string\n          enum:\n            - undefined\n            - fixedPrice\n            - free\n            - negotiationBasis\n    RequestedResourceView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        remoteId:\n          type: string\n          format: uri\n        title:\n          type: string\n        description:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        publisher:\n          type: string\n          format: uri\n        language:\n          type: string\n        license:\n          type: string\n          format: uri\n        version:\n          type: integer\n          format: int64\n        sovereign:\n          type: string\n          format: uri\n        endpointDocumentation:\n          type: string\n          format: uri\n        paymentModality:\n          type: string\n          enum:\n            - undefined\n            - fixedPrice\n            - free\n            - negotiationBasis\n        samples:\n          type: array\n          items:\n            type: string\n            format: uri\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    RepresentationDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        remoteId:\n          type: string\n          format: uri\n          readOnly: true\n        mediaType:\n          type: string\n        language:\n          type: string\n        standard:\n          type: string\n    RepresentationView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        remoteId:\n          type: string\n          format: uri\n        title:\n          type: string\n        description:\n          type: string\n        mediaType:\n          type: string\n        language:\n          type: string\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    OfferedResourceDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        publisher:\n          type: string\n          format: uri\n        language:\n          type: string\n        license:\n          type: string\n          format: uri\n        sovereign:\n          type: string\n          format: uri\n        endpointDocumentation:\n          type: string\n          format: uri\n        samples:\n          type: array\n          items:\n            type: string\n            format: uri\n        paymentMethod:\n          type: string\n          enum:\n            - undefined\n            - fixedPrice\n            - free\n            - negotiationBasis\n    OfferedResourceView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        title:\n          type: string\n        description:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        publisher:\n          type: string\n          format: uri\n        language:\n          type: string\n        license:\n          type: string\n          format: uri\n        version:\n          type: integer\n          format: int64\n        sovereign:\n          type: string\n          format: uri\n        endpointDocumentation:\n          type: string\n          format: uri\n        paymentModality:\n          type: string\n          enum:\n            - undefined\n            - fixedPrice\n            - free\n            - negotiationBasis\n        samples:\n          type: array\n          items:\n            type: string\n            format: uri\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    AppEndpointDesc:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EndpointDesc'\n        - type: object\n          properties:\n            endpointType:\n              type: string\n            endpointPort:\n              type: integer\n              format: int32\n            mediaType:\n              type: string\n            protocol:\n              type: string\n            language:\n              type: string\n            path:\n              type: string\n    EndpointDesc:\n      required:\n        - type\n      type: object\n      properties:\n        location:\n          type: string\n        docs:\n          type: string\n          format: uri\n        info:\n          type: string\n        type:\n          type: string\n      discriminator:\n        propertyName: type\n    GenericEndpointDesc:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EndpointDesc'\n    AuthenticationDesc:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    DataSourceDesc:\n      required:\n        - type\n      type: object\n      properties:\n        basicAuth:\n          $ref: '#/components/schemas/AuthenticationDesc'\n        apiKey:\n          $ref: '#/components/schemas/AuthenticationDesc'\n        type:\n          type: string\n      discriminator:\n        propertyName: type\n    DatabaseDataSourceDesc:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataSourceDesc'\n        - type: object\n          properties:\n            url:\n              type: string\n            driverClassName:\n              type: string\n    RestDataSourceDesc:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/DataSourceDesc'\n    DataSourceView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        id:\n          type: string\n          format: uuid\n        type:\n          type: string\n          enum:\n            - Database\n            - REST\n        _links:\n          $ref: '#/components/schemas/Links'\n    ContractDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        remoteId:\n          type: string\n          format: uri\n          readOnly: true\n        consumer:\n          type: string\n          format: uri\n        provider:\n          type: string\n          format: uri\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n    ContractView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        title:\n          type: string\n        description:\n          type: string\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n        consumer:\n          type: string\n          format: uri\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    ConfigurationDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        connectorId:\n          type: string\n          format: uri\n        defaultEndpoint:\n          type: string\n          format: uri\n          readOnly: true\n        version:\n          type: string\n          readOnly: true\n        curator:\n          type: string\n          format: uri\n        maintainer:\n          type: string\n          format: uri\n        inboundModelVersion:\n          type: array\n          readOnly: true\n          items:\n            type: string\n        outboundModelVersion:\n          type: string\n          readOnly: true\n        securityProfile:\n          type: string\n          readOnly: true\n          enum:\n            - Base Security\n            - Trust Plus Security\n            - Trust Security\n        logLevel:\n          type: string\n          enum:\n            - \"Off\"\n            - Trace\n            - Debug\n            - Info\n            - Warn\n            - Error\n        status:\n          type: string\n          enum:\n            - Faulty\n            - Offline\n            - Online\n        deployMode:\n          type: string\n          enum:\n            - Productive\n            - Test\n        truststore:\n          $ref: '#/components/schemas/TruststoreDesc'\n        proxy:\n          $ref: '#/components/schemas/ProxyDesc'\n        keystore:\n          $ref: '#/components/schemas/KeystoreDesc'\n    KeystoreDesc:\n      type: object\n      properties:\n        location:\n          type: string\n          format: uri\n        password:\n          type: string\n        alias:\n          type: string\n    ProxyDesc:\n      type: object\n      properties:\n        location:\n          type: string\n          format: uri\n        exclusions:\n          type: array\n          items:\n            type: string\n        authentication:\n          $ref: '#/components/schemas/AuthenticationDesc'\n    TruststoreDesc:\n      type: object\n      properties:\n        location:\n          type: string\n          format: uri\n        password:\n          type: string\n        alias:\n          type: string\n    ConfigurationView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        connectorId:\n          type: string\n          format: uri\n        title:\n          type: string\n        description:\n          type: string\n        defaultEndpoint:\n          type: string\n          format: uri\n        version:\n          type: string\n        curator:\n          type: string\n          format: uri\n        maintainer:\n          type: string\n          format: uri\n        inboundModelVersion:\n          type: array\n          items:\n            type: string\n        outboundModelVersion:\n          type: string\n        securityProfile:\n          type: string\n          enum:\n            - Base Security\n            - Trust Plus Security\n            - Trust Security\n        status:\n          type: string\n          enum:\n            - Faulty\n            - Offline\n            - Online\n        logLevel:\n          type: string\n          enum:\n            - \"Off\"\n            - Trace\n            - Debug\n            - Info\n            - Warn\n            - Error\n        deployMode:\n          type: string\n          enum:\n            - Productive\n            - Test\n        proxy:\n          $ref: '#/components/schemas/ProxyView'\n        trustStore:\n          $ref: '#/components/schemas/TruststoreView'\n        keyStore:\n          $ref: '#/components/schemas/KeystoreView'\n        _links:\n          $ref: '#/components/schemas/Links'\n    KeystoreView:\n      type: object\n      properties:\n        location:\n          type: string\n          format: uri\n        alias:\n          type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    ProxyView:\n      type: object\n      properties:\n        location:\n          type: string\n          format: uri\n        exclusions:\n          type: array\n          items:\n            type: string\n        authenticationSet:\n          type: boolean\n        _links:\n          $ref: '#/components/schemas/Links'\n    TruststoreView:\n      type: object\n      properties:\n        location:\n          type: string\n          format: uri\n        alias:\n          type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    JSONObject:\n      type: object\n      properties:\n        empty:\n          type: boolean\n      additionalProperties:\n        type: object\n    CatalogDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n    CatalogView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        title:\n          type: string\n        description:\n          type: string\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    BrokerDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        location:\n          type: string\n          format: uri\n        status:\n          type: string\n          readOnly: true\n          enum:\n            - Unregistered\n            - Registered\n    BrokerView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        location:\n          type: string\n          format: uri\n        title:\n          type: string\n        description:\n          type: string\n        status:\n          type: string\n          enum:\n            - Unregistered\n            - Registered\n        _links:\n          $ref: '#/components/schemas/Links'\n    ArtifactDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        remoteId:\n          type: string\n          format: uri\n          readOnly: true\n        remoteAddress:\n          type: string\n          format: uri\n          readOnly: true\n        accessUrl:\n          type: string\n          format: url\n        basicAuth:\n          $ref: '#/components/schemas/AuthenticationDesc'\n        apiKey:\n          $ref: '#/components/schemas/AuthenticationDesc'\n        value:\n          type: string\n        automatedDownload:\n          type: boolean\n    ArtifactView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        remoteId:\n          type: string\n          format: uri\n        title:\n          type: string\n        description:\n          type: string\n        numAccessed:\n          type: integer\n          format: int64\n        byteSize:\n          type: integer\n          format: int64\n        checkSum:\n          type: integer\n          format: int64\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    AppStoreDesc:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        location:\n          type: string\n          format: uri\n    AppStoreView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        location:\n          type: string\n          format: uri\n        title:\n          type: string\n        description:\n          type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    PageMetadata:\n      type: object\n      properties:\n        size:\n          type: integer\n          format: int64\n        totalElements:\n          type: integer\n          format: int64\n        totalPages:\n          type: integer\n          format: int64\n        number:\n          type: integer\n          format: int64\n    PagedModelContractView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            contracts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ContractView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelRouteView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            routes:\n              type: array\n              items:\n                $ref: '#/components/schemas/RouteView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelRepresentationView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            representations:\n              type: array\n              items:\n                $ref: '#/components/schemas/RepresentationView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelCatalogView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            catalogs:\n              type: array\n              items:\n                $ref: '#/components/schemas/CatalogView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelRequestedResourceView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            resources:\n              type: array\n              items:\n                $ref: '#/components/schemas/RequestedResourceView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelOfferedResourceView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            resources:\n              type: array\n              items:\n                $ref: '#/components/schemas/OfferedResourceView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelArtifactView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            artifacts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ArtifactView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    AbstractConstraint:\n      required:\n        - '@id'\n        - '@type'\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: object\n        comment:\n          type: array\n          items:\n            $ref: '#/components/schemas/TypedLiteral'\n        label:\n          type: array\n          items:\n            $ref: '#/components/schemas/TypedLiteral'\n        '@id':\n          type: string\n          format: uri\n        '@type':\n          type: string\n      discriminator:\n        propertyName: '@type'\n    Constraint:\n      required:\n        - '@id'\n        - '@type'\n        - ids:leftOperand\n        - ids:operator\n      type: object\n      discriminator:\n        propertyName: '@type'\n      allOf:\n        - $ref: '#/components/schemas/AbstractConstraint'\n        - type: object\n          properties:\n            ids:rightOperand:\n              $ref: '#/components/schemas/RdfResource'\n            ids:leftOperand:\n              type: string\n              enum:\n                - https://w3id.org/idsa/code/ABSOLUTE_SPATIAL_POSITION\n                - https://w3id.org/idsa/code/COUNT\n                - https://w3id.org/idsa/code/DELAY\n                - https://w3id.org/idsa/code/ELAPSED_TIME\n                - https://w3id.org/idsa/code/ENDPOINT\n                - https://w3id.org/idsa/code/EVENT\n                - https://w3id.org/idsa/code/PATH\n                - https://w3id.org/idsa/code/PAYMENT\n                - https://w3id.org/idsa/code/PAY_AMOUNT\n                - https://w3id.org/idsa/code/POLICY_EVALUATION_TIME\n                - https://w3id.org/idsa/code/PURPOSE\n                - https://w3id.org/idsa/code/QUANTITY\n                - https://w3id.org/idsa/code/RECURRENCE_RATE\n                - https://w3id.org/idsa/code/SECURITY_LEVEL\n                - https://w3id.org/idsa/code/STATE\n                - https://w3id.org/idsa/code/SYSTEM\n                - https://w3id.org/idsa/code/USER\n            ids:operator:\n              type: string\n              enum:\n                - https://w3id.org/idsa/code/AFTER\n                - https://w3id.org/idsa/code/BEFORE\n                - https://w3id.org/idsa/code/CONTAINS\n                - https://w3id.org/idsa/code/COVERED_BY\n                - https://w3id.org/idsa/code/COVERS\n                - https://w3id.org/idsa/code/DEFINES_AS\n                - https://w3id.org/idsa/code/DISJOINT\n                - https://w3id.org/idsa/code/DURATION_EQ\n                - https://w3id.org/idsa/code/DURING\n                - https://w3id.org/idsa/code/EQ\n                - https://w3id.org/idsa/code/EQUALS\n                - https://w3id.org/idsa/code/FINISHED_BY\n                - https://w3id.org/idsa/code/FINISHES\n                - https://w3id.org/idsa/code/GT\n                - https://w3id.org/idsa/code/GTEQ\n                - https://w3id.org/idsa/code/HAS_MEMBERSHIP\n                - https://w3id.org/idsa/code/HAS_SITE\n                - https://w3id.org/idsa/code/HAS_STATE\n                - https://w3id.org/idsa/code/IN\n                - https://w3id.org/idsa/code/INSIDE\n                - https://w3id.org/idsa/code/INSIDE_NETWORK\n                - https://w3id.org/idsa/code/LONGER\n                - https://w3id.org/idsa/code/LONGER_EQ\n                - https://w3id.org/idsa/code/LT\n                - https://w3id.org/idsa/code/LTEQ\n                - https://w3id.org/idsa/code/MATCHES\n                - https://w3id.org/idsa/code/MEETS\n                - https://w3id.org/idsa/code/MEMBER_OF\n                - https://w3id.org/idsa/code/MET_BY\n                - https://w3id.org/idsa/code/NOT\n                - https://w3id.org/idsa/code/OVERLAPPED_BY\n                - https://w3id.org/idsa/code/OVERLAPS\n                - https://w3id.org/idsa/code/SAME_AS\n                - https://w3id.org/idsa/code/SHORTER\n                - https://w3id.org/idsa/code/SHORTER_EQ\n                - https://w3id.org/idsa/code/SPATIAL_CONTAINS\n                - https://w3id.org/idsa/code/SPATIAL_EQUALS\n                - https://w3id.org/idsa/code/SPATIAL_MEET\n                - https://w3id.org/idsa/code/SPATIAL_OVERLAP\n                - https://w3id.org/idsa/code/STARTED_BY\n                - https://w3id.org/idsa/code/STARTS\n                - https://w3id.org/idsa/code/STRING_CONTAINS\n                - https://w3id.org/idsa/code/STRING_EQ\n                - https://w3id.org/idsa/code/STRING_IS_CONTAINED\n                - https://w3id.org/idsa/code/TEMPORAL_DISJOINT\n                - https://w3id.org/idsa/code/TEMPORAL_EQUALS\n            ids:unit:\n              type: string\n              format: uri\n            ids:rightOperandReference:\n              type: string\n              format: uri\n            ids:pipEndpoint:\n              type: string\n              format: uri\n            '@type':\n              type: string\n    Duty:\n      required:\n        - '@id'\n        - '@type'\n        - ids:action\n      type: object\n      discriminator:\n        propertyName: '@type'\n      allOf:\n        - $ref: '#/components/schemas/Rule'\n        - type: object\n          properties:\n            '@type':\n              type: string\n    LogicalConstraint:\n      required:\n        - '@id'\n        - '@type'\n      type: object\n      discriminator:\n        propertyName: '@type'\n      allOf:\n        - $ref: '#/components/schemas/AbstractConstraint'\n        - type: object\n          properties:\n            ids:and:\n              type: array\n              items:\n                $ref: '#/components/schemas/Constraint'\n            ids:or:\n              type: array\n              items:\n                $ref: '#/components/schemas/Constraint'\n            ids:xone:\n              type: array\n              items:\n                $ref: '#/components/schemas/Constraint'\n            '@type':\n              type: string\n    Permission:\n      required:\n        - '@id'\n        - '@type'\n        - ids:action\n      type: object\n      discriminator:\n        propertyName: '@type'\n      allOf:\n        - $ref: '#/components/schemas/Rule'\n        - type: object\n          properties:\n            ids:postDuty:\n              type: array\n              items:\n                $ref: '#/components/schemas/Duty'\n            ids:preDuty:\n              type: array\n              items:\n                $ref: '#/components/schemas/Duty'\n            '@type':\n              type: string\n    Prohibition:\n      required:\n        - '@id'\n        - '@type'\n        - ids:action\n      type: object\n      discriminator:\n        propertyName: '@type'\n      allOf:\n        - $ref: '#/components/schemas/Rule'\n        - type: object\n          properties:\n            '@type':\n              type: string\n    RdfResource:\n      type: object\n      properties:\n        '@value':\n          type: string\n        '@type':\n          type: string\n    Rule:\n      required:\n        - '@id'\n        - '@type'\n        - ids:action\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: object\n        comment:\n          type: array\n          items:\n            $ref: '#/components/schemas/TypedLiteral'\n        label:\n          type: array\n          items:\n            $ref: '#/components/schemas/TypedLiteral'\n        ids:target:\n          type: string\n          format: uri\n        ids:assignee:\n          type: array\n          items:\n            type: string\n            format: uri\n        ids:assigner:\n          type: array\n          items:\n            type: string\n            format: uri\n        ids:constraint:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/LogicalConstraint'\n        ids:assetRefinement:\n          oneOf:\n            - $ref: '#/components/schemas/Constraint'\n            - $ref: '#/components/schemas/LogicalConstraint'\n        ids:action:\n          type: array\n          items:\n            type: string\n            enum:\n              - https://w3id.org/idsa/code/AGGREGATE_BY_CONSUMER\n              - https://w3id.org/idsa/code/AGGREGATE_BY_PROVIDER\n              - https://w3id.org/idsa/code/ANONYMIZE\n              - https://w3id.org/idsa/code/COMPENSATE\n              - https://w3id.org/idsa/code/DELETE\n              - https://w3id.org/idsa/code/DISTRIBUTE\n              - https://w3id.org/idsa/code/ENCRYPT\n              - https://w3id.org/idsa/code/GRANT_USE\n              - https://w3id.org/idsa/code/LOG\n              - https://w3id.org/idsa/code/MODIFY\n              - https://w3id.org/idsa/code/NEXT_POLICY\n              - https://w3id.org/idsa/code/NOTIFY\n              - https://w3id.org/idsa/code/READ\n              - https://w3id.org/idsa/code/TRACK_PROVENANCE\n              - https://w3id.org/idsa/code/USE\n              - https://w3id.org/idsa/code/WRITE\n        ids:title:\n          type: array\n          items:\n            $ref: '#/components/schemas/TypedLiteral'\n        ids:description:\n          type: array\n          items:\n            $ref: '#/components/schemas/TypedLiteral'\n        '@id':\n          type: string\n          format: uri\n        '@type':\n          type: string\n      discriminator:\n        propertyName: '@type'\n    TypedLiteral:\n      type: object\n      properties:\n        '@value':\n          type: string\n        '@type':\n          type: string\n        '@language':\n          type: string\n    ConnectorRestrictionDesc:\n      type: object\n      example:\n        type: CONNECTOR_RESTRICTED_USAGE\n        url: https://localhost:8080\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n        - type: object\n          properties:\n            url:\n              type: string\n    DeletionDesc:\n      type: object\n      example:\n        type: USAGE_UNTIL_DELETION\n        start: 2020-07-11T00:00:00Z\n        end: 2020-07-11T00:00:00Z\n        date: 2020-07-11T00:00:00Z\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n        - type: object\n          properties:\n            start:\n              type: string\n            end:\n              type: string\n            date:\n              type: string\n    DurationDesc:\n      type: object\n      example:\n        type: DURATION_USAGE\n        duration: PT1M30.5S\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n        - type: object\n          properties:\n            duration:\n              type: string\n    IntervalDesc:\n      type: object\n      example:\n        type: USAGE_DURING_INTERVAL\n        start: 2020-07-11T00:00:00Z\n        end: 2020-07-11T00:00:00Z\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n        - type: object\n          properties:\n            start:\n              type: string\n            end:\n              type: string\n    LoggingDesc:\n      type: object\n      example:\n        type: USAGE_LOGGING\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n    NotificationDesc:\n      type: object\n      example:\n        type: USAGE_NOTIFICATION\n        url: https://localhost:8080/api/ids/data\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n        - type: object\n          properties:\n            url:\n              type: string\n    PatternDesc:\n      required:\n        - type\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        type:\n          type: string\n      discriminator:\n        propertyName: type\n    PermissionDesc:\n      type: object\n      example:\n        type: PROVIDE_ACCESS\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n    ProhibitionDesc:\n      type: object\n      example:\n        type: PROHIBIT_ACCESS\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n    SecurityRestrictionDesc:\n      type: object\n      description: \"Possible profiles are: idsc:BASE_SECURITY_PROFILE, idsc:TRUST_SECURITY_PROFILE\\\n        \\ and idsc:TRUST_PLUS_SECURITY_PROFILE\"\n      example:\n        type: SECURITY_PROFILE_RESTRICTED_USAGE\n        profile: BASE_SECURITY_PROFILE\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n        - type: object\n          properties:\n            profile:\n              type: string\n    UsageNumberDesc:\n      type: object\n      example:\n        type: N_TIMES_USAGE\n        value: \"5\"\n      allOf:\n        - $ref: '#/components/schemas/PatternDesc'\n        - type: object\n          properties:\n            value:\n              type: string\n    PagedModelContractRuleView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            rules:\n              type: array\n              items:\n                $ref: '#/components/schemas/ContractRuleView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    StreamingResponseBody:\n      type: object\n    RepresentationModelObject:\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Links'\n    PagedModelSubscriptionView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            subscriptions:\n              type: array\n              items:\n                $ref: '#/components/schemas/SubscriptionView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelBrokerView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            brokers:\n              type: array\n              items:\n                $ref: '#/components/schemas/BrokerView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelObject:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            objectList:\n              type: array\n              items:\n                type: object\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelDataSourceView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            datasources:\n              type: array\n              items:\n                $ref: '#/components/schemas/DataSourceView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelConfigurationView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            configurations:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConfigurationView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    AgreementView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        remoteId:\n          type: string\n          format: uri\n        confirmed:\n          type: boolean\n        value:\n          type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    PagedModelAgreementView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            agreements:\n              type: array\n              items:\n                $ref: '#/components/schemas/AgreementView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    PagedModelAppStoreView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            apps:\n              type: array\n              items:\n                $ref: '#/components/schemas/AppStoreView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    AppView:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        remoteId:\n          type: string\n          format: uri\n        remoteAddress:\n          type: string\n          format: uri\n        docs:\n          type: string\n        envVariables:\n          type: string\n        storageConfig:\n          type: string\n        supportedPolicies:\n          type: array\n          items:\n            type: string\n            enum:\n              - Provide unrestricted data access\n              - Prohibit the data access\n              - Restrict the data usage to not more than N times\n              - Restrict the data usage to a specific time duration\n              - Restrict the data usage to a specific time interval\n              - Use data and delete it at a specific date time\n              - Log the data usage information\n              - Notify a party or a specific group of users when the data is used\n              - Restrict the data usage to a specific connector\n              - Restrict the data usage to a security profile\n        keywords:\n          type: array\n          items:\n            type: string\n        publisher:\n          type: string\n          format: uri\n        sovereign:\n          type: string\n          format: uri\n        language:\n          type: string\n        license:\n          type: string\n          format: uri\n        endpointDocumentation:\n          type: string\n          format: uri\n        distributionService:\n          type: string\n          format: uri\n        runtimeEnvironment:\n          type: string\n        additional:\n          type: object\n          additionalProperties:\n            type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    PagedModelAppView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            apps:\n              type: array\n              items:\n                $ref: '#/components/schemas/AppView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    AppEndpointView:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - App\n            - Connector\n            - Generic\n        creationDate:\n          type: string\n          format: date-time\n        modificationDate:\n          type: string\n          format: date-time\n        location:\n          type: string\n        docs:\n          type: string\n          format: uri\n        info:\n          type: string\n        endpointPort:\n          type: integer\n          format: int32\n        mediaType:\n          type: string\n        protocol:\n          type: string\n        language:\n          type: string\n        path:\n          type: string\n        _links:\n          $ref: '#/components/schemas/Links'\n    PagedModelAppEndpointView:\n      type: object\n      properties:\n        _embedded:\n          type: object\n          properties:\n            endpoints:\n              type: array\n              items:\n                $ref: '#/components/schemas/AppEndpointView'\n        _links:\n          $ref: '#/components/schemas/Links'\n        page:\n          $ref: '#/components/schemas/PageMetadata'\n    Link:\n      type: object\n      properties:\n        href:\n          type: string\n        hreflang:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        deprecation:\n          type: string\n        profile:\n          type: string\n        name:\n          type: string\n        templated:\n          type: boolean\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n"
		}
	},
	"Error": "buildIR: make ir: path \"/api/artifacts/{id}/data\": put: requestBody: contents: application/octet-stream: octet stream with \"array\" schema not supported",
	"NotImplemented": [
		"allOf",
		"unsupported content types"
	]
}