{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ProjectEKA/consent-manager"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "consent/src/main/resources/static/api.yaml",
			"byteSize": 94374,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.0.1\n  title: Health Data Consent Manager\n  description: \u003e\n    Entity which provides health information aggregation services to customers of health care services.\n    It enables customers to fetch their health information from one or more Health Information Providers\n    (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such\n    aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers,\n    Doctors, Medical Researchers).\n\nservers:\n  - url: https://ncg-dev.projecteka.in/consent-manager\n    description: Dev\n\ntags:\n  - name: discovery\n  - name: link\n  - name: consent\n  - name: data flow\n  - name: account\n\npaths:\n  # discovery service\n  /patients/discover/carecontexts:\n    post:\n      tags:\n        - discovery\n      summary: Discover patient\n      description: \u003e\n        Return only one patient record with (potentially masked) associated care contexts\n        1. **At least one of the verified identifier matches.**\n        2. **Filter out records using unverified, firstName, secondName, gender and dob\n        if there are more than one patient records found from step 1.**\n      operationId: discoverPatient\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n      requestBody:\n        required: true\n        description: A patient discovery request.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryRequest'\n      responses:\n        '200':\n          description: Found a patient.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatientDiscoveryRepresentation'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PatientDiscoveryRepresentation'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: \u003e\n            **Causes:**\n              * No Patients found in HIP\n              * Multiple patients found in HIP\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/links:\n    get:\n      tags:\n        - link\n      summary: Get linked care contexts\n      description: \u003e\n        Get all linked care contexts from all HIPs for a patient.\n        This api is to be consumed by patient.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n      responses:\n        '200':\n          description: All linked care contexts of a patient.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedCareContexts'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LinkedCareContexts'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/link:\n    post:\n      tags:\n        - link\n      summary: Link care contexts\n      description: \u003e\n        Links care contexts associated with only one patient\n          1. **Validates Transaction Id**\n      operationId: linkPatient\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n      requestBody:\n        required: true\n        description: A object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceRequest'\n      responses:\n        '200':\n          description: A successful link request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatientLinkReferenceResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PatientLinkReferenceResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Account reference number is invalid\n              * Care context reference numbers are invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/link/{linkRefNumber}:\n    post:\n      tags:\n        - link\n      summary: Verify link\n      description: \u003e\n        Returns a list of linked care contexts with patient reference number.\n          1. **Validate token for expiry**\n          3. **Returns a list of unmasked linked care contexts with patient reference number**\n      operationId: linkPatientConfirmation\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/linkRefNumber\"\n      requestBody:\n        required: true\n        description: A object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientLinkRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientLinkRequest'\n      responses:\n        '200':\n          description: List of linked care contexts of a patient with patient reference number.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatientLinkResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PatientLinkResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Link reference number is invalid\n              * Token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /providers:\n    get:\n      tags:\n        - discovery\n      summary: List providers\n      description: \u003e\n        Returns a list of linked care contexts with patient reference number.\n          1. **Validate token for expiry**\n          3. **Returns a list of providers which contains the name**\n      operationId: listProviders\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/providerName\"\n      responses:\n        '200':\n          description: List of health information providers.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvidersRepresentation'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProvidersRepresentation'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /providers/{provider-id}:\n    get:\n      tags:\n        - discovery\n      summary: Get a specific provider\n      description: \u003e\n        Returns a provider\n          1. **Validate token for expiry**\n          3. **Returns a provider associated with the given id**\n      operationId: fetchProvider\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - name: provider-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A provider.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProviderRepresentation'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProviderRepresentation'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Provider doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  # consent-service\n  /consent-requests:\n    post:\n      tags:\n        - consent\n      summary: Create consent request\n      description: Creates a consent request to get data about a patient by HIU user.\n      operationId: createConsentRequest\n      parameters:\n        - $ref: '#/components/parameters/hiuAuthorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentRequest'\n      responses:\n        '200':\n          description: Successful creation of consent request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  consentRequest:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        format: uuid\n        '400':\n          description:  \u003e\n            **Causes:**\n              * Invalid data being sent such as patient doesn't exist in the system.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      tags:\n        - consent\n      summary: List consent requests\n      description: Return list of consent requests which are matching filter criteria.\n      operationId: listConsentRequests\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/filters'\n      responses:\n        '200':\n          description: List of consent requests.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentRequestsRepresentation'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ConsentRequestsRepresentation'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /consent-requests/{request-id}/approve:\n    post:\n      tags:\n        - consent\n      summary: Approve Request\n      description: User approves the consent request with preferred data access parameters.\n      parameters:\n        - name: Authorization\n          description: Token received after successful verification of PIN\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: request-id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentsApproveRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentsApproveRequest'\n      responses:\n        '200':\n          description: Successful creation of consent artefact.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentApprovalRepresentation'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ConsentApprovalRepresentation'\n        '409':\n          description: Consent request already in approved status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Consent request doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /consent-requests/{request-id}/deny:\n    post:\n      tags:\n        - consent\n      summary: Deny request.\n      description: Deny consent request.\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - name: request-id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentDenyRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentDenyRequest'\n      responses:\n        '204':\n          description: Successfully denied consent request.\n        '409':\n          description: Consent request already in denied status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Consent request doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /consents/{consent-id}:\n    get:\n      tags:\n        - consent\n      summary: Get a specific consent\n      description: Fetch a consent artefact associated with the consent-id\n      operationId: fetchConsentArtefact\n      parameters:\n        - $ref: '#/components/parameters/hiuAuthorization'\n        - name: consent-id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: a consent artefact.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentArtefactRepresentation'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ConsentArtefactRepresentation'\n        '404':\n          description: Consent artefact doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /consent-requests/{consent-request-id}/consent-artefacts:\n    get:\n      tags:\n        - consent\n      summary: Gets list of consents given a request id\n      description: Fetch a consent artefact associated with the consent-request-id\n      operationId: consentArtefacts\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - name: consent-request-id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: list of consent artefacts.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentArtefacts'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ConsentArtefacts'\n        '404':\n          description: Consent request doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /consent-artefacts:\n    get:\n      tags:\n        - consent\n      summary: List all consent artefacts\n      description: Return list of consent artefacts which are matching filter criteria.\n      operationId: listConsentArtefacts\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/status'\n      responses:\n        '200':\n          description: List of consent artefacts.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentArtefactResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ConsentArtefactResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /health-information/request:\n    post:\n      tags:\n        - data flow\n      summary: Request for health information\n      description: The HIU submits the Consent Artefact ID of the consent required for fetching helath information from the HIP(s). A transaction ID is generated and returned.\n      parameters:\n        - $ref: '#/components/parameters/hiuAuthorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HealthInformationRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HealthInformationRequest'\n      responses:\n        '200':\n          description: A transaction ID is generated and returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthInformationRequestResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/HealthInformationRequestResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Consent artefact Id is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized HIU\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/generateotp:\n    post:\n      tags:\n        - account\n      summary: Generate OTP for the user\n      description: Generates OTP for the given user and sent to the users' verified identifier\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GenerateOtpRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/GenerateOtpRequest'\n      responses:\n        '200':\n          description: Details of the session and otp are sent in response. otpMedium defines verified identifier where it would be sent to. Its value is mentioned in otpMediumValue. OTP has an expiry time in minutes which is also sent.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateOtpResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/GenerateOtpResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Verified identifier is non existent for the user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: \u003e\n            **Causes:**\n              * User does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/verifyotp:\n    post:\n      tags:\n        - account\n      summary: Verify OTP of the user for reset-password user flow\n      description: Verifies OTP for the given user as part of reset-password flow\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyOtpRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/VerifyOtpRequest'\n      responses:\n        '200':\n          description: A temporary token which will allow the user to reset profile password.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyOtpResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/VerifyOtpResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Verified identifier is non existent for the user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: \u003e\n            **Causes:**\n              * User does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/enquiries:\n    post:\n      tags:\n        - account\n      summary: Enquire identifier.\n      description: Enquire the identifier [Mobile] of a patient.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MobileNumberEnquiryRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/MobileNumberEnquiryRequest'\n      responses:\n        '200':\n          description: A session ID is returned and OTP will be sent to user mobile number.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentifierEnquiryResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IdentifierEnquiryResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/enquiries/{enquiryId}/verify:\n    post:\n      tags:\n        - account\n      summary: Verify identifier.\n      description: Verify the identifier of a patient by validating an OTP.\n      parameters:\n        - $ref: '#/components/parameters/enquiryId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MobileNumberVerifyRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/MobileNumberVerifyRequest'\n      responses:\n        '200':\n          description: A temporary token which will allow the user to create their profile.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentifierVerifyResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IdentifierVerifyResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * OTP is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/me:\n    get:\n      tags:\n        - account\n      summary: Get profile.\n      description: Logged in patient profile information.\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n      responses:\n        '200':\n          description: A profile of a patient.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatientProfileRepresentation'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PatientProfileRepresentation'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/pin:\n    post:\n      tags:\n        - account\n      summary: Create transaction pin\n      description: Create transaction pin to use it while granting consent.\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePinRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/CreatePinRequest'\n      responses:\n        '204':\n          description: PIN created successfully.\n        '401':\n          description: \u003e\n            **Causes:**\n              * Token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/verify-pin:\n    post:\n      tags:\n        - account\n      summary: Verify PIN\n      description: MFA before granting the consent request.\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidatePinRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ValidatePinRequest'\n      responses:\n        '200':\n          description: Successful verification of PIN.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentifierVerifyResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IdentifierVerifyResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Token is invalid\n              * PIN is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/change-pin:\n    post:\n      tags:\n        - account\n      summary: Change PIN\n      description: to change the transaction PIN.\n      parameters:\n        - name: Authorization\n          description: Token received after successful verification of PIN\n          in: header\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangePinRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ChangePinRequest'\n      responses:\n        '200':\n          description: PIN updated successfully.\n        '400':\n          description: Bad request (Invalid PIN)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /patients/profile:\n    post:\n      tags:\n        - account\n      summary: Create Account\n      description: Patient can create an account once they verified one of the identifiers.\n      parameters:\n        - name: Authorization\n          description: Token received after successful verification of identifier.\n          in: header\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePatientRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/CreatePatientRequest'\n      responses:\n        '201':\n          description: Profile created successfully.\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Invalid/expired token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/profile/recovery-init:\n    post:\n      tags:\n        - account\n      summary: Initiates the recover CM Id process and generates OTP on success\n      description: Initiates the recover CM Id process generates OTP on success\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RecoverCmIdRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/RecoverCmIdRequest'\n      responses:\n        '200':\n          description: Details of the session and otp are sent in response. otpMedium defines verified identifier where it would be sent to. Its value is mentioned in otpMediumValue. OTP has an expiry time in minutes which is also sent.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateOtpResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/GenerateOtpResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Verified identifier is non existent for the user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: \u003e\n            **Causes:**\n              * No Patients found\n              * Multiple patients found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/profile/recovery-confirm:\n    post:\n      tags:\n        - account\n      summary: Verify OTP of the user generated by recovery-init and reveals CM Id on successfull verification of OTP\n      description: Verify OTP of the user generated by recovery-init and reveals CM Id on successfull verification of OTP\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyOtpRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/VerifyOtpRequest'\n      responses:\n        '200':\n          description: Found a patient\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecoveryVerifyOtpResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/RecoveryVerifyOtpResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Verified identifier is non existent for the user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: \u003e\n            **Causes:**\n              * User does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/profile/reset-password:\n    put:\n      tags:\n        - account\n      summary: Update Account\n      description: Profile password is updated with the given value.\n      parameters:\n        - name: Authorization\n          description: Token received after successful verification of OTP.\n          in: header\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePatientRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UpdatePatientRequest'\n      responses:\n        '200':\n          description: Profile updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Invalid/expired token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/profile/loginmode:\n    get:\n      tags:\n        - account\n      summary: Get login type of the given user\n      description: Fetch a login type associated with the user-name\n      operationId: fetchLoginMode\n      parameters:\n        - name: userName\n          in: query\n          required: true\n          schema:\n            type: string\n            format: string\n            example: raj.sharma@ncg\n      responses:\n        '200':\n          description: Login mode of the user. If the mode is CREDENTIAL, it signifies that the consent-manager id of the user has the password set. Otherwise, user logs in via OTP.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginModeResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LoginModeResponse'\n        '404':\n          description: User doesn't exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/forgot-pin/generate-otp:\n    post:\n      tags:\n        - account\n      summary: Generate OTP for forgot pin flow\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n      responses:\n        '201':\n          description: OTP generated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateOtpResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/forgot-pin/validate-otp:\n    post:\n      tags:\n        - account\n      summary: Validate OTP for forgot pin flow\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyOtpRequest'\n      responses:\n        '200':\n          description: OTP validation successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyOtpResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/VerifyOtpResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /patients/reset-pin:\n    put:\n      tags:\n        - account\n      summary: Update pin with temporary token\n      parameters:\n        - name: Authorization\n          description: Token received after successful verification of OTP.\n          in: header\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangePinRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ChangePinRequest'\n      responses:\n        '204':\n          description: Pin updated successfully.\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n\n  /patients/profile/update-password:\n    put:\n      tags:\n        - account\n      summary: Update password\n      description: Profile password is updated with the given new password.\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProfilePassword'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateProfilePassword'\n      responses:\n        '200':\n          description: Password updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid new password\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Invalid old password.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /consents/revoke:\n    post:\n      tags:\n        - consent\n      summary: Revoke consents\n      description: Patient revoke consents which are given earlier to HIU.\n      parameters:\n        - name: Authorization\n          description: Token received after successful verification of PIN\n          in: header\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RevokeRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/RevokeRequest'\n      responses:\n        '204':\n          description: Successful revocation of list of consents.\n        '404':\n          description: \u003e\n            **Causes:**\n              * One or more consents does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: \u003e\n            **Causes:**\n              * One or more consents are already revoked.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Token is invalid\n              * PIN is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /health-information/notification:\n    post:\n      tags:\n        - notification\n      description: Notifications corresponding to events during data flow\n      parameters:\n        - $ref: '#/components/parameters/hiuAuthorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HINotification'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HINotification'\n      responses:\n        '204':\n          description: Notification is Accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  # Sessions\n  /otpsession/verify:\n    post:\n      description: |\n        Request Otp for consent manager id.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OtpVerificationRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/OtpVerificationRequest'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OtpVerificationResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/OtpVerificationResponse'\n        404:\n          description: User Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: Error(On server side)\n  /otpsession/permit:\n    post:\n      description: |\n        validate otp.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OtpPermitRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/OtpPermitRequest'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: Error(On server side)\n  /logout:\n    post:\n      description: |\n        Logout active user by invalidating the access and refresh tokens\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogoutRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/LogoutRequest'\n      responses:\n        200:\n          description: OK\n        401:\n          description: Unauthorized\n        400:\n          description: Bad request(potentially bad request token)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: Error(On server side) in logging out\n\n  /sessions:\n    post:\n      summary: Login for users.\n      description: All the users can login. User types are super admin/admin/lab assistants.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n      responses:\n        '200':\n          description: User login successfull.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /certs:\n    get:\n      tags:\n        - default\n      summary: Api for getting the public key for verifying signature\n      description: \u003e\n        This API is called by HIPs to get public key to verify signature.\n      responses:\n        '200':\n          description:\n            Body containing the various params of key.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/KeyResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  parameters:\n    authorization:\n      name: Authorization\n      in: header\n      required: true\n      description: Bearer token which was issued after successful login.\n      schema:\n        type: string\n    hiuAuthorization:\n      name: Authorization\n      in: header\n      required: true\n      description: Authorization token which was issued by central registery.\n      schema:\n        type: string\n    limit:\n      name: limit\n      in: query\n      description: How many items to return at one time (max 100) (recommended to sent always)\n      required: false\n      schema:\n        type: integer\n        format: int32\n    offset:\n      name: offset\n      in: query\n      description: How many items out of line.\n      required: false\n      schema:\n        type: integer\n        format: int32\n    status:\n      name: status\n      in: query\n      required: false\n      schema:\n        type: string\n      description: \u003e\n        1. Query string parameter restricts the data returned from your request.\n        2. Possible values of status\n            | status | logic |\n            | ------ | ------ |\n            | GRANTED | Gets all Granted consent artefacts |\n            | EXPIRED | Gets all Expired consent artefacts |\n            | REVOKED | Gets all Revoked consent artefacts |\n            | ALL | Gets all consent artefacts |\n    filters:\n      name: filters\n      in: query\n      schema:\n        type: string\n      description: \u003e\n        1. Query string parameter restricts the data returned from your request.\n        2. Values in filters need to be encoded.\n            | filter   | logic|\n            | ------- | ----------------    |\n            | status%21%3DDENIED     | status != DENIED  |\n            | status%3D%3DDENIED,status%3D%3DGRANTED  | status == DENIED **or** status == GRANTED |\n      examples:\n        except_denied:\n          value: \"filters=cm:status%21%3DDENIED\"\n        either_granted_or_denied:\n          value: \"filters=cm:status%3D%3DDENIED,cm:status%3D%3DGRANTED\"\n      required: false\n    linkRefNumber:\n      name: linkRefNumber\n      in: path\n      schema:\n        type: string\n        format: uuid\n      required: true\n    providerName:\n      name: name\n      in: query\n      schema:\n        type: string\n        example: max\n      required: true\n    enquiryId:\n      name: enquiryId\n      in: path\n      schema:\n        type: string\n        format: uuid\n      required: true\n  schemas:\n    LoginRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          format: text\n        password:\n          type: string\n          format: text\n        grantType:\n          type: string\n          format: text\n          example: password/refreshToken\n        refreshToken:\n          type: string\n    PatientDiscoveryRepresentation:\n      type: object\n      properties:\n        transactionId:\n          type: string\n          format: uuid\n        patient:\n          $ref: '#/components/schemas/PatientRepresentation'\n        createdAt:\n          type: string\n          format: date-time\n    PatientRepresentation:\n      type: object\n      properties:\n        referenceNumber:\n          type: string\n        display:\n          type: string\n        careContexts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CareContextRepresentation'\n          xml:\n            wrapped: true\n      xml:\n        name: PatientRepresentation\n    Patient:\n      type: object\n      properties:\n        referenceNumber:\n          type: string\n        careContexts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CareContext'\n          xml:\n            wrapped: true\n      xml:\n        name: Patient\n    CareContextRepresentation:\n      type: object\n      properties:\n        referenceNumber:\n          type: string\n        display:\n          type: string\n      xml:\n        name: CareContextResponse\n    CareContext:\n      type: object\n      properties:\n        referenceNumber:\n          type: string\n      xml:\n        name: CareContext\n    PatientDiscoveryRequest:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        hip:\n          type: object\n          properties:\n            id:\n              type: string\n              description: Identifier of the health information provider where patient record needs to be looked up.\n        unverifiedIdentifiers:\n          description: additional unverified identifiers may be passed\n          type: array\n          items:\n            $ref: '#/components/schemas/PatientIdentifier'\n          xml:\n            name: unverifiedIdentifiers\n            wrapped: true\n    PatientLinkReferenceRequest:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        transactionId:\n          type: string\n          format: uuid\n        patient:\n          $ref: '#/components/schemas/Patient'\n      xml:\n        name: PatientLinkReferenceRequest\n    PatientLinkReferenceResponse:\n      type: object\n      properties:\n        transactionId:\n          type: string\n        link:\n          $ref: '#/components/schemas/link'\n      xml:\n        name: PatientLinkReferenceResponse\n    link:\n      type: object\n      properties:\n        referenceNumber:\n          type: string\n        authenticationType:\n          type: string\n          enum: ['DIRECT', 'MEDIATED']\n        meta:\n          $ref: '#/components/schemas/Meta'\n      xml:\n        name: link\n    Meta:\n      type: object\n      required:\n        - communicationMedium\n        - communicationHint\n      properties:\n        communicationMedium:\n          type: string\n          enum: ['MOBILE', 'EMAIL']\n        communicationHint:\n          type: string\n        communicationExpiry:\n          type: string\n          example: \"2019-12-30T12:01:55Z\"\n      xml:\n        name: Meta\n    PatientLinkRequest:\n      type: object\n      properties:\n        token:\n          type: string\n      xml:\n        name: PatientLinkRequest\n    PatientLinkResponse:\n      type: object\n      properties:\n        patient:\n          $ref: '#/components/schemas/PatientRepresentation'\n      xml:\n        name: PatientLinkResponse\n    ErrorResponse:\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/Error'\n      xml:\n        name: ErrorResponse\n    Error:\n      type: object\n      properties:\n        code:\n          type: integer\n          enum: [1000, 10001]\n          description: \u003e\n            1. Error code 1000 : No patient found\n            2. Error code 1001: Multiple patients found\n        message:\n          type: string\n      xml:\n        name: Error\n    ConsentRequestsRepresentation:\n      type: object\n      properties:\n        limit:\n          type: integer\n        size:\n          type: integer\n        offset:\n          type: integer\n        requests:\n          type: array\n          maxItems: 100\n          items:\n            $ref: '#/components/schemas/ConsentRequestRepresentation'\n          xml:\n            wrapped: true\n      xml:\n        name: ConsentRequestsResponse\n    ConsentRequestRepresentation:\n      type: object\n      required:\n        - createdAt\n        - purpose\n        - patient\n        - hiu\n        - permission\n        - status\n      properties:\n        id:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        lastUpdated:\n          type: string\n          format: date-time\n        purpose:\n          $ref: \"#/components/schemas/UsePurpose\"\n        patient:\n          allOf:\n            - $ref: '#/components/schemas/ConsentManagerPatientID'\n            - xml:\n                name: patient\n        hip:\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/OrganizationRepresentation'\n            - xml:\n                name: hip\n        hiu:\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/OrganizationRepresentation'\n            - xml:\n                name: hiu\n        requester:\n          $ref: '#/components/schemas/Requester'\n        hiTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/HITypeEnum'\n          xml:\n            wrapped: true\n        permission:\n          $ref: '#/components/schemas/Permission'\n        status:\n          $ref: '#/components/schemas/ConsentStatus'\n      xml:\n        name: ConsentRequestResponse\n    Requester:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        identifier:\n          $ref: '#/components/schemas/Identifier'\n    OrganizationRepresentation:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n      xml:\n        name: OrganizationResponse\n    Organization:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n    Identifier:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n        system:\n          type: string\n          format: uri\n    HITypeEnum:\n      type: string\n      enum:\n        - Condition\n        - Observation\n        - MedicationRequest\n        - DiagnosticReport\n      xml:\n        name: HIType\n    ConsentsApproveRequest:\n      type: object\n      properties:\n        consents:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentApproveRequest'\n          xml:\n            wrapped: true\n    ConsentApproveRequest:\n      type: object\n      properties:\n        hiTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/HITypeEnum'\n          xml:\n            wrapped: true\n        hip:\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/Organization'\n            - xml:\n                name: hip\n        careContexts:\n          type: array\n          items:\n            type: object\n            required:\n              - patientReference\n              - careContextReference\n            properties:\n              patientReference:\n                type: string\n              careContextReference:\n                type: string\n        permission:\n          $ref: '#/components/schemas/Permission'\n      xml:\n        name: ConsentApproveRequest\n    ConsentApprovalRepresentation:\n      type: object\n      properties:\n        consents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Consent'\n          xml:\n            wrapped: true\n      xml:\n        name: ConsentApprovalResponse\n    Consent:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n      xml:\n        name: Consent\n    Permission:\n      type: object\n      properties:\n        accessMode:\n          type: string\n          enum: [VIEW, STORE, QUERY, STREAM]\n        dateRange:\n          type: object\n          properties:\n            from:\n              type: string\n              format: date-time\n            to:\n              type: string\n              format: date-time\n        dataEraseAt:\n          type: string\n          format: date-time\n        frequency:\n          type: object\n          properties:\n            unit:\n              type: string\n              enum: [HOUR, WEEK, DAY, MONTH, YEAR]\n            value:\n              type: integer\n            repeats:\n              type: integer\n      xml:\n        name: Permission\n    ProvidersRepresentation:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProviderRepresentation'\n      xml:\n        name: ProvidersResponse\n    ProviderRepresentation:\n      type: object\n      properties:\n        identifier:\n          allOf:\n            - $ref: '#/components/schemas/OrganizationRepresentation'\n        city:\n          type: string\n        telephone:\n          type: string\n        type:\n          type: string\n    ConsentRequest:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        consent:\n          type: object\n          required:\n            - purpose\n            - patient\n            - hiu\n            - requester\n            - hiTypes\n            - permission\n            - consentNotificationUrl\n          properties:\n            purpose:\n              $ref: '#/components/schemas/UsePurpose'\n            patient:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/ConsentManagerPatientID'\n                - xml:\n                    name: patient\n            hip:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hip\n            hiu:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hiu\n            requester:\n              $ref: '#/components/schemas/Requester'\n            hiTypes:\n              type: array\n              items:\n                $ref: '#/components/schemas/HITypeEnum'\n            permission:\n              $ref: '#/components/schemas/Permission'\n            consentNotificationUrl:\n              type: string\n              example: 'http://localhost:8003/consent/notification'\n    ConsentManagerPatientID:\n      type: object\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n          format: \u003cuser-id\u003e@\u003cncg-id\u003e\n          example: batman@ncg\n    LinkedCareContexts:\n      type: object\n      properties:\n        patient:\n          $ref: '#/components/schemas/patient'\n    patient:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/links'\n    links:\n      type: object\n      properties:\n        hip:\n          $ref: '#/components/schemas/hip'\n        referenceNumber:\n          type: string\n        display:\n          type: string\n        careContexts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CareContextRepresentation'\n          xml:\n            wrapped: true\n    hip:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    UsePurpose:\n      type: object\n      required:\n        - text\n        - code\n      properties:\n        text:\n          type: string\n        code:\n          type: string\n          description: From the fixed set, documented at refUri\n        refUri:\n          type: string\n          format: uri\n    ConsentStatus:\n      type: string\n      enum:\n        - REQUESTED\n        - EXPIRED\n        - DENIED\n        - GRANTED\n        - ROVKED\n    ConsentArtefactRepresentation:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/ConsentStatus'\n        consentDetail:\n          type: object\n          properties:\n            schemaVersion:\n              type: string\n              format: string\n            consentId:\n              type: string\n              format: uuid\n            createdAt:\n              type: string\n              format: date-time\n            patient:\n              $ref: '#/components/schemas/ConsentManagerPatientID'\n            careContexts:\n              type: array\n              items:\n                type: object\n                required:\n                  - patientReference\n                  - careContextReference\n                properties:\n                  patientReference:\n                    type: string\n                    example: batman@tmh\n                  careContextReference:\n                    type: string\n                    example: Episode1\n            purpose:\n              $ref: '#/components/schemas/UsePurpose'\n            hip:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hip\n            hiu:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hiu\n            consentManager:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/Organization'\n                - xml:\n                    name: consentManager\n            requester:\n              $ref: '#/components/schemas/Requester'\n            hiTypes:\n              type: array\n              items:\n                $ref: '#/components/schemas/HITypeEnum'\n            permission:\n              $ref: '#/components/schemas/Permission'\n        signature:\n          type: string\n          example: Signature of CM as defined in W3C standards; Base64 encoded\n    ConsentArtefactResponse:\n      type: object\n      properties:\n        limit:\n          type: integer\n        size:\n          type: integer\n        offset:\n          type: integer\n        consentArtefacts:\n          $ref: '#/components/schemas/ConsentArtefacts'\n        signature:\n          type: string\n          example: Signature of CM as defined in W3C standards; Base64 encoded\n    HealthInformationRequest:\n      type: object\n      required:\n        - consentArtefactId\n        - dataPushUrl\n      properties:\n        consent:\n          $ref: '#/components/schemas/consent'\n        dateRange:\n          $ref: '#/components/schemas/dateRange'\n        dataPushUrl:\n          type: string\n          example: 'http://localhost:8003/data/notification'\n        keyMaterial:\n          $ref: '#/components/schemas/keyMaterial'\n    HealthInformationRequestResponse:\n      type: object\n      required:\n        - transactionId\n      properties:\n        transactionId:\n          type: string\n    consent:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    dateRange:\n      type: object\n      required:\n        - from\n        - to\n      properties:\n        from:\n          type: string\n          format: date-time\n        to:\n          type: string\n          format: date-time\n    keyMaterial:\n      type: object\n      required:\n        - cryptoAlg\n        - curve\n        - DHPublicKey\n        - nonce\n      properties:\n        cryptoAlg:\n          type: string\n          format: string\n          example: ECDH\n        curve:\n          type: string\n          format: string\n          example: Curve25519\n        dhPublicKey:\n          $ref: '#/components/schemas/keyObject'\n        nonce:\n          type: string\n          format: 32 byte string\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n    keyObject:\n      type: object\n      required:\n        - expiry\n        - parameters\n        - keyValue\n      properties:\n        expiry:\n          type: string\n          format: date-time\n        parameters:\n          type: string\n          format: string\n          example: Curve25519/32byte random key\n        keyValue:\n          type: string\n          format: string\n\n    GenerateOtpRequest:\n      type: object\n      required:\n        - username\n      properties:\n        username:\n          type: string\n          format: string\n          example: raj.sharma@ncg\n    GenerateOtpResponse:\n      type: object\n      properties:\n        sessionId:\n          type: string\n          format: uuid\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        otpMedium:\n          type: string\n          enum: [MOBILE | EMAIL]\n          example: MOBILE\n        otpMediumValue:\n          type: string\n          format: string\n          example: 9999999999\n        expiryInMinutes:\n          type: integer\n          example: 5\n    VerifyOtpRequest:\n      type: object\n      required:\n        - sessionId\n        - value\n      properties:\n        sessionId:\n          type: string\n          format: uuid\n          example: 6357247d-6b9d-425e-a9a5-6ba9915c12ea\n        value:\n          type: integer\n          example: 666666\n          description: '6 digit number'\n    VerifyOtpResponse:\n      type: object\n      properties:\n        temporaryToken:\n          type: string\n          description: JWT Token\n    MobileNumberEnquiryRequest:\n      type: object\n      required:\n        - idenitifierType\n      properties:\n        identifierType:\n          type: string\n          enum: [MOBILE]\n        identifier:\n          type: string\n    MobileNumberVerifyRequest:\n      type: object\n      required:\n        - idenitifierType\n      properties:\n        token:\n          type: string\n          description: 6 digits OTP\n    IdentifierEnquiryResponse:\n      type: object\n      properties:\n        enquiryId:\n          type: string\n          format: uuid\n        expiresIn:\n          type: integer\n          example: 300\n          description: OTP expires in seconds.\n    IdentifierVerifyResponse:\n      type: object\n      properties:\n        temporaryToken:\n          type: string\n          description: JWT Token\n    ConsentArtefacts:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConsentArtefactRepresentation'\n    PatientProfileRepresentation:\n      type: object\n      properties:\n        id:\n          type: string\n          example: user@ncg\n        name:\n          $ref: '#/components/schemas/PatientName'\n        gender:\n          $ref: '#/components/schemas/Gender'\n        dateOfBirth:\n          $ref: '#/components/schemas/DateOfBirth'\n        hasTransactionPin:\n          type: boolean\n        verifiedIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentifierReference'\n          xml:\n            name: verifiedIdentifiers\n            wrapped: true\n          example:\n            type: \"MOBILE\"\n            value: \"+91-9800083232\"\n        unverifiedIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentifierReference'\n          xml:\n            name: unverifiedIdentifiers\n            wrapped: true\n          example:\n            [\n            {type: \"PAN\", value: \"EEE****00J\"},\n            {type: \"ABPMJAYID\", value: \"P1234ABCD\"}\n            ]\n    LoginModeResponse:\n      type: object\n      properties:\n        loginType:\n          type: string\n          enum: [CREDENTIAL, OTP]\n          example: CREDENTIAL | OTP\n    IdentifierReference:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/IdentifierType'\n        value:\n          type: string\n      xml:\n        name: Identifier\n    IdentifierType:\n      type: string\n      enum: [MOBILE, PAN, ABPMJAYID]\n    Gender:\n      type: string\n      enum:\n        - M\n        - F\n        - O\n        - U\n    CreatePinRequest:\n      type: object\n      properties:\n        pin:\n          type: string\n          maximum: 9999\n          example: \"1234\"\n          description: '4 digit number'\n      required:\n        - pin\n    ValidatePinRequest:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        pin:\n          type: string\n          maximum: 9999\n          example: \"1234\"\n          description: '4 digit number'\n        scope:\n          type: string\n          enum: [consentrequest.approve, consent.revoke, profile.changepin]\n          description: 'Scope the supplied token will be valid for'\n      required:\n        - pin\n        - scope\n    ChangePinRequest:\n      type: object\n      properties:\n        pin:\n          type: string\n          maximum: 9999\n          example: \"1234\"\n          description: '4 digit number'\n      required:\n        - pin\n    CreatePatientRequest:\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/PatientName'\n        username:\n          type: string\n          example: raj.sharma@ncg\n        password:\n          type: string\n        dateOfBirth:\n          $ref: '#/components/schemas/DateOfBirth'\n        gender:\n          $ref: '#/components/schemas/Gender'\n      required:\n        - name\n        - username\n        - password\n        - gender\n    PatientName:\n      type: object\n      properties:\n        first:\n          type: string\n          example: Raj\n        last:\n          type: string\n          example: Kumar\n        middle:\n          type: string\n          example: Sharma\n      required:\n        - first\n    DateOfBirth:\n      type: object\n      properties:\n        date:\n          type: integer\n          example: 01\n        month:\n          type: integer\n          example: 01\n        year:\n          type: integer\n          example: 01\n      required:\n        - year\n    RecoverCmIdRequest:\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/PatientName'\n        gender:\n          $ref: '#/components/schemas/Gender'\n        dateOfBirth:\n          $ref: '#/components/schemas/DateOfBirth'\n        verifiedIdentifiers:\n          description: verified identifiers are passed\n          type: array\n          items:\n            $ref: '#/components/schemas/VerifiedIdentifiers'\n          xml:\n            name: verifiedIdentifiers\n            wrapped: true\n        unverifiedIdentifiers:\n          description: additional unverified identifiers may be passed\n          type: array\n          items:\n            $ref: '#/components/schemas/UnverifiedIdentifiers'\n          xml:\n            name: unverifiedIdentifiers\n            wrapped: true\n      required:\n        - name\n        - gender\n        - verifiedIdentifiers\n    RecoveryVerifyOtpResponse:\n      type: object\n      properties:\n        cmId:\n          type: string\n    UpdatePatientRequest:\n      type: object\n      properties:\n        password:\n          type: string\n      required:\n        - password\n    UpdateProfilePassword:\n      type: object\n      properties:\n        oldPassword:\n          type: string\n        newPassword:\n          type: string\n      required:\n        - oldPassword\n        - newPassword\n    AuthResponse:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          example: eyJhbGciOiJSUzI1Ni.IsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrVVp.2MXJQMjRyYXN1UW9wU2lWbkdZQUZIVFowYVZGVWpYNXFLMnNibTk0In0\n        expiresIn:\n          type: integer\n          example: 1800\n          description: In Minutes\n        refreshExpiresIn:\n          type: integer\n          example: 1800\n          description: In Minutes\n        refreshToken:\n          type: string\n          example: eyJhbGciOiJSUzI1Ni.IsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrVVp.2MXJQMjRyYXN1UW9wU2lWbkdZQUZIVFowYVZGVWpYNXFLMnNibTk0In0\n        tokenType:\n          type: string\n          example: bearer\n    RevokeRequest:\n      type: object\n      properties:\n        consents:\n          type: array\n          items:\n            type: string\n            format: uuid\n          uniqueItems: true\n    HINotification:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        transactionId:\n          type: string\n        consentId:\n          type: string\n        doneAt:\n          type: string\n          format: date-time\n        notifier:\n          type: object\n          properties:\n            type:\n              type: string\n              enum: [HIU, HIP]\n            id:\n              type: string\n              example: tmh\n        statusNotification:\n          type: object\n          properties:\n            sessionStatus:\n              type: string\n              enum: [TRANSFERRED, FAILED]\n            hipId:\n              type: string\n              example: max\n            statusResponses:\n              type: array\n              items:\n                type: object\n                properties:\n                  careContextReference:\n                    type: string\n                  hiStatus:\n                    type: string\n                    enum: [DELIVERED, OK, ERRORED]\n                    example: OK\n                  description:\n                    type: string\n    PatientIdentifier:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/PatientIdentifierType'\n        value:\n          type: string\n          example: \"+919800083232\"\n      xml:\n        name: Identifier\n    PatientIdentifierType:\n      type: string\n      enum: [MOBILE, MR]\n    VerifiedIdentifiers:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/VerifiedIdentifierType'\n        value:\n          type: string\n          example: \"+919800083232\"\n      xml:\n        name: Identifier\n    VerifiedIdentifierType:\n      type: string\n      enum: [MOBILE]\n    UnverifiedIdentifiers:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/UnverifiedIdentifierType'\n        value:\n          type: string\n      xml:\n        name: Identifier\n    UnverifiedIdentifierType:\n      type: string\n      enum: [PMJAY ID]\n    ConsentDenyRequest:\n      type: object\n      properties:\n        reason:\n          type: string\n    LogoutRequest:\n      type: object\n      properties:\n        refreshToken:\n          type: string\n    OtpVerificationRequest:\n      type: object\n      properties:\n        username:\n          type: string\n      required:\n        - username\n    OtpVerificationResponse:\n      type: object\n      properties:\n        sessionId:\n          type: string\n        meta:\n          $ref: '#/components/schemas/Meta'\n    OtpPermitRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        sessionId:\n          type: string\n        otp:\n          type: string\n      required:\n        - username\n        - otp\n        - sessionId\n    KeyResponse:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyDetail'\n          xml:\n            wrapped: true\n    KeyDetail:\n      type: object\n      properties:\n        startDate:\n          type: string\n        publicKey:\n          type: string",
			"canonicalURL": "/github.com/ProjectEKA/consent-manager@cfd93de77f7360d533d5ba27a364c35d5bf5533d/-/blob/consent/src/main/resources/static/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ProjectEKA/consent-manager/blob/cfd93de77f7360d533d5ba27a364c35d5bf5533d/consent/src/main/resources/static/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/consent-artefacts\": get: responses: code 200: contents: media: \"application/json\": generate schema: field consentArtefacts: item: field consentDetail: field consentManager: allOf: schema type mismatch: object and "
}