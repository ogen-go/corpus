{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plgd-dev/hub"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "http-gateway/swagger.yaml",
			"byteSize": 58407,
			"content": "openapi: 3.0.1\ninfo:\n  title: plgd HTTP Gateway\n  version: 2.0.0\nservers:\n  - url: \"https://try.plgd.cloud\"\npaths:\n  \"/.well-known/configuration\":\n    get:\n      tags:\n        - \"Configuration\"\n      summary: \"plgd hub clients configuration\"\n      description: |\n        Basic publicly available configuration required to connect the device to the plgd hub.\n      responses:\n        200:\n          description: Configuration\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HubConfiguration\"\n  \"/api/v1/devices\":\n    get:\n      tags:\n        - \"Devices\"\n      summary: \"Get all devices\"\n      description: |\n        All registered devices user is authorized to use are returned in form of a stream, chunk by chunk. Attach your reader and consume device by device. Various filters allows you to be more concrete in devices you would like to get. Error response might be returned immediately, but also anytime during the stream reading.\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdFilter\"\n        - $ref: \"#/components/parameters/typeFilter\"\n        - $ref: \"#/components/parameters/statusFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          description: \"Stream of devices or errors.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/Device\"\n                  error:\n                    $ref: \"#/components/schemas/Error\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n    delete:\n      tags:\n        - \"Devices\"\n      summary: \"Delete devices\"\n      description: |\n        Request to delete selected or all devices.\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          description: \"List of deleted device IDs\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deviceIds:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - \"7aaa3d7d-b8e2-4a83-5ce3-4d81ad2bf5f8\"\n                      - \"3eeac884-f38c-48dc-714f-0f36a829cb89\"\n        204:\n          $ref: \"#/components/responses/accepted\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        403:\n          $ref: \"#/components/responses/forbidden\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n  \"/api/v1/devices/{deviceId}\":\n    get:\n      tags:\n        - \"Devices\"\n      summary: \"Get device by ID\"\n      description: |\n        Get information about a single device. Alternative is to call 'Get all devices' with a `deviceId` filter query parameter.\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          description: \"Information about a single device.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n    delete:\n      tags:\n        - \"Devices\"\n      summary: \"Delete device by ID\"\n      description: |\n        Delete a single device by ID. Alternative is to call 'Delete devices' with a `deviceIdFilter` filter query parameter.\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          description: \"List of deleted device IDs\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deviceIds:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - \"7aaa3d7d-b8e2-4a83-5ce3-4d81ad2bf5f8\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n  \"/api/v1/resource-links\":\n    get:\n      tags:\n        - \"Resource Links\"\n      summary: \"Get resource links\"\n      description: |\n        Each device publishes links to its resources to the plgd hub. Authorized user can get all published links in form of a stream, chunk by chunk. Attach your reader and consume link by link. Various filters allows you to be more concrete in links you would like to get. Error response might be returned immediately, but also anytime during the stream reading.\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdFilter\"\n        - $ref: \"#/components/parameters/typeFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          description: \"Stream of resource links or errors.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/ResourceLinks\"\n                  error:\n                    $ref: \"#/components/schemas/Error\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/resource-links\":\n    get:\n      tags:\n        - \"Resource Links\"\n      summary: \"Get device's resource links\"\n      description: |\n        Get resource links published by a single device. Alternative is to call 'Get all resource links' with `deviceId` filter query parameter.\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/typeFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          description: \"Resource links of a single device.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceLinks\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n  \"/api/v1/devices/{deviceId}/resource-links/{resourceHref}\":\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n      - $ref: \"#/components/parameters/resourceHref\"\n    post:\n      tags:\n        - \"Resource Links\"\n      summary: \"Create a resource\"\n      description: |\n        This API enables you to create a new resource on a collection supporting create operation - interface `oic.if.create` shall be present. The resource is automatically published by the device, about what you are informed through an `RESOURCE_PUBLISHED` event.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      parameters:\n        - $ref: \"#/components/parameters/timeToLive\"\n      requestBody:\n        description: \"Create request as defined by the Open Connectivity Foundation.\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResourceCreateContent\"\n        required: true\n      responses:\n        200:\n          description: \"Resource create response containing href to a new resource.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Resource\"\n              example:\n                data:\n                  resourceId:\n                    href: \"/switches\"\n                    deviceId: \"4629b3cb-3a6e-477c-5d50-ccb28ad7c349\"\n                  content:\n                    href: \"/switches/1\"\n                    rt:\n                      - \"oic.r.switch.binary\"\n                    if:\n                      - \"oic.if.a\"\n                      - \"oic.if.baseline\"\n                    rep:\n                      value: false\n                  auditContext:\n                    userId: \"9772fcff-dcfb-4db8-a6c9-1b75f2165eb1\"\n                    correlationId: \"e20f1eef-2eeb-4755-b33e-139106d28e2c\"\n                  eventMetadata:\n                    connectionId: \"194.1.25.111:61692\"\n                    sequence: \"7\"\n                    version: \"0\"\n                    timestamp: \"1625427236429144178\"\n                  status: \"CREATED\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        403:\n          $ref: \"#/components/responses/forbidden\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n    delete:\n      tags:\n        - \"Resource Links\"\n      summary: \"Delete a resource\"\n      description: |\n        Request to delete a resource is an async operation. The device after successful resource deletion unpublishes the resource from the plgd hub. This information is published to the WebSocket in form of an `RESOURCE_UNPUBLISHED` event.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      parameters:\n        - $ref: \"#/components/parameters/timeToLive\"\n      responses:\n        200:\n          description: \"Confirmation event about successful resource deletion.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Resource\"\n        204:\n          $ref: \"#/components/responses/accepted\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        403:\n          $ref: \"#/components/responses/forbidden\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n  \"/api/v1/resources\":\n    get:\n      tags:\n        - \"Resources\"\n      summary: \"Get all resources\"\n      description: |\n        The plgd hub builds an up to date [Twin](https%3A%2F%2Fplgd.dev%2Ffeatures%2Fdevice-shadow%2F) for each published resource. This API allows you to retrieve shadow contents of all resources published by all device. Response is sent in form of a stream, chunk by chunk. Error response might be returned immediately, but also anytime during the stream reading.\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdFilter\"\n        - $ref: \"#/components/parameters/typeFilter\"\n        - $ref: \"#/components/parameters/resourceIdFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          description: \"Stream of resource shadow contents or errors.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      types:\n                        type: array\n                        items:\n                          type: string\n                        example:\n                          - \"oic.r.switch.binary\"\n                      data:\n                        $ref: \"#/components/schemas/Resource\"\n                  error:\n                    $ref: \"#/components/schemas/Error\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/resources/\":\n    get:\n      tags:\n        - \"Resources\"\n      summary: \"Retrieve device's resources\"\n      description: |\n        The plgd hub builds an up to date [Twin](https%3A%2F%2Fplgd.dev%2Ffeatures%2Fdevice-shadow%2F) for each published resource. This API allows you to retrieve shadow contents of all resources published by this device. Response is sent in form of a stream, chunk by chunk. Error response might be returned immediately, but also anytime during the stream reading.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/typeFilter\"\n      responses:\n        200:\n          description: \"Stream of resource shadow contents or errors.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      types:\n                        type: array\n                        items:\n                          type: string\n                        example:\n                          - \"oic.r.switch.binary\"\n                      data:\n                        $ref: \"#/components/schemas/Resource\"\n                  error:\n                    $ref: \"#/components/schemas/Error\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/resources/{resourceHref}\":\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n      - $ref: \"#/components/parameters/resourceHref\"\n    get:\n      tags:\n        - \"Resources\"\n      summary: \"Retrieve a resource\"\n      description: |\n        The plgd hub builds an up to date [Twin](https%3A%2F%2Fplgd.dev%2Ffeatures%2Fdevice-shadow%2F) for each published resource. Retrieving it's content using this API returnes an eventually consistent shadow content of the resource. There is a possibility to bypass the shadow by setting the query parameter `shadow` to `false` or by setting the interface query parameter, which allows you to set the command expiration.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      parameters:\n        - $ref: \"#/components/parameters/interface\"\n        - $ref: \"#/components/parameters/shadow\"\n        - $ref: \"#/components/parameters/timeToLive\"\n      responses:\n        200:\n          description: \"Resource content.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Resource\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n    put:\n      tags:\n        - \"Resources\"\n      summary: \"Update a resource\"\n      description: |\n        Resource update request is send directly to the device, carrying values which should be modified. Update confirmation doesn't have to carry updated content, this is up to the device implementation if it replies with an up to date values. If subscribed to the websocket, after the update command is successfully accepted by the device, event `RESOURCE_UPDATED` with matching `correlationId` is emitted. At the moment values are applied / changed on the device (e.g. resource update might trigger some processing, which was successfully requested but operation is in progress) event `RESOURCE_CHANGED` is emitted and resource shadow updated.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      parameters:\n        - $ref: \"#/components/parameters/interface\"\n        - $ref: \"#/components/parameters/timeToLive\"\n      requestBody:\n        description: \"Updated content of the resource.\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResourceContent\"\n        required: true\n      responses:\n        200:\n          description: \"Confirmation of an update. Presence of the content in the response depends on the device implementation.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceContent\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        403:\n          $ref: \"#/components/responses/forbidden\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n  \"/api/v1/devices/{deviceId}/metadata\":\n    put:\n      tags:\n        - \"Devices\"\n      summary: \"Update device metadata\"\n      description: |\n        Device metadata represent configuration of the relationship between the plgd hub and the device. It's not configuration of the device itself. [Twin](https%3A%2F%2Fplgd.dev%2Ffeatures%2Fdevice-shadow%2F) configuration is part of the metadata. By setting this value you control if the shadow for this device is kept up to date or not.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/timeToLive\"\n      requestBody:\n        description: \"Device metadata change successfully requested. If the device is online, change is immediately applied. If the device is offline, pending command is registered and executed at the moment device comes online.\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceMetadata\"\n            example:\n              twinEnabled: false\n        required: true\n      responses:\n        200:\n          description: \"Metadata successfully updated.\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        404:\n          $ref: \"#/components/responses/notFound\"\n  \"/api/v1/pending-commands\":\n    get:\n      tags:\n        - \"Pending Commands\"\n      summary: \"Get all pending commands\"\n      description: |\n        Resource shadow can be updated even if the device is offline. Each update request creates a pending command which is executed at the moment devices comes online. If the device is offline, this API allows you to retrieve all pending commands in form of a stream. Various filters allows you to be more concrete in pending commands you would like to get. Error response might be returned immediately, but also anytime during the stream reading.\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdFilter\"\n        - $ref: \"#/components/parameters/typeFilter\"\n        - $ref: \"#/components/parameters/resourceIdFilter\"\n        - $ref: \"#/components/parameters/commandFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/pendingCommands\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/pending-commands\":\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n    get:\n      tags:\n        - \"Pending Commands\"\n      summary: \"Get all resource's pending commands for a device\"\n      description: |\n        Retrieve all resource's pending commands for a single device. Alternative is to call 'Get all pending commands' with `deviceIdFilter` and `commandFilter` query parameters.\n      parameters:\n        - $ref: \"#/components/parameters/typeFilter\"\n        - $ref: \"#/components/parameters/resourceCommandFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/pendingCommands\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/pending-metadata-updates\":\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n    get:\n      tags:\n        - \"Pending Commands\"\n      summary: \"Get all pending metadata updates for a device\"\n      description: |\n        Retrieve all pending metadata updates for a single device. Alternative is to call 'Get all pending commands' with `deviceIdFilter` and `commandFilter` query parameters.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/pendingCommands\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n    delete:\n      tags:\n        - \"Pending Commands\"\n      summary: \"Cancel pending metadata update.\"\n      description: |\n        Pending metadata update is identified by the correlationId. If a `correlationIdFilter` is not specified, all pending metadata updates will be canceled.\n      parameters:\n        - $ref: \"#/components/parameters/correlationIdFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/canceledCommands\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/resources/{resourceHref}/pending-commands\":\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n      - $ref: \"#/components/parameters/resourceHref\"\n    get:\n      tags:\n        - \"Pending Commands\"\n      summary: \"Get all pending commands for a resource.\"\n      description: |\n        Retrieve all pending commands for a single resource. Alternative is to call 'Get all pending commands' with `resourceIdFilter` and `commandFilter` query parameters.\n      parameters:\n        - $ref: \"#/components/parameters/typeFilter\"\n        - $ref: \"#/components/parameters/resourceCommandFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/pendingCommands\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n    delete:\n      tags:\n        - \"Pending Commands\"\n      summary: \"Cancel pending command.\"\n      description: |\n        Pending command is identified by the correlationId. If a `correlationIdFilter` is not specified, all pending commands will be canceled.\n      parameters:\n        - $ref: \"#/components/parameters/correlationIdFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/canceledCommands\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/events\":\n    get:\n      tags:\n        - \"Resource Events\"\n      summary: \"Get resource events\"\n      description: |\n        All events from resources belonging to devices user is authorized to use are returned in form of a stream, chunk by chunk. Attach your reader and consume event by event. Filters allow you to select devices and resources of interest, and the timestamp filter allows to filter out events and return only those that occurred after a given time. Error response might be returned immediately, but also anytime during the stream reading.\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdFilter\"\n        - $ref: \"#/components/parameters/resourceIdFilter\"\n        - $ref: \"#/components/parameters/timestampFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/events\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/events\":\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n    get:\n      tags:\n        - \"Resource Events\"\n      summary: \"Get resource events from selected device\"\n      description: |\n        Get all resource events that occurred on the device with given `deviceId`. Alternative is to call 'Get resource events' with `deviceIdFilter` query parameter.\n      parameters:\n        - $ref: \"#/components/parameters/timestampFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/events\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/devices/{deviceId}/resources/{resourceHref}/events\":\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n      - $ref: \"#/components/parameters/resourceHref\"\n    get:\n      tags:\n        - \"Resource Events\"\n      summary: \"Get events from selected resource\"\n      description: |\n        Get all events that occurred on the resource from device with given `deviceId` addressable at given `resourceHref`. Alternative is to call 'Get resource events' with `resourceIdFilter` query parameter.\n      parameters:\n        - $ref: \"#/components/parameters/timestampFilter\"\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      responses:\n        200:\n          $ref: \"#/components/responses/events\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n  \"/api/v1/ws/events\":\n    post:\n      tags:\n        - \"Resource Events\"\n      summary: \"Subscribe to events\"\n      description: |\n        Open a websocket stream and receive events from devices. The contents of filters in the SubscribeToEvents message determine which events will be sent to the stream.\n        Subscription doesn't guarantee that all events will be sent to the client. The client is responsible for synchronizing events.\n      security:\n        - oauth2:\n            - \"plgd.devices\"\n      requestBody:\n        description: \"SubscribeToEvents message that opens a websocket stream\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscribeToEvents\"\n        required: true\n      responses:\n        200:\n          description: \"Stream of events\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Event\"\n        400:\n          $ref: \"#/components/responses/badRequest\"\n        401:\n          $ref: \"#/components/responses/unauthorized\"\n        403:\n          $ref: \"#/components/responses/forbidden\"\n        404:\n          $ref: \"#/components/responses/notFound\"\ncomponents:\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      description: The default OAuth API Resources.\n      flows:\n        implicit:\n          authorizationUrl: https://auth.plgd.cloud/authorize?audience=https://try.plgd.cloud\n          scopes:\n            openid: to authorize access to a user's details\n  requestBodies:\n    authorizationContext:\n      description: An access token must be send in the first message for backend mode via websocket.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              token:\n                type: string\n                description: Access token\n            example:\n              Token: 53080a4f-5e3e-4291-802f-3436238232d1\n  schemas:\n    AuditContext:\n      type: object\n      properties:\n        userId:\n          type: string\n        correlationId:\n          type: string\n    OAuthResponse:\n      type: object\n      properties:\n        code:\n          description: Device onboarding code\n          type: string\n    HubConfiguration:\n      type: object\n      properties:\n        jwtOwnerClaim:\n          description: JWT claim identifying device owner.\n          type: string\n          default: \"sub\"\n        jwtDeviceIdClaim:\n          description: JWT claim identifying device id. Empty means that JWT doesn't contain it.\n          type: string\n        id:\n          description: Unique ID of the cloud, required for device registration at the plgd hub.\n          type: string\n          format: uuid\n        coapGateway:\n          description: URL of the device endpoint - plgd CoAP Gateway where the device connects.\n          type: string\n        certificateAuthorities:\n          description: Public key of the certificate authority issuing the plgd identity certificates.\n          type: string\n        defaultCommandTimeToLive:\n          description: Exposes default command time to live in nanoseconds for CreateResource, RetrieveResource, UpdateResource, DeleteResource, and UpdateDeviceMetadata commands when it is zero value in the request. 0 - means forever.\n          type: integer\n          format: int64\n        currentTime:\n          description: Current time of server in nanoseconds.\n          type: integer\n          format: int64\n        authority:\n          description: URL of the authorization server.\n          type: string\n        httpGatewayAddress:\n          description: address where plgd HTTP Gateway handles API calls.\n          type: string\n        webOauthClient:\n          $ref: '#/components/schemas/webOAuthClient'\n        deviceOauthClient:\n          $ref: '#/components/schemas/deviceOAuthClient'\n      example:\n        jwtOwnerClaim: \"sub\"\n        authority: \"https://auth.plgd.cloud/realms/shared\"\n        id: \"adebc667-1f2b-41e3-bf5c-6d6eabc68cc6\"\n        coapGateway: \"coaps+tcp://try.plgd.cloud:5684\"\n        cloudAuthorizationProvider: \"plgd\"\n        currentTime: 1629728394151716523\n        defaultCommandTimeToLive: 0\n        certificateAuthorities: |\n          -----BEGIN CERTIFICATE-----\n          MIIBRTCB66ADAgECAhAYrP/8939ZQulrospE3RuHMAoGCCqGSM49BAMCMBIxEDAO\n          BgNVBAMTB1Jvb3QgQ0EwHhcNMjAwODE3MDcyMzM3WhcNMjEwODE3MDcyMzM3WjAS\n          MRAwDgYDVQQDEwdSb290IENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEad6z\n          XxjrEezHI8IvNH8RZkc10CM2CdaeU0S+azvpEqV+LMIh0CFLHw9WLEUaTV8JBmXU\n          m2Ien4YsLfHbAC4Q/6MjMCEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMB\n          Af8wCgYIKoZIzj0EAwIDSQAwRgIhAIyyCjzD8YzCNSY6YbnLgJ7TaXz5HPE0Eyqm\n          gfQCLUhwAiEAmfMN+GW05NyB3n5OxYHqVmHGDZJ8rHUUBCPJ3WbCweM=\n          -----END CERTIFICATE-----\n        deviceOauthClient:\n          audience: \"https://try.plgd.cloud\"\n          clientId: \"cYN3p6lwNcNlOvvUhz55KvDZLQbJeDr5\"\n          providerName: \"plgd.web\"\n          scopes: [ \"offline_access\" ]\n        httpGatewayAddress: \"https://api.try.plgd.cloud\"\n        webOauthClient: \n          audience: \"https://try.plgd.cloud\"\n          clientId: \"LXZ9OhKWWRYqf12W0B5OXduqt02q0zjS\"\n          scopes: [ \"openid\"]\n    webOAuthClient:\n      type: object\n      properties:\n        clientId:\n          description: Client ID of the web OAuth client.\n          type: string\n        audience:\n          description: Audience of the web OAuth client.\n          type: string\n        scopes:\n          description: Scopes of the web OAuth client.\n          type: array\n          items:\n            type: string\n    deviceOAuthClient:\n      type: object\n      properties:\n        clientId:\n          description: Client ID of the device OAuth client.\n          type: string\n        audience:\n          description: Audience of the device OAuth client.\n          type: string\n        providerName:\n          description: Provider name of the device OAuth client.\n          type: string\n        scopes:\n          description: Scopes of the device OAuth client.\n          type: array\n          items:\n            type: string\n    CommandType:\n      type: string\n      enum:\n        - \"RESOURCE_CREATE\"\n        - \"RESOURCE_RETRIEVE\"\n        - \"RESOURCE_UPDATE\"\n        - \"RESOURCE_DELETE\"\n        - \"DEVICE_METADATA_UPDATE\"\n    resourceCommandType:\n      type: string\n      enum:\n        - \"RESOURCE_CREATE\"\n        - \"RESOURCE_RETRIEVE\"\n        - \"RESOURCE_UPDATE\"\n        - \"RESOURCE_DELETE\"\n    ConnectionStatus:\n      type: string\n      enum:\n        - \"OFFLINE\"\n        - \"ONLINE\"\n      default: \"OFFLINE\"\n    Content:\n      type: object\n      properties:\n        data:\n          type: string\n          format: byte\n        contentType:\n          type: string\n        coapContentFormat:\n          type: integer\n          format: int32\n    Device:\n      type: object\n      properties:\n        id:\n          type: string\n        types:\n          type: array\n          items:\n            type: string\n        name:\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/DeviceMetadata\"\n        manufacturerName:\n          type: array\n          items:\n            type: object\n            properties:\n              language:\n                type: string\n              value:\n                type: string\n        modelNumber:\n          type: string\n        interfaces:\n          type: array\n          items:\n            type: string\n        protocolIndependentId:\n          type: string\n      example:\n        id: \"4629b3cb-3a6e-477c-5d50-ccb28ad7c349\"\n        types:\n          - \"oic.d.cloudDevice\"\n          - \"oic.wk.d\"\n        name: \"CloudServer\"\n        metadata:\n          connection:\n            status: \"ONLINE\"\n            onlineValidUntil: 1625262498747539632\n          twinEnabled: true\n        manufacturerName:\n          - language: \"en-US\"\n            value: \"plugged\"\n        modelNumber: \"12-d21d4-23jzi2\"\n        interfaces:\n          - \"oic.if.r\"\n          - \"oic.if.baseline\"\n        protocolIndependentId: \"cd5f73ed-51e0-4ad7-59f9-bfb0f7b4b747\"\n    DeviceMetadata:\n      type: object\n      properties:\n        status:\n          type: object\n          properties:\n            value:\n              $ref: \"#/components/schemas/ConnectionStatus\"\n            validUntil:\n              type: string\n              format: int64\n              description: \"Unix timestamp in nanoseconds.\"\n            connectedAt:\n              type: string\n              format: int64\n              description: \"Unix timestamp in nanoseconds.\"\n        twinSynchronization:\n          $ref: \"#/components/schemas/TwinSynchronization\"\n        twinEnabled:\n          $ref: \"#/components/schemas/TwinEnabled\"\n    DeviceMetadataSnapshotTaken:\n      type: object\n      properties:\n        deviceId:\n          type: string\n        deviceMetadataUpdated:\n          $ref: \"#/components/schemas/DeviceMetadataUpdated\"\n        updatePendings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DeviceMetadataUpdatePending\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    DeviceMetadataUpdated:\n      type: object\n      properties:\n        deviceId:\n          type: string\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        twinEnabled:\n          $ref: \"#/components/schemas/TwinEnabled\"\n        twinSynchronization:\n          $ref: \"#/components/schemas/TwinSynchronization\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    DeviceMetadataUpdatePending:\n      type: object\n      properties:\n        deviceId:\n          type: string\n        twinEnabled:\n          $ref: \"#/components/schemas/TwinEnabled\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    Event:\n      type: object\n      properties:\n        subscriptionId:\n          type: string\n        correlationId:\n          type: string\n        deviceRegistered:\n          $ref: \"#/components/schemas/EventDeviceRegistered\"\n        deviceUnregistered:\n          $ref: \"#/components/schemas/EventDeviceUnregistered\"\n        resourcePublished:\n          $ref: \"#/components/schemas/ResourceLinksPublished\"\n        resourceUnpublished:\n          $ref: \"#/components/schemas/ResourceLinksUnpublished\"\n        resourceChanged:\n          $ref: \"#/components/schemas/ResourceChanged\"\n        operationProcessed:\n          $ref: \"#/components/schemas/EventOperationProcessed\"\n        subscriptionCanceled:\n          $ref: \"#/components/schemas/EventSubscriptionCanceled\"\n        resourceUpdatePending:\n          $ref: \"#/components/schemas/ResourceUpdatePending\"\n        resourceUpdated:\n          $ref: \"#/components/schemas/ResourceUpdated\"\n        resourceRetrievePending:\n          $ref: \"#/components/schemas/ResourceRetrievePending\"\n        resourceRetrieved:\n          $ref: \"#/components/schemas/ResourceRetrieved\"\n        resourceDeletePending:\n          $ref: \"#/components/schemas/ResourceDeletePending\"\n        resourceDeleted:\n          $ref: \"#/components/schemas/ResourceDeleted\"\n        resourceCreatePending:\n          $ref: \"#/components/schemas/ResourceCreatePending\"\n        resourceCreated:\n          $ref: \"#/components/schemas/ResourceCreated\"\n        deviceMetadataUpdatePending:\n          $ref: \"#/components/schemas/DeviceMetadataUpdatePending\"\n        deviceMetadataUpdated:\n          $ref: \"#/components/schemas/DeviceMetadataUpdated\"\n    EventDeviceRegistered:\n      type: object\n      properties:\n        deviceIds:\n          type: array\n          items:\n            type: string\n    EventDeviceUnregistered:\n      type: object\n      properties:\n        deviceIds:\n          type: array\n          items:\n            type: string\n    EventMetadata:\n      type: object\n      properties:\n        version:\n          type: string\n          format: uint64\n        timestamp:\n          type: string\n          format: int64\n        connectionId:\n          type: string\n        sequence:\n          type: string\n          format: uint64\n    EventOperationProcessed:\n      type: object\n      properties:\n        errorStatus:\n          $ref: \"#/components/schemas/OperationProcessedErrorStatus\"\n    EventSubscriptionCanceled:\n      type: object\n      properties:\n        reason:\n          type: string\n    Error:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n        details:\n          type: array\n          items:\n            type: object\n            properties:\n              typeUrl:\n                type: string\n              value:\n                type: string\n                format: byte\n    ErrorStatusCode:\n      type: string\n      default: \"OK\"\n      enum:\n        - \"OK\"\n        - \"ERROR\"\n        - \"NOT_FOUND\"\n    OperationProcessedErrorStatus:\n      type: object\n      properties:\n        code:\n          $ref: \"#/components/schemas/ErrorStatusCode\"\n        message:\n          type: string\n    Resource:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        content:\n          oneOf:\n            - $ref: \"#/components/schemas/ResourceContent\"\n            - $ref: \"#/components/schemas/ResourceCreatedContent\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n      example:\n        resourceId:\n          href: \"/switches/1\"\n          deviceId: \"4629b3cb-3a6e-477c-5d50-ccb28ad7c349\"\n        content:\n          rt:\n            - \"oic.r.switch.binary\"\n          if:\n            - \"oic.if.a\"\n            - \"oic.if.baseline\"\n          value: false\n        auditContext:\n          userId: \"9772fcff-dcfb-4db8-a6c9-1b75f2165eb1\"\n          correlationId: \"e20f1eef-2eeb-4755-b33e-139106d28e2c\"\n        eventMetadata:\n          connectionId: \"194.1.25.111:61692\"\n          sequence: \"7\"\n          version: \"0\"\n          timestamp: \"1625427236429144178\"\n        status: \"OK\"\n    ResourceChanged:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n    ResourceContent:\n      type: object\n      example:\n        value: true\n    ResourceCreateContent:\n      type: object\n      properties:\n        rt:\n          type: array\n          items:\n            type: string\n        if:\n          type: array\n          items:\n            type: string\n        rep:\n          description: \"Resource content provided as JSON object or base64 encoded CBOR.\"\n          type: object\n        p:\n          type: object\n          properties:\n            bm:\n              type: integer\n              default: 3\n          required:\n            - bm\n      required:\n        - rt\n        - if\n        - rep\n        - p\n      example:\n        rt:\n          - \"oic.r.switch.binary\"\n        if:\n          - \"oic.if.a\"\n          - \"oic.if.baseline\"\n        rep:\n          value: false\n        p:\n          bm: 3\n    ResourceCreated:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceCreatedContent:\n      type: object\n      properties:\n        href:\n          type: string\n          format: uri\n        rt:\n          type: array\n          items:\n            type: string\n        if:\n          type: array\n          items:\n            type: string\n        rep:\n          description: \"Resource content provided as JSON object or base64 encoded CBOR.\"\n          type: object\n      example:\n        href: \"/switches/1\"\n        rt:\n          - \"oic.r.switch.binary\"\n        if:\n          - \"oic.if.a\"\n          - \"oic.if.baseline\"\n        rep:\n          value: false\n    ResourceCreatePending:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceDeleted:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceDeletePending:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceId:\n      type: object\n      properties:\n        deviceId:\n          type: string\n          format: uuid\n        href:\n          type: string\n          format: url\n    ResourceLink:\n      type: object\n      properties:\n        href:\n          type: string\n        deviceId:\n          type: string\n        resourceTypes:\n          type: array\n          items:\n            type: string\n        interfaces:\n          type: array\n          items:\n            type: string\n        anchor:\n          type: string\n        title:\n          type: string\n        supportedContentTypes:\n          type: array\n          items:\n            type: string\n        validUntil:\n          type: string\n          format: int64\n        policy:\n          type: object\n          properties:\n            bitFlags:\n              type: integer\n              format: int32\n        endpointInformations:\n          type: array\n          items:\n            type: object\n            properties:\n              endpoint:\n                type: string\n              priority:\n                type: string\n                format: int64\n    ResourceLinks:\n      type: object\n      properties:\n        resources:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ResourceLink\"\n        deviceId:\n          type: string\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n      example:\n        resources:\n          - href: \"/switches/1\"\n            deviceId: \"4629b3cb-3a6e-477c-5d50-ccb28ad7c349\"\n            resourceTypes:\n              - \"oic.r.switch.binary\"\n            interfaces:\n              - \"oic.if.a\"\n              - \"oic.if.baseline\"\n            anchor: \"\"\n            title: \"\"\n            supportedContentTypes: []\n            validUntil: \"0\"\n            policy:\n              bitFlags: 3\n            endpointInformations: []\n        deviceId: \"4629b3cb-3a6e-477c-5d50-ccb28ad7c349\"\n        auditContext:\n          userId: \"9772fcff-dcfb-4db8-a6c9-1b75f2165eb1\"\n          correlationId: \"ef007f88-6073-4af1-8951-971578bf6803\"\n        eventMetadata:\n          connectionId: \"194.1.25.111:61692\"\n          sequence: \"4\"\n          version: \"0\"\n          timestamp: \"1625432924483895839\"\n    ResourceLinksPublished:\n      $ref: \"#/components/schemas/ResourceLinks\"\n    ResourceLinksSnapshotTaken:\n      type: object\n      properties:\n        resources:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/Resource\"\n        deviceId:\n          type: string\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n    ResourceLinksUnpublished:\n      type: object\n      properties:\n        hrefs:\n          type: array\n          items:\n            type: string\n        deviceId:\n          type: string\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n      example:\n        hrefs: [\"/light/1\", \"/light/2\"]\n        deviceId: \"4629b3cb-3a6e-477c-5d50-ccb28ad7c349\"\n        auditContext:\n          userId: \"9772fcff-dcfb-4db8-a6c9-1b75f2165eb1\"\n          correlationId: \"ef007f88-6073-4af1-8951-971578bf6803\"\n        eventMetadata:\n          connectionId: \"194.1.25.111:61692\"\n          sequence: \"4\"\n          version: \"0\"\n          timestamp: \"1625432924483895839\"\n    ResourceRetrieved:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceRetrievePending:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        resourceInterface:\n          type: string\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceStateSnapshotTaken:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        latestResourceChange:\n          $ref: \"#/components/schemas/ResourceChanged\"\n        resourceCreatePendings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ResourceCreatePending\"\n        resourceRetrievePendings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ResourceRetrievePending\"\n        resourceUpdatePendings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ResourceUpdatePending\"\n        resourceDeletePendings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ResourceDeletePending\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceUpdated:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    ResourceUpdatePending:\n      type: object\n      properties:\n        resourceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        resourceInterface:\n          type: string\n        content:\n          $ref: \"#/components/schemas/Content\"\n        auditContext:\n          $ref: \"#/components/schemas/AuditContext\"\n        eventMetadata:\n          $ref: \"#/components/schemas/EventMetadata\"\n    TwinEnabled:\n      type: boolean\n      default: true\n    TwinSynchronization:\n      type: object\n      properties:\n        state:\n          $ref: \"#/components/schemas/TwinSynchronizationState\"\n        syncingAt:\n          type: string\n          format: int64\n        inSyncAt:\n          type: string\n          format: int64\n        commandMetadata:\n          $ref: \"#/components/schemas/CommandMetadata\"\n    TwinSynchronizationState:\n      type: string\n      enum:\n        - \"OUT_OF_SYNC\"\n        - \"DISABLED\"\n        - \"SYNCING\"\n        - \"IN_SYNC\"\n      default: \"OUT_OF_SYNC\"\n      description: |\n        OUT_OF_SYNC - As soon as it connects after it was offline or when it goes errorless offline or when twin enabled has been changed to true.\n        DISABLED - As soon as twin enabled is set to false.\n        SYNCING - As soon as device connects, successfully signs in and batch observe is called on device from the cloud.\n        IN_SYNC - As soon as current device resources values are received and applied to twin database. Twin was successfully reconciled after device reconnect and is kept up to date using an active subscription to device resource changes.\n    CommandMetadata:\n      type: object\n      properties:\n        connectionId:\n          type: string\n        sequence:\n          type: string\n          format: uint64\n    Status:\n      type: string\n      enum:\n        - \"UNKNOWN\"\n        - \"OK\"\n        - \"BAD_REQUEST\"\n        - \"UNAUTHORIZED\"\n        - \"FORBIDDEN\"\n        - \"NOT_FOUND\"\n        - \"UNAVAILABLE\"\n        - \"NOT_IMPLEMENTED\"\n        - \"ACCEPTED\"\n        - \"ERROR\"\n        - \"METHOD_NOT_ALLOWED\"\n        - \"CREATED\"\n    SubscribeToEvents:\n      type: object\n      properties:\n        createSubscription:\n          $ref: \"#/components/schemas/SubscribeToEventsCreateSubscription\"\n        cancelSubscription:\n          $ref: \"#/components/schemas/SubscribeToEventsCancelSubscription\"\n        correlationId:\n          type: string\n    SubscribeToEventsCancelSubscription:\n      type: object\n      properties:\n        subscriptionId:\n          type: string\n    SubscribeToEventsCreateSubscription:\n      type: object\n      properties:\n        eventFilter:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SubscribeToEventsCreateSubscriptionEvent\"\n        deviceIdFilter:\n          type: array\n          items:\n            type: string\n        resourceIdFilter:\n          type: array\n          items:\n            type: string\n    SubscribeToEventsCreateSubscriptionEvent:\n      type: string\n      default: \"REGISTERED\"\n      enum:\n        - \"REGISTERED\"\n        - \"UNREGISTERED\"\n        - \"DEVICE_METADATA_UPDATED\"\n        - \"DEVICE_METADATA_UPDATE_PENDING\"\n        - \"RESOURCE_PUBLISHED\"\n        - \"RESOURCE_UNPUBLISHED\"\n        - \"RESOURCE_UPDATE_PENDING\"\n        - \"RESOURCE_UPDATED\"\n        - \"RESOURCE_RETRIEVE_PENDING\"\n        - \"RESOURCE_RETRIEVED\"\n        - \"RESOURCE_DELETE_PENDING\"\n        - \"RESOURCE_DELETED\"\n        - \"RESOURCE_CREATE_PENDING\"\n        - \"RESOURCE_CREATED\"\n        - \"RESOURCE_CHANGED\"\n  parameters:\n    deviceId:\n      name: deviceId\n      in: path\n      description: \"Id of the device.\"\n      required: true\n      schema:\n        type: string\n        format: uuid\n    resourceHref:\n      name: resourceHref\n      in: path\n      description: \"Href of the resource.\"\n      required: true\n      schema:\n        type: string\n    shadow:\n      name: shadow\n      in: query\n      description: \"Bypass resource shadow and send the GET request directly to the device.\"\n      schema:\n        type: boolean\n        default: true\n    deviceIdFilter:\n      name: deviceId\n      in: query\n      description: \"Filter by the device id.\"\n      schema:\n        type: string\n        format: uuid\n    typeFilter:\n      name: type\n      in: query\n      description: \"Filter by the type.\"\n      schema:\n        type: array\n        items:\n          type: string\n    statusFilter:\n      name: status\n      in: query\n      description: \"Filter by the device status.\"\n      schema:\n        type: array\n        items:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n    interface:\n      name: interface\n      in: query\n      description: \"Defines the view or a way how to interact with a resource.\"\n      schema:\n        type: string\n    resourceIdFilter:\n      name: resourceId\n      in: query\n      description: \"Filter by resource id specified in format `{deviceId}+{resourceHref}`\"\n      schema:\n        type: array\n        items:\n          type: string\n          format: url\n    commandFilter:\n      name: command\n      in: query\n      description: \"Filter by the command type.\"\n      schema:\n        type: array\n        items:\n          $ref: \"#/components/schemas/CommandType\"\n    resourceCommandFilter:\n      name: command\n      in: query\n      description: \"Filter by the command type.\"\n      schema:\n        type: array\n        items:\n          $ref: \"#/components/schemas/resourceCommandType\"\n    timestampFilter:\n      name: timestamp\n      in: query\n      description: \"Filter by Unix nanoseconds timestamp\"\n      schema:\n        type: integer\n        format: int64\n    timeToLive:\n      name: timeToLive\n      in: query\n      description: \"Command expiration in nanoseconds. 0 means forever and 100ms is minimal value.\"\n      schema:\n        type: integer\n        format: int64\n        default: 0\n        minimum: 100000000\n    correlationIdFilter:\n      name: correlationIdFilter\n      in: query\n      description: \"Filter by the correlationId.\"\n      schema:\n        type: string\n        format: uuid\n  responses:\n    ok:\n      description: Content is stored in body.\n    nocontent:\n      description: No content in body.\n    accepted:\n      description: Action will asynchronously processed.\n    unauthorized:\n      description: Not authorized\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                $ref: \"#/components/schemas/Error\"\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                $ref: \"#/components/schemas/Error\"\n    badRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                $ref: \"#/components/schemas/Error\"\n    notFound:\n      description: \"Entity was not found.\"\n    pendingCommands:\n      description: \"Stream of resource links or errors.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              result:\n                $ref: \"#/components/schemas/ResourceLinks\"\n              error:\n                $ref: \"#/components/schemas/Error\"\n    canceledCommands:\n      description: \"Correlation ids of all successfully canceled commands.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              correlationIds:\n                type: array\n                items:\n                  type: string\n                  format: uuid\n    events:\n      description: \"Stream of events or error\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              properties:\n                result:\n                  properties:\n                    resourceLinksPublished:\n                      $ref: \"#/components/schemas/ResourceLinksPublished\"\n                    resourceLinksUnpublished:\n                      $ref: \"#/components/schemas/ResourceLinksUnpublished\"\n                    resourceLinksSnapshotTaken:\n                      $ref: \"#/components/schemas/ResourceLinksSnapshotTaken\"\n                    resourceChanged:\n                      $ref: \"#/components/schemas/ResourceChanged\"\n                    resourceUpdatePending:\n                      $ref: \"#/components/schemas/ResourceUpdatePending\"\n                    resourceUpdated:\n                      $ref: \"#/components/schemas/ResourceUpdated\"\n                    resourceRetrievePending:\n                      $ref: \"#/components/schemas/ResourceRetrievePending\"\n                    resourceRetrieved:\n                      $ref: \"#/components/schemas/ResourceRetrieved\"\n                    resourceDeletePending:\n                      $ref: \"#/components/schemas/ResourceDeletePending\"\n                    resourceDeleted:\n                      $ref: \"#/components/schemas/ResourceDeleted\"\n                    resourceCreatePending:\n                      $ref: \"#/components/schemas/ResourceCreatePending\"\n                    resourceCreated:\n                      $ref: \"#/components/schemas/ResourceCreated\"\n                    resourceStateSnapshotTaken:\n                      $ref: \"#/components/schemas/ResourceStateSnapshotTaken\"\n                    deviceMetadataUpdatePending:\n                      $ref: \"#/components/schemas/DeviceMetadataUpdatePending\"\n                    deviceMetadataUpdated:\n                      $ref: \"#/components/schemas/DeviceMetadataUpdated\"\n                    deviceMetadataSnapshotTaken:\n                      $ref: \"#/components/schemas/DeviceMetadataSnapshotTaken\"\n                error:\n                  $ref: \"#/components/schemas/Error\"\n",
			"canonicalURL": "/github.com/plgd-dev/hub@02b8ef8f76af9991b85f03bb0e52e8a78bd2005a/-/blob/http-gateway/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plgd-dev/hub/blob/02b8ef8f76af9991b85f03bb0e52e8a78bd2005a/http-gateway/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/api/v1/devices/{deviceId}/events\": get: responses: code 200: contents: media: \"application/json\": generate schema: save schema types: save referenced type: reference \"https://raw.githubusercontent.com/plgd-dev/hub/02b8ef8f76af9991b85f03bb0e52e8a78bd2005a/http-gateway/swagger.yaml#/components/schemas/ResourceContent\" type name conflict: \"ResourceContent\"",
	"NotImplemented": [
		"oauth2 security"
	]
}