{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cortezaproject/corteza-server"
		},
		"file": {
			"name": "federation.yaml",
			"size": 0,
			"path": "docs/federation.yaml",
			"byteSize": 18502,
			"content": "openapi: 3.0.0\ninfo:\n  title: Corteza federation API\n  description: Corteza federation REST API definition\n  version: 2020.12\n  contact:\n    email: info@cortezaproject.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\npaths:\n  '/federation/nodes/{nodeID}/handshake':\n    post:\n      tags:\n        - Federation node handshake\n      summary: Initialize the handshake step with node B\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_0\n                pairToken:\n                  type: string\n                  description: \u003e-\n                    Pairing token to authenticate handshake initialization\n                    request\n                sharedNodeID:\n                  type: string\n                  description: Remote (invoker's) node ID\n                authToken:\n                  type: string\n                  description: Authentication token so that remote\n              required:\n                - pairToken\n                - sharedNodeID\n                - authToken\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_0\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: \u0026ref_3\n            type: string\n  /federation/nodes/:\n    get:\n      tags:\n        - Federation nodes\n      summary: Search federated nodes\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Filter nodes by name and host\n          required: false\n          schema: \u0026ref_1\n            type: string\n        - in: query\n          name: status\n          description: Filter by status\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Federation nodes\n      summary: Create a new federation node\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_2\n                baseURL:\n                  type: string\n                  description: Federation API base URL\n                name:\n                  type: string\n                  description: Name for this node\n                contact:\n                  type: string\n                  description: Contact email\n                pairingURI:\n                  type: string\n                  description: Pairing URI\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_2\n  '/federation/nodes/{nodeID}':\n    get:\n      tags:\n        - Federation nodes\n      summary: Read a federation node\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n    post:\n      tags:\n        - Federation nodes\n      summary: Updates existing node\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_4\n                name:\n                  type: string\n                  description: Name for this node\n                contact:\n                  type: string\n                  description: Contact email\n                baseURL:\n                  type: string\n                  description: Federation API base URL\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_4\n    delete:\n      tags:\n        - Federation nodes\n      summary: Deletes node\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/uri':\n    post:\n      tags:\n        - Federation nodes\n      summary: Creates new sharable federation URI\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/undelete':\n    post:\n      tags:\n        - Federation nodes\n      summary: Undeletes a node\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/pair':\n    post:\n      tags:\n        - Federation nodes\n      summary: Initialize the pairing process between the two nodes\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/handshake-confirm':\n    post:\n      tags:\n        - Federation nodes\n      summary: Confirm the requested handshake\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/handshake-complete':\n    post:\n      tags:\n        - Federation nodes\n      summary: Complete the handshake\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: NodeID\n          required: true\n          schema: *ref_3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_5\n                authToken:\n                  type: string\n                  description: Node A token\n              required:\n                - authToken\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_5\n  '/federation/nodes/{nodeID}/modules/{moduleID}/exposed':\n    get:\n      tags:\n        - Manage structure\n      summary: Exposed settings for module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_3\n    post:\n      tags:\n        - Manage structure\n      summary: Update already exposed module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_6\n                composeModuleID:\n                  type: string\n                  description: Compose module id\n                composeNamespaceID:\n                  type: string\n                  description: Compose namespace id\n                name:\n                  type: string\n                  description: Module name\n                handle:\n                  type: string\n                  description: Module handle\n                fields:\n                  type: array\n                  items: \u0026ref_7\n                    type: object\n                    properties:\n                      fieldID:\n                        type: string\n                        format: uuid\n                      name:\n                        type: string\n                      kind:\n                        type: string\n                      label:\n                        type: string\n                      defaultValue:\n                        type: array\n                        items:\n                          type: string\n                      maxLength:\n                        type: integer\n                      isRequired:\n                        type: boolean\n                      isMulti:\n                        type: boolean\n                      isSystem:\n                        type: boolean\n                      options:\n                        type: object\n                  description: Exposed module fields\n              required:\n                - composeModuleID\n                - composeNamespaceID\n                - name\n                - handle\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_6\n    delete:\n      tags:\n        - Manage structure\n      summary: Remove from federation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/modules/':\n    put:\n      tags:\n        - Manage structure\n      summary: Add module to federation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_8\n                composeModuleID:\n                  type: string\n                  description: Compose module id\n                composeNamespaceID:\n                  type: string\n                  description: Compose namespace id\n                name:\n                  type: string\n                  description: Module name\n                handle:\n                  type: string\n                  description: Module handle\n                fields:\n                  type: array\n                  items: *ref_7\n                  description: Exposed module fields\n              required:\n                - composeModuleID\n                - composeNamespaceID\n                - name\n                - handle\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_8\n    get:\n      tags:\n        - Manage structure\n      summary: List of shared/exposed modules\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: query\n          name: shared\n          description: List shared modules\n          required: false\n          schema: \u0026ref_9\n            type: boolean\n        - in: query\n          name: exposed\n          description: List exposed modules\n          required: false\n          schema: *ref_9\n  '/federation/nodes/{nodeID}/modules/{moduleID}/shared':\n    get:\n      tags:\n        - Manage structure\n      summary: Shared settings for module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/modules/{moduleID}/mapped':\n    put:\n      tags:\n        - Manage structure\n      summary: Add fields mappings to federated module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_10\n                composeModuleID:\n                  type: string\n                  description: Compose module id\n                composeNamespaceID:\n                  type: string\n                  description: Compose namespace id\n                fields:\n                  type: string\n                  description: Exposed module fields\n              required:\n                - composeModuleID\n                - composeNamespaceID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_10\n    get:\n      tags:\n        - Manage structure\n      summary: Fields mappings for module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_3\n  '/federation/nodes/{nodeID}/modules/exposed/':\n    get:\n      tags:\n        - Sync structure\n      summary: List all exposed modules changes\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: query\n          name: lastSync\n          description: Last sync timestamp\n          required: false\n          schema: *ref_3\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: \u0026ref_11\n            type: string\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n  '/federation/nodes/{nodeID}/modules/exposed/records/':\n    get:\n      tags:\n        - Sync data\n      summary: List all record changes\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: query\n          name: lastSync\n          description: Last sync timestamp\n          required: false\n          schema: *ref_3\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_11\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n  '/federation/nodes/{nodeID}/modules/{moduleID}/records/':\n    get:\n      tags:\n        - Sync data\n      summary: List all records per module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: nodeID\n          description: Node ID\n          required: true\n          schema: *ref_3\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_3\n        - in: query\n          name: lastSync\n          description: Last sync timestamp\n          required: false\n          schema: *ref_3\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_11\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n  /federation/permissions/:\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve defined permissions\n      responses:\n        '200':\n          description: OK\n  /federation/permissions/effective:\n    get:\n      tags:\n        - Permissions\n      summary: Effective rules for current user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema: *ref_1\n  '/federation/permissions/{roleID}/rules':\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_3\n    delete:\n      tags:\n        - Permissions\n      summary: Remove all defined role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_3\n    patch:\n      tags:\n        - Permissions\n      summary: Update permission settings\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_12\n                rules:\n                  type: string\n                  description: List of permission rules to set\n              required:\n                - rules\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_12\n",
			"canonicalURL": "/github.com/cortezaproject/corteza-server@769dfb085bd21a7f56badf8cbc26e2ffa6d59024/-/blob/docs/federation.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cortezaproject/corteza-server/blob/769dfb085bd21a7f56badf8cbc26e2ffa6d59024/docs/federation.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/federation/nodes/{nodeID}/modules/\": put: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"fields\": nested objects not allowed"
}