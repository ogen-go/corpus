{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SFDO-Tooling/Metecho"
		},
		"file": {
			"name": "schema.yml",
			"size": 0,
			"path": "docs/api/schema.yml",
			"byteSize": 71192,
			"content": "openapi: 3.0.3\ninfo:\n  title: Metecho\n  version: 0.1.0\n  description: 2019â€“2021, Salesforce.org\npaths:\n  /api/dependencies/:\n    get:\n      operationId: dependencies_list\n      description: Dependencies available during Project creation\n      tags:\n      - dependencies\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProjectDependency'\n          description: ''\n  /api/dependencies/{id}/:\n    get:\n      operationId: dependencies_retrieve\n      description: Dependencies available during Project creation\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this project dependency.\n        required: true\n      tags:\n      - dependencies\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDependency'\n          description: ''\n  /api/epics/:\n    get:\n      operationId: epics_list\n      description: Manage Epics related to a Metecho Project.\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: project\n        schema:\n          type: string\n          format: HashID\n      - in: query\n        name: slug\n        schema:\n          type: string\n      tags:\n      - epics\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEpicList'\n          description: ''\n    post:\n      operationId: epics_create\n      description: Manage Epics related to a Metecho Project.\n      tags:\n      - epics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Epic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Epic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Epic'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n          description: ''\n  /api/epics/{id}/:\n    get:\n      operationId: epics_retrieve\n      description: Manage Epics related to a Metecho Project.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this epic.\n        required: true\n      tags:\n      - epics\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n          description: ''\n    put:\n      operationId: epics_update\n      description: Manage Epics related to a Metecho Project.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this epic.\n        required: true\n      tags:\n      - epics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Epic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Epic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Epic'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n          description: ''\n    patch:\n      operationId: epics_partial_update\n      description: Manage Epics related to a Metecho Project.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this epic.\n        required: true\n      tags:\n      - epics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedEpic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedEpic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedEpic'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n          description: ''\n    delete:\n      operationId: epics_destroy\n      description: Manage Epics related to a Metecho Project.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this epic.\n        required: true\n      tags:\n      - epics\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/epics/{id}/collaborators/:\n    post:\n      operationId: epics_collaborators_create\n      description: |-\n        Edit the Epic collaborators. Exposed as a separate endpoint for users without\n        write access to Epics.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this epic.\n        required: true\n      tags:\n      - epics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EpicCollaborators'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EpicCollaborators'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/EpicCollaborators'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n          description: ''\n    put:\n      operationId: epics_collaborators_update\n      description: |-\n        Edit the Epic collaborators. Exposed as a separate endpoint for users without\n        write access to Epics.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this epic.\n        required: true\n      tags:\n      - epics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EpicCollaborators'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EpicCollaborators'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/EpicCollaborators'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n          description: ''\n  /api/epics/{id}/create_pr/:\n    post:\n      operationId: epics_create_pr_create\n      description: Queue a job to create a GitHub pull request.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this epic.\n        required: true\n      tags:\n      - epics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePr'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreatePr'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreatePr'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Epic'\n          description: ''\n  /api/issues/:\n    get:\n      operationId: issues_list\n      description: GitHub Issues\n      parameters:\n      - in: query\n        name: id\n        schema:\n          type: string\n      - in: query\n        name: is_attached\n        schema:\n          type: boolean\n        description: Filter/exclude issues attached to Epics or Tasks\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: project\n        schema:\n          type: string\n          format: HashID\n      - in: query\n        name: search\n        schema:\n          type: string\n        description: Search in issue titles and numbers\n      tags:\n      - issues\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGitHubIssueList'\n          description: ''\n  /api/issues/{id}/:\n    get:\n      operationId: issues_retrieve\n      description: GitHub Issues\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this GitHub issue.\n        required: true\n      tags:\n      - issues\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GitHubIssue'\n          description: ''\n  /api/organizations/:\n    get:\n      operationId: organizations_list\n      description: GitHub Organizations available during Project creation\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      tags:\n      - organizations\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGitHubOrganizationList'\n          description: ''\n  /api/organizations/{id}/:\n    get:\n      operationId: organizations_retrieve\n      description: GitHub Organizations available during Project creation\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this GitHub organization.\n        required: true\n      tags:\n      - organizations\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GitHubOrganization'\n          description: ''\n  /api/organizations/{id}/check_app_installation/:\n    post:\n      operationId: organizations_check_app_installation_create\n      description: Verify the GitHub App has been installed correctly in the organization\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this GitHub organization.\n        required: true\n      tags:\n      - organizations\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GitHubAppInstallationCheck'\n          description: ''\n  /api/organizations/{id}/check_repo_name/:\n    post:\n      operationId: organizations_check_repo_name_create\n      description: Determine if a repository name is available for the Organization\n        on GitHub\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this GitHub organization.\n        required: true\n      tags:\n      - organizations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckRepoName'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CheckRepoName'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CheckRepoName'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  available:\n                    type: boolean\n          description: ''\n  /api/organizations/{id}/members/:\n    get:\n      operationId: organizations_members_list\n      description: Fetch the members of an Organization from GitHub\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this GitHub organization.\n        required: true\n      tags:\n      - organizations\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ShortGitHubUser'\n          description: ''\n  /api/projects/:\n    get:\n      operationId: projects_list\n      description: Read-only information about Metecho Projects.\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: slug\n        schema:\n          type: string\n      tags:\n      - projects\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProjectList'\n          description: ''\n    post:\n      operationId: projects_create\n      description: Read-only information about Metecho Projects.\n      tags:\n      - projects\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProjectCreate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ProjectCreate'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ProjectCreate'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n  /api/projects/{id}/:\n    get:\n      operationId: projects_retrieve\n      description: Read-only information about Metecho Projects.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this project.\n        required: true\n      tags:\n      - projects\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n  /api/projects/{id}/feature_branches/:\n    get:\n      operationId: projects_feature_branches_retrieve\n      description: Get a list of feature branch names for a Project.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this project.\n        required: true\n      tags:\n      - projects\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n          description: ''\n  /api/projects/{id}/refresh_github_issues/:\n    post:\n      operationId: projects_refresh_github_issues_create\n      description: Queue a job to refresh the list of GitHub Issues for a Project\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this project.\n        required: true\n      tags:\n      - projects\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '202':\n          description: No response body\n  /api/projects/{id}/refresh_github_users/:\n    post:\n      operationId: projects_refresh_github_users_create\n      description: Queue a job to refresh the list of GitHub users for a Project.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this project.\n        required: true\n      tags:\n      - projects\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '202':\n          description: No response body\n  /api/projects/{id}/refresh_org_config_names/:\n    post:\n      operationId: projects_refresh_org_config_names_create\n      description: Queue a job to refresh the list of ScratchOrg configs for a Project.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this project.\n        required: true\n      tags:\n      - projects\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '202':\n          description: No response body\n  /api/scratch-orgs/:\n    get:\n      operationId: scratch_orgs_list\n      description: Manage SalesForce ScratchOrgs.\n      parameters:\n      - in: query\n        name: epic\n        schema:\n          type: string\n          format: HashID\n      - in: query\n        name: project\n        schema:\n          type: string\n          format: HashID\n      - in: query\n        name: task\n        schema:\n          type: string\n          format: HashID\n      tags:\n      - scratch-orgs\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScratchOrg'\n          description: ''\n    post:\n      operationId: scratch_orgs_create\n      description: Manage SalesForce ScratchOrgs.\n      tags:\n      - scratch-orgs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScratchOrg'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ScratchOrg'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ScratchOrg'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScratchOrg'\n          description: ''\n  /api/scratch-orgs/{id}/:\n    get:\n      operationId: scratch_orgs_retrieve\n      description: Manage SalesForce ScratchOrgs.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this scratch org.\n        required: true\n      tags:\n      - scratch-orgs\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScratchOrg'\n          description: ''\n    put:\n      operationId: scratch_orgs_update\n      description: Manage SalesForce ScratchOrgs.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this scratch org.\n        required: true\n      tags:\n      - scratch-orgs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScratchOrg'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ScratchOrg'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ScratchOrg'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScratchOrg'\n          description: ''\n    patch:\n      operationId: scratch_orgs_partial_update\n      description: Manage SalesForce ScratchOrgs.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this scratch org.\n        required: true\n      tags:\n      - scratch-orgs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedScratchOrg'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedScratchOrg'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedScratchOrg'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScratchOrg'\n          description: ''\n    delete:\n      operationId: scratch_orgs_destroy\n      description: Manage SalesForce ScratchOrgs.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this scratch org.\n        required: true\n      tags:\n      - scratch-orgs\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/scratch-orgs/{id}/commit/:\n    post:\n      operationId: scratch_orgs_commit_create\n      description: Queue a job that commits changes captured from a ScratchOrg.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this scratch org.\n        required: true\n      tags:\n      - scratch-orgs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Commit'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Commit'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Commit'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScratchOrg'\n          description: ''\n  /api/scratch-orgs/{id}/redirect/:\n    get:\n      operationId: scratch_orgs_redirect_retrieve\n      description: Redirect to a ScratchOrg's URL.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this scratch org.\n        required: true\n      tags:\n      - scratch-orgs\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '302':\n          description: No response body\n  /api/scratch-orgs/{id}/refresh/:\n    post:\n      operationId: scratch_orgs_refresh_create\n      description: Queue a job that retrieves the latest changes from a ScratchOrg.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this scratch org.\n        required: true\n      tags:\n      - scratch-orgs\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScratchOrg'\n          description: ''\n  /api/tasks/:\n    get:\n      operationId: tasks_list\n      description: Manage Tasks related to a Metecho Project or Epic.\n      parameters:\n      - in: query\n        name: epic\n        schema:\n          type: string\n          format: HashID\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: project\n        schema:\n          type: string\n          format: HashID\n      - in: query\n        name: slug\n        schema:\n          type: string\n      tags:\n      - tasks\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTaskList'\n          description: ''\n    post:\n      operationId: tasks_create\n      description: Manage Tasks related to a Metecho Project or Epic.\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Task'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Task'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n  /api/tasks/{id}/:\n    get:\n      operationId: tasks_retrieve\n      description: Manage Tasks related to a Metecho Project or Epic.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n    put:\n      operationId: tasks_update\n      description: Manage Tasks related to a Metecho Project or Epic.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Task'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Task'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n    patch:\n      operationId: tasks_partial_update\n      description: Manage Tasks related to a Metecho Project or Epic.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedTask'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedTask'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedTask'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n    delete:\n      operationId: tasks_destroy\n      description: Manage Tasks related to a Metecho Project or Epic.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/tasks/{id}/assignees/:\n    post:\n      operationId: tasks_assignees_create\n      description: |-\n        Edit the assigned Developer and Tester on a Task. Exposed as a separate endpoint\n        for users without write access to Tasks.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskAssignee'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TaskAssignee'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TaskAssignee'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n    put:\n      operationId: tasks_assignees_update\n      description: |-\n        Edit the assigned Developer and Tester on a Task. Exposed as a separate endpoint\n        for users without write access to Tasks.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskAssignee'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TaskAssignee'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TaskAssignee'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n  /api/tasks/{id}/can_reassign/:\n    post:\n      operationId: tasks_can_reassign_create\n      description: Check if a GitHub user can be assigned to a Task\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CanReassign'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CanReassign'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CanReassign'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  can_reassign:\n                    type: boolean\n          description: ''\n  /api/tasks/{id}/create_pr/:\n    post:\n      operationId: tasks_create_pr_create\n      description: Queue a job to create a GitHub pull request.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePr'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreatePr'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreatePr'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n  /api/tasks/{id}/review/:\n    post:\n      operationId: tasks_review_create\n      description: Queue a job that submits a Task pull request review.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this task.\n        required: true\n      tags:\n      - tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Review'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Review'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Review'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n  /api/user/:\n    get:\n      operationId: current_user_retrieve\n      description: Get full details about the current user.\n      tags:\n      - user\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullUser'\n          description: ''\n  /api/user/agree_to_tos/:\n    put:\n      operationId: user_agree_to_tos_update\n      description: Set the user's `agreed_to_tos_at` field to the current datetime.\n      tags:\n      - user\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullUser'\n          description: ''\n  /api/user/complete_onboarding/:\n    put:\n      operationId: user_complete_onboarding_update\n      description: Set the user's `onboarded_at` field to the current datetime.\n      tags:\n      - user\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullUser'\n          description: ''\n  /api/user/disconnect/:\n    post:\n      operationId: user_disconnect_create\n      description: Disconnect the current user from their SalesForce account.\n      tags:\n      - user\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullUser'\n          description: ''\n  /api/user/guided_tour/:\n    post:\n      operationId: user_guided_tour_create\n      description: Update the user's guided-tour preferences and history.\n      tags:\n      - user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GuidedTour'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GuidedTour'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GuidedTour'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullUser'\n          description: ''\n  /api/user/refresh/:\n    post:\n      operationId: user_refresh_create\n      description: Queue a job to refresh the user's list of GitHub repositories.\n      tags:\n      - user\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '202':\n          description: No response body\n  /api/user/refresh_orgs/:\n    post:\n      operationId: user_refresh_orgs_create\n      description: Queue a job to refresh the user's list of GitHub organizations.\n      tags:\n      - user\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '202':\n          description: No response body\n  /api/users/:\n    get:\n      operationId: users_list\n      description: Read-only information about all users.\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      tags:\n      - users\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedMinimalUserList'\n          description: ''\n  /api/users/{id}/:\n    get:\n      operationId: users_retrieve\n      description: Read-only information about all users.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: HashID\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - users\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalUser'\n          description: ''\ncomponents:\n  schemas:\n    CanReassign:\n      type: object\n      properties:\n        role:\n          $ref: '#/components/schemas/RoleEnum'\n        gh_uid:\n          type: string\n      required:\n      - gh_uid\n      - role\n    CheckRepoName:\n      type: object\n      properties:\n        name:\n          type: string\n      required:\n      - name\n    Commit:\n      type: object\n      properties:\n        commit_message:\n          type: string\n        changes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        target_directory:\n          type: string\n      required:\n      - changes\n      - commit_message\n      - target_directory\n    CreatePr:\n      type: object\n      properties:\n        title:\n          type: string\n        critical_changes:\n          type: string\n        additional_changes:\n          type: string\n        issues:\n          type: string\n        notes:\n          type: string\n        alert_assigned_qa:\n          type: boolean\n      required:\n      - additional_changes\n      - alert_assigned_qa\n      - critical_changes\n      - issues\n      - notes\n      - title\n    Epic:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        description_rendered:\n          type: string\n          readOnly: true\n        slug:\n          type: string\n          readOnly: true\n        old_slugs:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        project:\n          type: string\n          format: HashID\n        task_count:\n          type: integer\n          readOnly: true\n        branch_url:\n          type: string\n          format: uri\n          readOnly: true\n        branch_diff_url:\n          type: string\n          format: uri\n          readOnly: true\n        branch_name:\n          type: string\n          pattern: ^[-\\w/]+$\n          maxLength: 100\n        has_unmerged_commits:\n          type: boolean\n          readOnly: true\n        currently_creating_branch:\n          type: boolean\n          readOnly: true\n        currently_creating_pr:\n          type: boolean\n          readOnly: true\n        pr_url:\n          type: string\n          format: uri\n          readOnly: true\n        pr_is_open:\n          type: boolean\n          readOnly: true\n        pr_is_merged:\n          type: boolean\n          readOnly: true\n        status:\n          allOf:\n          - $ref: '#/components/schemas/EpicStatusEnum'\n          readOnly: true\n        github_users:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        latest_sha:\n          type: string\n          readOnly: true\n        issue:\n          type: string\n          format: HashID\n          nullable: true\n      required:\n      - branch_diff_url\n      - branch_url\n      - created_at\n      - currently_creating_branch\n      - currently_creating_pr\n      - description_rendered\n      - github_users\n      - has_unmerged_commits\n      - id\n      - latest_sha\n      - name\n      - old_slugs\n      - pr_is_merged\n      - pr_is_open\n      - pr_url\n      - project\n      - slug\n      - status\n      - task_count\n    EpicCollaborators:\n      type: object\n      properties:\n        github_users:\n          type: array\n          items:\n            type: string\n      required:\n      - github_users\n    EpicStatusEnum:\n      enum:\n      - Planned\n      - In progress\n      - Review\n      - Merged\n      type: string\n    FullUser:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        avatar_url:\n          type: string\n          nullable: true\n          readOnly: true\n        github_id:\n          type: string\n          nullable: true\n          readOnly: true\n        is_staff:\n          type: boolean\n          title: Staff status\n          description: Designates whether the user can log into this admin site.\n        valid_token_for:\n          type: string\n          nullable: true\n          readOnly: true\n        org_name:\n          type: string\n          nullable: true\n          readOnly: true\n        org_type:\n          type: string\n          nullable: true\n          readOnly: true\n        is_devhub_enabled:\n          type: boolean\n          readOnly: true\n        sf_username:\n          type: string\n          nullable: true\n          readOnly: true\n        currently_fetching_repos:\n          type: boolean\n        currently_fetching_orgs:\n          type: boolean\n        devhub_username:\n          type: string\n        uses_global_devhub:\n          type: boolean\n          readOnly: true\n        agreed_to_tos_at:\n          type: string\n          format: date-time\n          nullable: true\n        onboarded_at:\n          type: string\n          format: date-time\n          nullable: true\n          description: Date of the last time the user completed the interactive onboarding\n        self_guided_tour_enabled:\n          type: boolean\n        self_guided_tour_state:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        organizations:\n          type: array\n          items:\n            $ref: '#/components/schemas/GitHubOrganization'\n          readOnly: true\n      required:\n      - avatar_url\n      - github_id\n      - id\n      - is_devhub_enabled\n      - org_name\n      - org_type\n      - organizations\n      - sf_username\n      - username\n      - uses_global_devhub\n      - valid_token_for\n    GitHubAppInstallationCheck:\n      type: object\n      properties:\n        success:\n          type: boolean\n        messages:\n          type: array\n          items:\n            type: string\n      required:\n      - messages\n      - success\n    GitHubIssue:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        number:\n          type: integer\n          readOnly: true\n        title:\n          type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        html_url:\n          type: string\n          format: uri\n          readOnly: true\n        project:\n          type: string\n          format: HashID\n        epic:\n          properties:\n            id:\n              type: string\n              format: HashID\n            name:\n              type: string\n            status:\n              type: string\n            slug:\n              type: string\n          nullable: true\n          readOnly: true\n        task:\n          properties:\n            id:\n              type: string\n              format: HashID\n            name:\n              type: string\n            status:\n              type: string\n            review_status:\n              type: string\n            review_valid:\n              type: boolean\n            pr_is_open:\n              type: boolean\n            slug:\n              type: string\n            epic_slug:\n              type: string\n              nullable: true\n          nullable: true\n          readOnly: true\n      required:\n      - created_at\n      - epic\n      - html_url\n      - id\n      - number\n      - project\n      - task\n      - title\n    GitHubOrganization:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        avatar_url:\n          type: string\n          format: uri\n          maxLength: 200\n      required:\n      - id\n      - name\n    GitHubUser:\n      type: object\n      description: See https://github3py.readthedocs.io/en/master/api-reference/users.html#github3.users.ShortUser\n      properties:\n        id:\n          type: string\n        login:\n          type: string\n        avatar_url:\n          type: string\n          format: uri\n        name:\n          type: string\n        permissions:\n          $ref: '#/components/schemas/RepoPermission'\n      required:\n      - login\n    GuidedTour:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        state:\n          type: object\n          additionalProperties: {}\n    MinimalUser:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        avatar_url:\n          type: string\n          nullable: true\n          readOnly: true\n      required:\n      - avatar_url\n      - id\n      - username\n    OrgConfigName:\n      type: object\n      properties:\n        key:\n          type: string\n        label:\n          type: string\n        description:\n          type: string\n      required:\n      - key\n    OrgTypeEnum:\n      enum:\n      - Dev\n      - QA\n      - Playground\n      type: string\n    PaginatedEpicList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Epic'\n    PaginatedGitHubIssueList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/GitHubIssue'\n    PaginatedGitHubOrganizationList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/GitHubOrganization'\n    PaginatedMinimalUserList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/MinimalUser'\n    PaginatedProjectList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Project'\n    PaginatedTaskList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n    PatchedEpic:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        description_rendered:\n          type: string\n          readOnly: true\n        slug:\n          type: string\n          readOnly: true\n        old_slugs:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        project:\n          type: string\n          format: HashID\n        task_count:\n          type: integer\n          readOnly: true\n        branch_url:\n          type: string\n          format: uri\n          readOnly: true\n        branch_diff_url:\n          type: string\n          format: uri\n          readOnly: true\n        branch_name:\n          type: string\n          pattern: ^[-\\w/]+$\n          maxLength: 100\n        has_unmerged_commits:\n          type: boolean\n          readOnly: true\n        currently_creating_branch:\n          type: boolean\n          readOnly: true\n        currently_creating_pr:\n          type: boolean\n          readOnly: true\n        pr_url:\n          type: string\n          format: uri\n          readOnly: true\n        pr_is_open:\n          type: boolean\n          readOnly: true\n        pr_is_merged:\n          type: boolean\n          readOnly: true\n        status:\n          allOf:\n          - $ref: '#/components/schemas/EpicStatusEnum'\n          readOnly: true\n        github_users:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        latest_sha:\n          type: string\n          readOnly: true\n        issue:\n          type: string\n          format: HashID\n          nullable: true\n    PatchedScratchOrg:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        project:\n          type: string\n          format: HashID\n          nullable: true\n        epic:\n          type: string\n          format: HashID\n          nullable: true\n        task:\n          type: string\n          format: HashID\n          nullable: true\n        org_type:\n          $ref: '#/components/schemas/OrgTypeEnum'\n        owner:\n          type: string\n          format: HashID\n          readOnly: true\n        description:\n          type: string\n        description_rendered:\n          type: string\n          readOnly: true\n        last_modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        expires_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        latest_commit:\n          type: string\n          readOnly: true\n        latest_commit_url:\n          type: string\n          format: uri\n          readOnly: true\n        latest_commit_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        last_checked_unsaved_changes_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        unsaved_changes:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        total_unsaved_changes:\n          type: integer\n          readOnly: true\n        has_unsaved_changes:\n          type: boolean\n          readOnly: true\n        ignored_changes:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        ignored_changes_write:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        total_ignored_changes:\n          type: integer\n          readOnly: true\n        has_ignored_changes:\n          type: boolean\n          readOnly: true\n        currently_refreshing_changes:\n          type: boolean\n          readOnly: true\n        currently_capturing_changes:\n          type: boolean\n          readOnly: true\n        currently_refreshing_org:\n          type: boolean\n          readOnly: true\n        currently_reassigning_user:\n          type: boolean\n          readOnly: true\n        is_created:\n          type: boolean\n          readOnly: true\n        delete_queued_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        owner_gh_username:\n          type: string\n          readOnly: true\n        owner_gh_id:\n          type: string\n          readOnly: true\n          nullable: true\n        has_been_visited:\n          type: boolean\n          readOnly: true\n        valid_target_directories:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        org_config_name:\n          type: string\n    PatchedTask:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        description_rendered:\n          type: string\n          readOnly: true\n        epic:\n          type: string\n          format: HashID\n          nullable: true\n        project:\n          type: string\n          format: HashID\n          nullable: true\n        slug:\n          type: string\n          readOnly: true\n        old_slugs:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        has_unmerged_commits:\n          type: boolean\n          readOnly: true\n        currently_creating_branch:\n          type: boolean\n          readOnly: true\n        currently_creating_pr:\n          type: boolean\n          readOnly: true\n        branch_name:\n          type: string\n          pattern: ^[-\\w/]+$\n          maxLength: 100\n        root_project:\n          type: string\n          readOnly: true\n        branch_url:\n          type: string\n          format: uri\n          readOnly: true\n        commits:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        origin_sha:\n          type: string\n          readOnly: true\n        branch_diff_url:\n          type: string\n          format: uri\n          readOnly: true\n        pr_url:\n          type: string\n          format: uri\n          readOnly: true\n        issue:\n          type: string\n          format: HashID\n          nullable: true\n        review_submitted_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        review_valid:\n          type: boolean\n          readOnly: true\n        review_status:\n          allOf:\n          - $ref: '#/components/schemas/ReviewStatusEnum'\n          readOnly: true\n        review_sha:\n          type: string\n          readOnly: true\n        status:\n          allOf:\n          - $ref: '#/components/schemas/TaskStatusEnum'\n          readOnly: true\n        pr_is_open:\n          type: boolean\n          readOnly: true\n        assigned_dev:\n          type: string\n          nullable: true\n          maxLength: 50\n        assigned_qa:\n          type: string\n          readOnly: true\n          nullable: true\n        dev_org:\n          type: string\n          format: HashID\n          writeOnly: true\n        currently_submitting_review:\n          type: boolean\n          readOnly: true\n        org_config_name:\n          type: string\n    Project:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        repo_url:\n          type: string\n          format: uri\n          readOnly: true\n        repo_owner:\n          type: string\n        repo_name:\n          type: string\n        has_truncated_issues:\n          type: boolean\n          readOnly: true\n        has_push_permission:\n          type: boolean\n          readOnly: true\n        description:\n          type: string\n        description_rendered:\n          type: string\n          readOnly: true\n        is_managed:\n          type: boolean\n        slug:\n          type: string\n        old_slugs:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        branch_prefix:\n          type: string\n        github_users:\n          type: array\n          items:\n            $ref: '#/components/schemas/GitHubUser'\n        github_issue_count:\n          type: integer\n          readOnly: true\n        repo_image_url:\n          type: string\n          format: uri\n          readOnly: true\n        org_config_names:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrgConfigName'\n          readOnly: true\n        currently_fetching_org_config_names:\n          type: boolean\n          readOnly: true\n        currently_fetching_github_users:\n          type: boolean\n          readOnly: true\n        latest_sha:\n          type: string\n          readOnly: true\n        currently_fetching_issues:\n          type: boolean\n          readOnly: true\n      required:\n      - currently_fetching_github_users\n      - currently_fetching_issues\n      - currently_fetching_org_config_names\n      - description_rendered\n      - github_issue_count\n      - has_push_permission\n      - has_truncated_issues\n      - id\n      - latest_sha\n      - name\n      - old_slugs\n      - org_config_names\n      - repo_image_url\n      - repo_name\n      - repo_owner\n      - repo_url\n      - slug\n    ProjectCreate:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        organization:\n          type: string\n          format: HashID\n        repo_name:\n          type: string\n        github_users:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShortGitHubUser'\n        dependencies:\n          type: array\n          items:\n            type: string\n            format: HashID\n      required:\n      - dependencies\n      - github_users\n      - name\n      - organization\n      - repo_name\n    ProjectDependency:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        recommended:\n          type: boolean\n      required:\n      - id\n      - name\n    RepoPermission:\n      type: object\n      properties:\n        push:\n          type: boolean\n        pull:\n          type: boolean\n        admin:\n          type: boolean\n    Review:\n      type: object\n      properties:\n        notes:\n          type: string\n        status:\n          $ref: '#/components/schemas/ReviewStatusEnum'\n        delete_org:\n          type: boolean\n        org:\n          type: string\n          format: HashID\n          nullable: true\n      required:\n      - delete_org\n      - notes\n      - org\n      - status\n    ReviewStatusEnum:\n      enum:\n      - Approved\n      - Changes requested\n      type: string\n    RoleEnum:\n      enum:\n      - assigned_qa\n      - assigned_dev\n      type: string\n    ScratchOrg:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        project:\n          type: string\n          format: HashID\n          nullable: true\n        epic:\n          type: string\n          format: HashID\n          nullable: true\n        task:\n          type: string\n          format: HashID\n          nullable: true\n        org_type:\n          $ref: '#/components/schemas/OrgTypeEnum'\n        owner:\n          type: string\n          format: HashID\n          readOnly: true\n        description:\n          type: string\n        description_rendered:\n          type: string\n          readOnly: true\n        last_modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        expires_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        latest_commit:\n          type: string\n          readOnly: true\n        latest_commit_url:\n          type: string\n          format: uri\n          readOnly: true\n        latest_commit_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        last_checked_unsaved_changes_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        unsaved_changes:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        total_unsaved_changes:\n          type: integer\n          readOnly: true\n        has_unsaved_changes:\n          type: boolean\n          readOnly: true\n        ignored_changes:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        ignored_changes_write:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        total_ignored_changes:\n          type: integer\n          readOnly: true\n        has_ignored_changes:\n          type: boolean\n          readOnly: true\n        currently_refreshing_changes:\n          type: boolean\n          readOnly: true\n        currently_capturing_changes:\n          type: boolean\n          readOnly: true\n        currently_refreshing_org:\n          type: boolean\n          readOnly: true\n        currently_reassigning_user:\n          type: boolean\n          readOnly: true\n        is_created:\n          type: boolean\n          readOnly: true\n        delete_queued_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        owner_gh_username:\n          type: string\n          readOnly: true\n        owner_gh_id:\n          type: string\n          readOnly: true\n          nullable: true\n        has_been_visited:\n          type: boolean\n          readOnly: true\n        valid_target_directories:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        org_config_name:\n          type: string\n      required:\n      - currently_capturing_changes\n      - currently_reassigning_user\n      - currently_refreshing_changes\n      - currently_refreshing_org\n      - delete_queued_at\n      - description_rendered\n      - expires_at\n      - has_been_visited\n      - has_ignored_changes\n      - has_unsaved_changes\n      - id\n      - ignored_changes\n      - is_created\n      - last_checked_unsaved_changes_at\n      - last_modified_at\n      - latest_commit\n      - latest_commit_at\n      - latest_commit_url\n      - org_config_name\n      - org_type\n      - owner\n      - owner_gh_id\n      - owner_gh_username\n      - total_ignored_changes\n      - total_unsaved_changes\n      - unsaved_changes\n      - url\n      - valid_target_directories\n    ShortGitHubUser:\n      type: object\n      description: See https://github3py.readthedocs.io/en/master/api-reference/users.html#github3.users.ShortUser\n      properties:\n        id:\n          type: string\n        login:\n          type: string\n        avatar_url:\n          type: string\n          format: uri\n      required:\n      - login\n    Task:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        description_rendered:\n          type: string\n          readOnly: true\n        epic:\n          type: string\n          format: HashID\n          nullable: true\n        project:\n          type: string\n          format: HashID\n          nullable: true\n        slug:\n          type: string\n          readOnly: true\n        old_slugs:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        has_unmerged_commits:\n          type: boolean\n          readOnly: true\n        currently_creating_branch:\n          type: boolean\n          readOnly: true\n        currently_creating_pr:\n          type: boolean\n          readOnly: true\n        branch_name:\n          type: string\n          pattern: ^[-\\w/]+$\n          maxLength: 100\n        root_project:\n          type: string\n          readOnly: true\n        branch_url:\n          type: string\n          format: uri\n          readOnly: true\n        commits:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        origin_sha:\n          type: string\n          readOnly: true\n        branch_diff_url:\n          type: string\n          format: uri\n          readOnly: true\n        pr_url:\n          type: string\n          format: uri\n          readOnly: true\n        issue:\n          type: string\n          format: HashID\n          nullable: true\n        review_submitted_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        review_valid:\n          type: boolean\n          readOnly: true\n        review_status:\n          allOf:\n          - $ref: '#/components/schemas/ReviewStatusEnum'\n          readOnly: true\n        review_sha:\n          type: string\n          readOnly: true\n        status:\n          allOf:\n          - $ref: '#/components/schemas/TaskStatusEnum'\n          readOnly: true\n        pr_is_open:\n          type: boolean\n          readOnly: true\n        assigned_dev:\n          type: string\n          nullable: true\n          maxLength: 50\n        assigned_qa:\n          type: string\n          readOnly: true\n          nullable: true\n        dev_org:\n          type: string\n          format: HashID\n          writeOnly: true\n        currently_submitting_review:\n          type: boolean\n          readOnly: true\n        org_config_name:\n          type: string\n      required:\n      - assigned_qa\n      - branch_diff_url\n      - branch_url\n      - commits\n      - created_at\n      - currently_creating_branch\n      - currently_creating_pr\n      - currently_submitting_review\n      - description_rendered\n      - has_unmerged_commits\n      - id\n      - name\n      - old_slugs\n      - org_config_name\n      - origin_sha\n      - pr_is_open\n      - pr_url\n      - review_sha\n      - review_status\n      - review_submitted_at\n      - review_valid\n      - root_project\n      - slug\n      - status\n    TaskAssignee:\n      type: object\n      properties:\n        assigned_dev:\n          type: string\n          nullable: true\n        assigned_qa:\n          type: string\n          nullable: true\n        should_alert_dev:\n          type: boolean\n        should_alert_qa:\n          type: boolean\n    TaskStatusEnum:\n      enum:\n      - Planned\n      - In progress\n      - Completed\n      - Canceled\n      type: string\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: sessionid\n    tokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\n",
			"canonicalURL": "/github.com/SFDO-Tooling/Metecho@67b1cca15d5c87d8f6fc23bf95ea4cd0d12e5aae/-/blob/docs/api/schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/SFDO-Tooling/Metecho/blob/67b1cca15d5c87d8f6fc23bf95ea4cd0d12e5aae/docs/api/schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/projects/\": post: requestBody: contents: application/x-www-form-urlencoded: form parameter \"github_users\": nested objects not allowed",
	"NotImplemented": [
		"cookie security"
	]
}