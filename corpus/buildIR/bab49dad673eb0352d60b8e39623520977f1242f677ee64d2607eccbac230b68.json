{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "openstf.io-2.3.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/openstf.io-2.3.0-swagger.yaml",
			"byteSize": 10868,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: contact@openstf.io\n    name: STF Team\n    url: http://openstf.io/\n    x-twitter: open_stf\n  description: Control and manages real Smartphone devices from browser and restful apis\n  license:\n    name: Apache-2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  title: Smartphone Test Farm\n  version: 2.3.0\n  x-apisguru-categories:\n    - telecom\n  x-logo:\n    url: https://twitter.com/open_stf/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/openstf/stf/master/lib/units/api/swagger/api_v1_generated.json\n      version: \"2.0\"\n  x-providerName: openstf.io\ntags:\n  - description: User Operations\n    name: user\n  - description: Device Operations\n    name: devices\npaths:\n  /devices:\n    get:\n      description: The devices endpoint return list of all the STF devices including\n        Disconnected and Offline\n      operationId: getDevices\n      parameters:\n        - description: Fields query parameter takes a comma seperated list of fields. Only\n            listed field will be return in response\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: List of Devices\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceListResponse\"\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: Device List\n      tags:\n        - devices\n  \"/devices/{serial}\":\n    get:\n      description: The device enpoint return information about a single device\n      operationId: getDeviceBySerial\n      parameters:\n        - description: Device Serial\n          in: path\n          name: serial\n          required: true\n          schema:\n            type: string\n        - description: Fields query parameter takes a comma seperated list of fields. Only\n            listed field will be return in response\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Device Information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceResponse\"\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: Device Information\n      tags:\n        - devices\n  /swagger.json: {}\n  /user:\n    get:\n      description: The User Profile endpoint returns information about current authorized\n        user\n      operationId: getUser\n      responses:\n        \"200\":\n          description: Current User Profile information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: User Profile\n      tags:\n        - user\n  /user/accessTokens:\n    get:\n      description: The Access Tokens endpoints returns titles of all the valid access tokens\n      operationId: getUserAccessTokens\n      responses:\n        \"200\":\n          description: Access Tokens titles\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessTokensResponse\"\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: Access Tokens\n      tags:\n        - user\n  /user/devices:\n    get:\n      description: The User Devices endpoint returns device list owner by current\n        authorized user\n      operationId: getUserDevices\n      parameters:\n        - description: Fields query parameter takes a comma seperated list of fields. Only\n            listed field will be return in response\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Current User Devices List\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceListResponse\"\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: User Devices\n      tags:\n        - user\n    post:\n      description: The User Devices endpoint will request stf server for a new device.\n      operationId: addUserDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddUserDevicePayload\"\n          application/octet-stream:\n            schema:\n              $ref: \"#/components/schemas/AddUserDevicePayload\"\n        description: Device to add\n        required: true\n      responses:\n        \"200\":\n          description: Add User Device Status\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: Add a device to a user\n      tags:\n        - user\n  \"/user/devices/{serial}\":\n    delete:\n      description: The User Devices endpoint will request for device release from stf\n        server. It will return request accepted if device is being used by\n        current user\n      operationId: deleteUserDeviceBySerial\n      parameters:\n        - description: Device Serial\n          in: path\n          name: serial\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Delete User Device Status\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: Delete User Device\n      tags:\n        - user\n    get:\n      description: The devices enpoint return information about device owned by user\n      operationId: getUserDeviceBySerial\n      parameters:\n        - description: Device Serial\n          in: path\n          name: serial\n          required: true\n          schema:\n            type: string\n        - description: Fields query parameter takes a comma seperated list of fields. Only\n            listed field will be return in response\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Device Information owned by user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceResponse\"\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: User Device\n      tags:\n        - user\n  \"/user/devices/{serial}/remoteConnect\":\n    delete:\n      description: The device connect endpoint will request stf server to disconnect\n        remotely\n      operationId: remoteDisconnectUserDeviceBySerial\n      parameters:\n        - description: Device Serial\n          in: path\n          name: serial\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Remote Disonnect User Device Request Status\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: Remote Disconnect\n      tags:\n        - user\n    post:\n      description: The device connect endpoint will request stf server to connect remotely\n      operationId: remoteConnectUserDeviceBySerial\n      parameters:\n        - description: Device Serial\n          in: path\n          name: serial\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Remote Connect User Device Request Status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RemoteConnectUserDeviceResponse\"\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      security:\n        - accessTokenAuth: []\n      summary: Remote Connect\n      tags:\n        - user\nservers:\n  - url: http://openstf.local/api/v1\n  - url: https://openstf.local/api/v1\ncomponents:\n  securitySchemes:\n    accessTokenAuth:\n      in: header\n      name: authorization\n      type: apiKey\n  schemas:\n    AccessTokensResponse:\n      properties:\n        tokens:\n          items:\n            type: string\n          type: array\n      required:\n        - tokens\n    AddUserDevicePayload:\n      description: payload object for adding device to user\n      properties:\n        serial:\n          description: Device Serial\n          type: string\n        timeout:\n          description: Device timeout in ms. If device is kept idle for this period, it\n            will be automatically disconnected. Default is provider group\n            timeout\n          type: integer\n      required:\n        - serial\n    DeviceListResponse:\n      properties:\n        devices:\n          items:\n            type: object\n          type: array\n      required:\n        - devices\n    DeviceResponse:\n      properties:\n        device:\n          type: object\n      required:\n        - device\n    ErrorResponse:\n      properties:\n        message:\n          type: string\n      required:\n        - message\n    RemoteConnectUserDeviceResponse:\n      properties:\n        remoteConnectUrl:\n          type: string\n        serial:\n          type: string\n      required:\n        - remoteConnectUrl\n        - serial\n    UserResponse:\n      properties:\n        user:\n          type: object\n      required:\n        - user\n"
		}
	},
	"Error": "buildIR: make ir: path \"/user/devices\": post: requestBody: contents: application/octet-stream: octet stream with \"object\" schema not supported"
}