{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/readme/oas-examples"
		},
		"file": {
			"name": "readme.yaml",
			"size": 0,
			"path": "3.0/yaml/readme.yaml",
			"byteSize": 56214,
			"content": "openapi: 3.0.2\ninfo:\n  description: Create beautiful product and API documentation with our developer friendly\n    platform.\n  version: 2.0.0\n  title: API Endpoints\n  contact:\n    name: API Support\n    url: https://docs.readme.com/docs/contact-support\n    email: support@readme.io\nservers:\n  - url: https://dash.readme.io/api/v1\n  - url: https://dash.readme.com/api/v1\n  - url: http://dash.readme.local:3000/api/v1\ntags:\n  - name: API Registry\n  - name: API Specification\n  - name: Apply to ReadMe\n  - name: Categories\n  - name: Changelog\n  - name: Custom Pages\n  - name: Docs\n  - name: Errors\n  - name: Projects\n  - name: Version\npaths:\n  '/api-registry/{uuid}':\n    get:\n      operationId: getAPIRegistry\n      summary: Retrieve an entry from the API Registry\n      description: Get an API definition file that's been uploaded to ReadMe\n      tags:\n        - API Registry\n      parameters:\n        - name: uuid\n          in: path\n          description: An API Registry UUID. This can be found by navigating to your\n            API Reference page and viewing code snippets for Node with the `api` library.\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successfully retrieved API registry entry.\n          content:\n            application/json:\n              schema:\n                type: object\n        '404':\n          '$ref': '#/components/responses/error_REGISTRY_NOTFOUND'\n  '/api-specification':\n    get:\n      operationId: getAPISpecification\n      summary: Get metadata\n      description: Get API specification metadata\n      tags:\n        - API Specification\n      parameters:\n        - '$ref': '#/components/parameters/perPage'\n        - '$ref': '#/components/parameters/page'\n        - '$ref': '#/components/parameters/x-readme-version'\n      responses:\n        '200':\n          description: Successfully retrieved API specification metadata.\n          headers:\n            Link:\n              '$ref': '#/components/headers/link'\n            x-total-count:\n              '$ref': '#/components/headers/x-total-count'\n        '400':\n          '$ref': '#/components/responses/error_VERSION_EMPTY'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_VERSION_NOTFOUND'\n      security:\n        - apiKey: []\n    post:\n      operationId: uploadAPISpecification\n      summary: Upload specification\n      description: Upload an API specification to ReadMe. Or, to use a newer solution\n        see https://docs.readme.com/docs/automatically-sync-api-specification-with-github\n      tags:\n        - API Specification\n      parameters:\n        - '$ref': '#/components/parameters/x-readme-version'\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                spec:\n                  description: OpenAPI/Swagger file\n                  type: string\n                  format: binary\n      responses:\n        '201':\n          description: The API specification successfully imported\n        '400':\n          description: There was a validation error during import\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - '$ref': '#/components/schemas/error_SPEC_FILE_EMPTY'\n                  - '$ref': '#/components/schemas/error_SPEC_INVALID'\n                  - '$ref': '#/components/schemas/error_SPEC_INVALID_SCHEMA'\n                  - '$ref': '#/components/schemas/error_SPEC_VERSION_NOTFOUND'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '408':\n          '$ref': '#/components/responses/error_SPEC_TIMEOUT'\n      security:\n        - apiKey: []\n  '/api-specification/{id}':\n    put:\n      operationId: updateAPISpecification\n      summary: Update specification\n      description: Update an API specification in ReadMe\n      tags:\n        - API Specification\n      parameters:\n        - name: id\n          in: path\n          description: ID of the API specification. The unique ID for each API can be\n            found by navigating to your **API Definitions** page.\n          schema:\n            type: string\n          required: true\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                spec:\n                  description: OpenAPI/Swagger file\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: The API specification was updated\n        '400':\n          description: There was a validation error during import\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - '$ref': '#/components/schemas/error_SPEC_FILE_EMPTY'\n                  - '$ref': '#/components/schemas/error_SPEC_ID_DUPLICATE'\n                  - '$ref': '#/components/schemas/error_SPEC_ID_INVALID'\n                  - '$ref': '#/components/schemas/error_SPEC_INVALID'\n                  - '$ref': '#/components/schemas/error_SPEC_INVALID_SCHEMA'\n                  - '$ref': '#/components/schemas/error_SPEC_VERSION_NOTFOUND'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          description: There is no API specification with that ID\n        '408':\n          '$ref': '#/components/responses/error_SPEC_TIMEOUT'\n      security:\n        - apiKey: []\n    delete:\n      operationId: deleteAPISpecification\n      summary: Delete specification\n      description: Delete an API specification in ReadMe\n      tags:\n        - API Specification\n      parameters:\n        - name: id\n          in: path\n          description: ID of the API specification. The unique ID for each API can be\n            found by navigating to your **API Definitions** page.\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: The API specification was deleted\n        '400':\n          '$ref': '#/components/responses/error_SPEC_ID_INVALID'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_SPEC_NOTFOUND'\n      security:\n        - apiKey: []\n  '/apply':\n    get:\n      operationId: getOpenRoles\n      summary: Get open roles\n      description: Returns all the roles we're hiring for at ReadMe!\n      tags:\n        - Apply to ReadMe\n      responses:\n        '200':\n          description: All the roles that we're hiring for.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  '$ref': '#/components/schemas/jobOpening'\n    post:\n      operationId: applyToReadMe\n      summary: Submit your application!\n      description: This endpoint will let you apply to a job at ReadMe programatically,\n        without having to go through our UI!\n      tags:\n        - Apply to ReadMe\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/apply'\n      responses:\n        '200':\n          description: You did it!\n  '/categories':\n    get:\n      operationId: getCategories\n      summary: Get all categories\n      description: Returns all the categories for a specified version\n      tags:\n        - Categories\n      parameters:\n        - '$ref': '#/components/parameters/x-readme-version'\n        - '$ref': '#/components/parameters/perPage'\n        - '$ref': '#/components/parameters/page'\n      responses:\n        '200':\n          description: The list of categories\n          headers:\n            Link:\n              '$ref': '#/components/headers/link'\n            x-total-count:\n              '$ref': '#/components/headers/x-total-count'\n      security:\n        - apiKey: []\n    post:\n      operationId: createCategory\n      summary: Create category\n      description: Create a new category inside of this project\n      tags:\n        - Categories\n      parameters:\n        - '$ref': '#/components/parameters/x-readme-version'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - '$ref': '#/components/schemas/category'\n                - required:\n                    - title\n      responses:\n        '201':\n          description: The category has successfully been created\n        '400':\n          '$ref': '#/components/responses/error_CATEGORY_INVALID'\n      security:\n        - apiKey: []\n  '/categories/{slug}':\n    get:\n      operationId: getCategory\n      summary: Get category\n      description: Returns the category with this slug\n      tags:\n        - Categories\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the category title. Slugs must be\n            all lowercase, and replace spaces with hyphens. For example, for the the\n            category \"Getting Started\", enter the slug \"getting-started\"\n          example: getting-started\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      responses:\n        '200':\n          description: The category exists and has been returned\n        '404':\n          '$ref': '#/components/responses/error_CATEGORY_NOTFOUND'\n      security:\n        - apiKey: []\n    put:\n      operationId: updateCategory\n      summary: Update category\n      description: Change the properties of a category.\n      tags:\n        - Categories\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the category title. Slugs must be\n            all lowercase, and replace spaces with hyphens. For example, for the the\n            category \"Getting Started\", enter the slug \"getting-started\"\n          example: getting-started\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/category'\n      responses:\n        '200':\n          description: The category has successfully been updated\n        '400':\n          '$ref': '#/components/responses/error_CATEGORY_INVALID'\n        '404':\n          '$ref': '#/components/responses/error_CATEGORY_NOTFOUND'\n      security:\n        - apiKey: []\n    delete:\n      operationId: deleteCategory\n      summary: Delete category\n      description: |-\n        Delete the category with this slug.\n        \u003e⚠️Heads Up!\n        \u003e This will also delete all of the docs within this category.\n      tags:\n        - Categories\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the category title. Slugs must be\n            all lowercase, and replace spaces with hyphens. For example, for the the\n            category \"Getting Started\", enter the slug \"getting-started\"\n          example: getting-started\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      responses:\n        '204':\n          description: The category has successfully been deleted\n        '404':\n          '$ref': '#/components/responses/error_CATEGORY_NOTFOUND'\n      security:\n        - apiKey: []\n  '/categories/{slug}/docs':\n    get:\n      operationId: getCategoryDocs\n      summary: Get docs for category\n      description: Returns the docs and children docs within this category\n      tags:\n        - Categories\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the category title. Slugs must be\n            all lowercase, and replace spaces with hyphens. For example, for the the\n            category \"Getting Started\", enter the slug \"getting-started\"\n          example: getting-started\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      responses:\n        '200':\n          description: The category exists and all of the docs have been returned\n        '404':\n          '$ref': '#/components/responses/error_CATEGORY_NOTFOUND'\n      security:\n        - apiKey: []\n  '/changelogs':\n    get:\n      operationId: getChangelogs\n      summary: Get changelogs\n      description: Returns a list of changelogs associated with the project API key\n      tags:\n        - Changelog\n      parameters:\n        - '$ref': '#/components/parameters/perPage'\n        - '$ref': '#/components/parameters/page'\n      responses:\n        '200':\n          description: The list of changelogs\n          headers:\n            Link:\n              '$ref': '#/components/headers/link'\n            x-total-count:\n              '$ref': '#/components/headers/x-total-count'\n      security:\n        - apiKey: []\n    post:\n      operationId: createChangelog\n      summary: Create changelog\n      description: Create a new changelog inside of this project\n      tags:\n        - Changelog\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/changelog'\n      responses:\n        '201':\n          description: The changelog has successfully been created\n        '400':\n          description: There was a validation error during creation\n      security:\n        - apiKey: []\n  '/changelogs/{slug}':\n    get:\n      operationId: getChangelog\n      summary: Get changelog\n      description: Returns the changelog with this slug\n      tags:\n        - Changelog\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the changelog title. Slugs must\n            be all lowercase, and replace spaces with hyphens. For example, for the\n            the changelog \"Owlet Weekly Update\", enter the slug \"owlet-weekly-update\"\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The changelog exists and has been returned\n        '404':\n          description: There is no changelog with that slug\n      security:\n        - apiKey: []\n    put:\n      operationId: updateChangelog\n      summary: Update changelog\n      description: Update a changelog with this slug\n      tags:\n        - Changelog\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the changelog title. Slugs must\n            be all lowercase, and replace spaces with hyphens. For example, for the\n            the changelog \"Owlet Weekly Update\", enter the slug \"owlet-weekly-update\"\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/changelog'\n      responses:\n        '200':\n          description: The changelog has successfully been updated\n        '400':\n          description: There was a validation error during update\n        '404':\n          description: There is no changelog with that slug\n      security:\n        - apiKey: []\n    delete:\n      operationId: deleteChangelog\n      summary: Delete changelog\n      description: Delete the changelog with this slug\n      tags:\n        - Changelog\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the changelog title. Slugs must\n            be all lowercase, and replace spaces with hyphens. For example, for the\n            the changelog \"Owlet Weekly Update\", enter the slug \"owlet-weekly-update\"\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The changelog has successfully been updated\n        '404':\n          description: There is no changelog with that slug\n      security:\n        - apiKey: []\n  '/custompages':\n    get:\n      operationId: getCustomPages\n      summary: Get custom pages\n      description: Returns a list of custom pages associated with the project API\n        key\n      tags:\n        - Custom Pages\n      parameters:\n        - '$ref': '#/components/parameters/perPage'\n        - '$ref': '#/components/parameters/page'\n      responses:\n        '200':\n          description: The list of custom pages\n          headers:\n            Link:\n              '$ref': '#/components/headers/link'\n            x-total-count:\n              '$ref': '#/components/headers/x-total-count'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n      security:\n        - apiKey: []\n    post:\n      operationId: createCustomPage\n      summary: Create custom page\n      description: Create a new custom page inside of this project\n      tags:\n        - Custom Pages\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/customPage'\n      responses:\n        '201':\n          description: The custom page has successfully been created\n        '400':\n          '$ref': '#/components/responses/error_CUSTOMPAGE_INVALID'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n      security:\n        - apiKey: []\n  '/custompages/{slug}':\n    get:\n      operationId: getCustomPage\n      summary: Get custom page\n      description: Returns the custom page with this slug\n      tags:\n        - Custom Pages\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the custom page title. Slugs must\n            be all lowercase, and replace spaces with hyphens. For example, for the\n            the custom page \"Getting Started\", enter the slug \"getting-started\"\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The custom page exists and has been returned\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_CUSTOMPAGE_NOTFOUND'\n      security:\n        - apiKey: []\n    put:\n      operationId: updateCustomPage\n      summary: Update custom page\n      description: Update a custom page with this slug\n      tags:\n        - Custom Pages\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the custom page title. Slugs must\n            be all lowercase, and replace spaces with hyphens. For example, for the\n            the custom page \"Getting Started\", enter the slug \"getting-started\"\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/customPage'\n      responses:\n        '200':\n          description: The custom page has successfully been updated\n        '400':\n          '$ref': '#/components/responses/error_CUSTOMPAGE_INVALID'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_CUSTOMPAGE_NOTFOUND'\n      security:\n        - apiKey: []\n    delete:\n      operationId: deleteCustomPage\n      summary: Delete custom page\n      description: Delete the custom page with this slug\n      tags:\n        - Custom Pages\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the custom page title. Slugs must\n            be all lowercase, and replace spaces with hyphens. For example, for the\n            the custom page \"Getting Started\", enter the slug \"getting-started\"\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The custom page has successfully been updated\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_CUSTOMPAGE_NOTFOUND'\n      security:\n        - apiKey: []\n  '/docs/{slug}':\n    get:\n      operationId: getDoc\n      summary: Get doc\n      description: Returns the doc with this slug\n      tags:\n        - Docs\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the doc title. Slugs must be all\n            lowercase, and replace spaces with hyphens. For example, for the the doc\n            \"New Features\", enter the slug \"new-features\"\n          example: new-features\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      responses:\n        '200':\n          description: The doc exists and has been returned\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_DOC_NOTFOUND'\n      security:\n        - apiKey: []\n    put:\n      operationId: updateDoc\n      summary: Update doc\n      description: Update a doc with this slug\n      tags:\n        - Docs\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the doc title. Slugs must be all\n            lowercase, and replace spaces with hyphens. For example, for the the doc\n            \"New Features\", enter the slug \"new-features\"\n          example: new-features\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/doc'\n      responses:\n        '200':\n          description: The doc has successfully been updated\n        '400':\n          '$ref': '#/components/responses/error_DOC_INVALID'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_DOC_NOTFOUND'\n      security:\n        - apiKey: []\n    delete:\n      operationId: deleteDoc\n      summary: Delete doc\n      description: Delete the doc with this slug\n      tags:\n        - Docs\n      parameters:\n        - name: slug\n          in: path\n          description: A URL-safe representation of the doc title. Slugs must be all\n            lowercase, and replace spaces with hyphens. For example, for the the doc\n            \"New Features\", enter the slug \"new-features\"\n          example: new-features\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      responses:\n        '204':\n          description: The doc has successfully been updated\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_DOC_NOTFOUND'\n      security:\n        - apiKey: []\n  '/docs':\n    post:\n      operationId: createDoc\n      summary: Create doc\n      description: Create a new doc inside of this project\n      tags:\n        - Docs\n      parameters:\n        - '$ref': '#/components/parameters/x-readme-version'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/doc'\n      responses:\n        '201':\n          description: The doc has successfully been created\n        '400':\n          '$ref': '#/components/responses/error_DOC_INVALID'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n      security:\n        - apiKey: []\n  '/docs/search':\n    post:\n      operationId: searchDocs\n      summary: Search docs\n      description: Returns all docs that match the search\n      tags:\n        - Docs\n      parameters:\n        - name: search\n          in: query\n          description: Search string to look for\n          required: true\n          schema:\n            type: string\n        - '$ref': '#/components/parameters/x-readme-version'\n      responses:\n        '200':\n          description: The search was successful and results were returned\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n      security:\n        - apiKey: []\n  '/errors':\n    get:\n      operationId: getErrors\n      summary: Get errors\n      description: Returns with all of the error page types for this project\n      tags:\n        - Errors\n      responses:\n        '200':\n          description: An array of the errors\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n      security:\n        - apiKey: []\n  '/':\n    get:\n      operationId: getProject\n      summary: Get metadata about the current project\n      description: Returns project data for API key\n      tags:\n        - Projects\n      responses:\n        '200':\n          description: Project data\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/condensedProjectData'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n      security:\n        - apiKey: []\n  '/version':\n    get:\n      operationId: getVersions\n      summary: Get versions\n      description: Retrieve a list of versions associated with a project API key\n      tags:\n        - Version\n      responses:\n        '200':\n          description: JSON list of versions\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n      security:\n        - apiKey: []\n    post:\n      operationId: createVersion\n      summary: Create version\n      description: Create a new version\n      tags:\n        - Version\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/version'\n      responses:\n        '200':\n          description: The model was successfully created and associated with the\n            target project\n        '400':\n          description: There was a validation error during creation\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - '$ref': '#/components/schemas/error_VERSION_EMPTY'\n                  - '$ref': '#/components/schemas/error_VERSION_DUPLICATE'\n                  - '$ref': '#/components/schemas/error_VERSION_FORK_EMPTY'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_VERSION_FORK_NOTFOUND'\n      security:\n        - apiKey: []\n  '/version/{versionId}':\n    get:\n      operationId: getVersion\n      summary: Get version\n      description: Returns the version with this version ID\n      tags:\n        - Version\n      parameters:\n        - '$ref': '#/components/parameters/versionId'\n      responses:\n        '200':\n          description: The version exists and has been returned\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_VERSION_NOTFOUND'\n      security:\n        - apiKey: []\n    put:\n      operationId: updateVersion\n      summary: Update version\n      description: Update an existing version\n      tags:\n        - Version\n      parameters:\n        - '$ref': '#/components/parameters/versionId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              '$ref': '#/components/schemas/version'\n      responses:\n        '200':\n          description: The target version was successfully updated\n        '400':\n          '$ref': '#/components/responses/error_VERSION_CANT_DEMOTE_STABLE'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_VERSION_NOTFOUND'\n      security:\n        - apiKey: []\n    delete:\n      operationId: deleteVersion\n      summary: Delete version\n      description: Delete a version\n      tags:\n        - Version\n      parameters:\n        - '$ref': '#/components/parameters/versionId'\n      responses:\n        '200':\n          description: The target version was successfully deleted\n        '400':\n          '$ref': '#/components/responses/error_VERSION_CANT_REMOVE_STABLE'\n        '401':\n          '$ref': '#/components/responses/authUnauthorized'\n        '403':\n          '$ref': '#/components/responses/authForbidden'\n        '404':\n          '$ref': '#/components/responses/error_VERSION_NOTFOUND'\n      security:\n        - apiKey: []\ncomponents:\n  securitySchemes:\n    apiKey:\n      type: http\n      scheme: basic\n  headers:\n    link:\n      description: Pagination information. See https://docs.readme.com/reference/pagination\n        for more information.\n      schema:\n        type: string\n    x-total-count:\n      description: The total amount of results, ignoring pagination. See https://docs.readme.com/reference/pagination\n        for more information about pagination.\n      schema:\n        type: string\n  parameters:\n    page:\n      name: page\n      in: query\n      description: Used to specify further pages (starts at 1)\n      schema:\n        type: integer\n        default: 1\n        minimum: 1\n    perPage:\n      name: perPage\n      in: query\n      description: Number of items to include in pagination (up to 100, defaults to\n        10)\n      schema:\n        type: integer\n        default: 10\n        minimum: 1\n        maximum: 100\n    x-readme-version:\n      in: header\n      name: x-readme-version\n      description: Version number of your docs project, for example, v3.0. By default\n        the main project version is used. To see all valid versions for your docs\n        project call https://docs.readme.com/reference/version#getversions.\n      example: v3.0\n      required: false\n      schema:\n        type: string\n    versionId:\n      name: versionId\n      in: path\n      description: Semver identifier for the project version. For best results, use\n        the formatted `version_clean` value listed in the response from the [Get Versions\n        endpoint](/reference/getversions).\n      example: v1.0.0\n      required: true\n      schema:\n        type: string\n  responses:\n    authForbidden:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - '$ref': '#/components/schemas/error_APIKEY_MISMATCH'\n    authUnauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - '$ref': '#/components/schemas/error_APIKEY_EMPTY'\n              - '$ref': '#/components/schemas/error_APIKEY_NOTFOUND'\n    error_APIKEY_EMPTY:\n      description: An API key was not supplied.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_APIKEY_EMPTY'\n    error_APIKEY_MISMATCH:\n      description: The API key doesn't match the project\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_APIKEY_MISMATCH'\n    error_APIKEY_NOTFOUND:\n      description: The API key couldn't be located.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_APIKEY_NOTFOUND'\n    error_APPLY_INVALID_EMAIL:\n      description: You need to provide a valid email.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_APPLY_INVALID_EMAIL'\n    error_APPLY_INVALID_JOB:\n      description: You need to provide a job.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_APPLY_INVALID_JOB'\n    error_APPLY_INVALID_NAME:\n      description: You need to provide a name.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_APPLY_INVALID_NAME'\n    error_CATEGORY_INVALID:\n      description: The category couldn't be saved.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_CATEGORY_INVALID'\n    error_CATEGORY_NOTFOUND:\n      description: The category couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_CATEGORY_NOTFOUND'\n    error_CHANGELOG_INVALID:\n      description: The changelog couldn't be saved.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_CHANGELOG_INVALID'\n    error_CHANGELOG_NOTFOUND:\n      description: The changelog couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_CHANGELOG_NOTFOUND'\n    error_CUSTOMPAGE_INVALID:\n      description: The page couldn't be saved.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_CUSTOMPAGE_INVALID'\n    error_CUSTOMPAGE_NOTFOUND:\n      description: The custom page couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_CUSTOMPAGE_NOTFOUND'\n    error_DOC_INVALID:\n      description: The doc couldn't be saved.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_DOC_INVALID'\n    error_DOC_NOTFOUND:\n      description: The doc couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_DOC_NOTFOUND'\n    error_ENDPOINT_NOTFOUND:\n      description: The endpoint doesn't exist.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_ENDPOINT_NOTFOUND'\n    error_INTERNAL_ERROR:\n      description: An unknown error has occurred.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_INTERNAL_ERROR'\n    error_PROJECT_NOTFOUND:\n      description: The project couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_PROJECT_NOTFOUND'\n    error_REGISTRY_NOTFOUND:\n      description: The registry entry couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_REGISTRY_NOTFOUND'\n    error_SPEC_FILE_EMPTY:\n      description: A spec file wasn't included.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_FILE_EMPTY'\n    error_SPEC_ID_DUPLICATE:\n      description: The spec ID already tied to another version.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_ID_DUPLICATE'\n    error_SPEC_ID_INVALID:\n      description: The spec ID isn't valid.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_ID_INVALID'\n    error_SPEC_INVALID:\n      description: The uploaded spec isn't valid JSON or YAML.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_INVALID'\n    error_SPEC_INVALID_SCHEMA:\n      description: The uploaded spec has OpenAPI validation errors.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_INVALID_SCHEMA'\n    error_SPEC_NOTFOUND:\n      description: The spec couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_NOTFOUND'\n    error_SPEC_TIMEOUT:\n      description: The spec upload timed out.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_TIMEOUT'\n    error_SPEC_VERSION_NOTFOUND:\n      description: The spec version couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_SPEC_VERSION_NOTFOUND'\n    error_UNEXPECTED_ERROR:\n      description: An unknown error has occurred.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_UNEXPECTED_ERROR'\n    error_VERSION_CANT_DEMOTE_STABLE:\n      description: A stable version can't be demoted.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_CANT_DEMOTE_STABLE'\n    error_VERSION_CANT_REMOVE_STABLE:\n      description: A stable version can't be removed.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_CANT_REMOVE_STABLE'\n    error_VERSION_DUPLICATE:\n      description: The version already exists.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_DUPLICATE'\n    error_VERSION_EMPTY:\n      description: No version was supplied.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_EMPTY'\n    error_VERSION_FORK_EMPTY:\n      description: New versions need to be forked from an existing version.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_FORK_EMPTY'\n    error_VERSION_FORK_NOTFOUND:\n      description: The version couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_FORK_NOTFOUND'\n    error_VERSION_INVALID:\n      description: The version is invalid.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_INVALID'\n    error_VERSION_NOTFOUND:\n      description: The version couldn't be found.\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/error_VERSION_NOTFOUND'\n  schemas:\n    baseError:\n      type: object\n      properties:\n        error:\n          type: string\n          description: An error code unique to the error received.\n        message:\n          type: string\n          description: The reason why the error occured.\n        suggestion:\n          type: string\n          description: A helpful suggestion for how to alleviate the error.\n        docs:\n          type: string\n          format: url\n          description: A [ReadMe Metrics](https://readme.com/metrics/) log URL where\n            you can see more information the request that you made. If we have metrics\n            URLs unavailable for your request, this URL will be a URL to our API Reference.\n          example: https://docs.readme.com/logs/6883d0ee-cf79-447a-826f-a48f7d5bdf5f\n        help:\n          type: string\n          description: Information on where you can receive additional assistance\n            from our wonderful support team.\n          example: If you need help, email support@readme.io\n        poem:\n          type: array\n          description: A short poem we wrote you about your error.\n          items:\n            type: string\n          example:\n            - If you're seeing this error,\n            - Things didn't quite go the way we hoped.\n            - When we tried to process your request,\n            - Maybe trying again it'll work—who knows!\n    apply:\n      type: object\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: Your full name\n          default: Your Name\n        email:\n          type: string\n          format: email\n          description: A valid email we can reach you at\n          default: you@example.com\n        job:\n          type: string\n          description: The job you're looking to apply for (https://readme.com/careers)\n          enum:\n            - Content Marketing Manager\n            - Engineering Manager\n            - Head of People\n            - Marketing Campaigns Manager\n            - Marketing Designer\n            - Product Designer\n            - Product Education Manager\n            - Sales Development Representative\n            - Support Engineer (Weekends)\n          default: Content Marketing Manager\n        pronouns:\n          type: string\n          description: Learn more at https://pronoun.is/\n        linkedin:\n          type: string\n          format: url\n          description: What have you been up to the past few years?\n        github:\n          type: string\n          description: Or Bitbucket, Gitlab or anywhere else your code is hosted!\n          format: url\n        coverLetter:\n          type: string\n          format: blob\n          description: What should we know about you?\n        dontReallyApply:\n          type: boolean\n          description: Want to play with the API but not actually apply? Set this\n            to true.\n          default: false\n      required:\n        - name\n        - email\n        - job\n    category:\n      type: object\n      properties:\n        title:\n          type: string\n          description: A short title for the category. This is what will show in the\n            sidebar.\n        type:\n          type: string\n          enum:\n            - reference\n            - guide\n          default: guide\n          description: A category can be part of your reference or guide documentation,\n            which is determined by this field.\n    changelog:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title of the changelog\n        type:\n          type: string\n          default: ''\n          enum:\n            - ''\n            - added\n            - fixed\n            - improved\n            - deprecated\n            - removed\n        body:\n          type: string\n          description: Body content of the changelog\n        hidden:\n          type: boolean\n          description: Visibility of the changelog\n          default: true\n      required:\n        - title\n        - body\n    condensedProjectData:\n      type: object\n      properties:\n        name:\n          type: string\n        subdomain:\n          type: string\n        jwtSecret:\n          type: string\n        baseUrl:\n          type: string\n          format: url\n          description: The base URL for the project. If the project is not running\n            under a custom domain, it will be `https://projectSubdomain.readme.io`,\n            otherwise it can either be or `https://example.com` or, in the case of\n            an enterprise child project `https://example.com/projectSubdomain`.\n        plan:\n          type: string\n    customPage:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title of the custom page\n        body:\n          description: Body formatted in Markdown (displayed by default).\n          type: string\n        html:\n          description: Body formatted in HTML (sanitized, only displayed if `htmlmode`\n            is **true**).\n          type: string\n        htmlmode:\n          description: '**true** if `html` should be displayed, **false** if `body`\n            should be displayed.'\n          type: boolean\n          default: false\n        hidden:\n          type: boolean\n          description: Visibility of the custom page\n          default: true\n      required:\n        - title\n    doc:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title of the page\n        type:\n          type: string\n          description: Type of the page. The available types all show up under the\n            /docs/ URL path of your docs project (also known as the \"guides\" section).\n            Can be \"basic\" (most common), \"error\" (page desribing an API error), or\n            \"link\" (page that redirects to an external link)\n          enum:\n            - basic\n            - error\n            - link\n        body:\n          type: string\n          description: Body content of the page, formatted in ReadMe or GitHub flavored\n            Markdown. Accepts long page content, for example, greater than 100k characters\n        category:\n          type: string\n          description: 'Category ID of the page, which you can get through https://docs.readme.com/reference/categories#getcategory '\n        hidden:\n          type: boolean\n          description: Visibility of the page\n          default: true\n        order:\n          type: integer\n          description: The position of the page in your project sidebar.\n          default: 999\n        parentDoc:\n          type: string\n          description: For a subpage, specify the parent doc ID, which you can get\n            through https://docs.readme.com/reference/docs#getdoc\n        error:\n          type: object\n          properties:\n            code:\n              type: string\n              description: The error code for docs with the \"error\" type\n      required:\n        - title\n        - category\n    version:\n      type: object\n      properties:\n        version:\n          type: string\n          description: Semantic Version\n        codename:\n          type: string\n          description: Dubbed name of version\n        from:\n          type: string\n          description: Semantic Version to use as the base fork\n        is_stable:\n          type: boolean\n          description: Should this be the **main** version\n        is_beta:\n          type: boolean\n          default: true\n        is_hidden:\n          type: boolean\n          description: Should this be publically accessible?\n        is_deprecated:\n          type: boolean\n          description: Should this be deprecated? Only allowed in PUT operations\n      required:\n        - version\n        - from\n    jobOpening:\n      type: object\n      properties:\n        slug:\n          type: string\n          description: A slugified version of the job opening title.\n          example: api-engineer\n        title:\n          type: string\n          description: The job opening position.\n          example: API Engineer\n        description:\n          type: string\n          description: The description for this open position. This content is formatted\n            as HTML.\n        pullquote:\n          type: string\n          description: A short pullquote for the open position.\n          example: Deeply knowledgeable of the web, HTTP, and the API space.\n        location:\n          type: string\n          description: Where this position is located at.\n          example: Remote\n        department:\n          type: string\n          description: The internal organization you'll be working in.\n          example: Engineering\n        url:\n          type: string\n          format: url\n          description: The place where you can apply for the position!\n    error_APIKEY_EMPTY:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: APIKEY_EMPTY\n    error_APIKEY_MISMATCH:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: APIKEY_MISMATCH\n    error_APIKEY_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: APIKEY_NOTFOUND\n    error_APPLY_INVALID_EMAIL:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: APPLY_INVALID_EMAIL\n    error_APPLY_INVALID_JOB:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: APPLY_INVALID_JOB\n    error_APPLY_INVALID_NAME:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: APPLY_INVALID_NAME\n    error_CATEGORY_INVALID:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: CATEGORY_INVALID\n    error_CATEGORY_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: CATEGORY_NOTFOUND\n    error_CHANGELOG_INVALID:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: CHANGELOG_INVALID\n    error_CHANGELOG_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: CHANGELOG_NOTFOUND\n    error_CUSTOMPAGE_INVALID:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: CUSTOMPAGE_INVALID\n    error_CUSTOMPAGE_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: CUSTOMPAGE_NOTFOUND\n    error_DOC_INVALID:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: DOC_INVALID\n    error_DOC_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: DOC_NOTFOUND\n    error_ENDPOINT_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: ENDPOINT_NOTFOUND\n    error_INTERNAL_ERROR:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: INTERNAL_ERROR\n    error_PROJECT_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: PROJECT_NOTFOUND\n    error_REGISTRY_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: REGISTRY_NOTFOUND\n    error_SPEC_FILE_EMPTY:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_FILE_EMPTY\n    error_SPEC_ID_DUPLICATE:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_ID_DUPLICATE\n    error_SPEC_ID_INVALID:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_ID_INVALID\n    error_SPEC_INVALID:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_INVALID\n    error_SPEC_INVALID_SCHEMA:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_INVALID_SCHEMA\n    error_SPEC_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_NOTFOUND\n    error_SPEC_TIMEOUT:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_TIMEOUT\n    error_SPEC_VERSION_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: SPEC_VERSION_NOTFOUND\n    error_UNEXPECTED_ERROR:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: UNEXPECTED_ERROR\n    error_VERSION_CANT_DEMOTE_STABLE:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_CANT_DEMOTE_STABLE\n    error_VERSION_CANT_REMOVE_STABLE:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_CANT_REMOVE_STABLE\n    error_VERSION_DUPLICATE:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_DUPLICATE\n    error_VERSION_EMPTY:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_EMPTY\n    error_VERSION_FORK_EMPTY:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_FORK_EMPTY\n    error_VERSION_FORK_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_FORK_NOTFOUND\n    error_VERSION_INVALID:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_INVALID\n    error_VERSION_NOTFOUND:\n      allOf:\n        - '$ref': '#/components/schemas/baseError'\n        - type: object\n          properties:\n            error:\n              type: string\n              default: VERSION_NOTFOUND\n",
			"canonicalURL": "/npm/readme/oas-examples@c1172d94f9ee52c3c1847b73f9ae1ad55945824b/-/blob/3.0/yaml/readme.yaml",
			"externalURLs": []
		}
	},
	"Error": "buildIR: make ir: path \"/categories\": post: requestBody: contents: media: \"application/json\": generate schema: allOf: schema type mismatch: object and ",
	"NotImplemented": [
		"discriminator inference"
	]
}