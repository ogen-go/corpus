{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/twitter.com/current/2.21/openapi.yaml",
			"byteSize": 129919,
			"content": "openapi: 3.0.0\nservers:\n  - description: Twitter API\n    url: https://api.twitter.com\ninfo:\n  contact:\n    name: Twitter Developers\n    url: https://developer.twitter.com/\n    x-twitter: twitter\n  description: Twitter API v2 available endpoints\n  license:\n    name: Twitter Developer Agreement and Policy\n    url: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html\n  termsOfService: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html\n  title: Twitter API v2\n  version: \"2.21\"\n  x-apisguru-categories:\n    - social\n  x-logo:\n    url: https://twitter.com/twitter/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://api.twitter.com/2/openapi.json\n      version: \"3.0\"\n  x-providerName: twitter.com\n  x-serviceName: current\n  x-tags:\n    - pii\ntags:\n  - description: Endpoints related to keeping Twitter data in your systems compliant\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction\n    name: Compliance\n  - description: Miscellaneous endpoints for general API functionality\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/twitter-api\n    name: General\n  - description: Endpoints related to retrieving, managing Lists\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/twitter-api/lists\n    name: Lists\n  - description: Endpoints related to retrieving, managing Spaces\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/twitter-api/spaces\n    name: Spaces\n  - description: Endpoints related to retrieving, searching, and modifying Tweets\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/twitter-api/tweets/lookup\n    name: Tweets\n  - description: Endpoints related to retrieving, managing relationships of Users\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/twitter-api/users/lookup\n    name: Users\npaths:\n  /2/openapi.json:\n    get:\n      description: Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)\n      operationId: getOpenApiSpec\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: The request was successful\n      summary: Returns the open api spec document.\n      tags:\n        - General\n  /2/spaces:\n    get:\n      description: Returns a variety of information about the Spaces specified by the requested IDs\n      operationId: findSpacesByIds\n      parameters:\n        - description: A list of space ids\n          in: query\n          name: ids\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/SpaceID\"\n            minItems: 1\n            type: array\n        - $ref: \"#/components/parameters/SpaceFieldsParameter\"\n        - $ref: \"#/components/parameters/SpaceExpansionsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultiSpaceLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Space lookup up Space IDs\n      tags:\n        - Spaces\n  /2/spaces/by/creator_ids:\n    get:\n      description: Returns a variety of information about the Spaces created by the provided User IDs\n      operationId: findSpacesByCreatorIds\n      parameters:\n        - description: The users to search through\n          in: query\n          name: user_ids\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/UserID\"\n            minItems: 1\n            type: array\n        - $ref: \"#/components/parameters/SpaceFieldsParameter\"\n        - $ref: \"#/components/parameters/SpaceExpansionsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultiSpaceLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Space lookup by their creators\n      tags:\n        - Spaces\n  /2/spaces/search:\n    get:\n      description: Returns Spaces that match the provided query.\n      operationId: searchSpaces\n      parameters:\n        - description: The search query\n          example: crypto\n          in: query\n          name: query\n          required: true\n          schema:\n            description: The query to use in the Spaces search endpoint\n            example: crypto\n            type: string\n        - description: The state of spaces to search for\n          in: query\n          name: state\n          required: true\n          schema:\n            description: The current state of the space.\n            enum:\n              - live\n              - scheduled\n            example: live\n            type: string\n        - description: The number of results to return. The maximum for this value is 100.\n          in: query\n          name: max_results\n          required: false\n          schema:\n            description: The number of results to return\n            example: 25\n            format: int32\n            maximum: 100\n            minimum: 1\n            type: integer\n        - $ref: \"#/components/parameters/SpaceFieldsParameter\"\n        - $ref: \"#/components/parameters/SpaceExpansionsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultiSpaceLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Search for Spaces\n      tags:\n        - Spaces\n  \"/2/spaces/{id}\":\n    get:\n      description: Returns a variety of information about the Space specified by the requested ID\n      operationId: findSpaceById\n      parameters:\n        - description: The space id to be retrieved\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/SpaceID\"\n        - $ref: \"#/components/parameters/SpaceFieldsParameter\"\n        - $ref: \"#/components/parameters/SpaceExpansionsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SingleSpaceLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Space lookup by Space ID\n      tags:\n        - Spaces\n  /2/tweets:\n    get:\n      description: Returns a variety of information about the Tweet specified by the requested ID\n      operationId: findTweetsById\n      parameters:\n        - description: A comma separated list of Tweet IDs. Up to 100 are allowed in a single request.\n          explode: false\n          in: query\n          name: ids\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/TweetID\"\n            maxItems: 100\n            minItems: 1\n            type: array\n          style: form\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultiTweetLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Tweet lookup by Tweet IDs\n      tags:\n        - Tweets\n  /2/tweets/counts/all:\n    get:\n      description: Returns Tweet Counts that match a search query.\n      operationId: tweetCountsFullArchiveSearch\n      parameters:\n        - description: One query/rule/filter for matching Tweets. Up to 2048 characters.\n          in: query\n          name: query\n          required: true\n          schema:\n            example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet\n            maxLength: 2048\n            minLength: 1\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).\n          in: query\n          name: start_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).\n          in: query\n          name: end_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.\n          in: query\n          name: since_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: Returns results with a Tweet ID less than (that is, older than) the specified ID.\n          in: query\n          name: until_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.\n          in: query\n          name: next_token\n          required: false\n          schema:\n            minLength: 1\n            type: string\n        - description: The granularity for the search counts results.\n          in: query\n          name: granularity\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Granularity\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TweetCountsResponse\"\n          description: Tweet counts response\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Full archive search counts\n      tags:\n        - Tweets\n  /2/tweets/counts/recent:\n    get:\n      description: Returns Tweet Counts from the last 7 days that match a search query.\n      operationId: tweetCountsRecentSearch\n      parameters:\n        - description: One query/rule/filter for matching Tweets. Up to 2048 characters.\n          in: query\n          name: query\n          required: true\n          schema:\n            example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet\n            maxLength: 2048\n            minLength: 1\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).\n          in: query\n          name: start_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).\n          in: query\n          name: end_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.\n          in: query\n          name: since_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: Returns results with a Tweet ID less than (that is, older than) the specified ID.\n          in: query\n          name: until_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.\n          in: query\n          name: next_token\n          required: false\n          schema:\n            minLength: 1\n            type: string\n        - description: The granularity for the search counts results.\n          in: query\n          name: granularity\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Granularity\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TweetCountsResponse\"\n          description: Recent tweet counts response\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Recent search counts\n      tags:\n        - Tweets\n  /2/tweets/sample/stream:\n    get:\n      description: Streams a deterministic 1% of public Tweets.\n      operationId: sampleStream\n      parameters:\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n        - $ref: \"#/components/parameters/BackfillMinutesRequestParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StreamingTweet\"\n          description: The request was successful. Successful responses will return a stream of individual JSON Tweet payloads.\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n      summary: Sample stream\n      tags:\n        - Tweets\n      x-twitter-streaming: true\n  /2/tweets/search/all:\n    get:\n      description: Returns Tweets that match a search query.\n      operationId: tweetsFullarchiveSearch\n      parameters:\n        - description: One query/rule/filter for matching Tweets. Up to 1024 characters.\n          in: query\n          name: query\n          required: true\n          schema:\n            example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet\n            maxLength: 1024\n            minLength: 1\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).\n          in: query\n          name: start_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).\n          in: query\n          name: end_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.\n          in: query\n          name: since_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: Returns results with a Tweet ID less than (that is, older than) the specified ID.\n          in: query\n          name: until_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: The maximum number of search results to be returned by a request.\n          in: query\n          name: max_results\n          required: false\n          schema:\n            default: 10\n            format: int32\n            maximum: 500\n            minimum: 10\n            type: integer\n        - description: This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.\n          in: query\n          name: next_token\n          required: false\n          schema:\n            minLength: 1\n            type: string\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TweetSearchResponse\"\n          description: Tweets full archive search response\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n      summary: Full-archive search\n      tags:\n        - Tweets\n  /2/tweets/search/recent:\n    get:\n      description: Returns Tweets from the last 7 days that match a search query.\n      operationId: tweetsRecentSearch\n      parameters:\n        - description: One query/rule/filter for matching Tweets. Up to 512 characters.\n          in: query\n          name: query\n          required: true\n          schema:\n            example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet\n            maxLength: 512\n            minLength: 1\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).\n          in: query\n          name: start_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).\n          in: query\n          name: end_time\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.\n          in: query\n          name: since_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: Returns results with a Tweet ID less than (that is, older than) the specified ID.\n          in: query\n          name: until_id\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - description: The maximum number of search results to be returned by a request.\n          in: query\n          name: max_results\n          required: false\n          schema:\n            default: 10\n            format: int32\n            maximum: 100\n            minimum: 10\n            type: integer\n        - description: This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.\n          in: query\n          name: next_token\n          required: false\n          schema:\n            minLength: 1\n            type: string\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TweetSearchResponse\"\n          description: Tweets recent search response\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Recent search\n      tags:\n        - Tweets\n  /2/tweets/search/stream:\n    get:\n      description: Streams Tweets matching the stream's active rule set.\n      operationId: searchStream\n      parameters:\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n        - $ref: \"#/components/parameters/BackfillMinutesRequestParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FilteredStreamingTweet\"\n          description: The request was successful. Successful responses will return a stream of individual JSON Tweet payloads.\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n      summary: Filtered stream\n      tags:\n        - Tweets\n      x-twitter-streaming: true\n  /2/tweets/search/stream/rules:\n    get:\n      description: Returns rules from a user's active rule set. Users can fetch all of their rules or a subset, specified by the provided rule ids.\n      operationId: getRules\n      parameters:\n        - description: A comma-separated list of Rule IDs.\n          in: query\n          name: ids\n          required: false\n          schema:\n            items:\n              $ref: \"#/components/schemas/RuleId\"\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Rule\"\n                    type: array\n                  meta:\n                    $ref: \"#/components/schemas/RulesResponseMetadata\"\n                required:\n                  - data\n                  - meta\n                type: object\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n      summary: Rules lookup\n      tags:\n        - Tweets\n    post:\n      description: Add or delete rules from a user's active rule set. Users can provide unique, optionally tagged rules to add. Users can delete their entire rule set or a subset specified by rule ids or values.\n      operationId: addOrDeleteRules\n      parameters:\n        - description: Dry Run can be used with both the add and delete action, with the expected result given, but without actually taking any action in the system (meaning the end state will always be as it was when the request was submitted). This is particularly useful to validate rule changes.\n          in: query\n          name: dry_run\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddOrDeleteRulesRequest\"\n        description: \"\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddOrDeleteRulesResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n      summary: Add/Delete rules\n      tags:\n        - Tweets\n  \"/2/tweets/{id}\":\n    get:\n      description: Returns a variety of information about the Tweet specified by the requested ID\n      operationId: findTweetById\n      parameters:\n        - description: A single Tweet ID.\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SingleTweetLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Tweet lookup by Tweet ID\n      tags:\n        - Tweets\n  \"/2/tweets/{id}/hidden\":\n    put:\n      description: Hides or unhides a reply to an owned conversation.\n      operationId: hideReplyById\n      parameters:\n        - description: The ID of the reply that you want to hide or unhide.\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                hidden:\n                  type: boolean\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      hidden:\n                        type: boolean\n                    type: object\n                type: object\n          description: A successful response. The reply has been hidden or unhidden.\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Hide replies\n      tags:\n        - Tweets\n  \"/2/tweets/{id}/liking_users\":\n    get:\n      description: Returns a list of users that have liked the provided Tweet ID\n      operationId: tweetsIdLikingUsers\n      parameters:\n        - description: The ID of the Tweet for which to return results\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericMultipleUsersLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Returns user objects that have liked the provided Tweet ID\n      tags:\n        - Users\n  \"/2/tweets/{id}/retweeted_by\":\n    get:\n      description: Returns a list of users that have retweeted the provided Tweet ID\n      operationId: tweetsIdRetweetingUsers\n      parameters:\n        - description: The ID of the Tweet for which to return results\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericMultipleUsersLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Returns user objects that have retweeted the provided Tweet ID\n      tags:\n        - Users\n  /2/users:\n    get:\n      description: This endpoint returns information about users. Specify users by their ID.\n      operationId: findUsersById\n      parameters:\n        - description: Required. A list of User IDs, comma-separated. You can specify up to 100 IDs.\n          example: 2244994945,6253282,12\n          explode: false\n          in: query\n          name: ids\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/UserID\"\n            maxItems: 100\n            minItems: 1\n            type: array\n          style: form\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultiUserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: User lookup by IDs\n      tags:\n        - Users\n  /2/users/by:\n    get:\n      description: This endpoint returns information about users. Specify users by their username.\n      operationId: findUsersByUsername\n      parameters:\n        - description: Required . A list of usernames, comma-separated. You can specify up to 100 usernames.\n          example: TwitterDev,TwitterAPI,jack\n          explode: false\n          in: query\n          name: usernames\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/UserName\"\n            maxItems: 100\n            minItems: 1\n            type: array\n          style: form\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultiUserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: User lookup by usernames\n      tags:\n        - Users\n  \"/2/users/by/username/{username}\":\n    get:\n      description: This endpoint returns information about a user. Specify user by username.\n      operationId: findUserByUsername\n      parameters:\n        - description: Required. A username.\n          example: TwitterDev\n          in: path\n          name: username\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserName\"\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SingleUserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: User lookup by username\n      tags:\n        - Users\n  \"/2/users/{id}\":\n    get:\n      description: This endpoint returns information about a user. Specify user by ID.\n      operationId: findUserById\n      parameters:\n        - description: Required. A User ID.\n          example: \"2244994945\"\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - $ref: \"#/components/parameters/UserExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SingleUserLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: User lookup by ID\n      tags:\n        - Users\n  \"/2/users/{id}/blocking\":\n    get:\n      description: Returns a list of users that are blocked by the provided user ID\n      operationId: usersIdBlocking\n      parameters:\n        - description: The ID of the user for whom to return results\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The maximum number of results\n          in: query\n          name: max_results\n          required: false\n          schema:\n            format: int32\n            maximum: 1000\n            minimum: 1\n            type: integer\n        - description: This value is populated by passing the 'next_token' or 'previous_token' returned in a request to paginate through results.\n          in: query\n          name: pagination_token\n          required: false\n          schema:\n            maxLength: 16\n            minLength: 16\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericMultipleUsersLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Returns user objects that are blocked by provided user ID\n      tags:\n        - Users\n    post:\n      description: Causes the user (in the path) to block the target user. The user (in the path) must match the user context authorizing the request\n      operationId: usersIdBlock\n      parameters:\n        - description: The ID of the user that is requesting to block the target user\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                target_user_id:\n                  pattern: ^[0-9]{1,19}$\n                  type: string\n              required:\n                - target_user_id\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersBlockingMutationResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Block User by User ID\n      tags:\n        - Users\n  \"/2/users/{id}/followers\":\n    get:\n      description: Returns a list of users that follow the provided user ID\n      operationId: usersIdFollowers\n      parameters:\n        - description: The ID of the user for whom to return results\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The maximum number of results\n          in: query\n          name: max_results\n          required: false\n          schema:\n            format: int32\n            maximum: 1000\n            minimum: 1\n            type: integer\n        - description: This value is populated by passing the 'next_token' or 'previous_token' returned in a request to paginate through results.\n          in: query\n          name: pagination_token\n          required: false\n          schema:\n            maxLength: 16\n            minLength: 16\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericMultipleUsersLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Returns user objects that follow the provided user ID\n      tags:\n        - Users\n  \"/2/users/{id}/following\":\n    get:\n      description: Returns a list of users that are being followed by the provided user ID\n      operationId: usersIdFollowing\n      parameters:\n        - description: The ID of the user for whom to return results\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The maximum number of results\n          in: query\n          name: max_results\n          required: false\n          schema:\n            format: int32\n            maximum: 1000\n            minimum: 1\n            type: integer\n        - description: This value is populated by passing the 'next_token' or 'previous_token' returned in a request to paginate through results.\n          in: query\n          name: pagination_token\n          required: false\n          schema:\n            maxLength: 16\n            minLength: 16\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersFollowingLookupResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Following by User ID\n      tags:\n        - Users\n    post:\n      description: Causes the user(in the path) to follow, or “request to follow” for protected users, the target user. The user(in the path) must match the user context authorizing the request\n      operationId: usersIdFollow\n      parameters:\n        - description: The ID of the user that is requesting to follow the target user\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                target_user_id:\n                  pattern: ^[0-9]{1,19}$\n                  type: string\n              required:\n                - target_user_id\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersFollowingCreateResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Follow User\n      tags:\n        - Users\n  \"/2/users/{id}/liked_tweets\":\n    get:\n      description: Returns a list of Tweets liked by the provided User ID\n      operationId: usersIdLikedTweets\n      parameters:\n        - description: The ID of the User to list the liked Tweets of\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - $ref: \"#/components/parameters/MaxResultsRequestParameter\"\n        - $ref: \"#/components/parameters/PaginationTokenRequestParameter\"\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Tweet\"\n                    minItems: 1\n                    type: array\n                  errors:\n                    items:\n                      $ref: \"#/components/schemas/Problem\"\n                    minItems: 1\n                    type: array\n                  includes:\n                    $ref: \"#/components/schemas/Expansions\"\n                  meta:\n                    properties:\n                      next_token:\n                        description: The next token\n                        pattern: ^[a-zA-Z0-9]+$\n                        type: string\n                      previous_token:\n                        description: The previous token\n                        pattern: ^[a-zA-Z0-9]+$\n                        type: string\n                      result_count:\n                        description: Number of Tweets in result set\n                        format: int32\n                        type: integer\n                    type: object\n                type: object\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: Returns Tweet objects liked by the provided User ID\n      tags:\n        - Tweets\n  \"/2/users/{id}/likes\":\n    post:\n      description: Causes the user (in the path) to like the specified tweet. The user in the path must match the user context authorizing the request.\n      operationId: usersIdLike\n      parameters:\n        - description: The ID of the user that is requesting to like the tweet\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UsersLikesCreateRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersLikesCreateResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Causes the user (in the path) to like the specified tweet\n      tags:\n        - Tweets\n  \"/2/users/{id}/likes/{tweet_id}\":\n    delete:\n      description: Causes the user (in the path) to unlike the specified tweet. The user must match the user context authorizing the request\n      operationId: usersIdUnlike\n      parameters:\n        - description: The ID of the user that is requesting to unlike the tweet\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The ID of the tweet that the user is requesting to unlike\n          in: path\n          name: tweet_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersLikesDeleteResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Causes the user (in the path) to unlike the specified tweet\n      tags:\n        - Tweets\n  \"/2/users/{id}/mentions\":\n    get:\n      description: Returns Tweet objects that mention username associated to the provided User ID\n      operationId: usersIdMentions\n      parameters:\n        - description: The ID of the User to list mentions of\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - $ref: \"#/components/parameters/SinceIdRequestParameter\"\n        - $ref: \"#/components/parameters/UntilIdRequestParameter\"\n        - $ref: \"#/components/parameters/MaxResultsRequestParameter\"\n        - $ref: \"#/components/parameters/PaginationTokenRequestParameter\"\n        - $ref: \"#/components/parameters/StartTimeRequestParameter\"\n        - $ref: \"#/components/parameters/EndTimeRequestParameter\"\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericTweetsTimelineResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: User mention timeline by User ID\n      tags:\n        - Tweets\n  \"/2/users/{id}/muting\":\n    post:\n      description: Causes the user (in the path) to mute the target user. The user (in the path) must match the user context authorizing the request\n      operationId: usersIdMute\n      parameters:\n        - description: The ID of the user that is requesting to mute the target user\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                target_user_id:\n                  pattern: ^[0-9]{1,19}$\n                  type: string\n              required:\n                - target_user_id\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersMutingMutationResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Mute User by User ID\n      tags:\n        - Users\n  \"/2/users/{id}/retweets\":\n    post:\n      description: Causes the user (in the path) to retweet the specified tweet. The user in the path must match the user context authorizing the request.\n      operationId: usersIdRetweets\n      parameters:\n        - description: The ID of the user that is requesting to retweet the tweet\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UsersRetweetsCreateRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersRetweetsCreateResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Causes the user (in the path) to retweet the specified tweet\n      tags:\n        - Tweets\n  \"/2/users/{id}/retweets/{source_tweet_id}\":\n    delete:\n      description: Causes the user (in the path) to unretweet the specified tweet. The user must match the user context authorizing the request\n      operationId: usersIdUnretweets\n      parameters:\n        - description: The ID of the user that is requesting to unretweet the tweet\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The ID of the tweet that the user is requesting to unretweet\n          in: path\n          name: source_tweet_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TweetID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersRetweetsDeleteResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Causes the user (in the path) to unretweet the specified tweet\n      tags:\n        - Tweets\n  \"/2/users/{id}/tweets\":\n    get:\n      description: Returns a list of Tweets authored by the provided User ID\n      operationId: usersIdTweets\n      parameters:\n        - description: The ID of the User to list Tweets of\n          in: path\n          name: id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - $ref: \"#/components/parameters/SinceIdRequestParameter\"\n        - $ref: \"#/components/parameters/UntilIdRequestParameter\"\n        - $ref: \"#/components/parameters/MaxResultsRequestParameter\"\n        - $ref: \"#/components/parameters/TweetTypeExcludesRequestParameter\"\n        - $ref: \"#/components/parameters/PaginationTokenRequestParameter\"\n        - $ref: \"#/components/parameters/StartTimeRequestParameter\"\n        - $ref: \"#/components/parameters/EndTimeRequestParameter\"\n        - $ref: \"#/components/parameters/TweetExpansionsParameter\"\n        - $ref: \"#/components/parameters/TweetFieldsParameter\"\n        - $ref: \"#/components/parameters/UserFieldsParameter\"\n        - $ref: \"#/components/parameters/MediaFieldsParameter\"\n        - $ref: \"#/components/parameters/PlaceFieldsParameter\"\n        - $ref: \"#/components/parameters/PollFieldsParameter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericTweetsTimelineResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - BearerToken: []\n          UserToken: []\n      summary: User Tweets timeline by User ID\n      tags:\n        - Tweets\n  \"/2/users/{source_user_id}/blocking/{target_user_id}\":\n    delete:\n      description: Causes the source user to unblock the target user. The source user must match the user context authorizing the request\n      operationId: usersIdUnblock\n      parameters:\n        - description: The ID of the user that is requesting to unblock the target user\n          in: path\n          name: source_user_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The ID of the user that the source user is requesting to unblock\n          in: path\n          name: target_user_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersBlockingMutationResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Unblock User by User ID\n      tags:\n        - Users\n  \"/2/users/{source_user_id}/following/{target_user_id}\":\n    delete:\n      description: Causes the source user to unfollow the target user. The source user must match the user context authorizing the request\n      operationId: usersIdUnfollow\n      parameters:\n        - description: The ID of the user that is requesting to unfollow the target user\n          in: path\n          name: source_user_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The ID of the user that the source user is requesting to unfollow\n          in: path\n          name: target_user_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersFollowingDeleteResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Unfollow User\n      tags:\n        - Users\n  \"/2/users/{source_user_id}/muting/{target_user_id}\":\n    delete:\n      description: Causes the source user to unmute the target user. The source user must match the user context authorizing the request\n      operationId: usersIdUnmute\n      parameters:\n        - description: The ID of the user that is requesting to unmute the target user\n          in: path\n          name: source_user_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n        - description: The ID of the user that the source user is requesting to unmute\n          in: path\n          name: target_user_id\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsersMutingMutationResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      security:\n        - UserToken: []\n      summary: Unmute User by User ID\n      tags:\n        - Users\ncomponents:\n  parameters:\n    BackfillMinutesRequestParameter:\n      description: The number of minutes of backfill requested\n      in: query\n      name: backfill_minutes\n      required: false\n      schema:\n        format: int32\n        maximum: 5\n        minimum: 0\n        type: integer\n    EndTimeRequestParameter:\n      description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets will be provided. The until_id parameter takes precedence if it is also specified.\n      example: 2021-02-14T18:40:40.000Z\n      in: query\n      name: end_time\n      required: false\n      schema:\n        format: date-time\n        type: string\n    MaxResultsRequestParameter:\n      description: The maximum number of results\n      in: query\n      name: max_results\n      required: false\n      schema:\n        format: int32\n        maximum: 100\n        minimum: 5\n        type: integer\n    MediaFieldsParameter:\n      description: A comma separated list of Media fields to display.\n      explode: false\n      in: query\n      name: media.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a Media object.\n        example:\n          - media_key\n          - duration_ms\n          - height\n          - preview_image_url\n          - type\n          - url\n          - width\n          - public_metrics\n        items:\n          enum:\n            - media_key\n            - duration_ms\n            - height\n            - preview_image_url\n            - type\n            - url\n            - width\n            - public_metrics\n            - non_public_metrics\n            - organic_metrics\n            - promoted_metrics\n            - alt_text\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    PaginationTokenRequestParameter:\n      description: This parameter is used to get the next 'page' of results.\n      in: query\n      name: pagination_token\n      required: false\n      schema:\n        minLength: 1\n        type: string\n    PlaceFieldsParameter:\n      description: A comma separated list of Place fields to display.\n      explode: false\n      in: query\n      name: place.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a Place object.\n        example:\n          - id\n          - name\n          - country_code\n          - place_type\n          - full_name\n          - country\n          - contained_within\n          - geo\n        items:\n          enum:\n            - id\n            - name\n            - country_code\n            - place_type\n            - full_name\n            - country\n            - contained_within\n            - geo\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    PollFieldsParameter:\n      description: A comma separated list of Poll fields to display.\n      explode: false\n      in: query\n      name: poll.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a Poll object.\n        example:\n          - duration_minutes\n          - options\n          - voting_status\n          - end_datetime\n        items:\n          enum:\n            - id\n            - options\n            - voting_status\n            - end_datetime\n            - duration_minutes\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    SinceIdRequestParameter:\n      description: The minimum Tweet ID to be included in the result set. This parameter takes precedence over start_time if both are specified.\n      example: \"791775337160081409\"\n      in: query\n      name: since_id\n      required: false\n      schema:\n        $ref: \"#/components/schemas/TweetID\"\n    SpaceExpansionsParameter:\n      description: A comma separated list of fields to expand.\n      explode: false\n      in: query\n      name: expansions\n      schema:\n        description: The list of fields you can expand for a [Space](#Space) object. If the field has an ID, it can be expanded into a full object.\n        example:\n          - creator_id\n          - host_ids\n          - invited_user_ids\n          - speaker_ids\n        items:\n          enum:\n            - creator_id\n            - host_ids\n            - invited_user_ids\n            - speaker_ids\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    SpaceFieldsParameter:\n      description: A comma separated list of Space fields to display.\n      explode: false\n      in: query\n      name: space.fields\n      required: false\n      schema:\n        description: The fields available for a Space object.\n        example:\n          - created_at\n          - creator_id\n          - host_ids\n          - invited_user_ids\n          - is_ticketed\n          - lang\n          - participant_count\n          - scheduled_start\n          - speaker_ids\n          - started_at\n          - title\n          - updated_at\n        items:\n          enum:\n            - created_at\n            - creator_id\n            - host_ids\n            - invited_user_ids\n            - is_ticketed\n            - lang\n            - participant_count\n            - scheduled_start\n            - speaker_ids\n            - started_at\n            - title\n            - updated_at\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    StartTimeRequestParameter:\n      description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Tweets will be provided. The since_id parameter takes precedence if it is also specified.\n      example: 2021-02-01T18:40:40.000Z\n      in: query\n      name: start_time\n      required: false\n      schema:\n        format: date-time\n        type: string\n    TweetExpansionsParameter:\n      description: A comma separated list of fields to expand.\n      explode: false\n      in: query\n      name: expansions\n      schema:\n        description: The list of fields you can expand for a [Tweet](#Tweet) object. If the field has an ID, it can be expanded into a full object.\n        example:\n          - author_id\n          - referenced_tweets.id\n          - in_reply_to_user_id\n          - geo.place_id\n          - attachments.media_keys\n          - attachments.poll_ids\n          - entities.mentions.username\n          - referenced_tweets.id.author_id\n        items:\n          enum:\n            - author_id\n            - referenced_tweets.id\n            - in_reply_to_user_id\n            - geo.place_id\n            - attachments.media_keys\n            - attachments.poll_ids\n            - entities.mentions.username\n            - referenced_tweets.id.author_id\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    TweetFieldsParameter:\n      description: A comma separated list of Tweet fields to display.\n      explode: false\n      in: query\n      name: tweet.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a [Tweet](#Tweet) object.\n        example:\n          - created_at\n          - author_id\n          - entities\n          - conversation_id\n          - reply_settings\n          - public_metrics\n        items:\n          enum:\n            - id\n            - created_at\n            - text\n            - author_id\n            - in_reply_to_user_id\n            - referenced_tweets\n            - attachments\n            - withheld\n            - geo\n            - entities\n            - public_metrics\n            - possibly_sensitive\n            - source\n            - lang\n            - context_annotations\n            - non_public_metrics\n            - promoted_metrics\n            - organic_metrics\n            - conversation_id\n            - reply_settings\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    TweetTypeExcludesRequestParameter:\n      description: The set of entities to exclude (e.g. 'replies' or 'retweets')\n      explode: false\n      in: query\n      name: exclude\n      required: false\n      schema:\n        description: The set of entities to exclude (e.g. 'replies' or 'retweets')\n        example:\n          - replies\n          - retweets\n        items:\n          enum:\n            - replies\n            - retweets\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    UntilIdRequestParameter:\n      description: The maximum Tweet ID to be included in the result set. This parameter takes precedence over end_time if both are specified.\n      example: \"1346889436626259968\"\n      in: query\n      name: until_id\n      required: false\n      schema:\n        $ref: \"#/components/schemas/TweetID\"\n    UserExpansionsParameter:\n      description: A comma separated list of fields to expand.\n      explode: false\n      in: query\n      name: expansions\n      schema:\n        description: The list of fields you can expand for a [User](#User) object. If the field has an ID, it can be expanded into a full object.\n        example:\n          - pinned_tweet_id\n        items:\n          enum:\n            - pinned_tweet_id\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n    UserFieldsParameter:\n      description: A comma separated list of User fields to display.\n      explode: false\n      in: query\n      name: user.fields\n      required: false\n      schema:\n        description: The list of fields you can display for a [User](#User) object.\n        example:\n          - username\n          - verified\n          - profile_image_url\n        items:\n          enum:\n            - id\n            - created_at\n            - name\n            - username\n            - protected\n            - verified\n            - withheld\n            - profile_image_url\n            - location\n            - url\n            - description\n            - entities\n            - pinned_tweet_id\n            - public_metrics\n          type: string\n        minItems: 1\n        type: array\n        uniqueItems: true\n      style: form\n  responses:\n    HttpErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: The request has failed.\n  schemas:\n    AddOrDeleteRulesRequest:\n      oneOf:\n        - $ref: \"#/components/schemas/AddRulesRequest\"\n        - $ref: \"#/components/schemas/DeleteRulesRequest\"\n      type: object\n    AddOrDeleteRulesResponse:\n      oneOf:\n        - $ref: \"#/components/schemas/AddRulesResponse\"\n        - $ref: \"#/components/schemas/DeleteRulesResponse\"\n      type: object\n    AddRulesRequest:\n      description: A request to add a user-specified stream filtering rule.\n      properties:\n        add:\n          items:\n            $ref: \"#/components/schemas/RuleNoId\"\n          type: array\n      required:\n        - add\n      type: object\n    AddRulesResponse:\n      description: A response from adding user-specified stream filtering rules.\n      properties:\n        data:\n          description: All user-specified stream filtering rules that were created.\n          items:\n            $ref: \"#/components/schemas/Rule\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/RulesResponseMetadata\"\n      required:\n        - data\n        - meta\n      type: object\n    AnimatedGif:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n        - properties:\n            preview_image_url:\n              format: uri\n              type: string\n            type:\n              enum:\n                - animated_gif\n              type: string\n          type: object\n      type: object\n    CashtagEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndicesInclusiveExclusive\"\n        - $ref: \"#/components/schemas/CashtagFields\"\n    CashtagFields:\n      description: Represent the portion of text recognized as a Cashtag, and its start and end position within the text.\n      properties:\n        tag:\n          example: TWTR\n          type: string\n      required:\n        - tag\n      type: object\n    ClientDisconnectedProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/client-disconnected\n              type: string\n      description: Your client has gone away.\n      type: object\n    ClientForbiddenProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            reason:\n              enum:\n                - official-client-forbidden\n                - client-not-enrolled\n              type: string\n            registration_url:\n              format: uri\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/client-forbidden\n              type: string\n          type: object\n      description: A problem that indicates your client is forbidden from making this request.\n      type: object\n    CommonMediaFields:\n      properties:\n        height:\n          $ref: \"#/components/schemas/MediaHeight\"\n        media_key:\n          $ref: \"#/components/schemas/MediaKey\"\n        width:\n          $ref: \"#/components/schemas/MediaWidth\"\n    ComplianceJob:\n      properties:\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        download_expires_at:\n          $ref: \"#/components/schemas/DownloadExpiration\"\n        download_url:\n          $ref: \"#/components/schemas/DownloadUrl\"\n        id:\n          $ref: \"#/components/schemas/JobId\"\n        name:\n          $ref: \"#/components/schemas/ComplianceJobName\"\n        status:\n          $ref: \"#/components/schemas/ComplianceJobStatus\"\n        type:\n          $ref: \"#/components/schemas/ComplianceJobType\"\n        upload_expires_at:\n          $ref: \"#/components/schemas/UploadExpiration\"\n        upload_url:\n          $ref: \"#/components/schemas/UploadUrl\"\n      required:\n        - id\n        - type\n        - created_at\n        - upload_url\n        - download_url\n        - upload_expires_at\n        - download_expires_at\n        - status\n      type: object\n    ComplianceJobName:\n      description: User-provided name for a compliance job\n      example: my-job\n      maxLength: 64\n      type: string\n    ComplianceJobStatus:\n      description: Status of a compliance job\n      enum:\n        - created\n        - in_progress\n        - failed\n        - complete\n      type: string\n    ComplianceJobType:\n      description: Type of compliance job to list.\n      enum:\n        - tweets\n        - users\n      type: string\n    ConflictProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/conflict\n              type: string\n      description: You cannot create a new job if one is already in progress.\n      type: object\n    ConnectionExceptionProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            connection_issue:\n              enum:\n                - TooManyConnections\n                - ProvisioningSubscription\n                - RuleConfigurationIssue\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/streaming-connection\n              type: string\n      description: A problem that indicates something is wrong with the connection\n      type: object\n    ContextAnnotation:\n      description: Annotation inferred from the tweet text.\n      properties:\n        domain:\n          $ref: \"#/components/schemas/ContextAnnotationDomainFields\"\n        entity:\n          $ref: \"#/components/schemas/ContextAnnotationEntityFields\"\n      required:\n        - domain\n        - entity\n      type: object\n    ContextAnnotationDomainFields:\n      description: Represents the data for the context annotation domain.\n      properties:\n        description:\n          description: Description of the context annotation domain.\n          type: string\n        id:\n          description: The unique id for a context annotation domain.\n          pattern: ^[0-9]{1,19}$\n          type: string\n        name:\n          description: Name of the context annotation domain.\n          type: string\n      required:\n        - id\n      type: object\n    ContextAnnotationEntityFields:\n      description: Represents the data for the context annotation entity.\n      properties:\n        description:\n          description: Description of the context annotation entity.\n          type: string\n        id:\n          description: The unique id for a context annotation entity.\n          pattern: ^[0-9]{1,19}$\n          type: string\n        name:\n          description: Name of the context annotation entity.\n          type: string\n      required:\n        - id\n      type: object\n    CountryCode:\n      description: A two-letter ISO 3166-1 alpha-2 country code\n      example: US\n      pattern: ^[A-Z]{2}$\n      type: string\n    CreatedAt:\n      description: Creation time of the compliance job.\n      example: 2021-01-06T18:40:40.000Z\n      format: date-time\n      type: string\n    DeleteRulesRequest:\n      description: A response from deleting user-specified stream filtering rules.\n      properties:\n        delete:\n          description: IDs and values of all deleted user-specified stream filtering rules.\n          properties:\n            ids:\n              description: IDs of all deleted user-specified stream filtering rules.\n              items:\n                $ref: \"#/components/schemas/RuleId\"\n              type: array\n            values:\n              description: Values of all deleted user-specified stream filtering rules.\n              items:\n                $ref: \"#/components/schemas/RuleValue\"\n              type: array\n          type: object\n      required:\n        - delete\n      type: object\n    DeleteRulesResponse:\n      properties:\n        meta:\n          $ref: \"#/components/schemas/RulesResponseMetadata\"\n      required:\n        - meta\n      type: object\n    DisallowedResourceProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            resource_id:\n              type: string\n            resource_type:\n              enum:\n                - tweet\n                - media\n              type: string\n            section:\n              enum:\n                - data\n                - includes\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/disallowed-resource\n              type: string\n          required:\n            - resource_id\n            - resource_type\n            - section\n          type: object\n      description: A problem that indicates that the resource requested violates the precepts of this API.\n      type: object\n    DownloadExpiration:\n      description: Expiration time of the download URL\n      example: 2021-01-06T18:40:40.000Z\n      format: date-time\n      type: string\n    DownloadUrl:\n      description: URL from which the user will retrieve their compliance results\n      format: uri\n      type: string\n    DuplicateRuleProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/duplicate-rules\n              type: string\n      description: The rule you have submitted is a duplicate.\n      type: object\n    End:\n      description: The end time of the bucket\n      format: date-time\n      type: string\n    EntityIndicesInclusiveExclusive:\n      description: Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is exclusive.\n      properties:\n        end:\n          description: Index (zero-based) at which position this entity ends.  The index is exclusive.\n          example: 61\n          minimum: 0\n          type: integer\n        start:\n          description: Index (zero-based) at which position this entity starts.  The index is inclusive.\n          example: 50\n          minimum: 0\n          type: integer\n      required:\n        - start\n        - end\n      type: object\n    EntityIndicesInclusiveInclusive:\n      description: Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is inclusive.\n      properties:\n        end:\n          description: Index (zero-based) at which position this entity ends.  The index is inclusive.\n          example: 61\n          minimum: 0\n          type: integer\n        start:\n          description: Index (zero-based) at which position this entity starts.  The index is inclusive.\n          example: 50\n          minimum: 0\n          type: integer\n      required:\n        - start\n        - end\n      type: object\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        message:\n          type: string\n      required:\n        - code\n        - message\n    Expansions:\n      properties:\n        media:\n          items:\n            $ref: \"#/components/schemas/Media\"\n          minItems: 1\n          type: array\n        places:\n          items:\n            $ref: \"#/components/schemas/Place\"\n          minItems: 1\n          type: array\n        polls:\n          items:\n            $ref: \"#/components/schemas/Poll\"\n          minItems: 1\n          type: array\n        tweets:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        users:\n          items:\n            $ref: \"#/components/schemas/User\"\n          minItems: 1\n          type: array\n      type: object\n    FieldUnauthorizedProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            field:\n              type: string\n            resource_type:\n              enum:\n                - tweet\n                - media\n              type: string\n            section:\n              enum:\n                - data\n                - includes\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/not-authorized-for-field\n              type: string\n          required:\n            - resource_type\n            - field\n            - section\n          type: object\n      description: A problem that indicates that you are not allowed to see a particular field on a Tweet, User, etc.\n      type: object\n    FilteredStreamingTweet:\n      description: A tweet or error that can be returned by the streaming tweet API\n      oneOf:\n        - description: The values returned with a successful streamed tweet. Includes the user provided rules that the tweet matched.\n          properties:\n            data:\n              $ref: \"#/components/schemas/Tweet\"\n            includes:\n              $ref: \"#/components/schemas/Expansions\"\n            matching_rules:\n              description: The list of rules which matched the tweet\n              items:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/RuleId\"\n                  tag:\n                    description: The user-supplied tag assigned to the rule which matched\n                    type: string\n                required:\n                  - id\n                type: object\n              type: array\n          required:\n            - data\n            - matching_rules\n          type: object\n        - properties:\n            errors:\n              items:\n                $ref: \"#/components/schemas/Problem\"\n              type: array\n          required:\n            - errors\n          type: object\n      type: object\n    FullTextEntities:\n      properties:\n        cashtags:\n          items:\n            $ref: \"#/components/schemas/CashtagEntity\"\n          minItems: 1\n          type: array\n        hashtags:\n          items:\n            $ref: \"#/components/schemas/HashtagEntity\"\n          minItems: 1\n          type: array\n        mentions:\n          items:\n            $ref: \"#/components/schemas/MentionEntity\"\n          minItems: 1\n          type: array\n        urls:\n          items:\n            $ref: \"#/components/schemas/UrlEntity\"\n          minItems: 1\n          type: array\n      type: object\n    GenericMultipleUsersLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/User\"\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n        meta:\n          properties:\n            next_token:\n              description: The next token\n              pattern: ^[a-zA-Z0-9]+$\n              type: string\n            previous_token:\n              description: The previous token\n              pattern: ^[a-zA-Z0-9]+$\n              type: string\n            result_count:\n              description: The number of user results returned in this response\n              type: integer\n          type: object\n      type: object\n    GenericProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            status:\n              type: integer\n            type:\n              enum:\n                - about:blank\n              type: string\n          required:\n            - status\n          type: object\n      description: A generic problem with no additional information beyond that provided by the HTTP status code.\n    GenericTweetsTimelineResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n        meta:\n          properties:\n            newest_id:\n              $ref: \"#/components/schemas/TweetID\"\n              description: Newest Tweet ID in the result set\n            next_token:\n              description: The next token\n              pattern: ^[a-zA-Z0-9]+$\n              type: string\n            oldest_id:\n              $ref: \"#/components/schemas/TweetID\"\n              description: Oldest Tweet ID in the result set\n            previous_token:\n              description: The previous token\n              pattern: ^[a-zA-Z0-9]+$\n              type: string\n            result_count:\n              description: Number of Tweets in result set\n              format: int32\n              type: integer\n          type: object\n      type: object\n    Geo:\n      properties:\n        bbox:\n          example:\n            - -105.193475\n            - 39.60973\n            - -105.053164\n            - 39.761974\n          items:\n            format: double\n            maximum: 180\n            minimum: -180\n            type: number\n          maxItems: 4\n          minItems: 4\n          type: array\n        geometry:\n          $ref: \"#/components/schemas/Point\"\n        properties:\n          type: object\n        type:\n          enum:\n            - Feature\n          type: string\n      required:\n        - type\n        - bbox\n        - properties\n      type: object\n    Granularity:\n      default: hour\n      enum:\n        - minute\n        - hour\n        - day\n      type: string\n    HTTPStatusCode:\n      description: HTTP Status Code.\n      maximum: 599\n      minimum: 100\n      type: integer\n    HashtagEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndicesInclusiveExclusive\"\n        - $ref: \"#/components/schemas/HashtagFields\"\n    HashtagFields:\n      description: Represent the portion of text recognized as a Hashtag, and its start and end position within the text.\n      properties:\n        tag:\n          description: The text of the Hashtag\n          example: MondayMotivation\n          type: string\n      required:\n        - tag\n      type: object\n    InvalidRequestProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            errors:\n              items:\n                properties:\n                  message:\n                    type: string\n                  parameters:\n                    additionalProperties:\n                      items:\n                        type: string\n                      type: array\n                    type: object\n                type: object\n              type: array\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/invalid-request\n              type: string\n          type: object\n      description: A problem that indicates this request is invalid.\n    InvalidRuleProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/invalid-rules\n              type: string\n      description: The rule you have submitted is invalid.\n      type: object\n    JobId:\n      description: Compliance Job ID\n      example: \"1372966999991541762\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    Media:\n      discriminator:\n        mapping:\n          animated_gif: \"#/components/schemas/AnimatedGif\"\n          photo: \"#/components/schemas/Photo\"\n          video: \"#/components/schemas/Video\"\n        propertyName: type\n      oneOf:\n        - $ref: \"#/components/schemas/Photo\"\n        - $ref: \"#/components/schemas/Video\"\n        - $ref: \"#/components/schemas/AnimatedGif\"\n      properties:\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    MediaHeight:\n      description: The height of the media in pixels\n      minimum: 0\n      type: integer\n    MediaKey:\n      description: The Media Key identifier for this attachment.\n      pattern: ^([0-9]+)_([0-9]+)$\n      type: string\n    MediaWidth:\n      description: The width of the media in pixels\n      minimum: 0\n      type: integer\n    MentionEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndicesInclusiveExclusive\"\n        - $ref: \"#/components/schemas/MentionFields\"\n    MentionFields:\n      description: Represent the portion of text recognized as a User mention, and its start and end position within the text.\n      properties:\n        id:\n          $ref: \"#/components/schemas/UserID\"\n        username:\n          $ref: \"#/components/schemas/UserName\"\n      required:\n        - username\n        - id\n      type: object\n    MultiComplianceJobResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ComplianceJob\"\n          minItems: 0\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 0\n          type: array\n      type: object\n    MultiSpaceLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Space\"\n          minItems: 0\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    MultiTweetLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    MultiUserLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/User\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    OperationalDisconnectProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            disconnect_type:\n              enum:\n                - OperationalDisconnect\n                - UpstreamOperationalDisconnect\n                - ForceDisconnect\n                - UpstreamUncleanDisconnect\n                - SlowReader\n                - InternalError\n                - PackageUpgraded\n                - PackageDowngraded\n                - ClientApplicationStateDegraded\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/operational-disconnect\n              type: string\n      description: You have been disconnected for operational reasons.\n      type: object\n    Photo:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n        - properties:\n            alt_text:\n              type: string\n            type:\n              enum:\n                - photo\n              type: string\n            url:\n              format: uri\n              type: string\n          type: object\n      type: object\n    Place:\n      properties:\n        contained_within:\n          items:\n            $ref: \"#/components/schemas/PlaceId\"\n          minItems: 1\n          type: array\n        country:\n          description: The full name of the county in which this place exists.\n          example: United States\n          type: string\n        country_code:\n          $ref: \"#/components/schemas/CountryCode\"\n        full_name:\n          description: The full name of this place.\n          example: Lakewood, CO\n          type: string\n        geo:\n          $ref: \"#/components/schemas/Geo\"\n        id:\n          $ref: \"#/components/schemas/PlaceId\"\n        name:\n          description: The human readable name of this place.\n          example: Lakewood\n          type: string\n        place_type:\n          $ref: \"#/components/schemas/PlaceType\"\n      required:\n        - id\n        - full_name\n    PlaceId:\n      description: The identifier for this place\n      example: f7eb2fa2fea288b1\n      type: string\n    PlaceType:\n      enum:\n        - poi\n        - neighborhood\n        - city\n        - admin\n        - country\n        - unknown\n      example: city\n      type: string\n    Point:\n      description: A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.\n      properties:\n        coordinates:\n          $ref: \"#/components/schemas/Position\"\n        type:\n          enum:\n            - Point\n          example: Point\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    Poll:\n      description: Represent a Poll attached to a Tweet\n      properties:\n        duration_minutes:\n          type: integer\n        end_datetime:\n          format: date-time\n          type: string\n        id:\n          $ref: \"#/components/schemas/PollId\"\n        options:\n          items:\n            $ref: \"#/components/schemas/PollOption\"\n          maxItems: 4\n          minItems: 2\n          type: array\n        voting_status:\n          enum:\n            - open\n            - closed\n          type: string\n      required:\n        - id\n        - options\n      type: object\n    PollId:\n      description: Unique identifier of this poll.\n      example: \"1365059861688410112\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    PollOption:\n      description: Describes a choice in a Poll object.\n      properties:\n        label:\n          description: The text of a poll choice.\n          type: string\n        position:\n          description: Position of this choice in the poll.\n          type: integer\n        votes:\n          description: Number of users who voted for this choice.\n          type: integer\n      required:\n        - position\n        - label\n        - votes\n      type: object\n    Position:\n      description: A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.\n      example:\n        - -105.18816086351444\n        - 40.247749999999996\n      items:\n        type: number\n      maxItems: 2\n      minItems: 2\n      type: array\n    Problem:\n      description: An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807).\n      discriminator:\n        mapping:\n          about:blank: \"#/components/schemas/GenericProblem\"\n          https://api.twitter.com/2/problems/client-disconnected: \"#/components/schemas/ClientDisconnectedProblem\"\n          https://api.twitter.com/2/problems/client-forbidden: \"#/components/schemas/ClientForbiddenProblem\"\n          https://api.twitter.com/2/problems/conflict: \"#/components/schemas/ConflictProblem\"\n          https://api.twitter.com/2/problems/disallowed-resource: \"#/components/schemas/DisallowedResourceProblem\"\n          https://api.twitter.com/2/problems/duplicate-rules: \"#/components/schemas/DuplicateRuleProblem\"\n          https://api.twitter.com/2/problems/invalid-request: \"#/components/schemas/InvalidRequestProblem\"\n          https://api.twitter.com/2/problems/invalid-rules: \"#/components/schemas/InvalidRuleProblem\"\n          https://api.twitter.com/2/problems/not-authorized-for-field: \"#/components/schemas/FieldUnauthorizedProblem\"\n          https://api.twitter.com/2/problems/not-authorized-for-resource: \"#/components/schemas/ResourceUnauthorizedProblem\"\n          https://api.twitter.com/2/problems/operational-disconnect: \"#/components/schemas/OperationalDisconnectProblem\"\n          https://api.twitter.com/2/problems/resource-not-found: \"#/components/schemas/ResourceNotFoundProblem\"\n          https://api.twitter.com/2/problems/resource-unavailable: \"#/components/schemas/ResourceUnavailableProblem\"\n          https://api.twitter.com/2/problems/rule-cap: \"#/components/schemas/RulesCapProblem\"\n          https://api.twitter.com/2/problems/streaming-connection: \"#/components/schemas/ConnectionExceptionProblem\"\n          https://api.twitter.com/2/problems/unsupported-authentication: \"#/components/schemas/UnsupportedAuthenticationProblem\"\n          https://api.twitter.com/2/problems/usage-capped: \"#/components/schemas/UsageCapExceededProblem\"\n        propertyName: type\n      oneOf:\n        - $ref: \"#/components/schemas/GenericProblem\"\n        - $ref: \"#/components/schemas/InvalidRequestProblem\"\n        - $ref: \"#/components/schemas/ClientForbiddenProblem\"\n        - $ref: \"#/components/schemas/ResourceNotFoundProblem\"\n        - $ref: \"#/components/schemas/ResourceUnavailableProblem\"\n        - $ref: \"#/components/schemas/ResourceUnauthorizedProblem\"\n        - $ref: \"#/components/schemas/FieldUnauthorizedProblem\"\n        - $ref: \"#/components/schemas/DisallowedResourceProblem\"\n        - $ref: \"#/components/schemas/UnsupportedAuthenticationProblem\"\n        - $ref: \"#/components/schemas/UsageCapExceededProblem\"\n        - $ref: \"#/components/schemas/ConnectionExceptionProblem\"\n        - $ref: \"#/components/schemas/ClientDisconnectedProblem\"\n        - $ref: \"#/components/schemas/OperationalDisconnectProblem\"\n        - $ref: \"#/components/schemas/RulesCapProblem\"\n        - $ref: \"#/components/schemas/InvalidRuleProblem\"\n        - $ref: \"#/components/schemas/DuplicateRuleProblem\"\n        - $ref: \"#/components/schemas/ConflictProblem\"\n      properties:\n        type:\n          type: string\n      required:\n        - type\n    ProblemFields:\n      properties:\n        detail:\n          type: string\n        title:\n          type: string\n      required:\n        - title\n        - detail\n      type: object\n    ReplySettings:\n      description: Shows who can reply a Tweet. Fields returned are everyone, mentioned_users, and following.\n      enum:\n        - everyone\n        - mentionedUsers\n        - following\n        - other\n      pattern: ^[A-Za-z]{1,12}$\n      type: string\n    ResourceNotFoundProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            parameter:\n              minLength: 1\n              type: string\n            resource_id:\n              type: string\n            resource_type:\n              enum:\n                - user\n                - tweet\n                - media\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/resource-not-found\n              type: string\n            value:\n              description: Value will match the schema of the field.\n          required:\n            - parameter\n            - value\n            - resource_id\n            - resource_type\n      description: A problem that indicates that a given Tweet, User, etc. does not exist.\n    ResourceUnauthorizedProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            parameter:\n              type: string\n            resource_id:\n              type: string\n            resource_type:\n              enum:\n                - tweet\n                - user\n                - media\n              type: string\n            section:\n              enum:\n                - data\n                - includes\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/not-authorized-for-resource\n              type: string\n            value:\n              type: string\n          required:\n            - value\n            - resource_id\n            - resource_type\n            - section\n            - parameter\n          type: object\n      description: A problem that indicates you are not allowed to see a particular Tweet, User, etc.\n      type: object\n    ResourceUnavailableProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            parameter:\n              minLength: 1\n              type: string\n            resource_id:\n              type: string\n            resource_type:\n              enum:\n                - user\n                - tweet\n                - media\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/resource-unavailable\n              type: string\n          required:\n            - parameter\n            - resource_id\n            - resource_type\n      description: A problem that indicates a particular Tweet, User, etc. is not available to you.\n    Rule:\n      description: A user-provided stream filtering rule.\n      properties:\n        id:\n          $ref: \"#/components/schemas/RuleId\"\n        tag:\n          $ref: \"#/components/schemas/RuleTag\"\n        value:\n          $ref: \"#/components/schemas/RuleValue\"\n      required:\n        - value\n      type: object\n    RuleId:\n      description: Unique identifier of this rule.\n      example: \"120897978112909812\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    RuleNoId:\n      description: A user-provided stream filtering rule.\n      properties:\n        tag:\n          $ref: \"#/components/schemas/RuleTag\"\n        value:\n          $ref: \"#/components/schemas/RuleValue\"\n      required:\n        - value\n      type: object\n    RuleTag:\n      description: A tag meant for the labeling of user provided rules.\n      example: Non-retweeted coffee tweets\n      type: string\n    RuleValue:\n      description: The filterlang value of the rule.\n      example: coffee -is:retweet\n      type: string\n    RulesCapProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/rule-cap\n              type: string\n      description: You have exceeded the maximum number of rules.\n      type: object\n    RulesRequestSummary:\n      oneOf:\n        - description: A summary of the results of the addition of user-specified stream filtering rules.\n          properties:\n            created:\n              description: Number of user-specified stream filtering rules that were created.\n              example: 1\n              format: int32\n              type: integer\n            invalid:\n              description: Number of invalid user-specified stream filtering rules.\n              example: 1\n              format: int32\n              type: integer\n            not_created:\n              description: Number of user-specified stream filtering rules that were not created.\n              example: 1\n              format: int32\n              type: integer\n            valid:\n              description: Number of valid user-specified stream filtering rules.\n              example: 1\n              format: int32\n              type: integer\n          required:\n            - created\n            - not_created\n            - valid\n            - invalid\n          type: object\n        - properties:\n            deleted:\n              description: Number of user-specified stream filtering rules that were deleted.\n              format: int32\n              type: integer\n            not_deleted:\n              description: Number of user-specified stream filtering rules that were not deleted.\n              format: int32\n              type: integer\n          required:\n            - deleted\n            - not_deleted\n          type: object\n      type: object\n    RulesResponseMetadata:\n      properties:\n        sent:\n          type: string\n        summary:\n          $ref: \"#/components/schemas/RulesRequestSummary\"\n      required:\n        - sent\n      type: object\n    SearchCount:\n      description: Represent a Search Count Result\n      properties:\n        end:\n          $ref: \"#/components/schemas/End\"\n        start:\n          $ref: \"#/components/schemas/Start\"\n        tweet_count:\n          $ref: \"#/components/schemas/TweetCount\"\n      required:\n        - end\n        - start\n        - tweet_count\n      type: object\n    SingleComplianceJobResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/ComplianceJob\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    SingleSpaceLookupResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Space\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    SingleTweetLookupResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Tweet\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    SingleUserLookupResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/User\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    Space:\n      description: \"\"\n      properties:\n        created_at:\n          description: Creation time of the space\n          example: 2021-07-06T18:40:40.000Z\n          format: date-time\n          type: string\n        creator_id:\n          $ref: \"#/components/schemas/UserID\"\n        host_ids:\n          description: The user ids for the hosts of the space\n          items:\n            $ref: \"#/components/schemas/UserID\"\n          type: array\n        id:\n          $ref: \"#/components/schemas/SpaceID\"\n        invited_user_ids:\n          description: An array of user ids for people who were invited to a space\n          items:\n            $ref: \"#/components/schemas/UserID\"\n          type: array\n        is_ticketed:\n          description: Denotes if the space is a ticketed space\n          example: \"false\"\n          type: boolean\n        lang:\n          description: The language of the space\n          example: en\n          type: string\n        participant_count:\n          description: The number of participants in a space\n          example: 10\n          format: int32\n          type: integer\n        scheduled_start:\n          description: A date time stamp for when a space is scheduled to begin\n          example: 2021-07-06T18:40:40.000Z\n          format: date-time\n          type: string\n        speaker_ids:\n          description: An array of user ids for people who were speakers in a space\n          items:\n            $ref: \"#/components/schemas/UserID\"\n          type: array\n        started_at:\n          description: When the space was started as a date string\n          example: 2021-7-14T04:35:55Z\n          format: date-time\n          type: string\n        state:\n          description: The current state of the space.\n          enum:\n            - live\n            - scheduled\n            - ended\n          example: live\n          type: string\n        title:\n          description: The title of the space\n          example: Spaces are Awesome\n          type: string\n        updated_at:\n          description: When the space was last updated\n          example: 2021-7-14T04:35:55Z\n          format: date-time\n          type: string\n      required:\n        - id\n        - state\n      type: object\n    SpaceID:\n      description: The unique identifier of this Space.\n      example: 1SLjjRYNejbKM\n      pattern: ^[a-zA-Z0-9]{1,13}$\n      type: string\n    Start:\n      description: The start time of the bucket\n      format: date-time\n      type: string\n    StreamingTweet:\n      description: A tweet or error that can be returned by the streaming tweet API.\n      oneOf:\n        - $ref: \"#/components/schemas/SingleTweetLookupResponse\"\n        - properties:\n            errors:\n              items:\n                $ref: \"#/components/schemas/Problem\"\n              type: array\n          required:\n            - errors\n          type: object\n      type: object\n    Tweet:\n      example:\n        author_id: \"2244994945\"\n        created_at: Wed Jan 06 18:40:40 +0000 2021\n        id: \"1346889436626259968\"\n        text: Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i\n      properties:\n        attachments:\n          description: Specifies the type of attachments (if any) present in this Tweet.\n          properties:\n            media_keys:\n              description: A list of Media Keys for each one of the media attachments (if media are attached).\n              items:\n                $ref: \"#/components/schemas/MediaKey\"\n              minItems: 1\n              type: array\n            poll_ids:\n              description: A list of poll IDs (if polls are attached).\n              items:\n                $ref: \"#/components/schemas/PollId\"\n              minItems: 1\n              type: array\n          type: object\n        author_id:\n          $ref: \"#/components/schemas/UserID\"\n        context_annotations:\n          items:\n            $ref: \"#/components/schemas/ContextAnnotation\"\n          minItems: 1\n          type: array\n        conversation_id:\n          $ref: \"#/components/schemas/TweetID\"\n        created_at:\n          description: Creation time of the Tweet.\n          example: 2021-01-06T18:40:40.000Z\n          format: date-time\n          type: string\n        entities:\n          $ref: \"#/components/schemas/FullTextEntities\"\n        geo:\n          description: The location tagged on the Tweet, if the user provided one.\n          properties:\n            coordinates:\n              $ref: \"#/components/schemas/Point\"\n            place_id:\n              $ref: \"#/components/schemas/PlaceId\"\n          type: object\n        id:\n          $ref: \"#/components/schemas/TweetID\"\n        in_reply_to_user_id:\n          $ref: \"#/components/schemas/UserID\"\n        lang:\n          description: Language of the Tweet, if detected by Twitter. Returned as a BCP47 language tag.\n          example: en\n          type: string\n        non_public_metrics:\n          description: Nonpublic engagement metrics for the Tweet at the time of the request.\n          properties:\n            impression_count:\n              description: Number of times this Tweet has been viewed.\n              format: int32\n              type: integer\n          type: object\n        organic_metrics:\n          description: Organic nonpublic engagement metrics for the Tweet at the time of the request.\n          properties:\n            impression_count:\n              description: Number of times this Tweet has been viewed.\n              type: integer\n            like_count:\n              description: Number of times this Tweet has been liked.\n              type: integer\n            reply_count:\n              description: Number of times this Tweet has been replied to.\n              type: integer\n            retweet_count:\n              description: Number of times this Tweet has been Retweeted.\n              type: integer\n          required:\n            - impression_count\n            - retweet_count\n            - reply_count\n            - like_count\n          type: object\n        possibly_sensitive:\n          description: Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences.\n          example: false\n          type: boolean\n        promoted_metrics:\n          description: Promoted nonpublic engagement metrics for the Tweet at the time of the request.\n          properties:\n            impression_count:\n              description: Number of times this Tweet has been viewed.\n              format: int32\n              type: integer\n            like_count:\n              description: Number of times this Tweet has been liked.\n              format: int32\n              type: integer\n            reply_count:\n              description: Number of times this Tweet has been replied to.\n              format: int32\n              type: integer\n            retweet_count:\n              description: Number of times this Tweet has been Retweeted.\n              format: int32\n              type: integer\n          type: object\n        public_metrics:\n          description: Engagement metrics for the Tweet at the time of the request.\n          properties:\n            like_count:\n              description: Number of times this Tweet has been liked.\n              type: integer\n            quote_count:\n              description: Number of times this Tweet has been quoted.\n              type: integer\n            reply_count:\n              description: Number of times this Tweet has been replied to.\n              type: integer\n            retweet_count:\n              description: Number of times this Tweet has been Retweeted.\n              type: integer\n          required:\n            - retweet_count\n            - reply_count\n            - like_count\n          type: object\n        referenced_tweets:\n          description: A list of Tweets this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent.\n          items:\n            properties:\n              id:\n                $ref: \"#/components/schemas/TweetID\"\n              type:\n                enum:\n                  - retweeted\n                  - quoted\n                  - replied_to\n                type: string\n            required:\n              - type\n              - id\n            type: object\n          minItems: 1\n          type: array\n        reply_settings:\n          $ref: \"#/components/schemas/ReplySettings\"\n        source:\n          description: The name of the app the user Tweeted from.\n          type: string\n        text:\n          description: The content of the Tweet.\n          example: Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i\n          type: string\n        withheld:\n          $ref: \"#/components/schemas/TweetWithheld\"\n      required:\n        - id\n        - text\n      type: object\n    TweetCount:\n      description: The count for the bucket\n      type: integer\n    TweetCountsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/SearchCount\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        meta:\n          properties:\n            next_token:\n              description: This value is used to get the next 'page' of results by providing it to the next_token parameter.\n              type: string\n            total_tweet_count:\n              description: Sum of search query count results\n              format: int32\n              type: integer\n          type: object\n      type: object\n    TweetDeleteResponse:\n      properties:\n        data:\n          properties:\n            deleted:\n              type: boolean\n          required:\n            - deleted\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    TweetID:\n      description: Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.\n      example: \"1346889436626259968\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    TweetSearchResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n        meta:\n          properties:\n            newest_id:\n              description: Most recent Tweet Id returned by search query\n              pattern: ^[0-9]{1,19}$\n              type: string\n            next_token:\n              description: This value is used to get the next 'page' of results by providing it to the next_token parameter.\n              type: string\n            oldest_id:\n              description: Oldest Tweet Id returned by search query\n              pattern: ^[0-9]{1,19}$\n              type: string\n            result_count:\n              description: Number of search query results\n              format: int32\n              type: integer\n          type: object\n      type: object\n    TweetWithheld:\n      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).\n      properties:\n        copyright:\n          description: Indicates if the content is being withheld for on the basis of copyright infringement.\n          type: boolean\n        country_codes:\n          description: Provides a list of countries where this content is not available.\n          items:\n            $ref: \"#/components/schemas/CountryCode\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        scope:\n          description: Indicates whether the content being withheld is the `tweet` or a `user`.\n          enum:\n            - tweet\n            - user\n          type: string\n      required:\n        - copyright\n        - country_codes\n      type: object\n    URL:\n      description: A validly formatted URL.\n      example: https://developer.twitter.com/en/docs/twitter-api\n      format: uri\n      type: string\n    URLFields:\n      description: Represent the portion of text recognized as a URL.\n      properties:\n        description:\n          description: Description of the URL landing page.\n          example: This is a description of the website.\n          type: string\n        display_url:\n          description: The URL as displayed in the Twitter client.\n          example: twittercommunity.com/t/introducing-…\n          type: string\n        expanded_url:\n          $ref: \"#/components/schemas/URL\"\n        images:\n          items:\n            $ref: \"#/components/schemas/URLImage\"\n          minItems: 1\n          type: array\n        status:\n          $ref: \"#/components/schemas/HTTPStatusCode\"\n        title:\n          description: Title of the page the URL points to.\n          example: Introducing the v2 follow lookup endpoints\n          type: string\n        unwound_url:\n          description: Fully resolved url\n          example: https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118\n          format: uri\n          type: string\n        url:\n          $ref: \"#/components/schemas/URL\"\n      required:\n        - url\n      type: object\n    URLImage:\n      description: Represent the information for the URL image\n      properties:\n        height:\n          $ref: \"#/components/schemas/MediaHeight\"\n        url:\n          $ref: \"#/components/schemas/URL\"\n        width:\n          $ref: \"#/components/schemas/MediaWidth\"\n      type: object\n    UnsupportedAuthenticationProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/unsupported-authentication\n              type: string\n          type: object\n      description: A problem that indicates that the authentication used is not supported.\n      type: object\n    UploadExpiration:\n      description: Expiration time of the upload URL\n      example: 2021-01-06T18:40:40.000Z\n      format: date-time\n      type: string\n    UploadUrl:\n      description: URL to which the user will upload their tweet or user IDs\n      format: uri\n      type: string\n    UrlEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndicesInclusiveExclusive\"\n        - $ref: \"#/components/schemas/URLFields\"\n      description: Represent the portion of text recognized as a URL, and its start and end position within the text.\n    UsageCapExceededProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n        - properties:\n            period:\n              enum:\n                - Daily\n                - Monthly\n              type: string\n            scope:\n              enum:\n                - Account\n                - Product\n              type: string\n            type:\n              enum:\n                - https://api.twitter.com/2/problems/usage-capped\n              type: string\n          type: object\n      description: A problem that indicates that a usage cap has been exceeded.\n      type: object\n    User:\n      description: The Twitter User object\n      example:\n        created_at: 2013-12-14T04:35:55Z\n        id: \"2244994945\"\n        name: Twitter Dev\n        protected: false\n        username: TwitterDev\n      properties:\n        created_at:\n          description: Creation time of this user.\n          format: date-time\n          type: string\n        description:\n          description: The text of this user's profile description (also known as bio), if the user provided one.\n          type: string\n        entities:\n          description: A list of metadata found in the user's profile description.\n          properties:\n            description:\n              $ref: \"#/components/schemas/FullTextEntities\"\n            url:\n              description: Expanded details for the URL specified in the user's profile, with start and end indices.\n              properties:\n                urls:\n                  items:\n                    $ref: \"#/components/schemas/UrlEntity\"\n                  minItems: 1\n                  type: array\n              type: object\n          type: object\n        id:\n          $ref: \"#/components/schemas/UserID\"\n        location:\n          description: The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.\n          type: string\n        name:\n          description: The friendly name of this user, as shown on their profile.\n          type: string\n        pinned_tweet_id:\n          $ref: \"#/components/schemas/TweetID\"\n        profile_image_url:\n          description: The URL to the profile image for this user.\n          format: uri\n          type: string\n        protected:\n          description: Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private).\n          type: boolean\n        public_metrics:\n          description: A list of metrics for this user\n          properties:\n            followers_count:\n              description: Number of users who are following this user.\n              type: integer\n            following_count:\n              description: Number of users this user is following.\n              type: integer\n            listed_count:\n              description: The number of lists that include this user.\n              type: integer\n            tweet_count:\n              description: The number of Tweets (including Retweets) posted by this user.\n              type: integer\n          required:\n            - followers_count\n            - following_count\n            - tweet_count\n            - listed_count\n          type: object\n        url:\n          description: The URL specified in the user's profile.\n          type: string\n        username:\n          $ref: \"#/components/schemas/UserName\"\n        verified:\n          description: Indicate if this user is a verified Twitter User.\n          type: boolean\n        withheld:\n          $ref: \"#/components/schemas/UserWithheld\"\n      required:\n        - id\n        - name\n        - username\n    UserID:\n      description: Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.\n      example: \"2244994945\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    UserName:\n      description: The Twitter handle (screen name) of this user.\n      pattern: ^[A-Za-z0-9_]{1,15}$\n      type: string\n    UserWithheld:\n      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).\n      properties:\n        country_codes:\n          description: Provides a list of countries where this content is not available.\n          items:\n            $ref: \"#/components/schemas/CountryCode\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        scope:\n          description: Indicates that the content being withheld is a `user`.\n          enum:\n            - user\n          type: string\n      required:\n        - country_codes\n      type: object\n    UsersBlockingMutationResponse:\n      properties:\n        data:\n          properties:\n            blocking:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    UsersFollowingCreateResponse:\n      properties:\n        data:\n          properties:\n            following:\n              type: boolean\n            pending_follow:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    UsersFollowingDeleteResponse:\n      properties:\n        data:\n          properties:\n            following:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    UsersFollowingLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/User\"\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n        meta:\n          properties:\n            next_token:\n              description: The next token\n              pattern: ^[a-zA-Z0-9]+$\n              type: string\n            previous_token:\n              description: The previous token\n              pattern: ^[a-zA-Z0-9]+$\n              type: string\n            result_count:\n              description: The number of user results returned in this response\n              type: integer\n          type: object\n      type: object\n    UsersLikesCreateRequest:\n      properties:\n        tweet_id:\n          pattern: ^[0-9]{1,19}$\n          type: string\n      required:\n        - tweet_id\n      type: object\n    UsersLikesCreateResponse:\n      properties:\n        data:\n          properties:\n            liked:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    UsersLikesDeleteResponse:\n      properties:\n        data:\n          properties:\n            liked:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    UsersMutingMutationResponse:\n      properties:\n        data:\n          properties:\n            muting:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    UsersRetweetsCreateRequest:\n      properties:\n        tweet_id:\n          pattern: ^[0-9]{1,19}$\n          type: string\n      required:\n        - tweet_id\n      type: object\n    UsersRetweetsCreateResponse:\n      properties:\n        data:\n          properties:\n            retweeted:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    UsersRetweetsDeleteResponse:\n      properties:\n        data:\n          properties:\n            retweeted:\n              type: boolean\n          type: object\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    Video:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n        - properties:\n            duration_ms:\n              type: integer\n            non_public_metrics:\n              description: Nonpublic engagement metrics for the Media at the time of the request.\n              properties:\n                playback_0_count:\n                  description: Number of users who made it through 0% of the video.\n                  format: int32\n                  type: integer\n                playback_100_count:\n                  description: Number of users who made it through 100% of the video.\n                  format: int32\n                  type: integer\n                playback_25_count:\n                  description: Number of users who made it through 25% of the video.\n                  format: int32\n                  type: integer\n                playback_50_count:\n                  description: Number of users who made it through 50% of the video.\n                  format: int32\n                  type: integer\n                playback_75_count:\n                  description: Number of users who made it through 75% of the video.\n                  format: int32\n                  type: integer\n              type: object\n            organic_metrics:\n              description: Organic nonpublic engagement metrics for the Media at the time of the request.\n              properties:\n                playback_0_count:\n                  description: Number of users who made it through 0% of the video.\n                  format: int32\n                  type: integer\n                playback_100_count:\n                  description: Number of users who made it through 100% of the video.\n                  format: int32\n                  type: integer\n                playback_25_count:\n                  description: Number of users who made it through 25% of the video.\n                  format: int32\n                  type: integer\n                playback_50_count:\n                  description: Number of users who made it through 50% of the video.\n                  format: int32\n                  type: integer\n                playback_75_count:\n                  description: Number of users who made it through 75% of the video.\n                  format: int32\n                  type: integer\n                view_count:\n                  description: Number of times this video has been viewed.\n                  format: int32\n                  type: integer\n              type: object\n            preview_image_url:\n              format: uri\n              type: string\n            promoted_metrics:\n              description: Promoted nonpublic engagement metrics for the Media at the time of the request.\n              properties:\n                playback_0_count:\n                  description: Number of users who made it through 0% of the video.\n                  format: int32\n                  type: integer\n                playback_100_count:\n                  description: Number of users who made it through 100% of the video.\n                  format: int32\n                  type: integer\n                playback_25_count:\n                  description: Number of users who made it through 25% of the video.\n                  format: int32\n                  type: integer\n                playback_50_count:\n                  description: Number of users who made it through 50% of the video.\n                  format: int32\n                  type: integer\n                playback_75_count:\n                  description: Number of users who made it through 75% of the video.\n                  format: int32\n                  type: integer\n                view_count:\n                  description: Number of times this video has been viewed.\n                  format: int32\n                  type: integer\n              type: object\n            public_metrics:\n              description: Engagement metrics for the Media at the time of the request.\n              properties:\n                view_count:\n                  description: Number of times this video has been viewed.\n                  format: int32\n                  type: integer\n              type: object\n            type:\n              enum:\n                - video\n              type: string\n          type: object\n      type: object\n  securitySchemes:\n    BearerToken:\n      scheme: bearer\n      type: http\n    UserToken:\n      scheme: OAuth\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@57168637e057c3e5ebe933717019f6f25bc1886e/-/blob/APIs/twitter.com/current/2.21/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/twitter.com/current/2.21/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/2/spaces\": get: responses: code 200: contents: media: \"application/json\": generate schema: field errors: item: oneOf: discriminator: unable to map \"https://api.twitter.com/2/problems/rule-cap\" to \"https://raw.githubusercontent.com/APIs-guru/openapi-directory/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/twitter.com/current/2.21/openapi.yaml#/components/schemas/RulesCapProblem\""
}