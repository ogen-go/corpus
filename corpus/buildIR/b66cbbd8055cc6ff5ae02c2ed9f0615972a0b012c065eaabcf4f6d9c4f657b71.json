{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/redhat-developer/app-services-sdk-java"
		},
		"file": {
			"name": "srs-fleet-manager.json",
			"size": 0,
			"path": ".openapi/srs-fleet-manager.json",
			"byteSize": 27632,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Service Registry Management API\",\n    \"version\": \"0.0.6\",\n    \"description\": \"Service Registry Management API is a REST API for managing Service Registry instances. Service Registry is a datastore for event schemas and API designs, which is based on the open source Apicurio Registry project.\",\n    \"contact\": {\n      \"name\": \"Red Hat Hybrid Cloud Console\",\n      \"url\": \"https://console.redhat.com/application-services/service-registry/\",\n      \"email\": \"rhosak-eval-support@redhat.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api.openshift.com\",\n      \"description\": \"Main (production) server\"\n    },\n    {\n      \"url\": \"https://api.stage.openshift.com\",\n      \"description\": \"Staging server\"\n    },\n    {\n      \"url\": \"http://localhost:8000\",\n      \"description\": \"localhost\"\n    },\n    {\n      \"url\": \"/\",\n      \"description\": \"current domain\"\n    }\n  ],\n  \"paths\": {\n    \"/api/serviceregistry_mgmt/v1/registries\": {\n      \"description\": \"Manage the list of all Registry instances\",\n      \"get\": {\n        \"tags\": [\n          \"Registries\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/page\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/size\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/orderBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistryList\"\n                }\n              }\n            },\n            \"description\": \"A successful response.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"401Example\": {\n                    \"$ref\": \"#/components/examples/401Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Auth token is invalid.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"403Example\": {\n                    \"$ref\": \"#/components/examples/403Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"User is not authorized to access the service.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"500Example\": {\n                    \"$ref\": \"#/components/examples/500Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Unexpected error occurred.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": [\n            ]\n          }\n        ],\n        \"operationId\": \"getRegistries\",\n        \"description\": \"Get the list of all Registry instances\"\n      },\n      \"post\": {\n        \"requestBody\": {\n          \"description\": \"A new `Registry` instance to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegistryCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"tags\": [\n          \"Registries\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Registry\"\n                }\n              }\n            },\n            \"description\": \"A successful response. The full request to create a new `Registry` instance is processed asynchronously. The user should verify the result of the operation by reading the `status` property of the created `Registry` instance.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"401Example\": {\n                    \"$ref\": \"#/components/examples/401Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Auth token is invalid.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"403Example\": {\n                    \"$ref\": \"#/components/examples/403Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"User is not authorized to access the service.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"500Example\": {\n                    \"$ref\": \"#/components/examples/500Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Unexpected error occurred.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": [\n            ]\n          }\n        ],\n        \"operationId\": \"createRegistry\",\n        \"description\": \"Create a new Registry instance\"\n      }\n    },\n    \"/api/serviceregistry_mgmt/v1/registries/{id}\": {\n      \"description\": \"Manage a specific Registry instance\",\n      \"get\": {\n        \"tags\": [\n          \"Registries\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Registry\"\n                }\n              }\n            },\n            \"description\": \"Successful response - returns a single `Registry` instance.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"401Example\": {\n                    \"$ref\": \"#/components/examples/401Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Auth token is invalid.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"403Example\": {\n                    \"$ref\": \"#/components/examples/403Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"User is not authorized to access the service.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"404Example\": {\n                    \"$ref\": \"#/components/examples/404Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"No Service Registry instance with specified id exists.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": [\n            ]\n          }\n        ],\n        \"operationId\": \"getRegistry\",\n        \"summary\": \"Get a Registry instance\",\n        \"description\": \"Gets the details of a single instance of a `Registry`.\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Registries\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"401Example\": {\n                    \"$ref\": \"#/components/examples/401Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Auth token is invalid\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"403Example\": {\n                    \"$ref\": \"#/components/examples/403Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"User is not authorized to access the service.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"404Example\": {\n                    \"$ref\": \"#/components/examples/404Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"No Service Registry instance with the specified id exists\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": [\n            ]\n          }\n        ],\n        \"operationId\": \"deleteRegistry\",\n        \"summary\": \"Delete a Registry instance\",\n        \"description\": \"Deletes an existing `Registry` instance and all of the data that it stores. Important: Users should export the registry data before deleting the instance, e.g., using the Service Registry web console, core REST API, or `rhoas` CLI.\"\n      },\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"description\": \"A unique identifier for a `Registry` instance.\",\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ]\n    },\n    \"/api/serviceregistry_mgmt/v1/errors/{id}\": {\n      \"description\": \"Get information about a specific error type. This is not an instance of a specific error.\",\n      \"get\": {\n        \"tags\": [\n          \"Errors\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            },\n            \"description\": \"Successful response - returns a single `Error`.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"404Example\": {\n                    \"$ref\": \"#/components/examples/404Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"No Service Registry with the specified id exists.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"500Example\": {\n                    \"$ref\": \"#/components/examples/500Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Unexpected error occurred.\"\n          }\n        },\n        \"operationId\": \"getError\",\n        \"description\": \"Get information about a specific error type\"\n      },\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"description\": \"A unique identifier for an error type.\",\n          \"schema\": {\n            \"minimum\": 1,\n            \"type\": \"integer\"\n          },\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ]\n    },\n    \"/api/serviceregistry_mgmt/v1/errors\": {\n      \"description\": \"Get a list of error types that can be returned by this API. These are not instances of specific errors.\",\n      \"get\": {\n        \"tags\": [\n          \"Errors\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/page\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/size\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorList\"\n                }\n              }\n            },\n            \"description\": \"A successful response.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"500Example\": {\n                    \"$ref\": \"#/components/examples/500Example\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Unexpected error occurred\"\n          }\n        },\n        \"operationId\": \"getErrors\",\n        \"description\": \"Get the list of all errors\"\n      }\n    },\n    \"/api/serviceregistry_mgmt/v1/status\": {\n      \"description\": \"Retrieves the status of resources e.g., whether we have reached maximum service capacity\",\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceStatus\"\n                }\n              }\n            },\n            \"description\": \"Successfully returned service status.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            },\n            \"description\": \"Internal error retrieving service status.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Bearer\": [\n            ]\n          }\n        ],\n        \"operationId\": \"getServiceStatus\",\n        \"description\": \"Get the service status\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ErrorList\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/List\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"items\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"List\": {\n        \"required\": [\n          \"kind\",\n          \"page\",\n          \"size\",\n          \"total\",\n          \"items\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"kind\": {\n            \"type\": \"string\"\n          },\n          \"page\": {\n            \"type\": \"integer\"\n          },\n          \"size\": {\n            \"type\": \"integer\"\n          },\n          \"total\": {\n            \"type\": \"integer\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ObjectReference\"\n            }\n          }\n        }\n      },\n      \"Error\": {\n        \"required\": [\n          \"id\",\n          \"kind\",\n          \"href\",\n          \"code\",\n          \"reason\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"reason\": {\n            \"type\": \"string\"\n          },\n          \"operation_id\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"type\": \"string\"\n          },\n          \"href\": {\n            \"type\": \"string\"\n          },\n          \"code\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RegistryList\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/List\"\n          },\n          {\n            \"required\": [\n              \"items\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"items\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Registry\"\n                }\n              }\n            },\n            \"example\": {\n              \"kind\": \"RegistryList\",\n              \"page\": \"1\",\n              \"size\": \"1\",\n              \"total\": \"1\",\n              \"items\": [\n                {\n                  \"id\": \"llmNteR4P7waRp5nJIReG\",\n                  \"kind\": \"serviceregistry\",\n                  \"href\": \"/api/serviceregistry_mgmt/v1/registries/llmNteR4P7waRp5nJIReG\",\n                  \"name\": \"sample-registry\",\n                  \"status\": \"ready\",\n                  \"owner\": \"some_id\",\n                  \"registryUrl\": \"https://somehost:433/t/12345\",\n                  \"browserUrl\": \"https://someuihost:443/registries/12345\",\n                  \"created_at\": \"2020-01-01T00:00:00Z\",\n                  \"updated_at\": \"2022-01-01T00:00:00Z\",\n                  \"instance_type\": \"standard\"\n                }\n              ]\n            }\n          }\n        ]\n      },\n      \"RegistryStatusValue\": {\n        \"description\": \"\\\"accepted\\\": Registry status when accepted for processing.\\n\\n\\\"provisioning\\\": Registry status when provisioning a new instance.\\n\\n\\\"ready\\\": Registry status when ready for use.\\n\\n\\\"failed\\\": Registry status when the provisioning failed. When removing a Registry instance in this state,\\nthe status transitions directly to \\\"deleting\\\".\\n\\n\\n\\\"deprovision\\\": Registry status when accepted for deprovisioning.\\n\\n\\\"deleting\\\": Registry status when deprovisioning.\\n\",\n        \"enum\": [\n          \"accepted\",\n          \"provisioning\",\n          \"ready\",\n          \"failed\",\n          \"deprovision\",\n          \"deleting\"\n        ],\n        \"type\": \"string\"\n      },\n      \"RegistryInstanceTypeValue\": {\n        \"description\": \"\\\"standard\\\": Standard, full-featured Registry instance\\n\\n\\\"eval\\\": Evaluation (Trial) instance, provided for a limited time\\n\",\n        \"enum\": [\n          \"standard\",\n          \"eval\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ServiceStatus\": {\n        \"title\": \"Root type for ServiceStatus\",\n        \"description\": \"Schema for the service status response body\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"max_instances_reached\": {\n            \"description\": \"Boolean property indicating if the maximum number of total Registry instances have been reached, therefore creation of more instances should not be allowed.\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"example\": {\n          \"max_instances_reached\": true\n        }\n      },\n      \"RegistryCreate\": {\n        \"title\": \"Root type for RegistryCreate\",\n        \"description\": \"Information used to create a new Service Registry instance in a multi-tenant deployment.\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"User-defined Registry instance name. Required. Must be unique within a given organization.\",\n            \"maxLength\": 32,\n            \"minLength\": 1,\n            \"pattern\": \"[a-z]([a-z0-9\\\\-]*[a-z0-9])?\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"User-provided description of the new Service Registry instance. Not required.\",\n            \"maxLength\": 255,\n            \"type\": \"string\"\n          }\n        },\n        \"example\": {\n          \"name\": \"my-registry\",\n          \"description\": \"This Registry instance is for a development environment only.\"\n        }\n      },\n      \"ObjectReference\": {\n        \"required\": [\n          \"id\",\n          \"kind\",\n          \"href\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"type\": \"string\"\n          },\n          \"href\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Registry\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ObjectReference\"\n          },\n          {\n            \"title\": \"Root type for Registry\",\n            \"description\": \"Service Registry instance in a multi-tenant deployment.\",\n            \"required\": [\n              \"id\",\n              \"status\",\n              \"created_at\",\n              \"updated_at\",\n              \"instance_type\",\n              \"name\",\n              \"owner\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"status\": {\n                \"$ref\": \"#/components/schemas/RegistryStatusValue\"\n              },\n              \"registryUrl\": {\n                \"type\": \"string\"\n              },\n              \"browserUrl\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"description\": \"User-defined Registry instance name. Does not have to be unique.\",\n                \"type\": \"string\"\n              },\n              \"registryDeploymentId\": {\n                \"description\": \"Identifier of a multi-tenant deployment, where this Service Registry instance resides.\",\n                \"type\": \"integer\"\n              },\n              \"owner\": {\n                \"description\": \"Registry instance owner.\",\n                \"type\": \"string\"\n              },\n              \"description\": {\n                \"description\": \"Description of the Registry instance.\",\n                \"type\": \"string\"\n              },\n              \"created_at\": {\n                \"format\": \"date-time\",\n                \"description\": \"ISO 8601 UTC timestamp.\",\n                \"type\": \"string\"\n              },\n              \"updated_at\": {\n                \"format\": \"date-time\",\n                \"description\": \"ISO 8601 UTC timestamp.\",\n                \"type\": \"string\"\n              },\n              \"instance_type\": {\n                \"$ref\": \"#/components/schemas/RegistryInstanceTypeValue\",\n                \"description\": \"Type of the Registry instance. This will determine functional and/or non-functional features provided by the instance.\"\n              }\n            },\n            \"example\": {\n              \"id\": \"42\",\n              \"name\": \"my-registry\",\n              \"registryUrl\": \"https://registry.apps.example.com/t/5213600b-afc9-487e-8cc3-339f4248d706\",\n              \"browserUrl\": \"https://registry-ui.apps.example.com/t/5213600b-afc9-487e-8cc3-339f4248d706\",\n              \"status\": \"provisioning\",\n              \"registryDeploymentId\": 1,\n              \"owner\": \"ownername\",\n              \"updated_at\": \"2022-01-01T00:00:00Z\",\n              \"created_at\": \"2020-01-01T00:00:00Z\",\n              \"instance_type\": \"standard\"\n            }\n          }\n        ]\n      }\n    },\n    \"parameters\": {\n      \"id\": {\n        \"name\": \"id\",\n        \"description\": \"The id of record.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"in\": \"path\",\n        \"required\": true\n      },\n      \"page\": {\n        \"examples\": {\n          \"page\": {\n            \"value\": 0\n          }\n        },\n        \"name\": \"page\",\n        \"description\": \"Page index.\",\n        \"schema\": {\n          \"minimum\": 0,\n          \"type\": \"integer\"\n        },\n        \"in\": \"query\",\n        \"required\": false\n      },\n      \"size\": {\n        \"examples\": {\n          \"size\": {\n            \"value\": 100\n          }\n        },\n        \"name\": \"size\",\n        \"description\": \"Number of items in each page.\",\n        \"schema\": {\n          \"maximum\": 500,\n          \"minimum\": 1,\n          \"type\": \"integer\"\n        },\n        \"in\": \"query\",\n        \"required\": false\n      },\n      \"orderBy\": {\n        \"style\": \"form\",\n        \"explode\": true,\n        \"examples\": {\n          \"orderBy\": {\n            \"value\": \"name asc\"\n          }\n        },\n        \"name\": \"orderBy\",\n        \"description\": \"Specifies the order by criteria. The syntax of this parameter is\\nsimilar to the syntax of the _order by_ clause of an SQL statement.\\nEach query can be ordered by any of the request fields.\\nFor example, to retrieve all Registry instances ordered by their name:\\n\\n```sql\\nname asc\\n```\\n\\nOr to retrieve all Registry instances ordered by their name _and_ created date:\\n\\n```sql\\nname asc, created_at asc\\n```\\n\\nIf the parameter isn't provided, or if the value is empty, \\nthe results are ordered by name.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"in\": \"query\",\n        \"required\": false\n      },\n      \"search\": {\n        \"style\": \"form\",\n        \"explode\": true,\n        \"examples\": {\n          \"search\": {\n            \"value\": \"name = my-registry and status = AVAILABLE\"\n          }\n        },\n        \"name\": \"search\",\n        \"description\": \"Search criteria.\\n\\nThe syntax of this parameter is similar to the syntax of the _where_ clause of an\\nSQL statement. Allowed fields in the search are: `name`, `status`. Allowed comparators are `=` or `LIKE`.\\nAllowed joins are `AND` and `OR`, however there is a limit of max 10 joins in the search query.\\n\\nExamples:\\n\\nTo retrieve a request with name equal `my-registry`, the value should be:\\n\\n```\\nname = my-registry \\n```\\n\\nTo retrieve a request with its name starting with `my`, the value should be:\\n\\n```\\nname like my%25\\n```\\n\\nIf the parameter isn't provided, or if the value is empty, all the Registry instances\\nthat the user has permission to see are returned.\\n\\nNote: If the query is invalid, an error is returned.\\n\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"in\": \"query\",\n        \"required\": false\n      }\n    },\n    \"examples\": {\n      \"404Example\": {\n        \"value\": {\n          \"id\": \"404\",\n          \"kind\": \"Error\",\n          \"href\": \"/api/managed-services-api/v1/errors/7\",\n          \"code\": \"MGD-SERV-API-7\",\n          \"reason\": \"The requested resource doesn't exist.\"\n        }\n      },\n      \"401Example\": {\n        \"value\": {\n          \"id\": \"11\",\n          \"kind\": \"Error\",\n          \"href\": \"/api/serviceregistry_mgmt/v1/errors/11\",\n          \"code\": \"CLOUD-SERV-API-11\",\n          \"reason\": \"Unable to verify JWT token: Required authorization token not found.\",\n          \"operation_id\": \"1iY3UhEhwmXBpWPfI2lNekpd4ZD\"\n        }\n      },\n      \"403Example\": {\n        \"value\": {\n          \"id\": \"4\",\n          \"kind\": \"Error\",\n          \"href\": \"/api/serviceregistry_mgmt/v1/errors/4\",\n          \"code\": \"MGD-SERV-API-4\",\n          \"reason\": \"User 'foo-bar' is not authorized to access the service.\",\n          \"operation_id\": \"1lY3UiEhznXBpWPfI2lNejpd4YC\"\n        }\n      },\n      \"500Example\": {\n        \"value\": {\n          \"id\": \"9\",\n          \"kind\": \"Error\",\n          \"href\": \"/api/serviceregistry_mgmt/v1/errors/9\",\n          \"code\": \"MGD-SERV-API-9\",\n          \"reason\": \"Unspecified error.\",\n          \"operation_id\": \"1ieELvF9jMQY6YghfM9gGRsHvEW\"\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\",\n        \"type\": \"http\"\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"Errors\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Registries\",\n      \"description\": \"\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/redhat-developer/app-services-sdk-java@e1c2605fd3feec9e1832325acbb3b8af4c11195a/-/blob/.openapi/srs-fleet-manager.json",
			"externalURLs": [
				{
					"url": "https://github.com/redhat-developer/app-services-sdk-java/blob/e1c2605fd3feec9e1832325acbb3b8af4c11195a/.openapi/srs-fleet-manager.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/serviceregistry_mgmt/v1/registries\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: merge properties: try to merge conflicting property schemas: merge item schema: schema type mismatch:  and object"
}