{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatInsights/insights-rbac"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "docs/source/specs/openapi.json",
			"byteSize": 111254,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"The API for Role Based Access Control.\",\n    \"version\": \"1.0.0\",\n    \"title\": \"Role Based Access Control\",\n    \"license\": {\n      \"name\": \"AGPL-3.0\",\n      \"url\": \"https://opensource.org/licenses/AGPL-3.0\"\n    }\n  },\n  \"security\": [\n    {\n      \"basic_auth\": []\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Principal\",\n      \"description\": \"Operations about principals\"\n    },\n    {\n      \"name\": \"Group\",\n      \"description\": \"Operations about groups\"\n    },\n    {\n      \"name\": \"Role\",\n      \"description\": \"Operations about roles\"\n    },\n    {\n      \"name\": \"Policy\",\n      \"description\": \"Operations about policies\"\n    },\n    {\n      \"name\": \"Access\",\n      \"description\": \"Operations about access\"\n    },\n    {\n      \"name\": \"Status\",\n      \"description\": \"Operations about status\"\n    },\n    {\n      \"name\": \"CrossAccountRequest\",\n      \"description\": \"Operations about cross account requests\"\n    }\n  ],\n  \"paths\": {\n    \"/cross-account-requests/\": {\n      \"get\": {\n        \"tags\": [\n          \"CrossAccountRequest\"\n        ],\n        \"summary\": \"List the cross account requests for a user or account\",\n        \"description\": \"By default, responses are sorted in ascending order by created_at\",\n        \"operationId\": \"listCrossAccountRequests\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"query_by\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource by either a user's ID, or a client's org. The default value is target_org.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user_id\",\n                \"target_org\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"account\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by=user_id to further filter a user's requests by account number.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"org_id\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource by an org id. Value can be a comma-separated list of ids. To be used in tandem with ?query_by=user_id to further filter a user's requests by org id.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"approved_only\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource which have been approved.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"true\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource based on status.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"pending\",\n                \"approved\",\n                \"denied\",\n                \"cancelled\",\n                \"expired\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering by field. For inverse ordering, use '-', e.g. ?order_by=-start_date.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"request_id\",\n                \"start_date\",\n                \"end_date\",\n                \"created\",\n                \"modified\",\n                \"status\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of cross account request objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CrossAccountRequestPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to list cross account requests\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"CrossAccountRequest\"\n        ],\n        \"summary\": \"Create a cross account request\",\n        \"operationId\": \"createCrossAccountRequests\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CrossAccountRequestIn\"\n              }\n            }\n          },\n          \"description\": \"CrossAccountRequest to create\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"An object describing the cross account request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CrossAccountRequestOut\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to create cross account request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cross-account-requests/{uuid}/\": {\n      \"get\": {\n        \"tags\": [\n          \"CrossAccountRequest\"\n        ],\n        \"summary\": \"Get a cross account request\",\n        \"operationId\": \"getCrossAccountRequest\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of cross account request to get\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"query_by\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource by either a user's ID, or a client's org. The default value is target_org.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user_id\",\n                \"target_org\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"account\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource by an account number. Value can be a comma-separated list of ids. To be used in tandem with ?query_by=user_id to further filter a user's requests by account number.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"approved_only\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource which have been approved.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"true\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A cross account request object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CrossAccountRequestDetail\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to get group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"CrossAccountRequest\"\n        ],\n        \"summary\": \"Update a cross account request\",\n        \"operationId\": \"putCrossAccountRequest\",\n        \"description\": \"For TAM requestor to update the start_date/end_date/roles of an existing cross account request.\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of cross account request to get\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CrossAccountRequestUpdateIn\"\n              }\n            }\n          },\n          \"description\": \"Updates to CrossAccountRequest\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A cross account request object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CrossAccountRequestDetail\"\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"An object describing the cross account request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CrossAccountRequestOut\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to get group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"CrossAccountRequest\"\n        ],\n        \"summary\": \"Patch a cross account request\",\n        \"operationId\": \"patchCrossAccountRequest\",\n        \"description\": \"Patch the start_date/end_date/roles of an existing request. Could be used by TAM requestor to cancel request or target account admin to approve/deny request.\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of cross account request to get\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CrossAccountRequestPatch\"\n              }\n            }\n          },\n          \"description\": \"Updates to CrossAccountRequest\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A cross account request object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CrossAccountRequestDetail\"\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"An object describing the cross account request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CrossAccountRequestOut\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to get group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/status/\": {\n      \"get\": {\n        \"tags\": [\n          \"Status\"\n        ],\n        \"summary\": \"Obtain server status\",\n        \"operationId\": \"getStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"An object describing the server status\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/principals/\": {\n      \"get\": {\n        \"tags\": [\n          \"Principal\"\n        ],\n        \"summary\": \"List the principals for a tenant\",\n        \"description\": \"By default, responses are sorted in ascending order by username\",\n        \"operationId\": \"listPrincipals\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"match_criteria\",\n            \"required\": false,\n            \"description\": \"Parameter for specifying the matching criteria for an object's name and/or email. Currently, match_criteria of partial searches for a username/email using \\\"starts with\\\" pattern.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"partial\",\n                \"exact\"\n              ],\n              \"default\": \"exact\"\n            }\n          },\n          {\n            \"name\": \"usernames\",\n            \"in\": \"query\",\n            \"description\": \"Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"userA,userB\"\n            }\n          },\n          {\n            \"name\": \"sort_order\",\n            \"in\": \"query\",\n            \"description\": \"The sort order of the query, either ascending or descending. Defaults to ascending.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ]\n            }\n          },\n          {\n            \"name\": \"email\",\n            \"in\": \"query\",\n            \"description\": \"E-mail address of principal to search for. Could be combined with match_criteria for searching.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Set the status of users to get back.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"enabled\",\n                \"disabled\",\n                \"all\"\n              ],\n              \"default\": \"enabled\"\n            }\n          },\n          {\n            \"name\": \"admin_only\",\n            \"in\": \"query\",\n            \"description\": \"Get only admin users within an account. Setting this would ignore the parameters: usernames, email\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"true\",\n                \"false\"\n              ],\n              \"default\": \"false\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering principals by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-username\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"username\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of principals\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PrincipalPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to list principals\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/groups/\": {\n      \"post\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Create a group in a tenant\",\n        \"operationId\": \"createGroup\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Group\"\n              }\n            }\n          },\n          \"description\": \"Group to create in tenant\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"An object describing the group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupOut\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to create group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"List the groups for a tenant\",\n        \"description\": \"By default, responses are sorted in ascending order by group name\",\n        \"operationId\": \"listGroups\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/NameFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/NameMatchCriteria\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ScopeFilter\"\n          },\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"A username for a principal to filter for groups\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"uuid\",\n            \"in\": \"query\",\n            \"description\": \"A list of UUIDs to filter listed groups.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"explode\": false,\n            \"style\": \"form\"\n          },\n          {\n            \"name\": \"role_names\",\n            \"in\": \"query\",\n            \"description\": \"List of role name to filter for groups. It is exact match but case-insensitive\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"explode\": false,\n            \"style\": \"form\"\n          },\n          {\n            \"name\": \"role_discriminator\",\n            \"in\": \"query\",\n            \"description\": \"Discriminator that works with role_names to indicate matching all/any of the role names\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"all\",\n                \"any\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering groups by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"name\",\n                \"modified\",\n                \"principalCount\",\n                \"policyCount\"\n              ]\n            }\n          },\n          {\n            \"name\": \"platform_default\",\n            \"in\": \"query\",\n            \"description\": \"An optional flag to return either platform default or non-platform default groups.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"admin_default\",\n            \"in\": \"query\",\n            \"description\": \"An optional flag to return either admin default or non-admin default groups.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"system\",\n            \"in\": \"query\",\n            \"description\": \"An optional flag to return either system or non-system groups.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of group objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to list groups\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/groups/{uuid}/\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get a group in the tenant\",\n        \"operationId\": \"getGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group to get\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A Group object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupWithPrincipalsAndRoles\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to get group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Update a group in the tenant\",\n        \"operationId\": \"updateGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Group\"\n              }\n            }\n          },\n          \"description\": \"Group to update in tenant\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Group updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupOut\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to update group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Delete a group in the tenant\",\n        \"operationId\": \"deleteGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Group deleted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to delete group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/groups/{uuid}/principals/\": {\n      \"post\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Add a principal to a group in the tenant\",\n        \"operationId\": \"addPrincipalToGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/GroupPrincipalIn\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Group updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupWithPrincipalsAndRoles\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Input\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to update principals in group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get a list of principals from a group in the tenant\",\n        \"description\": \"By default, responses are sorted in ascending order by username\",\n        \"operationId\": \"getPrincipalsFromGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group from which to get principals\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          },\n          {\n            \"name\": \"principal_username\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering group principals by principal `username` using string contains search.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering principals by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-username\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"username\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of principals attached to group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PrincipalPagination\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Input\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Remove a principal from a group in the tenant\",\n        \"operationId\": \"deletePrincipalFromGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          },\n          {\n            \"name\": \"usernames\",\n            \"in\": \"query\",\n            \"description\": \"A comma separated list of usernames for principals to remove from the group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Principals removed from group\"\n          },\n          \"400\": {\n            \"description\": \"Bad Input\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to remove principals from group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/groups/{uuid}/roles/\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"List the roles for a group in the tenant\",\n        \"description\": \"By default, responses are sorted in ascending order by role name\",\n        \"operationId\": \"listRolesForGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          },\n          {\n            \"name\": \"exclude\",\n            \"in\": \"query\",\n            \"description\": \"If this is set to true, the result would be roles excluding the ones in the group\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"role_name\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering group roles by role `name` using string contains search.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"role_display_name\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering group roles by role `display_name` using string contains search.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"role_description\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering group roles by role `description` using string contains search.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"role_system\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering group roles by system flag.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"role_external_tenant\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering group roles by role `external_tenant` using string search.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering roles by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"name\",\n                \"display_name\",\n                \"modified\",\n                \"policyCount\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of roles for a group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupRolesPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to list roles for group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Add a role to a group in the tenant\",\n        \"operationId\": \"addRoleToGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/GroupRoleIn\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Group updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"data\"\n                  ],\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/RoleOut\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Input\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to update roles for group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Remove a role from a group in the tenant\",\n        \"operationId\": \"deleteRoleFromGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of group to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          },\n          {\n            \"name\": \"roles\",\n            \"in\": \"query\",\n            \"description\": \"A comma separated list of role UUIDs for roles to remove from the group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Roles removed from group\"\n          },\n          \"400\": {\n            \"description\": \"Bad Input\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to remove roles from group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/\": {\n      \"post\": {\n        \"tags\": [\n          \"Role\"\n        ],\n        \"summary\": \"Create a roles for a tenant\",\n        \"operationId\": \"createRoles\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleIn\"\n              }\n            }\n          },\n          \"description\": \"Role to create\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"An object describing the role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleWithAccess\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to create role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Role\"\n        ],\n        \"summary\": \"List the roles for a tenant\",\n        \"description\": \"By default, responses are sorted in ascending order by role name\",\n        \"operationId\": \"listRoles\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/NameFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/SystemFilter\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"display_name\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering resource by display_name using string contains search.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/NameMatchCriteria\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ScopeFilter\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering roles by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"name\",\n                \"display_name\",\n                \"modified\",\n                \"policyCount\"\n              ]\n            }\n          },\n          {\n            \"name\": \"add_fields\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Parameter for add list of fields to display for roles.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"groups_in\",\n                  \"groups_in_count\"\n                ]\n              }\n            },\n            \"explode\": false,\n            \"style\": \"form\"\n          },\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"application\",\n            \"in\": \"query\",\n            \"description\": \"The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"permission\",\n            \"in\": \"query\",\n            \"description\": \"The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"external_tenant\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Parameter for filtering roles by external tenant name using string search.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of role objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RolePaginationDynamic\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to list roles\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/{uuid}/\": {\n      \"get\": {\n        \"tags\": [\n          \"Role\"\n        ],\n        \"summary\": \"Get a role in the tenant\",\n        \"operationId\": \"getRole\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of role to get\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/ScopeFilter\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A Role object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleWithAccess\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to get role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Role\"\n        ],\n        \"summary\": \"Delete a role in the tenant\",\n        \"operationId\": \"deleteRole\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of role to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Role deleted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to delete role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Role\"\n        ],\n        \"summary\": \"Update a Role in the tenant\",\n        \"operationId\": \"updateRole\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of role to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleWithAccess\"\n              }\n            }\n          },\n          \"description\": \"Update to a Role\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Role updated\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to update role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Role\"\n        ],\n        \"summary\": \"Patch a Role in the tenant\",\n        \"operationId\": \"patchRole\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of role to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RolePatch\"\n              }\n            }\n          },\n          \"description\": \"Patch to a Role\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Role patched\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleWithAccess\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to patch role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/{uuid}/access/\": {\n      \"get\": {\n        \"tags\": [\n          \"Role\"\n        ],\n        \"summary\": \"Get access for a role in the tenant\",\n        \"operationId\": \"getRoleAccess\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of the role\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of the access objects for a role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccessPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to get access for role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/policies/\": {\n      \"post\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"summary\": \"Create a policy in a tenant\",\n        \"operationId\": \"createPolicies\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PolicyIn\"\n              }\n            }\n          },\n          \"description\": \"Policy to create\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"An object describing the policy\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PolicyExtended\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"summary\": \"List the policies in the tenant\",\n        \"description\": \"By default, responses are sorted in ascending order by policy name\",\n        \"operationId\": \"listPolicies\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/NameFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ScopeFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/GroupNameFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/GroupUUIDFilter\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering policies by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"name\",\n                \"modified\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of policy objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PolicyPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/policies/{uuid}/\": {\n      \"get\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"summary\": \"Get a policy in the tenant\",\n        \"operationId\": \"getPolicy\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of policy to get\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A Policy object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PolicyExtended\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"summary\": \"Update a policy in the tenant\",\n        \"operationId\": \"updatePolicy\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of policy to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PolicyIn\"\n              }\n            }\n          },\n          \"description\": \"Policy to update\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A Policy object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PolicyExtended\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"summary\": \"Delete a policy in the tenant\",\n        \"operationId\": \"deletePolicy\",\n        \"parameters\": [\n          {\n            \"name\": \"uuid\",\n            \"in\": \"path\",\n            \"description\": \"ID of policy to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Policy deleted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/access/\": {\n      \"get\": {\n        \"tags\": [\n          \"Access\"\n        ],\n        \"summary\": \"Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\",\n        \"description\": \"Access responses are sorted in ascending order by an ID internal to the database\",\n        \"operationId\": \"getPrincipalAccess\",\n        \"parameters\": [\n          {\n            \"name\": \"application\",\n            \"in\": \"query\",\n            \"description\": \"The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order_by\",\n            \"in\": \"query\",\n            \"description\": \"Parameter for ordering roles by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-application\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"resource_type\",\n                \"verb\"\n              ]\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of access objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccessPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/permissions/\": {\n      \"get\": {\n        \"tags\": [\n          \"Permission\"\n        ],\n        \"summary\": \"List the permissions for a tenant\",\n        \"description\": \"By default, responses are sorted in ascending order by permission application.\",\n        \"operationId\": \"listPermissions\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order_by\",\n            \"required\": false,\n            \"description\": \"Parameter for ordering permissions by value. For inverse ordering, supply '-' before the param value, such as: ?order_by=-application\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"resource_type\",\n                \"verb\",\n                \"permission\"\n              ]\n            }\n          },\n          {\n            \"name\": \"application\",\n            \"in\": \"query\",\n            \"description\": \"Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"resource_type\",\n            \"in\": \"query\",\n            \"description\": \"Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"verb\",\n            \"in\": \"query\",\n            \"description\": \"Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"permission\",\n            \"in\": \"query\",\n            \"description\": \"Partial match for the aggregate permission value name of a permission object.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"exclude_globals\",\n            \"in\": \"query\",\n            \"description\": \"If set to 'true', this will exclude any permission with a global allowance on either 'application', 'resource_type' or 'verb'. The default is 'false'.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"false\",\n              \"enum\": [\n                \"true\",\n                \"false\"\n              ]\n            }\n          },\n          {\n            \"name\": \"exclude_roles\",\n            \"in\": \"query\",\n            \"description\": \"An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"allowed_only\",\n            \"in\": \"query\",\n            \"description\": \"If set to 'true', this will exclude any permission with a role where the 'application' is not in the role create allow list.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"false\",\n              \"enum\": [\n                \"true\",\n                \"false\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A paginated list of permission objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PermissionPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to list permissions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/permissions/options/\": {\n      \"get\": {\n        \"tags\": [\n          \"Permission\"\n        ],\n        \"summary\": \"List the available options for fields of permissions for a tenant\",\n        \"description\": \"By default, options of application is returned. And could be resource_type or verb on demand.\",\n        \"operationId\": \"listPermissionOptions\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"name\": \"field\",\n            \"in\": \"query\",\n            \"description\": \"specify which fields of permission to display\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"resource_type\",\n                \"verb\"\n              ]\n            }\n          },\n          {\n            \"name\": \"application\",\n            \"in\": \"query\",\n            \"description\": \"Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"resource_type\",\n            \"in\": \"query\",\n            \"description\": \"Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"verb\",\n            \"in\": \"query\",\n            \"description\": \"Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"exclude_globals\",\n            \"in\": \"query\",\n            \"description\": \"If set to 'true', this will exclude any permission option with a global allowance on the supplied '?field=' value of 'application', 'resource_type' or 'verb'. The default is 'false'.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"false\",\n              \"enum\": [\n                \"true\",\n                \"false\"\n              ]\n            }\n          },\n          {\n            \"name\": \"allowed_only\",\n            \"in\": \"query\",\n            \"description\": \"If set to 'true', this will exclude any permission with a role where the 'application' is not in the role create allow list.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"false\",\n              \"enum\": [\n                \"true\",\n                \"false\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of options for field of permission\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PermissionOptionsPagination\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Insufficient permissions to list permissions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error403\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/rbac/v1\"\n    }\n  ],\n  \"components\": {\n    \"parameters\": {\n      \"QueryOffset\": {\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"required\": false,\n        \"description\": \"Parameter for selecting the offset of data.\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"default\": 0,\n          \"minimum\": 0\n        }\n      },\n      \"QueryLimit\": {\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"required\": false,\n        \"description\": \"Parameter for selecting the amount of data returned.\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"default\": 10,\n          \"minimum\": 1,\n          \"maximum\": 1000\n        }\n      },\n      \"NameFilter\": {\n        \"in\": \"query\",\n        \"name\": \"name\",\n        \"required\": false,\n        \"description\": \"Parameter for filtering resource by name using string contains search.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"SystemFilter\": {\n        \"in\": \"query\",\n        \"name\": \"system\",\n        \"required\": false,\n        \"description\": \"Parameter for filtering resource by system flag.\",\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"GroupNameFilter\": {\n        \"in\": \"query\",\n        \"name\": \"group_name\",\n        \"required\": false,\n        \"description\": \"Parameter for filtering resource by group name using string contains search.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"GroupUUIDFilter\": {\n        \"in\": \"query\",\n        \"name\": \"group_uuid\",\n        \"required\": false,\n        \"description\": \"Parameter for filtering resource by group uuid using UUID exact match.\",\n        \"schema\": {\n          \"type\": \"string\",\n          \"format\": \"uuid\"\n        }\n      },\n      \"ScopeFilter\": {\n        \"in\": \"query\",\n        \"name\": \"scope\",\n        \"required\": false,\n        \"description\": \"Parameter for filtering resource by scope.\",\n        \"schema\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"account\",\n            \"principal\"\n          ],\n          \"default\": \"account\"\n        }\n      },\n      \"NameMatchCriteria\": {\n        \"in\": \"query\",\n        \"name\": \"name_match\",\n        \"required\": false,\n        \"description\": \"Parameter for specifying the matching criteria for an object's name or display_name.\",\n        \"schema\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"partial\",\n            \"exact\"\n          ]\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"GroupPrincipalIn\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/GroupPrincipalIn\"\n            }\n          }\n        },\n        \"description\": \"Principal to add to a group\",\n        \"required\": true\n      },\n      \"GroupRoleIn\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/GroupRoleIn\"\n            }\n          }\n        },\n        \"description\": \"Role to add to a group\",\n        \"required\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"basic_auth\": {\n        \"type\": \"http\",\n        \"description\": \"The userid/password is needed when accessing this API externally\",\n        \"scheme\": \"basic\"\n      }\n    },\n    \"schemas\": {\n      \"Error\": {\n        \"required\": [\n          \"errors\"\n        ],\n        \"properties\": {\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"detail\": {\n                  \"type\": \"string\",\n                  \"example\": \"Not found.\"\n                },\n                \"status\": {\n                  \"type\": \"string\",\n                  \"example\": \"403\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Error403\": {\n        \"required\": [\n          \"errors\"\n        ],\n        \"properties\": {\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"detail\": {\n                  \"type\": \"string\",\n                  \"example\": \"You do not have permission to perform this action.\"\n                },\n                \"source\": {\n                  \"type\": \"string\",\n                  \"example\": \"detail\"\n                },\n                \"status\": {\n                  \"type\": \"string\",\n                  \"example\": \"403\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"UUID\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"uuid\"\n        ],\n        \"properties\": {\n          \"uuid\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"57e60f90-8c0c-4bd1-87a0-2143759aae1c\"\n          }\n        }\n      },\n      \"Timestamped\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"created\",\n          \"modified\"\n        ],\n        \"properties\": {\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-01-21T17:32:28Z\"\n          },\n          \"modified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-03-04T07:25:58Z\"\n          }\n        }\n      },\n      \"PaginationMeta\": {\n        \"properties\": {\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 30\n          }\n        }\n      },\n      \"PaginationLinks\": {\n        \"properties\": {\n          \"first\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"example\": \"/api/v1/(resources)/?offset=0\u0026limit=10\"\n          },\n          \"previous\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"example\": \"/api/v1/(resources)/?offset=20\u0026limit=10\"\n          },\n          \"next\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"example\": \"/api/v1/(resources)/?offset=40\u0026limit=10\"\n          },\n          \"last\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"example\": \"/api/v1/(resources)/?offset=90\u0026limit=10\"\n          }\n        }\n      },\n      \"ListPagination\": {\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/PaginationMeta\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/PaginationLinks\"\n          }\n        }\n      },\n      \"Principal\": {\n        \"required\": [\n          \"username\",\n          \"email\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"smithj\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"example\": \"smithj@mytechco.com\"\n          },\n          \"first_name\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"last_name\": {\n            \"type\": \"string\",\n            \"example\": \"Smith\"\n          },\n          \"is_active\": {\n            \"type\": \"boolean\"\n          },\n          \"is_org_admin\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"PrincipalIn\": {\n        \"required\": [\n          \"username\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"smithj\"\n          }\n        }\n      },\n      \"PrincipalOut\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Principal\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UUID\"\n          }\n        ]\n      },\n      \"PrincipalPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Principal\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"Group\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"GroupA\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"A description of GroupA\"\n          }\n        }\n      },\n      \"AdditionalGroup\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"GroupA\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"GroupA Description\"\n          },\n          \"uuid\": {\n            \"type\": \"string\",\n            \"example\": \"234df936-abb4-4238-a1c9-d91fc540c702\"\n          }\n        }\n      },\n      \"GroupOut\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Group\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UUID\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Timestamped\"\n          },\n          {\n            \"properties\": {\n              \"principalCount\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n              },\n              \"roleCount\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n              },\n              \"system\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"platform_default\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"admin_default\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              }\n            }\n          }\n        ]\n      },\n      \"GroupPrincipalIn\": {\n        \"required\": [\n          \"principals\"\n        ],\n        \"properties\": {\n          \"principals\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PrincipalIn\"\n            }\n          }\n        }\n      },\n      \"GroupRoleIn\": {\n        \"required\": [\n          \"roles\"\n        ],\n        \"properties\": {\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"94846f2f-cced-474f-b7f3-47e2ec51dd11\"\n            }\n          }\n        }\n      },\n      \"GroupWithPrincipals\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Group\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UUID\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Timestamped\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"principals\"\n            ],\n            \"properties\": {\n              \"principals\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Principal\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"GroupWithPrincipalsAndRoles\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Group\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UUID\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Timestamped\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"principals\",\n              \"roles\"\n            ],\n            \"properties\": {\n              \"principals\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Principal\"\n                }\n              },\n              \"roles\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RoleOut\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"GroupRolesPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RoleOut\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"GroupPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/GroupOut\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"CrossAccountRequestDetail\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CrossAccountRequestDetailByAccount\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/CrossAccountRequestDetailByUseId\"\n          }\n        ]\n      },\n      \"CrossAccountRequestDetailByAccount\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CrossAccountRequestWithRoles\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"first_name\": {\n                \"format\": \"string\",\n                \"example\": \"first_name\"\n              },\n              \"last_name\": {\n                \"format\": \"string\",\n                \"example\": \"last_name\"\n              },\n              \"email\": {\n                \"format\": \"string\",\n                \"example\": \"email\"\n              }\n            }\n          }\n        ]\n      },\n      \"CrossAccountRequestDetailByUseId\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CrossAccountRequestWithRoles\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user_id\": {\n                \"format\": \"string\",\n                \"example\": \"1234\"\n              }\n            }\n          }\n        ]\n      },\n      \"CrossAccountRequestPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/CrossAccountRequestByAccount\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/CrossAccountRequestByUserId\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"CrossAccountRequestIn\": {\n        \"required\": [\n          \"target_account\",\n          \"start_date\",\n          \"end_date\",\n          \"roles\"\n        ],\n        \"properties\": {\n          \"target_account\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"target_org\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"start_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"end_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"Role Name\"\n            }\n          }\n        }\n      },\n      \"CrossAccountRequestUpdateIn\": {\n        \"required\": [\n          \"start_date\",\n          \"end_date\",\n          \"roles\"\n        ],\n        \"properties\": {\n          \"start_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"end_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"Role Name\"\n            }\n          }\n        }\n      },\n      \"CrossAccountRequestPatch\": {\n        \"properties\": {\n          \"start_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"end_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"Role Name\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"pending\",\n              \"approved\",\n              \"expired\",\n              \"cancelled\",\n              \"denied\"\n            ]\n          }\n        }\n      },\n      \"CrossAccountRequestByAccount\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CrossAccountRequest\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"first_name\": {\n                \"type\": \"string\",\n                \"example\": \"Jane\"\n              },\n              \"last_name\": {\n                \"type\": \"string\",\n                \"example\": \"Doe\"\n              },\n              \"email\": {\n                \"type\": \"string\",\n                \"example\": \"test@redhat.com\"\n              }\n            }\n          }\n        ]\n      },\n      \"CrossAccountRequestByUserId\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CrossAccountRequest\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user_id\": {\n                \"type\": \"string\",\n                \"example\": \"1234\"\n              }\n            }\n          }\n        ]\n      },\n      \"CrossAccountRequest\": {\n        \"properties\": {\n          \"request_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"2ad8cac5-336e-44c6-9b16-15ac84224d4b\"\n          },\n          \"target_account\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"target_org\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"example\": \"pending\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-01-21T17:32:28Z\"\n          },\n          \"start_date\": {\n            \"format\": \"date-time\",\n            \"example\": \"2019-01-21T17:32:28Z\"\n          },\n          \"end_date\": {\n            \"format\": \"date-time\",\n            \"example\": \"2019-01-21T17:32:28Z\"\n          }\n        }\n      },\n      \"CrossAccountRequestWithRoles\": {\n        \"properties\": {\n          \"request_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"2ad8cac5-336e-44c6-9b16-15ac84224d4b\"\n          },\n          \"target_account\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"target_org\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"start_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"end_date\": {\n            \"type\": \"string\",\n            \"example\": \"01/01/2021\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"example\": \"pending\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-01-21T17:32:28Z\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"display_name\": {\n                  \"type\": \"string\",\n                  \"example\": \"display_name\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"example\": \"description\"\n                },\n                \"permissions\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Permission\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"CrossAccountRequestOut\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CrossAccountRequestWithRoles\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user_id\": {\n                \"type\": \"string\",\n                \"example\": \"1234\"\n              }\n            }\n          }\n        ]\n      },\n      \"ResourceDefinitionFilter\": {\n        \"required\": [\n          \"key\",\n          \"operation\",\n          \"value\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"example\": \"cost-management.aws.account\"\n          },\n          \"operation\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"equal\",\n              \"in\"\n            ]\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"example\": \"123456\"\n          }\n        }\n      },\n      \"ResourceDefinition\": {\n        \"required\": [\n          \"attributeFilter\"\n        ],\n        \"properties\": {\n          \"attributeFilter\": {\n            \"$ref\": \"#/components/schemas/ResourceDefinitionFilter\"\n          }\n        }\n      },\n      \"Access\": {\n        \"required\": [\n          \"permission\",\n          \"resourceDefinitions\"\n        ],\n        \"properties\": {\n          \"permission\": {\n            \"type\": \"string\",\n            \"example\": \"cost-management:*:read\"\n          },\n          \"resourceDefinitions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ResourceDefinition\"\n            }\n          }\n        }\n      },\n      \"Role\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"RoleA\"\n          },\n          \"display_name\": {\n            \"type\": \"string\",\n            \"example\": \"ARoleName\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"A description of RoleA\"\n          }\n        }\n      },\n      \"RoleIn\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Role\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"access\"\n            ],\n            \"properties\": {\n              \"access\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Access\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"RolePagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RoleOut\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"RolePaginationDynamic\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RoleOutDynamic\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"RoleOut\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Role\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UUID\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Timestamped\"\n          },\n          {\n            \"properties\": {\n              \"policyCount\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n              },\n              \"accessCount\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n              },\n              \"applications\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"example\": \"catalog\"\n                }\n              },\n              \"system\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"platform_default\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"admin_default\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"external_role_id\": {\n                \"type\": \"string\",\n                \"example\": \"ExternalRoleId\"\n              },\n              \"external_tenant\": {\n                \"type\": \"string\",\n                \"example\": \"ExternalTenant\"\n              }\n            }\n          }\n        ]\n      },\n      \"RoleOutDynamic\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Role\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UUID\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Timestamped\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"policyCount\",\n              \"accessCount\",\n              \"applications\",\n              \"system\",\n              \"platform_default\",\n              \"admin_default\"\n            ],\n            \"properties\": {\n              \"policyCount\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n              },\n              \"accessCount\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n              },\n              \"applications\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"example\": \"catalog\"\n                }\n              },\n              \"system\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"platform_default\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"admin_default\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"groups_in_count\": {\n                \"type\": \"integer\",\n                \"minimum\": 0\n              },\n              \"groups_in\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/AdditionalGroup\"\n                }\n              },\n              \"external_role_id\": {\n                \"type\": \"string\",\n                \"example\": \"ExternalRoleId\"\n              },\n              \"external_tenant\": {\n                \"type\": \"string\",\n                \"example\": \"ExternalTenant\"\n              }\n            }\n          }\n        ]\n      },\n      \"RolePatch\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"RoleA\"\n          },\n          \"display_name\": {\n            \"type\": \"string\",\n            \"example\": \"ARoleName\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"A description of RoleA\"\n          }\n        }\n      },\n      \"RoleWithAccess\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/RoleOut\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"access\"\n            ],\n            \"properties\": {\n              \"access\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Access\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"Policy\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"PolicyA\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"A description of PolicyA\"\n          }\n        }\n      },\n      \"PolicyIn\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Policy\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"group\",\n              \"roles\"\n            ],\n            \"properties\": {\n              \"group\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\",\n                \"example\": \"83ee048e-3c1d-43ef-b945-108225ae52f4\"\n              },\n              \"roles\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"format\": \"uuid\",\n                  \"example\": \"94846f2f-cced-474f-b7f3-47e2ec51dd11\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"PolicyExtended\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Policy\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UUID\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Timestamped\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"group\",\n              \"roles\"\n            ],\n            \"properties\": {\n              \"group\": {\n                \"$ref\": \"#/components/schemas/GroupOut\"\n              },\n              \"roles\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RoleOut\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"PolicyPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/PolicyExtended\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"AccessPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Access\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"Status\": {\n        \"required\": [\n          \"api_version\"\n        ],\n        \"properties\": {\n          \"api_version\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"commit\": {\n            \"type\": \"string\",\n            \"example\": \"178d2ea\"\n          }\n        }\n      },\n      \"Permission\": {\n        \"properties\": {\n          \"application\": {\n            \"type\": \"string\",\n            \"example\": \"rbac\"\n          },\n          \"resource_type\": {\n            \"type\": \"string\",\n            \"example\": \"group\"\n          },\n          \"verb\": {\n            \"type\": \"string\",\n            \"example\": \"read\"\n          },\n          \"permission\": {\n            \"type\": \"string\",\n            \"example\": \"rbac:group:read\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"Describe the usage of permission.\"\n          }\n        }\n      },\n      \"PermissionPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Permission\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"PermissionOptionsPagination\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ListPagination\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"data\"\n            ],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/RedHatInsights/insights-rbac@4d97515b72dad0881ef6eadbe9441441c0a5b998/-/blob/docs/source/specs/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/RedHatInsights/insights-rbac/blob/4d97515b72dad0881ef6eadbe9441441c0a5b998/docs/source/specs/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/roles/\": post: responses: code 201: contents: application/json: generate schema: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"unsupported content types"
	]
}