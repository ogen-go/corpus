{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EMResearch/EvoMaster"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "core-it/src/test/resources/APIs_guru/amazonaws.com/nimble/2020-08-01/openapi.yaml",
			"byteSize": 227777,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2020-08-01'\n  x-release: v4\n  title: AmazonNimbleStudio\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: nimble\n  x-aws-signingName: nimble\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/nimble-2020-08-01.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/nimble/'\nservers:\n  - url: 'http://nimble.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AmazonNimbleStudio multi-region endpoint\n  - url: 'https://nimble.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AmazonNimbleStudio multi-region endpoint\n  - url: 'http://nimble.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://nimble.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/2020-08-01/studios/{studioId}/eula-acceptances':\n    post:\n      operationId: AcceptEulas\n      description: Accept EULAs.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AcceptEulasResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                eulaIds:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListEulaAcceptances\n      description: List Eula Acceptances.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEulaAcceptancesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: eulaIds\n          in: query\n          required: false\n          description: A collection of EULA IDs.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n  '/2020-08-01/studios/{studioId}/launch-profiles':\n    post:\n      operationId: CreateLaunchProfile\n      description: Create a launch profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLaunchProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ec2SubnetIds\n                - launchProfileProtocolVersions\n                - name\n                - streamConfiguration\n                - studioComponentIds\n              properties:\n                description:\n                  description: The description.\n                  type: string\n                  maxLength: 256\n                ec2SubnetIds:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/EC2SubnetId'\n                  maxItems: 6\n                launchProfileProtocolVersions:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/LaunchProfileProtocolVersion'\n                name:\n                  description: The name for the launch profile.\n                  type: string\n                  maxLength: 64\n                streamConfiguration:\n                  description: ''\n                  type: object\n                  properties:\n                    clipboardMode:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamingClipboardMode'\n                        - description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.\n                    ec2InstanceTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamingInstanceTypeList'\n                        - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.\n                    maxSessionLengthInMinutes:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'\n                        - description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'\n                    streamingImageIds:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamingImageIdList'\n                        - description: The streaming images that users can select from when launching a streaming session with this launch profile.\n                studioComponentIds:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/__string'\n                  minItems: 1\n                  maxItems: 100\n                tags:\n                  description: ''\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListLaunchProfiles\n      description: List all the launch profiles a studio.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLaunchProfilesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to be returned per request.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n        - name: principalId\n          in: query\n          required: false\n          description: The principal ID.\n          schema:\n            type: string\n        - name: states\n          in: query\n          required: false\n          description: A list of states.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n  '/2020-08-01/studios/{studioId}/streaming-images':\n    post:\n      operationId: CreateStreamingImage\n      description: Creates a streaming image resource in a studio.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateStreamingImageResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ec2ImageId\n                - name\n              properties:\n                description:\n                  description: The description.\n                  type: string\n                  maxLength: 256\n                ec2ImageId:\n                  description: ''\n                  type: string\n                  pattern: '^ami-[0-9A-z]+$'\n                name:\n                  description: A friendly name for a streaming image resource.\n                  type: string\n                  maxLength: 64\n                tags:\n                  description: ''\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListStreamingImages\n      description: '\u003cp\u003eList the streaming image resources available to this studio.\u003c/p\u003e \u003cp\u003eThis list will contain both images provided by Amazon Web Services, as well as streaming images that you have created in your studio.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStreamingImagesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n        - name: owner\n          in: query\n          required: false\n          description: The owner.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n  '/2020-08-01/studios/{studioId}/streaming-sessions':\n    post:\n      operationId: CreateStreamingSession\n      description: '\u003cp\u003eCreates a streaming session in a studio.\u003c/p\u003e \u003cp\u003eAfter invoking this operation, you must poll GetStreamingSession until the streaming session is in state READY.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateStreamingSessionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ec2InstanceType:\n                  description: ''\n                  type: string\n                  enum:\n                    - g4dn.xlarge\n                    - g4dn.2xlarge\n                    - g4dn.4xlarge\n                    - g4dn.8xlarge\n                    - g4dn.12xlarge\n                    - g4dn.16xlarge\n                launchProfileId:\n                  description: The launch profile ID.\n                  type: string\n                ownedBy:\n                  description: The user ID of the user that owns the streaming session.\n                  type: string\n                streamingImageId:\n                  description: ''\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  maxLength: 22\n                tags:\n                  description: ''\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListStreamingSessions\n      description: Lists the streaming image resources in a studio.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStreamingSessionsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: createdBy\n          in: query\n          required: false\n          description: The user ID of the user that created the streaming session.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n        - name: ownedBy\n          in: query\n          required: false\n          description: The user ID of the user that owns the streaming session.\n          schema:\n            type: string\n        - name: sessionIds\n          in: query\n          required: false\n          description: A collection of session IDs.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams':\n    post:\n      operationId: CreateStreamingSessionStream\n      description: '\u003cp\u003eCreates a streaming session stream for a streaming session.\u003c/p\u003e \u003cp\u003eAfter invoking this API, invoke GetStreamingSessionStream with the returned streamId to poll the resource until it is in state READY.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateStreamingSessionStreamResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: sessionId\n          in: path\n          required: true\n          description: The session ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                expirationInSeconds:\n                  description: ''\n                  type: integer\n                  minimum: 60\n                  maximum: 3600\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /2020-08-01/studios:\n    post:\n      operationId: CreateStudio\n      description: '\u003cp\u003eCreate a new Studio.\u003c/p\u003e \u003cp\u003eWhen creating a Studio, two IAM roles must be provided: the admin role and the user Role. These roles are assumed by your users when they log in to the Nimble Studio portal.\u003c/p\u003e \u003cp\u003eThe user role must have the AmazonNimbleStudio-StudioUser managed policy attached for the portal to function properly.\u003c/p\u003e \u003cp\u003eThe Admin Role must have the AmazonNimbleStudio-StudioAdmin managed policy attached for the portal to function properly.\u003c/p\u003e \u003cp\u003eYou may optionally specify a KMS key in the StudioEncryptionConfiguration.\u003c/p\u003e \u003cp\u003eIn Nimble Studio, resource names, descriptions, initialization scripts, and other data you provide are always encrypted at rest using an KMS key. By default, this key is owned by Amazon Web Services and managed on your behalf. You may provide your own KMS key when calling CreateStudio to encrypt this data using a key you own and manage.\u003c/p\u003e \u003cp\u003eWhen providing an KMS key during studio creation, Nimble Studio creates KMS grants in your account to provide your studio user and admin roles access to these KMS keys.\u003c/p\u003e \u003cp\u003eIf you delete this grant, the studio will no longer be accessible to your portal users.\u003c/p\u003e \u003cp\u003eIf you delete the studio KMS key, your studio will no longer be accessible.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateStudioResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - adminRoleArn\n                - displayName\n                - studioName\n                - userRoleArn\n              properties:\n                adminRoleArn:\n                  description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.\n                  type: string\n                displayName:\n                  description: A friendly name for the studio.\n                  type: string\n                  maxLength: 64\n                studioEncryptionConfiguration:\n                  description: Configuration of the encryption method that is used for the studio.\n                  type: object\n                  properties:\n                    keyArn:\n                      allOf:\n                        - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyArn'\n                        - description: The ARN for a KMS key that is used to encrypt studio data.\n                    keyType:\n                      allOf:\n                        - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyType'\n                        - description: The type of KMS key that is used to encrypt studio data.\n                studioName:\n                  description: ''\n                  type: string\n                  pattern: '^[a-z0-9]*$'\n                  minLength: 3\n                  maxLength: 64\n                tags:\n                  description: ''\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n                userRoleArn:\n                  description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListStudios\n      description: List studios in your Amazon Web Services account in the requested Amazon Web Services Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStudiosResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n  '/2020-08-01/studios/{studioId}/studio-components':\n    post:\n      operationId: CreateStudioComponent\n      description: Creates a studio component resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateStudioComponentResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - type\n              properties:\n                configuration:\n                  description: 'The configuration of the studio component, based on component type.'\n                  type: object\n                  properties:\n                    activeDirectoryConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/ActiveDirectoryConfiguration'\n                        - description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.\n                    computeFarmConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/ComputeFarmConfiguration'\n                        - description: The configuration for a render farm that is associated with a studio resource.\n                    licenseServiceConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/LicenseServiceConfiguration'\n                        - description: The configuration for a license service that is associated with a studio resource.\n                    sharedFileSystemConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/SharedFileSystemConfiguration'\n                        - description: The configuration for a shared file storage system that is associated with a studio resource.\n                description:\n                  description: ''\n                  type: string\n                  maxLength: 256\n                ec2SecurityGroupIds:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SecurityGroupId'\n                  minItems: 1\n                  maxItems: 30\n                initializationScripts:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/StudioComponentInitializationScript'\n                name:\n                  description: ''\n                  type: string\n                  maxLength: 64\n                scriptParameters:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ScriptParameterKeyValue'\n                  maxItems: 30\n                subtype:\n                  description: ''\n                  type: string\n                  enum:\n                    - AWS_MANAGED_MICROSOFT_AD\n                    - AMAZON_FSX_FOR_WINDOWS\n                    - AMAZON_FSX_FOR_LUSTRE\n                    - CUSTOM\n                tags:\n                  description: ''\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n                type:\n                  description: ''\n                  type: string\n                  enum:\n                    - ACTIVE_DIRECTORY\n                    - SHARED_FILE_SYSTEM\n                    - COMPUTE_FARM\n                    - LICENSE_SERVICE\n                    - CUSTOM\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListStudioComponents\n      description: Lists the StudioComponents in a studio.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStudioComponentsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to be returned per request.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n        - name: states\n          in: query\n          required: false\n          description: A list of states.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n        - name: types\n          in: query\n          required: false\n          description: The types.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}':\n    delete:\n      operationId: DeleteLaunchProfile\n      description: Permanently delete a launch profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLaunchProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetLaunchProfile\n      description: Get a launch profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLaunchProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateLaunchProfile\n      description: Update a launch profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLaunchProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: The description.\n                  type: string\n                  maxLength: 256\n                launchProfileProtocolVersions:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/LaunchProfileProtocolVersion'\n                name:\n                  description: The name for the launch profile.\n                  type: string\n                  maxLength: 64\n                streamConfiguration:\n                  description: ''\n                  type: object\n                  properties:\n                    clipboardMode:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamingClipboardMode'\n                        - description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.\n                    ec2InstanceTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamingInstanceTypeList'\n                        - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.\n                    maxSessionLengthInMinutes:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'\n                        - description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'\n                    streamingImageIds:\n                      allOf:\n                        - $ref: '#/components/schemas/StreamingImageIdList'\n                        - description: The streaming images that users can select from when launching a streaming session with this launch profile.\n                studioComponentIds:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/__string'\n                  minItems: 1\n                  maxItems: 100\n  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}':\n    delete:\n      operationId: DeleteLaunchProfileMember\n      description: Delete a user from launch profile membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLaunchProfileMemberResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: principalId\n          in: path\n          required: true\n          description: The principal ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetLaunchProfileMember\n      description: Get a user persona in launch profile membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLaunchProfileMemberResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: principalId\n          in: path\n          required: true\n          description: The principal ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateLaunchProfileMember\n      description: Update a user persona in launch profile membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLaunchProfileMemberResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: principalId\n          in: path\n          required: true\n          description: The principal ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - persona\n              properties:\n                persona:\n                  description: ''\n                  type: string\n                  enum:\n                    - USER\n  '/2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}':\n    delete:\n      operationId: DeleteStreamingImage\n      description: Delete streaming image.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteStreamingImageResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: streamingImageId\n          in: path\n          required: true\n          description: The streaming image ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetStreamingImage\n      description: Get streaming image.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStreamingImageResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: streamingImageId\n          in: path\n          required: true\n          description: The streaming image ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateStreamingImage\n      description: Update streaming image.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateStreamingImageResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: streamingImageId\n          in: path\n          required: true\n          description: The streaming image ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: The description.\n                  type: string\n                  maxLength: 256\n                name:\n                  description: A friendly name for a streaming image resource.\n                  type: string\n                  maxLength: 64\n  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}':\n    delete:\n      operationId: DeleteStreamingSession\n      description: '\u003cp\u003eDeletes streaming session resource.\u003c/p\u003e \u003cp\u003eAfter invoking this operation, use GetStreamingSession to poll the resource until it transitions to a DELETED state.\u003c/p\u003e \u003cp\u003eA streaming session will count against your streaming session quota until it is marked DELETED.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteStreamingSessionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: sessionId\n          in: path\n          required: true\n          description: The session ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetStreamingSession\n      description: \u003cp\u003eGets StreamingSession resource.\u003c/p\u003e \u003cp\u003eInvoke this operation to poll for a streaming session state while creating or deleting a session.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStreamingSessionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: sessionId\n          in: path\n          required: true\n          description: The session ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n  '/2020-08-01/studios/{studioId}':\n    delete:\n      operationId: DeleteStudio\n      description: Delete a studio resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteStudioResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetStudio\n      description: Get a Studio resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStudioResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateStudio\n      description: '\u003cp\u003eUpdate a Studio resource.\u003c/p\u003e \u003cp\u003eCurrently, this operation only supports updating the displayName of your studio.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateStudioResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                adminRoleArn:\n                  description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.\n                  type: string\n                displayName:\n                  description: A friendly name for the studio.\n                  type: string\n                  maxLength: 64\n                userRoleArn:\n                  description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.\n                  type: string\n  '/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}':\n    delete:\n      operationId: DeleteStudioComponent\n      description: Deletes a studio component resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteStudioComponentResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioComponentId\n          in: path\n          required: true\n          description: The studio component ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetStudioComponent\n      description: Gets a studio component resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStudioComponentResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: studioComponentId\n          in: path\n          required: true\n          description: The studio component ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateStudioComponent\n      description: Updates a studio component resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateStudioComponentResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioComponentId\n          in: path\n          required: true\n          description: The studio component ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                configuration:\n                  description: 'The configuration of the studio component, based on component type.'\n                  type: object\n                  properties:\n                    activeDirectoryConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/ActiveDirectoryConfiguration'\n                        - description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.\n                    computeFarmConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/ComputeFarmConfiguration'\n                        - description: The configuration for a render farm that is associated with a studio resource.\n                    licenseServiceConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/LicenseServiceConfiguration'\n                        - description: The configuration for a license service that is associated with a studio resource.\n                    sharedFileSystemConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/SharedFileSystemConfiguration'\n                        - description: The configuration for a shared file storage system that is associated with a studio resource.\n                description:\n                  description: ''\n                  type: string\n                  maxLength: 256\n                ec2SecurityGroupIds:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SecurityGroupId'\n                  minItems: 1\n                  maxItems: 30\n                initializationScripts:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/StudioComponentInitializationScript'\n                name:\n                  description: ''\n                  type: string\n                  maxLength: 64\n                scriptParameters:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ScriptParameterKeyValue'\n                  maxItems: 30\n                subtype:\n                  description: ''\n                  type: string\n                  enum:\n                    - AWS_MANAGED_MICROSOFT_AD\n                    - AMAZON_FSX_FOR_WINDOWS\n                    - AMAZON_FSX_FOR_LUSTRE\n                    - CUSTOM\n                type:\n                  description: ''\n                  type: string\n                  enum:\n                    - ACTIVE_DIRECTORY\n                    - SHARED_FILE_SYSTEM\n                    - COMPUTE_FARM\n                    - LICENSE_SERVICE\n                    - CUSTOM\n  '/2020-08-01/studios/{studioId}/membership/{principalId}':\n    delete:\n      operationId: DeleteStudioMember\n      description: Delete a user from studio membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteStudioMemberResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: principalId\n          in: path\n          required: true\n          description: The principal ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetStudioMember\n      description: Get a user's membership in a studio.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStudioMemberResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: principalId\n          in: path\n          required: true\n          description: The principal ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n  '/2020-08-01/eulas/{eulaId}':\n    get:\n      operationId: GetEula\n      description: Get Eula.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEulaResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: eulaId\n          in: path\n          required: true\n          description: The EULA ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/details':\n    get:\n      operationId: GetLaunchProfileDetails\n      description: 'Launch profile details include the launch profile resource and summary information of resources that are used by, or available to, the launch profile. This includes the name and description of all studio components used by the launch profiles, and the name and description of streaming images that can be used with this launch profile.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLaunchProfileDetailsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/init#launchProfileProtocolVersions\u0026launchPurpose\u0026platform':\n    get:\n      operationId: GetLaunchProfileInitialization\n      description: Get a launch profile initialization.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLaunchProfileInitializationResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: launchProfileProtocolVersions\n          in: query\n          required: true\n          description: A collection of launch profile protocol versions.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n        - name: launchPurpose\n          in: query\n          required: true\n          description: The launch purpose.\n          schema:\n            type: string\n        - name: platform\n          in: query\n          required: true\n          description: The platform.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams/{streamId}':\n    get:\n      operationId: GetStreamingSessionStream\n      description: '\u003cp\u003eGets a StreamingSessionStream for a streaming session.\u003c/p\u003e \u003cp\u003eInvoke this operation to poll the resource after invoking CreateStreamingSessionStream.\u003c/p\u003e \u003cp\u003eAfter the StreamingSessionStream changes to the state READY, the url property will contain a stream to be used with the DCV streaming client.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStreamingSessionStreamResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: sessionId\n          in: path\n          required: true\n          description: The session ID.\n          schema:\n            type: string\n        - name: streamId\n          in: path\n          required: true\n          description: The stream ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /2020-08-01/eulas:\n    get:\n      operationId: ListEulas\n      description: List Eulas.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEulasResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: eulaIds\n          in: query\n          required: false\n          description: A collection of EULA IDs.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership':\n    get:\n      operationId: ListLaunchProfileMembers\n      description: Get all users in a given launch profile membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLaunchProfileMembersResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to be returned per request.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: PutLaunchProfileMembers\n      description: Add/update users with given persona to launch profile membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutLaunchProfileMembersResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: launchProfileId\n          in: path\n          required: true\n          description: The launch profile ID.\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - identityStoreId\n                - members\n              properties:\n                identityStoreId:\n                  description: The ID of the identity store.\n                  type: string\n                members:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/NewLaunchProfileMember'\n                  minItems: 1\n                  maxItems: 20\n  '/2020-08-01/studios/{studioId}/membership':\n    get:\n      operationId: ListStudioMembers\n      description: Get all users in a given studio membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStudioMembersResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to be returned per request.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token for the next set of results, or null if there are no more results.'\n          schema:\n            type: string\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: PutStudioMembers\n      description: Add/update users with given persona to studio membership.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutStudioMembersResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - identityStoreId\n                - members\n              properties:\n                identityStoreId:\n                  description: The ID of the identity store.\n                  type: string\n                members:\n                  description: ''\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/NewStudioMember'\n                  minItems: 1\n                  maxItems: 20\n  '/2020-08-01/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: '\u003cp\u003eGets the tags for a resource, given its Amazon Resource Names (ARN).\u003c/p\u003e \u003cp\u003eThis operation supports ARNs for all resource types in Nimble Studio that support tags, including studio, studio component, launch profile, streaming image, and streaming session. All resources that can be tagged will contain an ARN property, so you do not have to create this ARN yourself.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The ARN of the target resource for tagging operations.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Creates tags for a resource, given its ARN.'\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The ARN of the target resource for tagging operations.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tags:\n                  description: ''\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n  '/2020-08-01/studios/{studioId}/sso-configuration':\n    put:\n      operationId: StartStudioSSOConfigurationRepair\n      description: '\u003cp\u003eRepairs the SSO configuration for a given studio.\u003c/p\u003e \u003cp\u003eIf the studio has a valid Amazon Web Services SSO configuration currently associated with it, this operation will fail with a validation error.\u003c/p\u003e \u003cp\u003eIf the studio does not have a valid Amazon Web Services SSO configuration currently associated with it, then a new Amazon Web Services SSO application is created for the studio and the studio is changed to the READY state.\u003c/p\u003e \u003cp\u003eAfter the Amazon Web Services SSO application is repaired, you must use the Amazon Nimble Studio console to add administrators and users to your studio.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartStudioSSOConfigurationRepairResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: X-Amz-Client-Token\n          in: header\n          required: false\n          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: studioId\n          in: path\n          required: true\n          description: The studio ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/2020-08-01/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Deletes the tags for a resource.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The ARN of the target resource for tagging operations.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: An array of tag keys to delete.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AcceptEulasResponse:\n      type: object\n      properties:\n        eulaAcceptances:\n          allOf:\n            - $ref: '#/components/schemas/EulaAcceptanceList'\n            - description: A collection of EULA acceptances.\n    __string:\n      type: string\n    ValidationException: {}\n    InternalServerErrorException: {}\n    ServiceQuotaExceededException: {}\n    AccessDeniedException: {}\n    ResourceNotFoundException: {}\n    ThrottlingException: {}\n    ConflictException: {}\n    CreateLaunchProfileResponse:\n      type: object\n      properties:\n        launchProfile:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfile'\n            - description: The launch profile.\n    EC2SubnetId:\n      type: string\n    LaunchProfileProtocolVersion:\n      type: string\n      pattern: ^2021\\-03\\-31$\n      description: The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".\n      maxLength: 10\n    StreamingClipboardMode:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n      description: ''\n    StreamingInstanceTypeList:\n      type: array\n      description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.\n      items:\n        $ref: '#/components/schemas/StreamingInstanceType'\n      minItems: 1\n      maxItems: 30\n    StreamConfigurationMaxSessionLengthInMinutes:\n      type: integer\n      minimum: 1\n      maximum: 690\n      description: ''\n    StreamingImageIdList:\n      type: array\n      description: A list of streaming image IDs that users can select from when launching a streaming session with this launch profile.\n      items:\n        $ref: '#/components/schemas/StreamingImageId'\n      maxItems: 20\n    CreateStreamingImageResponse:\n      type: object\n      properties:\n        streamingImage:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImage'\n            - description: ''\n    CreateStreamingSessionResponse:\n      type: object\n      properties:\n        session:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSession'\n            - description: The session.\n    CreateStreamingSessionStreamResponse:\n      type: object\n      properties:\n        stream:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionStream'\n            - description: The stream.\n    CreateStudioResponse:\n      type: object\n      properties:\n        studio:\n          allOf:\n            - $ref: '#/components/schemas/Studio'\n            - description: Information about a studio.\n    StudioEncryptionConfigurationKeyArn:\n      type: string\n      pattern: '^arn:.*'\n      description: The Amazon Resource Name (ARN) for a KMS key that is used to encrypt studio data.\n      minLength: 4\n    StudioEncryptionConfigurationKeyType:\n      type: string\n      enum:\n        - AWS_OWNED_KEY\n        - CUSTOMER_MANAGED_KEY\n      description: The type of KMS key that is used to encrypt studio data.\n    CreateStudioComponentResponse:\n      type: object\n      properties:\n        studioComponent:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponent'\n            - description: Information about the studio component.\n    ActiveDirectoryConfiguration:\n      type: object\n      properties:\n        computerAttributes:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeList'\n            - description: A collection of custom attributes for an Active Directory computer.\n        directoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.\n        organizationalUnitDistinguishedName:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName'\n            - description: The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.\n      description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.\n    ComputeFarmConfiguration:\n      type: object\n      properties:\n        activeDirectoryUser:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of an Active Directory user that is used on ComputeFarm worker instances.\n        endpoint:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The endpoint of the ComputeFarm that is accessed by the studio component resource.\n      description: The configuration for a render farm that is associated with a studio resource.\n    LicenseServiceConfiguration:\n      type: object\n      properties:\n        endpoint:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The endpoint of the license service that is accessed by the studio component resource.\n      description: The configuration for a license service that is associated with a studio resource.\n    SharedFileSystemConfiguration:\n      type: object\n      properties:\n        endpoint:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The endpoint of the shared file system that is accessed by the studio component resource.\n        fileSystemId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The unique identifier for a file system.\n        linuxMountPoint:\n          allOf:\n            - $ref: '#/components/schemas/LinuxMountPoint'\n            - description: The mount location for a shared file system on a Linux virtual workstation.\n        shareName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the file share.\n        windowsMountDrive:\n          allOf:\n            - $ref: '#/components/schemas/WindowsMountDrive'\n            - description: The mount location for a shared file system on a Windows virtual workstation.\n      description: The configuration for a shared file storage system that is associated with a studio resource.\n    SecurityGroupId:\n      type: string\n      description: ''\n    StudioComponentInitializationScript:\n      type: object\n      properties:\n        launchProfileProtocolVersion:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileProtocolVersion'\n            - description: The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfilePlatform'\n            - description: 'The platform of the initialization script, either WINDOWS or LINUX.'\n        runContext:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentInitializationScriptRunContext'\n            - description: The method to use when running the initialization script.\n        script:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentInitializationScriptContent'\n            - description: The initialization script.\n      description: Initialization scripts for studio components.\n    ScriptParameterKeyValue:\n      type: object\n      properties:\n        key:\n          allOf:\n            - $ref: '#/components/schemas/ScriptParameterKey'\n            - description: A script parameter key.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/ScriptParameterValue'\n            - description: A script parameter value.\n      description: 'A parameter for a studio component script, in the form of a key:value pair.'\n    DeleteLaunchProfileResponse:\n      type: object\n      properties:\n        launchProfile:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfile'\n            - description: The launch profile.\n    DeleteLaunchProfileMemberResponse:\n      type: object\n      properties: {}\n    DeleteStreamingImageResponse:\n      type: object\n      properties:\n        streamingImage:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImage'\n            - description: The streaming image.\n    DeleteStreamingSessionResponse:\n      type: object\n      properties:\n        session:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSession'\n            - description: The session.\n    DeleteStudioResponse:\n      type: object\n      properties:\n        studio:\n          allOf:\n            - $ref: '#/components/schemas/Studio'\n            - description: Information about a studio.\n    DeleteStudioComponentResponse:\n      type: object\n      properties:\n        studioComponent:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponent'\n            - description: Information about the studio component.\n    DeleteStudioMemberResponse:\n      type: object\n      properties: {}\n    GetEulaResponse:\n      type: object\n      properties:\n        eula:\n          allOf:\n            - $ref: '#/components/schemas/Eula'\n            - description: The EULA.\n    GetLaunchProfileResponse:\n      type: object\n      properties:\n        launchProfile:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfile'\n            - description: The launch profile.\n    GetLaunchProfileDetailsResponse:\n      type: object\n      properties:\n        launchProfile:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfile'\n            - description: The launch profile.\n        streamingImages:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageList'\n            - description: A collection of streaming images.\n        studioComponentSummaries:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSummaryList'\n            - description: A collection of studio component summaries.\n    GetLaunchProfileInitializationResponse:\n      type: object\n      properties:\n        launchProfileInitialization:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileInitialization'\n            - description: The launch profile initialization.\n    GetLaunchProfileMemberResponse:\n      type: object\n      properties:\n        member:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileMembership'\n            - description: The member.\n    GetStreamingImageResponse:\n      type: object\n      properties:\n        streamingImage:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImage'\n            - description: The streaming image.\n    GetStreamingSessionResponse:\n      type: object\n      properties:\n        session:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSession'\n            - description: The session.\n    GetStreamingSessionStreamResponse:\n      type: object\n      properties:\n        stream:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionStream'\n            - description: The stream.\n    GetStudioResponse:\n      type: object\n      properties:\n        studio:\n          allOf:\n            - $ref: '#/components/schemas/Studio'\n            - description: Information about a studio.\n    GetStudioComponentResponse:\n      type: object\n      properties:\n        studioComponent:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponent'\n            - description: Information about the studio component.\n    GetStudioMemberResponse:\n      type: object\n      properties:\n        member:\n          allOf:\n            - $ref: '#/components/schemas/StudioMembership'\n            - description: The member.\n    ListEulaAcceptancesResponse:\n      type: object\n      properties:\n        eulaAcceptances:\n          allOf:\n            - $ref: '#/components/schemas/EulaAcceptanceList'\n            - description: A collection of EULA acceptances.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n    ListEulasResponse:\n      type: object\n      properties:\n        eulas:\n          allOf:\n            - $ref: '#/components/schemas/EulaList'\n            - description: A collection of EULA resources.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n    ListLaunchProfileMembersResponse:\n      type: object\n      properties:\n        members:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileMembershipList'\n            - description: A list of members.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n    ListLaunchProfilesResponse:\n      type: object\n      properties:\n        launchProfiles:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileList'\n            - description: A collection of launch profiles.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n    ListStreamingImagesResponse:\n      type: object\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n        streamingImages:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageList'\n            - description: A collection of streaming images.\n    ListStreamingSessionsResponse:\n      type: object\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n        sessions:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionList'\n            - description: A collection of streaming sessions.\n    ListStudioComponentsResponse:\n      type: object\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n        studioComponents:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentList'\n            - description: A collection of studio components.\n    ListStudioMembersResponse:\n      type: object\n      properties:\n        members:\n          allOf:\n            - $ref: '#/components/schemas/StudioMembershipList'\n            - description: A list of members.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n    ListStudiosResponse:\n      type: object\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token for the next set of results, or null if there are no more results.'\n        studios:\n          allOf:\n            - $ref: '#/components/schemas/StudioList'\n            - description: A collection of studios.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n    PutLaunchProfileMembersResponse:\n      type: object\n      properties: {}\n    NewLaunchProfileMember:\n      type: object\n      required:\n        - persona\n        - principalId\n      properties:\n        persona:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfilePersona'\n            - description: The persona.\n        principalId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The principal ID.\n      description: ''\n    PutStudioMembersResponse:\n      type: object\n      properties: {}\n    NewStudioMember:\n      type: object\n      required:\n        - persona\n        - principalId\n      properties:\n        persona:\n          allOf:\n            - $ref: '#/components/schemas/StudioPersona'\n            - description: The persona.\n        principalId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The principal ID.\n      description: ''\n    StartStudioSSOConfigurationRepairResponse:\n      type: object\n      properties:\n        studio:\n          allOf:\n            - $ref: '#/components/schemas/Studio'\n            - description: Information about a studio.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    UpdateLaunchProfileResponse:\n      type: object\n      properties:\n        launchProfile:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfile'\n            - description: The launch profile.\n    UpdateLaunchProfileMemberResponse:\n      type: object\n      properties:\n        member:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileMembership'\n            - description: The member.\n    UpdateStreamingImageResponse:\n      type: object\n      properties:\n        streamingImage:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImage'\n            - description: ''\n    UpdateStudioResponse:\n      type: object\n      properties:\n        studio:\n          allOf:\n            - $ref: '#/components/schemas/Studio'\n            - description: Information about a studio.\n    UpdateStudioComponentResponse:\n      type: object\n      properties:\n        studioComponent:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponent'\n            - description: Information about the studio component.\n    ClientToken:\n      type: string\n      minLength: 1\n      maxLength: 64\n    EulaIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/__string'\n      description: ''\n    AcceptEulasRequest:\n      type: object\n      title: AcceptEulasRequest\n      properties:\n        eulaIds:\n          allOf:\n            - $ref: '#/components/schemas/EulaIdList'\n            - description: The EULA ID.\n      description: A collection of EULA acceptances.\n    EulaAcceptanceList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EulaAcceptance'\n      description: ''\n    ActiveDirectoryComputerAttributeName:\n      type: string\n      description: The name for the LDAP attribute.\n      minLength: 1\n      maxLength: 40\n    ActiveDirectoryComputerAttributeValue:\n      type: string\n      description: The value for the LDAP attribute.\n      minLength: 1\n      maxLength: 64\n    ActiveDirectoryComputerAttribute:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeName'\n            - description: The name for the LDAP attribute.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeValue'\n            - description: The value for the LDAP attribute.\n      description: 'An LDAP attribute of an Active Directory computer account, in the form of a name:value pair.'\n    ActiveDirectoryComputerAttributeList:\n      type: array\n      description: A collection of LDAP attributes to apply to Active Directory computer accounts that are created for streaming sessions.\n      items:\n        $ref: '#/components/schemas/ActiveDirectoryComputerAttribute'\n      maxItems: 50\n    DirectoryId:\n      type: string\n    ActiveDirectoryOrganizationalUnitDistinguishedName:\n      type: string\n      description: The fully-qualified distinguished name of the organizational unit to place the computer account in.\n      minLength: 1\n      maxLength: 2000\n    ActiveDirectoryDnsIpAddress:\n      type: string\n    ActiveDirectoryDnsIpAddressList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ActiveDirectoryDnsIpAddress'\n      maxItems: 10\n      description: ''\n    LaunchProfileDescription:\n      type: string\n      maxLength: 256\n    EC2SubnetIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EC2SubnetId'\n      maxItems: 6\n      description: ''\n    LaunchProfileProtocolVersionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LaunchProfileProtocolVersion'\n      description: ''\n    LaunchProfileName:\n      type: string\n      maxLength: 64\n    StreamConfigurationCreate:\n      type: object\n      required:\n        - clipboardMode\n        - streamingImageIds\n        - ec2InstanceTypes\n      properties:\n        clipboardMode:\n          allOf:\n            - $ref: '#/components/schemas/StreamingClipboardMode'\n            - description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.\n        ec2InstanceTypes:\n          allOf:\n            - $ref: '#/components/schemas/StreamingInstanceTypeList'\n            - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.\n        maxSessionLengthInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'\n            - description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'\n        streamingImageIds:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageIdList'\n            - description: The streaming images that users can select from when launching a streaming session with this launch profile.\n      description: ''\n    LaunchProfileStudioComponentIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/__string'\n      minItems: 1\n      maxItems: 100\n      description: ''\n    Tags:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/__string'\n      description: ''\n    CreateLaunchProfileRequest:\n      type: object\n      required:\n        - ec2SubnetIds\n        - studioComponentIds\n        - launchProfileProtocolVersions\n        - name\n        - streamConfiguration\n      title: CreateLaunchProfileRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileDescription'\n            - description: The description.\n        ec2SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/EC2SubnetIdList'\n            - description: ''\n        launchProfileProtocolVersions:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileProtocolVersionList'\n            - description: The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".\n        name:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileName'\n            - description: The name for the launch profile.\n        streamConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/StreamConfigurationCreate'\n            - description: A configuration for a streaming session.\n        studioComponentIds:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'\n            - description: Unique identifiers for a collection of studio components that can be used with this launch profile.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n      description: A collection of launch profiles.\n    LaunchProfile:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the resource.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was created.\n        createdBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that created the launch profile.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileDescription'\n            - description: A human-readable description of the launch profile.\n        ec2SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/EC2SubnetIdList'\n            - description: Unique identifiers for a collection of EC2 subnets.\n        launchProfileId:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileId'\n            - description: The launch profile ID.\n        launchProfileProtocolVersions:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileProtocolVersionList'\n            - description: The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".\n        name:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileName'\n            - description: A friendly name for the launch profile.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileState'\n            - description: The current state.\n        statusCode:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileStatusCode'\n            - description: The status code.\n        statusMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The status message for the launch profile.\n        streamConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/StreamConfiguration'\n            - description: A configuration for a streaming session.\n        studioComponentIds:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'\n            - description: Unique identifiers for a collection of studio components that can be used with this launch profile.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was updated.\n        updatedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that most recently updated the resource.\n      description: ''\n    StreamingImageDescription:\n      type: string\n      description: The description.\n      maxLength: 256\n    EC2ImageId:\n      type: string\n      pattern: '^ami-[0-9A-z]+$'\n      description: ''\n    StreamingImageName:\n      type: string\n      description: A friendly name for a streaming image resource.\n      maxLength: 64\n    CreateStreamingImageRequest:\n      type: object\n      required:\n        - name\n        - ec2ImageId\n      title: CreateStreamingImageRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageDescription'\n            - description: A human-readable description of the streaming image.\n        ec2ImageId:\n          allOf:\n            - $ref: '#/components/schemas/EC2ImageId'\n            - description: The ID of an EC2 machine image with which to create this streaming image.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageName'\n            - description: A friendly name for a streaming image resource.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n      description: A collection of streaming images.\n    StreamingImage:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the resource.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageDescription'\n            - description: A human-readable description of the streaming image.\n        ec2ImageId:\n          allOf:\n            - $ref: '#/components/schemas/EC2ImageId'\n            - description: The ID of an EC2 machine image with which to create the streaming image.\n        encryptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageEncryptionConfiguration'\n            - description: The encryption configuration.\n        eulaIds:\n          allOf:\n            - $ref: '#/components/schemas/EulaIdList'\n            - description: The list of EULAs that must be accepted before a Streaming Session can be started using this streaming image.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageName'\n            - description: A friendly name for a streaming image resource.\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageOwner'\n            - description: 'The owner of the streaming image, either the studioId that contains the streaming image, or ''amazon'' for images that are provided by Amazon Nimble Studio.'\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImagePlatform'\n            - description: 'The platform of the streaming image, either WINDOWS or LINUX.'\n        state:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageState'\n            - description: The current state.\n        statusCode:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageStatusCode'\n            - description: The status code.\n        statusMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The status message for the streaming image.\n        streamingImageId:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageId'\n            - description: The ID of the streaming image.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n      description: ''\n    StreamingInstanceType:\n      type: string\n      enum:\n        - g4dn.xlarge\n        - g4dn.2xlarge\n        - g4dn.4xlarge\n        - g4dn.8xlarge\n        - g4dn.12xlarge\n        - g4dn.16xlarge\n      description: ''\n    StreamingImageId:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      maxLength: 22\n      description: ''\n    CreateStreamingSessionRequest:\n      type: object\n      title: CreateStreamingSessionRequest\n      properties:\n        ec2InstanceType:\n          allOf:\n            - $ref: '#/components/schemas/StreamingInstanceType'\n            - description: The EC2 Instance type used for the streaming session.\n        launchProfileId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The launch profile ID.\n        ownedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that owns the streaming session.\n        streamingImageId:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageId'\n            - description: The ID of the streaming image.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n      description: A collection of streaming sessions.\n    StreamingSession:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the resource.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was created.\n        createdBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that created the streaming session.\n        ec2InstanceType:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The EC2 Instance type used for the streaming session.\n        launchProfileId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the launch profile used to control access from the streaming session.\n        ownedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that owns the streaming session.\n        sessionId:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionId'\n            - description: The session ID.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionState'\n            - description: The current state.\n        statusCode:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionStatusCode'\n            - description: The status code.\n        statusMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The status message for the streaming session.\n        streamingImageId:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageId'\n            - description: The ID of the streaming image.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n        terminateAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time the streaming session will automatically terminate if not terminated by the user.\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was updated.\n        updatedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that most recently updated the resource.\n      description: ''\n    StreamingSessionStreamExpirationInSeconds:\n      type: integer\n      minimum: 60\n      maximum: 3600\n      description: ''\n    CreateStreamingSessionStreamRequest:\n      type: object\n      title: CreateStreamingSessionStreamRequest\n      properties:\n        expirationInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionStreamExpirationInSeconds'\n            - description: The expiration time in seconds.\n      description: A list collection streams.\n    StreamingSessionStream:\n      type: object\n      properties:\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was created.\n        createdBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that created the streaming session stream.\n        expiresAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource expires.\n        ownedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that owns the streaming session.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionStreamState'\n            - description: The current state.\n        statusCode:\n          allOf:\n            - $ref: '#/components/schemas/StreamingSessionStreamStatusCode'\n            - description: The streaming session stream status code.\n        streamId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The stream ID.\n        url:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The URL to connect to this stream using the DCV client.\n      description: ''\n    StudioComponentConfiguration:\n      type: object\n      properties:\n        activeDirectoryConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryConfiguration'\n            - description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.\n        computeFarmConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ComputeFarmConfiguration'\n            - description: The configuration for a render farm that is associated with a studio resource.\n        licenseServiceConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/LicenseServiceConfiguration'\n            - description: The configuration for a license service that is associated with a studio resource.\n        sharedFileSystemConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/SharedFileSystemConfiguration'\n            - description: The configuration for a shared file storage system that is associated with a studio resource.\n      description: 'The configuration of the studio component, based on component type.'\n    StudioComponentDescription:\n      type: string\n      maxLength: 256\n      description: ''\n    StudioComponentSecurityGroupIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SecurityGroupId'\n      minItems: 1\n      maxItems: 30\n      description: ''\n    StudioComponentInitializationScriptList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StudioComponentInitializationScript'\n      description: ''\n    StudioComponentName:\n      type: string\n      maxLength: 64\n      description: ''\n    StudioComponentScriptParameterKeyValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ScriptParameterKeyValue'\n      maxItems: 30\n      description: ''\n    StudioComponentSubtype:\n      type: string\n      enum:\n        - AWS_MANAGED_MICROSOFT_AD\n        - AMAZON_FSX_FOR_WINDOWS\n        - AMAZON_FSX_FOR_LUSTRE\n        - CUSTOM\n      description: ''\n    StudioComponentType:\n      type: string\n      enum:\n        - ACTIVE_DIRECTORY\n        - SHARED_FILE_SYSTEM\n        - COMPUTE_FARM\n        - LICENSE_SERVICE\n        - CUSTOM\n      description: ''\n    CreateStudioComponentRequest:\n      type: object\n      required:\n        - name\n        - type\n      title: CreateStudioComponentRequest\n      properties:\n        configuration:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentConfiguration'\n            - description: 'The configuration of the studio component, based on component type.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentDescription'\n            - description: The description.\n        ec2SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'\n            - description: The EC2 security groups that control access to the studio component.\n        initializationScripts:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentInitializationScriptList'\n            - description: Initialization scripts for studio components.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentName'\n            - description: The name for the studio component.\n        scriptParameters:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'\n            - description: Parameters for the studio component scripts.\n        subtype:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSubtype'\n            - description: The specific subtype of a studio component.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentType'\n            - description: The type of the studio component.\n      description: The studio components.\n    StudioComponent:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the resource.\n        configuration:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentConfiguration'\n            - description: 'The configuration of the studio component, based on component type.'\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was created.\n        createdBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that created the studio component.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentDescription'\n            - description: A human-readable description for the studio component resource.\n        ec2SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'\n            - description: The EC2 security groups that control access to the studio component.\n        initializationScripts:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentInitializationScriptList'\n            - description: Initialization scripts for studio components.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentName'\n            - description: A friendly name for the studio component resource.\n        scriptParameters:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'\n            - description: Parameters for the studio component scripts.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentState'\n            - description: The current state.\n        statusCode:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentStatusCode'\n            - description: The status code.\n        statusMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The status message for the studio component.\n        studioComponentId:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentId'\n            - description: The unique identifier for a studio component resource.\n        subtype:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSubtype'\n            - description: The specific subtype of a studio component.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentType'\n            - description: The type of the studio component.\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was updated.\n        updatedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that most recently updated the resource.\n      description: 'A network that is used by a studio’s users and workflows, including render farm, Active Directory, licensing, and file system.'\n    StudioDisplayName:\n      type: string\n      maxLength: 64\n    StudioEncryptionConfiguration:\n      type: object\n      required:\n        - keyType\n      properties:\n        keyArn:\n          allOf:\n            - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyArn'\n            - description: The ARN for a KMS key that is used to encrypt studio data.\n        keyType:\n          allOf:\n            - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyType'\n            - description: The type of KMS key that is used to encrypt studio data.\n      description: Configuration of the encryption method that is used for the studio.\n    StudioName:\n      type: string\n      pattern: '^[a-z0-9]*$'\n      minLength: 3\n      maxLength: 64\n      description: ''\n    CreateStudioRequest:\n      type: object\n      required:\n        - displayName\n        - studioName\n        - userRoleArn\n        - adminRoleArn\n      title: CreateStudioRequest\n      properties:\n        adminRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.\n        displayName:\n          allOf:\n            - $ref: '#/components/schemas/StudioDisplayName'\n            - description: A friendly name for the studio.\n        studioEncryptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/StudioEncryptionConfiguration'\n            - description: The studio encryption configuration.\n        studioName:\n          allOf:\n            - $ref: '#/components/schemas/StudioName'\n            - description: The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n        userRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.\n      description: A collection of studio resources.\n    Studio:\n      type: object\n      properties:\n        adminRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The IAM role that studio admins assume when logging in to the Nimble Studio portal.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was created.\n        displayName:\n          allOf:\n            - $ref: '#/components/schemas/StudioDisplayName'\n            - description: A friendly name for the studio.\n        homeRegion:\n          allOf:\n            - $ref: '#/components/schemas/Region'\n            - description: The Amazon Web Services Region where the studio resource is located.\n        ssoClientId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The Amazon Web Services SSO application client ID used to integrate with Amazon Web Services SSO to enable Amazon Web Services SSO users to log in to Nimble portal.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/StudioState'\n            - description: The current state of the studio resource.\n        statusCode:\n          allOf:\n            - $ref: '#/components/schemas/StudioStatusCode'\n            - description: Status codes that provide additional detail on the studio state.\n        statusMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: Additional detail on the studio state.\n        studioEncryptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/StudioEncryptionConfiguration'\n            - description: Configuration of the encryption method that is used for the studio.\n        studioId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The unique identifier for a studio resource. In Nimble Studio, all other resources are contained in a studio resource.'\n        studioName:\n          allOf:\n            - $ref: '#/components/schemas/StudioName'\n            - description: 'The name of the studio, as included in the URL when accessing it in the Nimble Studio portal.'\n        studioUrl:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The address of the web page for the studio.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was updated.\n        userRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The IAM role that studio users assume when logging in to the Nimble Studio portal.\n      description: ''\n    DeleteLaunchProfileMemberRequest:\n      type: object\n      title: DeleteLaunchProfileMemberRequest\n      properties: {}\n    DeleteLaunchProfileRequest:\n      type: object\n      title: DeleteLaunchProfileRequest\n      properties: {}\n    DeleteStreamingImageRequest:\n      type: object\n      title: DeleteStreamingImageRequest\n      properties: {}\n    DeleteStreamingSessionRequest:\n      type: object\n      title: DeleteStreamingSessionRequest\n      properties: {}\n    DeleteStudioComponentRequest:\n      type: object\n      title: DeleteStudioComponentRequest\n      properties: {}\n    DeleteStudioMemberRequest:\n      type: object\n      title: DeleteStudioMemberRequest\n      properties: {}\n    DeleteStudioRequest:\n      type: object\n      title: DeleteStudioRequest\n      properties: {}\n    Timestamp:\n      type: string\n      format: date-time\n      description: ''\n    EulaId:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      description: Represents a EULA resource.\n      maxLength: 22\n    EulaName:\n      type: string\n      maxLength: 64\n    Eula:\n      type: object\n      properties:\n        content:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The EULA content.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was created.\n        eulaId:\n          allOf:\n            - $ref: '#/components/schemas/EulaId'\n            - description: The EULA ID.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/EulaName'\n            - description: The name for the EULA.\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was updated.\n      description: Represents a EULA resource.\n    EulaAcceptanceId:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      description: The EULA acceptance ID.\n      maxLength: 22\n    EulaAcceptance:\n      type: object\n      properties:\n        acceptedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the EULA was accepted.\n        acceptedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the person who accepted the EULA.\n        accepteeId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the acceptee.\n        eulaAcceptanceId:\n          allOf:\n            - $ref: '#/components/schemas/EulaAcceptanceId'\n            - description: The EULA acceptance ID.\n        eulaId:\n          allOf:\n            - $ref: '#/components/schemas/EulaId'\n            - description: The EULA ID.\n      description: ''\n    EulaList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Eula'\n      description: ''\n    GetEulaRequest:\n      type: object\n      title: GetEulaRequest\n      properties: {}\n    GetLaunchProfileDetailsRequest:\n      type: object\n      title: GetLaunchProfileDetailsRequest\n      properties: {}\n    StreamingImageList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StreamingImage'\n      description: ''\n    StudioComponentSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StudioComponentSummary'\n      description: ''\n    multiValueQueryStringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/__string'\n    GetLaunchProfileInitializationRequest:\n      type: object\n      title: GetLaunchProfileInitializationRequest\n      properties: {}\n    LaunchProfileInitialization:\n      type: object\n      properties:\n        activeDirectory:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileInitializationActiveDirectory'\n            - description: A LaunchProfileInitializationActiveDirectory resource.\n        ec2SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileSecurityGroupIdList'\n            - description: The EC2 security groups that control access to the studio component.\n        launchProfileId:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileId'\n            - description: The launch profile ID.\n        launchProfileProtocolVersion:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileProtocolVersion'\n            - description: The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".\n        launchPurpose:\n          allOf:\n            - $ref: '#/components/schemas/LaunchPurpose'\n            - description: The launch purpose.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileName'\n            - description: The name for the launch profile.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfilePlatform'\n            - description: 'The platform of the launch platform, either WINDOWS or LINUX.'\n        systemInitializationScripts:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileInitializationScriptList'\n            - description: The system initializtion scripts.\n        userInitializationScripts:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileInitializationScriptList'\n            - description: The user initializtion scripts.\n      description: ''\n    GetLaunchProfileMemberRequest:\n      type: object\n      title: GetLaunchProfileMemberRequest\n      properties: {}\n    LaunchProfileMembership:\n      type: object\n      properties:\n        identityStoreId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the identity store.\n        persona:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfilePersona'\n            - description: The persona.\n        principalId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The principal ID.\n      description: ''\n    GetLaunchProfileRequest:\n      type: object\n      title: GetLaunchProfileRequest\n      properties: {}\n    GetStreamingImageRequest:\n      type: object\n      title: GetStreamingImageRequest\n      properties: {}\n    GetStreamingSessionRequest:\n      type: object\n      title: GetStreamingSessionRequest\n      properties: {}\n    GetStreamingSessionStreamRequest:\n      type: object\n      title: GetStreamingSessionStreamRequest\n      properties: {}\n    GetStudioComponentRequest:\n      type: object\n      title: GetStudioComponentRequest\n      properties: {}\n    GetStudioMemberRequest:\n      type: object\n      title: GetStudioMemberRequest\n      properties: {}\n    StudioMembership:\n      type: object\n      properties:\n        identityStoreId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the identity store.\n        persona:\n          allOf:\n            - $ref: '#/components/schemas/StudioPersona'\n            - description: The persona.\n        principalId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The principal ID.\n      description: ''\n    GetStudioRequest:\n      type: object\n      title: GetStudioRequest\n      properties: {}\n    LaunchProfileId:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      maxLength: 22\n    LaunchProfileState:\n      type: string\n      enum:\n        - CREATE_IN_PROGRESS\n        - READY\n        - UPDATE_IN_PROGRESS\n        - DELETE_IN_PROGRESS\n        - DELETED\n        - DELETE_FAILED\n        - CREATE_FAILED\n        - UPDATE_FAILED\n      description: ''\n    LaunchProfileStatusCode:\n      type: string\n      enum:\n        - LAUNCH_PROFILE_CREATED\n        - LAUNCH_PROFILE_UPDATED\n        - LAUNCH_PROFILE_DELETED\n        - LAUNCH_PROFILE_CREATE_IN_PROGRESS\n        - LAUNCH_PROFILE_UPDATE_IN_PROGRESS\n        - LAUNCH_PROFILE_DELETE_IN_PROGRESS\n        - INTERNAL_ERROR\n        - STREAMING_IMAGE_NOT_FOUND\n        - STREAMING_IMAGE_NOT_READY\n        - LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED\n        - ENCRYPTION_KEY_ACCESS_DENIED\n        - ENCRYPTION_KEY_NOT_FOUND\n        - INVALID_SUBNETS_PROVIDED\n      description: ''\n    StreamConfiguration:\n      type: object\n      properties:\n        clipboardMode:\n          allOf:\n            - $ref: '#/components/schemas/StreamingClipboardMode'\n            - description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.\n        ec2InstanceTypes:\n          allOf:\n            - $ref: '#/components/schemas/StreamingInstanceTypeList'\n            - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.\n        maxSessionLengthInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'\n            - description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'\n        streamingImageIds:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageIdList'\n            - description: The streaming images that users can select from when launching a streaming session with this launch profile.\n      description: A configuration for a streaming session.\n    LaunchProfileInitializationActiveDirectory:\n      type: object\n      properties:\n        computerAttributes:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeList'\n            - description: A collection of custom attributes for an Active Directory computer.\n        directoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory ID of the Directory Service for Microsoft Active Directory to access using this launch profile.\n        directoryName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The directory name.\n        dnsIpAddresses:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryDnsIpAddressList'\n            - description: The DNS IP address.\n        organizationalUnitDistinguishedName:\n          allOf:\n            - $ref: '#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName'\n            - description: The name for the organizational unit distinguished name.\n        studioComponentId:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentId'\n            - description: The unique identifier for a studio component resource.\n        studioComponentName:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentName'\n            - description: The name for the studio component.\n      description: ''\n    LaunchProfileSecurityGroupIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SecurityGroupId'\n      minItems: 1\n      description: ''\n    LaunchPurpose:\n      type: string\n      pattern: '^[A-Z0-9_]+$'\n      description: The launch purpose.\n      maxLength: 64\n    LaunchProfilePlatform:\n      type: string\n      enum:\n        - LINUX\n        - WINDOWS\n      description: ''\n    LaunchProfileInitializationScriptList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LaunchProfileInitializationScript'\n      description: ''\n    StudioComponentId:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      maxLength: 22\n    StudioComponentInitializationScriptContent:\n      type: string\n      minLength: 1\n      maxLength: 5120\n      description: ''\n    LaunchProfileInitializationScript:\n      type: object\n      properties:\n        script:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentInitializationScriptContent'\n            - description: The initialization script.\n        studioComponentId:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentId'\n            - description: The unique identifier for a studio component resource.\n        studioComponentName:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentName'\n            - description: The name for the studio component.\n      description: ''\n    LaunchProfileList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LaunchProfile'\n      description: ''\n    LaunchProfilePersona:\n      type: string\n      enum:\n        - USER\n      description: ''\n    LaunchProfileMembershipList:\n      type: array\n      description: ''\n      items:\n        $ref: '#/components/schemas/LaunchProfileMembership'\n      maxItems: 20\n    LinuxMountPoint:\n      type: string\n      pattern: '^(/?|(\\$HOME)?(/[^/\\n\\s\\\\]+)*)$'\n      maxLength: 128\n      description: ''\n    ListEulaAcceptancesRequest:\n      type: object\n      title: ListEulaAcceptancesRequest\n      properties: {}\n    ListEulasRequest:\n      type: object\n      title: ListEulasRequest\n      properties: {}\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    ListLaunchProfileMembersRequest:\n      type: object\n      title: ListLaunchProfileMembersRequest\n      properties: {}\n    ListLaunchProfilesRequest:\n      type: object\n      title: ListLaunchProfilesRequest\n      properties: {}\n    ListStreamingImagesRequest:\n      type: object\n      title: ListStreamingImagesRequest\n      properties: {}\n    ListStreamingSessionsRequest:\n      type: object\n      title: ListStreamingSessionsRequest\n      properties: {}\n    StreamingSessionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StreamingSession'\n      description: ''\n    ListStudioComponentsRequest:\n      type: object\n      title: ListStudioComponentsRequest\n      properties: {}\n    StudioComponentList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StudioComponent'\n      maxItems: 50\n      description: ''\n    ListStudioMembersRequest:\n      type: object\n      title: ListStudioMembersRequest\n      properties: {}\n    StudioMembershipList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StudioMembership'\n      maxItems: 20\n      description: ''\n    ListStudiosRequest:\n      type: object\n      title: ListStudiosRequest\n      properties: {}\n    StudioList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Studio'\n      description: ''\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    NewLaunchProfileMemberList:\n      type: array\n      items:\n        $ref: '#/components/schemas/NewLaunchProfileMember'\n      minItems: 1\n      maxItems: 20\n      description: ''\n    StudioPersona:\n      type: string\n      enum:\n        - ADMINISTRATOR\n      description: ''\n    NewStudioMemberList:\n      type: array\n      items:\n        $ref: '#/components/schemas/NewStudioMember'\n      minItems: 1\n      maxItems: 20\n      description: ''\n    PutLaunchProfileMembersRequest:\n      type: object\n      required:\n        - members\n        - identityStoreId\n      title: PutLaunchProfileMembersRequest\n      properties:\n        identityStoreId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the identity store.\n        members:\n          allOf:\n            - $ref: '#/components/schemas/NewLaunchProfileMemberList'\n            - description: A list of members.\n      description: Information about a launch profile membership.\n    PutStudioMembersRequest:\n      type: object\n      required:\n        - members\n        - identityStoreId\n      title: PutStudioMembersRequest\n      properties:\n        identityStoreId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the identity store.\n        members:\n          allOf:\n            - $ref: '#/components/schemas/NewStudioMemberList'\n            - description: A list of members.\n      description: A launch profile membership collection.\n    Region:\n      type: string\n      pattern: '[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]'\n      maxLength: 50\n      description: ''\n    ScriptParameterKey:\n      type: string\n      pattern: '^[a-zA-Z_][a-zA-Z0-9_]+$'\n      description: A script parameter key.\n      minLength: 1\n      maxLength: 64\n    ScriptParameterValue:\n      type: string\n      description: A script parameter value.\n      minLength: 1\n      maxLength: 256\n    WindowsMountDrive:\n      type: string\n      pattern: '^[A-Z]$'\n      description: ''\n    StartStudioSSOConfigurationRepairRequest:\n      type: object\n      title: StartStudioSSOConfigurationRepairRequest\n      properties: {}\n    StreamingImageEncryptionConfiguration:\n      type: object\n      required:\n        - keyType\n      properties:\n        keyArn:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageEncryptionConfigurationKeyArn'\n            - description: The ARN for a KMS key that is used to encrypt studio data.\n        keyType:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageEncryptionConfigurationKeyType'\n            - description: The type of KMS key that is used to encrypt studio data.\n      description: ''\n    StreamingImageOwner:\n      type: string\n      description: '\u003cp\u003eStreamingImageOwner is the owner of a particular streaming image.\u003c/p\u003e \u003cp\u003eThis string is either the studioId that contains the streaming image, or the word ''AMAZON'' for images provided by Nimble Studio.\u003c/p\u003e'\n    StreamingImagePlatform:\n      type: string\n      pattern: '^[a-zA-Z]*$'\n      description: 'The platform of this Streaming Image, either WINDOWS or LINUX.'\n    StreamingImageState:\n      type: string\n      enum:\n        - CREATE_IN_PROGRESS\n        - READY\n        - DELETE_IN_PROGRESS\n        - DELETED\n        - UPDATE_IN_PROGRESS\n        - UPDATE_FAILED\n        - CREATE_FAILED\n        - DELETE_FAILED\n      description: ''\n    StreamingImageStatusCode:\n      type: string\n      enum:\n        - STREAMING_IMAGE_CREATE_IN_PROGRESS\n        - STREAMING_IMAGE_READY\n        - STREAMING_IMAGE_DELETE_IN_PROGRESS\n        - STREAMING_IMAGE_DELETED\n        - STREAMING_IMAGE_UPDATE_IN_PROGRESS\n        - INTERNAL_ERROR\n      description: The status code.\n    StreamingImageEncryptionConfigurationKeyArn:\n      type: string\n      pattern: '^arn:.*'\n      minLength: 4\n      description: ''\n    StreamingImageEncryptionConfigurationKeyType:\n      type: string\n      enum:\n        - CUSTOMER_MANAGED_KEY\n      description: ''\n    StreamingSessionId:\n      type: string\n    StreamingSessionState:\n      type: string\n      enum:\n        - CREATE_IN_PROGRESS\n        - DELETE_IN_PROGRESS\n        - READY\n        - DELETED\n        - CREATE_FAILED\n        - DELETE_FAILED\n      description: The streaming session state.\n    StreamingSessionStatusCode:\n      type: string\n      enum:\n        - STREAMING_SESSION_READY\n        - STREAMING_SESSION_DELETED\n        - STREAMING_SESSION_CREATE_IN_PROGRESS\n        - STREAMING_SESSION_DELETE_IN_PROGRESS\n        - INTERNAL_ERROR\n        - INSUFFICIENT_CAPACITY\n        - ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR\n        - NETWORK_CONNECTION_ERROR\n        - INITIALIZATION_SCRIPT_ERROR\n        - DECRYPT_STREAMING_IMAGE_ERROR\n        - NETWORK_INTERFACE_ERROR\n      description: ''\n    StreamingSessionStreamState:\n      type: string\n      enum:\n        - READY\n        - CREATE_IN_PROGRESS\n        - DELETE_IN_PROGRESS\n        - DELETED\n        - CREATE_FAILED\n        - DELETE_FAILED\n      description: ''\n    StreamingSessionStreamStatusCode:\n      type: string\n      enum:\n        - STREAM_CREATE_IN_PROGRESS\n        - STREAM_READY\n        - STREAM_DELETE_IN_PROGRESS\n        - STREAM_DELETED\n        - INTERNAL_ERROR\n        - NETWORK_CONNECTION_ERROR\n    StudioState:\n      type: string\n      enum:\n        - CREATE_IN_PROGRESS\n        - READY\n        - UPDATE_IN_PROGRESS\n        - DELETE_IN_PROGRESS\n        - DELETED\n        - DELETE_FAILED\n        - CREATE_FAILED\n        - UPDATE_FAILED\n      description: ''\n    StudioStatusCode:\n      type: string\n      enum:\n        - STUDIO_CREATED\n        - STUDIO_DELETED\n        - STUDIO_UPDATED\n        - STUDIO_CREATE_IN_PROGRESS\n        - STUDIO_UPDATE_IN_PROGRESS\n        - STUDIO_DELETE_IN_PROGRESS\n        - STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED\n        - STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED\n        - STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED\n        - AWS_SSO_NOT_ENABLED\n        - AWS_SSO_ACCESS_DENIED\n        - ROLE_NOT_OWNED_BY_STUDIO_OWNER\n        - ROLE_COULD_NOT_BE_ASSUMED\n        - INTERNAL_ERROR\n        - ENCRYPTION_KEY_NOT_FOUND\n        - ENCRYPTION_KEY_ACCESS_DENIED\n        - AWS_SSO_CONFIGURATION_REPAIRED\n        - AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS\n      description: The status code.\n    StudioComponentState:\n      type: string\n      enum:\n        - CREATE_IN_PROGRESS\n        - READY\n        - UPDATE_IN_PROGRESS\n        - DELETE_IN_PROGRESS\n        - DELETED\n        - DELETE_FAILED\n        - CREATE_FAILED\n        - UPDATE_FAILED\n      description: '\u003cp\u003eThe current state of the studio component resource.\u003c/p\u003e \u003cp\u003eWhile a studio component is being created, modified, or deleted, its state will equal \"CREATE_IN_PROGRESS\", \"UPDATE_IN_PROGRESS\", or \"DELETE_IN_PROGRESS\"\u003c/p\u003e \u003cp\u003eThese are called ''transition states''.\u003c/p\u003e \u003cp\u003eNo modifications may be made to the studio component while it is in a transition state.\u003c/p\u003e \u003cp\u003eIf creation of the resource fails, the state will change to `CREATE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why creation failed. The resource in this state will automatically be deleted from your account after a period of time.\u003c/p\u003e \u003cp\u003eIf updating the resource fails, the state will change to `UPDATE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked.\u003c/p\u003e \u003cp\u003eIf deleting the resource fails, the state will change to `DELETE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked. After the resource is deleted successfully, it will change to the \"DELETED\" state. The resource will no longer count against service quotas and cannot be used or acted upon any futher. It will be removed from your account after a period of time.\u003c/p\u003e'\n    StudioComponentStatusCode:\n      type: string\n      enum:\n        - ACTIVE_DIRECTORY_ALREADY_EXISTS\n        - STUDIO_COMPONENT_CREATED\n        - STUDIO_COMPONENT_UPDATED\n        - STUDIO_COMPONENT_DELETED\n        - ENCRYPTION_KEY_ACCESS_DENIED\n        - ENCRYPTION_KEY_NOT_FOUND\n        - STUDIO_COMPONENT_CREATE_IN_PROGRESS\n        - STUDIO_COMPONENT_UPDATE_IN_PROGRESS\n        - STUDIO_COMPONENT_DELETE_IN_PROGRESS\n        - INTERNAL_ERROR\n      description: '\u003cp\u003eThe current status of the studio component resource.\u003c/p\u003e \u003cp\u003eWhen the resource is in the ''READY'' state, the status code signals what the last mutation made to the resource was.\u003c/p\u003e \u003cp\u003eWhen the resource is in a CREATE_FAILED/UPDATE_FAILED/DELETE_FAILED state, the status code signals what went wrong and why the mutation failed.\u003c/p\u003e'\n    StudioComponentInitializationScriptRunContext:\n      type: string\n      enum:\n        - SYSTEM_INITIALIZATION\n        - USER_INITIALIZATION\n      description: ''\n    StudioComponentSummary:\n      type: object\n      properties:\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was created.\n        createdBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that created the studio component.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentDescription'\n            - description: The description.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentName'\n            - description: The name for the studio component.\n        studioComponentId:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentId'\n            - description: The unique identifier for a studio component resource.\n        subtype:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSubtype'\n            - description: The specific subtype of a studio component.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentType'\n            - description: The type of the studio component.\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix epoch timestamp in seconds for when the resource was updated.\n        updatedBy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The user ID of the user that most recently updated the resource.\n      description: ''\n    TagResourceRequest:\n      type: object\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'\n      description: The ARN for the role that manages access.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateLaunchProfileMemberRequest:\n      type: object\n      required:\n        - persona\n      title: UpdateLaunchProfileMemberRequest\n      properties:\n        persona:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfilePersona'\n            - description: The persona.\n      description: The principal ID.\n    UpdateLaunchProfileRequest:\n      type: object\n      title: UpdateLaunchProfileRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileDescription'\n            - description: The description.\n        launchProfileProtocolVersions:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileProtocolVersionList'\n            - description: The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".\n        name:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileName'\n            - description: The name for the launch profile.\n        streamConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/StreamConfigurationCreate'\n            - description: A configuration for a streaming session.\n        studioComponentIds:\n          allOf:\n            - $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'\n            - description: Unique identifiers for a collection of studio components that can be used with this launch profile.\n      description: The launch profile ID.\n    UpdateStreamingImageRequest:\n      type: object\n      title: UpdateStreamingImageRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageDescription'\n            - description: The description.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/StreamingImageName'\n            - description: The name for the streaming image.\n      description: The streaming image ID.\n    UpdateStudioComponentRequest:\n      type: object\n      title: UpdateStudioComponentRequest\n      properties:\n        configuration:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentConfiguration'\n            - description: 'The configuration of the studio component, based on component type.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentDescription'\n            - description: The description.\n        ec2SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'\n            - description: The EC2 security groups that control access to the studio component.\n        initializationScripts:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentInitializationScriptList'\n            - description: Initialization scripts for studio components.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentName'\n            - description: The name for the studio component.\n        scriptParameters:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'\n            - description: Parameters for the studio component scripts.\n        subtype:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentSubtype'\n            - description: The specific subtype of a studio component.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/StudioComponentType'\n            - description: The type of the studio component.\n      description: The studio component ID.\n    UpdateStudioRequest:\n      type: object\n      title: UpdateStudioRequest\n      properties:\n        adminRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.\n        displayName:\n          allOf:\n            - $ref: '#/components/schemas/StudioDisplayName'\n            - description: A friendly name for the studio.\n        userRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.\n      description: The studio ID.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/EMResearch/EvoMaster@910784d611073e73d97ffc611421bbda37d78bb7/-/blob/core-it/src/test/resources/APIs_guru/amazonaws.com/nimble/2020-08-01/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EMResearch/EvoMaster/blob/910784d611073e73d97ffc611421bbda37d78bb7/core-it/src/test/resources/APIs_guru/amazonaws.com/nimble/2020-08-01/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/2020-08-01/eulas\": get: responses: code 200: contents: media: \"application/json\": generate schema: field eulas: allOf: schema type mismatch: array and "
}