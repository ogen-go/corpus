{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/mojaloop/api-snippets"
		},
		"file": {
			"name": "sdk-scheme-adapter-inbound-v2_0_0-openapi3-snippets.yaml",
			"size": 0,
			"path": "docs/sdk-scheme-adapter-inbound-v2_0_0-openapi3-snippets.yaml",
			"byteSize": 124591,
			"content": "openapi: 3.0.1\ninfo:\n  title: Mojaloop SDK Inbound Scheme Adapter API\n  description: \u003e\n    API specification for the Mojaloop SDK Inbound Scheme Adapter API â€“ to be\n    implemented by the Digital Financial Service Provider's (DFSP) backend.\n\n\n    **Note on terminology:** The term \"Switch\" is equal to the term \"Hub\", and\n    the term \"FSP\" is equal to the term \"DFSP\".\n  license:\n    name: Apache License Version 2.0, January 2004\n    url: http://www.apache.org/licenses/\n  version: 1.1.0\npaths:\n  /participants/{idType}/{idValue}:\n    get:\n      summary: \u003e-\n        Asks for the identifier (fspId) of the scheme participant (FSP) that can\n        handle transfers for the specified identifier type and value\n      description: \u003e-\n        The HTTP request `GET /participants/{idType}/{idValue}` is used to find\n        out in which FSP the requested party, defined by `{idType}` and\n        `{idValue}`, is located.\n      tags:\n        - Participants\n      parameters:\n        - name: idType\n          in: path\n          required: true\n          schema: \u0026ref_2\n            type: string\n            enum:\n              - MSISDN\n              - ACCOUNT_ID\n          description: \u003e\n            Below are the allowed values for the enumeration.\n\n\n            - MSISDN -  An MSISDN (Mobile Station International Subscriber\n            Directory Number, that is, the phone number) is used as reference to\n            a participant. The MSISDN identifier should be in international\n            format according to the [ITU-T E.164\n            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the\n            MSISDN may be prefixed by a single plus sign, indicating the\n            international prefix.\n\n\n            - ACCOUNT_ID - A bank account number or FSP account ID should be\n            used as reference to a participant. The ACCOUNT_ID identifier can be\n            in any format, as formats can greatly differ depending on country\n            and FSP.\n        - name: idValue\n          in: path\n          required: true\n          schema: \u0026ref_3\n            type: string\n            minLength: 1\n            maxLength: 128\n          description: Identifier of the party.\n      responses:\n        '200':\n          description: Response containing details of the requested party\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: \u0026ref_4\n                  fspId:\n                    type: string\n                    minLength: 1\n                    maxLength: 32\n                    description: FSP identifier.\n        '400':\n          description: Malformed or missing required headers or parameters\n          content: \u0026ref_5\n            application/json:\n              schema:\n                type: object\n                required: \u0026ref_0\n                  - statusCode\n                properties: \u0026ref_1\n                  statusCode:\n                    type: string\n                    description: Error code as string.\n                  message:\n                    type: string\n                    description: Error message text.\n        '404':\n          description: \u003e-\n            The party specified by the provided identifier type and value is not\n            known to the server\n        '500':\n          description: An error occurred processing the request\n          content: \u0026ref_6\n            application/json:\n              schema:\n                type: object\n                required: *ref_0\n                properties: *ref_1\n  /participants/{idType}/{idValue}/{idSubValue}:\n    get:\n      summary: \u003e-\n        Asks for the identifier (fspId) of the scheme participant (FSP) that can\n        handle transfers for the specified identifier type and value\n      description: \u003e-\n        The HTTP request `GET /participants/{idType}/{idValue}/{idSubValue}` is\n        used to find out in which FSP the requested party, defined by\n        `{idType}`, `{idValue}` and `{idSubValue}` is located.\n      tags:\n        - Participants\n      parameters:\n        - name: idType\n          in: path\n          required: true\n          schema: *ref_2\n          description: \u003e\n            Below are the allowed values for the enumeration.\n\n\n            - MSISDN -  An MSISDN (Mobile Station International Subscriber\n            Directory Number, that is, the phone number) is used as reference to\n            a participant. The MSISDN identifier should be in international\n            format according to the [ITU-T E.164\n            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the\n            MSISDN may be prefixed by a single plus sign, indicating the\n            international prefix.\n\n\n            - ACCOUNT_ID - A bank account number or FSP account ID should be\n            used as reference to a participant. The ACCOUNT_ID identifier can be\n            in any format, as formats can greatly differ depending on country\n            and FSP.\n        - name: idValue\n          in: path\n          required: true\n          schema: *ref_3\n          description: Identifier of the party.\n        - name: idSubValue\n          in: path\n          required: true\n          schema: \u0026ref_7\n            type: string\n            minLength: 1\n            maxLength: 128\n          description: \u003e-\n            Either a sub-identifier of a `{idValue}`, or a sub-type of the\n            `{idType}`, normally a `{personalIdType}`\n      responses:\n        '200':\n          description: Response containing details of the requested party\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: *ref_4\n        '400':\n          description: Malformed or missing required headers or parameters\n          content: *ref_5\n        '404':\n          description: \u003e-\n            The party specified by the provided identifier type and value is not\n            known to the server\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\n  /parties/{idType}/{idValue}:\n    get:\n      summary: \u003e-\n        Requests information relating to a transfer party identified by the\n        specified identifier type and value\n      description: \u003e-\n        The HTTP request `GET /parties/{idType}/{idValue}` is used to look up\n        information regarding the requested transfer party, identified by\n        `{idType}` and `{idValue}`.\n      tags:\n        - Parties\n      parameters:\n        - name: idType\n          in: path\n          required: true\n          schema: *ref_2\n          description: \u003e\n            Below are the allowed values for the enumeration.\n\n\n            - MSISDN -  An MSISDN (Mobile Station International Subscriber\n            Directory Number, that is, the phone number) is used as reference to\n            a participant. The MSISDN identifier should be in international\n            format according to the [ITU-T E.164\n            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the\n            MSISDN may be prefixed by a single plus sign, indicating the\n            international prefix.\n\n\n            - ACCOUNT_ID - A bank account number or FSP account ID should be\n            used as reference to a participant. The ACCOUNT_ID identifier can be\n            in any format, as formats can greatly differ depending on country\n            and FSP.\n        - name: idValue\n          in: path\n          required: true\n          schema: *ref_3\n          description: Identifier of the party.\n      responses:\n        '200':\n          description: Response containing details of the requested party\n          content:\n            application/json:\n              schema:\n                type: object\n                required: \u0026ref_8\n                  - idType\n                  - idValue\n                properties: \u0026ref_9\n                  type:\n                    type: string\n                    enum: \u0026ref_29\n                      - CONSUMER\n                      - AGENT\n                      - BUSINESS\n                      - DEVICE\n                  idType:\n                    type: string\n                    enum: \u0026ref_27\n                      - MSISDN\n                      - ACCOUNT_ID\n                    description: \u003e\n                      Below are the allowed values for the enumeration.\n\n\n                      - MSISDN -  An MSISDN (Mobile Station International\n                      Subscriber Directory Number, that is, the phone number) is\n                      used as reference to a participant. The MSISDN identifier\n                      should be in international format according to the [ITU-T\n                      E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).\n                      Optionally, the MSISDN may be prefixed by a single plus\n                      sign, indicating the international prefix.\n\n\n                      - ACCOUNT_ID - A bank account number or FSP account ID\n                      should be used as reference to a participant. The\n                      ACCOUNT_ID identifier can be in any format, as formats can\n                      greatly differ depending on country and FSP.\n                  idValue:\n                    type: string\n                    description: The identifier string used to identify the sender.\n                  idSubValue:\n                    type: string\n                    minLength: 1\n                    maxLength: 128\n                    description: \u003e-\n                      Either a sub-identifier of a `{idValue}`, or a sub-type of\n                      the `{idType}`, normally a `{personalIdType}`\n                  displayName:\n                    type: string\n                    description: Display name of the sender, if known.\n                  firstName:\n                    type: string\n                    description: Party first name.\n                  middleName:\n                    type: string\n                    description: Party middle name.\n                  lastName:\n                    type: string\n                    description: Party last name.\n                  dateOfBirth:\n                    type: string\n                    pattern: \u003e-\n                      ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n                    description: Date of birth in the form YYYY-MM-DD.\n                  merchantClassificationCode:\n                    type: string\n                    description: \u003e-\n                      Up to 4 digits specifying the sender's merchant\n                      classification, if known and applicable.\n                  fspId:\n                    type: string\n                    description: \u003e-\n                      Mojaloop scheme FSPID of the DFSP which owns the party\n                      account.\n                  extensionList:\n                    type: array\n                    items: \u0026ref_11\n                      type: object\n                      properties: \u0026ref_28\n                        key:\n                          type: string\n                          minLength: 1\n                          maxLength: 32\n                        value:\n                          type: string\n                          minLength: 1\n                          maxLength: 128\n                    minItems: 0\n                    maxItems: 16\n        '400':\n          description: Malformed or missing required headers or parameters\n          content: *ref_5\n        '404':\n          description: \u003e-\n            The party specified by the provided identifier type and value is not\n            known to the server\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\n  /parties/{idType}/{idValue}/{idSubValue}:\n    get:\n      summary: \u003e-\n        Requests information relating to a transfer party identified by the\n        specified identifier type and value\n      description: \u003e-\n        The HTTP request `GET /parties/{idType}/{idValue}/{idSubValue}` is used\n        to look up information regarding the requested transfer party,\n        identified by `{idType}`, `{idValue}` and `{idSubValue}`.\n      tags:\n        - Parties\n      parameters:\n        - name: idType\n          in: path\n          required: true\n          schema: *ref_2\n          description: \u003e\n            Below are the allowed values for the enumeration.\n\n\n            - MSISDN -  An MSISDN (Mobile Station International Subscriber\n            Directory Number, that is, the phone number) is used as reference to\n            a participant. The MSISDN identifier should be in international\n            format according to the [ITU-T E.164\n            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the\n            MSISDN may be prefixed by a single plus sign, indicating the\n            international prefix.\n\n\n            - ACCOUNT_ID - A bank account number or FSP account ID should be\n            used as reference to a participant. The ACCOUNT_ID identifier can be\n            in any format, as formats can greatly differ depending on country\n            and FSP.\n        - name: idValue\n          in: path\n          required: true\n          schema: *ref_3\n          description: Identifier of the party.\n        - name: idSubValue\n          in: path\n          required: true\n          schema: *ref_7\n          description: \u003e-\n            Either a sub-identifier of a `{idValue}`, or a sub-type of the\n            `{idType}`, normally a `{personalIdType}`\n      responses:\n        '200':\n          description: Response containing details of the requested party\n          content:\n            application/json:\n              schema:\n                type: object\n                required: *ref_8\n                properties: *ref_9\n        '400':\n          description: Malformed or missing required headers or parameters\n          content: *ref_5\n        '404':\n          description: \u003e-\n            The party specified by the provided identifier type and value is not\n            known to the server\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\n  /quoterequests:\n    post:\n      summary: Requests a quote for the specified transfer\n      description: \u003e-\n        The HTTP request `POST /quoterequests` is used to request the creation\n        of a quote for the provided financial transaction.\n      tags:\n        - Quotes\n      requestBody:\n        description: Request for a transfer quotation\n        content:\n          application/json:\n            schema:\n              type: object\n              description: A request for a quote for transfer from the DFSP backend.\n              required: \u0026ref_30\n                - quoteId\n                - transactionId\n                - to\n                - from\n                - amountType\n                - amount\n                - currency\n                - transactionType\n                - initiator\n                - initiatorType\n              properties: \u0026ref_31\n                quoteId:\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  type: string\n                  description: A Mojaloop API quote identifier (UUID).\n                transactionId:\n                  description: \u003e-\n                    ID of the transaction, the ID is decided by the Payer FSP\n                    during the creation of the quote.\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  type: string\n                to:\n                  description: \u003e-\n                    Information about the Payee in the proposed financial\n                    transaction.\n                  type: object\n                  required: *ref_8\n                  properties: *ref_9\n                from:\n                  description: \u003e-\n                    Information about the Payer in the proposed financial\n                    transaction.\n                  type: object\n                  required: *ref_8\n                  properties: *ref_9\n                amountType:\n                  description: SEND for send amount, RECEIVE for receive amount.\n                  type: string\n                  enum: \u0026ref_16\n                    - SEND\n                    - RECEIVE\n                amount:\n                  description: \u003e-\n                    Depending on `amountType`. If SEND - The amount the Payer\n                    would like to send, that is, the amount that should be\n                    withdrawn from the Payer account including any fees. The\n                    amount is updated by each participating entity in the\n                    transaction. If RECEIVE - The amount the Payee should\n                    receive, that is, the amount that should be sent to the\n                    receiver exclusive any fees. The amount is not updated by\n                    any of the participating entities.\n                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                  type: string\n                currency:\n                  maxLength: 3\n                  minLength: 3\n                  type: string\n                  enum: \u0026ref_10\n                    - AED\n                    - AFN\n                    - ALL\n                    - AMD\n                    - ANG\n                    - AOA\n                    - ARS\n                    - AUD\n                    - AWG\n                    - AZN\n                    - BAM\n                    - BBD\n                    - BDT\n                    - BGN\n                    - BHD\n                    - BIF\n                    - BMD\n                    - BND\n                    - BOB\n                    - BRL\n                    - BSD\n                    - BTN\n                    - BWP\n                    - BYN\n                    - BZD\n                    - CAD\n                    - CDF\n                    - CHF\n                    - CLP\n                    - CNY\n                    - COP\n                    - CRC\n                    - CUC\n                    - CUP\n                    - CVE\n                    - CZK\n                    - DJF\n                    - DKK\n                    - DOP\n                    - DZD\n                    - EGP\n                    - ERN\n                    - ETB\n                    - EUR\n                    - FJD\n                    - FKP\n                    - GBP\n                    - GEL\n                    - GGP\n                    - GHS\n                    - GIP\n                    - GMD\n                    - GNF\n                    - GTQ\n                    - GYD\n                    - HKD\n                    - HNL\n                    - HRK\n                    - HTG\n                    - HUF\n                    - IDR\n                    - ILS\n                    - IMP\n                    - INR\n                    - IQD\n                    - IRR\n                    - ISK\n                    - JEP\n                    - JMD\n                    - JOD\n                    - JPY\n                    - KES\n                    - KGS\n                    - KHR\n                    - KMF\n                    - KPW\n                    - KRW\n                    - KWD\n                    - KYD\n                    - KZT\n                    - LAK\n                    - LBP\n                    - LKR\n                    - LRD\n                    - LSL\n                    - LYD\n                    - MAD\n                    - MDL\n                    - MGA\n                    - MKD\n                    - MMK\n                    - MNT\n                    - MOP\n                    - MRO\n                    - MUR\n                    - MVR\n                    - MWK\n                    - MXN\n                    - MYR\n                    - MZN\n                    - NAD\n                    - NGN\n                    - NIO\n                    - NOK\n                    - NPR\n                    - NZD\n                    - OMR\n                    - PAB\n                    - PEN\n                    - PGK\n                    - PHP\n                    - PKR\n                    - PLN\n                    - PYG\n                    - QAR\n                    - RON\n                    - RSD\n                    - RUB\n                    - RWF\n                    - SAR\n                    - SBD\n                    - SCR\n                    - SDG\n                    - SEK\n                    - SGD\n                    - SHP\n                    - SLL\n                    - SOS\n                    - SPL\n                    - SRD\n                    - STD\n                    - SVC\n                    - SYP\n                    - SZL\n                    - THB\n                    - TJS\n                    - TMT\n                    - TND\n                    - TOP\n                    - TRY\n                    - TTD\n                    - TVD\n                    - TWD\n                    - TZS\n                    - UAH\n                    - UGX\n                    - USD\n                    - UYU\n                    - UZS\n                    - VEF\n                    - VND\n                    - VUV\n                    - WST\n                    - XAF\n                    - XCD\n                    - XDR\n                    - XOF\n                    - XPF\n                    - XTS\n                    - XXX\n                    - YER\n                    - ZAR\n                    - ZMW\n                    - ZWD\n                feesAmount:\n                  description: \u003e-\n                    The fees in the transaction. The fees element should be\n                    empty if fees should be non-disclosed. The fees element\n                    should be non-empty if fees should be disclosed.\n                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                  type: string\n                feesCurrency:\n                  maxLength: 3\n                  minLength: 3\n                  type: string\n                  enum: *ref_10\n                transactionType:\n                  description: Type of transaction for which the quote is requested.\n                  type: string\n                  enum: \u0026ref_17\n                    - TRANSFER\n                initiator:\n                  description: \u003e-\n                    Specifies if the initiator of the transfer is the Payer or\n                    Payee.\n                  type: string\n                  enum: \u0026ref_18\n                    - PAYER\n                    - PAYEE\n                initiatorType:\n                  description: Specifies the type of the transaction initiator.\n                  type: string\n                  enum: \u0026ref_19\n                    - CONSUMER\n                    - AGENT\n                    - BUSINESS\n                    - DEVICE\n                geoCode:\n                  description: \u003e-\n                    Indicates the geographic location from where the transaction\n                    was initiated.\n                  type: object\n                  properties: \u0026ref_12\n                    latitude:\n                      type: string\n                      pattern: \u003e-\n                        ^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$\n                      description: \u003e-\n                        The API data type Latitude is a JSON String in a lexical\n                        format that is restricted by a regular expression for\n                        interoperability reasons.\n                    longitude:\n                      type: string\n                      pattern: \u003e-\n                        ^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$\n                      description: \u003e-\n                        The API data type Longitude is a JSON String in a\n                        lexical format that is restricted by a regular\n                        expression for interoperability reasons.\n                  required: \u0026ref_13\n                    - latitude\n                    - longitude\n                note:\n                  type: string\n                  minLength: 1\n                  maxLength: 128\n                  description: An optional note associated with the requested transfer.\n                expiration:\n                  description: An ISO-8601 formatted timestamp.\n                  type: string\n                  pattern: \u003e-\n                    ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                extensionList:\n                  type: array\n                  items: *ref_11\n                  minItems: 0\n                  maxItems: 16\n      responses:\n        '200':\n          description: A response to the transfer quotation request\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A response to a request for a quote.\n                required: \u0026ref_14\n                  - quoteId\n                  - transactionId\n                  - transferAmount\n                  - transferAmountCurrency\n                properties: \u0026ref_15\n                  quoteId:\n                    description: A Mojaloop API quote identifier (UUID).\n                    pattern: \u003e-\n                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                    type: string\n                  transactionId:\n                    description: \u003e-\n                      ID of the transaction, the ID is decided by the Payer FSP\n                      during the creation of the quote.\n                    pattern: \u003e-\n                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                    type: string\n                  transferAmount:\n                    description: \u003e-\n                      The amount of money that the Payer FSP should transfer to\n                      the Payee FSP.\n                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                    type: string\n                  transferAmountCurrency:\n                    description: The currency of the `transferAmount`.\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                    enum: *ref_10\n                  payeeReceiveAmount:\n                    description: \u003e-\n                      The amount that the Payee should receive in the end-to-end\n                      transaction. Optional as the Payee FSP might not want to\n                      disclose any optional Payee fees.\n                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                    type: string\n                  payeeReceiveAmountCurrency:\n                    description: The currency of the `payeeReceiveAmount`.\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                    enum: *ref_10\n                  payeeFspFeeAmount:\n                    description: Payee FSPâ€™s part of the transaction fee.\n                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                    type: string\n                  payeeFspFeeAmountCurrency:\n                    description: The currency of the `payeeFspFeeAmount`.\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                    enum: *ref_10\n                  payeeFspCommissionAmount:\n                    description: Transaction commission from the Payee FSP.\n                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                    type: string\n                  payeeFspCommissionAmountCurrency:\n                    description: Currency of the `payeeFspCommissionAmount`.\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                    enum: *ref_10\n                  expiration:\n                    description: An ISO-8601 formatted timestamp.\n                    type: string\n                    pattern: \u003e-\n                      ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                  geoCode:\n                    description: \u003e-\n                      Indicates the geographic location from where the\n                      transaction was initiated.\n                    type: object\n                    properties: *ref_12\n                    required: *ref_13\n                  extensionList:\n                    type: array\n                    items: *ref_11\n                    minItems: 0\n                    maxItems: 16\n        '400':\n          description: Malformed or missing required headers or parameters\n          content: *ref_5\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\n  /transfers:\n    post:\n      summary: Transfers funds from an external account to an internal account\n      description: \u003e-\n        The HTTP request `POST /transfers` is used to request the creation of a\n        transfer for the transfer party.\n      tags:\n        - Transfers\n      requestBody:\n        description: An incoming transfer request\n        content:\n          application/json:\n            schema:\n              type: object\n              required: \u0026ref_39\n                - transferId\n                - quote\n                - from\n                - to\n                - amountType\n                - currency\n                - amount\n                - transactionType\n                - ilpPacket\n              properties: \u0026ref_40\n                transferId:\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  type: string\n                  description: A Mojaloop API transfer identifier (UUID).\n                quote:\n                  type: object\n                  description: A response to a request for a quote.\n                  required: *ref_14\n                  properties: *ref_15\n                quoteRequestExtensions:\n                  type: array\n                  items: *ref_11\n                  minItems: 0\n                  maxItems: 16\n                from:\n                  type: object\n                  required: *ref_8\n                  properties: *ref_9\n                to:\n                  type: object\n                  required: *ref_8\n                  properties: *ref_9\n                amountType:\n                  type: string\n                  enum: *ref_16\n                  description: SEND for send amount, RECEIVE for receive amount.\n                currency:\n                  maxLength: 3\n                  minLength: 3\n                  type: string\n                  enum: *ref_10\n                amount:\n                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                  type: string\n                transactionType:\n                  type: string\n                  enum: *ref_17\n                ilpPacket:\n                  type: object\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      description: Object containing transfer object.\n                      required: \u0026ref_37\n                        - quoteId\n                        - transactionId\n                        - payer\n                        - payee\n                        - amount\n                        - transactionType\n                      properties: \u0026ref_38\n                        quoteId:\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          type: string\n                          description: A Mojaloop API quote identifier (UUID).\n                        transactionId:\n                          description: \u003e-\n                            ID of the transaction, the ID is decided by the\n                            Payer FSP during the creation of the quote.\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          type: string\n                        payer:\n                          description: \u003e-\n                            Information about the Payer in the proposed\n                            financial transaction.\n                          type: object\n                          required: *ref_8\n                          properties: *ref_9\n                        payee:\n                          description: \u003e-\n                            Information about the Payee in the proposed\n                            financial transaction.\n                          type: object\n                          required: *ref_8\n                          properties: *ref_9\n                        amount:\n                          description: \u003e-\n                            Object containing Amount and Currency of the\n                            transfer.\n                          type: object\n                          required: \u0026ref_33\n                            - amount\n                            - currency\n                          properties: \u0026ref_34\n                            amount:\n                              pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                              type: string\n                            currency:\n                              maxLength: 3\n                              minLength: 3\n                              type: string\n                              enum: *ref_10\n                        transactionType:\n                          description: Object containing transfer object.\n                          type: object\n                          required: \u0026ref_35\n                            - scenario\n                            - initiator\n                            - initiatorType\n                          properties: \u0026ref_36\n                            scenario:\n                              type: string\n                              enum: \u0026ref_32\n                                - TRANSFER\n                            initiator:\n                              type: string\n                              enum: *ref_18\n                              description: \u003e-\n                                Specifies if the initiator of the transfer is\n                                the Payer or Payee.\n                            initiatorType:\n                              description: Specifies the type of the transaction initiator.\n                              type: string\n                              enum: *ref_19\n                note:\n                  maxLength: 128\n                  type: string\n      responses:\n        '200':\n          description: The transfer was accepted\n          content:\n            application/json:\n              schema:\n                type: object\n                required: \u0026ref_41\n                  - homeTransactionId\n                properties: \u0026ref_42\n                  homeTransactionId:\n                    type: string\n                    description: \u003e-\n                      Transaction ID from the DFSP backend, used to reconcile\n                      transactions between the Switch and DFSP backend systems.\n                  fulfilment:\n                    description: \u003e-\n                      Fulfilment that must be attached to the transfer by the\n                      Payee.\n                    title: IlpFulfilment\n                    type: string\n                    pattern: ^[A-Za-z0-9-_]{43}$\n                    maxLength: 48\n                    example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8\n                  transferState:\n                    description: \u003e\n                      Below are the allowed values for the enumeration -\n                      RECEIVED DFSP has received the transfer. - RESERVED DFSP\n                      has reserved the transfer. - COMMITTED DFSP has\n                      successfully performed the transfer. - ABORTED DFSP has\n                      aborted the transfer due a rejection or failure to perform\n                      the transfer.\n                    example: ABORTED\n                    type: string\n                    enum: \u0026ref_20\n                      - RECEIVED\n                      - RESERVED\n                      - COMMITTED\n                      - ABORTED\n                  completedTimestamp:\n                    description: An ISO-8601 formatted timestamp.\n                    example: '2020-05-19T08:38:08.699-04:00'\n                    type: string\n                    pattern: \u003e-\n                      ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n        '400':\n          description: Malformed or missing required headers or parameters\n          content: *ref_5\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\n  /transfers/{transferId}:\n    parameters:\n      - name: transferId\n        in: path\n        required: true\n        schema: \u0026ref_80\n          type: string\n    get:\n      summary: Retrieves information for a specific transfer\n      description: \u003e-\n        The HTTP request `GET /transfers/{transferId}` is used to get\n        information regarding a transfer created or requested earlier. The\n        `{transferId}` in the URI should contain the `transferId` that was used\n        for the creation of the transfer.\n      tags:\n        - Transfers\n      responses:\n        '200':\n          description: The transfer was accepted\n          content:\n            application/json:\n              schema:\n                type: object\n                required: \u0026ref_43\n                  - homeTransactionId\n                  - from\n                  - to\n                  - amountType\n                  - currency\n                  - amount\n                  - transferState\n                  - transactionType\n                  - timestamp\n                properties: \u0026ref_44\n                  homeTransactionId:\n                    type: string\n                    description: \u003e-\n                      Transaction ID from the DFSP backend, used to reconcile\n                      transactions between the Switch and DFSP backend systems.\n                  from:\n                    type: object\n                    required: *ref_8\n                    properties: *ref_9\n                  to:\n                    type: object\n                    required: *ref_8\n                    properties: *ref_9\n                  amountType:\n                    type: string\n                    enum: *ref_16\n                    description: SEND for send amount, RECEIVE for receive amount.\n                  currency:\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                    enum: *ref_10\n                  amount:\n                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                    type: string\n                  transferState:\n                    type: string\n                    enum: *ref_20\n                    description: \u003e\n                      Below are the allowed values for the enumeration -\n                      RECEIVED DFSP has received the transfer. - RESERVED DFSP\n                      has reserved the transfer. - COMMITTED DFSP has\n                      successfully performed the transfer. - ABORTED DFSP has\n                      aborted the transfer due a rejection or failure to perform\n                      the transfer.\n                  timestamp:\n                    type: string\n                    pattern: \u003e-\n                      ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                    description: An ISO-8601 formatted timestamp.\n                  transactionType:\n                    type: string\n                    enum: *ref_17\n                  note:\n                    maxLength: 128\n                    type: string\n                  extensions:\n                    type: array\n                    items: *ref_11\n                    minItems: 0\n                    maxItems: 16\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\n    put:\n      summary: Receive notification for a specific transfer\n      description: \u003e-\n        The HTTP request `PUT /transfers/{transferId}` is used to receive\n        notification for transfer being fulfiled when the FSP is a Payee\n      tags:\n        - Transfers\n      requestBody:\n        description: An incoming notification for fulfiled transfer\n        content:\n          application/json:\n            schema:\n              title: TransfersIDPatchResponse\n              type: object\n              description: PUT /transfers/{transferId} object\n              properties: \u0026ref_46\n                transferId:\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  type: string\n                  description: A Mojaloop API transfer identifier (UUID).\n                direction:\n                  type: string\n                  enum:\n                    - INBOUND\n                quoteRequest:\n                  type: object\n                  properties:\n                    headers:\n                      type: object\n                    body:\n                      type: object\n                quoteResponse:\n                  type: object\n                  properties:\n                    headers:\n                      type: object\n                    body:\n                      type: object\n                prepare:\n                  type: object\n                  properties:\n                    headers:\n                      type: object\n                    body:\n                      type: object\n                fulfil:\n                  type: object\n                  properties:\n                    headers:\n                      type: object\n                    body:\n                      type: object\n                quote:\n                  type: object\n                  properties:\n                    request:\n                      type: object\n                    internalRequest:\n                      type: object\n                    response:\n                      type: object\n                    mojaloopResponse:\n                      type: object\n                    fulfilment:\n                      type: string\n                currentState:\n                  type: string\n                  enum: \u0026ref_45\n                    - ERROR_OCCURRED\n                    - WAITING_FOR_PARTY_ACCEPTANCE\n                    - WAITING_FOR_QUOTE_ACCEPTANCE\n                    - COMPLETED\n                lastError:\n                  type: object\n                  description: \u003e-\n                    This object represents a Mojaloop API error received at any\n                    time during the transfer process\n                  properties: \u0026ref_26\n                    httpStatusCode:\n                      type: integer\n                      description: \u003e-\n                        The HTTP status code returned to the caller. This is the\n                        same as the actual HTTP status code returned with the\n                        response.\n                    mojaloopError:\n                      description: \u003e-\n                        If a transfer process results in an error callback\n                        during the asynchronous Mojaloop API exchange, this\n                        property will contain the underlying Mojaloop API error\n                        object.\n                      type: object\n                      properties: \u0026ref_51\n                        errorInformation:\n                          title: ErrorInformation\n                          type: object\n                          description: Data model for the complex type ErrorInformation.\n                          properties: \u0026ref_49\n                            errorCode:\n                              title: ErrorCode\n                              type: string\n                              pattern: ^[1-9]\\d{3}$\n                              description: \u003e-\n                                The API data type ErrorCode is a JSON String of\n                                four characters, consisting of digits only.\n                                Negative numbers are not allowed. A leading zero\n                                is not allowed. Each error code in the API is a\n                                four-digit number, for example, 1234, where the\n                                first number (1 in the example) represents the\n                                high-level error category, the second number (2\n                                in the example) represents the low-level error\n                                category, and the last two numbers (34 in the\n                                example) represent the specific error.\n                              example: '5100'\n                            errorDescription:\n                              title: ErrorDescription\n                              type: string\n                              minLength: 1\n                              maxLength: 128\n                              description: Error description string.\n                            extensionList:\n                              title: ExtensionList\n                              type: object\n                              description: \u003e-\n                                Data model for the complex type ExtensionList.\n                                An optional list of extensions, specific to\n                                deployment.\n                              properties: \u0026ref_21\n                                extension:\n                                  type: array\n                                  items:\n                                    title: Extension\n                                    type: object\n                                    description: Data model for the complex type Extension.\n                                    properties: \u0026ref_47\n                                      key:\n                                        title: ExtensionKey\n                                        type: string\n                                        minLength: 1\n                                        maxLength: 32\n                                        description: Extension key.\n                                      value:\n                                        title: ExtensionValue\n                                        type: string\n                                        minLength: 1\n                                        maxLength: 128\n                                        description: Extension value.\n                                    required: \u0026ref_48\n                                      - key\n                                      - value\n                                  minItems: 1\n                                  maxItems: 16\n                                  description: Number of Extension elements.\n                              required: \u0026ref_22\n                                - extension\n                          required: \u0026ref_50\n                            - errorCode\n                            - errorDescription\n                initiatedTimestamp:\n                  type: string\n                  pattern: \u003e-\n                    ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                  description: An ISO-8601 formatted timestamp.\n                finalNotification:\n                  type: object\n                  properties:\n                    completedTimestamp:\n                      description: An ISO-8601 formatted timestamp.\n                      example: '2020-05-19T08:38:08.699-04:00'\n                      type: string\n                      pattern: \u003e-\n                        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                    transferState:\n                      description: \u003e\n                        Below are the allowed values for the enumeration -\n                        RECEIVED DFSP has received the transfer. - RESERVED DFSP\n                        has reserved the transfer. - COMMITTED DFSP has\n                        successfully performed the transfer. - ABORTED DFSP has\n                        aborted the transfer due a rejection or failure to\n                        perform the transfer.\n                      example: COMMITTED\n                      type: string\n                      enum: *ref_20\n                    extensionList:\n                      description: Optional extension, specific to deployment.\n                      type: array\n                      items: *ref_11\n                      minItems: 0\n                      maxItems: 16\n                  required:\n                    - completedTimestamp\n                    - transferState\n      responses:\n        '200':\n          description: The notification was accepted\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\n  /bulkTransactions/{bulkTransactionId}:\n    parameters:\n      - name: bulkTransactionId\n        in: path\n        required: true\n        schema: \u0026ref_81\n          title: CorrelationId\n          type: string\n          pattern: \u003e-\n            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n          description: \u003e-\n            Identifier that correlates all messages of the same sequence. The\n            API data type UUID (Universally Unique Identifier) is a JSON String\n            in canonical format, conforming to [RFC\n            4122](https://tools.ietf.org/html/rfc4122), that is restricted by a\n            regular expression for interoperability reasons. A UUID is always 36\n            characters long, 32 hexadecimal symbols and 4 dashes (â€˜-â€˜).\n          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n        description: \u003e-\n          Identifier of the bulk transaction to continue as returned in the\n          response to a `POST /bulkTransaction` request.\n    put:\n      summary: Request is used for bulk transaction confirmations\n      description: \u003e-\n        The HTTP request `PUT /bulkTransactions/{bulkTransactionId}` is used to\n        request information regarding a bulk transaction, i.e. when\n        autoAcceptParty or autoAcceptQuote  is false then the payer need to\n        provide confirmation to proceed with further processing of the request.\n        The `{bulkTransactionId}` in the URI should contain the\n        `bulkTransactionId` that was used for the creation of the bulk transfer.\n      tags:\n        - BulkTransactions\n      requestBody:\n        description: An incoming notification for fulfiled transfer\n        content:\n          application/json:\n            schema:\n              title: BulkTransactionResponse\n              type: object\n              required: \u0026ref_78\n                - bulkHomeTransactionID\n                - bulkTransactionId\n                - currentState\n                - individualTransferResults\n              properties: \u0026ref_79\n                bulkHomeTransactionID:\n                  type: string\n                  description: \u003e-\n                    Transaction ID from the DFSP backend, used to reconcile\n                    transactions between the Switch and DFSP backend systems.\n                bulkTransactionId:\n                  title: CorrelationId\n                  type: string\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  description: \u003e-\n                    Identifier that correlates all messages of the same\n                    sequence. The API data type UUID (Universally Unique\n                    Identifier) is a JSON String in canonical format, conforming\n                    to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is\n                    restricted by a regular expression for interoperability\n                    reasons. A UUID is always 36 characters long, 32 hexadecimal\n                    symbols and 4 dashes (â€˜-â€˜).\n                  example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                currentState:\n                  type: string\n                  enum: \u0026ref_52\n                    - ERROR_OCCURRED\n                    - WAITING_FOR_PARTY_ACCEPTANCE\n                    - WAITING_FOR_QUOTE_ACCEPTANCE\n                    - COMPLETED\n                options:\n                  type: object\n                  required: \u0026ref_59\n                    - autoAcceptParty\n                    - autoAcceptQuote\n                    - bulkExpiration\n                  properties: \u0026ref_60\n                    onlyValidateParty:\n                      description: \u003e-\n                        Set to true if only party validation is required.  This\n                        means the quotes and transfers will not run. This is\n                        useful for only party resolution.\n                      type: boolean\n                    autoAcceptParty:\n                      type: object\n                      required: \u0026ref_53\n                        - enabled\n                      properties: \u0026ref_54\n                        enabled:\n                          type: boolean\n                          enum:\n                            - false\n                            - true\n                    autoAcceptQuote:\n                      description: \u003e-\n                        Set to true if the quote response is accepted without\n                        confirmation from the payer. The fees applied by the\n                        payee will be acceptable to the payer abiding by the\n                        limits set by optional 'perTransferFeeLimits' array.\n                      type: object\n                      oneOf:\n                        - type: object\n                          required: \u0026ref_57\n                            - enabled\n                          properties: \u0026ref_58\n                            enabled:\n                              type: boolean\n                              enum:\n                                - true\n                                - false\n                            perTransferFeeLimits:\n                              type: array\n                              minItems: 0\n                              items:\n                                type: object\n                                required: \u0026ref_55\n                                  - currency\n                                  - amount\n                                properties: \u0026ref_56\n                                  currency:\n                                    title: Currency\n                                    description: \u003e-\n                                      The currency codes defined in [ISO\n                                      4217](https://www.iso.org/iso-4217-currency-codes.html)\n                                      as three-letter alphabetic codes are used\n                                      as the standard naming representation for\n                                      currencies.\n                                    type: string\n                                    minLength: 3\n                                    maxLength: 3\n                                    enum: \u0026ref_23\n                                      - AED\n                                      - AFN\n                                      - ALL\n                                      - AMD\n                                      - ANG\n                                      - AOA\n                                      - ARS\n                                      - AUD\n                                      - AWG\n                                      - AZN\n                                      - BAM\n                                      - BBD\n                                      - BDT\n                                      - BGN\n                                      - BHD\n                                      - BIF\n                                      - BMD\n                                      - BND\n                                      - BOB\n                                      - BRL\n                                      - BSD\n                                      - BTN\n                                      - BWP\n                                      - BYN\n                                      - BZD\n                                      - CAD\n                                      - CDF\n                                      - CHF\n                                      - CLP\n                                      - CNY\n                                      - COP\n                                      - CRC\n                                      - CUC\n                                      - CUP\n                                      - CVE\n                                      - CZK\n                                      - DJF\n                                      - DKK\n                                      - DOP\n                                      - DZD\n                                      - EGP\n                                      - ERN\n                                      - ETB\n                                      - EUR\n                                      - FJD\n                                      - FKP\n                                      - GBP\n                                      - GEL\n                                      - GGP\n                                      - GHS\n                                      - GIP\n                                      - GMD\n                                      - GNF\n                                      - GTQ\n                                      - GYD\n                                      - HKD\n                                      - HNL\n                                      - HRK\n                                      - HTG\n                                      - HUF\n                                      - IDR\n                                      - ILS\n                                      - IMP\n                                      - INR\n                                      - IQD\n                                      - IRR\n                                      - ISK\n                                      - JEP\n                                      - JMD\n                                      - JOD\n                                      - JPY\n                                      - KES\n                                      - KGS\n                                      - KHR\n                                      - KMF\n                                      - KPW\n                                      - KRW\n                                      - KWD\n                                      - KYD\n                                      - KZT\n                                      - LAK\n                                      - LBP\n                                      - LKR\n                                      - LRD\n                                      - LSL\n                                      - LYD\n                                      - MAD\n                                      - MDL\n                                      - MGA\n                                      - MKD\n                                      - MMK\n                                      - MNT\n                                      - MOP\n                                      - MRO\n                                      - MUR\n                                      - MVR\n                                      - MWK\n                                      - MXN\n                                      - MYR\n                                      - MZN\n                                      - NAD\n                                      - NGN\n                                      - NIO\n                                      - NOK\n                                      - NPR\n                                      - NZD\n                                      - OMR\n                                      - PAB\n                                      - PEN\n                                      - PGK\n                                      - PHP\n                                      - PKR\n                                      - PLN\n                                      - PYG\n                                      - QAR\n                                      - RON\n                                      - RSD\n                                      - RUB\n                                      - RWF\n                                      - SAR\n                                      - SBD\n                                      - SCR\n                                      - SDG\n                                      - SEK\n                                      - SGD\n                                      - SHP\n                                      - SLL\n                                      - SOS\n                                      - SPL\n                                      - SRD\n                                      - STD\n                                      - SVC\n                                      - SYP\n                                      - SZL\n                                      - THB\n                                      - TJS\n                                      - TMT\n                                      - TND\n                                      - TOP\n                                      - TRY\n                                      - TTD\n                                      - TVD\n                                      - TWD\n                                      - TZS\n                                      - UAH\n                                      - UGX\n                                      - USD\n                                      - UYU\n                                      - UZS\n                                      - VEF\n                                      - VND\n                                      - VUV\n                                      - WST\n                                      - XAF\n                                      - XCD\n                                      - XDR\n                                      - XOF\n                                      - XPF\n                                      - XTS\n                                      - XXX\n                                      - YER\n                                      - ZAR\n                                      - ZMW\n                                      - ZWD\n                                  amount:\n                                    title: Amount\n                                    type: string\n                                    pattern: \u003e-\n                                      ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                                    description: \u003e-\n                                      The API data type Amount is a JSON String\n                                      in a canonical format that is restricted\n                                      by a regular expression for\n                                      interoperability reasons. This pattern\n                                      does not allow any trailing zeroes at all,\n                                      but allows an amount without a minor\n                                      currency unit. It also only allows four\n                                      digits in the minor currency unit; a\n                                      negative value is not allowed. Using more\n                                      than 18 digits in the major currency unit\n                                      is not allowed.\n                                    example: '123.45'\n                    skipPartyLookup:\n                      description: \u003e-\n                        Set to true if supplying an FSPID for the payee party\n                        and no party resolution is needed. This may be useful if\n                        a previous party resolution has been performed.\n                      type: boolean\n                    synchronous:\n                      description: \u003e-\n                        Set to true if the bulkTransfer requests need be handled\n                        synchronous. Otherwise the requests will be handled\n                        asynchronously, meaning there will  be callbacks\n                        whenever the processing is done\n                      type: boolean\n                    bulkExpiration:\n                      title: DateTime\n                      type: string\n                      pattern: \u003e-\n                        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                      description: \u003e-\n                        The API data type DateTime is a JSON String in a lexical\n                        format that is restricted by a regular expression for\n                        interoperability reasons. The format is according to\n                        [ISO\n                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                        expressed in a combined date, time and time zone format.\n                        A more readable version of the format is\n                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                        \"2016-05-24T08:38:08.699-04:00\",\n                        \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time\n                        zone, same as UTC).\n                      example: '2016-05-24T08:38:08.699-04:00'\n                individualTransferResults:\n                  description: \u003e-\n                    List of individual transfer result in a bulk transfer\n                    response.\n                  type: array\n                  minItems: 1\n                  items:\n                    type: object\n                    required: \u0026ref_76\n                      - homeTransactionId\n                      - transferId\n                      - to\n                      - amountType\n                      - currency\n                      - amount\n                    properties: \u0026ref_77\n                      transferId:\n                        title: CorrelationId\n                        type: string\n                        pattern: \u003e-\n                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                        description: \u003e-\n                          Identifier that correlates all messages of the same\n                          sequence. The API data type UUID (Universally Unique\n                          Identifier) is a JSON String in canonical format,\n                          conforming to [RFC\n                          4122](https://tools.ietf.org/html/rfc4122), that is\n                          restricted by a regular expression for\n                          interoperability reasons. A UUID is always 36\n                          characters long, 32 hexadecimal symbols and 4 dashes\n                          (â€˜-â€˜).\n                        example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      homeTransactionId:\n                        type: string\n                        description: \u003e-\n                          Transaction ID from the DFSP backend, used to\n                          reconcile transactions between the Switch and DFSP\n                          backend systems.\n                      transactionId:\n                        title: CorrelationId\n                        type: string\n                        pattern: \u003e-\n                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                        description: \u003e-\n                          Identifier that correlates all messages of the same\n                          sequence. The API data type UUID (Universally Unique\n                          Identifier) is a JSON String in canonical format,\n                          conforming to [RFC\n                          4122](https://tools.ietf.org/html/rfc4122), that is\n                          restricted by a regular expression for\n                          interoperability reasons. A UUID is always 36\n                          characters long, 32 hexadecimal symbols and 4 dashes\n                          (â€˜-â€˜).\n                        example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      to:\n                        title: Party\n                        type: object\n                        description: Data model for the complex type Party.\n                        properties: \u0026ref_66\n                          partyIdInfo:\n                            title: PartyIdInfo\n                            type: object\n                            description: \u003e-\n                              Data model for the complex type PartyIdInfo. An\n                              ExtensionList element has been added to this\n                              reqeust in version v1.1\n                            properties: \u0026ref_62\n                              partyIdType:\n                                title: PartyIdType\n                                type: string\n                                enum: \u0026ref_61\n                                  - MSISDN\n                                  - EMAIL\n                                  - PERSONAL_ID\n                                  - BUSINESS\n                                  - DEVICE\n                                  - ACCOUNT_ID\n                                  - IBAN\n                                  - ALIAS\n                                description: \u003e-\n                                  Below are the allowed values for the\n                                  enumeration.\n\n                                  - MSISDN - An MSISDN (Mobile Station\n                                  International Subscriber Directory Number,\n                                  that is, the phone number) is used as\n                                  reference to a participant. The MSISDN\n                                  identifier should be in international format\n                                  according to the [ITU-T E.164\n                                  standard](https://www.itu.int/rec/T-REC-E.164/en).\n                                  Optionally, the MSISDN may be prefixed by a\n                                  single plus sign, indicating the international\n                                  prefix.\n\n                                  - EMAIL - An email is used as reference to a\n                                  participant. The format of the email should be\n                                  according to the informational [RFC\n                                  3696](https://tools.ietf.org/html/rfc3696).\n\n                                  - PERSONAL_ID - A personal identifier is used\n                                  as reference to a participant. Examples of\n                                  personal identification are passport number,\n                                  birth certificate number, and national\n                                  registration number. The identifier number is\n                                  added in the PartyIdentifier element. The\n                                  personal identifier type is added in the\n                                  PartySubIdOrType element.\n\n                                  - BUSINESS - A specific Business (for example,\n                                  an organization or a company) is used as\n                                  reference to a participant. The BUSINESS\n                                  identifier can be in any format. To make a\n                                  transaction connected to a specific username\n                                  or bill number in a Business, the\n                                  PartySubIdOrType element should be used.\n\n                                  - DEVICE - A specific device (for example, a\n                                  POS or ATM) ID connected to a specific\n                                  business or organization is used as reference\n                                  to a Party. For referencing a specific device\n                                  under a specific business or organization, use\n                                  the PartySubIdOrType element.\n\n                                  - ACCOUNT_ID - A bank account number or FSP\n                                  account ID should be used as reference to a\n                                  participant. The ACCOUNT_ID identifier can be\n                                  in any format, as formats can greatly differ\n                                  depending on country and FSP.\n\n                                  - IBAN - A bank account number or FSP account\n                                  ID is used as reference to a participant. The\n                                  IBAN identifier can consist of up to 34\n                                  alphanumeric characters and should be entered\n                                  without whitespace.\n\n                                  - ALIAS An alias is used as reference to a\n                                  participant. The alias should be created in\n                                  the FSP as an alternative reference to an\n                                  account owner. Another example of an alias is\n                                  a username in the FSP system. The ALIAS\n                                  identifier can be in any format. It is also\n                                  possible to use the PartySubIdOrType element\n                                  for identifying an account under an Alias\n                                  defined by the PartyIdentifier.\n                              partyIdentifier:\n                                title: PartyIdentifier\n                                type: string\n                                minLength: 1\n                                maxLength: 128\n                                description: Identifier of the Party.\n                                example: '16135551212'\n                              partySubIdOrType:\n                                title: PartySubIdOrType\n                                type: string\n                                minLength: 1\n                                maxLength: 128\n                                description: \u003e-\n                                  Either a sub-identifier of a PartyIdentifier,\n                                  or a sub-type of the PartyIdType, normally a\n                                  PersonalIdentifierType.\n                              fspId:\n                                title: FspId\n                                type: string\n                                minLength: 1\n                                maxLength: 32\n                                description: FSP identifier.\n                              extensionList:\n                                title: ExtensionList\n                                type: object\n                                description: \u003e-\n                                  Data model for the complex type ExtensionList.\n                                  An optional list of extensions, specific to\n                                  deployment.\n                                properties: *ref_21\n                                required: *ref_22\n                            required: \u0026ref_63\n                              - partyIdType\n                              - partyIdentifier\n                          merchantClassificationCode:\n                            title: MerchantClassificationCode\n                            type: string\n                            pattern: ^[\\d]{1,4}$\n                            description: \u003e-\n                              A limited set of pre-defined numbers. This list\n                              would be a limited set of numbers identifying a\n                              set of popular merchant types like School Fees,\n                              Pubs and Restaurants, Groceries, etc.\n                          name:\n                            title: PartyName\n                            type: string\n                            minLength: 1\n                            maxLength: 128\n                            description: \u003e-\n                              Name of the Party. Could be a real name or a\n                              nickname.\n                          personalInfo:\n                            title: PartyPersonalInfo\n                            type: object\n                            description: Data model for the complex type PartyPersonalInfo.\n                            properties: \u0026ref_65\n                              complexName:\n                                title: PartyComplexName\n                                type: object\n                                description: \u003e-\n                                  Data model for the complex type\n                                  PartyComplexName.\n                                properties: \u0026ref_64\n                                  firstName:\n                                    title: FirstName\n                                    type: string\n                                    minLength: 1\n                                    maxLength: 128\n                                    pattern: \u003e-\n                                      ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n                                      .,''-]{1,128}$\n                                    description: First name of the Party (Name Type).\n                                    example: Henrik\n                                  middleName:\n                                    title: MiddleName\n                                    type: string\n                                    minLength: 1\n                                    maxLength: 128\n                                    pattern: \u003e-\n                                      ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n                                      .,''-]{1,128}$\n                                    description: Middle name of the Party (Name Type).\n                                    example: Johannes\n                                  lastName:\n                                    title: LastName\n                                    type: string\n                                    minLength: 1\n                                    maxLength: 128\n                                    pattern: \u003e-\n                                      ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n                                      .,''-]{1,128}$\n                                    description: Last name of the Party (Name Type).\n                                    example: Karlsson\n                              dateOfBirth:\n                                title: DateofBirth (type Date)\n                                type: string\n                                pattern: \u003e-\n                                  ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n                                description: Date of Birth of the Party.\n                                example: '1966-06-16'\n                        required: \u0026ref_67\n                          - partyIdInfo\n                      reference:\n                        description: Payer Loan reference\n                        type: string\n                      amountType:\n                        title: AmountType\n                        type: string\n                        enum: \u0026ref_68\n                          - SEND\n                          - RECEIVE\n                        description: \u003e-\n                          Below are the allowed values for the enumeration\n                          AmountType.\n\n                          - SEND - Amount the Payer would like to send, that is,\n                          the amount that should be withdrawn from the Payer\n                          account including any fees.\n\n                          - RECEIVE - Amount the Payer would like the Payee to\n                          receive, that is, the amount that should be sent to\n                          the receiver exclusive of any fees.\n                        example: RECEIVE\n                      currency:\n                        title: Currency\n                        description: \u003e-\n                          The currency codes defined in [ISO\n                          4217](https://www.iso.org/iso-4217-currency-codes.html)\n                          as three-letter alphabetic codes are used as the\n                          standard naming representation for currencies.\n                        type: string\n                        minLength: 3\n                        maxLength: 3\n                        enum: *ref_23\n                      amount:\n                        title: Amount\n                        type: string\n                        pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                        description: \u003e-\n                          The API data type Amount is a JSON String in a\n                          canonical format that is restricted by a regular\n                          expression for interoperability reasons. This pattern\n                          does not allow any trailing zeroes at all, but allows\n                          an amount without a minor currency unit. It also only\n                          allows four digits in the minor currency unit; a\n                          negative value is not allowed. Using more than 18\n                          digits in the major currency unit is not allowed.\n                        example: '123.45'\n                      note:\n                        title: Note\n                        type: string\n                        minLength: 1\n                        maxLength: 128\n                        description: Memo assigned to transaction.\n                        example: Note sent to Payee.\n                      quoteId:\n                        title: CorrelationId\n                        type: string\n                        pattern: \u003e-\n                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                        description: \u003e-\n                          Identifier that correlates all messages of the same\n                          sequence. The API data type UUID (Universally Unique\n                          Identifier) is a JSON String in canonical format,\n                          conforming to [RFC\n                          4122](https://tools.ietf.org/html/rfc4122), that is\n                          restricted by a regular expression for\n                          interoperability reasons. A UUID is always 36\n                          characters long, 32 hexadecimal symbols and 4 dashes\n                          (â€˜-â€˜).\n                        example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      quoteResponse:\n                        title: QuotesIDPutResponse\n                        type: object\n                        description: The object sent in the PUT /quotes/{ID} callback.\n                        properties: \u0026ref_71\n                          transferAmount:\n                            title: Money\n                            type: object\n                            description: Data model for the complex type Money.\n                            properties: \u0026ref_24\n                              currency:\n                                title: Currency\n                                description: \u003e-\n                                  The currency codes defined in [ISO\n                                  4217](https://www.iso.org/iso-4217-currency-codes.html)\n                                  as three-letter alphabetic codes are used as\n                                  the standard naming representation for\n                                  currencies.\n                                type: string\n                                minLength: 3\n                                maxLength: 3\n                                enum: *ref_23\n                              amount:\n                                title: Amount\n                                type: string\n                                pattern: \u003e-\n                                  ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                                description: \u003e-\n                                  The API data type Amount is a JSON String in a\n                                  canonical format that is restricted by a\n                                  regular expression for interoperability\n                                  reasons. This pattern does not allow any\n                                  trailing zeroes at all, but allows an amount\n                                  without a minor currency unit. It also only\n                                  allows four digits in the minor currency unit;\n                                  a negative value is not allowed. Using more\n                                  than 18 digits in the major currency unit is\n                                  not allowed.\n                                example: '123.45'\n                            required: \u0026ref_25\n                              - currency\n                              - amount\n                          payeeReceiveAmount:\n                            title: Money\n                            type: object\n                            description: Data model for the complex type Money.\n                            properties: *ref_24\n                            required: *ref_25\n                          payeeFspFee:\n                            title: Money\n                            type: object\n                            description: Data model for the complex type Money.\n                            properties: *ref_24\n                            required: *ref_25\n                          payeeFspCommission:\n                            title: Money\n                            type: object\n                            description: Data model for the complex type Money.\n                            properties: *ref_24\n                            required: *ref_25\n                          expiration:\n                            title: DateTime\n                            type: string\n                            pattern: \u003e-\n                              ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                            description: \u003e-\n                              The API data type DateTime is a JSON String in a\n                              lexical format that is restricted by a regular\n                              expression for interoperability reasons. The\n                              format is according to [ISO\n                              8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                              expressed in a combined date, time and time zone\n                              format. A more readable version of the format is\n                              yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                              \"2016-05-24T08:38:08.699-04:00\",\n                              \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu\n                              time zone, same as UTC).\n                            example: '2016-05-24T08:38:08.699-04:00'\n                          geoCode:\n                            title: GeoCode\n                            type: object\n                            description: \u003e-\n                              Data model for the complex type GeoCode. Indicates\n                              the geographic location from where the transaction\n                              was initiated.\n                            properties: \u0026ref_69\n                              latitude:\n                                title: Latitude\n                                type: string\n                                pattern: \u003e-\n                                  ^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$\n                                description: \u003e-\n                                  The API data type Latitude is a JSON String in\n                                  a lexical format that is restricted by a\n                                  regular expression for interoperability\n                                  reasons.\n                                example: '+45.4215'\n                              longitude:\n                                title: Longitude\n                                type: string\n                                pattern: \u003e-\n                                  ^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$\n                                description: \u003e-\n                                  The API data type Longitude is a JSON String\n                                  in a lexical format that is restricted by a\n                                  regular expression for interoperability\n                                  reasons.\n                                example: '+75.6972'\n                            required: \u0026ref_70\n                              - latitude\n                              - longitude\n                          ilpPacket:\n                            title: IlpPacket\n                            type: string\n                            pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n                            minLength: 1\n                            maxLength: 32768\n                            description: \u003e-\n                              Information for recipient (transport layer\n                              information).\n                            example: \u003e-\n                              AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA\n                          condition:\n                            title: IlpCondition\n                            type: string\n                            pattern: ^[A-Za-z0-9-_]{43}$\n                            maxLength: 48\n                            description: \u003e-\n                              Condition that must be attached to the transfer by\n                              the Payer.\n                          extensionList:\n                            title: ExtensionList\n                            type: object\n                            description: \u003e-\n                              Data model for the complex type ExtensionList. An\n                              optional list of extensions, specific to\n                              deployment.\n                            properties: *ref_21\n                            required: *ref_22\n                        required: \u0026ref_72\n                          - transferAmount\n                          - expiration\n                          - ilpPacket\n                          - condition\n                      fulfil:\n                        title: TransfersIDPutResponse\n                        type: object\n                        description: The object sent in the PUT /transfers/{ID} callback.\n                        properties: \u0026ref_74\n                          fulfilment:\n                            title: IlpFulfilment\n                            type: string\n                            pattern: ^[A-Za-z0-9-_]{43}$\n                            maxLength: 48\n                            description: \u003e-\n                              Fulfilment that must be attached to the transfer\n                              by the Payee.\n                            example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8\n                          completedTimestamp:\n                            title: DateTime\n                            type: string\n                            pattern: \u003e-\n                              ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                            description: \u003e-\n                              The API data type DateTime is a JSON String in a\n                              lexical format that is restricted by a regular\n                              expression for interoperability reasons. The\n                              format is according to [ISO\n                              8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                              expressed in a combined date, time and time zone\n                              format. A more readable version of the format is\n                              yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                              \"2016-05-24T08:38:08.699-04:00\",\n                              \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu\n                              time zone, same as UTC).\n                            example: '2016-05-24T08:38:08.699-04:00'\n                          transferState:\n                            title: TransferState\n                            type: string\n                            enum: \u0026ref_73\n                              - RECEIVED\n                              - RESERVED\n                              - COMMITTED\n                              - ABORTED\n                            description: \u003e-\n                              Below are the allowed values for the enumeration.\n\n                              - RECEIVED - Next ledger has received the\n                              transfer.\n\n                              - RESERVED - Next ledger has reserved the\n                              transfer.\n\n                              - COMMITTED - Next ledger has successfully\n                              performed the transfer.\n\n                              - ABORTED - Next ledger has aborted the transfer\n                              due to a rejection or failure to perform the\n                              transfer.\n                            example: RESERVED\n                          extensionList:\n                            title: ExtensionList\n                            type: object\n                            description: \u003e-\n                              Data model for the complex type ExtensionList. An\n                              optional list of extensions, specific to\n                              deployment.\n                            properties: *ref_21\n                            required: *ref_22\n                        required: \u0026ref_75\n                          - transferState\n                      quoteExtensions:\n                        title: ExtensionList\n                        type: object\n                        description: \u003e-\n                          Data model for the complex type ExtensionList. An\n                          optional list of extensions, specific to deployment.\n                        properties: *ref_21\n                        required: *ref_22\n                      transferExtensions:\n                        title: ExtensionList\n                        type: object\n                        description: \u003e-\n                          Data model for the complex type ExtensionList. An\n                          optional list of extensions, specific to deployment.\n                        properties: *ref_21\n                        required: *ref_22\n                      lastError:\n                        type: object\n                        description: \u003e-\n                          This object represents a Mojaloop API error received\n                          at any time during the transfer process\n                        properties: *ref_26\n                extensions:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_21\n                  required: *ref_22\n      responses:\n        '200':\n          description: The notification was accepted\n        '500':\n          description: An error occurred processing the request\n          content: *ref_6\ncomponents:\n  schemas:\n    amountType:\n      type: string\n      enum: *ref_16\n      description: SEND for send amount, RECEIVE for receive amount.\n    currency:\n      maxLength: 3\n      minLength: 3\n      type: string\n      enum: *ref_10\n    dateOfBirth:\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n      description: Date of birth in the form YYYY-MM-DD.\n    errorResponse:\n      type: object\n      required: *ref_0\n      properties: *ref_1\n    fspId:\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: FSP identifier.\n    extensionList:\n      type: array\n      items: *ref_11\n      minItems: 0\n      maxItems: 16\n    geoCode:\n      type: object\n      description: \u003e-\n        Indicates the geographic location from where the transaction was\n        initiated.\n      properties: *ref_12\n      required: *ref_13\n    idType:\n      type: string\n      enum: *ref_27\n      description: \u003e\n        Below are the allowed values for the enumeration.\n\n\n        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory\n        Number, that is, the phone number) is used as reference to a\n        participant. The MSISDN identifier should be in international format\n        according to the [ITU-T E.164\n        standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the\n        MSISDN may be prefixed by a single plus sign, indicating the\n        international prefix.\n\n\n        - ACCOUNT_ID - A bank account number or FSP account ID should be used as\n        reference to a participant. The ACCOUNT_ID identifier can be in any\n        format, as formats can greatly differ depending on country and FSP.\n    personalIdType:\n      type: string\n      enum:\n        - PASSPORT\n        - NATIONAL_REGISTRATION\n        - DRIVING_LICENSE\n        - ALIEN_REGISTRATION\n        - NATIONAL_ID_CARD\n        - EMPLOYER_ID\n        - TAX_ID_NUMBER\n        - SENIOR_CITIZENS_CARD\n        - MARRIAGE_CERTIFICATE\n        - HEALTH_CARD\n        - VOTERS_ID\n        - UNITED_NATIONS\n        - OTHER_ID\n      description: \u003e\n        Below are the allowed values for the enumeration.\n\n\n        - PASSPORT - Apassport number isused in reference to a party.\n\n\n        - NATIONAL_REGISTRATION - Anational registration number isused in\n        reference to a party.\n\n\n        - DRIVING_LICENSE - Adriving license isused in reference to a party.\n\n\n        - ALIEN_REGISTRATION - An alien registration number isused in reference\n        to a party.\n\n\n        - NATIONAL_ID_CARD - Anational ID card number isused in reference to a\n        party.\n\n\n        - EMPLOYER_ID - Atax identification number isused in reference to a\n        party.\n\n\n        - TAX_ID_NUMBER - Atax identification number isused in reference to a\n        party.\n\n\n        - SENIOR_CITIZENS_CARD - Asenior citizens card number isused in\n        reference to a party.\n\n\n        - MARRIAGE_CERTIFICATE - Amarriage certificate number isused in\n        reference to a party.\n\n\n        - HEALTH_CARD - Ahealth card number isused in reference to a party.\n\n\n        - VOTERS_ID - Avoterâ€™s identification number isused in reference to a\n        party.\n\n\n        - UNITED_NATIONS - An UN (United Nations) number isused in reference to\n        a party.\n\n\n        - OTHER_ID - Any other type of identification type number isused in\n        reference to a party.\n    idValue:\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Identifier of the party.\n    idSubValue:\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: \u003e-\n        Either a sub-identifier of a `{idValue}`, or a sub-type of the\n        `{idType}`, normally a `{personalIdType}`\n    initiator:\n      type: string\n      enum: *ref_18\n      description: Specifies if the initiator of the transfer is the Payer or Payee.\n    extensionItem:\n      type: object\n      properties: *ref_28\n    initiatorType:\n      type: string\n      enum: *ref_19\n      description: Specifies the type of the transaction initiator.\n    latitude:\n      type: string\n      pattern: \u003e-\n        ^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$\n      description: \u003e-\n        The API data type Latitude is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons.\n    longitude:\n      type: string\n      pattern: \u003e-\n        ^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$\n      description: \u003e-\n        The API data type Longitude is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons.\n    money:\n      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n      type: string\n    participantsResponse:\n      type: object\n      properties: *ref_4\n    payerType:\n      type: string\n      enum: *ref_29\n    quoteId:\n      pattern: \u003e-\n        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n      type: string\n      description: A Mojaloop API quote identifier (UUID).\n    quoteRequest:\n      type: object\n      description: A request for a quote for transfer from the DFSP backend.\n      required: *ref_30\n      properties: *ref_31\n    quoteResponse:\n      type: object\n      description: A response to a request for a quote.\n      required: *ref_14\n      properties: *ref_15\n    timestamp:\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n      description: An ISO-8601 formatted timestamp.\n    transactionId:\n      pattern: \u003e-\n        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n      type: string\n      description: \u003e-\n        ID of the transaction, the ID is decided by the Payer FSP during the\n        creation of the quote.\n    transactionType:\n      type: string\n      enum: *ref_17\n    scenario:\n      type: string\n      enum: *ref_32\n    amountCurrency:\n      type: object\n      description: Object containing Amount and Currency of the transfer.\n      required: *ref_33\n      properties: *ref_34\n    transactionTypeObject:\n      type: object\n      description: Object containing transfer object.\n      required: *ref_35\n      properties: *ref_36\n    ilpPacketData:\n      type: object\n      description: Object containing transfer object.\n      required: *ref_37\n      properties: *ref_38\n    transferId:\n      pattern: \u003e-\n        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n      type: string\n      description: A Mojaloop API transfer identifier (UUID).\n    transferParty:\n      type: object\n      required: *ref_8\n      properties: *ref_9\n    transferState:\n      type: string\n      enum: *ref_20\n      description: \u003e\n        Below are the allowed values for the enumeration - RECEIVED DFSP has\n        received the transfer. - RESERVED DFSP has reserved the transfer. -\n        COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP\n        has aborted the transfer due a rejection or failure to perform the\n        transfer.\n    transferRequest:\n      type: object\n      required: *ref_39\n      properties: *ref_40\n    transferResponse:\n      type: object\n      required: *ref_41\n      properties: *ref_42\n    transferDetailsResponse:\n      type: object\n      required: *ref_43\n      properties: *ref_44\n    transferStatus:\n      type: string\n      enum: *ref_45\n    fulfilNotification:\n      title: TransfersIDPatchResponse\n      type: object\n      description: PUT /transfers/{transferId} object\n      properties: *ref_46\n    extensionListComplex:\n      type: object\n      description: Data model for the complex type ExtensionList\n      properties:\n        extension:\n          type: array\n          items:\n            type: object\n            properties: *ref_28\n          minItems: 1\n          maxItems: 16\n          description: Number of Extension elements\n      required:\n        - extension\n    generalError:\n      type: object\n      description: \u003e-\n        This object may represent a number of different error object types and\n        so its properties may vary significantly.\n    IlpFulfilment:\n      title: IlpFulfilment\n      type: string\n      pattern: ^[A-Za-z0-9-_]{43}$\n      maxLength: 48\n      description: Fulfilment that must be attached to the transfer by the Payee.\n      example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8\n    ErrorCode:\n      title: ErrorCode\n      type: string\n      pattern: ^[1-9]\\d{3}$\n      description: \u003e-\n        The API data type ErrorCode is a JSON String of four characters,\n        consisting of digits only. Negative numbers are not allowed. A leading\n        zero is not allowed. Each error code in the API is a four-digit number,\n        for example, 1234, where the first number (1 in the example) represents\n        the high-level error category, the second number (2 in the example)\n        represents the low-level error category, and the last two numbers (34 in\n        the example) represent the specific error.\n      example: '5100'\n    ErrorDescription:\n      title: ErrorDescription\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Error description string.\n    ExtensionKey:\n      title: ExtensionKey\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: Extension key.\n    ExtensionValue:\n      title: ExtensionValue\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Extension value.\n    Extension:\n      title: Extension\n      type: object\n      description: Data model for the complex type Extension.\n      properties: *ref_47\n      required: *ref_48\n    ExtensionList:\n      title: ExtensionList\n      type: object\n      description: \u003e-\n        Data model for the complex type ExtensionList. An optional list of\n        extensions, specific to deployment.\n      properties: *ref_21\n      required: *ref_22\n    ErrorInformation:\n      title: ErrorInformation\n      type: object\n      description: Data model for the complex type ErrorInformation.\n      properties: *ref_49\n      required: *ref_50\n    mojaloopError:\n      type: object\n      properties: *ref_51\n    transferError:\n      type: object\n      description: \u003e-\n        This object represents a Mojaloop API error received at any time during\n        the transfer process\n      properties: *ref_26\n    CorrelationId:\n      title: CorrelationId\n      type: string\n      pattern: \u003e-\n        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n      description: \u003e-\n        Identifier that correlates all messages of the same sequence. The API\n        data type UUID (Universally Unique Identifier) is a JSON String in\n        canonical format, conforming to [RFC\n        4122](https://tools.ietf.org/html/rfc4122), that is restricted by a\n        regular expression for interoperability reasons. A UUID is always 36\n        characters long, 32 hexadecimal symbols and 4 dashes (â€˜-â€˜).\n      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n    bulkTransactionStatus:\n      type: string\n      enum: *ref_52\n    autoAcceptPartyOption:\n      type: object\n      required: *ref_53\n      properties: *ref_54\n    Currency:\n      title: Currency\n      description: \u003e-\n        The currency codes defined in [ISO\n        4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter\n        alphabetic codes are used as the standard naming representation for\n        currencies.\n      type: string\n      minLength: 3\n      maxLength: 3\n      enum: *ref_23\n    Amount:\n      title: Amount\n      type: string\n      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n      description: \u003e-\n        The API data type Amount is a JSON String in a canonical format that is\n        restricted by a regular expression for interoperability reasons. This\n        pattern does not allow any trailing zeroes at all, but allows an amount\n        without a minor currency unit. It also only allows four digits in the\n        minor currency unit; a negative value is not allowed. Using more than 18\n        digits in the major currency unit is not allowed.\n      example: '123.45'\n    bulkPerTransferFeeLimit:\n      type: object\n      required: *ref_55\n      properties: *ref_56\n    autoAcceptQuote:\n      type: object\n      required: *ref_57\n      properties: *ref_58\n    DateTime:\n      title: DateTime\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n      description: \u003e-\n        The API data type DateTime is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons. The\n        format is according to [ISO\n        8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed\n        in a combined date, time and time zone format. A more readable version\n        of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n        \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z\n        indicates Zulu time zone, same as UTC).\n      example: '2016-05-24T08:38:08.699-04:00'\n    bulkTransactionOptions:\n      type: object\n      required: *ref_59\n      properties: *ref_60\n    PartyIdType:\n      title: PartyIdType\n      type: string\n      enum: *ref_61\n      description: \u003e-\n        Below are the allowed values for the enumeration.\n\n        - MSISDN - An MSISDN (Mobile Station International Subscriber Directory\n        Number, that is, the phone number) is used as reference to a\n        participant. The MSISDN identifier should be in international format\n        according to the [ITU-T E.164\n        standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the\n        MSISDN may be prefixed by a single plus sign, indicating the\n        international prefix.\n\n        - EMAIL - An email is used as reference to a participant. The format of\n        the email should be according to the informational [RFC\n        3696](https://tools.ietf.org/html/rfc3696).\n\n        - PERSONAL_ID - A personal identifier is used as reference to a\n        participant. Examples of personal identification are passport number,\n        birth certificate number, and national registration number. The\n        identifier number is added in the PartyIdentifier element. The personal\n        identifier type is added in the PartySubIdOrType element.\n\n        - BUSINESS - A specific Business (for example, an organization or a\n        company) is used as reference to a participant. The BUSINESS identifier\n        can be in any format. To make a transaction connected to a specific\n        username or bill number in a Business, the PartySubIdOrType element\n        should be used.\n\n        - DEVICE - A specific device (for example, a POS or ATM) ID connected to\n        a specific business or organization is used as reference to a Party. For\n        referencing a specific device under a specific business or organization,\n        use the PartySubIdOrType element.\n\n        - ACCOUNT_ID - A bank account number or FSP account ID should be used as\n        reference to a participant. The ACCOUNT_ID identifier can be in any\n        format, as formats can greatly differ depending on country and FSP.\n\n        - IBAN - A bank account number or FSP account ID is used as reference to\n        a participant. The IBAN identifier can consist of up to 34 alphanumeric\n        characters and should be entered without whitespace.\n\n        - ALIAS An alias is used as reference to a participant. The alias should\n        be created in the FSP as an alternative reference to an account owner.\n        Another example of an alias is a username in the FSP system. The ALIAS\n        identifier can be in any format. It is also possible to use the\n        PartySubIdOrType element for identifying an account under an Alias\n        defined by the PartyIdentifier.\n    PartyIdentifier:\n      title: PartyIdentifier\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Identifier of the Party.\n      example: '16135551212'\n    PartySubIdOrType:\n      title: PartySubIdOrType\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: \u003e-\n        Either a sub-identifier of a PartyIdentifier, or a sub-type of the\n        PartyIdType, normally a PersonalIdentifierType.\n    FspId:\n      title: FspId\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: FSP identifier.\n    PartyIdInfo:\n      title: PartyIdInfo\n      type: object\n      description: \u003e-\n        Data model for the complex type PartyIdInfo. An ExtensionList element\n        has been added to this reqeust in version v1.1\n      properties: *ref_62\n      required: *ref_63\n    MerchantClassificationCode:\n      title: MerchantClassificationCode\n      type: string\n      pattern: ^[\\d]{1,4}$\n      description: \u003e-\n        A limited set of pre-defined numbers. This list would be a limited set\n        of numbers identifying a set of popular merchant types like School Fees,\n        Pubs and Restaurants, Groceries, etc.\n    PartyName:\n      title: PartyName\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Name of the Party. Could be a real name or a nickname.\n    FirstName:\n      title: FirstName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: First name of the Party (Name Type).\n      example: Henrik\n    MiddleName:\n      title: MiddleName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: Middle name of the Party (Name Type).\n      example: Johannes\n    LastName:\n      title: LastName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: Last name of the Party (Name Type).\n      example: Karlsson\n    PartyComplexName:\n      title: PartyComplexName\n      type: object\n      description: Data model for the complex type PartyComplexName.\n      properties: *ref_64\n    DateOfBirth:\n      title: DateofBirth (type Date)\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n      description: Date of Birth of the Party.\n      example: '1966-06-16'\n    PartyPersonalInfo:\n      title: PartyPersonalInfo\n      type: object\n      description: Data model for the complex type PartyPersonalInfo.\n      properties: *ref_65\n    Party:\n      title: Party\n      type: object\n      description: Data model for the complex type Party.\n      properties: *ref_66\n      required: *ref_67\n    AmountType:\n      title: AmountType\n      type: string\n      enum: *ref_68\n      description: \u003e-\n        Below are the allowed values for the enumeration AmountType.\n\n        - SEND - Amount the Payer would like to send, that is, the amount that\n        should be withdrawn from the Payer account including any fees.\n\n        - RECEIVE - Amount the Payer would like the Payee to receive, that is,\n        the amount that should be sent to the receiver exclusive of any fees.\n      example: RECEIVE\n    Note:\n      title: Note\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Memo assigned to transaction.\n      example: Note sent to Payee.\n    Money:\n      title: Money\n      type: object\n      description: Data model for the complex type Money.\n      properties: *ref_24\n      required: *ref_25\n    Latitude:\n      title: Latitude\n      type: string\n      pattern: \u003e-\n        ^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$\n      description: \u003e-\n        The API data type Latitude is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons.\n      example: '+45.4215'\n    Longitude:\n      title: Longitude\n      type: string\n      pattern: \u003e-\n        ^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$\n      description: \u003e-\n        The API data type Longitude is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons.\n      example: '+75.6972'\n    GeoCode:\n      title: GeoCode\n      type: object\n      description: \u003e-\n        Data model for the complex type GeoCode. Indicates the geographic\n        location from where the transaction was initiated.\n      properties: *ref_69\n      required: *ref_70\n    IlpPacket:\n      title: IlpPacket\n      type: string\n      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n      minLength: 1\n      maxLength: 32768\n      description: Information for recipient (transport layer information).\n      example: \u003e-\n        AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA\n    IlpCondition:\n      title: IlpCondition\n      type: string\n      pattern: ^[A-Za-z0-9-_]{43}$\n      maxLength: 48\n      description: Condition that must be attached to the transfer by the Payer.\n    QuotesIDPutResponse:\n      title: QuotesIDPutResponse\n      type: object\n      description: The object sent in the PUT /quotes/{ID} callback.\n      properties: *ref_71\n      required: *ref_72\n    TransferState:\n      title: TransferState\n      type: string\n      enum: *ref_73\n      description: \u003e-\n        Below are the allowed values for the enumeration.\n\n        - RECEIVED - Next ledger has received the transfer.\n\n        - RESERVED - Next ledger has reserved the transfer.\n\n        - COMMITTED - Next ledger has successfully performed the transfer.\n\n        - ABORTED - Next ledger has aborted the transfer due to a rejection or\n        failure to perform the transfer.\n      example: RESERVED\n    TransfersIDPutResponse:\n      title: TransfersIDPutResponse\n      type: object\n      description: The object sent in the PUT /transfers/{ID} callback.\n      properties: *ref_74\n      required: *ref_75\n    bulkTransactionIndividualTransferResult:\n      type: object\n      required: *ref_76\n      properties: *ref_77\n    bulkTransactionResponse:\n      title: BulkTransactionResponse\n      type: object\n      required: *ref_78\n      properties: *ref_79\n  responses:\n    '400':\n      description: Malformed or missing required headers or parameters\n      content: *ref_5\n    '404':\n      description: \u003e-\n        The party specified by the provided identifier type and value is not\n        known to the server\n    '500':\n      description: An error occurred processing the request\n      content: *ref_6\n  parameters:\n    transferId:\n      name: transferId\n      in: path\n      required: true\n      schema: *ref_80\n    idType:\n      name: idType\n      in: path\n      required: true\n      schema: *ref_2\n      description: \u003e\n        Below are the allowed values for the enumeration.\n\n\n        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory\n        Number, that is, the phone number) is used as reference to a\n        participant. The MSISDN identifier should be in international format\n        according to the [ITU-T E.164\n        standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the\n        MSISDN may be prefixed by a single plus sign, indicating the\n        international prefix.\n\n\n        - ACCOUNT_ID - A bank account number or FSP account ID should be used as\n        reference to a participant. The ACCOUNT_ID identifier can be in any\n        format, as formats can greatly differ depending on country and FSP.\n    idValue:\n      name: idValue\n      in: path\n      required: true\n      schema: *ref_3\n      description: Identifier of the party.\n    idSubValue:\n      name: idSubValue\n      in: path\n      required: true\n      schema: *ref_7\n      description: \u003e-\n        Either a sub-identifier of a `{idValue}`, or a sub-type of the\n        `{idType}`, normally a `{personalIdType}`\n    bulkTransactionId:\n      name: bulkTransactionId\n      in: path\n      required: true\n      schema: *ref_81\n      description: \u003e-\n        Identifier of the bulk transaction to continue as returned in the\n        response to a `POST /bulkTransaction` request.\n",
			"canonicalURL": "/npm/mojaloop/api-snippets@e02a0c46f118d562574fdac1c09a000df0b55bc9/-/blob/docs/sdk-scheme-adapter-inbound-v2_0_0-openapi3-snippets.yaml",
			"externalURLs": []
		}
	},
	"Error": "buildIR: make ir: operations: path \"/bulkTransactions/{bulkTransactionId}\": put: requestBody: contents: media: \"application/json\": generate schema: field individualTransferResults: item: field to: field personalInfo: field complexName: field firstName: string validator: pattern: regexp2: error parsing regexp: incomplete \\p{X} character escape in `^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$`"
}