{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cardano-community/koios-artifacts"
		},
		"file": {
			"name": "koiosapi-preview.yaml",
			"size": 0,
			"path": "specs/results/koiosapi-preview.yaml",
			"byteSize": 146868,
			"content": "openapi: 3.0.2\ninfo:\n  title: Koios API\n  version: 1.0.10rc\n  description: |\n    Koios is best described as a Decentralized and Elastic RESTful query layer for exploring data on Cardano blockchain to consume within applications/wallets/explorers/etc.\n\n    \u003e Note: While we've done sufficient ground work - we're still going through testing/learning/adapting phase based on feedback. Feel free to give it a go, but just remember it is not yet finalized for production consumption and will be refreshed weekly (Saturday 8am UTC).\n\n    # Problems solved by Koios\n    - As the size of blockchain grows rapidly, we're looking at increasingly expensive resources and maintenance costs (financially as well as time-wise)\n    to maintain a scalable solution that will automatically failover and have health-checks, ensuring most synched versions are returned. With Koios, anyone is\n    free to either add their backend instance to the cluster, or use the query layer without running a node or cardano-db-sync instance themselves. There will be\n    health-checks for each endpoint to ensure that connections do not go to a dud backend with stale information.\n    - Moreover, folks who do put in tremendous amount of efforts to go through discovery phrase - are often ending up with local solutions, that may not be\n    consistent across the board (e.g. Live Stake queries across existing explorers). Since all the queries used by/for Koios layer is on GitHub, anyone can contribute\n    or leverage the query knowledge base, and help each other out while doing so. An additional endpoint added will only be load balanced between the servers that\n    pass the health-check for the endpoint.\n    - It is almost impossible to fetch some live data (for example, Live Stake against a pool) due to the cost of computation and amount of data on chain. For \n    such queries, many folks are already using different cache methods, or capturing ledger information from node. Wouldn't it be nice to have these crunched data that\n    take quite a few minutes to run be shared and available to be able to pick a relatively recent execution across the nodes? This will be available out of the box as part\n    of Koios API.\n    - There is also a worry when going through updates about feasibility/breaking changes/etc. that can become a bottleneck for providers. Since Koios participants\n    automatically receive failover support, they reduce impact of any subset of clusters going through update process.\n    - The lightweight query layers currently present are unfortunately closed source, centralised, and create a single point of failure. With Koios, our aim is to\n    give enough flexibility to all the participants to select their backend, or pick from any of the available ones instead.\n    - Bad human errors causing an outage? The bandwidth for Koios becomes better with more participation, but just in case there is not enough participation - we will\n    ensure that at least 4 trusted Koios instances across the globe will be around for the initial year, allowing for enough time for adoption to build up gradually.\n    - Flexibility to participate at different levels. A consumer of these services can participate with a complete independent instance (optionally extend existing ones), by running only certain parts (e.g. submit-api or PostgREST only), or simply consuming the API without running anything locally.\n\n    # Architecture\n\n    ## How does Koios work?\n\n    ![High-Level architecture overview](/koios-design.png)\n\n    We will go bottom to top (from builder's eyes to run through the above) briefly:\n\n    - *Instance(s)* : These are essentially [PostgREST](https://postgrest.org/en/latest/) instances with the REST service attached to Postgres DB populated using [cardano-db-sync](https://cardano-community.github.io/guild-operators/Build/dbsync/). Every consumer who is providing their own instance will be expected to serve at least a PostgREST instance, as this is what allows us to string instances together after health-checks. If using guild-operator setup instructions, these will be provisioned for you by setup scripts.\n    - *Health-check Services* : These are lightweight [HAProxy](http://www.haproxy.org) instances that will be gatekeepers for individual endpoints, handling health-checks, sample data verification, etc. A builder _may_ opt-in to run this monitoring service, and add their instance to GitHub repository. Again, setting up HAProxy will be part of setup scripts on guild-operator's repo for those interested.\n    - *DNS Routing* : These will be the entry points from monitoring layer to trusted instances that will route to health-check proxy services. We will be using at least two DNS servers ourselves to not have single point of failure, but that does not limit users to elect any of the other server endpoints instead, since the API works right from the PostgREST layer itself.\n\n    # API Usage\n\n    The endpoints served by Koios can be browsed from the left side bar of this site. You will find that almost each endpoint has an example that you can `Try` and will help you get an example in shell using cURL. For public queries, you do not need to register yourself - you can simply use them as per the examples provided on individual endpoints. But in addition, the [PostgREST API](https://postgrest.org/en/stable/api.html) used underneath provides a handful of features that can be quite handy for you to improve your queries to directly grab very specific information pertinent to your calls, reducing data you download and process.\n\n    ## Vertical Filtering\n\n    Instead of returning entire row, you can elect which rows you would like to fetch from the endpoint by using the `select` parameter with corresponding columns separated by commas. See example below (first is complete information for tip, while second command gives us 3 columns we are interested in):\u003cbr\u003e\u003cbr\u003e\n\n    ``` bash\n    curl \"https://api.koios.rest/api/v0/tip\"\n\n    # [{\"hash\":\"4d44c8a453e677f933c3df42ebcf2fe45987c41268b9cfc9b42ae305e8c3d99a\",\"epoch\":317,\"abs_slot\":51700871,\"epoch_slot\":120071,\"block_height\":6806994,\"block_time\":1643267162}]\n\n    curl \"https://api.koios.rest/api/v0/blocks?select=epoch,epoch_slot,block_height\"\n\n    # [{\"epoch\":317,\"epoch_slot\":120071,\"block_height\":6806994}]\n    ```\n\n    ## Horizontal Filtering\n\n    You can filter the returned output based on specific conditions using operators against a column within returned result. Consider an example where you would want to query blocks minted in first 3 minutes of epoch 250 (i.e. epoch_slot was less than 180). To do so your query would look like below:\u003cbr\u003e\u003cbr\u003e\n    ``` bash\n    curl \"https://api.koios.rest/api/v0/blocks?epoch=eq.250\u0026epoch_slot=lt.180\"\n\n    # [{\"hash\":\"8fad2808ac6b37064a0fa69f6fe065807703d5235a57442647bbcdba1c02faf8\",\"epoch\":250,\"abs_slot\":22636942,\"epoch_slot\":142,\"block_height\":5385757,\"block_time\":1614203233,\"tx_count\":65,\"vrf_key\":\"vrf_vk14y9pjprzlsjvjt66mv5u7w7292sxp3kn4ewhss45ayjga5vurgaqhqknuu\",\"pool\":null,\"op_cert_counter\":2},\n    #  {\"hash\":\"9d33b02badaedc0dedd0d59f3e0411e5fb4ac94217fb5ee86719e8463c570e16\",\"epoch\":250,\"abs_slot\":22636800,\"epoch_slot\":0,\"block_height\":5385756,\"block_time\":1614203091,\"tx_count\":10,\"vrf_key\":\"vrf_vk1dkfsejw3h2k7tnguwrauqfwnxa7wj3nkp3yw2yw3400c4nlkluwqzwvka6\",\"pool\":null,\"op_cert_counter\":2}]\n    ```\n\n    Here, we made use of `eq.` operator to denote a filter of \"value equal to\" against `epoch` column. Similarly, we added a filter using `lt.` operator to denote a filter of \"values lower than\" against `epoch_slot` column. You can find a complete list of operators supported in PostgREST documentation (commonly used ones extracted below):\n\n    |Abbreviation|In PostgreSQL|Meaning                                    |\n    |------------|-------------|-------------------------------------------|\n    |eq          |`=`          |equals                                     |\n    |gt          |`\u003e`          |greater than                               |\n    |gte         |`\u003e=`         |greater than or equal                      |\n    |lt          |`\u003c`          |less than                                  |\n    |lte         |`\u003c=`         |less than or equal                         |\n    |neq         |`\u003c\u003e` or `!=` |not equal                                  |\n    |like        |`LIKE`       |LIKE operator (use * in place of %)        |\n    |in          |`IN`         |one of a list of values, e.g. `?a=in.(\"hi,there\",\"yes,you\")`|\n    |is          |`IS`         |checking for exact equality (null,true,false,unknown)|\n    |cs          |`@\u003e`         |contains e.g. `?tags=cs.{example, new}`    |\n    |cd          |`\u003c@`         |contained in e.g. `?values=cd.{1,2,3}`     |\n    |not         |`NOT`        |negates another operator                   |\n    |or          |`OR`         |logical `OR` operator                      |\n    |and         |`AND`        |logical `AND` operator                     |\n\n    ## Pagination (offset/limit)\n\n    When you query any endpoint in PostgREST, the number of observations returned will be limited to a maximum of 1000 rows (set via `max-rows` config option in the `grest.conf` file. This - however - is a result of a paginated call, wherein the [ up to ] 1000 records you see without any parameters is the first page. If you want to see the next 1000 results, you can always append `offset=1000` to view the next set of results. But what if 1000 is too high for your use-case and you want smaller page? Well, you can specify a smaller limit using parameter `limit`, which will see shortly in an example below. The obvious question at this point that would cross your mind is - how do I know if I need to offset and what range I am querying? This is where headers come in to your aid.  \n\n    The default headers returned by PostgREST will include a `Content-Range` field giving a range of observations returned. For large tables, this range could include a wildcard `*` as it is expensive to query exact count of observations from endpoint. But if you would like to get an estimate count without overloading servers, PostgREST can utilise Postgres's own maintenance thread results (which maintain stats for each table) to provide you a count, by specifying a header `\"Profile: count=estimated\"`.  \n\n    Sounds confusing? Let's see this in practice, to hopefully make it easier.\n    Consider a simple case where I want query `blocks` endpoint for `block_height` column and focus on `content-range` header to monitor the rows we discussed above.\u003cbr\u003e\u003cbr\u003e\n\n    ``` bash\n    curl -s \"https://api.koios.rest/api/v0/blocks?select=block_height\" -I | grep -i content-range\n\n    # content-range: 0-999/*\n\n    ```\n\n    As we can see above, the number of observations returned was 1000 (range being 0-999), but the total size was not queried to avoid wait times. Now, let's modify this default behaviour to query rows beyond the first 999, but this time - also add another clause to limit results by 500. We can do this using `offset=1000` and `limit=500` as below:\u003cbr\u003e\u003cbr\u003e\n\n    ``` bash\n    curl -s \"https://api.koios.rest/api/v0/blocks?select=block_height\u0026offset=1000\u0026limit=500\" -I | grep -i content-range\n\n    # content-range: 1000-1499/*\n\n    ```\n\n    There is also another method to achieve the above, instead of adding parameters to the URL itself, you can specify a `Range` header as below to achieve something similar:\u003cbr\u003e\u003cbr\u003e\n\n    ``` bash\n    curl -s \"https://api.koios.rest/api/v0/blocks?select=block_height\" -H \"Range: 1000-1499\" -I | grep -i content-range\n\n    # content-range: 1000-1499/*\n\n    ```\n\n    The above methods for pagination are very useful to keep your queries light as well as process the output in smaller pages, making better use of your resources and respecting server timeouts for response times.\n\n    ## Ordering\n\n    You can set a sorting order for returned queries against specific column(s).\n    Consider example where you want to check `epoch` and `epoch_slot` for the first 5 blocks created by a particular pool, i.e. you can set order to ascending based on block_height column and add horizontal filter for that pool ID as below:\u003cbr\u003e\u003cbr\u003e\n\n    ``` bash\n    curl -s \"https://api.koios.rest/api/v0/blocks?pool=eq.pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\u0026order=block_height.asc\u0026limit=5\"\n\n    # [{\"hash\":\"610b4c7bbebeeb212bd002885048cc33154ba29f39919d62a3d96de05d315706\",\"epoch\":236,\"abs_slot\":16594295,\"epoch_slot\":5495,\"block_height\":5086774,\"block_time\":1608160586,\"tx_count\":1,\"vrf_key\":\"vrf_vk18x0e7dx8j37gdxftnn8ru6jcxs7n6acdazc4ykeda2ygjwg9a7ls7ns699\",\"pool\":\"pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\",\"op_cert_counter\":1},\n    # {\"hash\":\"d93d1db5275329ab695d30c06a35124038d8d9af64fc2b0aa082b8aa43da4164\",\"epoch\":236,\"abs_slot\":16597729,\"epoch_slot\":8929,\"block_height\":5086944,\"block_time\":1608164020,\"tx_count\":7,\"vrf_key\":\"vrf_vk18x0e7dx8j37gdxftnn8ru6jcxs7n6acdazc4ykeda2ygjwg9a7ls7ns699\",\"pool\":\"pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\",\"op_cert_counter\":1},\n    # {\"hash\":\"dc9496eae64294b46f07eb20499ae6dae4d81fdc67c63c354397db91bda1ee55\",\"epoch\":236,\"abs_slot\":16598058,\"epoch_slot\":9258,\"block_height\":5086962,\"block_time\":1608164349,\"tx_count\":1,\"vrf_key\":\"vrf_vk18x0e7dx8j37gdxftnn8ru6jcxs7n6acdazc4ykeda2ygjwg9a7ls7ns699\",\"pool\":\"pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\",\"op_cert_counter\":1},\n    # {\"hash\":\"6ebc7b734c513bc19290d96ca573a09cac9503c5a349dd9892b9ab43f917f9bd\",\"epoch\":236,\"abs_slot\":16601491,\"epoch_slot\":12691,\"block_height\":5087097,\"block_time\":1608167782,\"tx_count\":0,\"vrf_key\":\"vrf_vk18x0e7dx8j37gdxftnn8ru6jcxs7n6acdazc4ykeda2ygjwg9a7ls7ns699\",\"pool\":\"pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\",\"op_cert_counter\":1},\n    # {\"hash\":\"2eac97548829fc312858bc56a40f7ce3bf9b0ca27ee8530283ccebb3963de1c0\",\"epoch\":236,\"abs_slot\":16602308,\"epoch_slot\":13508,\"block_height\":5087136,\"block_time\":1608168599,\"tx_count\":1,\"vrf_key\":\"vrf_vk18x0e7dx8j37gdxftnn8ru6jcxs7n6acdazc4ykeda2ygjwg9a7ls7ns699\",\"pool\":\"pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\",\"op_cert_counter\":1}]\n    ```\n\n    ## Response Formats\n\n    You can get the results from the PostgREST endpoints in CSV or JSON formats. The default response format will always be JSON, but if you'd like to switch, you can do so by specifying header `'Accept: text/csv'` or `'Accept: application/json'`.\n    Below is an example of JSON/CSV output making use of above to print first in JSON (default), and then override response format to CSV.\u003cbr\u003e\u003cbr\u003e\n\n    ``` bash\n    curl -s \"https://api.koios.rest/api/v0/blocks?select=epoch,epoch_slot,block_time\u0026limit=3\"\n\n    # [{\"epoch\":318,\"epoch_slot\":27867,\"block_time\":1643606958},\n    # {\"epoch\":318,\"epoch_slot\":27841,\"block_time\":1643606932},\n    # {\"epoch\":318,\"epoch_slot\":27839,\"block_time\":1643606930}]\n\n    curl -s \"https://api.koios.rest/api/v0/blocks?select=epoch,epoch_slot,block_time\u0026limit=3\" -H \"Accept: text/csv\"\n\n    # epoch,epoch_slot,block_time\n    # 318,28491,1643607582\n    # 318,28479,1643607570\n    # 318,28406,1643607497\n\n    ```\n\n    ## Limits\n\n    While use of Koios is completely free and there are no registration requirements to the usage, the monitoring layer will only restrict spam requests that can potentially cause high amount of load to backends. The emphasis is on using list of objects first, and then [bulk where available] query specific objects to drill down where possible - which forms higher performance results to consumer as well as instance provider. Some basic protection against patterns that could cause unexpected resource spikes are protected as per below:\n\n      - Burst Limit: A single IP can query an endpoint up to 100 times within 10 seconds (that's about 8.64 million requests within a day). The sleep time if a limit is crossed is minimal (60 seconds) for that IP - during which, the monitoring layer will return HTTP Status `429 - Too many requests`.  \n      - Pagination/Limits: Any query results fetched will be paginated by 1000 records (you can reduce limit and or control pagination offsets on URL itself, see API \u003e Pagination section for more details).\n      - Query timeout: If a query from server takes more than 30 seconds, it will return a HTTP Status of `504 - Gateway timeout`. This is because we would want to ensure you're using the queries optimally, and more often than not - it would indicate that particular endpoint is not optimised (or the network connectivity is not optimal between servers).\n\n    Yet, there may be cases where the above restrictions may need exceptions (for example, an explorer or a wallet might need more connections than above - going beyond the Burst Limit). For such cases, it is best to approach the team and we can work towards a solution.\n\n\n    # Community projects\n\n    A big thank you to the following projects who are already starting to use Koios from early days:\n\n    ## CLI\n\n      - [Koios CLI in GoLang](https://github.com/cardano-community/koios-cli)\n\n    ## Libraries\n\n      - [.Net SDK](https://github.com/CardanoSharp/cardanosharp-koios)\n      - [Go Client](https://github.com/cardano-community/koios-go-client)\n      - [Java Client](https://github.com/cardano-community/koios-java-client)\n\n    ## Community Projects/Tools\n\n      - [Building On Cardano](https://buildingoncardano.com)\n      - [CardaStat](cardastat.info)\n      - [CNFT.IO](https://cnft.io)\n      - [CNTools](https://cardano-community.github.io/guild-operators/Scripts/cntools/)\n      - [Dandelion](https://dandelion.link)\n      - [Eternl](https://eternl.io/)\n      - [PoolPeek](https://poolpeek.com)\n      - [TosiDrop](https://tosidrop.io)\n\n    # FAQ\n\n    ### Is there a price attached to using services?\n    For most of the queries, there are no charges. But there are DDoS protection and strict timeout rules (see API Usage) that may prevent heavy consumers from using this *remotely* (for which, there should be an interaction to ensure the usage is proportional to sizing and traffic expected).\n\n    ### Who are the folks behind Koios?\n    It will be increasing list of community builders. But for initial think-tank and efforts, the work done is primarily by [guild-operators](https://cardano-community.github.io/guild-operators)\n    who are a well-recognised team of members behind Cardano tools like CNTools, gLiveView, topologyUpdater, etc. We also run a parallel a short (60-min) epoch blockchain, viz, guild used by many\n    for experiments.\n\n    ### I am only interested in collaborating on queries, where can I find the code and how to collaborate?\n    All the Postgres codebase against db-sync instance is available on guild-operator's github repo [here](https://github.com/cardano-community/guild-operators/tree/alpha/files/grest/rpc). Feel free to raise an issue/PR to discuss anything related to those queries.\n\n    ### I am not sure how to set up an instance. Is there an easy start guide?\n    Yes, there is a setup script (expect you to read carefully the help section) and instructions [here](https://cardano-community.github.io/guild-operators/Build/grest/). Should you need any assistance, feel free to hop in to the [discussion group](https://t.me/joinchat/+zE4Lce_QUepiY2U1).\n\n    ### Too much reading, I want to discuss in person\n    There are bi-weekly calls held that anyone is free to join - or you can drop in to the [telegram group](https://t.me/+zE4Lce_QUepiY2U1) and start a discussion from there.\n\n  x-logo:\n    url: \"https://api.koios.rest/koios.png\"\nservers:\n  - url: https://api.koios.rest/api/v0\n  - url: https://guild.koios.rest/api/v0\n  - url: https://preview.koios.rest/api/v0\n  - url: https://preprod.koios.rest/api/v0\npaths:\n  /tip: #RPC\n    get:\n      tags:\n        - Network\n      responses:\n        \"200\":\n          description: Array of block summary (limit+paginated)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tip\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Query Chain Tip\n      description: Get the tip info about the latest block seen by chain\n  /genesis: #RPC\n    get:\n      tags:\n        - Network\n      responses:\n        \"200\":\n          description: Array of genesis parameters used to start each era on chain\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/genesis\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get Genesis info\n      description: Get the Genesis parameters used to start specific era on chain\n  /totals: #RPC\n    get:\n      tags:\n        - Network\n      parameters:\n        - $ref: \"#/components/parameters/_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of supply/reserves/utxo/fees/treasury stats\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/totals\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get historical tokenomic stats\n      description: \u003e-\n        Get the circulating utxo, treasury, rewards, supply and reserves in\n        lovelace for specified epoch, all epochs if empty\n  /epoch_info: #RPC\n    get:\n      tags:\n        - Epoch\n      parameters:\n        - $ref: \"#/components/parameters/_epoch_no\"\n        - $ref: \"#/components/parameters/_include_next_epoch\"\n      responses:\n        \"200\":\n          description: Array of detailed summary for each epoch\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/epoch_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Epoch Information\n      description: Get the epoch information, all epochs if no epoch specified\n  /epoch_params: #RPC\n    get:\n      tags:\n        - Epoch\n      parameters:\n        - $ref: \"#/components/parameters/_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of protocol parameters for each epoch\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/epoch_params\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Epoch's Protocol Parameters\n      description: \u003e-\n        Get the protocol parameters for specific epoch, returns information\n        about all epochs if no epoch specified\n  /epoch_block_protocols: #RPC\n    get:\n      tags:\n        - Epoch\n      parameters:\n        - $ref: \"#/components/parameters/_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of distinct block protocol versions counts in epoch\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/epoch_block_protocols\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Epoch's Block Protocols\n      description: \u003e-\n        Get the information about block protocol distribution in epoch\n  /blocks:\n    get:\n      tags:\n        - Block\n      responses:\n        \"200\":\n          description: Array of block information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/blocks\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Block List\n      description: Get summarised details about all blocks (paginated - latest first)\n  /block_info: #RPC\n    post:\n      tags:\n        - Block\n      requestBody:\n        $ref: \"#/components/requestBodies/block_hashes\"\n      responses:\n        \"200\":\n          description: Array of detailed block information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/block_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Block Information\n      description: Get detailed information about a specific block\n  /block_txs: #RPC\n    post:\n      tags:\n        - Block\n      requestBody:\n        $ref: \"#/components/requestBodies/block_hashes\"\n      responses:\n        \"200\":\n          description: Array of transactions hashes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/block_txs\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Block Transactions\n      description: Get a list of all transactions included in provided blocks\n  /tx_info: #RPC\n    post:\n      tags:\n        - Transactions\n      requestBody:\n        $ref: \"#/components/requestBodies/tx_ids\"\n      responses:\n        \"200\":\n          description: Array of detailed information about transaction(s)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tx_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Transaction Information\n      description: Get detailed information about transaction(s)\n  /tx_utxos: #RPC\n    post:\n      tags:\n        - Transactions\n      requestBody:\n        $ref: \"#/components/requestBodies/tx_ids\"\n      responses:\n        \"200\":\n          description: Array of inputs and outputs for given transaction(s)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tx_utxos\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Transaction UTxOs\n      description: Get UTxO set (inputs/outputs) of transactions.\n  /tx_metadata: #RPC\n    post:\n      tags:\n        - Transactions\n      requestBody:\n        $ref: \"#/components/requestBodies/tx_ids\"\n      responses:\n        \"200\":\n          description: Array of metadata information present in each of the transactions queried\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tx_metadata\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Transaction Metadata\n      description: Get metadata information (if any) for given transaction(s)\n  /tx_metalabels: #RPC\n    get:\n      tags:\n        - Transactions\n      responses:\n        \"200\":\n          description: Array of known metadata labels\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tx_metalabels\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Transaction Metadata Labels\n      description: Get a list of all transaction metalabels\n  /submittx: #submit-api\n    post:\n      tags:\n        - Transactions\n      requestBody:\n        $ref: \"#/components/requestBodies/txbin\"\n      x-code-samples:\n        - lang: \"Shell\"\n          source: |\n            # Assuming ${data} is a raw binary serialized transaction on the file-system.\n            # If using a CLI-generated tx file, please ensure to deserialise (using `xxd -p -r \u003c\u003c\u003c $(jq .cborHex ${tx.signed}) \u003e ${data}`) first before submitting.\n            curl -X POST \\\n                --header \"Content-Type: application/cbor\" \\\n                --data-binary ${data} https://api.koios.rest/api/v0/submittx\n      responses:\n        \"202\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: The transaction id.\n                type: string\n                format: hex\n                minLength: 64\n                maxLength: 64\n                example: 92bcd06b25dfbd89b578d536b4d3b7dd269b7c2aa206ed518012cffe0444d67f\n        \"400\":\n          description: An error occured while submitting transaction.\n      summary: Submit Transaction\n      description: Submit an already serialized transaction to the network.\n  /tx_status: #RPC\n    post:\n      tags:\n        - Transactions\n      requestBody:\n        $ref: \"#/components/requestBodies/tx_ids\"\n      responses:\n        \"200\":\n          description: Array of transaction confirmation counts\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tx_status\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Transaction Status (Block Confirmations)\n      description: Get the number of block confirmations for a given transaction hash list\n  /address_info: #RPC\n    post:\n      tags:\n        - Address\n      requestBody:\n        $ref: \"#/components/requestBodies/payment_addresses\"\n      responses:\n        \"200\":\n          description: Array of address information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Address Information\n      description: Get address info - balance, associated stake address (if any) and UTxO set for given addresses\n  /address_txs: #RPC\n    post:\n      tags:\n        - Address\n      requestBody:\n        $ref: \"#/components/requestBodies/address_txs\"\n      responses:\n        \"200\":\n          description: Array of transaction hashes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address_txs\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Address Transactions\n      description: Get the transaction hash list of input address array, optionally filtering after specified block height (inclusive)\n  /address_assets: #RPC\n    post:\n      tags:\n        - Address\n      requestBody:\n        $ref: \"#/components/requestBodies/payment_addresses\"\n      responses:\n        \"200\":\n          description: Array of address-owned assets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address_assets\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Address Assets\n      description: Get the list of all the assets (policy, name and quantity) for given addresses\n  /credential_txs: #RPC\n    post:\n      tags:\n        - Address\n      requestBody:\n        $ref: \"#/components/requestBodies/credential_txs\"\n      responses:\n        \"200\":\n          description: Array of transaction hashes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/credential_txs\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Transactions from payment credentials\n      description: Get the transaction hash list of input payment credential array, optionally filtering after specified block height (inclusive)\n  /account_list:\n    get:\n      tags:\n        - Account\n      responses:\n        \"200\":\n          description: Array of account (stake address) IDs\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_list\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account List\n      description: Get a list of all accounts\n  /account_info: #RPC\n    post:\n      tags:\n        - Account\n      requestBody:\n        $ref: \"#/components/requestBodies/stake_addresses\"\n      responses:\n        \"200\":\n          description: Array of account information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account Information\n      description: Get the account information for given stake addresses (accounts)\n  /account_info_cached: #RPC\n    post:\n      tags:\n        - Account\n      requestBody:\n        $ref: \"#/components/requestBodies/stake_addresses\"\n      responses:\n        \"200\":\n          description: Array of account information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account Information (Cached)\n      description: Get the cached account information for given stake addresses (accounts)\n  /account_rewards: #RPC\n    post:\n      tags:\n        - Account\n      requestBody:\n        $ref: \"#/components/requestBodies/stake_addresses_with_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of reward history information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_rewards\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account Rewards\n      description: \u003e-\n        Get the full rewards history (including MIR) for given stake addresses (accounts)\n  /account_updates: #RPC\n    post:\n      tags:\n        - Account\n      requestBody:\n        $ref: \"#/components/requestBodies/stake_addresses\"\n      responses:\n        \"200\":\n          description: Array of account updates information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_updates\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account Updates\n      description: \u003e-\n        Get the account updates (registration, deregistration, delegation and\n        withdrawals) for given stake addresses (accounts)\n  /account_addresses: #RPC\n    post:\n      tags:\n        - Account\n      requestBody:\n        $ref: \"#/components/requestBodies/stake_addresses\"\n      responses:\n        \"200\":\n          description: Array of payment addresses\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_addresses\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account Addresses\n      description: Get all addresses associated with given staking accounts\n  /account_assets: #RPC\n    post:\n      tags:\n        - Account\n      requestBody:\n        $ref: \"#/components/requestBodies/stake_addresses\"\n      responses:\n        \"200\":\n          description: Array of assets owned by account\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_assets\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account Assets\n      description: Get the native asset balance of given accounts\n  /account_history: #RPC\n    post:\n      tags:\n        - Account\n      requestBody:\n        $ref: \"#/components/requestBodies/stake_addresses_with_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of active stake values per epoch\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/account_history\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Account History\n      description: Get the staking history of given stake addresses (accounts)\n  /asset_list:\n    get:\n      tags:\n        - Asset\n      responses:\n        \"200\":\n          description: Array of policy IDs and asset names\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_list\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset List\n      description: Get the list of all native assets (paginated)\n  /asset_token_registry:\n    get:\n      tags:\n        - Asset\n      responses:\n        \"200\":\n          description: Array of token registry information for each asset\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_token_registry\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset Token Registry\n      description: Get a list of assets registered via token registry on github\n  /asset_address_list: #RPC\n    get:\n      tags:\n        - Asset\n      parameters:\n        - $ref: \"#/components/parameters/_asset_policy\"\n        - $ref: \"#/components/parameters/_asset_name\"\n      responses:\n        \"200\":\n          description: Array of payment addresses holding the given token (including balances)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_address_list\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset Address List\n      description: Get the list of all addresses holding a given asset\n  /asset_info: #RPC\n    get:\n      tags:\n        - Asset\n      parameters:\n        - $ref: \"#/components/parameters/_asset_policy\"\n        - $ref: \"#/components/parameters/_asset_name\"\n      responses:\n        \"200\":\n          description: Array of detailed asset information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset Information\n      description: Get the information of an asset including first minting \u0026 token registry metadata\n    post:\n      tags:\n        - Asset\n      requestBody:\n        $ref: \"#/components/requestBodies/asset_list\"\n      responses:\n        \"200\":\n          description: Array of detailed asset information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset Information (Bulk)\n      description: Get the information of a list of assets including first minting \u0026 token registry metadata\n  /asset_history: #RPC\n    get:\n      tags:\n        - Asset\n      parameters:\n        - $ref: \"#/components/parameters/_asset_policy\"\n        - $ref: \"#/components/parameters/_asset_name\"\n      responses:\n        \"200\":\n          description: Array of asset mint/burn history\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_history\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset History\n      description: Get the mint/burn history of an asset\n  /asset_policy_info: #RPC\n    get:\n      tags:\n        - Asset\n      parameters:\n        - $ref: \"#/components/parameters/_asset_policy\"\n      responses:\n        \"200\":\n          description: Array of detailed information of assets under the same policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_policy_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset Policy Information\n      description: Get the information for all assets under the same policy\n  /asset_summary: #RPC\n    get:\n      tags:\n        - Asset\n      parameters:\n        - $ref: \"#/components/parameters/_asset_policy\"\n        - $ref: \"#/components/parameters/_asset_name\"\n      responses:\n        \"200\":\n          description: Array of asset summary information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_summary\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset Summary\n      description: Get the summary of an asset (total transactions exclude minting/total wallets include only wallets with asset balance)\n  /asset_txs: #RPC\n    get:\n      tags:\n        - Asset\n      parameters:\n        - $ref: \"#/components/parameters/_asset_policy\"\n        - $ref: \"#/components/parameters/_asset_name\"\n        - $ref: \"#/components/parameters/_after_block_height\"\n        - $ref: \"#/components/parameters/_history\"\n      responses:\n        \"200\":\n          description: Array of Tx hashes that included the given asset\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/asset_txs\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Asset Transactions\n      description: Get the list of current or all asset transaction hashes (newest first)\n  /pool_list: #RPC\n    get:\n      tags:\n        - Pool\n      responses:\n        \"200\":\n          description: Array of pool IDs and tickers\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_list\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool List\n      description: A list of all currently registered/retiring (not retired) pools\n  /pool_info: #RPC\n    post:\n      tags:\n        - Pool\n      requestBody:\n        $ref: \"#/components/requestBodies/pool_ids\"\n      responses:\n        \"200\":\n          description: Array of pool information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Information\n      description: Current pool statuses and details for a specified list of pool ids\n  /pool_stake_snapshot: #RPC\n    get:\n      tags:\n        - Pool\n      parameters:\n        - $ref: \"#/components/parameters/_pool_bech32\"\n      responses:\n        \"200\":\n          description: Array of pool stake information for 3 snapshots\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_snapshot\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Stake Snapshot\n      description: Returns Mark, Set and Go stake snapshots for the selected pool, useful for leaderlog calculation\n  /pool_delegators: #RPC\n    get:\n      tags:\n        - Pool\n      parameters:\n        - $ref: \"#/components/parameters/_pool_bech32\"\n      responses:\n        \"200\":\n          description: Array of pool delegator information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_delegators\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Delegators List\n      description: Return information about live delegators for a given pool.\n  /pool_delegators_history: #RPC\n    get:\n      tags:\n        - Pool\n      parameters:\n        - $ref: \"#/components/parameters/_pool_bech32\"\n        - $ref: \"#/components/parameters/_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of pool delegator information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_delegators_history\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Delegators History\n      description: Return information about active delegators (incl. history) for a given pool and epoch number (all epochs if not specified).\n  /pool_blocks: #RPC\n    get:\n      tags:\n        - Pool\n      parameters:\n        - $ref: \"#/components/parameters/_pool_bech32\"\n        - $ref: \"#/components/parameters/_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of blocks created by pool\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_blocks\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Blocks\n      description: \u003e-\n        Return information about blocks minted by a given pool for all epochs\n        (or _epoch_no if provided)\n  /pool_history: #RPC\n    get:\n      tags:\n        - Pool\n      parameters:\n        - $ref: \"#/components/parameters/_pool_bech32\"\n        - $ref: \"#/components/parameters/_epoch_no\"\n      responses:\n        \"200\":\n          description: Array of pool history information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_history_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Stake, Block and Reward History\n      description: \u003e-\n        Return information about pool stake, block and reward history in a given epoch _epoch_no\n        (or all epochs that pool existed for, in descending order if no _epoch_no was provided)\n  /pool_updates: #RPC\n    get:\n      tags:\n        - Pool\n      parameters:\n        - $ref: \"#/components/parameters/_pool_bech32_optional\"\n          required: false\n      responses:\n        \"200\":\n          description: Array of historical pool updates\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_updates\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Updates (History)\n      description: Return all pool updates for all pools or only updates for specific pool if specified\n  /pool_relays: #RPC\n    get:\n      tags:\n        - Pool\n      responses:\n        \"200\":\n          description: Array of pool relay information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_relays\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Relays\n      description: A list of registered relays for all currently registered/retiring (not retired) pools\n  /pool_metadata: #RPC\n    post:\n      tags:\n        - Pool\n      requestBody:\n        $ref: \"#/components/requestBodies/pool_ids_optional\"\n      responses:\n        \"200\":\n          description: Array of pool metadata\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pool_metadata\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Pool Metadata\n      description: Metadata (on \u0026 off-chain) for all currently registered/retiring (not retired) pools\n  /native_script_list: #RPC\n    get:\n      tags:\n        - Script\n      responses:\n        \"200\":\n          description: List of native script and creation tx hash pairs\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/native_script_list\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Native Script List\n      description: List of all existing native script hashes along with their creation transaction hashes\n  /plutus_script_list: #RPC\n    get:\n      tags:\n        - Script\n      responses:\n        \"200\":\n          description: List of Plutus script and creation tx hash pairs\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/plutus_script_list\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Plutus Script List\n      description: List of all existing Plutus script hashes along with their creation transaction hashes\n  /script_redeemers: #RPC\n    get:\n      tags:\n        - Script\n      parameters:\n        - $ref: \"#/components/parameters/_script_hash\"\n      responses:\n        \"200\":\n          description: List of all redeemers for a given script hash\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/script_redeemers\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Script Redeemers\n      description: List of all redeemers for a given script hash\n  /datum_info: #RPC\n    post:\n      tags:\n        - Script\n      requestBody:\n        $ref: \"#/components/requestBodies/datum_hashes\"\n      responses:\n        \"200\":\n          description: List of datum information for given datum hashes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/datum_info\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Datum Information\n      description: List of datum information for given datum hashes\ncomponents:\n  parameters:\n    select:\n      name: select\n      description: Filtering Columns\n      schema:\n        type: string\n      in: query\n      required: false\n    on_conflict:\n      name: on_conflict\n      description: On Conflict\n      schema:\n        type: string\n      in: query\n      required: false\n    order:\n      name: order\n      description: Ordering\n      schema:\n        type: string\n      in: query\n      required: false\n    range:\n      name: Range\n      description: Limiting and Pagination\n      schema:\n        type: string\n      in: header\n      required: false\n    rangeUnit:\n      name: Range-Unit\n      description: Limiting and Pagination\n      schema:\n        default: items\n        type: string\n      in: header\n      required: false\n    offset:\n      name: offset\n      description: Limiting and Pagination\n      schema:\n        type: string\n      in: query\n      required: false\n    limit:\n      name: limit\n      description: Limiting and Pagination\n      schema:\n        type: string\n      in: query\n      required: false\n      example: 10\n    _block_hash:\n      deprecated: false\n      name: _block_hash\n      description: Block Hash in hex format\n      schema:\n        type: string\n        example: 6d6e3722c81a1b9bca9dd9b7f63cae096bd1f97f6ef1d67c178bacab1a248483\n      in: query\n      required: true\n      allowEmptyValue: false\n    _after_block_height:\n      deprecated: false\n      name: _after_block_height\n      description: Block height for specifying time delta\n      schema:\n        type: integer\n        example: 50000\n      in: query\n      required: false\n      allowEmptyValue: true\n    _epoch_no:\n      deprecated: false\n      name: _epoch_no\n      description: Epoch Number to fetch details for\n      schema:\n        type: string\n        example: 12\n      in: query\n      required: false\n      allowEmptyValue: true\n    _earned_epoch_no:\n      deprecated: false\n      name: _epoch_no\n      description: Filter for earned rewards Epoch Number\n      schema:\n        type: string\n        example: 8\n      in: query\n      required: false\n      allowEmptyValue: true\n    _any_address:\n      deprecated: false\n      name: _address\n      description: Cardano payment or staking address in bech32 format\n      schema:\n        type: string\n        example: stake_test1uqd2nz8ugrn6kwkflvmt9he8dr966dszfmm5lt66qdmn28qt4wff9\n      in: query\n      required: true\n      allowEmptyValue: false\n    _address:\n      deprecated: false\n      name: _address\n      description: Cardano payment address in bech32 format\n      schema:\n        type: string\n        example: addr_test1qzrxlwtmf4zzqndw6trwlgmyhnk8hncdx9w6ls9vvgy4xa0am5at75hv9zravxzwf5wlalxqm4jlr6u8qkp4t2unmdpsjvpe2n\n      in: query\n      required: true\n      allowEmptyValue: false\n    _address_assets:\n      deprecated: false\n      name: _address\n      description: Cardano payment address in bech32 format\n      schema:\n        type: string\n        example: addr_test1qphcrpt99pu2g2pwv32k8xqxa86pqswv2sa4tqefvruyfzeg3292mxuf3kq7nysjumlxjrlsfn9tp85r0l54l29x3qcsxxn580\n      in: query\n      required: true\n      allowEmptyValue: false\n    _stake_address:\n      deprecated: false\n      name: _stake_address\n      description: Cardano staking address (reward account) in bech32 format\n      schema:\n        type: string\n        example: stake_test1uzs5rxys8qy5jnr9g0mkj860ms5n92nrykmrgyumpf2ytmsejj4m6\n      in: query\n      required: true\n      allowEmptyValue: false\n    _asset_policy:\n      deprecated: false\n      name: _asset_policy\n      description: Asset Policy ID in hexadecimal format (hex)\n      schema:\n        type: string\n        example: 065270479316f1d92e00f7f9f095ebeaac9d009c878dc35ce36d3404\n      in: query\n      required: true\n      allowEmptyValue: false\n    _asset_name:\n      deprecated: false\n      name: _asset_name\n      description: Asset Name in hexadecimal format (hex), empty asset name returns royalties\n      schema:\n        type: string\n        example: \"433374\"\n      in: query\n      required: false\n      allowEmptyValue: true\n    _history:\n      deprecated: false\n      name: _history\n      description: Include all historical transactions, setting to false includes only the non-empty ones\n      schema:\n        type: boolean\n        example: \"false\"\n      in: query\n      required: false\n      allowEmptyValue: false\n    _include_next_epoch:\n      deprecated: false\n      name: _history\n      description: Include information about nearing but not yet started epoch, to get access to active stake snapshot information if available\n      schema:\n        type: boolean\n        example: \"false\"\n      in: query\n      required: false\n      allowEmptyValue: true\n    _pool_bech32:\n      deprecated: false\n      name: _pool_bech32\n      description: Pool ID in bech32 format\n      schema:\n        type: string\n        example: pool1leml52hm4fcp3hhe4zye08qz27llhj7d339p3gs0tl85cstx59q\n      in: query\n      required: true\n      allowEmptyValue: false\n    _pool_bech32_optional:\n      deprecated: false\n      name: _pool_bech32\n      description: Pool ID in bech32 format (optional)\n      schema:\n        type: string\n        example: pool1leml52hm4fcp3hhe4zye08qz27llhj7d339p3gs0tl85cstx59q\n      in: query\n      required: false\n      allowEmptyValue: true\n    _script_hash:\n      deprecated: false\n      name: _script_hash\n      description: Script hash in hexadecimal format (hex)\n      schema:\n        type: string\n        example: f758cf422ca0cbed7d9d6fad1eb5a3c70537d62e661ad450dd2a3810\n      in: query\n      required: true\n      allowEmptyValue: false\n  requestBodies:\n    block_hashes:\n      content:\n        application/json:\n          schema:\n            required:\n              - _block_hashes\n            type: object\n            properties:\n              _block_hashes:\n                format: text\n                type: array\n                items:\n                  $ref: \"#/components/schemas/blocks/items/properties/hash\"\n            example:\n              _block_hashes:\n                - a4504e2495ed03b48be36676f430c54dca0769d29f72ebf18d493abf42d2167b\n                - 8e7a6206d2b21ae4f26e7e09353fadae17f838a63d095c2be51acbd16e9b7716\n                - 1baaf7812ed48e663adb9eeaa68fe25034e5e30b4f8e56cc8600cac5e9d42ce7\n    payment_addresses:\n      content:\n        application/json:\n          schema:\n            required:\n              - _addresses\n            type: object\n            properties:\n              _addresses:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano payment address(es) in bech32 format\n            example:\n              _addresses:\n                - addr_test1vpfwv0ezc5g8a4mkku8hhy3y3vp92t7s3ul8g778g5yegsgalc6gc\n                - addr_test1vqneq3v0dqh3x3muv6ee3lt8e5729xymnxuavx6tndcjc2cv24ef9\n    address_txs:\n      content:\n        application/json:\n          schema:\n            required:\n              - _addresses\n            type: object\n            properties:\n              _addresses:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano payment address(es) in bech32 format\n              _after_block_height:\n                format: integer\n                type: integer\n                description: Only fetch information after specific block height\n            example:\n              _addresses:\n                - addr_test1vpfwv0ezc5g8a4mkku8hhy3y3vp92t7s3ul8g778g5yegsgalc6gc\n                - addr_test1vqneq3v0dqh3x3muv6ee3lt8e5729xymnxuavx6tndcjc2cv24ef9\n              _after_block_height: 40356\n    stake_addresses_with_epoch_no:\n      content:\n        application/json:\n          schema:\n            required:\n              - _stake_addresses\n            type: object\n            properties:\n              _stake_addresses:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano stake address(es) in bech32 format\n              _epoch_no:\n                format: integer\n                type: integer\n                description: Only fetch information for a specific epoch\n            example:\n              _stake_addresses:\n                - stake_test1upv7n2x0lxepkyx8ux2gjt74ecaa39tjgaccxl6hw5fwzngpzf5zt\n                - stake_test1up6wqzrw2h9vvjy5zfkjn0dwtymy5r29zyhf8fyhm6fat9c2am5hl\n              _epoch_no: 11\n    stake_addresses:\n      content:\n        application/json:\n          schema:\n            required:\n              - _stake_addresses\n            type: object\n            properties:\n              _stake_addresses:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano stake address(es) in bech32 format\n            example:\n              _stake_addresses:\n                - stake_test1upv7n2x0lxepkyx8ux2gjt74ecaa39tjgaccxl6hw5fwzngpzf5zt\n                - stake_test1up6wqzrw2h9vvjy5zfkjn0dwtymy5r29zyhf8fyhm6fat9c2am5hl\n    credential_txs:\n      content:\n        application/json:\n          schema:\n            required:\n              - _payment_credentials\n            type: object\n            properties:\n              _payment_credentials:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano payment credential(s) in hex format\n              _after_block_height:\n                format: integer\n                type: integer\n                description: Only fetch information after specific block height\n            example:\n              _payment_credentials:\n                - 33c378cee41b2e15ac848f7f6f1d2f78155ab12d93b713de898d855f\n                - 52e63f22c5107ed776b70f7b92248b02552fd08f3e747bc745099441\n              _after_block_height: 40356\n    tx_ids:\n      content:\n        application/json:\n          schema:\n            required:\n              - _tx_hashes\n            type: object\n            properties:\n              _tx_hashes:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano Transaction hashes\n            example:\n              _tx_hashes:\n                - f1592b29b79ae85d753913dd25644c60925a4a0683979faa33832fead4b4bd9c\n                - 206f6da5b0b0de45605a95f5ce7e172be9674550f7dde3838c45cbf24bab8b00\n    txbin:\n      content:\n        application/cbor:\n          schema:\n            type: string\n            format: binary\n            example: f1592b29b79ae85d753913dd25644c60925a4a0683979faa33832fead4b4bd9c\n    pool_ids:\n      content:\n        application/json:\n          schema:\n            required:\n              - _pool_bech32_ids\n            type: object\n            properties:\n              _pool_bech32_ids:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano pool IDs (bech32 format)\n            example:\n              _pool_bech32_ids:\n                - pool1p90428kec03mjdya3k4gv5d20w7lmed7ca0snknef5j977l3y8l\n                - pool1wwh3k3ldzujdvgxllfwlnnkxyheafkacqlufnvpr77n5q72f9hw\n                - pool1p835jxsj8py5n34lrgk6fvpgpxxvh585qm8dzvp7ups37vdet5a\n    pool_ids_optional:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              _pool_bech32_ids:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano pool IDs (bech32 format)\n            example:\n              _pool_bech32_ids:\n                - pool1p90428kec03mjdya3k4gv5d20w7lmed7ca0snknef5j977l3y8l\n                - pool1wwh3k3ldzujdvgxllfwlnnkxyheafkacqlufnvpr77n5q72f9hw\n                - pool1p835jxsj8py5n34lrgk6fvpgpxxvh585qm8dzvp7ups37vdet5a\n    datum_hashes:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              _datum_hashes:\n                format: text\n                type: array\n                items:\n                  type: string\n                description: Array of Cardano datum hashes\n            example:\n              _datum_hashes:\n                  - 6181b3dc623cd8812caf027a3507e9b3095388a7cf3db65983e1fddd3a84c88c\n                  - f8ae55ff89e1f5366f23e16bcaf2073252337b96031a02d79e41d653b5f0a978\n    asset_list:\n      content:\n        application/json:\n          schema:\n            required:\n              - _asset_list\n            type: object\n            properties:\n              _asset_list:\n                format: text\n                type: array\n                description: Array of array of policy ID and asset names (hex)\n                items:\n                  type: array\n                  items:\n                    type: string\n            example:\n              _asset_list:\n                - ['065270479316f1d92e00f7f9f095ebeaac9d009c878dc35ce36d3404','433374']\n                - ['189e2c53985411addb8df0f3e09f70e343da69f06746c408aba672a8','15fc257714a51769e192761d674db2ee2e80137428e522f9b914debb5f785301']\n  securitySchemes: {}\n  schemas:\n    tip:\n      type: array\n      items:\n        properties:\n          hash:\n            $ref: \"#/components/schemas/blocks/items/properties/hash\"\n          epoch_no:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_no\"\n          abs_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/abs_slot\"\n          epoch_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_slot\"\n          block_no:\n            $ref: \"#/components/schemas/blocks/items/properties/block_height\"\n          block_time:\n            $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n    genesis:\n      type: array\n      items:\n        properties:\n          networkmagic:\n            type: string\n            example: 764824073\n            description: Unique network identifier for chain\n          networkid:\n            type: string\n            example: Mainnet\n            description: Network ID used at various CLI identification to distinguish between Mainnet and other networks\n          epochlength:\n            type: string\n            example: 432000\n            description: Number of slots in an epoch\n          slotlength:\n            type: string\n            example: 1\n            description: Duration of a single slot (in seconds)\n          maxlovelacesupply:\n            type: string\n            example: 45000000000000000\n            description: Maximum smallest units (lovelaces) supply for the blockchain\n          systemstart:\n            type: integer\n            description: UNIX timestamp of the first block (genesis) on chain\n            example: 1506203091\n          activeslotcoeff:\n            type: string\n            example: 0.05\n            description: \"Active Slot Co-Efficient (f) - determines the _probability_ of number of slots in epoch that are expected to have blocks (so mainnet, this would be: 432000 * 0.05 = 21600 estimated blocks)\"\n          slotsperkesperiod:\n            type: string\n            example: 129600\n            description: Number of slots that represent a single KES period (a unit used for validation of KES key evolutions)\n          maxkesrevolutions:\n            type: string\n            example: 62\n            description: Number of KES key evolutions that will automatically occur before a KES (hot) key is expired. This parameter is for security of a pool, in case an operator had access to his hot(online) machine compromised\n          securityparam:\n            type: string\n            example: 2160\n            description: A unit (k) used to divide epochs to determine stability window (used in security checks like ensuring atleast 1 block was created in 3*k/f period, or to finalize next epoch's nonce at 4*k/f slots before end of epoch)\n          updatequorum:\n            type: string\n            example: 5\n            description: Number of BFT members that need to approve (via vote) a Protocol Update Proposal\n          alonzogenesis:\n            type: string\n            example: '{\\\"lovelacePerUTxOWord\\\":34482,\\\"executionPrices\\\":{\\\"prSteps\\\":{\\\"numerator\\\":721,\\\"denominator\\\":10000000},...'\n            description: A JSON dump of Alonzo Genesis\n    totals:\n      type: array\n      items:\n        properties:\n          epoch_no:\n            type: integer\n            description: Epoch number\n            example: 294\n          circulation:\n            type: string\n            description: Circulating UTxOs for given epoch (in lovelaces)\n            example: 32081169442642320\n          treasury:\n            type: string\n            description: Funds in treasury for given epoch (in lovelaces)\n            example: 637024173474141\n          reward:\n            type: string\n            description: Rewards accumulated as of given epoch (in lovelaces)\n            example: 506871250479840\n          supply:\n            type: string\n            description: Total Active Supply (sum of treasury funds, rewards, UTxOs, deposits and fees) for given epoch (in lovelaces)\n            example: 33228495612391330\n          reserves:\n            type: string\n            description: Total Reserves yet to be unlocked on chain\n            example: 11771504387608670\n    pool_list:\n      type: array\n      items:\n        properties:\n          pool_id_bech32:\n            type: string\n            nullable: true\n            description: Bech32 representation of pool ID\n            example: pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt\n          ticker:\n            type: string\n            nullable: true\n            description: Pool ticker\n            example: JAZZ\n    pool_history_info:\n      type: array\n      items:\n        type: object\n        properties:\n          epoch_no:\n            type: integer\n            description: Epoch for which the pool history data is shown\n            example: 312\n          active_stake:\n            type: string\n            description: Amount of delegated stake to this pool at the time of epoch snapshot (in lovelaces)\n            example: \"31235800000\"\n          active_stake_pct:\n            type: number\n            description: Active stake for the pool, expressed as a percentage of total active stake on network\n            example: 13.512182543475783\n          saturation_pct:\n            type: number\n            description: Saturation percentage of a pool at the time of snapshot (2 decimals)\n            example: 45.32\n          block_cnt:\n            type: integer\n            nullable: true\n            description: Number of blocks pool created in that epoch\n            example: 14\n          delegator_cnt:\n            type: integer\n            description: Number of delegators to the pool for that epoch snapshot\n            example: 1432\n          margin:\n            type: number\n            description: Margin (decimal format)\n            example: 0.125\n          fixed_cost:\n            type: string\n            description: Pool fixed cost per epoch (in lovelaces)\n            example: \"340000000\"\n          pool_fees:\n            type: string\n            description: Total amount of fees earned by pool owners in that epoch (in lovelaces)\n            example: \"123327382\"\n          deleg_rewards:\n            type: string\n            description: Total amount of rewards earned by delegators in that epoch (in lovelaces)\n            example: \"123456789123\"\n          epoch_ros:\n            type: number\n            description: Annualized ROS (return on staking) for delegators for this epoch\n            example: 3.000340466\n    pool_info:\n      type: array\n      items:\n        type: object\n        properties:\n          pool_id_bech32:\n            type: string\n            description: Pool ID (bech32 format)\n            example: pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\n          pool_id_hex:\n            type: string\n            description: Pool ID (Hex format)\n            example: a532904ca60e13e88437b58e7c6ff66b8d5e7ec8d3f4b9e4be7820ec\n          active_epoch_no:\n            $ref: \"#/components/schemas/pool_updates/items/properties/active_epoch_no\"\n          vrf_key_hash:\n            type: string\n            description: Pool VRF key hash\n            example: 25efdad1bc12944d38e4e3c26c43565bec84973a812737b163b289e87d0d5ed3\n          margin:\n            type: number\n            description: Margin (decimal format)\n            example: 0.1\n          fixed_cost:\n            type: string\n            description: Pool fixed cost per epoch\n            example: \"500000000\"\n          pledge:\n            type: string\n            description: Pool pledge in lovelace\n            example: \"64000000000000\"\n          reward_addr:\n            type: string\n            description: Pool reward address\n            example: stake1uy6yzwsxxc28lfms0qmpxvyz9a7y770rtcqx9y96m42cttqwvp4m5\n          owners:\n            type: array\n            items:\n              type: string\n              description: Pool (co)owner address\n              example: stake1u8088wvudd7dp3rxl0v9xgng8r3j50s65ge3l3jvgd94keqfm3nv3\n          relays:\n            type: array\n            items:\n              type: object\n              properties:\n                dns:\n                  type: string\n                  nullable: true\n                  description: DNS name of the relay (nullable)\n                  example: relays-new.cardano-mainnet.iohk.io\n                srv:\n                  type: string\n                  nullable: true\n                  description: DNS service name of the relay (nullable)\n                  example: biostakingpool3.hopto.org\n                ipv4:\n                  type: string\n                  nullable: true\n                  description: IPv4 address of the relay (nullable)\n                  example: \"54.220.20.40\"\n                ipv6:\n                  type: string\n                  nullable: true\n                  description: IPv6 address of the relay (nullable)\n                  example: 2604:ed40:1000:1711:6082:78ff:fe0c:ebf\n                port:\n                  type: number\n                  nullable: true\n                  description: Port number of the relay (nullable)\n                  example: 6000\n          meta_url:\n            type: string\n            description: Pool metadata URL\n            nullable: true\n            example: https://pools.iohk.io/IOGP.json\n          meta_hash:\n            type: string\n            description: Pool metadata hash\n            nullable: true\n            example: 37eb004c0dd8a221ac3598ca1c6d6257fb5207ae9857b7c163ae0f39259d6cc0\n          meta_json:\n            type: object\n            nullable: true\n            properties:\n              name:\n                type: string\n                description: Pool name\n                example: Input Output Global (IOHK) - Private\n              ticker:\n                type: string\n                description: Pool ticker\n                example: IOGP\n              homepage:\n                type: string\n                description: Pool homepage URL\n                example: https://iohk.io\n              description:\n                type: string\n                description: Pool description\n                example: Our mission is to provide economic identity to the billions of people who lack it. IOHK will not use the IOHK ticker.\n          pool_status:\n            type: string\n            description: Pool status\n            enum: [\"registered\", \"retiring\", \"retired\"]\n            example: registered\n          retiring_epoch:\n            type: integer\n            description: Announced retiring epoch (nullable)\n            example: null\n            nullable: true\n          op_cert:\n            type: string\n            nullable: true\n            description: Pool latest operational certificate hash\n            example: 37eb004c0dd8a221ac3598ca1c6d6257fb5207ae9857b7c163ae0f39259d6cc0\n          op_cert_counter:\n            type: integer\n            nullable: true\n            description: Pool latest operational certificate counter value\n            example: 8\n          active_stake:\n            type: string\n            nullable: true\n            description: Pool active stake (will be null post epoch transition until dbsync calculation is complete)\n            example: \"64328627680963\"\n          sigma:\n            type: number\n            nullable: true\n            description: Pool relative active stake share\n            example: 0.0034839235\n          block_count:\n            type: integer\n            nullable: true\n            description: Total pool blocks on chain\n            example: 4509\n          live_pledge:\n            type: string\n            nullable: true\n            description: Summary of account balance for all pool owner's\n            example: \"64328594406327\"\n          live_stake:\n            type: string\n            nullable: true\n            description: Pool live stake\n            example: \"64328627680963\"\n          live_delegators:\n            type: integer\n            description: Pool live delegator count\n            example: 5\n          live_saturation:\n            type: number\n            nullable: true\n            description: Pool live saturation (decimal format)\n            example: 94.52\n    pool_snapshot:\n      type: array\n      nullable: true\n      items:\n        type: object\n        properties:\n          snapshot:\n            type: string\n            description: Type of snapshot (\"Mark\", \"Set\" or \"Go\")\n            example: \"Mark\"\n          epoch_no:\n            type: integer\n            description: Epoch number for the snapshot entry\n            example: 324\n          nonce:\n            $ref: \"#/components/schemas/epoch_params/items/properties/nonce\"\n          pool_stake:\n            type: string\n            description: Pool's Active Stake for the given epoch\n            example: \"100000000000\"\n          active_stake:\n            type: string\n            description: Total Active Stake for the given epoch\n            example: \"103703246364020\"\n    pool_delegators:\n      type: array\n      nullable: true\n      items:\n        type: object\n        properties:\n          stake_address:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          amount:\n            type: string\n            description: Current delegator live stake (in lovelace)\n            example: 64328591517480\n          active_epoch_no:\n            type: integer\n            description: Epoch number in which the delegation becomes active\n            example: 324\n          latest_delegation_hash:\n            type: string\n            description: Latest transaction hash used for delegation by the account\n            example: 368d08fe86804d637649341d3aec4a9baa7dffa6d00f16de2ba9dba814f1c948\n    pool_delegators_history:\n      type: array\n      nullable: true\n      items:\n        type: object\n        properties:\n          stake_address:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          amount:\n            $ref: \"#/components/schemas/pool_delegators/items/properties/amount\"\n          epoch_no:\n            type: integer\n            description: Epoch number for the delegation history\n            example: 324\n    pool_blocks:\n      type: array\n      nullable: true\n      items:\n        type: object\n        properties:\n          epoch_no:\n            $ref: \"#/components/schemas/epoch_info/items/properties/epoch_no\"\n          epoch_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_slot\"\n          abs_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/abs_slot\"\n          block_height:\n            $ref: \"#/components/schemas/blocks/items/properties/block_height\"\n          block_hash:\n            $ref: \"#/components/schemas/blocks/items/properties/hash\"\n          block_time:\n            $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n    pool_updates:\n      type: array\n      items:\n        type: object\n        properties:\n          tx_hash:\n            $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n          block_time:\n            $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n          pool_id_bech32:\n            $ref: \"#/components/schemas/pool_info/items/properties/pool_id_bech32\"\n          pool_id_hex:\n            $ref: \"#/components/schemas/pool_info/items/properties/pool_id_hex\"\n          active_epoch_no:\n            type: integer\n            description: Epoch number in which the update becomes active\n            example: 324\n          vrf_key_hash:\n            $ref: \"#/components/schemas/pool_info/items/properties/vrf_key_hash\"\n          margin:\n            $ref: \"#/components/schemas/pool_info/items/properties/margin\"\n          fixed_cost:\n            $ref: \"#/components/schemas/pool_info/items/properties/fixed_cost\"\n          pledge:\n            $ref: \"#/components/schemas/pool_info/items/properties/pledge\"\n          reward_addr:\n            $ref: \"#/components/schemas/pool_info/items/properties/reward_addr\"\n          owners:\n            $ref: \"#/components/schemas/pool_info/items/properties/owners\"\n          relays:\n            $ref: \"#/components/schemas/pool_info/items/properties/relays\"\n          meta_url:\n            $ref: \"#/components/schemas/pool_info/items/properties/meta_url\"\n          meta_hash:\n            $ref: \"#/components/schemas/pool_info/items/properties/meta_hash\"\n          meta_json:\n            $ref: \"#/components/schemas/pool_info/items/properties/meta_json\"\n          pool_status:\n            $ref: \"#/components/schemas/pool_info/items/properties/pool_status\"\n          retiring_epoch:\n            $ref: \"#/components/schemas/pool_info/items/properties/retiring_epoch\"\n    pool_relays:\n      type: array\n      items:\n        type: object\n        properties:\n          pool_id_bech32:\n            $ref: \"#/components/schemas/pool_info/items/properties/pool_id_bech32\"\n          relays:\n            $ref: \"#/components/schemas/pool_info/items/properties/relays\"\n    pool_metadata:\n      type: array\n      items:\n        type: object\n        properties:\n          pool_id_bech32:\n            $ref: \"#/components/schemas/pool_info/items/properties/pool_id_bech32\"\n          meta_url:\n            $ref: \"#/components/schemas/pool_info/items/properties/meta_url\"\n          meta_hash:\n            $ref: \"#/components/schemas/pool_info/items/properties/meta_hash\"\n          meta_json:\n            $ref: \"#/components/schemas/pool_info/items/properties/meta_json\"\n    epoch_info:\n      type: array\n      items:\n        type: object\n        properties:\n          epoch_no:\n            type: integer\n            description: Epoch number\n            example: 294\n          out_sum:\n            type: string\n            description: Total output value across all transactions in epoch\n            example: 15432725054364942\n          fees:\n            type: string\n            description: Total fees incurred by transactions in epoch\n            example: 74325855210\n          tx_count:\n            type: integer\n            description: Number of transactions submitted in epoch\n            example: 357919\n          blk_count:\n            type: integer\n            description: Number of blocks created in epoch\n            example: 17321\n          start_time:\n            type: integer\n            description: UNIX timestamp of the epoch start\n            example: 1506203091\n          end_time:\n            type: integer\n            description: UNIX timestamp of the epoch end\n            example: 1506635091\n          first_block_time:\n            type: integer\n            description: UNIX timestamp of the epoch's first block\n            example: 1506635091\n          last_block_time:\n            type: integer\n            description: UNIX timestamp of the epoch's last block\n            example: 1506635091\n          active_stake:\n            type: string\n            description: Total active stake in epoch stake snapshot (null for pre-Shelley epochs)\n            example: 23395112387185880\n            nullable: true\n          total_rewards:\n            type: string\n            description: Total rewards earned in epoch (null for pre-Shelley epochs)\n            example: 252902897534230\n            nullable: true\n          avg_blk_reward:\n            type: string\n            description: Average block reward for epoch (null for pre-Shelley epochs)\n            example: 660233450\n            nullable: true\n    epoch_params:\n      type: array\n      items:\n        properties:\n          epoch_no:\n            type: integer\n            description: Epoch number\n            example: 294\n          min_fee_a:\n            type: integer\n            description: The 'a' parameter to calculate the minimum transaction fee\n            example: 44\n            nullable: true\n          min_fee_b:\n            type: integer\n            description: The 'b' parameter to calculate the minimum transaction fee\n            example: 155381\n            nullable: true\n          max_block_size:\n            type: integer\n            description: The maximum block size (in bytes)\n            example: 65536\n            nullable: true\n          max_tx_size:\n            type: integer\n            description: The maximum transaction size (in bytes)\n            example: 16384\n            nullable: true\n          max_bh_size:\n            type: integer\n            description: The maximum block header size (in bytes)\n            example: 1100\n            nullable: true\n          key_deposit:\n            type: string\n            description: The amount (in lovelace) required for a deposit to register a stake address\n            example: 2000000\n            nullable: true\n          pool_deposit:\n            type: string\n            description: The amount (in lovelace) required for a deposit to register a stake pool\n            example: 500000000\n            nullable: true\n          max_epoch:\n            type: integer\n            description: The maximum number of epochs in the future that a pool retirement is allowed to be scheduled for\n            example: 18\n            nullable: true\n          optimal_pool_count:\n            type: integer\n            description: The optimal number of stake pools\n            example: 500\n            nullable: true\n          influence:\n            type: number\n            format: double\n            description: The pledge influence on pool rewards\n            example: 0.3\n            nullable: true\n          monetary_expand_rate:\n            type: number\n            format: double\n            description: The monetary expansion rate\n            example: 0.003\n            nullable: true\n          treasury_growth_rate:\n            type: number\n            format: double\n            description: The treasury growth rate\n            example: 0.2\n            nullable: true\n          decentralisation:\n            type: number\n            format: double\n            description: The decentralisation parameter (1 fully centralised, 0 fully decentralised)\n            example: 0.1\n            nullable: true\n          extra_entropy:\n            type: string\n            description: The hash of 32-byte string of extra random-ness added into the protocol's entropy pool\n            example: d982e06fd33e7440b43cefad529b7ecafbaa255e38178ad4189a37e4ce9bf1fa\n            nullable: true\n          protocol_major:\n            type: integer\n            description: The protocol major version\n            example: 5\n            nullable: true\n          protocol_minor:\n            type: integer\n            description: The protocol minor version\n            example: 0\n            nullable: true\n          min_utxo_value:\n            type: string\n            description: The minimum value of a UTxO entry\n            example: 34482\n            nullable: true\n          min_pool_cost:\n            type: string\n            description: The minimum pool cost\n            example: 340000000\n            nullable: true\n          nonce:\n            type: string\n            description: The nonce value for this epoch\n            example: 01304ddf5613166be96fce27be110747f2c8fcb38776618ee79225ccb59b81e2\n            nullable: true\n          block_hash:\n            type: string\n            description: The hash of the first block where these parameters are valid\n            example: f9dc2a2fc3a2db09a71af007a740261de585afc9e3022b8e30535592ff4dd9e5\n          cost_models:\n            type: string\n            description: The per language cost models\n            example: null\n            nullable: true\n          price_mem:\n            type: number\n            format: double\n            description: The per word cost of script memory usage\n            example: 0.0577\n            nullable: true\n          price_step:\n            type: number\n            format: double\n            description: The cost of script execution step usage\n            example: 7.21e-05\n            nullable: true\n          max_tx_ex_mem:\n            type: number\n            description: The maximum number of execution memory allowed to be used in a single transaction\n            example: 10000000\n            nullable: true\n          max_tx_ex_steps:\n            type: number\n            description: The maximum number of execution steps allowed to be used in a single transaction\n            example: 10000000000\n            nullable: true\n          max_block_ex_mem:\n            type: number\n            description: The maximum number of execution memory allowed to be used in a single block\n            example: 50000000\n            nullable: true\n          max_block_ex_steps:\n            type: number\n            description: The maximum number of execution steps allowed to be used in a single block\n            example: 40000000000\n            nullable: true\n          max_val_size:\n            type: number\n            description: The maximum Val size\n            example: 5000\n            nullable: true\n          collateral_percent:\n            type: integer\n            description: The percentage of the tx fee which must be provided as collateral when including non-native scripts\n            example: 150\n            nullable: true\n          max_collateral_inputs:\n            type: integer\n            description: The maximum number of collateral inputs allowed in a transaction\n            example: 3\n            nullable: true\n          coins_per_utxo_size:\n            type: string\n            description: The cost per UTxO size\n            example: 34482\n            nullable: true\n    epoch_block_protocols:\n      type: array\n      items:\n        properties:\n          proto_major:\n            type: integer\n            description: Protocol major version\n            example: 6\n          proto_minor:\n            type: integer\n            description: Protocol major version\n            example: 2\n          blocks:\n            type: integer\n            description: Amount of blocks with specified major and protocol combination\n            example: 2183\n    blocks:\n      type: array\n      items:\n        type: object\n        properties:\n          hash:\n            type: string\n            description: Hash of the block\n            example: e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c\n          epoch_no:\n            type: integer\n            description: Epoch number of the block\n            example: 321\n          abs_slot:\n            type: integer\n            description: Absolute slot number of the block\n            example: 53384242\n          epoch_slot:\n            type: integer\n            description: Slot number of the block in epoch\n            example: 75442\n          block_height:\n            type: integer\n            description: Block height\n            nullable: true\n            example: 42325043\n          block_size:\n            type: integer\n            description: Block size in bytes\n            example: 79109\n          block_time:\n            type: integer\n            description: UNIX timestamp of the block\n            example: 1506635091\n          tx_count:\n            type: integer\n            description: Number of transactions in the block\n            example: 44\n          vrf_key:\n            type: string\n            description: VRF key of the block producer\n            example: \"vrf_vk1pmxyz8efuyj6eq6zkk373f28u47v06nwp5t59jr5fcmcusaazlmqhxu8k2\"\n          pool:\n            type: string\n            description: Pool ID in bech32 format (null for pre-Shelley blocks)\n            example: pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc\n            nullable: true\n          op_cert_counter:\n            type: integer\n            description: Counter value of the operational certificate used to create this block\n            example: 8\n          proto_major:\n            $ref: \"#/components/schemas/epoch_params/items/properties/protocol_major\"\n          proto_minor:\n            $ref: \"#/components/schemas/epoch_params/items/properties/protocol_minor\"\n    block_info:\n      type: array\n      items:\n        type: object\n        properties:\n          hash:\n            $ref: \"#/components/schemas/blocks/items/properties/hash\"\n          epoch_no:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_no\"\n          abs_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/abs_slot\"\n          epoch_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_slot\"\n          block_height:\n            $ref: \"#/components/schemas/blocks/items/properties/block_height\"\n          block_size:\n            $ref: \"#/components/schemas/blocks/items/properties/block_size\"\n          block_time:\n            $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n          tx_count:\n            $ref: \"#/components/schemas/blocks/items/properties/tx_count\"\n          vrf_key:\n            $ref: \"#/components/schemas/blocks/items/properties/vrf_key\"\n          op_cert:\n            type: string\n            description: Hash of the block producers' operational certificate\n            example: \"16bfc28a7127d11805fe02df67f8c3909ab7e2e2cd81b6954d90eeff1938614c\"\n          op_cert_counter:\n            $ref: \"#/components/schemas/blocks/items/properties/op_cert_counter\"\n          pool:\n            $ref: \"#/components/schemas/blocks/items/properties/pool\"\n          proto_major:\n            $ref: \"#/components/schemas/epoch_params/items/properties/protocol_major\"\n          proto_minor:\n            $ref: \"#/components/schemas/epoch_params/items/properties/protocol_minor\"\n          total_output:\n            type: string\n            description: Total output of the block (in lovelace)\n            example: 92384672389\n            nullable: true\n          total_fees:\n            type: string\n            description: Total fees of the block (in lovelace)\n            example: 2346834\n            nullable: true\n          num_confirmations:\n            type: integer\n            description: Number of confirmations for the block\n            example: 664275\n          parent_hash:\n            type: string\n            description: Hash of the parent of this block\n            example: \"16bfc28a7127d11805fe02df67f8c3909ab7e2e2cd81b6954d90eeff1938614c\"\n          child_hash:\n            type: string\n            description: Hash of the child of this block (if present)\n            example: \"a3b525ba0747ce9daa928fa28fbc680f95e6927943a1fbd6fa5394d96c9dc2fa\"\n    block_txs:\n      type: array\n      items:\n        type: object\n        properties:\n          block_hash:\n            $ref: \"#/components/schemas/blocks/items/properties/hash\"\n          tx_hashes:\n            type: array\n            items:\n              $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n    address_info:\n      type: array\n      items:\n        type: object\n        properties:\n          address:\n            $ref: \"#/components/schemas/asset_address_list/items/properties/payment_address\"\n          balance:\n            type: string\n            description: Sum of all UTxO values beloning to address\n            example: 10723473983\n          stake_address:\n            nullable: true\n            allOf:\n            - $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          script_address:\n            type: boolean\n            description: Signifies whether the address is a script address\n            example: true\n          utxo_set:\n            type: array\n            items:\n              type: object\n              properties:\n                tx_hash:\n                  $ref: \"#/components/schemas/tx_info/items/properties/outputs/items/properties/tx_hash\"\n                tx_index:\n                  $ref: \"#/components/schemas/tx_info/items/properties/outputs/items/properties/tx_index\"\n                block_height:\n                  $ref: \"#/components/schemas/blocks/items/properties/block_height\"\n                block_time:\n                  $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n                value:\n                  $ref: \"#/components/schemas/tx_info/items/properties/outputs/items/properties/value\"\n                datum_hash:\n                  $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_hash\"\n                inline_datum:\n                  $ref: \"#/components/schemas/tx_info/items/properties/outputs/items/properties/inline_datum\"\n                reference_script:\n                  $ref: \"#/components/schemas/tx_info/items/properties/outputs/items/properties/reference_script\"\n                asset_list:\n                  $ref: \"#/components/schemas/account_assets/items/properties/asset_list\"\n    address_txs:\n      type: array\n      items:\n        type: object\n        properties:\n          tx_hash:\n            $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n          epoch_no:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_no\"\n          block_height:\n            $ref: \"#/components/schemas/blocks/items/properties/block_height\"\n          block_time:\n            $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n    address_assets:\n      type: array\n      items:\n        type: object\n        properties:\n          address:\n            $ref: \"#/components/schemas/asset_address_list/items/properties/payment_address\"\n          asset_list:\n            $ref: \"#/components/schemas/account_assets/items/properties/asset_list\"\n    credential_txs:\n      $ref: \"#/components/schemas/address_txs\"\n    account_list:\n      type: array\n      items:\n        type: object\n        properties:\n          id:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n    account_info:\n      type: array\n      items:\n        type: object\n        properties:\n          stake_address:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          status:\n            type: string\n            description: Stake address status\n            enum: [\"registered\", \"not registered\"]\n            example: registered\n          delegated_pool:\n            $ref: \"#/components/schemas/pool_list/items/properties/pool_id_bech32\"\n          total_balance:\n            type: string\n            description: Total balance of the account including UTxO, rewards and MIRs (in lovelace)\n            example: 207116800428\n          utxo:\n            type: string\n            description: Total UTxO balance of the account\n            example: 162764177131\n          rewards:\n            type: string\n            description: Total rewards earned by the account\n            example: 56457728047\n          withdrawals:\n            type: string\n            description: Total rewards withdrawn by the account\n            example: 12105104750\n          rewards_available:\n            type: string\n            description: Total rewards available for withdawal\n            example: 44352623297\n          reserves:\n            type: string\n            description: Total reserves MIR value of the account\n            example: \"0\"\n          treasury:\n            type: string\n            description: Total treasury MIR value of the account\n            example: \"0\"\n    account_rewards:\n      type: array\n      items:\n        type: object\n        properties:\n          stake_address:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          rewards:\n            type: array\n            items:\n              type: object\n              properties:\n                earned_epoch:\n                  $ref: \"#/components/schemas/epoch_info/items/properties/epoch_no\"\n                spendable_epoch:\n                  $ref: \"#/components/schemas/epoch_info/items/properties/epoch_no\"\n                amount:\n                  type: string\n                  description: Amount of rewards earned (in lovelace)\n                type:\n                  type: string\n                  description: The source of the rewards\n                  enum: [member, leader, treasury, reserves]\n                  example: member\n                pool_id:\n                  $ref: \"#/components/schemas/pool_list/items/properties/pool_id_bech32\"\n    account_updates:\n      type: array\n      items:\n        type: object\n        properties:\n          stake_address:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          updates:\n            type: array\n            items:\n              type: object\n              properties:\n                action_type:\n                  type: string\n                  description: Type of certificate submitted\n                  enum: [\"registration\", \"delegation\", \"withdrawal\", \"deregistration\"]\n                  example: \"registration\"\n                tx_hash:\n                  $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n                epoch_no:\n                  $ref: \"#/components/schemas/blocks/items/properties/epoch_no\"\n                epoch_slot:\n                  $ref: \"#/components/schemas/blocks/items/properties/epoch_slot\"\n                absolute_slot:\n                  $ref: \"#/components/schemas/blocks/items/properties/abs_slot\"\n                block_time:\n                  $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n    account_addresses:\n      type: array\n      items:\n        type: object\n        properties:\n          stake_address:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          addresses:\n            type: array\n            items:\n              $ref: \"#/components/schemas/asset_address_list/items/properties/payment_address\"\n    account_assets:\n      type: array\n      items:\n        type: object\n        properties:\n          stake_address:\n            $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n          asset_list:\n            type: array\n            items:\n              type: object\n              properties:\n                policy_id:\n                  $ref: \"#/components/schemas/asset_info/items/properties/policy_id\"\n                asset_name:\n                  $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n                fingerprint:\n                  $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n                decimals:\n                  type: integer\n                  description: Asset decimals\n                  example: 6\n                quantity:\n                  type: string\n                  description: Asset quantity owned by account\n                  example: 990000\n    account_history:\n      type: array\n      items:\n        properties:\n          stake_address:\n            type: string\n            description: Cardano staking address (reward account) in bech32 format\n            example: stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz\n          history:\n            type: array\n            items:\n              type: object\n              properties:\n                pool_id:\n                  type: string\n                  description: Bech32 representation of pool ID\n                  example: pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt\n                epoch_no:\n                  type: integer\n                  description: Epoch number\n                  example: 301\n                active_stake:\n                  type: string\n                  description: Active stake amount (in lovelaces)\n                  example: 682334162\n    tx_info:\n      type: array\n      items:\n        type: object\n        properties:\n          tx_hash:\n            type: string\n            description: Hash identifier of the transaction\n            example: f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e\n          block_hash:\n            $ref: \"#/components/schemas/blocks/items/properties/hash\"\n          block_height:\n            $ref: \"#/components/schemas/blocks/items/properties/block_height\"\n          epoch_no:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_no\"\n          epoch_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_slot\"\n          absolute_slot:\n            $ref: \"#/components/schemas/blocks/items/properties/abs_slot\"\n          tx_timestamp:\n            type: integer\n            description: UNIX timestamp of the transaction\n            example: 1506635091\n          tx_block_index:\n            type: integer\n            description: Index of transaction within block\n            example: 6\n          tx_size:\n            type: integer\n            description: Size in bytes of transaction\n            example: 391\n          total_output:\n            type: string\n            description: Total sum of all transaction outputs (in lovelaces)\n            example: 157832856\n          fee:\n            type: string\n            description: Total Transaction fee (in lovelaces)\n            example: 172761\n          deposit:\n            type: string\n            description: Total Deposits included in transaction (for example, if it is registering a pool/key)\n            example: 0\n          invalid_before:\n            type: string\n            description: Slot before which transaction cannot be validated (if supplied, else null)\n            nullable: true\n          invalid_after:\n            type: string\n            description: Slot after which transaction cannot be validated\n            example: 42332172\n            nullable: true\n          collateral_inputs:\n            $ref: \"#/components/schemas/tx_info/items/properties/outputs\"\n            description: An array of collateral inputs needed for smart contracts in case of contract failure\n          collateral_output:\n            $ref: \"#/components/schemas/tx_info/items/properties/outputs/items\"\n            description: A collateral output for change if the smart contract fails to execute and collateral inputs are spent. (CIP-40)\n            nullable: true\n          reference_inputs:\n            $ref: \"#/components/schemas/tx_info/items/properties/outputs\"\n            description: An array of reference inputs. A reference input allows looking at an output without spending it. (CIP-31)\n          inputs:\n            $ref: \"#/components/schemas/tx_info/items/properties/outputs\"\n            description: An array of UTxO inputs spent in the transaction\n          outputs:\n            type: array\n            description: An array of UTxO outputs created by the transaction\n            items:\n              type: object\n              properties:\n                payment_addr:\n                  type: object\n                  properties:\n                    bech32:\n                      type: string\n                      description: A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned\n                      example: addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw\n                    cred:\n                      type: string\n                      description: Payment credential\n                      example: de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794\n                stake_addr:\n                  nullable: true\n                  allOf:\n                  - $ref: \"#/components/schemas/account_history/items/properties/stake_address\"\n                tx_hash:\n                  type: string\n                  description: Hash of transaction for UTxO\n                  example: f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e\n                tx_index:\n                  type: integer\n                  description: Index of UTxO in the transaction \n                  example: 0\n                value:\n                  type: string\n                  description: Total sum of ADA on the UTxO\n                  example: 157832856\n                datum_hash:\n                  type: string\n                  nullable: true\n                  description: Hash of datum (if any) connected to UTxO \n                  example: 30c16dd243324cf9d90ffcf211b9e0f2117a7dc28d17e85927dfe2af3328e5c9\n                inline_datum:\n                  type: object\n                  nullable: true\n                  description: Allows datums to be attached to UTxO (CIP-32)\n                  properties:\n                    bytes:\n                      type: string\n                      description: Datum bytes (hex)\n                      example: 19029a\n                    value:\n                      type: object\n                      description: Value (json)\n                      example: { \"int\": 666 }\n                reference_script:\n                  type: object\n                  nullable: true\n                  description: Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)\n                  properties:\n                    hash:\n                      type: string\n                      description: Hash of referenced script\n                      example: 67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656\n                    size:\n                      type: integer\n                      description: Size in bytes\n                      example: 14\n                    type:\n                      type: string\n                      description: Type of script\n                      example: plutusV1\n                    bytes:\n                      type: string\n                      description: Script bytes (hex)\n                      example: 4e4d01000033222220051200120011\n                    value:\n                      type: object\n                      nullable: true\n                      description: Value (json)\n                      example: null\n                asset_list:\n                  type: array\n                  nullable: true\n                  description: An array of assets on the UTxO\n                  items:\n                    properties:\n                      policy_id:\n                        $ref: \"#/components/schemas/asset_info/items/properties/policy_id\"\n                      asset_name:\n                        $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n                      fingerprint:\n                        $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n                      decimals:\n                        $ref: \"#/components/schemas/account_assets/items/properties/asset_list/items/properties/decimals\"\n                      quantity:\n                        type: string\n                        description: Quantity of assets on the UTxO\n                        example: 1\n          withdrawals:\n            type: array\n            description: Array of withdrawals with-in a transaction\n            nullable: true\n            items:\n              type: object\n              properties:\n                amount:\n                  type: string\n                  description: Withdrawal amount (in lovelaces)\n                  example: 9845162\n                stake_addr:\n                  type: string\n                  description: A Cardano staking address (reward account, bech32 encoded)\n                  example: stake1uxggf4shfvpghcangm67ky0q4zlc3xn7gezy0auhxczu3pslm9wrj\n          assets_minted:\n            type: array\n            description: Array of minted assets with-in a transaction\n            nullable: true\n            items:\n              properties:\n                policy_id:\n                  $ref: \"#/components/schemas/asset_info/items/properties/policy_id\"\n                asset_name:\n                  $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n                fingerprint:\n                  $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n                decimals:\n                  $ref: \"#/components/schemas/account_assets/items/properties/asset_list/items/properties/decimals\"\n                quantity:\n                  type: string\n                  description: Quantity of minted assets (negative on burn)\n                  example: 1\n          metadata:\n            $ref: \"#/components/schemas/tx_metadata/items/properties/metadata\"\n          certificates:\n            type: array\n            nullable: true\n            description: Certificates present with-in a transaction (if any)\n            items:\n              properties:\n                index:\n                  type: integer\n                  nullable: true\n                  description: Certificate index\n                  example: 0\n                type:\n                  type: string\n                  description: Type of certificate (could be delegation, stake_registration, stake_deregistraion, pool_update, pool_retire, param_proposal, reserve_MIR, treasury_MIR)\n                  example: delegation\n                info:\n                  type: object\n                  description: A JSON array containing information from the certificate\n                  nullable: true\n                  example:\n                    {\n                      \"stake_address\": \"stake1uxggf4shfvpghcangm67ky0q4zlc3xn7gezy0auhxczu3pslm9wrj\",\n                      \"pool\": \"pool1k53pf4wzn263c08e3wr3gttndfecm9f4uzekgctcx947vt7fh2p\",\n                    }\n          native_scripts:\n            type: array\n            nullable: true\n            description: Native scripts present in a transaction (if any)\n            items:\n              properties:\n                script_hash:\n                  $ref: \"#/components/schemas/plutus_script_list/items/properties/script_hash\"\n                script_json:\n                  type: object\n                  description: JSON representation of the timelock script (null for other script types)\n                  example:\n                    {\n                      \"type\": \"all\",\n                      \"scripts\":\n                        [\n                          {\n                            \"type\": \"sig\",\n                            \"keyHash\": \"a96da581c39549aeda81f539ac3940ac0cb53657e774ca7e68f15ed9\",\n                          },\n                          {\n                            \"type\": \"sig\",\n                            \"keyHash\": \"ccfcb3fed004562be1354c837a4a4b9f4b1c2b6705229efeedd12d4d\",\n                          },\n                          {\n                            \"type\": \"sig\",\n                            \"keyHash\": \"74fcd61aecebe36aa6b6cd4314027282fa4b41c3ce8af17d9b77d0d1\",\n                          },\n                        ],\n                    }\n          plutus_contracts:\n            type: array\n            description: Plutus contracts present in transaction (if any)\n            items:\n              properties:\n                address:\n                  type: string\n                  description: Plutus script address\n                  example: addr1w999n67e86jn6xal07pzxtrmqynspgx0fwmcmpua4wc6yzsxpljz3\n                script_hash:\n                  $ref: \"#/components/schemas/plutus_script_list/items/properties/script_hash\"\n                bytecode:\n                  type: string\n                  description: CBOR-encoded Plutus script data\n                  example: \n                size:\n                  type: integer\n                  description: The size of the CBOR serialised script (in bytes)\n                  example: 234895\n                valid_contract:\n                  type: boolean\n                  description: True if the contract is valid or there is no contract\n                  example: true\n                input:\n                  type: object\n                  properties:\n                    redeemer:\n                      type: object\n                      properties:\n                        purpose:\n                          $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/purpose\"\n                        fee:\n                          $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/fee\"\n                        unit:\n                          type: object\n                          properties:\n                            steps:\n                              $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/unit_steps\"\n                            mem:\n                              $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/unit_mem\"\n                        datum:\n                          type: object\n                          properties:\n                            hash:\n                              $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_hash\"\n                            value:\n                              $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_value\"\n                    datum:\n                      type: object\n                      properties:\n                        hash:\n                          $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_hash\"\n                        value:\n                          $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_value\"\n                output:\n                  type: object\n                  nullable: true\n                  properties:\n                    hash:\n                      $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_hash\"\n                    value:\n                      $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_value\"\n    tx_utxos:\n      type: array\n      items:\n        properties:\n          tx_hash:\n            $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n          inputs:\n            $ref: \"#/components/schemas/tx_info/items/properties/inputs\"\n          outputs:\n            $ref: \"#/components/schemas/tx_info/items/properties/outputs\"\n    tx_metadata:\n      type: array\n      nullable: true\n      items:\n        properties:\n          tx_hash:\n            $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n          metadata:\n            type: object\n            nullable: true\n            description: A JSON array containing details about metadata within transaction\n            example:\n              {\n                \"721\":\n                  {\n                    \"version\": 1,\n                    \"copyright\": \"...\",\n                    \"publisher\": [\"p...o\"],\n                    \"4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d\":\n                      {},\n                  },\n              }\n    tx_status:\n      type: array\n      items:\n        properties:\n          tx_hash:\n            $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n          num_confirmations:\n            type: integer\n            description: Number of block confirmations\n            example: 17\n            nullable: true\n    tx_metalabels:\n      type: array\n      items:\n        properties:\n          key:\n            type: string\n            description: A distinct known metalabel\n            example: \"721\"\n    asset_list:\n      type: array\n      description: Array of policy IDs and asset names\n      items:\n        type: object\n        properties:\n          policy_id:\n            $ref: \"#/components/schemas/asset_info/items/properties/policy_id\"\n          asset_name:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n          fingerprint:\n            $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n    asset_token_registry:\n      type: array\n      description: An array of token registry information (registered via github) for each asset\n      items:\n        type: object\n        properties:\n          policy_id:\n            $ref: \"#/components/schemas/asset_info/items/properties/policy_id\"\n          asset_name:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n          asset_name_ascii:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name_ascii\"\n          ticker:\n            $ref: \"#/components/schemas/asset_info/items/properties/token_registry_metadata/properties/ticker\"\n          description:\n            $ref: \"#/components/schemas/asset_info/items/properties/token_registry_metadata/properties/description\"\n          url:\n            $ref: \"#/components/schemas/asset_info/items/properties/token_registry_metadata/properties/url\"\n          decimals:\n            $ref: \"#/components/schemas/asset_info/items/properties/token_registry_metadata/properties/decimals\"\n          logo:\n            $ref: \"#/components/schemas/asset_info/items/properties/token_registry_metadata/properties/logo\"\n    asset_address_list:\n      type: array\n      description: An array of payment addresses holding the given token (including balances)\n      items:\n        properties:\n          payment_address:\n            type: string\n            description: A Cardano payment/base address (bech32 encoded) for transaction's input UTxO\n            example: addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp\n          quantity:\n            type: string\n            description: Asset balance on the payment address\n            example: 23\n    asset_summary:\n      type: array\n      items:\n        properties:\n          policy_id:\n            $ref: \"#/components/schemas/asset_info/items/properties/policy_id\"\n          asset_name:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n          fingerprint:\n            $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n          total_transactions:\n            type: integer\n            description: Total number of transactions including the given asset\n            example: 89416\n          staked_wallets:\n            type: integer\n            description: Total number of registered wallets holding the given asset\n            example: 548\n          unstaked_addresses:\n            type: integer\n            description: Total number of payment addresses (not belonging to registered wallets) holding the given asset\n            example: 245\n    asset_info:\n      type: array\n      items:\n        properties:\n          policy_id:\n            type: string\n            description: Asset Policy ID (hex)\n            example: d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff\n          asset_name:\n            type: string\n            nullable: true\n            description: Asset Name (hex)\n            example: 444f4e545350414d\n          asset_name_ascii:\n            type: string\n            description: Asset Name (ASCII)\n            example: DONTSPAM\n          fingerprint:\n            type: string\n            description: The CIP14 fingerprint of the asset\n            example: asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9\n          minting_tx_hash:\n            type: string\n            description: Hash of the latest mint transaction\n            example: cb07b7e51b77079776c4a78f2daf8f14f9945d2b047da7bfcb71d7fbb9f86712\n          mint_cnt:\n            type: integer\n            description: Count of total mint transactions\n            example: 1\n          burn_cnt:\n            type: integer\n            description: Count of total burn transactions\n            example: 5\n          minting_tx_metadata:\n            allOf:\n              - $ref: \"#/components/schemas/tx_metadata/items/properties/metadata\"\n            description: Latest minting transaction metadata (aligns with CIP-25)\n          token_registry_metadata:\n            type: object\n            description: Asset metadata registered on the Cardano Token Registry\n            nullable: true\n            properties:\n              name:\n                type: string\n                example: Rackmob\n              description:\n                type: string\n                example: Metaverse Blockchain Cryptocurrency.\n              ticker:\n                type: string\n                example: MOB\n              url:\n                type: string\n                example: https://www.rackmob.com/\n              logo:\n                type: string\n                description: A PNG image file as a byte string\n                example: iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAACXBIWXMAAA7EAAAOxAGVKw4bAAADnmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc\n              decimals:\n                type: integer\n                example: 0\n          total_supply:\n            type: string\n            example: \"35000\"\n          creation_time:\n            type: integer\n            description: UNIX timestamp of the first asset mint\n            example: 1506635091\n    asset_history:\n      type: array\n      items:\n        properties:\n          policy_id:\n            $ref: \"#/components/schemas/asset_info/items/properties/policy_id\"\n          asset_name:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n          fingerprint:\n            $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n          minting_txs:\n            type: array\n            description: Array of all mint/burn transactions for an asset\n            nullable: true\n            items:\n              type: object\n              properties:\n                tx_hash:\n                  type: string\n                  description: Hash of minting/burning transaction\n                  example: e1ecc517f95715bb87681cfde2c594dbc971739f84f8bfda16170b35d63d0ddf\n                block_time:\n                  $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n                quantity:\n                  type: string\n                  description: Quantity minted/burned (negative numbers indicate burn transactions)\n                  example: \"-10\"\n                metadata:\n                  type: array\n                  description: Array of Transaction Metadata for given transaction\n                  items:\n                    $ref: \"#/components/schemas/asset_info/items/properties/minting_tx_metadata\"\n    asset_policy_info:\n      type: array\n      description: List of policy assets\n      items:\n        properties:\n          asset_name:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n          asset_name_ascii:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name_ascii\"\n          fingerprint:\n            $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n          minting_tx_metadata:\n            $ref: \"#/components/schemas/asset_info/items/properties/minting_tx_metadata\"\n          token_registry_metadata:\n            $ref: \"#/components/schemas/asset_info/items/properties/token_registry_metadata\"\n          total_supply:\n            type: string\n            example: \"35000\"\n          creation_time:\n            type: string\n            $ref: \"#/components/schemas/asset_info/items/properties/creation_time\"\n    asset_policy_list:\n      type: array\n      description: List of policy assets\n      items:\n        properties:\n          asset_name:\n            $ref: \"#/components/schemas/asset_info/items/properties/asset_name\"\n          fingerprint:\n            $ref: \"#/components/schemas/asset_info/items/properties/fingerprint\"\n          total_supply:\n            $ref: \"#/components/schemas/asset_info/items/properties/total_supply\"\n          decimals:\n            $ref: \"#/components/schemas/account_assets/items/properties/asset_list/items/properties/decimals\"\n    asset_txs:\n      type: array\n      description: An array of Tx hashes that included the given asset (latest first)\n      items:\n        properties:\n          tx_hash:\n            $ref: \"#/components/schemas/tx_info/items/properties/tx_hash\"\n          epoch_no:\n            $ref: \"#/components/schemas/blocks/items/properties/epoch_no\"\n          block_height:\n            $ref: \"#/components/schemas/blocks/items/properties/block_height\"\n          block_time:\n            $ref: \"#/components/schemas/blocks/items/properties/block_time\"\n    native_script_list:\n      type: array\n      items:\n        properties:\n          script_hash:\n            $ref: \"#/components/schemas/plutus_script_list/items/properties/script_hash\"\n          creation_tx_hash:\n            $ref: \"#/components/schemas/plutus_script_list/items/properties/creation_tx_hash\"\n          type:\n            type: string\n            description: Type of the script\n            enum: [\"timelock\", \"multisig\"]\n            example: timelock\n    plutus_script_list:\n      type: array\n      items:\n        properties:\n          script_hash:\n            type: string\n            description: Hash of a script\n            example: d8480dc869b94b80e81ec91b0abe307279311fe0e7001a9488f61ff8\n          creation_tx_hash:\n            type: string\n            description: Hash of the script creation transaction\n            example: fda6c7697009237975ffc30f36666addf4c6e2a2c6f90411a24431b700baaab1\n    script_redeemers:\n      type: array\n      items:\n        type: object\n        properties:\n          script_hash:\n            type: string\n            description: Hash of Transaction for which details are being shown\n            example: f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e\n          redeemers:\n            type: array\n            items:\n              type: object\n              properties:\n                tx_hash:\n                  type: string\n                  description: Hash of Transaction containing the redeemer\n                  example: fda6c7697009237975ffc30f36666addf4c6e2a2c6f90411a24431b700baaab1\n                tx_index:\n                  type: integer\n                  description: The index of the redeemer pointer in the transaction\n                  example: 0\n                unit_mem:\n                  description: The budget in Memory to run a script\n                  example: 520448\n                  nullable: true\n                  additionalProperties:\n                    oneOf:\n                      - type: string\n                      - type: integer\n                unit_steps:\n                  description: The budget in Cpu steps to run a script\n                  example: 211535239\n                  nullable: true\n                  additionalProperties:\n                    oneOf:\n                      - type: string\n                      - type: integer\n                fee:\n                  type: string\n                  description: The budget in fees to run a script - the fees depend on the ExUnits and the current prices\n                  example: 45282\n                purpose:\n                  type: string\n                  description: What kind of validation this redeemer is used for\n                  enum: [\"spend\", \"mint\", \"cert\", \"reward\"]\n                  example: spend\n                datum_hash:\n                  type: string\n                  description: The Hash of the Plutus Data\n                  nullable: true\n                  example: 5a595ce795815e81d22a1a522cf3987d546dc5bb016de61b002edd63a5413ec4\n                datum_value:\n                  type: object\n                  description: The actual data in json format\n                  example: { \"bytes\": \"3c33\" }\n    datum_info:\n      type: array\n      items:\n        type: object\n        properties:\n          hash:\n            $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_hash\"\n          value:\n            $ref: \"#/components/schemas/script_redeemers/items/properties/redeemers/items/properties/datum_value\"\n          bytes:\n            $ref: \"#/components/schemas/tx_info/items/properties/outputs/items/properties/inline_datum/properties/bytes\"\n  headers: {}\n  responses:\n    OK:\n      description: Success!\n    NotFound:\n      description: The server does not recognise the combination of endpoint and parameters provided\n    Unauthorized:\n      description: The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint\n    PartialContent:\n      description: The result was truncated\n    BadRequest:\n      description: The server cannot process the request due to invalid input\ntags:\n  - name: Network\n    description: Query information about the network\n    x-tag-expanded: false\n  - name: Epoch\n    description: Query epoch-specific details\n    x-tag-expanded: false\n  - name: Block\n    description: Query information about particular block on chain\n    x-tag-expanded: false\n  - name: Transactions\n    description: Query blockchain transaction details\n    x-tag-expanded: false\n  - name: Address\n    description: Query information about specific address(es)\n    x-tag-expanded: false\n  - name: Account\n    description: Query details about specific stake account addresses\n    x-tag-expanded: false\n  - name: Asset\n    description: Query Asset related informations\n    x-tag-expanded: false\n  - name: Pool\n    description: Query information about specific pools\n    x-tag-expanded: false\n  - name: Script\n    description: Query information about specific scripts (Smart Contracts)\n    x-tag-expanded: false\nsecurity: []\n",
			"canonicalURL": "/github.com/cardano-community/koios-artifacts@adf93d25d193f221adbf9fc5a81dc81f011611e4/-/blob/specs/results/koiosapi-preview.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cardano-community/koios-artifacts/blob/adf93d25d193f221adbf9fc5a81dc81f011611e4/specs/results/koiosapi-preview.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: reference type \"https://raw.githubusercontent.com/cardano-community/koios-artifacts/adf93d25d193f221adbf9fc5a81dc81f011611e4/specs/results/koiosapi-preview.yaml#/components/schemas/blocks/items/properties/epoch_no\" name conflict: \"EpochNo\""
}