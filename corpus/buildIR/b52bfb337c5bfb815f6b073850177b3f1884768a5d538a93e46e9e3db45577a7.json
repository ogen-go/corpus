{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/iSPIRT/healthstack"
		},
		"file": {
			"name": "gateway.yaml",
			"size": 0,
			"path": "hif-spec/gateway.yaml",
			"byteSize": 126852,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.5.0\n  title: Gateway\n  description: >\n    Gateway is the hub that routes/orchestrates the interaction between consent managers and Health Repositories. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing \nservers:\n  - url: https://ncg-dev.projecteka.in/gateway\n    description: Dev\ntags:\n  - name: user auth\n  - name: discovery\n  - name: link\n  - name: consent flow\n  - name: data flow\n  - name: identification\n  - name: monitoring\n  - name: sessions\n  - name: cm facing\n  - name: hiu facing\n  - name: hip facing\npaths:\n  /v0.5/care-contexts/discover:\n    post:\n      tags:\n        - discovery\n        - cm facing\n      summary: Discover patient's accounts\n      description: >\n        Request for patient care context discover, made by CM for a specific HIP. It is expected that HIP will subsequently return either zero or one patient record with (potentially masked) associated care contexts\n          1. **At least one of the verified identifier matches**\n          2. **Name (fuzzy), gender matches**\n          3. **If YoB was given, age band(+-2) matches**\n          4. **If unverified identifiers were given, one of them matches**\n          5. **If more than one patient records would be found after aforementioned steps, then patient who matches most verified and unverified identifiers would be returned.**\n          6. **If there would be still more than one patients (after ranking) error would be returned**\n          7. **Intended HIP should be able to resolve and identify results returned in the subsequent link confirmation request via the specified transactionId**\n          8. **Intended HIP should store the discovery results with transactionId and care contexts discovered for subsequent link initiation**\n          \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryRequest'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * Empty verified identifiers.\n              * Format mismatch of any of attributes.\n                | type   | Format/Allowed Values|\n                | ------- | ----------------    |\n                | gender  | M/F/O |\n                | MOBILE  | valid mobile number with proper country code |\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/care-contexts/on-discover:\n    post:\n      tags:\n        - discovery\n        - cm facing\n      summary: Response to patient's account discovery request\n      description: >\n        Result of patient care-context discovery request at HIP end. If a matching patient found with zero or more care contexts associated, it is specified as result attribute. If the prior discovery request, resulted in errors then it is specified in the error attribute. Reasons of errors can be \n          1. **more than one definitive match for the given request** \n          2. **no verified identifer was specified**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryResult'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryResult'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * Format mismatch of any of attributes.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/init:\n    post:\n      tags:\n        - link\n        - cm facing\n      summary: Link patient's care contexts\n      description: >\n        Request from CM to links care contexts associated with only one patient\n          1. **Validate account reference number and care context reference number**\n          2. **Validate transactionId in the request with discovery request entry to check whether there was a discovery\n              and were these care contexts discovered or not for a given patient**\n          3. **Before eventual link confirmation, HIP needs to authenticate the request with the patient(eg: OTP verification)**\n          4. **HIP should communicate the mode of authentication of a successful request to Consent Manager**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceRequest'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * Consent manager user id is not provided\n              * Patient reference number is not provided\n              * Care context references are not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/on-init:\n    post:\n      tags:\n        - link\n        - hip facing\n      summary: Response to patient's care context link request\n      description: >\n        Result of patient care-context link request from HIP end. This happens in context of previous discovery of patient found at HIP end, therefore the link requests ought to be in reference to the patient reference and care-context references previously returned by the HIP. The correlation of discovery and link request is maintained through the transactionId. HIP should have\n          1. **Validated transactionId in the request to check whether there was a discovery done previously, and the link request corresponds to returned patient care care context references**\n          2. **Before returning the response, HIP should have sent an authentication request to the patient(eg: OTP verification)**\n          3. **HIP should communicate the mode of authentication of a successful request**\n          4. **HIP subsequently should expect the token passed via /link/confirm against the link.referenceNumber passed in this call**\n          \n        The error section in the body, represents the potential errors that may have occurred. Possible reasons:\n          1. **Patient reference number is invalid**\n          2. **Care context reference numbers are invalid**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceResult'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceResult'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * Format mismatch of any of attributes.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/confirm:\n    post:\n      tags:\n        - link\n        - hip facing\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      summary: Token submission by Consent Manager for link confirmation\n      description: >\n        API to submit the token that was sent by HIP during the link request. \n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkConfirmationRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/LinkConfirmationRequest'\n      responses:\n        '202':\n          description: accepted\n        '400':\n          description: >\n            **Causes:**\n              * Token is not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/on-confirm:\n    post:\n      tags:\n        - link\n        - cm facing\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      summary: Token authenticated by HIP, indicating completion of linkage of care-contexts\n      description: >\n        Returns a list of linked care contexts with patient reference number.\n          1. **Validated and linked account reference number**\n          2. **Validated that the token sent from Consent Manager is same as the one generated by HIP**\n          3. **Verified that same Consent Manager which made the link request is sending the token**\n          4. **Results of unmasked linked care contexts with patient reference number**\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientLinkResult'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientLinkResult'\n      responses:\n        '202':\n          description: accepted\n        '400':\n          description: >\n            **Causes:**\n              * resp not specified\n              * atleast patient or error should be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/add-contexts:\n    post:\n      tags:\n        - link\n        - hip facing\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      summary: API for HIP initiated care-context linking for patient\n      description: >\n        API to submit care-context to CM for HIP initiated linking. The API must accompany the \"accessToken\" fetched in the users/auth process.  \n          1. subsequent usage for accessToken may be invalid if it was meant for one-time usage or if it expired\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientCareContextLinkRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientCareContextLinkRequest'\n      responses:\n        '202':\n          description: accepted\n        '400':\n          description: >\n            **Causes:**\n              * required information not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/on-add-contexts:\n    post:\n      tags:\n        - link\n        - cm facing\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      summary: callback API for HIP initiated patient linking /link/add-context\n      description: >\n        If the accessToken is valid for purpose of linking, and specified details provided, CM will send \"acknoweldgement.status\" as SUCCESS. If any error occcurred, for example invalid token, or other required patient or care-context information not provided, then \"error\" attribute conveys so. \n          1. **accessToken must be valid and must be for the purpose of linking**\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientCareContextLinkResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientCareContextLinkResponse'\n      responses:\n        '202':\n          description: accepted\n        '400':\n          description: >\n            **Causes:**\n              * resp not specified\n              * atleast acknowledgement or error should be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/cm/request:\n    post:\n      tags:\n        - data flow\n        - hiu facing\n      summary: Health information data request\n      description: >\n        Request for Health information against a consent id. CM would generate a transactionId against each consent and pass it as trnasaction context / correlation id to the HIP and also return the same to HIU via /on-request. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIRequest'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            **Causes:**\n              * Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Token is invalid or Link has expired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/cm/on-request:\n    post:\n      tags:\n        - data flow\n        - cm facing\n      summary: Health information data request\n      description: >\n        Callback API for acknowledgement of Health information request of HIU. CM calls this API when it has validated the Health Information request given the consent id. Either the **hiRequest** or **error** would need to be specified. If the health info request was valid, then the ***hiRequest.transactionId*** specifies the transaction context against which HIP would send over the data. \n        Possible cases of errors are\n          1. **Invalid consent artefact id**\n          2. **Consent has expired**\n          3. **Date ranges are invalid**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIUHealthInformationRequestResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIUHealthInformationRequestResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            **Causes:**\n              * Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Token is invalid or Link has expired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consent-requests/init:\n    post:\n      tags:\n        - consent flow\n        - hiu facing\n      summary: Create consent request\n      description: Creates a consent request to get data about a patient by HIU user.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentRequest'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description:  >\n            **Causes:**\n              * Invalid data sent \n              * Required attributes not mentioned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consent-requests/on-init:\n    post:\n      tags:\n        - consent flow\n        - cm facing\n      summary: Response to consent request\n      description: |\n        Result of consent request creation for a patient. **consentRequest.id** represents the consentrequest id created by CM. The result must contain either **consentRequest** or the **error** caused. <br/>\n          Reasons for error may be\n          * Invalid references (e.g patient id, hiu id), purpose, hiTypes, ranges, persmission\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentRequestInitResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentRequestInitResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description:  >\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consent-requests/status:\n    post:\n      tags:\n        - consent flow\n        - hiu facing\n      summary: Get consent request status\n      description: Get status of consent request done previously\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentRequestStatusRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentRequestStatusRequest'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consent-requests/on-status:\n    post:\n      tags:\n        - consent flow\n        - cm facing\n      summary: Result of consent request status\n      description: |\n        Result of consent request done previously. Status of request can be GRANTED,  DENIED, EXPIRED. If the request was GRANTED, then \n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIUConsentRequestStatus'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIUConsentRequestStatus'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/hip/notify:\n    post:\n      tags:\n        - consent flow\n        - cm facing\n      summary: Consent notification\n      description: >\n        Notification of consents to health information providers consent request granted, consent revoked, consent expired. Only the GRANTED, REVOKED and EXPIRED status notifications will be sent to HIP.\n          1. If consent is granted, status=GRANTED, then consentDetail contains the consent artefact details and signature is available. \n          2. If consent is revoked, then status=REVOKED, and consentId specifes which consent artefact is revoked. \n          3. If the consent has expired, then status=EXPIRED, and consentId specifies which consent artefact has expired. Note, this is also responsibility of the HIP to keep track of consent expiry. Any data request on expired consent artefact must not be done. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIPConsentNotification'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIPConsentNotification'\n      responses:\n        '202':\n          description: Request Accepted\n        '401':\n          description: >\n            **Causes:**\n              * Invalid/Expired/Empty token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/hip/on-notify:\n    post:\n      tags:\n        - consent flow\n        - hip facing\n      summary: Consent notification\n      description: >\n        This API is called by HIP as acknowledgement to notification of consents, in cases of consent revocation and expiration. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIPConsentNotificationResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIPConsentNotificationResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '401':\n          description: >\n            **Causes:**\n              * Invalid/Expired/Empty token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/hiu/notify:\n    post:\n      tags:\n        - consent flow\n        - cm facing\n      summary: Consent notification\n      description: |\n       Health information user will get notified about the consent request granted or denied, consent revoked, consent expired. \n       1. For consent request grant, status=GRANTED, consentRequestId=<consent-request-id>, and consentArtefacts is an array of generated consent artefact Ids.\n       2. For consent request expiry, status=EXPIRED, consentRequestId=<consent-request-id>\n       3. For consent request denied, status=DENIED, consentRequestId=<consent-request-id>\n       4. For consent revocation, status=REVOKED, consentArtefacts is an array of revoked consent artefact ids\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/X-HIU-ID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIUConsentNotificationEvent'\n      responses:\n        '202':\n          description: Request Accepted.\n        '401':\n          description: >\n            **Causes:**\n              * Invalid/Expired/Empty token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/hiu/on-notify:\n    post:\n      tags:\n        - consent flow\n        - hiu facing\n      summary: Consent notification\n      description: |\n        This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED.\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/X-CM-ID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIUConsentNotificationResponse'\n      responses:\n        '202':\n          description: Request Accepted.\n        '401':\n          description: >\n            **Causes:**\n              * Invalid/Expired/Empty token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/fetch:\n    post:\n      tags:\n        - consent flow\n        - hiu facing\n      summary: Get consent artefact\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentFetchRequest'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description:  >\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/on-fetch:\n    post:\n      tags:\n        - consent flow\n        - cm facing\n      summary: Result of fetch request for a consent artefact\n      description: |\n       Must contain either consentDetail or error. Possible reason of errors are \n       1. consentId passed through /fetch is invalid\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentArtefactResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentArtefactResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description:  >\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/notify:\n    post:\n      tags:\n        - data flow\n        - hip facing\n        - hiu facing\n      summary: Notifications corresponding to events during data flow\n      description: |\n        API called by HIU and HIP during data-transfer. \n        1. HIP on transfer of data would send **sessionStatus** - one of [TRANSFERRED, FAILED]\n        2. HIP would also send **hiStatus** for each *careContextReference* - on of [DELIVERED, ERRORED]\n        3. HIU on receipt of data would send **sessionStatus** - one of [TRANSFERRED, FAILED]. For example, FAILED when if data was not sent or if invalid data was sent\n        4. HIU would also send **hiStatus** for each *careContextReference* - one of [OK, ERRORED] \n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/X-CM-ID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HealthInformationNotification'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HealthInformationNotification'\n      responses:\n        '204':\n          description: Notification is Accepted\n        '400':\n          description: >\n            **Causes:**\n              * Invalid Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/heartbeat:\n    get:\n      tags:\n        - monitoring\n      summary: Get consent request status\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HeartbeatResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/HeartbeatResponse'\n  /v0.5/sessions:\n    post:\n      tags:\n        - sessions\n      summary: Get access token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SessionRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/SessionRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SessionResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SessionResponse'\n        '404':\n          description: >\n            **Causes:**\n              * Invalid consent request id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  >\n            **Causes:**\n              * Invalid client Id or secret.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/hip/request:\n    post:\n      tags:\n        - data flow\n        - cm facing\n      summary: Health information data request\n      description: >\n        API called by CM to request Health information from HIP against a validated consent artefact. The transactionId is the correlation id that HIP should use use when pushing data to the **dataPushUrl**. \n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/X-HIP-ID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIPHIRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIPHIRequest'\n      responses:\n        '202':\n          description: Request accepted.\n        '400':\n          description: >\n            **Causes:**\n              * Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Token is invalid or Link has expired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/hip/on-request:\n    post:\n      tags:\n        - data flow\n        - hip facing\n      summary: Health information data request\n      description: >\n        API called by HIP to acknowledge Health information request receipt. Either the **hiRequest** or **error** must be specified. **hiRequest** element returns the same transactionId as before with a status indicating that the request is acknowledged.  \n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/X-CM-ID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIPHealthInformationRequestAcknowledgement'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIPHealthInformationRequestAcknowledgement'\n      responses:\n        '202':\n          description: Request accepted.\n        '400':\n          description: >\n            **Causes:**\n              * Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Token is invalid or Link has expired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/.well-known/openid-configuration:\n    get:\n      tags:\n        - sessions\n      summary: Get openid configuration\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpenIdConfiguration'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/OpenIdConfiguration'\n        '404':\n          description: >\n            **Causes:**\n              * Invalid consent request id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/certs:\n    get:\n      tags:\n        - sessions\n      summary: Get certs for JWT verification\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Certs'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Certs'\n        '404':\n          description: >\n            **Causes:**\n              * Invalid consent request id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/patients/find:\n    post:\n      tags:\n        - identification\n        - hiu facing\n      summary: Identify a patient by her consent-manager user-id\n      description: >\n        This API is meant for identify to patient given her consent-manager-user-id\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientIdentificationRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientIdentificationRequest'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            Invalid request, required attributes not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/patients/on-find:\n    post:\n      tags:\n        - identification\n        - cm facing\n      summary: Identification result for a consent-manager user-id\n      description: |\n        If a patient is found then patient.name contains the patients name. \n        Otherwise, patient is not provided, and possibly error is raised for invalid requests\n        Note in addition to the \"Authorization\" header, one of the following headers must be specified\n        1. specify **X-HIU-ID** if the requester is HIU (identified from requester.id)\n        2. specify **X-HIP-ID** if the requester is HIP (identified from requester.id)\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientIdentificationResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientIdentificationResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            Invalid request, required attributes not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /v0.5/users/auth/fetch-modes:\n    post:\n      tags:\n        - user auth\n        - hip facing\n      summary: Get a patient's authentication modes by her consent-manager user-id relevant to specified purpose\n      description: >\n        This API is meant for identify supported authentication modes for a patient given a specific purpose\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthModeQueryRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthModeQueryRequest'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            Invalid request, required attributes not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/users/auth/on-fetch-modes:\n    post:\n      tags:\n        - user auth\n        - cm facing\n      summary: Identification result for a consent-manager user-id\n      description: |\n        If a patient is found then **auth** attribute contains the supported modes for the specified purpose. \n        Otherwise, error is raised for invalid requests or for non-existent id.\n        Note in addition to the \"Authorization\" header, one of the following headers must be specified\n        1. **X-HIU-ID** if the requester is HIU (identified from /auth/fetch-modes requester.id)\n        2. **X-HIP-ID** if the requester is HIP (identified from /auth/fetch-modes requester.id)\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthModeQueryResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthModeQueryResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: >\n            Invalid request, required attributes not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/users/auth/init:\n    post:\n      tags:\n        - user auth\n        - hip facing\n      summary: Initialize authentication from HIP\n      description: >\n        This API is called by HIPs to initiate authentication of users. A transactionId is retuned by the corresponding callback API for confirmation of user auth.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthInitRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthInitRequest'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * patient id is not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'  \n  /v0.5/users/auth/on-init:\n    post:\n      tags:\n        - user auth\n        - cm facing\n      summary: Response to user authentication initialization from HIP\n      description: >\n        If the patient's id is valid, CM will return a transactionId as initialization of user auth. If the request is valid, then 'auth.mode' will convey how the authentication should be done. The authentication can be mediated or direct. For example, if the auth.modeis DIRECT, then HIP/HIU is not expected to send over anything as part of /auth/confirm, rather way for CM to notify them when patient approves so. For other mediated authentication modes, HIP or HIU is epected to send over eiter codes (OTP or similar) or demographic info as part of the /users/auth/confirm request accompanied with the transactionId. Note, for DIRECT authentication, CM will subsequently call /users/auth/notify call (Not spec'd yet)\n        \n          1. **auth.mode** conveys whats the mode of authentication is, and what is expected from HIP/HIU in the subsequent /auth/confirm API call. Possible values, MOBILE_OTP - for OTP sent to mobile,  AADHAAR_OTP - if an OTP was sent as part of Aadhaar authentication. DEMOGRAPHICS - If it is expected that the HIP/HIU sends over demographi details in the /auth/confirm API call. \n          2. **meta.expiry** conveys the expiry time of the token and the authentication session\n          3. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both. \n          \n        The error section in the body, represents the potential errors that may have occurred. Possible reasons:\n          1. **Patient id is invalid**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthInitResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthInitResponse'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * required information not provided\n              * neither authInit nor error specified \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'  \n  /v0.5/users/auth/confirm:\n    post:\n      tags:\n        - user auth\n        - hip facing\n      summary: Confirmation request sending token, otp or other authentication details from HIP/HIU for confirmation\n      description: >\n        This API is called by HIP/HIUs to confirm authentication of users. The transactionId returned by the previous callback API /users/auth/on-init must be sent. If Authentication is successful the callback API will send an \"access token\" for subsequent purpose specific API calls. Note only **credential.authCode** or **credential.demographic** should be sent\n          1. demographic details are only required for  demographic auth as of now. \n          2. demographic details are required only in MEDIATED cases and if the **auth.mode** so demands. e.g. if **auth.mode** is DEMOGRAPHICS. Usually for demographic authentication, the name, gender and DOB must be exactly as specified in User Account.\n          3. demographic.identifier is optional, however maybe required if authentication so mandates. \n          4. credential.authCode is required for other MEDIATED authentication like MOBILE_OTP, AADHAAR_OTP. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-CM-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthConfirmRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthConfirmRequest'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * transaction id is not provided or invalid\n              * token or other auth confirmation details not provided or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'  \n  /v0.5/users/auth/on-confirm:\n    post:\n      tags:\n        - user auth\n        - cm facing\n      summary: Request sending token, otp or other authentication details from HIP for confirmation\n      description: >\n        This API is called by HIPs to confirm authentication of users. The transactionId retuned by the previous /uses/auth/on-init API must be used along with necessary \"mode\" specific details.\n        \n          1. **auth.accessToken** - is specific to the purpose mentioned in the /auth/init. This token needs to be used for initiating the intended action. For example for HIP initiated linking of care-contexts\n          2. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both.\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthConfirmResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthConfirmResponse'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: >\n            **Causes:**\n              * required details not provided\n              * neither auth nor error specified \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: >\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: >\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'                \n  \ncomponents:\n  parameters:\n    authorization:\n      name: Authorization\n      in: header\n      required: true\n      description: Access token which was issued after successful login with gateway auth server.\n      schema:\n        type: string\n    X-HIP-ID:\n      name: X-HIP-ID\n      in: header\n      required: true\n      description: Identifier of the health information provider to which the request was intended.\n      schema:\n        type: string\n    X-HIU-ID:\n      name: X-HIU-ID\n      in: header\n      required: true\n      description: Identifier of the health information user to which the request was intended.\n      schema:\n        type: string\n    X-CM-ID:\n      name: X-CM-ID\n      in: header\n      required: true\n      description: Suffix of the consent manager to which the request was intended.\n      schema:\n        type: string\n    LinkRefNumber:\n      name: linkRefNumber\n      in: path\n      required: true\n      description: Reference number for the link request made earlier.\n      schema:\n        $ref: '#/components/schemas/UuidSchema'\n    ConsentRequestId:\n      name: consentRequestId\n      in: path\n      required: true\n      description: Consent request's identifier\n      schema:\n        type: string\n        format: uuid\n    ConsentId:\n      name: consentId\n      in: path\n      required: true\n      description: Consent request's identifier\n      schema:\n        type: string\n        format: uuid\n  schemas:\n    TimestampSchema:\n      type: string\n      format: date-time\n      description: Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ\n    UuidSchema:\n      type: string\n      format: uuid\n      example: a1s2c932-2f70-3ds3-a3b5-2sfd46b12a18d\n    PatientDiscoveryRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - patient\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request. \n          example: \"499a5a4a-7dda-4f20-9b67-e24589627061\"\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          type: string\n          format: uuid\n          description: correlation-Id for patient discovery and subsequent care context linkage\n        patient:\n          type: object\n          required:\n            - id\n            - verifiedIdentifiers\n            - name\n            - gender\n            - yearOfBirth\n          properties:\n            id:\n              type: string\n              example: <patient-id>@<consent-manager-id>\n              description: Identifier of patient at consent manager\n            verifiedIdentifiers:\n              type: array\n              items:\n                $ref: '#/components/schemas/Identifier'\n              xml:\n                name: verifiedIdentifiers\n                wrapped: true\n            unverifiedIdentifiers:\n              type: array\n              items:\n                $ref: '#/components/schemas/Identifier'\n              xml:\n                name: unverifiedIdentifiers\n                wrapped: true\n            name:\n              type: string\n              example: \"chandler bing\"\n            gender:\n              $ref: '#/components/schemas/PatientGender'\n            yearOfBirth:\n              type: integer\n              example: 2000\n      xml:\n        name: PatientDiscoveryRequest\n    PatientGender:\n      type: string\n      enum: [M, F, O, U]\n    PatientDiscoveryResult:\n      type: object\n      required:\n        - requestId\n        - transactionId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          type: string\n          format: uuid\n        patient:\n          $ref: '#/components/schemas/PatientRepresentation'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n      xml:\n        name: PatientDiscoveryResult\n    ErrorResponse:\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/Error'\n      xml:\n        name: ErrorResponse\n    Identifier:\n      type: object\n      required:\n        - type\n        - value\n      properties:\n        type:\n          $ref: '#/components/schemas/IdentifierType'\n        value:\n          type: string\n          example: \"+919800083232\"\n      xml:\n        name: Identifier\n    IdentifierType:\n      type: string\n      enum: [MOBILE, MR]\n    PatientDiscoveryResponse:\n      type: object\n      properties:\n        patient:\n          $ref: '#/components/schemas/PatientRepresentation'\n      xml:\n        name: PatientDiscoveryResponse\n    PatientRepresentation:\n      type: object\n      required:\n        - referenceNumber\n        - display\n        - careContexts\n      properties:\n        referenceNumber:\n          type: string\n        display:\n          type: string\n        careContexts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CareContextRepresentation'\n        matchedBy:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentifierType'\n      xml:\n        name: Patient\n    CareContext:\n      type: object\n      required:\n        - referenceNumber\n      properties:\n        referenceNumber:\n          type: string\n      xml:\n        name: Tag\n    CareContextRepresentation:\n      type: object\n      required:\n        - referenceNumber\n        - display\n      properties:\n        referenceNumber:\n          type: string\n        display:\n          type: string\n      xml:\n        name: Tag\n    PatientLinkReferenceRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - patient\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          type: string\n          format: uuid\n        patient:\n          type: object\n          required:\n            - id\n            - referenceNumber\n            - careContexts\n          properties:\n            id:\n              type: string\n              example: hinapatel79@ncg\n              description: Identifier of patient at consent manager\n            referenceNumber:\n              type: string\n              example: TMH-PUID-001\n            careContexts:\n              type: array\n              items:\n                $ref: '#/components/schemas/CareContext'\n              xml:\n                name: careContexts\n                wrapped: true\n      xml:\n        name: PatientLinkReferenceRequest\n    \n      \n    PatientLinkRequest:\n      type: object\n      properties:\n        token:\n          type: string\n    LinkConfirmationRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - confirmation\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        confirmation:\n          type: object\n          required:\n            - linkRefNumber\n            - token\n          properties:\n            linkRefNumber:\n              type: string\n            token:\n              type: string\n    PatientLinkReferenceResult:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          $ref: '#/components/schemas/UuidSchema'\n        link:\n          type: object\n          required:\n           - referenceNumber\n           - authenticationType\n          properties:\n            referenceNumber:\n              type: string\n            authenticationType:\n              type: string\n              enum: ['DIRECT', 'MEDIATED']\n            meta:\n              $ref: '#/components/schemas/Meta'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    PatientLinkReferenceResponse:\n      type: object\n      properties:\n        link:\n          type: object\n          properties:\n            referenceNumber:\n              type: string\n            authenticationType:\n              type: string\n              enum: ['DIRECT', 'MEDIATED']\n            meta:\n              $ref: '#/components/schemas/Meta'\n    Meta:\n      type: object\n      required:\n        - communicationMedium\n      properties:\n        communicationMedium:\n          type: string\n          enum: ['M0BILE', 'EMAIL']\n        communicationHint:\n          type: string\n        communicationExpiry:\n          type: string\n          example: \"2019-12-30T12:01:55Z\"\n      xml:\n        name: Meta\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          enum: [1000, 10001]\n        message:\n          type: string\n      xml:\n        name: Error\n    PatientLinkResponse:\n      type: object\n      properties:\n        patient:\n          type: object\n          properties:\n            referenceNumber:\n              type: string\n            display:\n              type: string\n            careContexts:\n              type: array\n              items:\n                $ref: '#/components/schemas/CareContextRepresentation'\n    PatientLinkResult:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        patient:\n          type: object\n          required:\n            - referenceNumber\n            - display\n            - careContexts\n          properties:\n            referenceNumber:\n              type: string\n            display:\n              type: string\n            careContexts:\n              type: array\n              items:\n                $ref: '#/components/schemas/CareContextRepresentation'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    HealthInformationRequest:\n      type: object\n      required:\n        - requestId\n        - consent\n        - dataPushUrl\n        - keyMaterial\n        - dateRange\n      properties:\n        requestId:\n          $ref: '#/components/schemas/UuidSchema'\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consent:\n          $ref: '#/components/schemas/consent'\n        dateRange:\n          $ref: '#/components/schemas/dateRange'\n        dataPushUrl:\n          type: string\n        keyMaterial:\n          $ref: '#/components/schemas/keyMaterial'\n    HIRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - hiRequest\n      properties:\n        requestId:\n          $ref: '#/components/schemas/UuidSchema'\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        hiRequest:\n          type: object\n          required:\n            - consent\n            - dataPushUrl\n            - keyMaterial\n            - dateRange\n          properties:\n            consent:\n              $ref: '#/components/schemas/consent'\n            dateRange:\n              $ref: '#/components/schemas/dateRange'\n            dataPushUrl:\n              type: string\n            keyMaterial:\n              $ref: '#/components/schemas/keyMaterial'\n    consent:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    dateRange:\n      type: object\n      required:\n        - from\n        - to\n      properties:\n        from:\n          type: string\n          format: date-time\n        to:\n          type: string\n          format: date-time\n    HIPConsentNotification:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - notification\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        notification:\n          type: object\n          required:\n            - status\n            - consentId\n            - consentDetail\n            - signature\n          properties:\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentId:\n              type: string\n              format: uuid\n            consentDetail:\n              type: object\n              required:\n                - consentId\n                - createdAt\n                - patient\n                - careContexts\n                - purpose\n                - hip\n                - hiTypes\n                - permission\n                - consentManager\n              properties:\n                schemaVersion:\n                  type: string\n                  format: string\n                consentId:\n                  type: string\n                  format: uuid\n                createdAt:\n                  type: string\n                  format: date-time\n                patient:\n                  $ref: '#/components/schemas/ConsentManagerPatientID'\n                careContexts:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - patientReference\n                      - careContextReference\n                    properties:\n                      patientReference:\n                        type: string\n                        example: batman@tmh\n                      careContextReference:\n                        type: string\n                        example: Episode1\n                purpose:\n                  $ref: '#/components/schemas/UsePurpose'\n                hip:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: hip\n                consentManager:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationReference'\n                    - xml:\n                        name: consentManager\n                hiTypes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/HITypeEnum'\n                permission:\n                  $ref: '#/components/schemas/Permission'\n            signature:\n              type: string\n              example: Signature of CM as defined in W3C standards; Base64 encoded\n    ConsentArtefact:\n      type: object\n      required:\n        - status\n        - consentId\n      properties:\n        status:\n          $ref: '#/components/schemas/ConsentStatus'\n        consentId:\n          type: string\n          format: uuid\n        consentDetail:\n          type: object\n          properties:\n            schemaVersion:\n              type: string\n              format: string\n            consentId:\n              type: string\n              format: uuid\n            createdAt:\n              type: string\n              format: date-time\n            patient:\n              $ref: '#/components/schemas/ConsentManagerPatientID'\n            careContexts:\n              type: array\n              items:\n                type: object\n                required:\n                  - patientReference\n                  - careContextReference\n                properties:\n                  patientReference:\n                    type: string\n                    example: batman@tmh\n                  careContextReference:\n                    type: string\n                    example: Episode1\n            purpose:\n              $ref: '#/components/schemas/UsePurpose'\n            hip:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hip\n            consentManager:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationReference'\n                - xml:\n                    name: consentManager\n            hiTypes:\n              type: array\n              items:\n                $ref: '#/components/schemas/HITypeEnum'\n            permission:\n              $ref: '#/components/schemas/Permission'\n        signature:\n          type: string\n          example: Signature of CM as defined in W3C standards; Base64 encoded\n    HITypeEnum:\n      type: string\n      enum:\n        - OPConsultation\n        - Prescription\n        - DischargeSummary\n        - DiagnosticReport\n      xml:\n        name: HIType\n    ConsentStatus:\n      type: string\n      enum:\n        - GRANTED\n        - EXPIRED\n        - DENIED\n        - REQUESTED\n        - REVOKED\n    ConsentManagerPatientID:\n      type: object\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n          format: <user-id>@<ncg-id>\n          example: batman@ncg\n    UsePurpose:\n      type: object\n      required:\n        - text\n        - code\n      properties:\n        text:\n          type: string\n        code:\n          type: string\n          description: From the fixed set, documented at refUri\n        refUri:\n          type: string\n          format: uri\n    Permission:\n      type: object\n      required:\n        - accessMode\n        - dateRange\n        - dataEraseAt\n        - frequency\n      properties:\n        accessMode:\n          type: string\n          enum: [VIEW, STORE, QUERY, STREAM]\n        dateRange:\n          type: object\n          required:\n            - from\n            - to\n          properties:\n            from:\n              type: string\n              format: date-time\n            to:\n              type: string\n              format: date-time\n        dataEraseAt:\n          type: string\n          format: date-time\n        frequency:\n          type: object\n          properties:\n            unit:\n              type: string\n              enum: [HOUR, WEEK, DAY, MONTH, YEAR]\n            value:\n              type: integer\n            repeats:\n              type: integer\n      xml:\n        name: Permission\n    OrganizationRepresentation:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n      xml:\n        name: OrganizationResponse\n    OrganizationReference:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n      xml:\n        name: OrganizationReference\n    keyMaterial:\n      type: object\n      required:\n        - cryptoAlg\n        - curve\n        - dhPublicKey\n        - nonce\n      properties:\n        cryptoAlg:\n          type: string\n          format: string\n          example: ECDH\n        curve:\n          type: string\n          format: string\n          example: Curve25519\n        dhPublicKey:\n          $ref: '#/components/schemas/keyObject'\n        nonce:\n          type: string\n          format: 32 byte string\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n    keyObject:\n      type: object\n      required:\n        - expiry\n        - parameters\n        - keyValue\n      properties:\n        expiry:\n          type: string\n          format: date-time\n        parameters:\n          type: string\n          format: string\n          example: Curve25519/32byte random key\n        keyValue:\n          type: string\n          format: string\n    ConsentRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - consent\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request. \n          example: \"499a5a4a-7dda-4f20-9b67-e24589627061\"\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consent:\n          type: object\n          required:\n            - purpose\n            - patient\n            - hiu\n            - requester\n            - hiTypes\n            - permission\n            - consentNotificationUrl\n          properties:\n            purpose:\n              $ref: '#/components/schemas/UsePurpose'\n            patient:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/ConsentManagerPatientID'\n                - xml:\n                    name: patient\n            hip:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hip\n            hiu:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hiu\n            requester:\n              $ref: '#/components/schemas/Requester'\n            hiTypes:\n              type: array\n              items:\n                $ref: '#/components/schemas/HITypeEnum'\n            permission:\n              $ref: '#/components/schemas/Permission'\n    Requester:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: Dr. Manju\n        identifier:\n          type: object\n          required:\n            - type\n            - value\n          properties:\n            type: \n              type: string\n              example: REGNO\n            value:\n              type: string\n              example: \"MH1001\"\n            system:\n              type: string\n              example: https://www.mciindia.org\n    HINotification:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request. \n          example: \"499a5a4a-7dda-4f20-9b67-e24589627061\"\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          $ref: '#/components/schemas/UuidSchema'\n        consentId:\n          $ref: '#/components/schemas/UuidSchema'\n        doneAt:\n          type: string\n          format: date-time\n        notifier:\n          type: object\n          properties:\n            type:\n              type: string\n              enum: [HIU, HIP]\n            id:\n              type: string\n              example: tmh\n        statusNotification:\n          type: object\n          properties:\n            sessionStatus:\n              type: string\n              enum: [TRANSFERRED, FAILED]\n            hipId:\n              type: string\n              example: max\n            statusResponses:\n              type: array\n              items:\n                type: object\n                properties:\n                  careContextReference:\n                    type: string\n                  hiStatus:\n                    type: string\n                    enum: [DELIVERED, OK, ERRORED]\n                    example: OK\n                  description:\n                    type: string\n    HealthInformationNotification:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - notification\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request. \n          example: \"499a5a4a-7dda-4f20-9b67-e24589627061\"\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        notification:\n          type: object\n          required:\n            - consentId\n            - transactionId\n            - doneAt\n            - notifier\n            - statusNotification\n          properties:\n            consentId:\n              $ref: '#/components/schemas/UuidSchema'\n            transactionId:\n              $ref: '#/components/schemas/UuidSchema'\n            doneAt:\n              type: string\n              format: date-time\n            notifier:\n              type: object\n              required:\n                - type\n                - id\n              properties:\n                type:\n                  type: string\n                  enum: [HIU, HIP]\n                id:\n                  type: string\n                  example: tmh\n            statusNotification:\n              type: object\n              required:\n                - sessionStatus\n                - hipId\n              properties:\n                sessionStatus:\n                  type: string\n                  enum: [TRANSFERRED, FAILED]\n                hipId:\n                  type: string\n                  example: max\n                statusResponses:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - careContextReference\n                      - hiStatus\n                    properties:\n                      careContextReference:\n                        type: string\n                      hiStatus:\n                        type: string\n                        enum: [DELIVERED, OK, ERRORED]\n                        example: OK\n                      description:\n                        type: string\n    ConsentArtefactReference:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          example: '<consent-artefact-id>'\n    HIUConsentNotification:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consentRequestId:\n          type: string\n          example: '<consent-request-id>'\n        status:\n          $ref: '#/components/schemas/ConsentStatus'\n        consentArtefacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentArtefactReference'\n    HIUConsentNotificationEvent:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - notification\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        notification:\n          type: object\n          required:\n            - status\n            - consentRequestId\n          properties:\n            consentRequestId:\n              type: string\n              example: '<consent-request-id>'\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentArtefacts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConsentArtefactReference'\n              description: if the status is GRANTED or REVOKED, then the consentArtefact references (Ids) must be specified.\n    HeartbeatResponse:\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n          xml:\n            attribute: true\n        status:\n          type: string\n          enum:\n            - UP\n            - DOWN\n        error:\n          $ref: '#/components/schemas/Error'\n      xml:\n        name: HeartbeatResponse\n    SessionRequest:\n      type: object\n      required:\n        - clientId\n        - clientSecret\n        - grantType\n      properties:\n        clientId:\n          type: string\n        clientSecret:\n          type: string\n        grantType:\n          type: string\n          enum: [ClientCredentials,RefreshToken]\n    SessionResponse:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          example: eyJhbGciOiJSUzI1Ni.IsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrVVp.2MXJQMjRyYXN1UW9wU2lWbkdZQUZIVFowYVZGVWpYNXFLMnNibTk0In0\n        expiresIn:\n          type: integer\n          example: 1800\n          description: In Minutes\n        refreshExpiresIn:\n          type: integer\n          example: 1800\n          description: In Minutes\n        refreshToken:\n          type: string\n          example: eyJhbGciOiJSUzI1Ni.IsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrVVp.2MXJQMjRyYXN1UW9wU2lWbkdZQUZIVFowYVZGVWpYNXFLMnNibTk0In0\n        tokenType:\n          type: string\n          example: bearer\n    OpenIdConfiguration:\n      type: object\n      properties:\n        jwks_uri:\n          type: string\n          format: uri\n          example: \"https://ncg-gateway/certs\"\n    Certs:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/CertificateOrKeyGetSchema'\n    CertificateOrKeyGetSchema:\n      type: object\n      properties:\n        e:\n          type: string\n        kid:\n          type: string\n        kty:\n          type: string\n        n:\n          type: string\n        use:\n          type: string\n        x5c:\n          type: array\n          items:\n            description: A PKIX certificate [RFC5280]\n            type: string\n        x5t:\n          type: string\n        x5t#S256:\n          type: string\n        alg:\n          type: string\n    ConsentArtefactResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consent:\n          type: object\n          required:\n            - status\n            - consentDetail\n            - signature\n          properties:\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentDetail:\n              type: object\n              required:\n                - consentId\n                - createdAt\n                - patient\n                - careContexts\n                - purpose\n                - hip\n                - hiu\n                - consentManager\n                - hiTypes\n                - permission\n              properties:\n                schemaVersion:\n                  type: string\n                  format: string\n                consentId:\n                  type: string\n                  format: uuid\n                createdAt:\n                  type: string\n                  format: date-time\n                patient:\n                  $ref: '#/components/schemas/ConsentManagerPatientID'\n                careContexts:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - patientReference\n                      - careContextReference\n                    properties:\n                      patientReference:\n                        type: string\n                        example: batman@tmh\n                      careContextReference:\n                        type: string\n                        example: Episode1\n                purpose:\n                  $ref: '#/components/schemas/UsePurpose'\n                hip:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: hip\n                hiu:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: hiu\n                consentManager:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: consentManager\n                requester:\n                  $ref: '#/components/schemas/Requester'\n                hiTypes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/HITypeEnum'\n                permission:\n                  $ref: '#/components/schemas/Permission'\n            signature:\n              type: string\n              example: Signature of CM as defined in W3C standards; Base64 encoded\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    ConsentArtefactRepresentation:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/ConsentStatus'\n        consentDetail:\n          type: object\n          properties:\n            schemaVersion:\n              type: string\n              format: string\n            consentId:\n              type: string\n              format: uuid\n            createdAt:\n              type: string\n              format: date-time\n            patient:\n              $ref: '#/components/schemas/ConsentManagerPatientID'\n            careContexts:\n              type: array\n              items:\n                type: object\n                required:\n                  - patientReference\n                  - careContextReference\n                properties:\n                  patientReference:\n                    type: string\n                    example: batman@tmh\n                  careContextReference:\n                    type: string\n                    example: Episode1\n            purpose:\n              $ref: '#/components/schemas/UsePurpose'\n            hip:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hip\n            hiu:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: hiu\n            consentManager:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRepresentation'\n                - xml:\n                    name: consentManager\n            requester:\n              $ref: '#/components/schemas/Requester'\n            hiTypes:\n              type: array\n              items:\n                $ref: '#/components/schemas/HITypeEnum'\n            permission:\n              $ref: '#/components/schemas/Permission'\n        signature:\n          type: string\n          example: Signature of CM as defined in W3C standards; Base64 encoded\n    HealthInformationRequestResponse:\n        type: object\n        required:\n          - transactionId\n        properties:\n          transactionId:\n            $ref: '#/components/schemas/UuidSchema'\n    HIUHealthInformationRequestResponse:\n        type: object\n        required:\n          - requestId\n          - timestamp\n          - resp\n        properties:\n          requestId:\n            $ref: '#/components/schemas/UuidSchema'\n          timestamp:\n            $ref: '#/components/schemas/TimestampSchema'\n          hiRequest:\n            type: object\n            required:\n              - transactionId\n              - sessionStatus\n            properties:\n              transactionId:\n                $ref: '#/components/schemas/UuidSchema'\n              sessionStatus:\n                type: string\n                enum:\n                - REQUESTED\n                - ACKNOWLEDGED\n          error: \n            $ref: '#/components/schemas/Error'\n          resp:\n            $ref: '#/components/schemas/RequestReference'\n    HIPHealthInformationRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - consent\n        - dataPushUrl\n        - keyMaterial\n        - dateRange\n      properties:\n        requestId:\n          $ref: '#/components/schemas/UuidSchema'\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          $ref: '#/components/schemas/UuidSchema'\n        consent:\n          $ref: '#/components/schemas/consent'\n        dateRange:\n          $ref: '#/components/schemas/dateRange'\n        dataPushUrl:\n          type: string\n        keyMaterial:\n          $ref: '#/components/schemas/keyMaterial'\n    HIPHIRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - hiRequest\n      properties:\n        requestId:\n          $ref: '#/components/schemas/UuidSchema'\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          $ref: '#/components/schemas/UuidSchema'\n        hiRequest: \n          type: object\n          required:\n            - consent\n            - dataPushUrl\n            - keyMaterial\n            - dateRange\n          properties:\n            consent:\n              $ref: '#/components/schemas/consent'\n            dateRange:\n              $ref: '#/components/schemas/dateRange'\n            dataPushUrl:\n              type: string\n            keyMaterial:\n              $ref: '#/components/schemas/keyMaterial'\n    ConsentRequestInitResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consentRequest:\n          type: object\n          required:\n            - id\n          properties:\n            id: \n              type: string\n              format: uuid\n              description: id of the consent-request created\n              example: f29f0e59-8388-4698-9fe6-05db67aeac46\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n      xml:\n        name: ConsentRequestInitResponse\n    RequestReference:\n      type: object\n      required:\n        - requestId\n      properties:\n        requestId: \n          type: string\n          format: uuid\n          description: the requestId that was passed\n    ConsentFetchRequest:\n      type: object\n      required:\n        - consentId\n        - requestId\n        - timestamp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consentId:\n          type: string\n    ConsentRequestStatusRequest:\n      type: object\n      required:\n        - consentRequestId\n        - requestId\n        - timestamp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consentRequestId:\n          type: string\n    HIUConsentRequestStatus:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consentRequest:\n          type: object\n          required:\n            - id\n            - status\n          properties:\n            id:\n              type: string\n              example: '<consent-request-id>'\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentArtefacts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConsentArtefactReference'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    HIPHealthInformationRequestAcknowledgement:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        hiRequest:\n          type: object\n          required:\n            - transactionId\n            - sessionStatus\n          properties:\n            transactionId: \n              type: string\n              format: uuid\n            sessionStatus:\n              type: string\n              enum:\n              - ACKNOWLEDGED\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    HIPConsentNotificationResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        acknowledgement:\n          $ref: '#/components/schemas/ConsentAcknowledgement'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    HIUConsentNotificationResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        acknowledgement:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentAcknowledgement'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    ConsentAcknowledgement:\n      type: object\n      required:\n        - status\n        - consentId\n      properties:\n        status:\n          type: string\n          enum:\n          - OK\n          - UNKNOWN\n        consentId:\n          type: string\n          example: <consent-artefact-id>\n    PatientIdentificationRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - query\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        query:\n          type: object\n          required:\n            - patient\n            - requester\n          properties:\n            patient:\n              type: object\n              properties:\n                id:\n                  type: string\n                  example: hinapatel79@ncg\n            requester:\n              type: object\n              properties:\n                type: \n                  type: string\n                  enum: [HIU, HIP]\n                id:\n                  type: string\n                  example: 100005\n    PatientIdentificationResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        patient:\n          type: object\n          required:\n            - id\n          properties:\n            id: \n              type: string\n              example: hinapatel79@ncg\n            name:\n              type: string\n              example: Hina Patel\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n      xml:\n        name: PatientIdentificationResponse\n    HipInitiatedLinkRequest:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        link:\n          type: object\n          properties:\n            cmId:\n              type: string\n            hipId:\n              type: string\n            patient:\n              $ref: '#/components/schemas/HipInitiatedPatient'\n          xml:\n            name: HipInitiatedLinkRequest\n    HipInitiatedLinkResult:\n      type: object\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        linkRequest:\n          $ref: '#/components/schemas/HipInitiatedLinkResponse'\n        error:\n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    HipInitiatedLinkCareContext:\n      type: object\n      properties:\n        referenceNumber:\n          type: string\n        display:\n          type: string\n      xml:\n        name: Tag\n    HipInitiatedLinkResponse:\n      type: object\n      required:\n        - status\n      properties:\n        sessionStatus:\n          type: string\n          enum:\n              - SUCCESS\n              - FAILURE\n    HipInitiatedPatient:\n      type: object\n      properties:\n        referenceNumber:\n          type: string\n        display:\n          type: string\n        careContexts:\n          type: array\n          items:\n            $ref: '#/components/schemas/HipInitiatedLinkCareContext'\n          xml:\n            name: careContexts\n            wrapped: true\n    PatientAuthPurpose:\n      type: string\n      enum: [LINK, KYC, KYC_AND_LINK]\n      description: what is the purpose of user auth\n    PatientAuthInitRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - query\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        query:\n          type: object\n          required:\n            - id\n            - requester\n            - purpose\n          properties:\n            id:\n              type: string\n              example: \"hinapatel@ncg\"\n              description: id  of the patient understood by the CM\n            purpose:\n              $ref: '#/components/schemas/PatientAuthPurpose'\n            authMode:\n              $ref: '#/components/schemas/AuthenticationMode'\n            requester:\n              type: object\n              required:\n                - type\n                - id\n              description: identification of requester\n              properties:\n                type: \n                  type: string\n                  enum: [HIP, HIU]\n                id:\n                  type: string\n                  example: 100005\n              \n    PatientAuthInitResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        auth:\n          type: object\n          required:\n            - transactionId\n            - mode\n          properties:\n            transactionId:\n              type: string\n            mode:\n              $ref: '#/components/schemas/AuthenticationMode'\n            meta:\n              $ref: '#/components/schemas/AuthMeta'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    AuthenticationMode:\n      type: string\n      enum: ['M0BILE_OTP', 'DIRECT', 'DEMOGRAPHICS', 'AADHAAR_OTP']\n      description: > \n        Subjected to CM specific capability\n         1. MOBILE_OTP - for SMS OTP\n         2. DIRECT - for auth through apps (usually direct)\n         3. AADHAAR_OTP - for auth using OTP sent to Aadhaar number\n         4. DEMOGRAPHICS - for auth using demographic.\n    \n    AuthMeta:\n      type: object\n      properties:\n        hint:\n          type: string\n        expiry:\n          type: string\n          example: \"2019-12-30T12:01:55Z\"\n      xml:\n        name: Meta\n\n    PatientAuthConfirmRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - credential\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          type: string\n        credential:\n          type: object\n          description: note, demographic details are only required for demographic auth at this point.\n          properties:\n            authCode:\n              type: string\n            demographic:\n              $ref: '#/components/schemas/PatientDemographic'\n              \n    \n    PatientDemographic:\n      type: object\n      required:\n        - name\n        - gender\n        - dateOfBirth\n      description: Demographic details are only required for demographic auth at this point. Demographic details must be same as registered\n      properties:\n        name: \n          type: string\n          example: \"janki das\"\n        gender:\n          $ref: '#/components/schemas/PatientGender'\n        dateOfBirth:\n          type: string\n          example: \"1972-02-29\"\n          description: date of birth in YYYY-MM-DD format. \n        identifier: \n          $ref: '#/components/schemas/Identifier'\n    \n    PatientAddress:\n      type: object\n      properties:\n        line:\n          type: string\n        district:\n          type: string\n        state:\n          type: string\n        pincode:\n          type: string\n    \n    PatientDemographicResponse:\n      type: object\n      required:\n        - id\n        - name\n        - gender\n        - yearOfBirth\n      properties:\n        id:\n          type: string\n          example: <patient-id>@<consent-manager-id>\n          description: PHR Identifier of patient at consent manager\n        name:\n          type: string\n          example: \"Hina Patel\"\n        gender:\n          $ref: '#/components/schemas/PatientGender'\n        yearOfBirth:\n          type: integer\n          example: 2000\n        address:\n          $ref: '#/components/schemas/PatientAddress'\n        identifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          xml:\n            name: identifiers\n            wrapped: true\n        \n          \n    PatientAuthConfirmResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        auth:\n          type: object\n          description: >\n            depending on the purpose of auth, as specified in /auth/init, the response may include the following \n              1. LINK - only returns **accessToken**\n              2. KYC - only returns **patient**\n              3. KYC_AND_LINK - returns both **accessToken** and **patient**\n          properties:\n            accessToken :\n              type: string\n              description: access token for initialization of subsequent action. \n            patient:\n              $ref: '#/components/schemas/PatientDemographicResponse'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    \n    PatientCareContextLinkRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - link\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        link:\n          $ref: '#/components/schemas/PatientCareContextLink'\n    PatientCareContextLink:\n      type: object\n      required:\n        - accessToken\n        - patient\n      properties:\n        accessToken:\n          type: string\n          description: AccessToken fetched in the user auth process for the purpose specified\n        patient:\n          type: object\n          required:\n            - referenceNumber\n            - display\n            - careContexts\n          properties:\n            referenceNumber:\n              type: string\n              example: TMH-PUID-001\n              description: patient reference id at HIP\n            display:\n              type: string\n            careContexts:\n              type: array\n              items:\n                $ref: '#/components/schemas/CareContextRepresentation'\n              xml:\n                name: careContexts\n                wrapped: true\n    PatientCareContextLinkResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        acknowledgement:\n          type: object\n          required:\n            - status\n          properties:\n            status: \n              type: string\n              enum:\n              - SUCCESS\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    PatientAuthModeQueryRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - query\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        query:\n          type: object\n          required:\n            - id\n            - purpose\n            - requester\n          properties:\n            id:\n              type: string\n              example: hinapatel79@ncg\n            purpose:\n              $ref: '#/components/schemas/PatientAuthPurpose'\n            requester:\n              type: object\n              required:\n                - id\n                - type\n              properties:\n                type: \n                  type: string\n                  enum: [HIP, HIU]\n                id:\n                  type: string\n                  example: 100005\n    PatientAuthModeQueryResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        auth:\n          type: object\n          required:\n            - purpose\n            - modes\n          properties:\n            purpose:\n              $ref: '#/components/schemas/PatientAuthPurpose'\n            modes: \n              type: array\n              items:\n                $ref: '#/components/schemas/AuthenticationMode'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'",
			"canonicalURL": "/github.com/iSPIRT/healthstack@b096f1f2d514a6c32043294d904c6fc1393a7c60/-/blob/hif-spec/gateway.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/iSPIRT/healthstack/blob/b096f1f2d514a6c32043294d904c6fc1393a7c60/hif-spec/gateway.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v0.5/consents/hip/notify\": post: requestBody: contents: application/json: generate schema: field notification: field consentDetail: field consentManager: allOf: schema type mismatch: object and "
}