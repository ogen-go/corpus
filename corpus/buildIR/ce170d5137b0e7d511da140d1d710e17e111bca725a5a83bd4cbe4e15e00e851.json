{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-tools"
		},
		"file": {
			"name": "nested_schema_refs.yaml",
			"size": 0,
			"path": "openapi-cli/src/test/resources/generators/schema/swagger/nested_schema_refs.yaml",
			"byteSize": 4479,
			"content": "openapi: 3.0.0\ninfo:\n  description: This is the interface for interacting with the [Asana Platform](https://developers.asana.com).\n  title: Asana\n  termsOfService: https://asana.com/terms\n  contact:\n    name: Asana Support\n    url: https://asana.com/support\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  version: '1.0'\nservers:\n  - url: https://app.asana.com/api/1.0\n    description: Main endpoint.\ncomponents:\n  schemas:\n    AsanaResource:\n      description: A generic Asana Resource, containing a globally unique identifier.\n      type: object\n      properties:\n        gid:\n          description: Globally unique identifier of the resource, as a string.\n          type: string\n          readOnly: true\n          example: '12345'\n          x-insert-after: false\n        resource_type:\n          description: The base type of this resource.\n          type: string\n          readOnly: true\n          example: task\n          x-insert-after: gid\n    UserCompact:\n      allOf:\n        - $ref: '#/components/schemas/AsanaResource'\n        - type: object\n          description: A user object represents an account in Asana that can be given\n            access to various workspaces, projects, and tasks.\n          x-docs-overrides:\n            properties.resource_type.example: user\n          properties:\n            name:\n              type: string\n              description: Read-only except when same user as requester.\n              example: Greg Sanchez\n    ProjectStatusCompact:\n      allOf:\n        - $ref: '#/components/schemas/AsanaResource'\n        - type: object\n          description: A project status is an update on the progress of a particular\n            project, and is sent out to all project followers when created.\n          properties:\n            title:\n              description: The title of the project status update.\n              type: string\n              example: Status Update - Jun 15\n    ProjectStatusRequest:\n      $ref: '#/components/schemas/ProjectStatusBase'\n    ProjectStatusBase:\n      allOf:\n        - $ref: '#/components/schemas/ProjectStatusCompact'\n        - type: object\n          required:\n            - text\n            - color\n          properties:\n            author:\n              $ref: '#/components/schemas/UserCompact'\n            modified_at:\n              description: The time at which this project status was last modified.\n            text:\n              description: The text content of the status update.\n              type: string\n              example: The project is moving forward according to plan...\n            html_text:\n              type: string\n              example: >-\n                <body>The project <strong>is</strong> moving forward according to\n                plan...</body>\n            color:\n              description: The color associated with the status update.\n              type: string\n  parameters:\n    project_path_gid:\n      name: project_gid\n      in: path\n      description: >-\n        Globally unique identifier for the project.\n      required: true\n      schema:\n        type: string\n      example: '1331'\n      x-env-variable: project\n    pretty:\n      name: opt_pretty\n      in: query\n      description: Provides “pretty” output.\n      required: false\n      allowEmptyValue: true\n      schema:\n        type: boolean\n      style: form\n    fields:\n      name: opt_fields\n      in: query\n      description: Defines fields to return.\n      example:\n        - followers\n        - assignee\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n      style: form\n      explode: false\npaths:\n  /projects/{project_gid}/project_statuses:\n    parameters:\n      - $ref: '#/components/parameters/project_path_gid'\n      - $ref: '#/components/parameters/pretty'\n      - $ref: '#/components/parameters/fields'\n    post:\n      summary: Create a project status\n      description: Creates a new status update on the project.\n      tags:\n        - Project Statuses\n      operationId: createProjectStatusForProject\n      requestBody:\n        description: The project status to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  $ref: '#/components/schemas/ProjectStatusRequest'\n      responses:\n        201:\n          description: Successfully created a new story.\n          content: {}\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-tools@11ae9f6245584cae7e7e7016eff92c0bf0d27bac/-/blob/openapi-cli/src/test/resources/generators/schema/swagger/nested_schema_refs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-tools/blob/11ae9f6245584cae7e7e7016eff92c0bf0d27bac/openapi-cli/src/test/resources/generators/schema/swagger/nested_schema_refs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/projects/{project_gid}/project_statuses\": post: requestBody: contents: application/json: generate schema: field data: allOf: schema type mismatch:  and object"
}