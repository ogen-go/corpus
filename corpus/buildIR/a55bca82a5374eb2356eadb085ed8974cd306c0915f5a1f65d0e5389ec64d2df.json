{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SeldonIO/seldon-core"
		},
		"file": {
			"name": "wrapper.oas3.json",
			"size": 0,
			"path": "openapi/wrapper.oas3.json",
			"byteSize": 34888,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Seldon External API\",\n        \"version\": \"0.1\",\n        \"contact\": {\n            \"name\": \"Seldon Core\",\n            \"url\": \"https://github.com/SeldonIO/seldon-core\"\n        }\n    },\n    \"externalDocs\": {\n        \"description\": \"Seldon Core Documentation\",\n        \"url\": \"https://github.com/SeldonIO/seldon-core\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://{host}:{port}\",\n            \"variables\": {\n                \"host\": {\n                    \"default\": \"localhost\",\n                    \"description\": \"host running seldon core\"\n                },\n                \"port\": {\n                    \"default\": \"80\"\n                }\n            }\n        },\n        {\n            \"url\": \"http://localhost:8002\",\n            \"description\": \"fixed host as swagger UI has bug with variables for auth\"\n        }\n    ],\n    \"paths\": {\n        \"/aggregate\": {\n            \"post\": {\n                \"operationId\": \"Aggregate2\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"tags\": [\n                    \"Internal\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"json\": {\n                                        \"$ref\": \"#/components/schemas/SeldonMessageList\"\n                                    }\n                                }\n                            },\n                            \"encoding\": {\n                                \"json\": {\n                                    \"contentType\": \"application/json\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            },\n            \"get\": {\n                \"operationId\": \"Aggregate\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"body\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SeldonMessageList\"\n                        }\n                    }\n                ],\n                \"tags\": [\n                    \"Internal\"\n                ]\n            }\n        },\n        \"/predict\": {\n            \"get\": {\n                \"operationId\": \"TransformInput4\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"json\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SeldonMessage\"\n                        },\n                        \"example\": {\n                            \"json\": \"{\\\"data\\\":{\\\"names\\\" : [\\\"feature1\\\"],\\\"tensor\\\" : {\\\"shape\\\": [1,1],\\\"values\\\": [1]}}}\"\n                        }\n                    }\n                ],\n                \"tags\": [\n                    \"Internal\"\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"TransformInput3\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"tags\": [\n                    \"Internal\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"json\": {\n                                        \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                    }\n                                }\n                            },\n                            \"encoding\": {\n                                \"json\": {\n                                    \"contentType\": \"application/json\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/route\": {\n            \"get\": {\n                \"operationId\": \"Route2\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"json\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SeldonMessage\"\n                        }\n                    }\n                ],\n                \"tags\": [\n                    \"Internal\"\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"Route\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"tags\": [\n                    \"Internal\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"json\": {\n                                        \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                    }\n                                }\n                            },\n                            \"encoding\": {\n                                \"json\": {\n                                    \"contentType\": \"application/json\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/send-feedback\": {\n            \"get\": {\n                \"operationId\": \"SendFeedback2\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"json\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/Feedback\"\n                        }\n                    }\n                ],\n                \"tags\": [\n                    \"Internal\"\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"SendFeedback\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"tags\": [\n                    \"Internal\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"json\": {\n                                        \"$ref\": \"#/components/schemas/Feedback\"\n                                    }\n                                }\n                            },\n                            \"encoding\": {\n                                \"json\": {\n                                    \"contentType\": \"application/json\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/transform-input\": {\n            \"get\": {\n                \"operationId\": \"TransformInput2\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"json\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SeldonMessage\"\n                        }\n                    }\n                ],\n                \"tags\": [\n                    \"Internal\"\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"TransformInput\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"tags\": [\n                    \"Internal\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"json\": {\n                                        \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                    }\n                                }\n                            },\n                            \"encoding\": {\n                                \"json\": {\n                                    \"contentType\": \"application/json\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/transform-output\": {\n            \"get\": {\n                \"operationId\": \"TransformOutput2\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"json\",\n                        \"in\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SeldonMessage\"\n                        }\n                    }\n                ],\n                \"tags\": [\n                    \"Internal\"\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"TransformOutput\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"tags\": [\n                    \"Internal\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"json\": {\n                                        \"$ref\": \"#/components/schemas/SeldonMessage\"\n                                    }\n                                }\n                            },\n                            \"encoding\": {\n                                \"json\": {\n                                    \"contentType\": \"application/json\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"StatusStatusFlag\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"SUCCESS\",\n                    \"FAILURE\"\n                ],\n                \"default\": \"SUCCESS\"\n            },\n            \"AnyValue\": {\n                \"description\": \"Can be anything: string, number, array, object, etc.\"\n            },\n            \"MetricType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"COUNTER\",\n                    \"GAUGE\",\n                    \"TIMER\"\n                ],\n                \"default\": \"COUNTER\"\n            },\n            \"Metric\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/MetricType\"\n                    },\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                    }\n                }\n            },\n            \"DefaultData\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"names\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"tensor\": {\n                        \"$ref\": \"#/components/schemas/Tensor\"\n                    },\n                    \"ndarry\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AnyValue\"\n                        }\n                    },\n                    \"tftensor\": {\n                        \"$ref\": \"#/components/schemas/TensorflowTensorProto\"\n                    }\n                }\n            },\n            \"Feedback\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"request\": {\n                        \"$ref\": \"#/components/schemas/SeldonMessage\"\n                    },\n                    \"response\": {\n                        \"$ref\": \"#/components/schemas/SeldonMessage\"\n                    },\n                    \"reward\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                    },\n                    \"truth\": {\n                        \"$ref\": \"#/components/schemas/SeldonMessage\"\n                    }\n                }\n            },\n            \"Meta\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"puid\": {\n                        \"type\": \"string\"\n                    },\n                    \"tags\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/AnyValue\"\n                        },\n                        \"example\": {\n                            \"mytag\": \"myvalue\"\n                        }\n                    },\n                    \"routing\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"example\": {\n                            \"router1\": 1\n                        }\n                    },\n                    \"requestPath\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"example\": {\n                            \"classifier\": \"seldonio/mock_classifier:1.0\"\n                        }\n                    },\n                    \"metrics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Metric\"\n                        }\n                    }\n                }\n            },\n            \"SeldonMessage\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/Status\"\n                    },\n                    \"meta\": {\n                        \"$ref\": \"#/components/schemas/Meta\"\n                    },\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/DefaultData\"\n                    },\n                    \"binData\": {\n                        \"type\": \"string\",\n                        \"format\": \"byte\"\n                    },\n                    \"strData\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"SeldonMessageList\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"seldonMessages\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/SeldonMessage\"\n                        }\n                    }\n                }\n            },\n            \"Status\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"code\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"info\": {\n                        \"type\": \"string\"\n                    },\n                    \"reason\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/StatusStatusFlag\"\n                    }\n                }\n            },\n            \"Tensor\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"shape\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        }\n                    },\n                    \"values\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                }\n            },\n            \"TensorShapeProtoDim\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"size\": {\n                        \"type\": \"string\",\n                        \"format\": \"int64\",\n                        \"description\": \"Size of the tensor in that dimension.\\nThis value must be \u003e= -1, but values of -1 are reserved for \\\"unknown\\\"\\nshapes (values of -1 mean \\\"unknown\\\" dimension).  Certain wrappers\\nthat work with TensorShapeProto may fail at runtime when deserializing\\na TensorShapeProto containing a dim value of -1.\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Optional name of the tensor dimension.\"\n                    }\n                },\n                \"description\": \"One dimension of the tensor.\"\n            },\n            \"TensorflowDataType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"DT_INVALID\",\n                    \"DT_FLOAT\",\n                    \"DT_DOUBLE\",\n                    \"DT_INT32\",\n                    \"DT_UINT8\",\n                    \"DT_INT16\",\n                    \"DT_INT8\",\n                    \"DT_STRING\",\n                    \"DT_COMPLEX64\",\n                    \"DT_INT64\",\n                    \"DT_BOOL\",\n                    \"DT_QINT8\",\n                    \"DT_QUINT8\",\n                    \"DT_QINT32\",\n                    \"DT_BFLOAT16\",\n                    \"DT_QINT16\",\n                    \"DT_QUINT16\",\n                    \"DT_UINT16\",\n                    \"DT_COMPLEX128\",\n                    \"DT_HALF\",\n                    \"DT_RESOURCE\",\n                    \"DT_VARIANT\",\n                    \"DT_UINT32\",\n                    \"DT_UINT64\",\n                    \"DT_FLOAT_REF\",\n                    \"DT_DOUBLE_REF\",\n                    \"DT_INT32_REF\",\n                    \"DT_UINT8_REF\",\n                    \"DT_INT16_REF\",\n                    \"DT_INT8_REF\",\n                    \"DT_STRING_REF\",\n                    \"DT_COMPLEX64_REF\",\n                    \"DT_INT64_REF\",\n                    \"DT_BOOL_REF\",\n                    \"DT_QINT8_REF\",\n                    \"DT_QUINT8_REF\",\n                    \"DT_QINT32_REF\",\n                    \"DT_BFLOAT16_REF\",\n                    \"DT_QINT16_REF\",\n                    \"DT_QUINT16_REF\",\n                    \"DT_UINT16_REF\",\n                    \"DT_COMPLEX128_REF\",\n                    \"DT_HALF_REF\",\n                    \"DT_RESOURCE_REF\",\n                    \"DT_VARIANT_REF\",\n                    \"DT_UINT32_REF\",\n                    \"DT_UINT64_REF\"\n                ],\n                \"default\": \"DT_INVALID\",\n                \"description\": \"- DT_INVALID: Not a legal value for DataType.  Used to indicate a DataType field\\nhas not been set.\\n - DT_FLOAT: Data types that all computation devices are expected to be\\ncapable to support.\\n - DT_FLOAT_REF: Do not use!  These are only for parameters.  Every enum above\\nshould have a corresponding value below (verified by types_test).\",\n                \"title\": \"LINT.IfChange\"\n            },\n            \"TensorflowResourceHandleProto\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"device\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique name for the device containing the resource.\"\n                    },\n                    \"container\": {\n                        \"type\": \"string\",\n                        \"description\": \"Container in which this resource is placed.\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Unique name of this resource.\"\n                    },\n                    \"hash_code\": {\n                        \"type\": \"string\",\n                        \"format\": \"uint64\",\n                        \"description\": \"Hash code for the type of the resource. Is only valid in the same device\\nand in the same execution.\"\n                    },\n                    \"maybe_type_name\": {\n                        \"type\": \"string\",\n                        \"description\": \"For debug-only, the name of the type pointed to by this handle, if\\navailable.\"\n                    }\n                },\n                \"description\": \"Protocol buffer representing a handle to a tensorflow resource. Handles are\\nnot valid across executions, but can be serialized back and forth from within\\na single run.\"\n            },\n            \"TensorflowTensorProto\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"dtype\": {\n                        \"$ref\": \"#/components/schemas/TensorflowDataType\"\n                    },\n                    \"tensor_shape\": {\n                        \"$ref\": \"#/components/schemas/TensorflowTensorShapeProto\",\n                        \"description\": \"Shape of the tensor.  TODO(touts): sort out the 0-rank issues.\"\n                    },\n                    \"version_number\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\",\n                        \"description\": \"Version number.\\n\\nIn version 0, if the \\\"repeated xxx\\\" representations contain only one\\nelement, that element is repeated to fill the shape.  This makes it easy\\nto represent a constant Tensor with a single value.\"\n                    },\n                    \"tensor_content\": {\n                        \"type\": \"string\",\n                        \"format\": \"byte\",\n                        \"description\": \"Serialized raw tensor content from either Tensor::AsProtoTensorContent or\\nmemcpy in tensorflow::grpc::EncodeTensorToByteBuffer. This representation\\ncan be used for all tensor types. The purpose of this representation is to\\nreduce serialization overhead during RPC call by avoiding serialization of\\nmany repeated small items.\"\n                    },\n                    \"half_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"description\": \"DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll\\nhave some pointless zero padding for each value here.\"\n                    },\n                    \"float_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\"\n                        },\n                        \"description\": \"DT_FLOAT.\"\n                    },\n                    \"double_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        },\n                        \"description\": \"DT_DOUBLE.\"\n                    },\n                    \"int_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"description\": \"DT_INT32, DT_INT16, DT_INT8, DT_UINT8.\"\n                    },\n                    \"string_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"format\": \"byte\"\n                        },\n                        \"title\": \"DT_STRING\"\n                    },\n                    \"scomplex_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\"\n                        },\n                        \"description\": \"DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real\\nand imaginary parts of i-th single precision complex.\"\n                    },\n                    \"int64_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"format\": \"int64\"\n                        },\n                        \"title\": \"DT_INT64\"\n                    },\n                    \"bool_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"boolean\",\n                            \"format\": \"boolean\"\n                        },\n                        \"title\": \"DT_BOOL\"\n                    },\n                    \"dcomplex_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        },\n                        \"description\": \"DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real\\nand imaginary parts of i-th double precision complex.\"\n                    },\n                    \"resource_handle_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TensorflowResourceHandleProto\"\n                        },\n                        \"title\": \"DT_RESOURCE\"\n                    },\n                    \"variant_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TensorflowVariantTensorDataProto\"\n                        },\n                        \"title\": \"DT_VARIANT\"\n                    },\n                    \"uint32_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"title\": \"DT_UINT32\"\n                    },\n                    \"uint64_val\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"format\": \"uint64\"\n                        },\n                        \"title\": \"DT_UINT64\"\n                    }\n                },\n                \"description\": \"Protocol buffer representing a tensor.\"\n            },\n            \"TensorflowTensorShapeProto\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"dim\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TensorShapeProtoDim\"\n                        },\n                        \"description\": \"Dimensions of the tensor, such as {\\\"input\\\", 30}, {\\\"output\\\", 40}\\nfor a 30 x 40 2D tensor.  If an entry has size -1, this\\ncorresponds to a dimension of unknown size. The names are\\noptional.\\n\\nThe order of entries in \\\"dim\\\" matters: It indicates the layout of the\\nvalues in the tensor in-memory representation.\\n\\nThe first entry in \\\"dim\\\" is the outermost dimension used to layout the\\nvalues, the last entry is the innermost dimension.  This matches the\\nin-memory layout of RowMajor Eigen tensors.\\n\\nIf \\\"dim.size()\\\" \u003e 0, \\\"unknown_rank\\\" must be false.\"\n                    },\n                    \"unknown_rank\": {\n                        \"type\": \"boolean\",\n                        \"format\": \"boolean\",\n                        \"description\": \"If true, the number of dimensions in the shape is unknown.\\n\\nIf true, \\\"dim.size()\\\" must be 0.\"\n                    }\n                },\n                \"description\": \"Dimensions of a tensor.\"\n            },\n            \"TensorflowVariantTensorDataProto\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"type_name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Name of the type of objects being serialized.\"\n                    },\n                    \"metadata\": {\n                        \"type\": \"string\",\n                        \"format\": \"byte\",\n                        \"description\": \"Portions of the object that are not Tensors.\"\n                    },\n                    \"tensors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TensorflowTensorProto\"\n                        },\n                        \"description\": \"Tensors contained within objects being serialized.\"\n                    }\n                },\n                \"description\": \"Protocol buffer representing the serialization format of DT_VARIANT tensors.\"\n            }\n        }\n    }\n}"
		}
	},
	"Error": "buildIR: make ir: path \"/aggregate\": get: parameters: field \"seldonMessages\": nested arrays not allowed"
}