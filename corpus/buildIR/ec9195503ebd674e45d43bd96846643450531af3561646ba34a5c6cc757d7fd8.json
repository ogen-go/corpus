{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/featurehub-io/featurehub"
		},
		"file": {
			"name": "1.1.2.yaml",
			"size": 0,
			"path": "infra/api-bucket/files/edge/1.1.2.yaml",
			"byteSize": 11205,
			"content": "components:\n  schemas:\n    FeatureValueType:\n      x-package: io.featurehub.mr.model\n      type: string\n      enum: [BOOLEAN, STRING, NUMBER, JSON]\n    RoleType:\n      x-package: io.featurehub.mr.model\n      type: string\n      enum: [READ, LOCK, UNLOCK, CHANGE_VALUE]\n    BaseRolloutStrategy:\n      x-package: io.featurehub.mr.model\n      description: if the feature in an environment is different from its default, this will be the reason for it. a rollout strategy is defined at the Application level and then applied to a specific feature value. When they are copied to the cache layer they are cloned and the feature value for that strategy is inserted into the clone and those are published.\n      properties:\n        id: {type: string}\n        percentage: {description: value between 0 and 1000000 - for four decimal places,\n          type: integer}\n        percentageAttributes:\n          type: array\n          description: if you don't wish to apply percentage based on user id, you can use one or more attributes defined here\n          items: {type: string}\n        value: {description: when we attach the RolloutStrategy for Dacha or SSE this lets us push the value out. Only visible in SDK and SSE Edge.}\n        attributes:\n          type: array\n          items: {$ref: '#/components/schemas/BaseRolloutStrategyAttribute'}\n    BaseRolloutStrategyAttribute:\n      x-package: io.featurehub.mr.model\n      properties:\n        conditional: {$ref: '#/components/schemas/RolloutStrategyAttributeConditional'}\n        fieldName: {type: string}\n        values:\n          description: the value(s) associated with this rule\n          type: array\n          items: {$ref: '#/components/schemas/RolloutStrategyArrayType'}\n        type: {$ref: '#/components/schemas/RolloutStrategyFieldType'}\n    RolloutStrategyArrayType: {x-package: io.featurehub.mr.model, description: values depend on the field type}\n    RolloutStrategyFieldType:\n      x-package: io.featurehub.mr.model\n      type: string\n      enum: [STRING, SEMANTIC_VERSION, NUMBER, DATE, DATETIME, BOOLEAN, IP_ADDRESS]\n    RolloutStrategyAttributeConditional:\n      x-package: io.featurehub.mr.model\n      type: string\n      enum: [EQUALS, ENDS_WITH, STARTS_WITH, GREATER, GREATER_EQUALS, LESS, LESS_EQUALS,\n        NOT_EQUALS, INCLUDES, EXCLUDES, REGEX]\n    StrategyAttributeWellKnownNames:\n      x-package: io.featurehub.mr.model\n      type: string\n      enum: [device, country, platform, userkey, session, version]\n    StrategyAttributeDeviceName:\n      x-package: io.featurehub.mr.model\n      type: string\n      enum: [browser, mobile, desktop, server, watch, embedded]\n    StrategyAttributePlatformName:\n      x-package: io.featurehub.mr.model\n      type: string\n      enum: [linux, windows, macos, android, ios]\n    StrategyAttributeCountryName:\n      x-package: io.featurehub.mr.model\n      type: string\n      description: https://www.britannica.com/topic/list-of-countries-1993160 - we put these in API so everyone can have the same list\n      enum: [afghanistan, albania, algeria, andorra, angola, antigua_and_barbuda,\n        argentina, armenia, australia, austria, azerbaijan, the_bahamas, bahrain,\n        bangladesh, barbados, belarus, belgium, belize, benin, bhutan, bolivia, bosnia_and_herzegovina,\n        botswana, brazil, brunei, bulgaria, burkina_faso, burundi, cabo_verde, cambodia,\n        cameroon, canada, central_african_republic, chad, chile, china, colombia,\n        comoros, congo_democratic_republic_of_the, congo_republic_of_the, costa_rica,\n        cote_divoire, croatia, cuba, cyprus, czech_republic, denmark, djibouti, dominica,\n        dominican_republic, east_timor, ecuador, egypt, el_salvador, equatorial_guinea,\n        eritrea, estonia, eswatini, ethiopia, fiji, finland, france, gabon, the_gambia,\n        georgia, germany, ghana, greece, grenada, guatemala, guinea, guinea_bissau,\n        guyana, haiti, honduras, hungary, iceland, india, indonesia, iran, iraq, ireland,\n        israel, italy, jamaica, japan, jordan, kazakhstan, kenya, kiribati, korea_north,\n        korea_south, kosovo, kuwait, kyrgyzstan, laos, latvia, lebanon, lesotho, liberia,\n        libya, liechtenstein, lithuania, luxembourg, madagascar, malawi, malaysia,\n        maldives, mali, malta, marshall_islands, mauritania, mauritius, mexico, micronesia_federated_states_of,\n        moldova, monaco, mongolia, montenegro, morocco, mozambique, myanmar, namibia,\n        nauru, nepal, netherlands, new_zealand, nicaragua, niger, nigeria, north_macedonia,\n        norway, oman, pakistan, palau, panama, papua_new_guinea, paraguay, peru, philippines,\n        poland, portugal, qatar, romania, russia, rwanda, saint_kitts_and_nevis, saint_lucia,\n        saint_vincent_and_the_grenadines, samoa, san_marino, sao_tome_and_principe,\n        saudi_arabia, senegal, serbia, seychelles, sierra_leone, singapore, slovakia,\n        slovenia, solomon_islands, somalia, south_africa, spain, sri_lanka, sudan,\n        sudan_south, suriname, sweden, switzerland, syria, taiwan, tajikistan, tanzania,\n        thailand, togo, tonga, trinidad_and_tobago, tunisia, turkey, turkmenistan,\n        tuvalu, uganda, ukraine, united_arab_emirates, united_kingdom, united_states,\n        uruguay, uzbekistan, vanuatu, vatican_city, venezuela, vietnam, yemen, zambia,\n        zimbabwe]\n    ApplicationVersionInfo:\n      type: object\n      required: [name, version]\n      properties:\n        name: {type: string}\n        version: {type: string}\n    FeatureStateUpdate:\n      type: object\n      properties:\n        value: {description: the new value}\n        updateValue: {type: boolean, description: 'indicates whether you are trying\n            to update the value, as value can be null'}\n        lock: {description: 'set only if you wish to lock or unlock, otherwise null',\n          type: boolean}\n    SSEResultState:\n      type: string\n      enum: [ack, bye, failure, features, feature, delete_feature]\n    FeatureEnvironmentCollection:\n      description: This represents a collection of features as per a request from a GET api. GET's can request multiple API Keys at the same time.\n      x-renamed-from: Environment\n      required: [id]\n      properties:\n        id: {type: string, format: uuid}\n        features:\n          type: array\n          items: {$ref: '#/components/schemas/FeatureState'}\n    FeatureState:\n      required: [key, id]\n      properties:\n        id: {type: string, format: uuid}\n        key: {type: string}\n        l: {description: 'Is this feature locked. Usually this doesn''t matter because\n            the value is the value, but for FeatureInterceptors it can matter.', type: boolean}\n        version: {description: 'The version of the feature, this allows features to\n            change values and it means we don''t trigger events', type: integer, format: int64}\n        type: {$ref: '#/components/schemas/FeatureValueType'}\n        value: {description: the current value}\n        environmentId: {description: 'This field is filled in from the client side\n            in the GET api as the GET api is able to request multiple environments.\n            It is never passed from the server, as an array of feature states is wrapped\n            in an environment.', type: string, format: uuid}\n        strategies:\n          type: array\n          items: {$ref: '#/components/schemas/FeatureRolloutStrategy'}\n    FeatureRolloutStrategy:\n      description: This is the model for the rollout strategy as required by Dacha and Edge\n      allOf:\n      - {$ref: '#/components/schemas/BaseRolloutStrategy'}\n      - type: object\n        required: [id, attributes]\n        properties:\n          attributes:\n            type: array\n            items: {$ref: '#/components/schemas/FeatureRolloutStrategyAttribute'}\n    FeatureRolloutStrategyAttribute:\n      allOf:\n      - {$ref: '#/components/schemas/BaseRolloutStrategyAttribute'}\n      - type: object\n        required: [conditional, fieldName, type]\nopenapi: 3.0.1\ninfo: {x-version-api: fragment of version API, title: FeatureServiceApi, description: This describes the API clients use for accessing features,\n  version: 1.1.2}\npaths:\n  /info/version:\n    get:\n      description: Gets information as to what this server is.\n      operationId: getInfoVersion\n      tags: [InfoService]\n      responses:\n        200:\n          description: The basic  information on this server\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ApplicationVersionInfo'}\n  /features/:\n    get:\n      tags: [FeatureService]\n      parameters:\n      - name: sdkUrl\n        in: query\n        description: A list of API keys to retrieve information about\n        required: true\n        schema:\n          type: array\n          items: {type: string}\n      description: Requests all features for this sdkurl and disconnects\n      operationId: getFeatureStates\n      responses:\n        '200':\n          description: feature request successful, all environments you have permission to or that were found are returned\n          headers:\n            x-fh-version:\n              required: false\n              schema: {type: string}\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {$ref: '#/components/schemas/FeatureEnvironmentCollection'}\n        '400':\n          description: you didn't ask for any environments\n          headers:\n            x-fh-version:\n              required: false\n              schema: {type: string}\n  /features/{sdkUrl}/{featureKey}:\n    put:\n      tags: [FeatureService]\n      parameters:\n      - name: sdkUrl\n        in: path\n        description: The API Key for the environment and service account\n        required: true\n        schema: {type: string}\n      - name: featureKey\n        in: path\n        description: The key you wish to update/action\n        required: true\n        schema: {type: string}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/FeatureStateUpdate'}\n      description: Updates the feature state if allowed.\n      operationId: setFeatureState\n      responses:\n        '200':\n          description: update was accepted but not actioned because feature is already in that state\n          headers:\n            x-fh-version:\n              required: false\n              schema: {type: string}\n        '201':\n          description: update was accepted and actioned\n          headers:\n            x-fh-version:\n              required: false\n              schema: {type: string}\n        '202': {description: Neither lock or value was changing}\n        '400': {description: you have made a request that doesn't make sense. e.g. it has no data}\n        '403': {description: 'update was not accepted, attempted change is outside\n            the permissions of this user'}\n        '404': {description: 'something about the presented data isn''t right and\n            we couldn''t find it, could be the service key, the environment or the\n            feature'}\n        '412': {description: you have made a request that isn't possible. e.g. changing a value without unlocking it.}\n",
			"canonicalURL": "/github.com/featurehub-io/featurehub@7534670e2ea274d2f60d4739f98aad2b3b1d326a/-/blob/infra/api-bucket/files/edge/1.1.2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/featurehub-io/featurehub/blob/7534670e2ea274d2f60d4739f98aad2b3b1d326a/infra/api-bucket/files/edge/1.1.2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/features/\": get: responses: code 200: contents: media: \"application/json\": generate schema: item: field features: item: field strategies: item: allOf: merge properties: try to merge conflicting property schemas: merge item schema: schema type mismatch:  and object"
}