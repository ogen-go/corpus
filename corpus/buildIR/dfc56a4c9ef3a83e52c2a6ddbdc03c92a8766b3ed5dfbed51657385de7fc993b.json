{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "samples/client/echo_api/java/apache-httpclient/api/openapi.yaml",
			"byteSize": 5692,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: team@openapitools.org\n  description: Echo Server API\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Echo Server API\n  version: 0.1.0\nservers:\n- url: http://localhost:3000/\npaths:\n  /path/string/{path_string}/integer/{path_integer}:\n    get:\n      description: Test path parameter(s)\n      operationId: \"tests/path/string/{path_string}/integer/{path_integer}\"\n      parameters:\n      - explode: false\n        in: path\n        name: path_string\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: path_integer\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: Successful operation\n      summary: Test path parameter(s)\n      tags:\n      - path\n      x-accepts: text/plain\n  /query/integer/boolean/string:\n    get:\n      description: Test query parameter(s)\n      operationId: test/query/integer/boolean/string\n      parameters:\n      - explode: true\n        in: query\n        name: integer_query\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: boolean_query\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: string_query\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: Successful operation\n      summary: Test query parameter(s)\n      tags:\n      - query\n      x-accepts: text/plain\n  /query/style_form/explode_true/array_string:\n    get:\n      description: Test query parameter(s)\n      operationId: test/query/style_form/explode_true/array_string\n      parameters:\n      - explode: true\n        in: query\n        name: query_object\n        required: false\n        schema:\n          $ref: '#/components/schemas/test_query_style_form_explode_true_array_string_query_object_parameter'\n        style: form\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: Successful operation\n      summary: Test query parameter(s)\n      tags:\n      - query\n      x-accepts: text/plain\n  /query/style_form/explode_true/object:\n    get:\n      description: Test query parameter(s)\n      operationId: test/query/style_form/explode_true/object\n      parameters:\n      - explode: true\n        in: query\n        name: query_object\n        required: false\n        schema:\n          $ref: '#/components/schemas/Pet'\n        style: form\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: Successful operation\n      summary: Test query parameter(s)\n      tags:\n      - query\n      x-accepts: text/plain\n  /echo/body/Pet:\n    post:\n      description: Test body parameter(s)\n      operationId: test/echo/body/Pet\n      requestBody:\n        $ref: '#/components/requestBodies/Pet'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n          description: Successful operation\n      summary: Test body parameter(s)\n      tags:\n      - body\n      x-content-type: application/json\n      x-accepts: application/json\ncomponents:\n  requestBodies:\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Pet'\n      description: Pet object that needs to be added to the store\n  schemas:\n    Category:\n      example:\n        name: Dogs\n        id: 1\n      properties:\n        id:\n          example: 1\n          format: int64\n          type: integer\n        name:\n          example: Dogs\n          type: string\n      type: object\n      xml:\n        name: category\n    Tag:\n      example:\n        name: name\n        id: 0\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      type: object\n      xml:\n        name: tag\n    Pet:\n      example:\n        photoUrls:\n        - photoUrls\n        - photoUrls\n        name: doggie\n        id: 10\n        category:\n          name: Dogs\n          id: 1\n        tags:\n        - name: name\n          id: 0\n        - name: name\n          id: 0\n        status: available\n      properties:\n        id:\n          example: 10\n          format: int64\n          type: integer\n        name:\n          example: doggie\n          type: string\n        category:\n          $ref: '#/components/schemas/Category'\n        photoUrls:\n          items:\n            type: string\n            xml:\n              name: photoUrl\n          type: array\n          xml:\n            wrapped: true\n        tags:\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n          xml:\n            wrapped: true\n        status:\n          description: pet status in the store\n          enum:\n          - available\n          - pending\n          - sold\n          type: string\n      required:\n      - name\n      - photoUrls\n      type: object\n      xml:\n        name: pet\n    test_query_style_form_explode_true_array_string_query_object_parameter:\n      properties:\n        values:\n          items:\n            type: string\n          type: array\n      type: object\n\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@3a8265b6eec3ca372e28d49de38cf6f4b032a937/-/blob/samples/client/echo_api/java/apache-httpclient/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/3a8265b6eec3ca372e28d49de38cf6f4b032a937/samples/client/echo_api/java/apache-httpclient/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/query/style_form/explode_true/array_string\": get: parameters: \"query_object\": field \"Values\": nested arrays not allowed"
}