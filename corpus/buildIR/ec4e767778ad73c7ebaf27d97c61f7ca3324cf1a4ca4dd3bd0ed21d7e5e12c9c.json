{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigsbug/Faino"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": "docs/schema.yaml",
			"byteSize": 36610,
			"content": "openapi: 3.0.3\ninfo:\n  title: ''\n  version: 0.0.0\npaths:\n  /api/auth/confirm_email/:\n    get:\n      operationId: auth_confirm_email_retrieve\n      summary: Sended activation code to email\n      parameters:\n      - in: query\n        name: email\n        schema:\n          type: string\n          format: email\n          minLength: 1\n      tags:\n      - auth\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n    post:\n      operationId: auth_confirm_email_create\n      summary: 'Confirm activation code '\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_Confirm'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/auth/forget_password/:\n    get:\n      operationId: auth_forget_password_retrieve\n      summary: Send Confirm code to email\n      parameters:\n      - in: query\n        name: email\n        schema:\n          type: string\n          format: email\n          minLength: 1\n      tags:\n      - auth\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n    post:\n      operationId: auth_forget_password_create\n      summary: 'Confirm activation code '\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_Confirm_Forget'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '403':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '304':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/auth/singup/:\n    get:\n      operationId: auth_singup_retrieve\n      summary: User profile\n      tags:\n      - auth\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_User'\n          description: ''\n    post:\n      operationId: auth_singup_create\n      summary: Sing in new user\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Serializer_User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Serializer_User'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_User'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    put:\n      operationId: auth_singup_update\n      summary: Full update profile\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Serializer_User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Serializer_User'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_User'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    patch:\n      operationId: auth_singup_partial_update\n      summary: Partial update profile\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSerializer_User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedSerializer_User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedSerializer_User'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_User'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/device/:\n    get:\n      operationId: device_list\n      summary: Get All Devices of User\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Serializer_Device'\n          description: ''\n        '400':\n          description: No response body\n    post:\n      operationId: device_create\n      summary: Create a new device\n      tags:\n      - device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Serializer_Device'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_Device'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Serializer_Device'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Device'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/device/{id}/:\n    get:\n      operationId: device_retrieve\n      summary: 'Retrieve a special device with the UUID token '\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n          minLength: 1\n        description: Token of user\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Device'\n          description: ''\n        '404':\n          description: No response body\n    put:\n      operationId: device_update\n      summary: Full Update a Device\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n          minLength: 1\n        description: Token of user\n        required: true\n      tags:\n      - device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Serializer_Device'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_Device'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Serializer_Device'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Device'\n          description: ''\n        '404':\n          description: No response body\n    patch:\n      operationId: device_partial_update\n      summary: Partial Update a Device\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n          minLength: 1\n        description: Token of user\n        required: true\n      tags:\n      - device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSerializer_Device'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedSerializer_Device'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedSerializer_Device'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Device'\n          description: ''\n        '404':\n          description: No response body\n        '400':\n          content:\n            application/json:\n              schema:\n                invalid: Invalid data. Expected a dictionary, but got {datatype}.\n          description: ''\n    delete:\n      operationId: device_destroy\n      summary: Delete Device with Token\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token of user\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Device'\n          description: ''\n        '204':\n          description: No response body\n  /api/device/{id}/button/:\n    get:\n      operationId: button_RC\n      summary: Get all buttons of the Device\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token Device\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Buttons'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    post:\n      operationId: device_button_create\n      summary: Create new button\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token Device\n        required: true\n      tags:\n      - device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Serializer_Buttons'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_Buttons'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Serializer_Buttons'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Buttons'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/device/{id}/buttons/{id_button}/:\n    get:\n      operationId: device_buttons_retrieve\n      summary: Retrieve a button\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token Device\n        required: true\n      - in: path\n        name: id_button\n        schema:\n          type: number\n        description: ID of button\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Buttons'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    put:\n      operationId: device_buttons_update\n      summary: Full update the button\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token Device\n        required: true\n      - in: path\n        name: id_button\n        schema:\n          type: number\n        description: ID of button\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Buttons'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    patch:\n      operationId: device_buttons_partial_update\n      summary: Partial update the button\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token Device\n        required: true\n      - in: path\n        name: id_button\n        schema:\n          type: number\n        description: ID of button\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Buttons'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    delete:\n      operationId: device_buttons_destroy\n      summary: Delete the button\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token Device\n        required: true\n      - in: path\n        name: id_button\n        schema:\n          type: number\n        description: ID of button\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          content:\n            application/json:\n              schema: null\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/device/{id}/command/:\n    get:\n      operationId: device_command_retrieve\n      summary: Get all commands\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Toekn Device\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Command'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    post:\n      operationId: device_command_create\n      summary: Send new command to the device\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Toekn Device\n        required: true\n      tags:\n      - device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Serializer_Command'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_Command'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Serializer_Command'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Command'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/device/{id}/data/:\n    get:\n      operationId: device_data_retrieve\n      summary: get logs of the device\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token of user\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Device_Data'\n          description: ''\n        '404':\n          description: No response body\n  /api/device/{id}/users/:\n    get:\n      operationId: device_users_retrieve\n      summary: Get all users of device\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: Token Device\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_UserDevice'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    post:\n      operationId: device_users_create\n      summary: Create a user\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: user token\n        required: true\n      tags:\n      - device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Serializer_UserDevice_INPUT_REQUEST'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Serializer_UserDevice_INPUT_REQUEST'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Serializer_UserDevice_INPUT_REQUEST'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Profile'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/device/{id}/users/{user_token}/:\n    get:\n      operationId: device_users_retrieve_2\n      summary: Retrieve a user\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: user token\n        required: true\n      - in: path\n        name: user_token\n        schema:\n          type: string\n          format: uuid\n        description: target token\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Profile'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    post:\n      operationId: device_users_create_2\n      summary: update a user\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: user token\n        required: true\n      - in: path\n        name: user_token\n        schema:\n          type: string\n          format: uuid\n        description: target token\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Profile'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    patch:\n      operationId: device_users_partial_update\n      summary: update partial a user\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: user token\n        required: true\n      - in: path\n        name: user_token\n        schema:\n          type: string\n          format: uuid\n        description: target token\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Profile'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n    delete:\n      operationId: device_users_destroy\n      summary: Delete a user\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: user token\n        required: true\n      - in: path\n        name: user_token\n        schema:\n          type: string\n          format: uuid\n        description: target token\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Profile'\n          description: ''\n        '404':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/device/filter/{type}/:\n    get:\n      operationId: device_filter_retrieve\n      summary: 'Filter Device With Tyep  '\n      parameters:\n      - in: path\n        name: type\n        schema:\n          type: string\n        description: type of Device\n        required: true\n      tags:\n      - device\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Serializer_Device'\n          description: ''\n        '404':\n          description: No response body\n  /api/schema/:\n    get:\n      operationId: schema_retrieve\n      description: |-\n        OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n        - YAML: application/vnd.oai.openapi\n        - JSON: application/vnd.oai.openapi+json\n      parameters:\n      - in: query\n        name: format\n        schema:\n          type: string\n          enum:\n          - json\n          - yaml\n      - in: query\n        name: lang\n        schema:\n          type: string\n          enum:\n          - af\n          - ar\n          - ar-dz\n          - ast\n          - az\n          - be\n          - bg\n          - bn\n          - br\n          - bs\n          - ca\n          - cs\n          - cy\n          - da\n          - de\n          - dsb\n          - el\n          - en\n          - en-au\n          - en-gb\n          - eo\n          - es\n          - es-ar\n          - es-co\n          - es-mx\n          - es-ni\n          - es-ve\n          - et\n          - eu\n          - fa\n          - fi\n          - fr\n          - fy\n          - ga\n          - gd\n          - gl\n          - he\n          - hi\n          - hr\n          - hsb\n          - hu\n          - hy\n          - ia\n          - id\n          - ig\n          - io\n          - is\n          - it\n          - ja\n          - ka\n          - kab\n          - kk\n          - km\n          - kn\n          - ko\n          - ky\n          - lb\n          - lt\n          - lv\n          - mk\n          - ml\n          - mn\n          - mr\n          - ms\n          - my\n          - nb\n          - ne\n          - nl\n          - nn\n          - os\n          - pa\n          - pl\n          - pt\n          - pt-br\n          - ro\n          - ru\n          - sk\n          - sl\n          - sq\n          - sr\n          - sr-latn\n          - sv\n          - sw\n          - ta\n          - te\n          - tg\n          - th\n          - tk\n          - tr\n          - tt\n          - udm\n          - uk\n          - ur\n          - uz\n          - vi\n          - zh-hans\n          - zh-hant\n      tags:\n      - schema\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/vnd.oai.openapi:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/yaml:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/vnd.oai.openapi+json:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/token/:\n    post:\n      operationId: token_create\n      description: |-\n        Takes a set of user credentials and returns an access and refresh JSON web\n        token pair to prove the authentication of those credentials.\n      tags:\n      - token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenObtainPair'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TokenObtainPair'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TokenObtainPair'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenObtainPair'\n          description: ''\n  /api/token/refresh/:\n    post:\n      operationId: token_refresh_create\n      description: |-\n        Takes a refresh type JSON web token and returns an access type JSON web\n        token if the refresh token is valid.\n      tags:\n      - token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenRefresh'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TokenRefresh'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TokenRefresh'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenRefresh'\n          description: ''\ncomponents:\n  schemas:\n    PatchedSerializer_Device:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 36\n        description:\n          type: string\n          maxLength: 600\n        token:\n          type: string\n          format: uuid\n          readOnly: true\n        status:\n          type: boolean\n        type:\n          type: string\n        ip:\n          type: string\n          maxLength: 64\n        mac:\n          type: string\n          maxLength: 17\n        password:\n          type: string\n          maxLength: 62\n        buttons:\n          type: array\n          items:\n            $ref: '#/components/schemas/Serializer_Buttons'\n          readOnly: true\n        user_profile:\n          type: string\n          readOnly: true\n    PatchedSerializer_User:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        password:\n          type: string\n          maxLength: 128\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        first_name:\n          type: string\n          maxLength: 150\n        last_name:\n          type: string\n          maxLength: 150\n        phone:\n          type: string\n          maxLength: 11\n        company:\n          type: string\n          nullable: true\n          maxLength: 60\n        membership:\n          type: string\n          format: date-time\n          nullable: true\n    SerializerCommandTypeEnum:\n      enum:\n      - CS\n      - CU\n      type: string\n    SerializerUserDeviceINPUTREQUESTTypeEnum:\n      enum:\n      - owner\n      - admin\n      - member\n      type: string\n    Serializer_Buttons:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        control_name:\n          type: string\n          maxLength: 80\n        device:\n          type: string\n          format: uuid\n        is_star:\n          type: boolean\n        name:\n          type: string\n          maxLength: 80\n        array:\n          type: string\n      required:\n      - array\n      - control_name\n      - device\n      - id\n      - name\n    Serializer_Command:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        type:\n          $ref: '#/components/schemas/SerializerCommandTypeEnum'\n        command:\n          type: object\n          additionalProperties: {}\n        status:\n          type: boolean\n        date:\n          type: string\n          format: date-time\n          readOnly: true\n        time_completed:\n          type: string\n          format: date-time\n          nullable: true\n        device:\n          type: string\n          format: uuid\n      required:\n      - command\n      - date\n      - device\n      - id\n      - type\n    Serializer_Confirm:\n      type: object\n      properties:\n        code:\n          type: string\n          maxLength: 8\n        email:\n          type: string\n          format: email\n      required:\n      - code\n      - email\n    Serializer_Confirm_Forget:\n      type: object\n      properties:\n        code:\n          type: string\n          maxLength: 8\n        password:\n          type: string\n          maxLength: 60\n        password2:\n          type: string\n          maxLength: 60\n      required:\n      - code\n      - password\n      - password2\n    Serializer_Device:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 36\n        description:\n          type: string\n          maxLength: 600\n        token:\n          type: string\n          format: uuid\n          readOnly: true\n        status:\n          type: boolean\n        type:\n          type: string\n        ip:\n          type: string\n          maxLength: 64\n        mac:\n          type: string\n          maxLength: 17\n        password:\n          type: string\n          maxLength: 62\n        buttons:\n          type: array\n          items:\n            $ref: '#/components/schemas/Serializer_Buttons'\n          readOnly: true\n        user_profile:\n          type: string\n          readOnly: true\n      required:\n      - buttons\n      - name\n      - token\n      - type\n      - user_profile\n    Serializer_Device_Data:\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties: {}\n        date:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - data\n      - date\n    Serializer_Profile:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 24\n        type:\n          type: integer\n          nullable: true\n        token:\n          type: string\n          format: uuid\n          readOnly: true\n        join_time:\n          type: string\n          format: date-time\n          readOnly: true\n        last_activate:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n      - join_time\n      - name\n      - token\n    Serializer_User:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        password:\n          type: string\n          maxLength: 128\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        first_name:\n          type: string\n          maxLength: 150\n        last_name:\n          type: string\n          maxLength: 150\n        phone:\n          type: string\n          maxLength: 11\n        company:\n          type: string\n          nullable: true\n          maxLength: 60\n        membership:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n      - email\n      - password\n      - phone\n      - username\n    Serializer_UserDevice:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 24\n        token:\n          type: string\n          format: uuid\n          readOnly: true\n        join_time:\n          type: string\n          format: date-time\n          readOnly: true\n        last_activate:\n          type: string\n          format: date-time\n          nullable: true\n        user:\n          type: integer\n        device:\n          type: string\n          format: uuid\n        type:\n          type: integer\n          nullable: true\n      required:\n      - device\n      - id\n      - join_time\n      - name\n      - token\n      - user\n    Serializer_UserDevice_INPUT_REQUEST:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 24\n        type:\n          $ref: '#/components/schemas/SerializerUserDeviceINPUTREQUESTTypeEnum'\n        user:\n          type: string\n          format: email\n      required:\n      - name\n      - type\n      - user\n    TokenObtainPair:\n      type: object\n      properties:\n        username:\n          type: string\n          writeOnly: true\n        password:\n          type: string\n          writeOnly: true\n        access:\n          type: string\n          readOnly: true\n        refresh:\n          type: string\n          readOnly: true\n      required:\n      - access\n      - password\n      - refresh\n      - username\n    TokenRefresh:\n      type: object\n      properties:\n        access:\n          type: string\n          readOnly: true\n        refresh:\n          type: string\n          writeOnly: true\n      required:\n      - access\n      - refresh\n  securitySchemes:\n    jwtAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/bigsbug/Faino@5982354972595fcbfb4eccb26ad48f374276d08b/-/blob/docs/schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bigsbug/Faino/blob/5982354972595fcbfb4eccb26ad48f374276d08b/docs/schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/api/device/\": post: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"buttons\": nested objects not allowed"
}