{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/tractusx"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "connector/openapi.yaml",
			"byteSize": 35614,
			"content": "openapi: 3.0.1\ninfo:\n  title: dataspace-connector\n  description: IDS Connector developed by the Fraunhofer ISST\n  contact:\n    name: Fraunhofer Institute for Software and Systems Engineering\n    url: https://www.dataspace-connector.io/\n    email: info@dataspace-connector.de\n  license:\n    name: Apache License, Version 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.txt\n  version: 4.2.0\nservers:\n  - url: https://localhost:8080\n    description: Generated server url\ntags:\n  - name: 'Backend: Resource Data Handling'\n    description: Endpoints  for resource data handling\n  - name: 'Connector: Resource Handling'\n    description: Endpoints  for resource handling\n  - name: 'Connector: IDS Connector Communication'\n    description: Endpoints for invoking external connector requests\n  - name: 'Connector: Selfservice'\n    description: Endpoints for connector information\n  - name: Examples\n    description: Endpoints for testing purpose\n  - name: 'Connector: IDS Broker Communication'\n    description: Endpoints for invoking broker communication\npaths:\n  /admin/api/broker/unregister:\n    post:\n      tags:\n        - 'Connector: IDS Broker Communication'\n      summary: Unregister Connector\n      description: Unregister connector at an IDS broker.\n      operationId: unregisterAtBroker\n      parameters:\n        - name: broker\n          in: query\n          description: The url of the broker.\n          required: true\n          schema:\n            type: string\n          example: https://broker.ids.isst.fraunhofer.de/infrastructure\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/broker/query:\n    post:\n      tags:\n        - 'Connector: IDS Broker Communication'\n      summary: Broker Query Request\n      description: Send a query request to an IDS broker.\n      operationId: queryBroker\n      parameters:\n        - name: broker\n          in: query\n          description: The url of the broker.\n          required: true\n          schema:\n            type: string\n          example: https://broker.ids.isst.fraunhofer.de/infrastructure\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: Database query (SparQL)\n              example: |-\n                SELECT ?subject ?predicate ?object\n                FROM \u003curn:x-arq:UnionGraph\u003e\n                WHERE {\n                  ?subject ?predicate ?object\n                };\n        required: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/broker/remove/{resource-id}:\n    post:\n      tags:\n        - 'Connector: IDS Broker Communication'\n      summary: Remove Resource from Broker\n      description: Remove an IDS resource at an IDS broker.\n      operationId: deleteResourceAtBroker\n      parameters:\n        - name: broker\n          in: query\n          description: The url of the broker.\n          required: true\n          schema:\n            type: string\n          example: https://broker.ids.isst.fraunhofer.de/infrastructure\n        - name: resource-id\n          in: path\n          description: The resource id.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/broker/update/{resource-id}:\n    post:\n      tags:\n        - 'Connector: IDS Broker Communication'\n      summary: Update Resource at Broker\n      description: Update an IDS resource at an IDS broker.\n      operationId: updateResourceAtBroker\n      parameters:\n        - name: broker\n          in: query\n          description: The url of the broker.\n          required: true\n          schema:\n            type: string\n          example: https://broker.ids.isst.fraunhofer.de/infrastructure\n        - name: resource-id\n          in: path\n          description: The resource id.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/broker/register:\n    post:\n      tags:\n        - 'Connector: IDS Broker Communication'\n      summary: Register Connector\n      description: Register or update connector at an IDS broker.\n      operationId: updateAtBroker\n      parameters:\n        - name: broker\n          in: query\n          description: The url of the broker.\n          required: true\n          schema:\n            type: string\n          example: https://broker.ids.isst.fraunhofer.de/infrastructure\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/broker/update:\n    post:\n      tags:\n        - 'Connector: IDS Broker Communication'\n      summary: Register Connector\n      description: Register or update connector at an IDS broker.\n      operationId: updateAtBroker_1\n      parameters:\n        - name: broker\n          in: query\n          description: The url of the broker.\n          required: true\n          schema:\n            type: string\n          example: https://broker.ids.isst.fraunhofer.de/infrastructure\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/example/usage-policy:\n    post:\n      tags:\n        - Examples\n      summary: Get example policy\n      description: Get an example policy for a given policy pattern.\n      operationId: getExampleUsagePolicy\n      parameters:\n        - name: pattern\n          in: query\n          description: The policy pattern.\n          required: true\n          schema:\n            type: string\n            enum:\n              - PROVIDE_ACCESS\n              - PROHIBIT_ACCESS\n              - N_TIMES_USAGE\n              - DURATION_USAGE\n              - USAGE_DURING_INTERVAL\n              - USAGE_UNTIL_DELETION\n              - USAGE_LOGGING\n              - USAGE_NOTIFICATION\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /admin/api/example/configuration:\n    get:\n      tags:\n        - Examples\n      summary: Get Sample Connector configuration\n      description: Get a sample connector configuration for the config.json.\n      operationId: getConnectorConfiguration\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/example/policy-validation:\n    post:\n      tags:\n        - Examples\n      summary: Get pattern of policy\n      description: Get the policy pattern represented by a given JSON string.\n      operationId: getPolicyPattern\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: The JSON string representing a policy\n        required: true\n      responses:\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /admin/api/negotiation:\n    get:\n      tags:\n        - 'Connector: Selfservice'\n      summary: Endpoint for Policy Negotiation Status Check\n      description: Return the policy negotiation status.\n      operationId: getNegotiationStatus\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n    put:\n      tags:\n        - 'Connector: Selfservice'\n      summary: Endpoint for Policy Negotiation Status\n      description: Turn the policy negotiation on or off.\n      operationId: setNegotiationStatus\n      parameters:\n        - name: status\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /:\n    get:\n      tags:\n        - 'Connector: Selfservice'\n      summary: Public Endpoint for Connector Self-description\n      description: Get the connector's reduced self-description.\n      operationId: getPublicSelfDescription_1\n      responses:\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/connector:\n    get:\n      tags:\n        - 'Connector: Selfservice'\n      summary: Connector Self-description\n      description: Get the connector's self-description.\n      operationId: getSelfService\n      responses:\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/ignore-unsupported-patterns:\n    get:\n      tags:\n        - 'Connector: Selfservice'\n      summary: Endpoint for Pattern Checking\n      description: Return if unsupported patterns are ignored when requesting data.\n      operationId: getPatternStatus\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n    put:\n      tags:\n        - 'Connector: Selfservice'\n      summary: Endpoint for Allowing Unsupported Patterns\n      description: Allow requesting data without policy enforcement if an unsupported\n        pattern is recognized.\n      operationId: getPatternStatus_1\n      parameters:\n        - name: status\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/request/description:\n    post:\n      tags:\n        - 'Connector: IDS Connector Communication'\n      summary: Description Request\n      description: Request metadata from another IDS connector.\n      operationId: requestMetadata\n      parameters:\n        - name: recipient\n          in: query\n          description: The URI of the requested IDS connector.\n          required: true\n          schema:\n            type: string\n            format: uri\n          example: https://localhost:8080/api/ids/data\n        - name: requestedResource\n          in: query\n          description: The URI of the requested resource.\n          required: false\n          schema:\n            type: string\n            format: uri\n          example: https://w3id.org/idsa/autogen/resource/a4212311-86e4-40b3-ace3-ef29cd687cf9\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/request/contract:\n    post:\n      tags:\n        - 'Connector: IDS Connector Communication'\n      summary: Contract Request\n      description: Send a contract request to another IDS connector.\n      operationId: requestContract\n      parameters:\n        - name: recipient\n          in: query\n          description: The URI of the requested IDS connector.\n          required: true\n          schema:\n            type: string\n            format: uri\n          example: https://localhost:8080/api/ids/data\n        - name: requestedArtifact\n          in: query\n          description: The URI of the requested artifact.\n          required: true\n          schema:\n            type: string\n            format: uri\n          example: https://w3id.org/idsa/autogen/artifact/a4212311-86e4-40b3-ace3-ef29cd687cf9\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: The contract offer for the requested resource.\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/request/artifact:\n    post:\n      tags:\n        - 'Connector: IDS Connector Communication'\n      summary: Artifact Request\n      description: 'Request data from another IDS connector. INFO: Before an artifact\n        can be requested, the metadata must be queried. The key generated in this\n        process must be passed in the artifact query.'\n      operationId: requestData\n      parameters:\n        - name: recipient\n          in: query\n          description: The URI of the requested IDS connector.\n          required: true\n          schema:\n            type: string\n            format: uri\n          example: https://localhost:8080/api/ids/data\n        - name: requestedArtifact\n          in: query\n          description: The URI of the requested artifact.\n          required: true\n          schema:\n            type: string\n            format: uri\n          example: https://w3id.org/idsa/autogen/artifact/a4212311-86e4-40b3-ace3-ef29cd687cf9\n        - name: transferContract\n          in: query\n          description: The URI of the contract agreement.\n          required: false\n          schema:\n            type: string\n            format: uri\n          example: https://w3id.org/idsa/autogen/contractAgreement/a4212311-86e4-40b3-ace3-ef29cd687cf9\n        - name: key\n          in: query\n          description: A unique validation key.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryInput'\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"403\":\n          description: Forbidden\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/resources/{resource-id}:\n    get:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Get Resource\n      description: Get the resource's metadata by its uuid.\n      operationId: getResource\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n    put:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Update Resource\n      description: Update the resource's metadata by its uuid.\n      operationId: updateResource\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceMetadata'\n        required: true\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"400\":\n          description: Invalid resource\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n    delete:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Delete Resource\n      description: Delete a resource by its uuid.\n      operationId: deleteResource\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/resources/{resource-id}/access:\n    get:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Get Data Access\n      description: Get the number of the resource's data access.\n      operationId: getAccess\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n  /admin/api/resources/{resource-id}/{representation-id}:\n    get:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Get Resource Representation\n      description: Get the resource's representation by its uuid.\n      operationId: getRepresentation\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: representation-id\n          in: path\n          description: The representation uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: object\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: object\n    put:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Update representation\n      description: Update a resource's representation by its uuid.\n      operationId: updateRepresentation\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: representation-id\n          in: path\n          description: The representation uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRepresentation'\n        required: true\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"400\":\n          description: Invalid representation\n          content:\n            '*/*':\n              schema:\n                type: string\n    delete:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Remove Resource Representation\n      description: Remove a resource's representation by its uuid.\n      operationId: deleteRepresentation\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: representation-id\n          in: path\n          description: The representation uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/resources/{resource-id}/representation:\n    post:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Add Representation\n      description: Add a representation to a resource.\n      operationId: addRepresentation\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: id\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRepresentation'\n        required: true\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"409\":\n          description: Representation already exists\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"201\":\n          description: Representation created\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"400\":\n          description: Invalid representation\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/resources/{resource-id}/contract:\n    get:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Get Resource Contract\n      description: Get the resource's usage policy.\n      operationId: getContract\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n    put:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Update Resource Contract\n      description: Update the resource's usage policy.\n      operationId: updateContract\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: A new resource contract.\n        required: true\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"400\":\n          description: Invalid resource\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/resources/resource:\n    post:\n      tags:\n        - 'Connector: Resource Handling'\n      summary: Register Resource\n      description: Register a resource by its metadata.\n      operationId: createResource\n      parameters:\n        - name: id\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceMetadata'\n        required: true\n      responses:\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"400\":\n          description: Invalid resource\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"201\":\n          description: Resource created\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"409\":\n          description: Resource already exists\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/resources/{resource-id}/{representation-id}/data:\n    post:\n      tags:\n        - 'Backend: Resource Data Handling'\n      summary: Request Data String by Representation\n      description: Get a resource's data as a string by representation.\n      operationId: getDataByRepresentation\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n          example: a4212311-86e4-40b3-ace3-ef29cd687cf9\n        - name: representation-id\n          in: path\n          description: The representation uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryInput'\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\n  /admin/api/resources/{resource-id}/data:\n    put:\n      tags:\n        - 'Backend: Resource Data Handling'\n      summary: Publish Resource Data String\n      description: Publish resource data as string.\n      operationId: publishResource\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n          example: a4212311-86e4-40b3-ace3-ef29cd687cf9\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              description: The resource data.\n        required: true\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"400\":\n          description: Invalid resource\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"201\":\n          description: Resource created\n          content:\n            '*/*':\n              schema:\n                type: string\n    post:\n      tags:\n        - 'Backend: Resource Data Handling'\n      summary: Request Data String\n      description: Get a resource's data as a string.\n      operationId: getDataById\n      parameters:\n        - name: resource-id\n          in: path\n          description: The resource uuid.\n          required: true\n          schema:\n            type: string\n            format: uuid\n          example: a4212311-86e4-40b3-ace3-ef29cd687cf9\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryInput'\n      responses:\n        \"404\":\n          description: Not found\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"500\":\n          description: Internal server error\n          content:\n            '*/*':\n              schema:\n                type: string\n        \"200\":\n          description: Ok\n          content:\n            '*/*':\n              schema:\n                type: string\ncomponents:\n  schemas:\n    QueryInput:\n      type: object\n      properties:\n        headers:\n          type: object\n          additionalProperties:\n            type: string\n        params:\n          type: object\n          additionalProperties:\n            type: string\n        pathVariables:\n          type: object\n          additionalProperties:\n            type: string\n      description: The query parameters and headers to use when fetching the data\n        from the backend system.\n      example:\n        headers:\n          key: value\n        params:\n          key: value\n        pathVariables:\n          key: value\n      oneOf:\n        - $ref: '#/components/schemas/QueryInput'\n    BackendSource:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Information of the backend system.\n          enum:\n            - local\n            - http-get\n            - https-get\n            - https-get-basicauth\n        url:\n          type: string\n          format: url\n        username:\n          type: string\n        password:\n          type: string\n      description: Information of the backend system.\n      oneOf:\n        - $ref: '#/components/schemas/BackendSource'\n    ResourceRepresentation:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        type:\n          type: string\n        byteSize:\n          type: integer\n          format: int32\n        name:\n          type: string\n        source:\n          $ref: '#/components/schemas/BackendSource'\n      description: A new resource representation.\n      example:\n        uuid: 55795317-0aaa-4fe1-b336-b2e26a00597f\n        type: JSON\n        byteSize: 101\n        name: Example Representation\n        source:\n          type: http-get\n          url: https://samples.openweathermap.org/data/2.5/weather?lat=35\u0026lon=139\u0026appid=439d4b804bc8187953eb36d2a8c26a02\n      oneOf:\n        - $ref: '#/components/schemas/ResourceRepresentation'\n    ResourceMetadata:\n      required:\n        - representations\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        policy:\n          type: string\n        owner:\n          type: string\n          format: uri\n        license:\n          type: string\n          format: uri\n        version:\n          type: string\n        endpointDocumentation:\n          type: string\n          format: uri\n        representations:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ResourceRepresentation'\n      description: Metadata of a resource\n      example:\n        title: ExampleResource\n        description: ExampleResourceDescription\n        policy: Example policy\n        representations:\n          - type: XML\n            byteSize: 101\n            name: Example Representation\n            source:\n              type: local\n      oneOf:\n        - $ref: '#/components/schemas/ResourceMetadata'\n",
			"canonicalURL": "/github.com/eclipse/tractusx@9ae3c07cd21e081fbad0d75d2b8ebee7d9c1b5d5/-/blob/connector/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse/tractusx/blob/9ae3c07cd21e081fbad0d75d2b8ebee7d9c1b5d5/connector/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/admin/api/request/artifact\": post: requestBody: contents: media: \"application/json\": generate schema: oneOf: oneOf \"#/components/schemas/QueryInput\" [0]: reference \"#/components/schemas/QueryInput\" [0] leads to infinite recursion",
	"NotImplemented": [
		"unsupported content types"
	]
}