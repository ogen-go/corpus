{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ocaml-multicore/tezos"
		},
		"file": {
			"name": "hangzhou-mempool-openapi.json",
			"size": 0,
			"path": "docs/api/hangzhou-mempool-openapi.json",
			"byteSize": 54449,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Tezos RPC\",\n    \"description\": \"Tezos client RPC API.\",\n    \"version\": \"11.0\"\n  },\n  \"paths\": {\n    \"/ban_operation\": {\n      \"post\": {\n        \"description\": \"Remove an operation from the mempool if present, reverting its effect if it was applied. Add it to the set of banned operations to prevent it from being fetched/processed/injected in the future. Note: If the baker has already received the operation, then it's necessary to restart it to flush the operation from it.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Operation_hash\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/filter\": {\n      \"get\": {\n        \"description\": \"Get the configuration of the mempool filter.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"description\": \"Set the configuration of the mempool filter.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {}\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/monitor_operations\": {\n      \"get\": {\n        \"description\": \"Monitor the mempool operations.\",\n        \"parameters\": [\n          {\n            \"name\": \"applied\",\n            \"in\": \"query\",\n            \"description\": \"Include applied operations (set by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"refused\",\n            \"in\": \"query\",\n            \"description\": \"Include refused operations\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"branch_refused\",\n            \"in\": \"query\",\n            \"description\": \"Include branch refused operations\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"branch_delayed\",\n            \"in\": \"query\",\n            \"description\": \"Include branch delayed operations (set by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"description\": \"An operation's shell header.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"hash\": {\n                        \"$ref\": \"#/components/schemas/Operation_hash\"\n                      },\n                      \"protocol\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\"\n                        ]\n                      },\n                      \"branch\": {\n                        \"$ref\": \"#/components/schemas/block_hash\"\n                      },\n                      \"contents\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/011-PtHangz2.operation.alpha.contents\"\n                        }\n                      },\n                      \"signature\": {\n                        \"$ref\": \"#/components/schemas/Signature\"\n                      },\n                      \"error\": {\n                        \"$ref\": \"#/components/schemas/error\"\n                      }\n                    },\n                    \"required\": [\n                      \"hash\",\n                      \"protocol\",\n                      \"branch\",\n                      \"contents\",\n                      \"signature\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/pending_operations\": {\n      \"get\": {\n        \"description\": \"List the prevalidated operations.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"applied\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"description\": \"An operation's shell header.\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"hash\": {\n                            \"$ref\": \"#/components/schemas/Operation_hash\"\n                          },\n                          \"branch\": {\n                            \"$ref\": \"#/components/schemas/block_hash\"\n                          },\n                          \"contents\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"$ref\": \"#/components/schemas/011-PtHangz2.operation.alpha.contents\"\n                            }\n                          },\n                          \"signature\": {\n                            \"$ref\": \"#/components/schemas/Signature\"\n                          }\n                        },\n                        \"required\": [\n                          \"hash\",\n                          \"branch\",\n                          \"contents\",\n                          \"signature\"\n                        ]\n                      }\n                    },\n                    \"refused\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"oneOf\": [\n                            {\n                              \"$ref\": \"#/components/schemas/Operation_hash\"\n                            },\n                            {\n                              \"description\": \"An operation's shell header.\",\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"protocol\": {\n                                  \"type\": \"string\",\n                                  \"enum\": [\n                                    \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\"\n                                  ]\n                                },\n                                \"branch\": {\n                                  \"$ref\": \"#/components/schemas/block_hash\"\n                                },\n                                \"contents\": {\n                                  \"type\": \"array\",\n                                  \"items\": {\n                                    \"$ref\": \"#/components/schemas/011-PtHangz2.operation.alpha.contents\"\n                                  }\n                                },\n                                \"signature\": {\n                                  \"$ref\": \"#/components/schemas/Signature\"\n                                },\n                                \"error\": {\n                                  \"$ref\": \"#/components/schemas/error\"\n                                }\n                              },\n                              \"required\": [\n                                \"protocol\",\n                                \"branch\",\n                                \"contents\",\n                                \"signature\",\n                                \"error\"\n                              ]\n                            }\n                          ]\n                        }\n                      }\n                    },\n                    \"branch_refused\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"oneOf\": [\n                            {\n                              \"$ref\": \"#/components/schemas/Operation_hash\"\n                            },\n                            {\n                              \"description\": \"An operation's shell header.\",\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"protocol\": {\n                                  \"type\": \"string\",\n                                  \"enum\": [\n                                    \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\"\n                                  ]\n                                },\n                                \"branch\": {\n                                  \"$ref\": \"#/components/schemas/block_hash\"\n                                },\n                                \"contents\": {\n                                  \"type\": \"array\",\n                                  \"items\": {\n                                    \"$ref\": \"#/components/schemas/011-PtHangz2.operation.alpha.contents\"\n                                  }\n                                },\n                                \"signature\": {\n                                  \"$ref\": \"#/components/schemas/Signature\"\n                                },\n                                \"error\": {\n                                  \"$ref\": \"#/components/schemas/error\"\n                                }\n                              },\n                              \"required\": [\n                                \"protocol\",\n                                \"branch\",\n                                \"contents\",\n                                \"signature\",\n                                \"error\"\n                              ]\n                            }\n                          ]\n                        }\n                      }\n                    },\n                    \"branch_delayed\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"oneOf\": [\n                            {\n                              \"$ref\": \"#/components/schemas/Operation_hash\"\n                            },\n                            {\n                              \"description\": \"An operation's shell header.\",\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"protocol\": {\n                                  \"type\": \"string\",\n                                  \"enum\": [\n                                    \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\"\n                                  ]\n                                },\n                                \"branch\": {\n                                  \"$ref\": \"#/components/schemas/block_hash\"\n                                },\n                                \"contents\": {\n                                  \"type\": \"array\",\n                                  \"items\": {\n                                    \"$ref\": \"#/components/schemas/011-PtHangz2.operation.alpha.contents\"\n                                  }\n                                },\n                                \"signature\": {\n                                  \"$ref\": \"#/components/schemas/Signature\"\n                                },\n                                \"error\": {\n                                  \"$ref\": \"#/components/schemas/error\"\n                                }\n                              },\n                              \"required\": [\n                                \"protocol\",\n                                \"branch\",\n                                \"contents\",\n                                \"signature\",\n                                \"error\"\n                              ]\n                            }\n                          ]\n                        }\n                      }\n                    },\n                    \"unprocessed\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"oneOf\": [\n                            {\n                              \"$ref\": \"#/components/schemas/Operation_hash\"\n                            },\n                            {\n                              \"$ref\": \"#/components/schemas/next_operation\"\n                            }\n                          ]\n                        }\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"applied\",\n                    \"refused\",\n                    \"branch_refused\",\n                    \"branch_delayed\",\n                    \"unprocessed\"\n                  ]\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/request_operations\": {\n      \"post\": {\n        \"description\": \"Request the operations of your peers.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {}\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {}\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/unban_all_operations\": {\n      \"post\": {\n        \"description\": \"Clear the set of banned operations.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {}\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/unban_operation\": {\n      \"post\": {\n        \"description\": \"Remove an operation from the set of banned operations (nothing happens if it was not banned).\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Operation_hash\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"011-PtHangz2.block_header.alpha.full_header\": {\n        \"title\": \"Shell header\",\n        \"description\": \"Block header's shell-related content. It contains information such as the block level, its predecessor and timestamp.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"level\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          },\n          \"proto\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 255\n          },\n          \"predecessor\": {\n            \"$ref\": \"#/components/schemas/block_hash\"\n          },\n          \"timestamp\": {\n            \"$ref\": \"#/components/schemas/timestamp.protocol\"\n          },\n          \"validation_pass\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 255\n          },\n          \"operations_hash\": {\n            \"$ref\": \"#/components/schemas/Operation_list_list_hash\"\n          },\n          \"fitness\": {\n            \"$ref\": \"#/components/schemas/fitness\"\n          },\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Context_hash\"\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 65535\n          },\n          \"proof_of_work_nonce\": {\n            \"type\": \"string\",\n            \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n          },\n          \"seed_nonce_hash\": {\n            \"$ref\": \"#/components/schemas/cycle_nonce\"\n          },\n          \"liquidity_baking_escape_vote\": {\n            \"type\": \"boolean\"\n          },\n          \"signature\": {\n            \"$ref\": \"#/components/schemas/Signature\"\n          }\n        },\n        \"required\": [\n          \"level\",\n          \"proto\",\n          \"predecessor\",\n          \"timestamp\",\n          \"validation_pass\",\n          \"operations_hash\",\n          \"fitness\",\n          \"context\",\n          \"priority\",\n          \"proof_of_work_nonce\",\n          \"liquidity_baking_escape_vote\",\n          \"signature\"\n        ]\n      },\n      \"011-PtHangz2.contract_id\": {\n        \"title\": \"A contract handle\",\n        \"description\": \"A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"011-PtHangz2.entrypoint\": {\n        \"title\": \"entrypoint\",\n        \"description\": \"Named entrypoint to a Michelson smart contract\",\n        \"oneOf\": [\n          {\n            \"title\": \"default\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"default\"\n            ]\n          },\n          {\n            \"title\": \"root\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"root\"\n            ]\n          },\n          {\n            \"title\": \"do\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"do\"\n            ]\n          },\n          {\n            \"title\": \"set_delegate\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"set_delegate\"\n            ]\n          },\n          {\n            \"title\": \"remove_delegate\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"remove_delegate\"\n            ]\n          },\n          {\n            \"title\": \"named\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"011-PtHangz2.inlined.endorsement\": {\n        \"description\": \"An operation's shell header.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"branch\": {\n            \"$ref\": \"#/components/schemas/block_hash\"\n          },\n          \"operations\": {\n            \"$ref\": \"#/components/schemas/011-PtHangz2.inlined.endorsement.contents\"\n          },\n          \"signature\": {\n            \"$ref\": \"#/components/schemas/Signature\"\n          }\n        },\n        \"required\": [\n          \"branch\",\n          \"operations\"\n        ]\n      },\n      \"011-PtHangz2.inlined.endorsement.contents\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"kind\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"endorsement\"\n            ]\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          }\n        },\n        \"required\": [\n          \"kind\",\n          \"level\"\n        ]\n      },\n      \"011-PtHangz2.michelson.v1.primitives\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"ABS\",\n          \"IF\",\n          \"SENDER\",\n          \"VOTING_POWER\",\n          \"False\",\n          \"NEVER\",\n          \"DUG\",\n          \"chest\",\n          \"BLAKE2B\",\n          \"map\",\n          \"bls12_381_g2\",\n          \"Pair\",\n          \"INT\",\n          \"option\",\n          \"bls12_381_g1\",\n          \"storage\",\n          \"SIZE\",\n          \"view\",\n          \"SHA256\",\n          \"AND\",\n          \"VIEW\",\n          \"mutez\",\n          \"NIL\",\n          \"big_map\",\n          \"SUB\",\n          \"SAPLING_VERIFY_UPDATE\",\n          \"CHECK_SIGNATURE\",\n          \"TOTAL_VOTING_POWER\",\n          \"address\",\n          \"MAP\",\n          \"or\",\n          \"ticket\",\n          \"ADD\",\n          \"IMPLICIT_ACCOUNT\",\n          \"SHA512\",\n          \"key\",\n          \"LSL\",\n          \"bls12_381_fr\",\n          \"chest_key\",\n          \"sapling_state\",\n          \"COMPARE\",\n          \"TRANSFER_TOKENS\",\n          \"STEPS_TO_QUOTA\",\n          \"DROP\",\n          \"set\",\n          \"BALANCE\",\n          \"CONCAT\",\n          \"MUL\",\n          \"FAILWITH\",\n          \"Elt\",\n          \"list\",\n          \"OR\",\n          \"DIP\",\n          \"MEM\",\n          \"LOOP_LEFT\",\n          \"lambda\",\n          \"ITER\",\n          \"Some\",\n          \"parameter\",\n          \"sapling_transaction\",\n          \"EMPTY_MAP\",\n          \"None\",\n          \"SET_DELEGATE\",\n          \"pair\",\n          \"AMOUNT\",\n          \"string\",\n          \"PAIRING_CHECK\",\n          \"bytes\",\n          \"CHAIN_ID\",\n          \"HASH_KEY\",\n          \"IF_LEFT\",\n          \"CREATE_ACCOUNT\",\n          \"LT\",\n          \"KECCAK\",\n          \"UNPACK\",\n          \"SPLIT_TICKET\",\n          \"SELF_ADDRESS\",\n          \"unit\",\n          \"UNIT\",\n          \"LE\",\n          \"SOURCE\",\n          \"CREATE_CONTRACT\",\n          \"Unit\",\n          \"DIG\",\n          \"NONE\",\n          \"ISNAT\",\n          \"GE\",\n          \"SOME\",\n          \"key_hash\",\n          \"SELF\",\n          \"signature\",\n          \"CAR\",\n          \"NOT\",\n          \"operation\",\n          \"CDR\",\n          \"ADDRESS\",\n          \"TICKET\",\n          \"RIGHT\",\n          \"LEFT\",\n          \"RENAME\",\n          \"True\",\n          \"Right\",\n          \"PACK\",\n          \"IF_CONS\",\n          \"SHA3\",\n          \"constant\",\n          \"UPDATE\",\n          \"EMPTY_SET\",\n          \"NEQ\",\n          \"LAMBDA\",\n          \"timestamp\",\n          \"READ_TICKET\",\n          \"LOOP\",\n          \"Left\",\n          \"int\",\n          \"LSR\",\n          \"EMPTY_BIG_MAP\",\n          \"chain_id\",\n          \"OPEN_CHEST\",\n          \"LEVEL\",\n          \"UNPAIR\",\n          \"JOIN_TICKETS\",\n          \"PUSH\",\n          \"nat\",\n          \"GT\",\n          \"never\",\n          \"NOW\",\n          \"IF_NONE\",\n          \"PAIR\",\n          \"GET_AND_UPDATE\",\n          \"XOR\",\n          \"CAST\",\n          \"bool\",\n          \"SAPLING_EMPTY_STATE\",\n          \"EDIV\",\n          \"EQ\",\n          \"CONTRACT\",\n          \"contract\",\n          \"EXEC\",\n          \"GET\",\n          \"NEG\",\n          \"SLICE\",\n          \"DUP\",\n          \"CONS\",\n          \"SWAP\",\n          \"APPLY\",\n          \"code\"\n        ]\n      },\n      \"011-PtHangz2.mutez\": {\n        \"$ref\": \"#/components/schemas/positive_bignum\"\n      },\n      \"011-PtHangz2.operation.alpha.contents\": {\n        \"oneOf\": [\n          {\n            \"title\": \"Endorsement\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"endorsement\"\n                ]\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"level\"\n            ]\n          },\n          {\n            \"title\": \"Seed_nonce_revelation\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"seed_nonce_revelation\"\n                ]\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"nonce\": {\n                \"type\": \"string\",\n                \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"level\",\n              \"nonce\"\n            ]\n          },\n          {\n            \"title\": \"Endorsement_with_slot\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"endorsement_with_slot\"\n                ]\n              },\n              \"endorsement\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.inlined.endorsement\"\n              },\n              \"slot\": {\n                \"type\": \"integer\",\n                \"minimum\": 0,\n                \"maximum\": 65535\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"endorsement\",\n              \"slot\"\n            ]\n          },\n          {\n            \"title\": \"Double_endorsement_evidence\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"double_endorsement_evidence\"\n                ]\n              },\n              \"op1\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.inlined.endorsement\"\n              },\n              \"op2\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.inlined.endorsement\"\n              },\n              \"slot\": {\n                \"type\": \"integer\",\n                \"minimum\": 0,\n                \"maximum\": 65535\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"op1\",\n              \"op2\",\n              \"slot\"\n            ]\n          },\n          {\n            \"title\": \"Double_baking_evidence\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"double_baking_evidence\"\n                ]\n              },\n              \"bh1\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.block_header.alpha.full_header\"\n              },\n              \"bh2\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.block_header.alpha.full_header\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"bh1\",\n              \"bh2\"\n            ]\n          },\n          {\n            \"title\": \"Activate_account\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"activate_account\"\n                ]\n              },\n              \"pkh\": {\n                \"$ref\": \"#/components/schemas/Ed25519.Public_key_hash\"\n              },\n              \"secret\": {\n                \"type\": \"string\",\n                \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"pkh\",\n              \"secret\"\n            ]\n          },\n          {\n            \"title\": \"Proposals\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"proposals\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"period\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"proposals\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Protocol_hash\"\n                }\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"period\",\n              \"proposals\"\n            ]\n          },\n          {\n            \"title\": \"Ballot\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"ballot\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"period\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"proposal\": {\n                \"$ref\": \"#/components/schemas/Protocol_hash\"\n              },\n              \"ballot\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"nay\",\n                  \"yay\",\n                  \"pass\"\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"period\",\n              \"proposal\",\n              \"ballot\"\n            ]\n          },\n          {\n            \"title\": \"Reveal\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"reveal\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"public_key\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"public_key\"\n            ]\n          },\n          {\n            \"title\": \"Transaction\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"transaction\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"amount\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.mutez\"\n              },\n              \"destination\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.contract_id\"\n              },\n              \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"entrypoint\": {\n                    \"$ref\": \"#/components/schemas/011-PtHangz2.entrypoint\"\n                  },\n                  \"value\": {\n                    \"oneOf\": [\n                      {\n                        \"title\": \"Int\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"int\": {\n                            \"$ref\": \"#/components/schemas/bignum\"\n                          }\n                        },\n                        \"required\": [\n                          \"int\"\n                        ]\n                      },\n                      {\n                        \"title\": \"String\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"string\": {\n                            \"$ref\": \"#/components/schemas/unistring\"\n                          }\n                        },\n                        \"required\": [\n                          \"string\"\n                        ]\n                      },\n                      {\n                        \"title\": \"Bytes\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"bytes\": {\n                            \"type\": \"string\",\n                            \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                          }\n                        },\n                        \"required\": [\n                          \"bytes\"\n                        ]\n                      },\n                      {\n                        \"title\": \"Sequence\",\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                        }\n                      },\n                      {\n                        \"title\": \"Generic prim (any number of args with or without annot)\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"prim\": {\n                            \"$ref\": \"#/components/schemas/011-PtHangz2.michelson.v1.primitives\"\n                          },\n                          \"args\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                            }\n                          },\n                          \"annots\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"required\": [\n                          \"prim\"\n                        ]\n                      }\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"entrypoint\",\n                  \"value\"\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"amount\",\n              \"destination\"\n            ]\n          },\n          {\n            \"title\": \"Origination\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"origination\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"balance\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.mutez\"\n              },\n              \"delegate\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"script\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.scripted.contracts\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"balance\",\n              \"script\"\n            ]\n          },\n          {\n            \"title\": \"Delegation\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"delegation\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"delegate\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\"\n            ]\n          },\n          {\n            \"title\": \"Failing_noop\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"failing_noop\"\n                ]\n              },\n              \"arbitrary\": {\n                \"$ref\": \"#/components/schemas/unistring\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"arbitrary\"\n            ]\n          },\n          {\n            \"title\": \"Register_global_constant\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"register_global_constant\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"value\": {\n                \"oneOf\": [\n                  {\n                    \"title\": \"Int\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"int\": {\n                        \"$ref\": \"#/components/schemas/bignum\"\n                      }\n                    },\n                    \"required\": [\n                      \"int\"\n                    ]\n                  },\n                  {\n                    \"title\": \"String\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"string\": {\n                        \"$ref\": \"#/components/schemas/unistring\"\n                      }\n                    },\n                    \"required\": [\n                      \"string\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Bytes\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"bytes\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                      }\n                    },\n                    \"required\": [\n                      \"bytes\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Sequence\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                    }\n                  },\n                  {\n                    \"title\": \"Generic prim (any number of args with or without annot)\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"prim\": {\n                        \"$ref\": \"#/components/schemas/011-PtHangz2.michelson.v1.primitives\"\n                      },\n                      \"args\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                        }\n                      },\n                      \"annots\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"prim\"\n                    ]\n                  }\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"value\"\n            ]\n          }\n        ]\n      },\n      \"011-PtHangz2.scripted.contracts\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"oneOf\": [\n              {\n                \"title\": \"Int\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"int\": {\n                    \"$ref\": \"#/components/schemas/bignum\"\n                  }\n                },\n                \"required\": [\n                  \"int\"\n                ]\n              },\n              {\n                \"title\": \"String\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"string\": {\n                    \"$ref\": \"#/components/schemas/unistring\"\n                  }\n                },\n                \"required\": [\n                  \"string\"\n                ]\n              },\n              {\n                \"title\": \"Bytes\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"bytes\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                  }\n                },\n                \"required\": [\n                  \"bytes\"\n                ]\n              },\n              {\n                \"title\": \"Sequence\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                }\n              },\n              {\n                \"title\": \"Generic prim (any number of args with or without annot)\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"prim\": {\n                    \"$ref\": \"#/components/schemas/011-PtHangz2.michelson.v1.primitives\"\n                  },\n                  \"args\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                    }\n                  },\n                  \"annots\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"prim\"\n                ]\n              }\n            ]\n          },\n          \"storage\": {\n            \"oneOf\": [\n              {\n                \"title\": \"Int\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"int\": {\n                    \"$ref\": \"#/components/schemas/bignum\"\n                  }\n                },\n                \"required\": [\n                  \"int\"\n                ]\n              },\n              {\n                \"title\": \"String\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"string\": {\n                    \"$ref\": \"#/components/schemas/unistring\"\n                  }\n                },\n                \"required\": [\n                  \"string\"\n                ]\n              },\n              {\n                \"title\": \"Bytes\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"bytes\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                  }\n                },\n                \"required\": [\n                  \"bytes\"\n                ]\n              },\n              {\n                \"title\": \"Sequence\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                }\n              },\n              {\n                \"title\": \"Generic prim (any number of args with or without annot)\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"prim\": {\n                    \"$ref\": \"#/components/schemas/011-PtHangz2.michelson.v1.primitives\"\n                  },\n                  \"args\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                    }\n                  },\n                  \"annots\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"prim\"\n                ]\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"storage\"\n        ]\n      },\n      \"Context_hash\": {\n        \"title\": \"A hash of context (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Ed25519.Public_key_hash\": {\n        \"title\": \"An Ed25519 public key hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Operation_hash\": {\n        \"title\": \"A Tezos operation ID (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Operation_list_list_hash\": {\n        \"title\": \"A list of list of operations (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Protocol_hash\": {\n        \"title\": \"A Tezos protocol ID (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Signature\": {\n        \"title\": \"A Ed25519, Secp256k1 or P256 signature (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Signature.Public_key\": {\n        \"title\": \"A Ed25519, Secp256k1, or P256 public key (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Signature.Public_key_hash\": {\n        \"title\": \"A Ed25519, Secp256k1, or P256 public key hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"bignum\": {\n        \"title\": \"Big number\",\n        \"description\": \"Decimal representation of a big number\",\n        \"type\": \"string\"\n      },\n      \"block_hash\": {\n        \"title\": \"A block identifier (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"cycle_nonce\": {\n        \"title\": \"A nonce hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"error\": {\n        \"description\": \"The full list of error is available with the global RPC `GET errors`\"\n      },\n      \"fitness\": {\n        \"title\": \"Block fitness\",\n        \"description\": \"The fitness, or score, of a block, that allow the Tezos to decide which chain is the best. A fitness value is a list of byte sequences. They are compared as follows: shortest lists are smaller; lists of the same length are compared according to the lexicographical order.\",\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\",\n          \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n        }\n      },\n      \"micheline.011-PtHangz2.michelson_v1.expression\": {\n        \"oneOf\": [\n          {\n            \"title\": \"Int\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"int\": {\n                \"$ref\": \"#/components/schemas/bignum\"\n              }\n            },\n            \"required\": [\n              \"int\"\n            ]\n          },\n          {\n            \"title\": \"String\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"string\": {\n                \"$ref\": \"#/components/schemas/unistring\"\n              }\n            },\n            \"required\": [\n              \"string\"\n            ]\n          },\n          {\n            \"title\": \"Bytes\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"bytes\": {\n                \"type\": \"string\",\n                \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n              }\n            },\n            \"required\": [\n              \"bytes\"\n            ]\n          },\n          {\n            \"title\": \"Sequence\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n            }\n          },\n          {\n            \"title\": \"Generic prim (any number of args with or without annot)\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"prim\": {\n                \"$ref\": \"#/components/schemas/011-PtHangz2.michelson.v1.primitives\"\n              },\n              \"args\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/micheline.011-PtHangz2.michelson_v1.expression\"\n                }\n              },\n              \"annots\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"required\": [\n              \"prim\"\n            ]\n          }\n        ]\n      },\n      \"next_operation\": {\n        \"description\": \"An operation's shell header.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"protocol\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\"\n            ]\n          },\n          \"branch\": {\n            \"$ref\": \"#/components/schemas/block_hash\"\n          },\n          \"contents\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/011-PtHangz2.operation.alpha.contents\"\n            }\n          },\n          \"signature\": {\n            \"$ref\": \"#/components/schemas/Signature\"\n          }\n        },\n        \"required\": [\n          \"protocol\",\n          \"branch\",\n          \"contents\",\n          \"signature\"\n        ]\n      },\n      \"positive_bignum\": {\n        \"title\": \"Positive big number\",\n        \"description\": \"Decimal representation of a positive big number\",\n        \"type\": \"string\"\n      },\n      \"timestamp.protocol\": {\n        \"description\": \"A timestamp as seen by the protocol: second-level precision, epoch based.\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"unistring\": {\n        \"title\": \"Universal string representation\",\n        \"description\": \"Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.\",\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"invalid_utf8_string\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"minimum\": 0,\n                  \"maximum\": 255\n                }\n              }\n            },\n            \"required\": [\n              \"invalid_utf8_string\"\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/ocaml-multicore/tezos@e4fd21a1cb02d194b3162ab42d512b7c985ee8a9/-/blob/docs/api/hangzhou-mempool-openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/ocaml-multicore/tezos/blob/e4fd21a1cb02d194b3162ab42d512b7c985ee8a9/docs/api/hangzhou-mempool-openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: anonymous type name conflict: \"ErrorStatusCode\""
}