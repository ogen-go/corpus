{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/trytouca/trytouca"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": "packages/api-schema/src/schema.yaml",
			"byteSize": 95974,
			"content": "openapi: 3.0.0\ninfo:\n  description: Touca Server API Specification\n  version: 1.8.0\n  title: Touca Server API\n  contact:\n    email: support@touca.io\nservers:\n  - url: https://api.touca.io\ncomponents:\n  headers:\n    Location:\n      description: the url to redirect a page to\n      schema:\n        type: string\n        format: url\n  parameters:\n    user:\n      name: user\n      in: path\n      required: true\n      description: username of account to be updated\n      schema:\n        type: string\n        example: alice\n    member:\n      name: member\n      in: path\n      required: true\n      description: username of member to be updated\n      schema:\n        type: string\n        example: alice\n    account:\n      name: account\n      in: path\n      required: true\n      description: username of account to be updated\n      schema:\n        type: string\n        example: alice\n    team:\n      name: team\n      in: path\n      required: true\n      description: slug of this team\n      schema:\n        type: string\n        example: acme\n    suite:\n      name: suite\n      in: path\n      required: true\n      description: slug of this suite\n      schema:\n        type: string\n        example: potions-101\n    batch:\n      name: batch\n      in: path\n      required: true\n      description: version of the workflow\n      schema:\n        type: string\n        example: 7.12.149\n    element:\n      name: element\n      in: path\n      required: true\n      description: testcase to be given as input to the workflow under test\n      schema:\n        type: string\n    dstSuite:\n      name: dstSuite\n      in: path\n      required: true\n      description: slug of the suite to compare against\n      schema:\n        type: string\n    dstBatch:\n      name: dstBatch\n      in: path\n      required: true\n      description: version to compare against\n      schema:\n        type: string\n    dstElement:\n      name: dstElementName\n      in: path\n      required: true\n      description: slug of the element in the suite to compare against\n      schema:\n        type: string\n    comment:\n      name: comment\n      in: path\n      required: true\n      description: unique id of this comment\n      schema:\n        type: string\n        example: 123456\n    resetKey:\n      name: key\n      in: path\n      required: true\n      description: reset key provided by the platform\n      schema:\n        type: string\n        format: uuid\n    job:\n      name: job\n      in: path\n      required: true\n      description: unique identifier for this comparison job\n      schema:\n        $ref: '#/components/schemas/ObjectId'\n    session_id:\n      name: session_id\n      in: path\n      required: true\n      description: unique id of this session\n      schema:\n        type: string\n  schemas:\n    BatchCompareOverview:\n      type: object\n      properties:\n        elementsCountDifferent:\n          type: integer\n          format: int32\n        elementsCountFresh:\n          type: integer\n          format: int32\n        elementsCountHead:\n          type: integer\n          format: int32\n        elementsCountMissing:\n          type: integer\n          format: int32\n        elementsCountPending:\n          type: integer\n          format: int32\n        elementsScoreAbsolute:\n          type: number\n          format: float\n        elementsScoreAggregate:\n          type: number\n          format: float\n        metricsDurationChange:\n          type: integer\n          format: int32\n        metricsDurationHead:\n          type: integer\n          format: int32\n        metricsDurationSign:\n          type: integer\n          format: int32\n    BatchComparisonItem:\n      additionalProperties: false\n      type: object\n      required:\n        - builtAt\n        - elementName\n      properties:\n        builtAt:\n          type: string\n          format: date-time\n        elementName:\n          type: string\n    BatchComparisonItemCommon:\n      additionalProperties: false\n      type: object\n      required:\n        - dst\n        - src\n      properties:\n        dst:\n          $ref: '#/components/schemas/BatchComparisonItem'\n        meta:\n          $ref: '#/components/schemas/CppTestcaseComparisonOverview'\n        src:\n          $ref: '#/components/schemas/BatchComparisonItem'\n    BatchComparisonItemSolo:\n      allOf:\n        - $ref: '#/components/schemas/BatchComparisonItem'\n        - type: object\n          properties:\n            meta:\n              $ref: '#/components/schemas/CppTestcaseOverview'\n    BatchComparisonResponse:\n      additionalProperties: false\n      type: object\n      required:\n        - common\n        - fresh\n        - missing\n      properties:\n        common:\n          type: array\n          items:\n            $ref: '#/components/schemas/BatchComparisonItemCommon'\n        fresh:\n          type: array\n          items:\n            $ref: '#/components/schemas/BatchComparisonItemSolo'\n        missing:\n          type: array\n          items:\n            $ref: '#/components/schemas/BatchComparisonItemSolo'\n        overview:\n          $ref: '#/components/schemas/BatchCompareOverview'\n    BatchItem:\n      allOf:\n        - $ref: '#/components/schemas/BatchItemRaw'\n        - type: object\n          required:\n            - meta\n          properties:\n            meta:\n              $ref: '#/components/schemas/BatchCompareOverview'\n    BatchItemRaw:\n      type: object\n      additionalProperties: false\n      required:\n        - batchSlug\n        - comparedAgainst\n        - expirable\n        - isSealed\n        - messageCount\n        - submittedAt\n        - submittedBy\n        - updatedAt\n      properties:\n        batchSlug:\n          type: string\n        comparedAgainst:\n          type: string\n        expirable:\n          type: boolean\n        isSealed:\n          type: boolean\n        messageCount:\n          type: number\n        submittedAt:\n          type: string\n          format: date-time\n        submittedBy:\n          type: array\n          items:\n            $ref: '#/components/schemas/Userinfo'\n        updatedAt:\n          type: string\n          format: date-time\n    BatchListResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/BatchItem'\n    BatchLookupResponse:\n      allOf:\n        - $ref: '#/components/schemas/BatchItem'\n        - type: object\n          additionalProperties: false\n          required:\n            - commentCount\n            - meta\n            - suiteName\n            - suiteSlug\n            - teamName\n            - teamSlug\n          properties:\n            commentCount:\n              type: number\n            suiteName:\n              type: string\n            suiteSlug:\n              type: string\n            teamName:\n              type: string\n            teamSlug:\n              type: string\n    CommentItem:\n      type: object\n      additionalProperties: false\n      required:\n        - at\n        - by\n        - id\n        - replies\n        - text\n      properties:\n        at:\n          type: string\n          format: date-time\n        by:\n          $ref: '#/components/schemas/Userinfo'\n        editedAt:\n          type: string\n          format: date-time\n        id:\n          type: string\n        replies:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommentItem'\n        text:\n          type: string\n    CommentListResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/CommentItem'\n    CppCellar:\n      additionalProperties: false\n      type: object\n      required:\n        - commonKeys\n        - missingKeys\n        - newKeys\n      properties:\n        commonKeys:\n          type: array\n          items:\n            $ref: '#/components/schemas/CppTypeComparison'\n        missingKeys:\n          type: array\n          items:\n            $ref: '#/components/schemas/CppTypeComparison'\n        newKeys:\n          type: array\n          items:\n            $ref: '#/components/schemas/CppTypeComparison'\n    CppTestcaseComparison:\n      additionalProperties: false\n      type: object\n      required:\n        - assertions\n        - dst\n        - metrics\n        - results\n        - src\n      properties:\n        assertions:\n          $ref: '#/components/schemas/CppCellar'\n        dst:\n          $ref: '#/components/schemas/CppTestcaseMetadata'\n        metrics:\n          $ref: '#/components/schemas/CppCellar'\n        results:\n          $ref: '#/components/schemas/CppCellar'\n        src:\n          $ref: '#/components/schemas/CppTestcaseMetadata'\n    CppTestcaseComparisonOverview:\n      additionalProperties: false\n      type: object\n      properties:\n        keysCountCommon:\n          type: number\n          format: int32\n        keysCountFresh:\n          type: number\n          format: int32\n        keysCountMissing:\n          type: number\n          format: int32\n        keysScore:\n          type: number\n          format: float\n        metricsCountCommon:\n          type: number\n          format: int32\n        metricsCountFresh:\n          type: number\n          format: int32\n        metricsCountMissing:\n          type: number\n          format: int32\n        metricsDurationCommonDst:\n          type: number\n          format: int32\n        metricsDurationCommonSrc:\n          type: number\n          format: int32\n    CppTestcaseMetadata:\n      additionalProperties: false\n      type: object\n      required:\n        - builtAt\n        - teamSlug\n        - testcase\n        - testsuite\n        - version\n      properties:\n        builtAt:\n          type: string\n          format: date-time\n        teamSlug:\n          type: string\n        testcase:\n          type: string\n        testsuite:\n          type: string\n        version:\n          type: string\n    CppTestcaseOverview:\n      additionalProperties: false\n      type: object\n      properties:\n        keysCount:\n          type: number\n        metricsCount:\n          type: number\n        metricsDuration:\n          type: number\n    CppTypeComparison:\n      additionalProperties: false\n      type: object\n      required:\n        - name\n      properties:\n        desc:\n          type: array\n          items:\n            type: string\n        dstType:\n          type: string\n        dstValue:\n          type: string\n        name:\n          type: string\n        score:\n          type: number\n          format: float\n        srcType:\n          type: string\n        srcValue:\n          type: string\n    EFeatureFlag:\n      type: string\n      enum:\n        - newsletter_product\n        - newsletter_changelog\n    ENotificationType:\n      type: string\n      enum:\n        - none\n        - different\n        - all\n    EPlatformRole:\n      type: string\n      enum:\n        - guest\n        - user\n        - admin\n        - owner\n        - super\n    ETeamRole:\n      type: string\n      enum:\n        - unknown\n        - applicant\n        - invited\n        - member\n        - admin\n        - owner\n    ElementComparisonItem:\n      allOf:\n        - $ref: '#/components/schemas/BatchComparisonItem'\n        - type: object\n          required:\n            - submittedAt\n            - submittedBy\n          properties:\n            submittedAt:\n              type: string\n              format: date-time\n            submittedBy:\n              $ref: '#/components/schemas/Userinfo'\n    ElementComparisonResponse:\n      additionalProperties: false\n      type: object\n      required:\n        - dst\n        - src\n      properties:\n        cmp:\n          $ref: '#/components/schemas/CppTestcaseComparison'\n        dst:\n          $ref: '#/components/schemas/ElementComparisonItem'\n        meta:\n          $ref: '#/components/schemas/CppTestcaseComparisonOverview'\n        src:\n          $ref: '#/components/schemas/ElementComparisonItem'\n    ElementListResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/ElementListResponseItem'\n    ElementListResponseItem:\n      additionalProperties: false\n      type: object\n      required:\n        - metricsDuration\n        - name\n        - slug\n      properties:\n        metricsDuration:\n          type: number\n        name:\n          type: string\n        note:\n          type: string\n        slug:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n        versions:\n          type: array\n          items:\n            type: object\n            properties:\n              match:\n                type: number\n              name:\n                type: string\n              time:\n                type: number\n    ElementLookupResponse:\n      additionalProperties: false\n      type: object\n      required:\n        - batches\n        - elementName\n        - elementSlug\n        - suiteName\n        - suiteSlug\n        - teamName\n        - teamSlug\n      properties:\n        batches:\n          type: array\n          items:\n            type: object\n            properties:\n              slug:\n                type: string\n              submittedAt:\n                type: string\n                format: date-time\n              updatedAt:\n                type: string\n                format: date-time\n        elementName:\n          type: string\n        elementSlug:\n          type: string\n        suiteName:\n          type: string\n        suiteSlug:\n          type: string\n        teamName:\n          type: string\n        teamSlug:\n          type: string\n    NotificationItem:\n      type: object\n      additionalProperties: false\n      required:\n        - createdAt\n        - text\n      properties:\n        createdAt:\n          type: string\n          format: date-time\n        seenAt:\n          type: string\n          format: date-time\n        text:\n          type: string\n    NotificationListResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/NotificationItem'\n    PlatformConfig:\n      type: object\n      additionalProperties: false\n      properties:\n        contact:\n          additionalProperties: false\n          type: object\n          properties:\n            company:\n              type: string\n            email:\n              type: string\n            name:\n              type: string\n        mail:\n          additionalProperties: false\n          type: object\n          required:\n            - configurable\n          properties:\n            configurable:\n              type: boolean\n            host:\n              type: string\n            pass:\n              type: string\n            port:\n              type: number\n              format: int32\n            user:\n              type: string\n        telemetry:\n          type: boolean\n    PlatformStatsResponse:\n      additionalProperties: false\n      type: object\n      required:\n        - countBatches\n        - countComparisons\n        - countElements\n        - countMessages\n        - spaceFree\n        - spaceSize\n        - spaceUsed\n        - users\n      properties:\n        countBatches:\n          type: number\n          format: int32\n        countComparisons:\n          type: number\n          format: int32\n        countElements:\n          type: number\n          format: int32\n        countMessages:\n          type: number\n          format: int32\n        spaceFree:\n          type: number\n          format: int32\n        spaceSize:\n          type: number\n          format: int32\n        spaceUsed:\n          type: number\n          format: float\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlatformStatsUser'\n    PlatformStatsUser:\n      additionalProperties: false\n      type: object\n      required:\n        - createdAt\n        - role\n        - teams\n        - username\n      properties:\n        activationLink:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        email:\n          type: string\n          format: email\n        fullname:\n          type: string\n        lockedAt:\n          type: string\n          format: date-time\n        resetKeyLink:\n          type: string\n        resetKeyCreatedAt:\n          type: string\n          format: date-time\n        resetKeyExpiresAt:\n          type: string\n          format: date-time\n        role:\n          $ref: '#/components/schemas/ETeamRole'\n        suspended:\n          type: boolean\n        username:\n          type: string\n    PlatformStatus:\n      additionalProperties: false\n      type: object\n      required:\n        - configured\n        - mail\n        - ready\n      properties:\n        configured:\n          type: boolean\n        mail:\n          type: boolean\n        ready:\n          type: boolean\n    Promotion:\n      type: object\n      additionalProperties: false\n      required:\n        - at\n        - by\n        - for\n        - from\n        - to\n      properties:\n        at:\n          type: string\n          format: date-time\n        by:\n          $ref: '#/components/schemas/Userinfo'\n        for:\n          type: string\n        from:\n          type: string\n        to:\n          type: string\n    SuiteItem:\n      type: object\n      additionalProperties: false\n      required:\n        - batchCount\n        - suiteName\n        - suiteSlug\n      properties:\n        baseline:\n          $ref: '#/components/schemas/BatchItemRaw'\n        batchCount:\n          type: number\n        latest:\n          $ref: '#/components/schemas/BatchItemRaw'\n        overview:\n          $ref: '#/components/schemas/BatchCompareOverview'\n        suiteName:\n          type: string\n        suiteSlug:\n          type: string\n    SuiteListResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/SuiteItem'\n    SuiteLookupResponse:\n      allOf:\n        - $ref: '#/components/schemas/SuiteItem'\n        - type: object\n          additionalProperties: false\n          required:\n            - batches\n            - batchCount\n            - isSubscribed\n            - promotions\n            - retainFor\n            - sealAfter\n            - subscriberCount\n            - subscription\n            - teamName\n            - teamSlug\n          properties:\n            batches:\n              type: array\n              items:\n                type: string\n            batchCount:\n              type: number\n              format: int32\n            isSubscribed:\n              type: boolean\n            promotions:\n              type: array\n              items:\n                $ref: '#/components/schemas/Promotion'\n            retainFor:\n              type: number\n            sealAfter:\n              type: number\n            subscriberCount:\n              type: number\n              format: int32\n            subscription:\n              $ref: '#/components/schemas/ENotificationType'\n            teamName:\n              type: string\n            teamSlug:\n              type: string\n    TeamApplicant:\n      type: object\n      additionalProperties: false\n      required:\n        - email\n        - fullname\n        - username\n      properties:\n        email:\n          type: string\n          format: email\n        fullname:\n          type: string\n        username:\n          type: string\n    TeamInvitee:\n      type: object\n      additionalProperties: false\n      required:\n        - email\n        - invitedAt\n      properties:\n        email:\n          type: string\n          format: email\n        fullname:\n          type: string\n        invitedAt:\n          type: string\n          format: date-time\n    TeamItem:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - role\n        - slug\n      properties:\n        name:\n          type: string\n        role:\n          $ref: '#/components/schemas/ETeamRole'\n        slug:\n          type: string\n    TeamListResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/TeamItem'\n    TeamLookupResponse:\n      allOf:\n        - $ref: '#/components/schemas/TeamItem'\n        - type: object\n          additionalProperties: false\n          required:\n            - userCount\n          properties:\n            userCount:\n              type: number\n    TeamMember:\n      type: object\n      additionalProperties: false\n      required:\n        - username\n        - fullname\n        - role\n      properties:\n        username:\n          type: string\n        fullname:\n          type: string\n        role:\n          $ref: '#/components/schemas/ETeamRole'\n    TeamMemberListResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - invitees\n        - members\n      properties:\n        applicants:\n          type: array\n          items:\n            $ref: '#/components/schemas/TeamApplicant'\n        invitees:\n          type: array\n          items:\n            $ref: '#/components/schemas/TeamInvitee'\n        members:\n          type: array\n          items:\n            $ref: '#/components/schemas/TeamMember'\n    UserLookupResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - apiKeys\n        - email\n        - feature_flags\n        - fullname\n        - platformRole\n        - username\n      properties:\n        apiKeys:\n          type: array\n          items:\n            type: string\n            format: uuid\n        email:\n          type: string\n          format: email\n        feature_flags:\n          type: array\n          items:\n            type: string\n        fullname:\n          type: string\n        platformRole:\n          $ref: '#/components/schemas/EPlatformRole'\n        user_hash:\n          type: string\n        user_id:\n          type: string\n        username:\n          type: string\n    UserSessionsResponseItem:\n      type: object\n      additionalProperties: false\n      required:\n        - _id\n        - agent\n        - expiresAt\n        - ipAddr\n      properties:\n        _id:\n          type: string\n        agent:\n          type: string\n        expiresAt:\n          type: string\n          format: date-time\n        ipAddr:\n          type: string\n    Userinfo:\n      type: object\n      additionalProperties: false\n      required:\n        - fullname\n        - username\n      properties:\n        fullname:\n          type: string\n        username:\n          type: string\n    Errors:\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          items:\n            type: string\n          example:\n            - error message\n    ObjectId:\n      additionalProperties: false\n      type: string\n      example: 5ed4609a6fc689752b000000\n    Unknown:\n      additionalProperties: true\n      type: object\n  responses:\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    RequestInvalid:\n      description: Request Invalid\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    UserNotFound:\n      description: User Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    TeamNotFound:\n      description: Team Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    MemberNotFound:\n      description: Member Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    SuiteNotFound:\n      description: Suite Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\npaths:\n  /:\n    get:\n      tags:\n        - Other\n      summary: Entry-point\n      operationId: misc_index\n      description: \u003e-\n        Reassures curious engineers who browse to the Backend URL that the\n        server is up and running.\n      responses:\n        '302':\n          description: Path to route that provides server health status\n          headers:\n            Location:\n              $ref: '#/components/headers/Location'\n  /@/:team/:suite:\n    get:\n      tags:\n        - Other\n      summary: API URL Placeholder\n      operationId: misc_placeholder\n      description: \u003e-\n        Reassures curious engineers who browse to the API URL provided for\n        submitting results that the platform is up and running.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      responses:\n        '308':\n          description: Path to the Documentations Page served by Web App\n          headers:\n            Location:\n              $ref: '#/components/headers/Location'\n  /auth/activate/:key:\n    post:\n      tags:\n        - Account\n      summary: Activate Account\n      operationId: account_verifyActivate\n      description: Activate a user account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - key\n              properties:\n                key:\n                  type: string\n                  minLength: 8\n        required: true\n      responses:\n        '200':\n          description: Account Activated\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                properties:\n                  expiresAt:\n                    type: string\n                    format: date-time\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '404':\n          description: Activation Key Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /auth/extend:\n    post:\n      tags:\n        - Account\n      summary: Extend User Session\n      operationId: account_sessionExtend\n      description: Extend this user session.\n      responses:\n        '200':\n          description: User Session Extended\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                properties:\n                  expiresAt:\n                    type: string\n                    format: date-time\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /auth/reset:\n    post:\n      tags:\n        - Account\n      summary: Create Password Reset Key\n      operationId: account_resetKeyCreate\n      description: Initiate the process to reset account password.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n                  format: email\n        required: true\n      responses:\n        '204':\n          description: Password Reset Key Generated\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '404':\n          description: Account Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        '423':\n          description: Account Locked or Suspended\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /auth/reset/:key:\n    get:\n      tags:\n        - Account\n      summary: Reset Account Password\n      operationId: account_resetKeyCheck\n      description: \u003e-\n        Provides basic information for an account associated with a given reset\n        key.\n      parameters:\n        - $ref: '#/components/parameters/resetKey'\n      responses:\n        '200':\n          description: Basic Account Information\n          content:\n            application/json:\n              schema:\n                additionalProperties: false\n                type: object\n                required:\n                  - email\n                  - fullname\n                  - username\n                properties:\n                  email:\n                    type: string\n                  fullname:\n                    type: string\n                  username:\n                    type: string\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n    post:\n      tags:\n        - Account\n      summary: Reset Account Password\n      operationId: account_resetKeyApply\n      description: \u003e-\n        Set a new password for a user account using a previously issued reset\n        key.\n      parameters:\n        - $ref: '#/components/parameters/resetKey'\n      responses:\n        '204':\n          description: Account Password was Reset\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '404':\n          description: Reset Key Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /auth/reset/resend:\n    post:\n      tags:\n        - Account\n      summary: Resend Password Reset Key\n      operationId: account_resetKeyResend\n      description: Resend password reset key.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n                  format: email\n        required: true\n      responses:\n        '204':\n          description: Password Reset Key Resent\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '404':\n          description: Account Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /auth/signin:\n    post:\n      tags:\n        - Account\n      summary: Create User Session\n      operationId: account_signin\n      description: Log into a user account. Creates a user session.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - password\n                - username\n              properties:\n                password:\n                  type: string\n                  minLength: 8\n                username:\n                  type: string\n                  minLength: 3\n                  maxLength: 32\n        required: true\n      responses:\n        '200':\n          description: Session Created\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                properties:\n                  expiresAt:\n                    type: string\n                    format: date-time\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '423':\n          description: Account Locked or Suspended\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /auth/signin/google:\n    post:\n      tags:\n        - Account\n      summary: Create User Session\n      operationId: account_signin_google\n      description: Log into a user account. Creates a user session.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - google_token\n              properties:\n                google_token:\n                  type: string\n        required: true\n      responses:\n        '200':\n          description: Session Created\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                properties:\n                  expiresAt:\n                    type: string\n                    format: date-time\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '423':\n          description: Account Locked or Suspended\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /auth/signout:\n    post:\n      tags:\n        - Account\n      summary: Remove User Session\n      operationId: account_signout\n      description: Log out of a user account. Removes a user session.\n      responses:\n        '204':\n          description: User Session Removed\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '404':\n          description: Session Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /auth/signup:\n    post:\n      tags:\n        - Account\n      summary: Create Account\n      operationId: account_signup\n      description: Create a user account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n                  format: email\n        required: true\n      responses:\n        '201':\n          description: Account Created\n          headers:\n            Location:\n              schema:\n                type: string\n                format: url\n              description: Link to signin route\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n  /auth/signup/resend:\n    post:\n      tags:\n        - Account\n      summary: Resend Activation Link\n      operationId: account_verifyResend\n      description: Resend account activation key.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n                  format: email\n        required: true\n      responses:\n        '204':\n          description: Activation Link Resent\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '404':\n          description: Account Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /batch/:team/:suite:\n    get:\n      tags:\n        - Batch\n      summary: List Batches\n      operationId: batch_list\n      description: \u003e-\n        List all batches in a given suite. User performing the query must be\n        authenticated. User performing the query must be a member of the team.\n        Output may have been cached in the server.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      responses:\n        '200':\n          description: List of Batches\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BatchListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /batch/:team/:suite/:batch:\n    get:\n      tags:\n        - Batch\n      summary: Lookup Batch\n      operationId: batch_lookup\n      description: \u003e-\n        Learn more about a batch in a given suite. User performing the query\n        must be authenticated. User performing the query must be member of the\n        team. Output may have been cached in the server.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '200':\n          description: Detailed information about this batch.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchLookupResponse'\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n        - Batch\n      summary: Remove Batch\n      operationId: batch_remove\n      description: \u003e-\n        Remove a batch and all data associated with it. User initiating the\n        request must be authenticated. User initiating the request must be\n        administrator of the team. Batch must be sealed. Batch must not be\n        baseline of the suite it belongs to.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '202':\n          description: Batch Scheduled for Removal\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /batch/:team/:suite/:batch/compare/:dstBatch/:dstSuite:\n    get:\n      tags:\n        - Batch\n      summary: Compare Batch\n      operationId: batch_compare\n      description: \u003e-\n        Compare a batch with another batch. Compare results submitted for a\n        batch to results submitted for another batch. User performing the query\n        must be authenticated. User performing the query must be member of the\n        team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n        - $ref: '#/components/parameters/dstBatch'\n        - $ref: '#/components/parameters/dstSuite'\n      responses:\n        '200':\n          description: Comparison Results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchComparisonResponse'\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        '503':\n          description: Failed to perform comparison\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /batch/:team/:suite/:batch/export/pdf:\n    get:\n      tags:\n        - Batch\n      summary: Generate PDF Report\n      operationId: batch_export_pdf\n      description: \u003e-\n        Generate PDF report for test results submitted to this batch. User\n        performing the query must be authenticated. User performing the query\n        must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '200':\n          description: PDF Report\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /batch/:team/:suite/:batch/export/zip:\n    get:\n      tags:\n        - Batch\n      summary: Export Batch as Zip\n      operationId: batch_export_zip\n      description: \u003e-\n        Export test results submitted to this batch as a compressed archive.\n        User performing the query must be authenticated. User performing the\n        query must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '200':\n          description: Generate Results\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /batch/:team/:suite/:batch/promote:\n    post:\n      tags:\n        - Batch\n      summary: Promote a Batch\n      operationId: batch_promote\n      description: \u003e-\n        Promote a batch to baseline of the suite it belongs to. User initiating\n        the request must be authenticated. User initiating the request must be\n        member of the team. Batch to be promoted should be sealed. Batch to be\n        promoted should not be empty. We support empty promotion reason only for\n        the first submitted batch whose workflow does not include calling this\n        route. hence, we choose to reject empty reasons for all subsequent\n        promotions that happened through this route. We think a valid promotion\n        reason should be no longer than a single paragraph. Assuming a normal\n        paragraph includes 200 words with average length of 5, we allow at most\n        1500 characters to be entered for promotion reason.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - reason\n              properties:\n                reason:\n                  type: string\n                  minLength: 0\n                  maxLength: 1500\n        required: true\n      responses:\n        '204':\n          description: Batch Promoted\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /batch/:team/:suite/:batch/seal:\n    post:\n      tags:\n        - Batch\n      summary: Seal a Batch\n      operationId: batch_seal\n      description: \u003e-\n        Seals a version of the specified suite to prevent additional results to\n        be submitted for that version. This is rarely necessary given that\n        batches are automatically sealed by the backend after a period of time\n        after their submission. User initiating the request must be\n        authenticated. User initiating the request must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '204':\n          description: Batch Sealed\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /client/batch/:team/:suite/next:\n    get:\n      tags:\n        - Client\n      summary: Find Next Version\n      operationId: client_nextBatch\n      description: \u003e-\n        Return the next common-sense version increment for this suite. User\n        performing the query must be authenticated. User performing the query\n        must be a member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      responses:\n        '200':\n          description: List of Test Cases\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                required:\n                  - batch\n                properties:\n                  batch:\n                    type: string\n  /client/element/:team/:suite:\n    get:\n      tags:\n        - Client\n      summary: List Elements\n      operationId: client_elements\n      description: \u003e-\n        List all test suites in baseline version of a given suite. User\n        performing the query must be authenticated. User performing the query\n        must be a member of the team. Output may have been cached in the server.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      responses:\n        '200':\n          description: List of Test Cases\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ElementListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /client/signin:\n    post:\n      tags:\n        - Client\n      summary: Create Client Session\n      operationId: client_signin\n      description: Authenticate to Touca Server API. Creates a temporary client session.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - key\n              properties:\n                key:\n                  type: string\n                  format: uuid\n        required: true\n      responses:\n        '200':\n          description: Client Session Created\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                properties:\n                  expiresAt:\n                    type: string\n                    format: date-time\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '423':\n          description: Account Locked or Suspended\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /client/submit:\n    post:\n      tags:\n        - Client\n      summary: Submit Results\n      operationId: client_submit\n      description: \u003e-\n        Handles test results submitted via Touca SDKs. Client initiating the\n        request must be authenticated.\n      requestBody:\n        description: \u003e-\n          Valid binary data that conforms to Touca flatbuffers schema.\n          Submission file cannot be larger than 50 MB in size.\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n        required: true\n      responses:\n        '204':\n          description: Results Submitted\n        '400':\n          description: \u003e-\n            Results do not conform to Touca flatbuffers Schema. Or platform\n            rejects processing the results for other reasons.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /comment/:team/:suite/:batch/c:\n    get:\n      tags:\n        - Comment\n      summary: List Comments\n      operationId: comment_list\n      description: \u003e-\n        List comments submitted for a given page. User performing the query must\n        be authenticated. User performing the query must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '200':\n          description: List of Comments\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentListResponse'\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n        - Comment\n      summary: Create Comment\n      operationId: comment_create\n      description: \u003e-\n        Creates a new comment. User performing the query must be authenticated.\n        User performing the query must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - body\n              properties:\n                body:\n                  type: string\n                  minLength: 10\n                  maxLength: 1500\n        required: true\n      responses:\n        '204':\n          description: Comment created\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /comment/:team/:suite/:batch/c/:comment:\n    patch:\n      tags:\n        - Comment\n      summary: Update Comment\n      operationId: comment_update\n      description: \u003e-\n        Updates an existing comment. User performing the request must be\n        authenticated. User performing the request must be member of the team.\n        User performing the request must own the comment.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n        - $ref: '#/components/parameters/comment'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - body\n              properties:\n                body:\n                  type: string\n                  minLength: 10\n                  maxLength: 1500\n        required: true\n      responses:\n        '204':\n          description: Comment updated\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n        - Comment\n      summary: Remove Comment\n      operationId: comment_remove\n      description: \u003e-\n        Removes an existing comment. User performing the request must be\n        authenticated. User performing the request must be member of the team.\n        User performing the request must be owner of the comment or admin of the\n        team or admin of the platform.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n        - $ref: '#/components/parameters/comment'\n      responses:\n        '204':\n          description: Comment removed\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /comment/:team/:suite/:batch/c/:comment/reply:\n    post:\n      tags:\n        - Comment\n      summary: Reply to Comment\n      operationId: comment_reply\n      description: \u003e-\n        Replies to an existing comment. User performing the request must be\n        authenticated. User performing the request must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/batch'\n        - $ref: '#/components/parameters/comment'\n      responses:\n        '204':\n          description: Comment reply submitted\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /element/:team/:suite/:element:\n    get:\n      tags:\n        - Element\n      summary: Lookup Element\n      operationId: element_lookup\n      description: \u003e-\n        Learn more about an element in a given suite. User performing the query\n        must be authenticated. User performing the query must be member of the\n        team. Output may have been cached in the server.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/element'\n      responses:\n        '200':\n          description: Detailed information about this element.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ElementLookupResponse'\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Element Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    patch:\n      tags:\n        - Element\n      summary: Lookup Element\n      operationId: element_update\n      description: \u003e-\n        Update test case information in a given suite. User initiating the\n        request must be authenticated. User initiation the request must be\n        member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/element'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                note:\n                  type: string\n        required: true\n      responses:\n        '204':\n          description: Metadata of the suite was updated.\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Element Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /element/:team/:suite/:element/compare/:batch/:dstBatch/:dstElement/:dstSuite:\n    get:\n      tags:\n        - Element\n      summary: Compare Elements\n      operationId: element_compare\n      description: \u003e-\n        Compare results submitted for the same element between two batches. User\n        performing the query must be authenticated. User performing the query\n        must be member of the team. Output may have been cached in the server.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n        - $ref: '#/components/parameters/element'\n        - $ref: '#/components/parameters/batch'\n        - $ref: '#/components/parameters/dstBatch'\n        - $ref: '#/components/parameters/dstElement'\n        - $ref: '#/components/parameters/dstSuite'\n      responses:\n        '200':\n          description: Comparison Results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ElementComparisonResponse'\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite or Element or Batch Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        '503':\n          description: Failed to Perform Comparison\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /element/v2/:team/:suite:\n    get:\n      tags:\n        - Element\n      summary: List Elements\n      operationId: element_list\n      description: \u003e-\n        List all test suites in baseline version of a given suite. User\n        performing the query must be authenticated. User performing the query\n        must be a member of the team. Output may have been cached in the server.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      responses:\n        '200':\n          description: List of Test Cases\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ElementListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /feedback:\n    post:\n      tags:\n        - Other\n      summary: Provide Feedback\n      operationId: other_feedback\n      description: Submits user feedback to Touca Engineering Team.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - body\n                - page\n              properties:\n                body:\n                  type: string\n                  minLength: 20\n                  maxLength: 1000\n                name:\n                  type: string\n                  maxLength: 100\n                page:\n                  type: string\n                  maxLength: 16\n                email:\n                  type: string\n                  maxLength: 100\n                cname:\n                  type: string\n                  maxLength: 100\n        required: true\n      responses:\n        '204':\n          description: Feedback Delivered\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n  /platform:\n    get:\n      tags:\n        - Platform\n      summary: Check Platform Health\n      operationId: platform_health\n      description: Provides health status of the Touca server\n      responses:\n        '200':\n          description: Indicates whether the platform is ready to accept submissions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformStatus'\n  /platform/account/:account:\n    patch:\n      tags:\n        - Platform\n      summary: Update Account Information\n      operationId: platform_accountUpdate\n      description: \u003e-\n        Updates profile of an existing account on the platform. User initiating\n        the request must be authenticated. User initiating the request must be a\n        platform admin.\n      parameters:\n        - $ref: '#/components/parameters/account'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties: false\n              type: object\n              required:\n                - role\n              properties:\n                role:\n                  type: string\n                  enum:\n                    - user\n                    - admin\n      responses:\n        '204':\n          description: Account Profile Updated\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: User Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /platform/account/:account/delete:\n    post:\n      tags:\n        - Platform\n      summary: Delete a given account\n      operationId: platform_accountDelete\n      description: \u003e-\n        Deletes a given account and all data associated with it. User initiating\n        the request must be authenticated. User initiating the request must be a\n        platform admin. User being removed must not have any active team\n        membership. User being removed must not have any pending team\n        invitation. User being removed must not have any pending join request.\n      responses:\n        '204':\n          description: Account Deleted\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          description: Account cannot be deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /platform/account/:account/populate:\n    post:\n      tags:\n        - Platform\n      summary: Populate account with sample data\n      operationId: platform_accountPopulate\n      description: \u003e-\n        Populates an existing account with sample test results. User initiating\n        the request must be authenticated. User initiating the request must be a\n        platform admin.\n      parameters:\n        - $ref: '#/components/parameters/account'\n      responses:\n        '204':\n          description: Sample data added\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: User Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /platform/account/:account/suspend:\n    post:\n      tags:\n        - Platform\n      summary: Suspend a given account\n      operationId: platform_accountSuspend\n      description: \u003e-\n        Suspends a given account and removes all its active sessions. User\n        initiating the request must be authenticated. User initiating the\n        request must be a platform admin.\n      parameters:\n        - $ref: '#/components/parameters/account'\n      responses:\n        '204':\n          description: Account suspended.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: User Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /platform/config:\n    get:\n      tags:\n        - Platform\n      summary: Get Server Settings\n      operationId: platform_config\n      description: \u003e-\n        Reports server settings. If server is already configured, user\n        initiating the request must be authenticated and a server admin.\n      responses:\n        '200':\n          description: Server settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformConfig'\n    patch:\n      tags:\n        - Platform\n      summary: Update Server Settings\n      operationId: platform_update\n      description: \u003e-\n        Updates server settings. If server is already configured, user\n        initiating the request must be authenticated and a server admin.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                telemetry:\n                  type: boolean\n        required: true\n      responses:\n        '204':\n          description: Server settings was updated.\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /platform/install:\n    post:\n      tags:\n        - Platform\n      summary: Register Server\n      operationId: platform_install\n      description: Adds contact information to this server instance.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - name\n              properties:\n                company:\n                  type: string\n                email:\n                  type: string\n                name:\n                  type: string\n        required: true\n      responses:\n        '204':\n          description: Server registered\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /platform/stats:\n    get:\n      tags:\n        - Platform\n      summary: Get Platform Statistics\n      operationId: platform_stats\n      description: \u003e-\n        Provides statistics about this Touca server instance. User initiating\n        the request must be authenticated. User initiating the request must be a\n        platform admin.\n      responses:\n        '200':\n          description: Statistics about this platform instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformStatsResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /suite/:team:\n    get:\n      tags:\n        - Suite\n      summary: List Suites\n      operationId: suite_list\n      description: \u003e-\n        Lists all the suites registered for a given team. User performing the\n        query must be authenticated. User performing the query must be a member\n        of the team. Output may have been cached in the server.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '200':\n          description: List of Suites\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SuiteListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n    post:\n      tags:\n        - Suite\n      summary: Create Suite\n      operationId: suite_create\n      description: \u003e-\n        Create a new suite in a given team. User initiating the request must be\n        authenticated. User initiating the request must be a member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - slug\n              properties:\n                name:\n                  type: string\n                slug:\n                  type: string\n      responses:\n        '201':\n          description: Suite Created\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n        '409':\n          description: Suite Already Registered\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /suite/:team/:suite:\n    get:\n      tags:\n        - Suite\n      summary: Lookup Suite\n      operationId: suite_lookup\n      description: \u003e-\n        Learn more about a suite in a given team. User performing the query must\n        be authenticated. User performing the query must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      responses:\n        '200':\n          description: Detailed information about this suite\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuiteLookupResponse'\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n    patch:\n      tags:\n        - Suite\n      summary: Update Suite\n      operationId: team_suite\n      description: \u003e-\n        Update suite information in a given team. User initiating the request\n        must be authenticated. User initiation the request must be member of the\n        team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                slug:\n                  type: string\n                retainFor:\n                  type: number\n                  minimum: 86400\n                  maximum: 157680000\n                  multipleOf: 1\n        required: true\n      responses:\n        '201':\n          description: Metadata of the suite was updated. Suite is now known by a new slug.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: url\n              description: Link to the team with its new slug\n        '204':\n          description: Metadata of the suite was updated. Suite slug has not changed.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team Not Found or Suite Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n        - Suite\n      summary: Remove Suite\n      operationId: suite_remove\n      description: \u003e-\n        Removes a suite and all data associated with it. User initiating the\n        request must be authenticated. User initiating the request must be\n        administrator of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      responses:\n        '202':\n          description: Suite Scheduled for Removal\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Suite Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /suite/:team/:suite/subscribe:\n    patch:\n      tags:\n        - Suite\n      summary: Subscribe to Suite\n      operationId: suite_subscribe\n      description: \u003e-\n        Subscribe to a suite in a given team. User initiating the request must\n        be authenticated. User initiating the request must be member of the\n        team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/suite'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                level:\n                  $ref: '#/components/schemas/ENotificationType'\n        required: true\n      responses:\n        '204':\n          description: User Subscribed to Suite\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team Not Found or Suite Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team:\n    get:\n      tags:\n        - Team\n      summary: List Teams\n      operationId: team_list\n      description: \u003e-\n        Lists all the teams of which user is a member. User performing the query\n        must be authenticated.\n      responses:\n        '200':\n          description: List of Teams\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TeamListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n    post:\n      tags:\n        - Team\n      summary: Create Team\n      operationId: team_create\n      description: \u003e-\n        Create a new team owned by this user. User initiating the request must\n        be authenticated.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties: false\n              type: object\n              required:\n                - name\n                - slug\n              properties:\n                name:\n                  type: string\n                slug:\n                  type: string\n      responses:\n        '201':\n          description: Team Created\n          headers:\n            Location:\n              schema:\n                type: string\n                format: url\n              description: Link to new team\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '409':\n          description: Team Already Registered\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team/:team:\n    get:\n      tags:\n        - Team\n      summary: Lookup Team\n      operationId: team_lookup\n      description: \u003e-\n        Learn more about a team. User performing the query must be\n        authenticated. User performing the query must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '200':\n          description: \u003e-\n            Detailed information about this team, excluding the list of members\n            and their roles within this team.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TeamLookupResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n    patch:\n      tags:\n        - Team\n      summary: Update Team\n      operationId: team_update\n      description: \u003e-\n        Update team information. User initiating the request must be\n        authenticated. User initiation the request must be owner of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties: false\n              type: object\n              properties:\n                name:\n                  type: string\n                slug:\n                  type: string\n      responses:\n        '201':\n          description: Metadata of the team was updated. Team is now known by a new slug.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: url\n              description: Link to the team with its new slug\n        '204':\n          description: Metadata of the team was updated. Team slug has not changed.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n        '409':\n          description: Message Already Processed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n        - Team\n      summary: Remove Team\n      operationId: team_remove\n      description: \u003e-\n        Removes a team and all data associated with it. User initiating the\n        request must be authenticated. User initiating the request must be owner\n        of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '204':\n          description: Team Removed\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n  /team/:team/invite:\n    post:\n      tags:\n        - Team\n      summary: Invite to Team\n      operationId: team_inviteAdd\n      description: \u003e-\n        Invite someone to join a team. User initiating the request must be\n        authenticated. User initiating the request must be administrator of the\n        team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - fullname\n              properties:\n                email:\n                  type: string\n                  format: email\n                  example: alice@example.com\n                fullname:\n                  type: string\n                  example: Alice Anderson\n        required: true\n      responses:\n        '204':\n          description: User Invited to Team\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n        '409':\n          description: User is already a member\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        '429':\n          description: User was last invited less than 10 minutes ago\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team/:team/invite/accept:\n    post:\n      tags:\n        - Team\n      summary: Accept Team Invitation\n      operationId: team_inviteAccept\n      description: \u003e-\n        Adds user to the team they are invited to. User initiating the request\n        must be authenticated. User initiating the request must be invited to\n        the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '204':\n          description: User was added as a member.\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n  /team/:team/invite/decline:\n    post:\n      tags:\n        - Team\n      summary: Decline Team Invitation\n      operationId: team_inviteDecline\n      description: \u003e-\n        Removes team membership invitation for this user. User initiating the\n        request must be authenticated. User initiating the request must be\n        invited to the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '204':\n          description: Team Invitation was Declined.\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n  /team/:team/invite/rescind:\n    post:\n      tags:\n        - Team\n      summary: Rescind Team Invitation\n      operationId: team_inviteRescind\n      description: \u003e-\n        Rescind invitation to a team. User initiating the request must be\n        authenticated. User initiating the request must be administrator of the\n        team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n                  format: email\n                  example: alice@example.com\n        required: true\n      responses:\n        '204':\n          description: User Invited to Team\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team Not Found or user was not on invitation list.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team/:team/join:\n    post:\n      tags:\n        - Team\n      summary: Request to Join a Team\n      operationId: team_joinAdd\n      description: \u003e-\n        Request to join a team. User initiating the request must be\n        authenticated. User initiating the request must not be a member of the\n        team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '204':\n          description: Request was submitted.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n        '409':\n          description: User is already a member or has a pending request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n        - Team\n      summary: Rescind Team Join Request\n      operationId: team_joinRescind\n      description: \u003e-\n        Rescind request to join a team. User initiating the request must be\n        authenticated. User initiating the request must not be a member of the\n        team. User initiating the request must have a pending join request.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '204':\n          description: User rescinded request to join the team.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team Not Found or user did not have a pending join request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        '409':\n          description: User is already a member or has a pending request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team/:team/join/:account:\n    post:\n      tags:\n        - Team\n      summary: Accept Team Join Request\n      operationId: team_joinAccept\n      description: \u003e-\n        Accept user request to join the team. User initiating the request must\n        be authenticated. User initiating the request must be administrator of\n        the team. User holding the account must have a pending join request.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/account'\n      responses:\n        '204':\n          description: User request to join the team was accepted.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n        '409':\n          description: User is already a member or has no pending request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team/:team/join/decline:\n    post:\n      tags:\n        - Team\n      summary: Decline Team Join Request\n      operationId: team_joinDecline\n      description: \u003e-\n        Decline user request to join the team. User initiating the request must\n        be authenticated. User initiating the request must be administrator of\n        the team. User holding the account must have a pending join request.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/account'\n      responses:\n        '204':\n          description: User request to join the team was declined.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n        '409':\n          description: User is already a member or has no pending request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team/:team/leave:\n    post:\n      tags:\n        - Team\n      summary: Leave a Team\n      operationId: team_leave\n      description: \u003e-\n        Cancel membership of a given team. User initiating the request must be\n        authenticated. User initiating the request must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '204':\n          description: Membership Cancelled\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n  /team/:team/member:\n    get:\n      tags:\n        - Team\n      summary: List Team Members\n      operationId: team_memberList\n      description: \u003e-\n        Lists all members of a team. Information provided for each member\n        includes their roles within this team. Also provides list of users\n        currently invited to join this team. User performing the query must be\n        authenticated. User performing the query must be member of the team.\n      parameters:\n        - $ref: '#/components/parameters/team'\n      responses:\n        '200':\n          description: List of Team Members\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TeamMemberListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n  /team/:team/member/:account:\n    post:\n      tags:\n        - Team\n      summary: Add User to Team\n      operationId: team_memberAdd\n      description: \u003e-\n        Adds an existing user to a team. User initiating the request must be\n        authenticated. User initiating the request must be administrator of the\n        platform.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/account'\n      responses:\n        '201':\n          description: User Added to Team\n          headers:\n            Location:\n              schema:\n                type: string\n                format: url\n              description: Link to the list of team members\n        '400':\n          $ref: '#/components/responses/RequestInvalid'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or User Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /team/:team/member/:member:\n    patch:\n      tags:\n        - Team\n      summary: Update Member Role\n      operationId: team_memberUpdate\n      description: \u003e-\n        Updates role of an existing member in a team. User initiating the\n        request must be authenticated. User initiating the request must be a\n        team administrator. User to be updated must be a team member.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/member'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties: false\n              type: object\n              required:\n                - role\n              properties:\n                role:\n                  type: string\n                  enum:\n                    - member\n                    - admin\n      responses:\n        '204':\n          description: Member Role Updated\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Member Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n        - Team\n      summary: Remove Team Member\n      operationId: team_memberRemove\n      description: \u003e-\n        Removes an existing member from a team. User initiating the request must\n        be authenticated. User initiating the request must be a team\n        administrator. User to be updated must be a team member.\n      parameters:\n        - $ref: '#/components/parameters/team'\n        - $ref: '#/components/parameters/member'\n      responses:\n        '204':\n          description: Member Removed\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Team or Member Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /user:\n    get:\n      tags:\n        - User\n      summary: Lookup Current User\n      operationId: user_lookup\n      description: \u003e-\n        Provides non-sensitive account information about the user performing\n        this query. User performing the query must be authenticated.\n      responses:\n        '200':\n          description: Basic Account Information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLookupResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n    patch:\n      tags:\n        - User\n      summary: Update Account Information\n      operationId: user_update\n      description: \u003e-\n        Updates user information. User initiating the request must be\n        authenticated.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                fullname:\n                  type: string\n                username:\n                  type: string\n                password:\n                  type: string\n        required: true\n      responses:\n        '204':\n          description: User information was updated.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n    delete:\n      tags:\n        - User\n      summary: Delete User Account\n      operationId: user_delete\n      description: \u003e-\n        Removes user's account and all data associated with it. User initiating\n        the request must be authenticated. User initiating the request must not\n        be the platform owner. User must not have any active team membership.\n        User must not have any pending team invitation. User must not have any\n        pending join request.\n      responses:\n        '204':\n          description: Account Deleted\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          description: Account cannot be deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /user/inbox:\n    get:\n      tags:\n        - User\n      summary: List Notifications\n      operationId: user_inboxList\n      description: \u003e-\n        Lists recent notifications for this user. User initiating the request\n        must be authenticated.\n      responses:\n        '200':\n          description: Notifications Marked as Seen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationListResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /user/inbox/seen:\n    post:\n      tags:\n        - User\n      summary: Mark Notifications as Seen\n      operationId: user_inboxSeen\n      description: \u003e-\n        Marks all notifications for this user as seen. User initiating the\n        request must be authenticated.\n      responses:\n        '204':\n          description: Notifications Marked as Seen\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /user/sessions:\n    get:\n      tags:\n        - User\n      summary: List Active User Sessions\n      operationId: user_sessions\n      description: \u003e-\n        Provides list of active sessions of this user. User performing the query\n        must be authenticated.\n      responses:\n        '200':\n          description: Active User Sessions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSessionsResponseItem'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /user/sessions/:id:\n    delete:\n      tags:\n        - User\n      summary: Remove Active User Session\n      operationId: user_sessionsDelete\n      description: \u003e-\n        Expires a given user session for this user. User performing the query\n        must be authenticated.\n      parameters:\n        - $ref: '#/components/parameters/session_id'\n      responses:\n        '204':\n          description: Expired active session\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          description: Session Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n",
			"canonicalURL": "/github.com/trytouca/trytouca@3524da9a650a83892abfc3050d03336cfbd14bd6/-/blob/packages/api-schema/src/schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/trytouca/trytouca/blob/3524da9a650a83892abfc3050d03336cfbd14bd6/packages/api-schema/src/schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/batch/:team/:suite/:batch\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: schema type mismatch:  and object"
}