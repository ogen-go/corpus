{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hse-system-design-2021/public"
		},
		"file": {
			"name": "microblog.yaml",
			"size": 0,
			"path": "tasks/hw2-milestone1/microblog.yaml",
			"byteSize": 7302,
			"content": "openapi: 3.0.3\ninfo:\n  title: Microblog API\n  description: Microblog API\n  version: 1.0.0\ncomponents:\n  schemas:\n    PostId:\n      description: Уникальный идентификатор поста в формате Base64URL.\n      type: string\n      pattern: '[A-Za-z0-9_\\-]+'\n    UserId:\n      description: Уникальный идентификатор пользователя\n      type: string\n      pattern: '[0-9a-f]+'\n    ISOTimestamp:\n      description: Момент времени в формате ISO 8601 в часовом поясе UTC+0.\n      type: string\n      pattern: '\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z'\n    Post:\n      type: object\n      nullable: false\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/PostId'\n            - nullable: false\n            - readOnly: true\n        text:\n          type: string\n          nullable: false\n        authorId:\n          allOf:\n            - $ref: '#/components/schemas/UserId'\n            - nullable: false\n            - readOnly: true\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/ISOTimestamp'\n            - nullable: false\n            - readOnly: true\n        lastModifiedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISOTimestamp'\n            - nullable: false\n            - readOnly: true\n    PageToken:\n      type: string\n      pattern: '[A-Za-z0-9_\\-]+'\npaths:\n  '/api/v1/posts':\n    post:\n      summary: Публикация поста\n      parameters:\n        - in: header\n          name: System-Design-User-Id\n          required: true\n          description: \u003e\n            Идентификатор ползователя, который аутентифицирован в данном запросе.\n          schema:\n            $ref: '#/components/schemas/UserId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Post'\n      responses:\n        200:\n          description: Пост был успешно создан. Тело ответа содержит созданный пост.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n        401:\n          description: \u003e\n            Токен пользователя отсутствует в запросе, или передан в неверном формате, или его срок действия истёк.\n  '/api/v1/posts/{postId}':\n    get:\n      summary: Получение поста по идентификатору\n      parameters:\n        - in: path\n          name: postId\n          required: true\n          schema:\n            $ref: '#/components/schemas/PostId'\n      responses:\n        200:\n          description: Пост найден\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n        404:\n          description: Поста с указанным идентификатором не существует\n    patch:\n      summary: Модификация поста\n      parameters:\n        - in: path\n          name: postId\n          required: true\n          schema:\n            $ref: '#/components/schemas/PostId'\n        - in: header\n          name: System-Design-User-Id\n          required: true\n          description: \u003e\n            Идентификатор ползователя, который аутентифицирован в данном запросе.\n          schema:\n            $ref: '#/components/schemas/UserId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Post'\n      responses:\n        200:\n          description: Пост был успешно обновлен. В теле содержится обновленный пост.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n        401:\n          description: Пользователь не аутентифирован\n        403:\n          description: Пост не может быть отредактирован, т.к. опубликован другим пользователем.\n        404:\n          description: Поста с указанным идентификатором не существует\n  '/api/v1/users/{userId}/posts':\n    get:\n      summary: Получение страницы последних постов пользователя\n      description: \u003e\n        Получение страницы с постами пользователя.\n\n        Для получения первой страницы (с самыми последними постами), необходимо выполнить запрос\n        без параметра `page`.\n        Для получения следующей странцы, необходимо в параметр `page` передать токен следующей страницы,\n        полученный в теле ответа с предыдущей страницей.\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            $ref: '#/components/schemas/UserId'\n        - in: query\n          name: page\n          description: Токен страницы\n          required: false\n          schema:\n            $ref: '#/components/schemas/PageToken'\n        - in: query\n          name: size\n          description: Количество постов на странице\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 10\n      responses:\n        200:\n          description: Страница с постами.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  posts:\n                    type: array\n                    description: \u003e\n                      Посты в обратном хронологическом порядке.\n                      Отсутствие данного поля эквивалентно пустому массиву.\n                    items:\n                      $ref: '#/components/schemas/Post'\n                  nextPage:\n                    allOf:\n                      - $ref: '#/components/schemas/PageToken'\n                      - nullable: false\n                      - description: \u003e\n                          Токен следующей страницы при её наличии.\n                          Поле отсутствует, если текущая страница содержит самый ранний пост пользователя.\n        400:\n          description: Некорректный запрос, например, из-за некорректного токена страницы.\n  /maintenance/ping:\n    get:\n      summary: Служебный эндпоинт для определения готовности сервиса к работе\n      responses:\n        200:\n          description: Сервис готов к работе",
			"canonicalURL": "/github.com/hse-system-design-2021/public@81ea22dfd5715a7e07d61a755457a9c7142b86da/-/blob/tasks/hw2-milestone1/microblog.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hse-system-design-2021/public/blob/81ea22dfd5715a7e07d61a755457a9c7142b86da/tasks/hw2-milestone1/microblog.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/v1/posts/{postId}\": get: responses: 200: contents: application/json: generate schema: field authorId: allOf: schema type mismatch: string and "
}