{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CDSM-WG/CDS-M"
		},
		"file": {
			"name": "cds-m.yaml",
			"size": 0,
			"path": "openapi/cds-m.yaml",
			"byteSize": 27436,
			"content": "openapi: 3.0.0\ninfo:\n  title: CDS-M API\n  description:\n    This OpenAPI specification is used to describe the object model of the JSON.\n  version: \"0.2.0\"\n  license:\n    name: Apache 2.0\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n\n# security. Allowed methods basic (in header: Authorization: Basic ZGVtbzpwQDU1dzByZA==),\n#                           bearer (in header: Authorization: Bearer \u003ctoken\u003e)\n#                           Api-key (in header: X-API-Key: abcdef12345)\n#                           OAuth2 and OpenId are also available\n# The exact ways to authenticate will be described in a later version\nsecurity:\n  - BasicAuth: []\n  - BearerAuth: []\n  - ApiKeyAuth: []\n  - OAuth: []\n  - OpenId: []\n\ntags:\n  - name: use-cases\n  - name: building-blocks\n  - name: support\n\npaths:\n  /use-cases/{useCaseId}:\n    get:\n      tags:\n      - use-cases\n      parameters:\n      - $ref: \"#/components/parameters/useCaseId\"\n      responses:\n        \"200\":\n          description: a specific use case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/useCase\"\n  /use-cases/:\n    get:\n      tags:\n      - use-cases\n      responses:\n        \"200\":\n          description: complete overview of the use cases of CDS-M\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/useCase\"\n\n  /aggregation/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific aggregation building-block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/aggregation\"\n                \n  /aggregation/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all aggregation building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/aggregation\"\n  /agreement/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific agreement building-block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/agreement\"\n  /agreement/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all agreement building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/agreement\"\n\n  /archive/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific storage building-block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/archiveCondition\"\n  /archive/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all storage building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/archiveCondition\"\n                  \n  /authentication/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific authentication building-block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/authenticationCondition\"\n  /authentication/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all authentication building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/authenticationCondition\"\n\n  /certificates/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific certificate building-block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/certificateCondition\"\n  /certificates/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all certificate building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/certificateCondition\"\n\n  /processing/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific processing aspect\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/processingCondition\"\n  /processing/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: complete overview of the processing aspects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/processingCondition\"\n\n  /standards/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific standards building-block\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/standard\"\n                  - $ref: \"#/components/schemas/file\"\n                discriminator:\n                  propertyName: type\n  /standards/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all standards building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  oneOf:\n                    - $ref: \"#/components/schemas/standard\"\n                    - $ref: \"#/components/schemas/file\"\n                  discriminator:\n                    propertyName: type\n\n  /terms-and-conditions/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific terms-and-conditions building-block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/termsAndCondition\"\n  /terms-and-conditions/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all terms-and-conditions building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/termsAndCondition\"\n\n  /transport/{name}:\n    get:\n      tags:\n      - building-blocks\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific transport building-block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/transportCondition\"\n  /transport/:\n    get:\n      tags:\n      - building-blocks\n      responses:\n        \"200\":\n          description: all transport building-blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/transportCondition\"\n                  \n  /breaches/{name}:\n    get:\n      tags:\n      - support\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific breach\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/breach\"\n  /breaches/:\n    get:\n      tags:\n      - support\n      responses:\n        \"200\":\n          description: complete overview of the breaches\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/breach\"                  \n\n  /conflicts/{name}:\n    get:\n      tags:\n      - support\n      parameters:\n      - $ref: \"#/components/parameters/name\"\n      responses:\n        \"200\":\n          description: a specific conflict\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/conflict\"\n  /conflicts/:\n    get:\n      tags:\n      - support\n      responses:\n        \"200\":\n          description: complete overview of conflicts\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/conflict\"\n                  \ncomponents:\n  schemas:\n    specification:\n      type: object\n      description: a complete specification\n      properties:\n        metaData:\n          type: object\n          properties:\n            \"@context\":\n              type: string\n              format: URI\n              default: \"https://github.com/CDSM-WG/CDS-M/wiki/vocab#meta-data\"\n            \"@type\": \n              type: string\n              default: \"metaData\"\n            specificationVersion: \n              type: string\n              description: version number, first number = use case selection, second = ict configuration, third = contract configuration\n              format: d+.d+.d+\n            contractors:\n              type: array\n              items: \n                description: the formal name of the contractor\n                type: string\n            roles:\n              type: array\n              items: \n                type: string\n                enum: [SUPPLIER, CONSUMER, BOTH]\n            startValidity:\n              type: string\n              format: date-time\n            endValidity:\n              type: string\n              format: date-time\n        useCases:\n          type: array\n          items:\n            $ref: \"#/components/schemas/useCase\"\n        standards:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/standard\"\n              - $ref: \"#/components/schemas/file\"\n            discriminator:\n              propertyName: type\n        contractParts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/agreement\"\n        termsAndConditions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/termsAndCondition\"\n        transport:\n          type: array\n          items:\n            $ref: \"#/components/schemas/transportCondition\"\n        processing:\n          type: array\n          items:\n            $ref: \"#/components/schemas/processingCondition\"\n        archive: \n          type: array\n          items:\n            $ref: \"#/components/schemas/archiveCondition\"\n\n    useCase:\n      type: object\n      description: use cases can be selected by cities to implicitly select the appropriate exchange data methods (standards/files).\n      required:\n      - id\n      - story\n      - benefits\n      - problemsSolved\n      properties:\n        id:\n          type: string\n          description: the identifier of the use case. Make it human-readable.\n        externalReference:\n          type: string\n          format: URL\n          description: the URL containing the description of the use case.\n        story:\n          $ref: \"#/components/schemas/story\"\n        benefits:\n          $ref: \"#/components/schemas/prosAndCons\"\n        problemsSolved:\n          $ref: \"#/components/schemas/prosAndCons\"\n        standards:\n          description: the list of standard(-endpoint)s that can provide the data required for this use case.\n          type: array\n          items:\n            $ref: \"#/components/schemas/standardOrFileReference\"\n        metrics:\n          description: a list of possible metrics\n          type: array\n          items:\n            $ref: \"#/components/schemas/metric\"\n        termsAndConditions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/buildingBlockReference\"\n        agreements:\n          type: array\n          items:\n            $ref: \"#/components/schemas/buildingBlockReference\"\n        transport:\n          description: the transport conditions\n          type: array\n          items:\n            $ref: \"#/components/schemas/transportCondition\"\n        processing:\n          description: the processing conditions\n          type: array\n          items:\n            $ref: \"#/components/schemas/processingCondition\"\n        archive:\n          description: the archive conditions\n          type: array\n          items:\n            $ref: \"#/components/schemas/archiveCondition\"\n        tags:\n          description: the list of selection tags. \n          type: array\n          items:\n            type: string\n            description: a dimension with a value, seperated by a semicolon e.g. mode:car\n\n    metric:\n      type: object\n      properties:\n        description:\n          type: string\n        standards:\n          type: array\n          items:\n            $ref: \"#/components/schemas/standardOrFileReference\"\n\n    buildingBlockReference:\n      description: refers to a building block\n      type: string\n      default: someBuildingBlock\n      \n    standardOrFileReference:\n      type: object\n      additionalProperties: true\n      properties:\n        name:\n          $ref: \"#/components/schemas/buildingBlockReference\"\n        dataProtection:\n          type: string\n          description: the data protection classification, if it differs from the default 'privacy' label of the standard.\n          enum: [A,B,C,D,E]\n        mark:\n          type: string\n          description: the mark for the ICT tool. If not provided, it is 'X'\n        content:\n          description: minimal required information, comma separated\n          type: string\n\n    mitigationPossibility:\n      type: array\n      items:\n        type: object\n        properties:\n          buildingBlock: \n            $ref: \"#/components/schemas/buildingBlockReference\"\n          isRequired:\n            type: boolean\n            description: is this mitigation possibility a requirement (true) or is it a possiblity (false). When this property is omitted and it is in a list of options, it means that at least one of these mitigation actions has to be taken.\n\n    conflict:\n      type: object\n      description: a conflict can be assigned to any building block, it has to indicate problems. It contains also mitigation possibilities.\n      properties:\n        name:\n          type: string\n          description: a human-readable name, replace spaces by dashes.\n        reason:\n          description: an explanation\n          type: string\n        breach:\n          $ref: \"#/components/schemas/buildingBlockReference\"\n        notApplicableWhenInCombinationWith:\n          description: sometimes conflicts can be removed when other building blocks are used as well. The items refer to other build block's names\n          type: array\n          items:\n            $ref: \"#/components/schemas/buildingBlockReference\"\n        agreements:\n          description: mitigation possibilities using agreements\n          type: array\n          items:\n            $ref: \"#/components/schemas/mitigationPossibility\"\n        certificates:\n          description: mitigation possibilities using certificates\n          type: array\n          items:\n            $ref: \"#/components/schemas/mitigationPossibility\"\n        authenticationMethods:\n          description: mitigation possibilities using authentication methods\n          type: array\n          items:\n            $ref: \"#/components/schemas/mitigationPossibility\"\n        transportConditions:\n          description: mitigation possibilities using secure transport\n          type: array\n          items:\n            $ref: \"#/components/schemas/mitigationPossibility\"\n        processingConditions:\n          description: mitigation possibilities during processing\n          type: array\n          items:\n            $ref: \"#/components/schemas/mitigationPossibility\"\n            \n    breach:\n      allOf:\n      - $ref: \"#/components/schemas/buildingBlock\"\n      - type: object\n        properties:\n          type:\n            type: string\n            default: breach\n          name:\n            type: string\n          externalReference:\n            type: string\n      \n    agreement:\n      description: a (templated) agreement.\n      allOf:\n      - $ref: \"#/components/schemas/buildingBlock\"\n      - type: object\n        properties:\n          type:\n            type: string\n            default: agreement\n          externalReference:\n            type: string\n            format: URL\n          parameters:\n            type: array\n            items:\n              $ref: \"#/components/schemas/agreementParameters\"\n\n    agreementParameters:\n      type: object\n      description: agreementParameters in the template. This must be a named parameter, including a description between square brackets and where it is placed. The order indicates the order in the template, starting with 1.\n      example: { \"Company\": \"[Company name]\", \"section\": \"General\", \"order\": [1] }\n      additionalProperties: true\n      properties:\n        section:\n          type: string\n        order: \n          type: array\n          items:\n            type: number\n\n    buildingBlock:\n      required:\n        - type\n        - name\n        - bbversion\n      properties:\n        type:\n          type: string\n        name:\n          type: string\n        bbversion:\n          type: integer\n          description: the version number of the building block\n          default: 1\n        description:\n          type: string\n        conflicts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/buildingBlockReference\"\n        conflictsWhenNotMet:\n          type: array\n          items:\n            $ref: \"#/components/schemas/buildingBlockReference\"\n\n    aggregation:\n      type: object\n      allOf:\n      - $ref: \"#/components/schemas/buildingBlock\"\n      - type: object\n        properties:\n          type:\n            type: string\n            default: \"aggregation\"\n          aggregationOperator:\n            type: string\n            enum: [AVG, COUNT, MAX, MIN, MED, SUM, 75PERCENTILE, 80PERCENTILE, 85PERCENTILE, 90PERCENTILE, 95PERCENTILE, 99PERCENTILE]\n          timeUnit:\n            type: string\n            enum: [minute, quarter_of_hour, hour, daypart, day, week, month, year]\n          timeAmount:\n            type: number\n          geoUnit: \n            type: string\n            enum: [postal, postal1_4, district, city, region, custom]\n          geoUnitCustomSpecification:\n            type: string\n            format: URL\n\n    authenticationCondition:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/buildingBlock\"\n        - type: object\n          properties:\n            type:\n              type: string\n              default: \"authenticationCondition\"\n            allowedExchangeTypes:\n              description: this authentication method is allowed on these exchange types.\n              type: array\n              items:\n                $ref: \"#/components/schemas/buildingBlockReference\"\n\n    certificateCondition:\n      type: object\n      allOf:\n      - $ref: \"#/components/schemas/buildingBlock\"\n      - type: object\n        required: \n        - requiredCertificate\n        properties:\n          type:\n            type: string\n            default: \"certificateCondition\"\n          requiredCertificate:\n            type: string\n          issuer:\n            type: string\n\n    processingCondition:\n      type: object\n      description: processing conditions can contain additional properties. The value of these properties must be enclosed by square brackets.\n      additionalProperties: true\n      allOf:\n      - $ref: \"#/components/schemas/buildingBlock\"\n      - type: object\n        properties:\n          type:\n            type: string\n            default: \"processingCondition\"\n          requiredCertificate:\n            type: string\n          issuer:\n            type: string\n\n    termsAndCondition:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/buildingBlock\"\n        - type: object\n          properties:\n            type:\n              type: string\n              default: \"termsAndCondition\"\n            externalReference:\n              type: string\n              format: URL\n\n    archiveCondition:\n      type: object\n      description: specifies when the data has to be removed from the processor\n      allOf:\n      - $ref: \"#/components/schemas/buildingBlock\" \n      - type: object\n        properties:\n          type:\n            type: string\n            default: \"archiveCondition\"\n          unit:\n            type: string\n            enum: [hours, days, weeks, months, years]\n          value:\n            type: number\n          returnToSender:\n            description: must the data be returned to the source before deleting\n            type: boolean\n\n    transportCondition:\n      type: object\n      allOf:\n      - $ref: \"#/components/schemas/buildingBlock\"\n      - type: object\n        properties:\n          type:\n            type: string\n            default: \"transportCondition\"\n          version:\n            type: string\n          encryption:\n            type: string\n        \n    standard:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/buildingBlock\"\n        - type: object\n          properties:\n            type:\n              type: string\n              default: \"standard\"\n            part:\n              description: optional part where the endpoint is located\n              type: string\n            version:\n              type: string\n            externalReference:\n              description: a URL where the description of this endpoint is located\n              type: string\n            exchangeType:\n              type: string\n              enum: [API, SOAP, file-based]\n              \n            url:\n              type: string\n              format: URL\n              \n            authentications:\n              type: array\n              items:\n                $ref: \"#/components/schemas/buildingBlockReference\"\n                \n            explanation:\n              type: string\n              description: optional explanation for the standard\n\n            privacy:\n              type: string\n              enum: [A,B,C,D,E]\n            implementationEffort:\n              type: string\n              enum: [A,B,C,D,E]\n            reusability:\n              type: string\n              enum: [A,B,C,D,E]\n            interoperability:\n              type: string\n              enum: [A,B,C,D,E]\n            domain:\n              type: string\n              enum: [A,B,C,D,E]\n\n            fieldModifications: \n              type: array\n              items:\n                $ref: \"#/components/schemas/fieldModification\"\n    \n    file:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/standard\"\n        - type: object\n          properties:\n            type:\n              type: string\n              default: \"file\"\n            exchangeType:\n              type: string\n              default: \"file-based\"\n            mediumType: \n              type: string\n              enum: [json-file, xml-file, comma-delimited-csv-file, semicolon-delimited-csv-file, pipe-delimited-csv-file, shapefile]\n              \n            schema:\n              type: string\n              description: reference to XSD, JSON scheme or just a comma separated list of field names\n              \n            refreshRate:\n              type: number\n              description: the number of minutes between 2 refreshes. When it is a real-time connection or API, this should be considered as 0 (always up-to-date). When it's obsolete, it is not specified.\n            \n            aggregationLevel:\n              $ref: \"#/components/schemas/aggregation\"\n  \n    fieldModification:\n      type: object\n      properties:\n        field: \n          type: string\n        exception: \n          type: string\n          enum: [non-rotating, removed, exposed]\n    \n    story:\n      type: object\n      properties:\n        asA: \n          type: string\n        iWouldLikeTo: \n          type: string\n        inOrderTo: \n          type: string\n\n    prosAndCons:\n      type: array\n      items: \n        type: object\n        properties:\n          to: \n            type: string\n          items:\n            type: array\n            items: \n              type: string\n\n    error:\n      type: object\n\n  parameters:\n    useCaseId:\n      in: path\n      name: useCaseId\n      required: true\n      schema:\n        type: string\n      description: The ID of the use case\n      example: 1324A-DFB3482-32ACD\n    name:\n      in: path\n      name: name\n      required: true\n      schema:\n        type: string\n      description: a referencing name\n      example: basic-enhanced\n\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    BearerAuth:\n      type: http\n      scheme: bearer\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-Key\n    OAuth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth/authorize\n          tokenUrl: /oauth/token\n          scopes: {}\n    OpenId:\n      type: openIdConnect\n      openIdConnectUrl: https://unknownserver/.well-known/openid-configuration\n\n  responses:\n    204NoContent:\n      description: Request was successful, no content to return.\n    400BadRequest:\n      description: Bad request. \n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/error\"\n    401Unauthorized:\n      description: Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/error\"\n    403Forbidden:\n      description: The client does not have access rights to the content, i.e. they are unauthorized, so server is rejecting to give proper response. Unlike 401, the client's identity is known to the server.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/error\"\n    404NotFound:\n      description: The requested resources does not exist or the requester is not authorized to see it or know it exists.\n    409Conflict:\n      description: The request will not be fulfilled. The request itself is legal, but the content conflicts with the server and might be stale. The user might try again after looking up the current state of the resource.\n\n    410Gone:\n      description: The requested resource is no longer available. This is permanent.\n",
			"canonicalURL": "/github.com/CDSM-WG/CDS-M@8385cc50608b8dec4cf0ee0f2fab8d4b0afc6b84/-/blob/openapi/cds-m.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CDSM-WG/CDS-M/blob/8385cc50608b8dec4cf0ee0f2fab8d4b0afc6b84/openapi/cds-m.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/standards/\": get: responses: code 200: contents: application/json: generate schema: item: oneOf: collect variants: oneOf[1]: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"oauth2 security"
	]
}