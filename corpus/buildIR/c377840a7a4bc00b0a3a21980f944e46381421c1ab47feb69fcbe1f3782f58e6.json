{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rapi-doc/RapiDoc"
		},
		"file": {
			"name": "oneof-allof-nested.yaml",
			"size": 0,
			"path": "docs/specs/oneof-allof-nested.yaml",
			"byteSize": 2172,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: \"API example\"\n  description: \"Contains all-of inside one-of\"\npaths:\n  /registration/domains:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/domain_order_data'\n                - $ref: '#/components/schemas/domain_order_data_org'\n              discriminator:\n                propertyName: customer_type\n                mapping:\n                  person: '#/components/schemas/domain_order_data'\n                  org: '#/components/schemas/domain_order_data_org'\n      responses:\n        200:\n          $ref: '#/components/responses/customer_reg'\ncomponents:\n  schemas:\n    common_data:\n      type: object\n      required: \n        - customer_type\n      properties:\n        customer_type:\n          type: string\n          enum:\n            - \"person\"\n            - \"org\"\n          description: \"client type\"\n          example: \"person\"\n    common_org_data:\n      type: object\n      required:\n        - org_address\n        - org_name\n      properties:\n        org_address:\n          type: string\n          example: \"bbb\"\n        org_name: \n          type: string\n          example: \"aaa\"\n    domain_order_data:\n      allOf:\n        - type: object\n          required:\n            - domains\n            - phone_number\n          properties:\n            domains:\n              type: array\n              items: \n                type: string\n              example: [\"tesrrrrrrr.com\"]\n            phone_number:\n              type: string\n              example: \"79219523621\"\n        - $ref: '#/components/schemas/common_data'          \n    domain_order_data_org:\n      allOf:\n        - $ref: '#/components/schemas/common_org_data'   \n        - $ref: '#/components/schemas/domain_order_data'   \n  responses:\n    customer_reg:\n      description: \"sample\"\n      content:\n         application/json:\n            schema: \n              type: object\n              properties:\n                password:\n                  type: string\n                  description: \"user password\"\n                  example: \"zOmjt68sej6S\""
		}
	},
	"Error": "buildIR: make ir: path \"/registration/domains\": post: requestBody: contents: application/json: generate schema: oneOf: collect variants: oneOf[1]: allOf: schema type mismatch: object and "
}