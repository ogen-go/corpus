{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/harness/ff-java-server-sdk"
		},
		"file": {
			"name": "client-v1.yaml",
			"size": 0,
			"path": "src/main/resources/client-v1.yaml",
			"byteSize": 18877,
			"content": "openapi: 3.0.0\ninfo:\n  title: Harness feature flag service client apis\n  version: 1.0.0\n  contact:\n    name: Feature Flag - developers\n    url: 'https://www.harness.io'\n    email: cf@harness.io\nservers:\n  - url: /api/1.0\n    description: no host specified\n  - url: 'http://localhost:3000/api/1.0'\n    description: CfClient description\ntags:\n  - name: client\n  - name: metrics\npaths:\n  '/client/env/{environmentUUID}/feature-configs':\n    get:\n      summary: Get all feature flags activations\n      description: All feature flags with activations in project environment\n      operationId: GetFeatureConfig\n      tags:\n        - client\n      parameters:\n        - name: environmentUUID\n          in: path\n          required: true\n          description: Unique identifier for the environment object in the API.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FeatureConfig'\n  '/client/env/{environmentUUID}/feature-configs/{identifier}':\n    get:\n      summary: Get feature config\n      operationId: GetFeatureConfigByIdentifier\n      tags:\n        - client\n      parameters:\n        - name: identifier\n          in: path\n          required: true\n          description: Unique identifier for the flag object in the API.\n          schema:\n            type: string\n        - name: environmentUUID\n          in: path\n          required: true\n          description: Unique identifier for the environment object in the API.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeatureConfig'\n  '/client/env/{environmentUUID}/target-segments':\n    get:\n      summary: Retrieve all segments.\n      description: Used to retrieve all segments for certain account id.\n      operationId: GetAllSegments\n      tags:\n        - client\n      parameters:\n        - name: environmentUUID\n          in: path\n          required: true\n          description: Unique identifier for the environment object in the API.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Segment'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/client/env/{environmentUUID}/target-segments/{identifier}':\n    get:\n      summary: Retrieve a segment by identifier\n      description: Used to retrieve a segment for a certain account id by identifier\n      operationId: GetSegmentByIdentifier\n      tags:\n        - client\n      parameters:\n        - name: identifier\n          in: path\n          required: true\n          description: Unique identifier for the segment object in the API\n          schema:\n            type: string\n        - name: environmentUUID\n          in: path\n          required: true\n          description: Unique identifier for the environment object in the API\n          schema:\n            type: string\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Segment'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /client/auth:\n    post:\n      summary: Authenticate with the admin server.\n      description: Used to retrieve all target segments for certain account id.\n      operationId: Authenticate\n      tags:\n        - client\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticationRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticationResponse'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/client/env/{environmentUUID}/target/{target}/evaluations':\n    get:\n      summary: Get feature evaluations for target\n      operationId: GetEvaluations\n      tags:\n        - client\n      parameters:\n        - name: environmentUUID\n          in: path\n          required: true\n          description: Unique identifier for the environment object in the API.\n          schema:\n            type: string\n        - name: target\n          in: path\n          required: true\n          description: Unique identifier for the target object in the API.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/Pagination'\n                  - $ref: '#/components/schemas/Evaluations'\n  '/client/env/{environmentUUID}/target/{target}/evaluations/{feature}':\n    get:\n      summary: Get feature evaluations for target\n      operationId: GetEvaluationByIdentifier\n      tags:\n        - client\n      parameters:\n        - name: environmentUUID\n          in: path\n          required: true\n          description: Unique identifier for the environment object in the API.\n          schema:\n            type: string\n        - name: feature\n          in: path\n          required: true\n          description: Unique identifier for the flag object in the API.\n          schema:\n            type: string\n        - name: target\n          in: path\n          required: true\n          description: Unique identifier for the target object in the API.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Evaluation'\n  '/metrics/{environment}':\n    post:\n      tags:\n        - metrics\n      summary: Send metrics to the Analytics server.\n      description: Send metrics to Analytics server\n      operationId: postMetrics\n      parameters:\n        - $ref: '#/components/parameters/environmentPathParam'\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metrics'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /stream:\n    get:\n      summary: Stream endpoint.\n      operationId: Stream\n      tags:\n        - client\n      parameters:\n        - in: header\n          name: API-Key\n          schema:\n            type: string\n          required: true\n        - $ref: '#/components/parameters/clusterQueryOptionalParam'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Type:\n              schema:\n                type: string\n                default: text/event-stream\n            Cache-Control:\n              schema:\n                type: string\n                default: no-cache\n            Connection:\n              schema:\n                type: string\n                default: keep-alive\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n                default: '*'\n        '503':\n          description: Service Unavailable\ncomponents:\n  schemas:\n    FeatureState:\n      type: string\n      enum:\n        - 'on'\n        - 'off'\n    Variation:\n      type: object\n      properties:\n        identifier:\n          type: string\n        value:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - identifier\n        - value\n    Clause:\n      type: object\n      properties:\n        id:\n          type: string\n        attribute:\n          type: string\n        op:\n          type: string\n        values:\n          type: array\n          items:\n            type: string\n        negate:\n          type: boolean\n      required:\n        - id\n        - attribute\n        - op\n        - negate\n        - values\n    WeightedVariation:\n      type: object\n      properties:\n        variation:\n          type: string\n        weight:\n          type: integer\n      required:\n        - variation\n        - weight\n    Distribution:\n      type: object\n      properties:\n        bucketBy:\n          type: string\n        variations:\n          type: array\n          items:\n            $ref: '#/components/schemas/WeightedVariation'\n      required:\n        - bucketBy\n        - variations\n    Serve:\n      type: object\n      properties:\n        distribution:\n          $ref: '#/components/schemas/Distribution'\n        variation:\n          type: string\n    ServingRule:\n      type: object\n      properties:\n        ruleId:\n          type: string\n        priority:\n          type: integer\n        clauses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Clause'\n        serve:\n          $ref: '#/components/schemas/Serve'\n      required:\n        - priority\n        - clauses\n        - serve\n        - ruleId\n    Prerequisite:\n      type: object\n      properties:\n        feature:\n          type: string\n        variations:\n          type: array\n          items:\n            type: string\n      required:\n        - feature\n        - variations\n    TargetMap:\n      type: object\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n      required:\n        - idenfifier\n        - name\n    VariationMap:\n      type: object\n      properties:\n        variation:\n          type: string\n        targets:\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetMap'\n        targetSegments:\n          type: array\n          items:\n            type: string\n      required:\n        - variation\n    FeatureConfig:\n      type: object\n      properties:\n        project:\n          type: string\n        environment:\n          type: string\n        feature:\n          type: string\n        state:\n          $ref: '#/components/schemas/FeatureState'\n        kind:\n          type: string\n          enum:\n            - boolean\n            - int\n            - string\n            - json\n        variations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Variation'\n          minItems: 2\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServingRule'\n        defaultServe:\n          $ref: '#/components/schemas/Serve'\n        offVariation:\n          type: string\n        prerequisites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prerequisite'\n        variationToTargetMap:\n          type: array\n          items:\n            $ref: '#/components/schemas/VariationMap'\n        version:\n          type: integer\n          format: int64\n      required:\n        - project\n        - environment\n        - feature\n        - state\n        - kind\n        - variations\n        - defaultTarget\n        - offVariation\n        - defaultServe\n    Tag:\n      type: object\n      description: A name and value pair.\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      required:\n        - name\n    Segment:\n      type: object\n      properties:\n        identifier:\n          type: string\n          description: Unique identifier for the segment.\n        name:\n          type: string\n          description: Name of the segment.\n          example: Beta Testers\n        environment:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Target'\n        excluded:\n          type: array\n          items:\n            $ref: '#/components/schemas/Target'\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/Clause'\n          description: \u003e-\n            An array of rules that can cause a user to be included in this\n            segment.\n        createdAt:\n          type: integer\n          format: int64\n        modifiedAt:\n          type: integer\n          format: int64\n        version:\n          type: integer\n          format: int64\n      required:\n        - identifier\n        - name\n    Target:\n      type: object\n      properties:\n        identifier:\n          type: string\n        account:\n          type: string\n        org:\n          type: string\n        environment:\n          type: string\n        project:\n          type: string\n        name:\n          type: string\n        anonymous:\n          type: boolean\n        attributes:\n          type: object\n        createdAt:\n          type: integer\n          format: int64\n        segments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Segment'\n      required:\n        - identifier\n        - name\n        - environment\n        - project\n        - account\n        - org\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n    AuthenticationRequest:\n      type: object\n      properties:\n        apiKey:\n          type: string\n          example: 896045f3-42ee-4e73-9154-086644768b96\n        target:\n          type: object\n          properties:\n            identifier:\n              type: string\n            name:\n              type: string\n            anonymous:\n              type: boolean\n            attributes:\n              type: object\n          required:\n            - identifier\n      required:\n        - apiKey\n    AuthenticationResponse:\n      type: object\n      properties:\n        authToken:\n          type: string\n      required:\n        - authToken\n    Pagination:\n      type: object\n      properties:\n        version:\n          type: integer\n        pageCount:\n          type: integer\n        itemCount:\n          type: integer\n          example: 1\n        pageSize:\n          type: integer\n          example: 1\n        pageIndex:\n          type: integer\n          example: 0\n      required:\n        - pageCount\n        - itemCount\n        - pageSize\n        - pageIndex\n    Evaluation:\n      type: object\n      properties:\n        flag:\n          type: string\n        value:\n          type: string\n        kind:\n          type: string\n        identifier:\n          type: string\n      required:\n        - flag\n        - value\n        - kind\n    Evaluations:\n      type: array\n      items:\n        $ref: '#/components/schemas/Evaluation'\n    KeyValue:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      required:\n        - key\n        - value\n    TargetData:\n      type: object\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValue'\n      required:\n        - name\n        - identifier\n        - attributes\n    MetricsData:\n      type: object\n      properties:\n        timestamp:\n          type: integer\n          format: int64\n          example: 1608175465\n          description: time at when this data was recorded\n        count:\n          type: integer\n        metricsType:\n          type: string\n          enum:\n            - FFMETRICS\n          description: This can be of type FeatureMetrics\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValue'\n      required:\n        - attributes\n        - count\n        - timestamp\n        - metricsType\n    Metrics:\n      type: object\n      properties:\n        targetData:\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetData'\n        metricsData:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetricsData'\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    clusterQueryOptionalParam:\n      name: cluster\n      in: query\n      required: false\n      description: Unique identifier for the cluster for the account\n      schema:\n        type: string\n    environmentPathParam:\n      name: environment\n      in: path\n      required: true\n      description: environment parameter in query.\n      schema:\n        type: string\n  responses:\n    Unauthenticated:\n      description: Unauthenticated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalServerError:\n      description: Internal server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/harness/ff-java-server-sdk@46417b2d928a66fc984880d36d9967a9193af537/-/blob/src/main/resources/client-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/harness/ff-java-server-sdk/blob/46417b2d928a66fc984880d36d9967a9193af537/src/main/resources/client-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/client/env/{environmentUUID}/target/{target}/evaluations\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: schema type mismatch: object and array"
}