{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/theoapp/theo-node"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi-spec/openapi.yaml",
			"byteSize": 30501,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"Theo node - The Authorized Keys Manager. You can find out more about Theo at [https://github.com/theoapp/](https://github.com/theoapp/).\"\n  version: \"0.12.0\"\n  title: \"Theo\"\n  contact:\n    email: \"team@authkeys.io\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\nservers:\n  - url: https://theo.test.authkeys.io\n    description: Public UNTRUSTABLE test theo server\ntags:\n  - name: \"utils\"\n    description: \"Utils methods\"\n  - name: \"account\"\n    description: \"Everything about accounts\"\n  - name: \"keys\"\n    description: \"Everything about accounts' public keys\"\n  - name: \"permissions\"\n    description: \"Everything about permissions\"\n  - name: \"groups\"\n    description: \"Everything about groups\"\npaths:\n  /:\n    get:\n      tags:\n        - \"utils\"\n      summary: \"Get server status\"\n      operationId: getStatus\n      responses:\n        200:\n          description: \"Server status\"\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    type: \"integer\"\n                    format: \"int32\"\n                    example: 200\n  /flushdb:\n    post:\n      tags:\n        - \"utils\"\n      summary: \"Flush all databases and cache. It's enabled ONLY when server runs in TEST mode\"\n      operationId: flushDB\n      responses:\n        204:\n          description: \"Db flushed\"\n        403:\n          description: \"Even if authenticated, the operation is forbidden (server is NOT RUNNING in TEST mode\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n  /tokens:\n    post:\n      tags:\n        - \"utils\"\n      summary: \"Replaces admin and clients tokens.\"\n      operationId: replaceTokens\n      requestBody:\n        description: New tokens\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                admin:\n                  type: \"string\"\n                  example: \"j5jkl34h523hjlbnsdjgjhq45gh23fh\"\n                clients:\n                  type: \"array\"\n                  items:\n                    type: \"string\"\n                    example: \"j5jkl34h523hjlbnsdjgjhq45gh23fh\"\n      responses:\n        204:\n          description: \"Token refreshed\"\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPayloadErrorResponse\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenCore: []\n  /accounts:\n    get:\n      tags:\n        - \"account\"\n      summary: \"Retrieves accounts\"\n      operationId: listAccounts\n      parameters:\n        - name: \"limit\"\n          in: \"query\"\n          description: \"Number of accounts to retrieve\"\n          required: false\n          schema:\n            type: \"integer\"\n            format: \"int32\"\n        - name: \"offset\"\n          in: \"query\"\n          description: \"Offset of the list\"\n          required: false\n          schema:\n            type: \"integer\"\n            format: \"int32\"\n      responses:\n        200:\n          description: \"List of accounts\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountsList\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n    post:\n      tags:\n        - \"account\"\n      summary: \"Create new account\"\n      operationId: addAccount\n      security:\n        - bearerTokenAdmin: []\n      requestBody:\n        description: Account to add\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountNew'\n      responses:\n        200:\n          description: Account response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPayloadErrorResponse'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /accounts/search:\n    get:\n      tags:\n        - \"account\"\n      summary: \"Search accounts\"\n      operationId: searchAccount\n      parameters:\n        - name: \"limit\"\n          in: \"query\"\n          description: \"Number of accounts to retrieve\"\n          required: false\n          schema:\n            type: \"integer\"\n            format: \"int32\"\n        - name: \"offset\"\n          in: \"query\"\n          description: \"Offset of the list\"\n          required: false\n          schema:\n            type: \"integer\"\n            format: \"int32\"\n        - name: \"name\"\n          in: \"query\"\n          description: \"Search by name\"\n          required: false\n          schema:\n            type: \"string\"\n            example: \"mac\"\n        - name: \"email\"\n          in: \"query\"\n          description: \"Search by email\"\n          required: false\n          schema:\n            type: \"string\"\n            example: \"@authkeys.io\"\n      responses:\n        200:\n          description: \"List of accounts\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountsList\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n  /accounts/{id}:\n    get:\n      tags:\n        - \"account\"\n      summary: \"Get account\"\n      operationId: getAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        200:\n          description: \"Account\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n        404:\n          description: \"Account not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n    put:\n      tags:\n        - \"account\"\n      summary: \"Edit account\"\n      operationId: editAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      requestBody:\n        description: \"Fields to edit\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountEdit'\n      responses:\n        201:\n          description: \"Done\"\n        404:\n          description: \"Account not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n    delete:\n      tags:\n        - \"account\"\n      summary: \"Delete account\"\n      operationId: deleteAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        201:\n          description: \"Done\"\n        404:\n          description: \"Account not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /accounts/{id}/keys:\n    post:\n      tags:\n        - \"account\"\n        - \"keys\"\n      summary: \"Add keys to account\"\n      operationId: addKeysToAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      requestBody:\n        description: \"New key(s) to add\"\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                keys:\n                  type: \"array\"\n                  items:\n                    oneOf:\n                      - type: \"string\"\n                        example: \"ssh-rsa AAA[...]xv macno@laptop\"\n                      - $ref: \"#/components/schemas/PublicKeyNew\"\n      responses:\n        200:\n          description: Account response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPayloadErrorResponse'\n        404:\n          description: \"Account not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /accounts/{id}/keys/{key_id}:\n    delete:\n      tags:\n        - \"account\"\n        - \"keys\"\n      summary: \"Delete public key from account\"\n      operationId: deleteKeyFromAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"key_id\"\n          in: \"path\"\n          description: \"Public Key ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        201:\n          description: \"Done\"\n        404:\n          description: \"Account/Key not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /accounts/{id}/keys/import/{service}:\n    post:\n      tags:\n        - \"account\"\n        - \"keys\"\n      summary: \"Add public keys to account loading them from external service\"\n      operationId: addKeysFromServiceToAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"service\"\n          in: \"path\"\n          description: \"Service to fetch the keys from\"\n          required: true\n          schema:\n            type: \"string\"\n            example: \"github\"\n      requestBody:\n        description: \"Username to fetch\"\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                username:\n                  type: \"string\"\n                  example: \"macno\"\n      responses:\n        200:\n          description: Account response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPayloadErrorResponse'\n        404:\n          description: \"Account not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /accounts/{id}/permissions:\n    post:\n      tags:\n        - \"account\"\n        - \"permissions\"\n      summary: \"Add permissions to account\"\n      operationId: addPermissionsToAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      requestBody:\n        description: \"New permission to add\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PermissionNew'\n      responses:\n        200:\n          description: Account response\n          content:\n            application/json:\n              schema:\n                properties:\n                  account_id:\n                    type: \"integer\"\n                    format: \"int64\"\n                    example: 324\n                  permission_id:\n                    type: \"integer\"\n                    format: \"int64\"\n                    example: 435\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPayloadErrorResponse'\n        404:\n          description: \"Account not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /accounts/{id}/permissions/{permission_id}:\n    delete:\n      tags:\n        - \"account\"\n        - \"permissions\"\n      summary: \"Delete permission from account\"\n      operationId: deletePermissionFromAccount\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Account ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"permission_id\"\n          in: \"path\"\n          description: \"Permission ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        201:\n          description: \"Done\"\n        404:\n          description: \"Account/Permission not found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundErrorResponse'\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /groups:\n    get:\n      tags:\n        - \"groups\"\n      summary: \"Retrieves groups\"\n      operationId: listGroups\n      parameters:\n        - name: \"limit\"\n          in: \"query\"\n          description: \"Number of groups to retrieve\"\n          required: false\n          schema:\n            type: \"integer\"\n            format: \"int32\"\n        - name: \"offset\"\n          in: \"query\"\n          description: \"Offset of the list\"\n          required: false\n          schema:\n            type: \"integer\"\n            format: \"int32\"\n      responses:\n        200:\n          description: \"List of groups\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupsList\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n    post:\n      tags:\n        - \"groups\"\n      summary: \"Create new group\"\n      operationId: addGroup\n      requestBody:\n        description: \"Group's name to create\"\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - \"name\"\n              properties:\n                name:\n                  type: \"string\"\n                  example: \"Developers\"\n      responses:\n        200:\n          description: \"Group\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n  /groups/{id}:\n    get:\n      tags:\n        - \"groups\"\n      summary: \"Retrieve a group\"\n      operationId: getGroup\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Group ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n          example: 765\n      responses:\n        200:\n          description: \"Group\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n    post:\n      tags:\n        - \"groups\"\n      summary: \"DEPRECATED: Use /groups/{id}/account(s). Add account(s) to a group\"\n      operationId: deprecatedAddAccountsToGroup\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Group ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n          example: 765\n      requestBody:\n        description: \"Account(s) to add to the group\"\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/AccountId\"\n                - $ref: \"#/components/schemas/AccountIds\"\n      responses:\n        200:\n          description: \"Group\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPayloadErrorResponse\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n  /groups/{id}/account:\n    post:\n      tags:\n        - \"groups\"\n      summary: \"Add account to a group\"\n      operationId: addAccountToGroup\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Group ID\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/Id'\n      requestBody:\n        description: \"Account to add to the group\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountId\"\n      responses:\n        204:\n          description: \"Account added to a group\"\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPayloadErrorResponse\"\n        404:\n          description: \"Entity not found (group or account)\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundErrorResponse\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\n  /groups/{id}/accounts:\n    post:\n      tags:\n        - \"groups\"\n      summary: \"Add accounts to a group\"\n      operationId: addAccountsToGroup\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"Group ID\"\n          required: true\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n          example: 765\n      requestBody:\n        description: \"Accounts to add to a group\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountIds\"\n      responses:\n        200:\n          description: \"List of results\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: \"object\"\n                  required:\n                    - \"status\"\n                    - \"account\"\n                  properties:\n                    status:\n                      type: \"integer\"\n                      format: \"int32\"\n                      example: 400\n                    account:\n                      oneOf:\n                        - $ref: '#/components/schemas/Id'\n                        - type: \"string\"\n                          example: \"macno@authkeys.io\"\n                    reason:\n                      nullable: true\n                      type: \"string\"\n                      example: \"Account not found\"\n        400:\n          description: \"Invalid payload\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPayloadErrorResponse\"\n        404:\n          description: \"Group not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundErrorResponse\"\n        default:\n          description: \"Error\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n        - bearerTokenAdmin: []\ncomponents:\n  securitySchemes:\n    bearerTokenCore:\n      type: http\n      scheme: bearer\n    bearerTokenAdmin:\n      type: http\n      scheme: bearer\n    bearerTokenClient:\n      type: http\n      scheme: bearer\n  schemas:\n    BasicList:\n      type: \"object\"\n      required:\n        - \"total\"\n        - \"limit\"\n        - \"offset\"\n        - \"rows\"\n      properties:\n        total:\n          type: \"integer\"\n          format: \"int32\"\n        limit:\n          type: \"integer\"\n          format: \"int32\"\n        offset:\n          type: \"integer\"\n          format: \"int32\"\n        rows:\n          type: \"array\"\n          items:\n            type: \"string\"\n    AccountId:\n      type: \"object\"\n      required:\n        - \"id\"\n      properties:\n        id:\n          $ref: '#/components/schemas/Id'\n    AccountIds:\n      type: \"object\"\n      required:\n        - \"ids\"\n      properties:\n        ids:\n          $ref: '#/components/schemas/Ids'\n    AccountNew:\n      type: \"object\"\n      required:\n        - \"name\"\n        - \"email\"\n      properties:\n        name:\n          type: \"string\"\n          example: \"Michele\"\n        email:\n          type: \"string\"\n          example: \"macno@authkeys.io\"\n        expire_at:\n          $ref: '#/components/schemas/ExpireAt'\n        keys:\n          type: \"array\"\n          items:\n            oneOf:\n              - type: \"string\"\n                example: \"ssh-rsa AAA[...]xv macno@laptop\"\n              - $ref: \"#/components/schemas/PublicKeyNew\"\n    AccountEdit:\n      type: \"object\"\n      properties:\n        expire_at:\n          type: \"integer\"\n          format: \"int64\"\n          nullable: true\n        active:\n          $ref: \"#/components/schemas/Active\"\n    AccountMinimal:\n      type: \"object\"\n      required:\n        - \"id\"\n        - \"name\"\n        - \"email\"\n        - \"active\"\n        - \"expire_at\"\n        - \"created_at\"\n      properties:\n        id:\n          $ref: '#/components/schemas/Id'\n        name:\n          type: \"string\"\n          example: \"Michele\"\n        email:\n          type: \"string\"\n          example: \"macno@authkeys.io\"\n        active:\n          $ref: \"#/components/schemas/Active\"\n        expire_at:\n          $ref: \"#/components/schemas/ExpireAt\"\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n    Account:\n      allOf:\n        - $ref: '#/components/schemas/AccountMinimal'\n        - type: \"object\"\n          required:\n            - \"expire_at\"\n            - \"public_keys\"\n            - \"groups\"\n            - \"permissions\"\n          properties:\n            expire_at:\n              $ref: '#/components/schemas/ExpireAt'\n            public_keys:\n              type: \"array\"\n              items:\n                $ref: '#/components/schemas/PublicKey'\n            groups:\n              type: \"array\"\n              items:\n                $ref: '#/components/schemas/GroupMinimal'\n            permissions:\n              items:\n                $ref: '#/components/schemas/Permission'\n    AccountsList:\n      allOf:\n        - $ref: '#/components/schemas/BasicList'\n        - type: \"object\"\n          properties:\n            rows:\n              type: \"array\"\n              items:\n                $ref: \"#/components/schemas/AccountMinimal\"\n    GroupMinimal:\n      type: \"object\"\n      required:\n        - \"id\"\n        - \"name\"\n        - \"active\"\n        - \"created_at\"\n      properties:\n        id:\n          $ref: '#/components/schemas/Id'\n        name:\n          type: \"string\"\n          example: \"Developers\"\n        active:\n          $ref: '#/components/schemas/Active'\n        created_at:\n          $ref: '#/components/schemas/CreatedAt'\n    Group:\n      allOf:\n        - $ref: '#/components/schemas/GroupMinimal'\n        - type: \"object\"\n          required:\n            - \"accounts\"\n            - \"permissions\"\n          properties:\n            accounts:\n              type: \"array\"\n              items:\n                $ref: '#/components/schemas/AccountMinimal'\n            permissions:\n              type: \"array\"\n              items:\n                $ref: '#/components/schemas/Permission'\n    GroupsList:\n      allOf:\n        - $ref: '#/components/schemas/BasicList'\n        - type: \"object\"\n          properties:\n            rows:\n              type: \"array\"\n              items:\n                $ref: \"#/components/schemas/GroupMinimal\"\n    PublicKeyNew:\n      type: \"object\"\n      required:\n        - \"key\"\n      properties:\n        key:\n          type: \"string\"\n          example: \"ssh-rsa AAA[...]xv macno@laptop\"\n        signature:\n          type: \"string\"\n          example: \"XgRI6y3[...]S0ZFHN\"\n          nullable: true\n    PublicKey:\n      type: \"object\"\n      required:\n        - \"id\"\n        - \"public_key\"\n        - \"public_key_sig\"\n        - \"created_at\"\n      properties:\n        id:\n          $ref: '#/components/schemas/Id'\n        public_key:\n          type: \"string\"\n          example: \"ssh-rsa AAA[...]xv macno@laptop\"\n        public_key_sig:\n          type: \"string\"\n          example: \"XgRI6y3[...]S0ZFHN\"\n          nullable: true\n        created_at:\n          $ref: '#/components/schemas/CreatedAt'\n    Active:\n      type: \"integer\"\n      format: \"int32\"\n      example: 1\n      minimum: 0\n      maximum: 1\n    AccountResponse:\n      type: \"object\"\n      required:\n        - \"account_id\"\n        - \"public_keys\"\n      properties:\n        account_id:\n          $ref: '#/components/schemas/Id'\n        public_keys:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/PublicKey\"\n    PermissionNew:\n      type: \"object\"\n      required:\n        - \"user\"\n        - \"host\"\n      properties:\n        user:\n          type: \"string\"\n          example: \"root\"\n        host:\n          type: \"string\"\n          example: \"server1\"\n    Permission:\n      allOf:\n        - $ref: '#/components/schemas/PermissionNew'\n        - type: \"object\"\n          required:\n            - \"id\"\n            - \"created_at\"\n          properties:\n            id:\n              $ref: '#/components/schemas/Id'\n            created_at:\n              $ref: '#/components/schemas/CreatedAt'\n    Id:\n      oneOf:\n        - type: \"integer\"\n          format: \"int64\"\n          example: 251\n        - type: \"string\"\n          example: \"unique email/code\"\n    Ids:\n      type: \"array\"\n      items:\n        $ref: '#/components/schemas/Id'\n    ExpireAt:\n      type: \"integer\"\n      format: \"int64\"\n      example: 0\n    CreatedAt:\n      type: \"integer\"\n      format: \"int64\"\n      example: 1539688358693\n    ErrorResponse:\n      type: \"object\"\n      required:\n        - \"status\"\n        - \"reason\"\n      properties:\n        status:\n          type: \"integer\"\n          format: \"int32\"\n          example: 500\n        reason:\n          type: \"string\"\n          example: \"Internal Server Error\"\n    NotFoundErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n        - type: \"object\"\n          properties:\n            status:\n              example: 404\n            reason:\n              example: \"Item not found\"\n    InvalidPayloadErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n        - type: \"object\"\n          properties:\n            status:\n              example: 400\n            reason:\n              example: \"Invalid payload\"\n    ForbiddenErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n        - type: \"object\"\n          properties:\n            status:\n              example: 403\n            reason:\n              example: \"Operation is forbidden\"\nexternalDocs:\n  description: \"Find out more about Theo\"\n  url: \"https://github.com/theoapp/\"\n",
			"canonicalURL": "/github.com/theoapp/theo-node@bc3e45c1b260ceba2b473c37302619a8a4d3e898/-/blob/api/openapi-spec/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/theoapp/theo-node/blob/bc3e45c1b260ceba2b473c37302619a8a4d3e898/api/openapi-spec/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/accounts\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: merge properties: try to merge conflicting property schemas: merge item schema: schema type mismatch: object and string"
}